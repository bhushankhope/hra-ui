var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ContactMessage.html",[0,1.215,1,1.215]],["body/interfaces/ContactMessage.html",[0,1.522,1,1.687,2,1.683,3,0.578,4,0.578,5,0.578,6,1.298,7,0.704,8,1.934,9,1.274,10,3.18,11,3.18,12,2.559,13,0.376,14,1.556,15,2.058,16,0.837,17,0.074,18,2.871,19,2.31,20,2.871,21,2.871,22,0.861,23,0.435,24,0.47,25,1.253,26,0.704,27,0.861,28,1.86,29,0.861,30,0.855,31,1.049,32,1.044,33,1.298,34,1.044,35,1.298,36,0.704,37,1.044,38,0.041,39,0.041]],["title/injectables/ContactService.html",[23,0.415,31,1]],["body/injectables/ContactService.html",[0,1.337,1,1.937,3,0.617,4,0.617,5,0.617,6,1.386,7,0.752,8,1.386,9,0.913,10,2.643,11,2.643,12,2.264,13,0.401,15,1.582,16,0.502,17,0.075,18,2.401,19,1.932,20,2.401,21,2.401,22,0.904,23,0.457,24,0.502,25,1.526,26,0.752,27,0.904,28,2.366,29,1.069,30,1.337,31,1.434,32,1.633,33,2.029,34,1.633,35,2.029,36,1.302,37,1.633,38,0.043,39,0.043,40,0.752,41,1.337,42,2.029,43,0.913,44,1.797,45,1.386,46,1.386,47,1.386]],["title/modules/HraServiceModule.html",[48,1.844,49,1.484]],["body/modules/HraServiceModule.html",[3,0.813,4,0.813,5,0.813,17,0.076,22,1.389,24,0.662,27,0.813,29,0.813,31,1.337,38,0.052,39,0.052,49,1.983,50,1.47,51,2.368,52,3.196,53,1.983,54,2.368,55,2.368,56,1.983,57,1.337,58,1.337,59,2.368,60,1.624,61,1.826,62,2.368,63,2.368,64,2.368,65,2.368,66,1.826,67,3.196,68,3.196]],["title/injectables/MockContactService.html",[23,0.415,53,1.484]],["body/injectables/MockContactService.html",[1,1.975,3,0.653,4,0.653,5,0.653,7,0.795,12,1.996,13,0.425,16,0.899,17,0.074,19,1.702,22,1.105,23,0.476,24,0.531,25,1.345,26,0.795,27,0.653,29,1.282,31,1.626,34,1.702,36,0.795,37,1.702,38,0.045,39,0.045,40,0.795,41,1.393,42,2.115,43,0.966,45,1.466,46,1.466,47,1.466,53,1.702,69,1.901,70,2.742,71,1.702,72,2.115,73,2.115,74,1.466,75,1.901,76,2.742,77,2.742,78,2.742,79,2.742,80,2.742,81,1.901,82,1.466,83,0.966,84,1.901,85,1.901,86,1.901,87,1.901,88,1.466]],["title/injectables/MockTissueLibraryService.html",[23,0.415,56,1.484]],["body/injectables/MockTissueLibraryService.html",[3,0.536,4,0.536,5,0.536,7,0.652,13,0.348,16,0.8,17,0.075,22,0.983,23,0.411,24,0.436,25,1.197,26,0.652,27,0.536,29,0.536,36,0.652,38,0.039,39,0.039,40,0.652,41,1.203,43,0.792,56,1.469,57,0.99,58,0.652,60,1.838,61,1.203,71,1.776,72,2.464,73,1.826,74,1.203,82,1.203,83,1.203,88,1.203,89,0.792,90,1.203,91,2.464,92,1.559,93,2.367,94,0.968,95,0.968,96,0.792,97,1.203,98,1.203,99,1.203,100,1.203,101,0.968,102,2.207,103,2.207,104,2.245,105,1.776,106,1.776,107,2.207,108,1.469,109,1.776,110,2.79,111,1.826,112,1.826,113,1.776,114,2.207,115,0.968,116,1.203,117,1.203,118,2.464,119,2.367,120,1.559]],["title/injectables/TissueLibraryService.html",[23,0.415,60,1.215]],["body/injectables/TissueLibraryService.html",[3,0.554,4,0.554,5,0.554,7,0.674,9,1.234,13,0.36,15,0.819,16,0.974,17,0.075,22,1.003,23,0.422,24,0.451,25,1.458,26,0.674,27,1.116,28,2.274,29,1.003,30,1.484,32,1.507,36,1.222,38,0.04,39,0.04,40,0.674,41,1.234,43,0.819,57,0.674,58,1.016,60,1.652,83,1.234,89,1.234,91,2.507,94,1.001,95,2.017,96,0.819,97,1.873,101,1.507,104,1.813,105,1.507,106,1.507,109,1.507,113,1.507,121,1.001,122,1.612,123,1.612,124,1.612,125,1.244,126,1.507,127,1.244,128,1.244,129,1.244,130,1.244,131,1.244,132,1.244,133,1.244,134,2.826,135,1.244,136,1.244,137,1.244,138,1.873,139,1.244,140,1.873,141,1.244,142,1.244,143,1.244]],["title/dependencies.html",[144,1.558,145,1.777]],["body/dependencies.html",[17,0.073,24,0.91,38,0.064,39,0.064,145,2.432,146,3.258,147,3.258,148,3.258,149,3.258,150,3.918]],["title/index.html",[13,0.451,151,2.02,152,2.02]],["body/index.html",[17,0.063,38,0.063,39,0.063,66,2.994,153,3.209,154,3.209,155,3.882,156,3.209,157,3.882,158,3.882,159,3.209,160,3.209,161,3.209]],["title/modules.html",[50,1.997]],["body/modules.html",[17,0.066,38,0.066,39,0.066,49,2.137,50,2.137,162,3.443,163,3.443,164,3.443]],["title/overview.html",[165,2.481]],["body/overview.html",[0,1.643,17,0.064,38,0.064,39,0.064,40,1.352,48,2.494,108,2.421,115,2.007,145,2.421,165,2.494,166,3.9,167,3.233,168,3.233]],["title/properties.html",[14,1.777,144,1.558]],["body/properties.html",[14,2.154,17,0.07,38,0.066,39,0.066,169,3.471,170,3.471]],["title/miscellaneous/typealiases.html",[171,1.027,172,2.863]],["body/miscellaneous/typealiases.html",[13,0.696,16,1.065,17,0.062,38,0.062,39,0.062,57,1.303,58,1.303,89,1.583,95,2.557,96,1.583,121,2.366,125,2.402,126,1.933,127,2.402,171,1.583,173,3.115,174,2.402]],["title/miscellaneous/variables.html",[171,1.027,175,2.209]],["body/miscellaneous/variables.html",[9,1.216,13,0.354,15,0.804,16,0.9,17,0.073,30,0.804,38,0.039,39,0.039,57,0.662,58,1.001,71,0.982,83,1.467,89,1.216,90,1.846,94,1.486,96,0.804,98,1.846,99,1.221,100,1.221,101,1.792,102,2.227,103,2.227,104,2.472,105,2.146,106,2.146,107,2.227,108,1.486,109,2.146,110,2.806,111,1.846,112,1.846,113,2.146,114,2.227,115,0.982,116,1.221,117,1.221,118,2.483,121,1.792,126,0.982,128,1.221,129,1.221,130,1.221,131,1.221,132,1.221,133,1.221,134,2.914,135,1.221,136,1.221,137,1.221,138,1.846,139,1.221,140,1.846,141,1.221,142,1.221,143,1.221,171,0.804,174,2.227,175,1.221,176,2.888,177,2.888]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":170,"title":{},"body":{"properties.html":{}}}],["1",{"_index":108,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["15.1.0",{"_index":150,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":111,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":147,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":112,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":115,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":116,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":117,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["abstract",{"_index":28,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{}}}],["accepted",{"_index":135,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["accepts",{"_index":19,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["aliases",{"_index":173,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular/common",{"_index":149,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{}}}],["argument",{"_index":35,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["available",{"_index":163,"title":{},"body":{"modules.html":{}}}],["browse",{"_index":164,"title":{},"body":{"modules.html":{}}}],["children",{"_index":113,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":29,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["console",{"_index":79,"title":{},"body":{"injectables/MockContactService.html":{}}}],["console.log('message",{"_index":84,"title":{},"body":{"injectables/MockContactService.html":{}}}],["const",{"_index":97,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["contact",{"_index":8,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":81,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contact/contact.mock",{"_index":54,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contact/contact.service",{"_index":55,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contactmessage",{"_index":1,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["contactservice",{"_index":31,"title":{"injectables/ContactService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["contactservice:11",{"_index":75,"title":{},"body":{"injectables/MockContactService.html":{}}}],["content",{"_index":86,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contents",{"_index":78,"title":{},"body":{"injectables/MockContactService.html":{}}}],["currently",{"_index":76,"title":{},"body":{"injectables/MockContactService.html":{}}}],["data",{"_index":96,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":43,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["defines",{"_index":9,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":145,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["email",{"_index":10,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["empty",{"_index":80,"title":{},"body":{"injectables/MockContactService.html":{}}}],["ensures",{"_index":129,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":20,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["execute",{"_index":161,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["extends",{"_index":73,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["generated",{"_index":154,"title":{},"body":{"index.html":{}}}],["getting",{"_index":151,"title":{"index.html":{}},"body":{}}],["gettissues",{"_index":91,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["graph",{"_index":162,"title":{},"body":{"modules.html":{}}}],["hraservicemodule",{"_index":49,"title":{"modules/HraServiceModule.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["http://example.com/node1",{"_index":102,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["http://example.com/node2",{"_index":114,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["http://example.com/node3",{"_index":118,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["http://example.com/root",{"_index":100,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":104,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":72,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infered",{"_index":125,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["inherited",{"_index":74,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["injectable",{"_index":23,"title":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["injectables",{"_index":40,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"overview.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"overview.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ContactMessage.html":{}}}],["iri",{"_index":134,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri.array",{"_index":143,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri.or(z.literal",{"_index":141,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(message",{"_index":87,"title":{},"body":{"injectables/MockContactService.html":{}}}],["label",{"_index":106,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":153,"title":{},"body":{"index.html":{}}}],["library.mock",{"_index":59,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["library.mock.ts",{"_index":90,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["library.service",{"_index":61,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["library.service.ts",{"_index":121,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["library.service.ts:39",{"_index":122,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library/tissue",{"_index":58,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":119,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["logs",{"_index":77,"title":{},"body":{"injectables/MockContactService.html":{}}}],["marked",{"_index":133,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":39,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":12,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["method",{"_index":32,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{}}}],["methods",{"_index":41,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["miscellaneous",{"_index":171,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":71,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data",{"_index":98,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mockcontactservice",{"_index":53,"title":{"injectables/MockContactService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["mocktissuelibraryservice",{"_index":56,"title":{"injectables/MockTissueLibraryService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["module",{"_index":48,"title":{"modules/HraServiceModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":50,"title":{"modules.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["name",{"_index":46,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["ngmodule",{"_index":52,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["node",{"_index":107,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":101,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":155,"title":{},"body":{"index.html":{}}}],["object",{"_index":34,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["observable",{"_index":25,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["of(mock_tissue_data",{"_index":120,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["optional",{"_index":47,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["out",{"_index":168,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":165,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":144,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":45,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["parent",{"_index":105,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["peer",{"_index":148,"title":{},"body":{"dependencies.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ContactMessage.html":{},"properties.html":{}}}],["provide",{"_index":67,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["providedin",{"_index":82,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["providers",{"_index":62,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["real",{"_index":65,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["received",{"_index":85,"title":{},"body":{"injectables/MockContactService.html":{}}}],["replace",{"_index":64,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["representing",{"_index":30,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":70,"title":{},"body":{"injectables/MockContactService.html":{}}}],["reset",{"_index":167,"title":{},"body":{"overview.html":{}}}],["results",{"_index":38,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":88,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["returns",{"_index":36,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["root",{"_index":83,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["roottype",{"_index":103,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":159,"title":{},"body":{"index.html":{}}}],["running",{"_index":156,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":26,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["schema",{"_index":126,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sendmessage",{"_index":42,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["sendmessage(message",{"_index":37,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["services",{"_index":66,"title":{},"body":{"modules/HraServiceModule.html":{},"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["specifically",{"_index":132,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":174,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.mock.ts",{"_index":69,"title":{},"body":{"injectables/MockContactService.html":{}}}],["src/lib/contact/contact.service.ts",{"_index":6,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["src/lib/contact/contact.service.ts:18",{"_index":44,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/lib/service.module.ts",{"_index":51,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["src/lib/tissue",{"_index":89,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":152,"title":{"index.html":{}},"body":{}}],["string",{"_index":15,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":11,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["synonym",{"_index":110,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["synonymlabels",{"_index":109,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["takes",{"_index":33,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["test",{"_index":160,"title":{},"body":{"index.html":{}}}],["tests",{"_index":158,"title":{},"body":{"index.html":{}}}],["tissue",{"_index":57,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tissue_data_schema",{"_index":94,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue_data_schema.parse",{"_index":99,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissuedata",{"_index":95,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryservice",{"_index":60,"title":{"injectables/TissueLibraryService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["tissuelibraryservice.gettissues",{"_index":93,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["tissuelibraryservice:45",{"_index":92,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["todo",{"_index":63,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["tslib",{"_index":146,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":137,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":172,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unit",{"_index":157,"title":{},"body":{"index.html":{}}}],["urls",{"_index":131,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["useexisting",{"_index":68,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["user",{"_index":21,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["valid",{"_index":130,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":128,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":18,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["variables",{"_index":175,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":169,"title":{},"body":{"properties.html":{}}}],["z",{"_index":123,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["z.infer",{"_index":127,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["z.object",{"_index":138,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.record",{"_index":139,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string",{"_index":140,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":142,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string().url().brand('iri",{"_index":136,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":124,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["zoom",{"_index":166,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ContactMessage.html":{"url":"interfaces/ContactMessage.html","title":"interface - ContactMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A interface contact which defines email, subject, and the message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable email which accepts the email entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable message which accepts the message entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable subject which accepts the subject entered by user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a ContactService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/contact/contact.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes a ContactMessage object as an argument and returns an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraServiceModule.html":{"url":"modules/HraServiceModule.html","title":"module - HraServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    HraServiceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/service.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MockContactService } from './contact/contact.mock';\nimport { ContactService } from './contact/contact.service';\nimport { MockTissueLibraryService } from './tissue-library/tissue-library.mock';\nimport { TissueLibraryService } from './tissue-library/tissue-library.service';\n\n@NgModule({\n  providers: [\n    // TODO replace with real services\n    {\n      provide: ContactService,\n      useExisting: MockContactService,\n    },\n    {\n      provide: TissueLibraryService,\n      useExisting: MockTissueLibraryService,\n    },\n  ],\n})\nexport class HraServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockContactService.html":{"url":"injectables/MockContactService.html","title":"injectable - MockContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents mock implementation of the ContactService class.\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    It accepts an object of type ContactMessage and currently logs the message contents on the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { ContactMessage, ContactService } from './contact.service';\n\n/** This class represents mock implementation of the ContactService class. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockContactService extends ContactService {\n  /** It accepts an object of type ContactMessage and currently logs the message contents on the console. */\n  sendMessage(message: ContactMessage): Observable {\n    console.log('Message received. Content: ' + JSON.stringify(message));\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueLibraryService.html":{"url":"injectables/MockTissueLibraryService.html","title":"injectable - MockTissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock implementation of TissueLibraryService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueLibraryService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTissues\n                        \n                    \n                \n            \n            \n                \ngetTissues()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueLibraryService\n\n                \n            \n            \n                \n                        Defined in         TissueLibraryService:45\n\n                \n            \n\n\n            \n                \n                    Implementation of TissueLibraryService.getTissues\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { TISSUE_DATA_SCHEMA, TissueData, TissueLibraryService } from './tissue-library.service';\n\n/** Mock tissue data */\nconst MOCK_TISSUE_DATA = TISSUE_DATA_SCHEMA.parse({\n  root: 'http://example.com/root',\n  nodes: {\n    'http://example.com/node1': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node1',\n      id: 'http://example.com/node1',\n      parent: '',\n      label: 'Node 1',\n      synonymLabels: ['Synonym 1', 'Synonym 2', 'Synonym 3'],\n      children: [],\n    },\n    'http://example.com/node2': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node2',\n      id: 'http://example.com/node2',\n      parent: '',\n      label: 'Node 2',\n      synonymLabels: ['Synonym 4', 'Synonym 5', 'Synonym 6'],\n      children: ['http://example.com/node3'],\n    },\n    'http://example.com/node3': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node3',\n      id: 'http://example.com/node3',\n      parent: '',\n      label: 'Node 3',\n      synonymLabels: [],\n      children: [],\n    },\n  },\n});\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissues} */\n  getTissues(): Observable {\n    return of(MOCK_TISSUE_DATA);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryService.html":{"url":"injectables/TissueLibraryService.html","title":"injectable - TissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a TissueLibraryService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getTissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.service.ts:39\n                \n            \n\n\n            \n                \n                    This method returns an Observable of the type of TissueData\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\n/**\n * A type of TissueData which is infered from the Tissue Data Schema\n */\nexport type TissueData = z.infer;\n\n/**\n * A validator that ensures string representing valid URLS, specifically marked as IRI are accepted\n */\nexport const IRI = z.string().url().brand('IRI');\n\n/**\n * A Schema which defines the root and its nodes\n * which in turn defines id, parent, label, synonymLabels and children\n */\nexport const TISSUE_DATA_SCHEMA = z.object({\n  root: IRI,\n  nodes: z.record(\n    IRI,\n    z.object({\n      '@type': z.string(),\n      '@id': IRI,\n      id: IRI,\n      parent: IRI.or(z.literal('')),\n      label: z.string(),\n      synonymLabels: z.string().array(),\n      children: IRI.array(),\n    })\n  ),\n});\n\n/** An abstract class representing a TissueLibraryService*/\n@Injectable()\nexport abstract class TissueLibraryService {\n  /** This method returns an Observable of the type of TissueData */\n  abstract getTissues(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nservices\nThis library was generated with Nx.\nRunning unit tests\nRun nx test services to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TissueData   (src/.../tissue-library.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.service.ts\n    \n    \n        \n            \n                \n                    \n                    TissueData\n                \n            \n            \n                \n                    A type of TissueData which is infered from the Tissue Data Schema\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IRI   (src/.../tissue-library.service.ts)\n                        \n                        \n                            MOCK_TISSUE_DATA   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            TISSUE_DATA_SCHEMA   (src/.../tissue-library.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.string().url().brand('IRI')\n                    \n                \n\n            \n                \n                    A validator that ensures string representing valid URLS, specifically marked as IRI are accepted\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_DATA_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(\n    IRI,\n    z.object({\n      '@type': z.string(),\n      '@id': IRI,\n      id: IRI,\n      parent: IRI.or(z.literal('')),\n      label: z.string(),\n      synonymLabels: z.string().array(),\n      children: IRI.array(),\n    })\n  ),\n})\n                    \n                \n\n            \n                \n                    A Schema which defines the root and its nodes\nwhich in turn defines id, parent, label, synonymLabels and children\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MOCK_TISSUE_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TISSUE_DATA_SCHEMA.parse({\n  root: 'http://example.com/root',\n  nodes: {\n    'http://example.com/node1': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node1',\n      id: 'http://example.com/node1',\n      parent: '',\n      label: 'Node 1',\n      synonymLabels: ['Synonym 1', 'Synonym 2', 'Synonym 3'],\n      children: [],\n    },\n    'http://example.com/node2': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node2',\n      id: 'http://example.com/node2',\n      parent: '',\n      label: 'Node 2',\n      synonymLabels: ['Synonym 4', 'Synonym 5', 'Synonym 6'],\n      children: ['http://example.com/node3'],\n    },\n    'http://example.com/node3': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node3',\n      id: 'http://example.com/node3',\n      parent: '',\n      label: 'Node 3',\n      synonymLabels: [],\n      children: [],\n    },\n  },\n})\n                    \n                \n\n            \n                \n                    Mock tissue data\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
