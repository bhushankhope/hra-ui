var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ContactImplService.html",[0,0.022,1,1.98]],["body/injectables/ContactImplService.html",[0,0.035,1,3.589,2,0.943,3,0.628,4,0.537,5,0.537,6,3.716,7,0.628,8,3.166,9,2.125,10,4.591,11,4.591,12,4.591,13,3.166,14,4.591,15,1.674,16,2.409,17,0.372,18,1.319,19,3.589,20,2.744,21,2.727,22,1.72,23,1.067,24,3.021,25,2.744,26,1.487,27,4.591,28,2.611,29,4.591,30,3.166,31,4.591,32,1.355,33,0.047,34,1.355,35,0.628,36,1.355,37,0.725,38,0.972,39,3.166,40,0.842,41,0.537,42,3.021,43,0.725,44,1.203,45,1.203,46,0.628,47,0.628,48,1.72,49,1.355,50,3.716,51,3.716,52,3.716,53,3.716,54,3.716,55,3.716,56,3.716,57,3.716,58,3.716,59,0.037,60,0.037]],["title/interfaces/ContactMessage.html",[21,1.505,61,0.93]],["body/interfaces/ContactMessage.html",[0,0.035,3,0.608,4,0.52,5,0.52,7,0.608,13,3.105,16,2.084,17,0.36,20,2.151,21,2.697,26,1.166,28,2.95,30,3.883,33,0.047,35,0.83,37,0.703,38,0.959,39,2.483,40,0.761,41,0.52,43,0.703,46,0.761,47,0.761,59,0.036,60,0.036,61,1.591,62,2.151,63,2.927,64,3.66,65,4.576,66,2.359,67,1.811,68,4.393,69,3.727,70,4.393,71,4.393,72,2.274,73,2.927,74,2.483,75,0.914,76,2.927]],["title/injectables/ContactService.html",[0,0.022,16,1.329]],["body/injectables/ContactService.html",[0,0.035,2,0.934,3,0.622,4,0.532,5,0.532,7,0.622,13,2.538,16,2.401,17,0.368,18,1.311,19,3.148,20,2.727,21,2.848,23,1.057,26,1.478,28,2.794,30,3.577,32,1.342,33,0.047,34,1.342,35,0.622,36,1.342,37,0.968,38,1.041,39,3.148,40,0.771,41,0.532,43,0.718,46,0.771,47,0.838,59,0.037,60,0.037,61,1.478,63,2.992,64,2.992,65,4.216,67,1.607,68,4.033,69,3.421,70,4.033,71,4.033,72,2.515,73,3.71,74,3.148,75,1.159,76,3.71,77,3.68]],["title/interfaces/ExtendedTissue.html",[61,0.93,78,1.98]],["body/interfaces/ExtendedTissue.html",[0,0.025,3,0.383,4,0.328,5,0.653,7,0.383,15,1.413,17,0.227,33,0.048,35,0.763,38,0.642,40,0.796,41,0.328,43,0.442,44,0.734,45,1.066,46,0.556,47,0.383,48,1.049,49,1.646,59,0.026,60,0.026,61,0.734,62,1.354,66,1.724,67,1.691,75,1.146,78,2.269,79,0.826,80,0.826,81,1.354,82,2.675,83,1.43,84,2.09,85,2.675,86,2.675,87,2.675,88,1.612,89,2.03,90,1.691,91,1.354,92,1.187,93,1.354,94,2.315,95,1.842,96,1.2,97,1.562,98,1.2,99,1.049,100,2.269,101,1.523,102,1.55,103,2.269,104,2.269,105,1.745,106,1.59,107,1.842,108,1.842,109,1.842,110,2.541,111,2.698,112,1.523,113,1.966,114,2.675,115,1.842,116,2.675,117,1.842,118,2.675,119,1.842,120,1.842,121,1.793,122,1.187,123,1.842,124,3.555,125,1.187,126,2.023,127,1.2,128,0.651,129,1.187,130,1.187,131,1.562,132,3.033,133,2.305,134,2.269,135,2.932,136,3.248,137,2.672,138,3.811,139,3.811,140,3.811,141,2.672,142,2.269,143,1.562,144,1.562,145,2.932,146,2.269,147,3.114,148,2.932,149,2.932,150,2.269,151,2.932,152,1.562,153,1.562,154,2.269,155,1.562,156,2.269,157,2.672,158,2.269,159,1.562,160,1.562,161,2.269,162,2.269,163,1.562,164,1.562,165,1.562,166,2.269,167,2.269,168,1.562,169,1.562,170,1.562,171,2.932,172,1.562,173,1.562,174,1.562,175,1.562,176,2.269,177,2.269,178,2.269,179,2.269,180,2.672,181,2.269,182,1.562,183,1.562,184,2.269,185,1.562,186,1.562,187,1.562,188,2.672,189,2.269,190,2.269,191,1.562,192,2.672,193,2.269,194,1.562,195,2.672,196,1.724,197,1.562,198,1.842,199,0.93,200,1.842]],["title/interfaces/FtuDataImplEndpoints.html",[61,0.93,201,1.98]],["body/interfaces/FtuDataImplEndpoints.html",[0,0.017,3,0.221,4,0.457,5,0.73,7,0.534,8,0.9,9,0.993,15,0.476,17,0.131,25,2.243,26,1.216,33,0.048,35,0.765,37,0.945,38,0.932,40,0.7,41,0.189,43,0.255,44,0.695,45,0.884,46,0.534,47,0.221,48,1.737,49,1.974,59,0.033,60,0.017,61,0.423,62,0.78,66,1.124,67,0.884,75,1.121,83,1.268,84,1.463,88,1.709,89,1.124,90,1.588,91,0.78,92,0.684,93,0.78,96,0.782,98,2.046,99,0.604,101,1.463,102,1.742,105,1.12,106,2.144,112,0.993,121,1.616,122,0.684,125,0.684,126,1.152,127,0.782,128,1.54,130,1.431,133,1.616,199,0.88,201,1.479,202,0.604,203,0.536,204,0.78,205,2.408,206,1.743,207,1.882,208,1.743,209,2.078,210,2.248,211,2.044,212,3.224,213,2.735,214,1.61,215,1.656,216,1.061,217,1.061,218,1.061,219,1.061,220,1.061,221,2.219,222,2.086,223,1.282,224,1.836,225,2.078,226,1.83,227,1.431,228,0.78,229,0.993,230,0.78,231,0.9,232,1.479,233,0.78,234,0.9,235,0.9,236,2.589,237,0.9,238,0.9,239,0.9,240,0.9,241,0.9,242,0.78,243,0.9,244,0.9,245,0.9,246,0.9,247,0.9,248,2.086,249,0.9,250,2.248,251,3.367,252,0.78,253,1.479,254,1.061,255,1.882,256,1.061,257,0.9,258,2.086,259,1.882,260,2.563,261,1.479,262,2.855,263,1.882,264,1.882,265,0.9,266,1.882,267,2.93,268,1.882,269,2.18,270,0.9,271,1.479,272,2.589,273,1.479,274,0.9,275,0.9,276,1.264,277,0.9,278,0.9,279,0.9,280,0.9,281,0.9,282,1.882,283,0.993,284,0.993,285,1.479,286,0.9,287,0.9,288,0.9,289,1.889,290,1.479,291,1.479,292,0.9,293,0.9,294,2.18,295,1.282,296,1.061,297,1.061,298,0.9,299,1.061,300,2.219,301,1.061,302,1.743,303,3.883,304,2.219,305,1.061,306,1.061,307,1.061,308,1.061,309,2.219,310,1.061,311,1.743,312,1.743,313,1.743,314,2.219,315,1.743,316,0.88,317,2.589,318,1.061,319,2.219,320,2.219,321,3.487,322,1.061,323,0.78,324,0.9,325,2.991,326,2.958,327,0.78,328,1.061,329,1.061,330,0.78,331,0.78,332,2.569,333,2.219,334,1.061,335,1.061,336,0.604,337,0.78,338,1.061,339,1.061,340,1.061,341,1.061,342,0.78,343,0.78,344,1.061,345,1.061,346,0.78,347,1.282,348,0.78,349,1.061,350,1.061,351,1.061,352,1.061,353,1.061,354,1.061,355,1.061,356,1.743,357,2.18,358,2.219,359,1.061,360,1.061,361,1.061,362,1.061,363,1.061,364,1.061,365,1.061,366,1.061,367,1.061,368,1.061,369,1.061,370,1.061,371,1.061,372,1.061,373,1.061,374,1.061,375,1.061,376,1.061,377,1.061,378,2.219,379,1.061,380,1.061,381,3.224,382,1.061,383,1.061,384,1.061,385,2.219,386,1.061,387,1.061,388,1.061,389,1.061,390,1.061,391,1.061,392,0.9,393,1.061,394,2.219,395,1.061,396,1.743,397,1.061,398,1.743,399,1.061,400,1.061,401,1.061,402,1.061,403,1.061,404,2.219,405,1.061,406,1.061,407,1.061,408,2.219,409,0.9,410,1.061,411,1.061,412,1.061,413,0.78,414,1.061,415,0.78,416,1.061,417,1.061,418,1.061,419,1.061,420,1.061,421,1.282,422,2.219,423,1.743,424,1.061,425,1.282,426,1.743,427,1.061,428,0.604,429,0.78,430,0.78,431,0.604,432,1.061,433,1.061,434,1.061,435,1.061,436,1.061,437,1.061,438,1.061,439,1.743,440,1.061,441,1.061,442,1.061,443,2.219,444,1.061,445,1.061,446,1.061]],["title/injectables/FtuDataImplService.html",[0,0.022,295,1.716]],["body/injectables/FtuDataImplService.html",[0,0.015,2,0.306,3,0.204,4,0.373,5,0.695,7,0.703,8,1.384,9,1.194,15,0.732,17,0.121,18,0.576,22,1.671,23,1.037,25,2.694,26,1.46,32,1.219,33,0.048,34,1.219,35,0.777,36,1.219,37,0.985,38,1.016,40,0.678,41,0.174,43,0.235,44,0.65,45,0.836,46,0.508,47,0.204,48,1.671,49,1.954,59,0.032,60,0.016,61,0.39,67,0.836,75,1.09,83,1.32,84,1.393,88,1.647,89,1.052,90,1.557,91,0.72,92,0.631,93,0.72,96,0.732,98,2.075,99,0.558,101,1.393,102,1.705,105,1.059,106,2.176,112,0.929,121,1.547,122,0.631,125,0.631,126,1.219,127,1.097,128,1.523,130,1.352,133,1.547,199,1.481,201,0.831,202,0.558,203,0.495,204,0.72,205,2.075,206,0.979,207,1.384,208,0.979,209,1.577,210,1.752,211,1.671,212,2.446,213,2.075,214,1.396,215,1.352,216,0.979,217,0.979,218,0.979,219,0.979,220,0.979,221,2.097,222,1.997,223,1.199,224,1.927,225,2.182,226,2.006,227,1.352,228,0.72,229,1.927,230,0.72,231,0.831,232,1.384,233,0.72,234,0.831,235,0.831,236,2.489,237,0.831,238,0.831,239,0.831,240,0.831,241,0.831,242,0.72,243,0.831,244,0.831,245,0.831,246,0.831,247,0.831,248,1.997,249,0.831,250,2.182,251,3.259,252,0.72,253,1.384,254,0.979,255,1.779,256,0.979,257,0.831,258,1.997,259,1.779,260,2.488,261,1.384,262,2.794,263,1.779,264,1.779,265,0.831,266,1.779,267,3.078,268,1.779,269,2.075,270,0.831,271,1.384,272,2.489,273,1.384,274,0.831,275,0.831,276,1.194,277,0.831,278,0.831,279,0.831,280,0.831,281,0.831,282,1.779,283,0.929,284,0.929,285,1.384,286,0.831,287,0.831,288,0.831,289,2.157,290,1.384,291,1.384,292,0.831,293,0.831,294,2.075,295,1.798,296,1.632,297,1.632,298,1.384,299,1.632,300,2.097,301,0.979,302,1.632,303,3.801,304,2.097,305,0.979,306,0.979,307,0.979,308,0.979,309,2.097,310,0.979,311,1.632,312,1.632,313,1.632,314,2.097,315,1.632,316,1.059,317,3.109,318,0.979,319,2.097,320,2.097,321,3.384,322,0.979,323,1.798,324,1.384,325,2.939,326,3.224,327,1.199,328,0.979,329,0.979,330,1.798,331,1.199,332,2.446,333,2.097,334,0.979,335,0.979,336,1.393,337,1.199,338,0.979,339,0.979,340,0.979,341,0.979,342,1.798,343,1.199,344,0.979,345,0.979,346,1.798,347,1.798,348,1.199,349,0.979,350,0.979,351,0.979,352,0.979,353,0.979,354,0.979,355,0.979,356,1.632,357,2.075,358,2.097,359,0.979,360,0.979,361,0.979,362,0.979,363,0.979,364,0.979,365,0.979,366,0.979,367,0.979,368,0.979,369,0.979,370,0.979,371,0.979,372,0.979,373,0.979,374,0.979,375,0.979,376,0.979,377,0.979,378,2.097,379,0.979,380,0.979,381,3.111,382,0.979,383,0.979,384,0.979,385,2.097,386,0.979,387,0.979,388,0.979,389,0.979,390,0.979,391,0.979,392,0.831,393,0.979,394,2.097,395,0.979,396,1.632,397,0.979,398,1.632,399,0.979,400,0.979,401,0.979,402,0.979,403,0.979,404,2.097,405,0.979,406,0.979,407,0.979,408,2.097,409,0.831,410,0.979,411,0.979,412,0.979,413,0.72,414,0.979,415,0.72,416,0.979,417,0.979,418,0.979,419,0.979,420,0.979,421,1.199,422,2.097,423,1.632,424,0.979,425,1.199,426,1.632,427,0.979,428,0.558,429,0.72,430,0.72,431,0.558,432,0.979,433,0.979,434,0.979,435,0.979,436,0.979,437,0.979,438,0.979,439,1.632,440,0.979,441,0.979,442,0.979,443,2.097,444,0.979,445,0.979,446,0.979,447,1.205,448,1.205,449,1.205,450,1.205,451,1.205,452,1.205]],["title/injectables/FtuDataService.html",[0,0.022,229,1.329]],["body/injectables/FtuDataService.html",[0,0.03,2,0.736,3,0.49,4,0.64,5,0.64,7,0.8,9,1.81,17,0.29,18,1.123,23,1.463,26,1.534,32,1.803,33,0.047,34,1.803,35,0.836,36,1.803,37,1.076,38,1.11,40,0.8,41,0.419,43,0.566,46,0.49,47,0.49,59,0.031,60,0.031,72,2.632,74,3.266,83,1.36,88,1.433,96,1.057,98,2.103,99,1.341,126,1.613,128,1.36,199,1.944,202,2.411,203,2.138,211,1.81,214,1.425,215,2.482,224,1.341,225,1.519,226,2.319,227,1.519,228,1.732,229,1.81,316,1.944,323,2.336,325,2.955,327,2.336,330,2.336,331,2.336,336,1.81,337,2.336,342,2.336,343,2.336,346,2.336,348,2.336,453,2.898,454,3.178,455,3.909,456,3.909,457,2.898,458,5.296,459,2.898,460,4.736,461,2.898,462,2.898,463,2.898,464,2.898]],["title/modules/HraServiceModule.html",[465,2.334,466,1.98]],["body/modules/HraServiceModule.html",[1,3.3,3,0.672,4,0.575,5,0.575,16,2.215,33,0.047,40,0.921,41,0.575,46,0.672,47,0.672,59,0.039,60,0.039,126,1.872,203,1.964,209,2.084,210,2.084,211,1.841,214,1.45,229,2.215,230,2.377,233,2.86,295,2.86,466,3.3,467,2.743,468,3.977,469,4.786,470,3.977,471,3.977,472,3.977,473,3.977,474,4.173,475,4.786,476,3.977,477,3.977,478,3.977,479,4.786,480,3.977,481,3.977]],["title/injectables/MockContactService.html",[0,0.022,482,2.334]],["body/injectables/MockContactService.html",[0,0.036,2,0.96,3,0.639,4,0.547,5,0.547,7,0.639,15,1.692,16,2.532,17,0.379,18,1.333,19,3.201,20,2.774,21,2.867,22,1.751,23,1.086,24,3.075,28,2.632,32,1.379,33,0.047,34,1.379,35,0.849,36,1.379,37,0.738,38,0.98,40,0.849,41,0.547,42,3.075,43,0.738,44,1.225,45,1.225,46,0.639,47,0.908,59,0.037,60,0.037,69,3.201,75,1.179,106,1.553,127,1.692,196,2.433,347,2.774,482,3.773,483,3.783,484,3.773,485,4.642,486,4.642,487,4.642,488,4.642,489,3.783,490,3.783,491,3.783,492,3.783]],["title/injectables/MockFtuDataService.html",[0,0.022,493,2.334]],["body/injectables/MockFtuDataService.html",[0,0.024,2,0.524,3,0.349,4,0.444,5,0.298,7,0.77,15,1.12,17,0.207,18,1.168,22,2.109,23,1.308,25,3.158,26,1.678,32,1.585,33,0.047,34,1.585,35,0.734,36,1.585,37,1.011,38,1.082,40,0.797,41,0.298,43,0.403,44,0.668,45,0.668,46,0.349,47,0.797,48,2.109,49,1.12,59,0.025,60,0.025,80,0.752,83,1.355,88,1.475,90,0.995,96,0.752,98,2.095,99,0.955,102,1.866,105,1.261,106,2.229,121,2.244,126,1.12,127,1.889,128,1.47,129,1.082,132,1.836,196,1.61,199,1.87,202,0.955,203,0.847,211,0.955,214,0.752,215,1.082,224,2.109,225,2.278,226,2.278,227,1.082,228,1.233,229,2.369,230,1.233,242,1.233,260,1.233,267,3.206,283,0.955,284,0.955,289,1.836,316,1.261,317,3.478,323,2.429,324,2.119,325,2.597,326,3.478,327,1.836,330,2.429,331,1.836,336,1.882,337,1.836,342,2.429,343,1.836,346,2.429,347,2.429,348,1.836,413,1.233,415,3.158,421,1.233,425,1.233,428,0.955,429,1.233,430,1.233,431,0.955,474,2.497,484,2.497,493,2.497,494,1.678,495,3.072,496,3.072,497,2.064,498,2.064,499,2.064,500,2.064,501,2.064,502,2.064,503,1.423,504,0.955,505,2.064,506,1.678,507,2.497,508,2.497,509,2.497,510,2.497,511,2.497,512,2.497,513,2.497,514,2.497,515,2.497,516,3.941,517,3.703,518,3.703,519,2.497,520,2.497,521,2.497,522,2.497,523,2.497,524,2.497,525,2.497,526,2.497,527,2.497,528,1.678,529,1.678,530,1.678,531,1.678,532,1.678,533,2.983,534,2.497,535,1.678,536,2.497,537,1.678,538,1.678,539,2.064,540,2.064,541,2.064,542,2.064]],["title/injectables/MockTissueFtuService.html",[0,0.022,543,2.334]],["body/injectables/MockTissueFtuService.html",[0,0.026,2,0.605,3,0.403,4,0.344,5,0.344,7,0.403,15,1.244,17,0.238,18,0.98,22,1.579,23,0.98,26,1.409,33,0.047,37,0.666,38,0.899,40,0.778,41,0.344,43,0.465,44,0.772,45,0.772,46,0.576,47,0.403,49,1.244,59,0.027,60,0.027,67,1.552,72,1.579,75,0.605,79,0.869,80,0.869,83,0.98,90,1.105,92,1.248,102,1.873,103,2.353,106,1.786,127,0.869,128,1.323,129,1.248,196,2.511,214,2.064,276,2.132,283,1.579,284,1.579,336,2.014,428,2.621,431,1.579,503,1.643,504,1.103,506,1.936,543,2.773,544,1.643,545,3.403,546,3.895,547,2.382,548,2.382,549,2.382,550,2.039,551,2.382,552,1.643,553,1.936,554,2.039,555,1.424,556,1.936,557,1.936,558,2.382,559,1.936,560,1.936,561,1.936,562,2.773,563,2.773,564,2.773,565,2.773,566,2.748,567,3.176,568,3.403,569,1.643,570,1.936,571,1.936,572,1.936,573,3.736,574,3.24,575,3.24,576,4.102,577,2.353,578,3.24,579,4.289,580,3.543,581,2.773,582,3.537,583,3.537,584,4.502,585,3.895,586,3.743,587,1.936,588,2.773,589,3.24,590,3.743,591,4.176,592,1.936,593,2.773,594,1.936,595,1.936,596,1.936,597,3.537,598,1.936,599,2.773,600,1.936,601,3.24,602,3.537,603,1.936,604,1.936,605,2.773,606,2.773,607,3.24,608,1.936,609,1.936,610,1.936,611,1.936,612,1.936,613,1.936,614,1.936,615,1.936,616,1.936,617,1.936,618,1.936,619,3.895,620,3.743,621,3.743,622,1.936,623,1.936,624,1.936,625,1.936,626,1.936,627,2.773,628,1.936,629,1.936,630,1.936,631,2.382,632,2.382]],["title/injectables/MockTissueLibraryService.html",[0,0.022,197,1.98]],["body/injectables/MockTissueLibraryService.html",[0,0.026,2,0.58,3,0.386,4,0.33,5,0.617,7,0.386,15,1.42,17,0.229,18,0.951,22,1.058,23,0.657,33,0.048,35,0.386,37,0.446,38,0.76,40,0.798,41,0.33,43,0.446,44,0.74,45,1.072,46,0.56,47,0.386,48,1.058,49,1.652,59,0.027,60,0.027,61,0.74,67,1.647,75,0.841,78,1.576,79,0.833,80,0.833,81,1.366,82,1.858,83,1.357,84,1.533,86,1.858,87,1.858,88,1.578,89,1.735,90,1.673,91,1.366,92,1.198,93,1.366,94,2.823,95,1.858,96,1.207,97,1.576,98,1.207,99,1.058,100,2.284,101,1.533,102,1.557,103,2.284,104,2.284,105,1.752,106,1.598,107,1.858,108,1.858,109,1.858,110,2.551,111,2.708,112,1.533,113,1.979,114,2.692,115,1.858,116,2.692,117,1.858,118,2.692,119,1.858,120,1.858,121,1.802,122,1.198,123,1.858,124,3.562,125,1.198,126,2.025,127,1.42,128,0.657,129,1.198,130,1.198,131,1.576,132,3.039,133,2.31,134,2.284,135,2.944,136,3.258,137,2.685,138,3.815,139,3.815,140,3.815,141,2.685,142,2.284,143,1.576,144,1.576,145,2.944,146,2.284,147,3.125,148,2.944,149,2.944,150,2.284,151,2.944,152,1.576,153,1.576,154,2.284,155,1.576,156,2.284,157,2.685,158,2.284,159,1.576,160,1.576,161,2.284,162,2.284,163,1.576,164,1.576,165,1.576,166,2.284,167,2.284,168,1.576,169,1.576,170,1.576,171,2.944,172,1.576,173,1.576,174,1.576,175,1.576,176,2.284,177,2.284,178,2.284,179,2.284,180,2.685,181,2.284,182,1.576,183,1.576,184,2.284,185,1.576,186,1.576,187,1.576,188,2.685,189,2.284,190,2.284,191,1.576,192,2.685,193,2.284,194,1.576,195,2.685,196,2.237,197,2.284,198,2.692,199,1.752,200,1.858,633,2.286]],["title/injectables/TissueFtuService.html",[0,0.022,545,1.98]],["body/injectables/TissueFtuService.html",[0,0.035,2,0.933,3,0.621,4,0.531,5,0.659,7,0.621,9,2.111,17,0.368,18,1.31,23,1.31,26,1.477,32,1.34,33,0.047,34,1.34,35,0.771,36,1.34,37,0.89,38,1.04,40,0.838,41,0.531,43,0.717,46,0.838,47,0.621,49,1.34,59,0.037,60,0.037,72,2.629,75,0.933,79,1.808,84,1.701,90,1.19,128,1.31,222,2.196,223,2.196,248,2.196,258,2.725,262,2.725,276,2.111,336,2.111,504,2.295,545,3.144,546,4.214,550,2.196,554,3.185,555,2.196,569,3.575,634,2.534,635,5.184,636,4.56,637,3.675,638,3.675,639,2.987,640,3.675]],["title/injectables/TissueLibraryService.html",[0,0.022,94,1.716]],["body/injectables/TissueLibraryService.html",[0,0.037,2,1.019,3,0.678,4,0.58,5,0.58,7,0.678,9,2.227,17,0.402,18,1.382,23,1.152,33,0.047,37,0.783,38,1.006,40,0.871,41,0.58,43,0.783,46,0.678,47,0.678,59,0.039,60,0.039,72,2.473,79,1.754,80,1.754,83,1.569,94,2.875,96,1.463,97,2.767,199,2.193,316,2.193,454,3.91,641,4.012,642,4.012,643,4.81,644,4.81]],["title/dependencies.html",[645,1.962,646,2.375]],["body/dependencies.html",[33,0.045,41,0.645,59,0.041,60,0.041,646,3.53,647,4.46,648,4.46,649,4.46,650,4.46,651,5.119]],["title/miscellaneous/functions.html",[652,1.117,653,2.799]],["body/miscellaneous/functions.html",[17,0.364,32,1.884,33,0.045,34,1.884,35,0.873,36,1.884,37,0.963,59,0.036,60,0.036,67,1.881,75,0.924,79,1.653,80,1.327,81,2.95,88,1.468,90,1.179,100,3.126,101,2.098,102,1.8,104,2.51,105,2.121,110,2.175,111,2.709,112,2.098,113,2.175,128,1.045,133,1.685,276,1.685,283,2.098,284,2.098,431,2.098,504,1.685,544,3.404,550,2.175,552,2.51,553,2.959,554,2.175,555,2.175,556,2.959,557,2.959,559,2.959,560,2.959,561,3.685,562,2.959,563,3.685,564,3.685,565,3.685,566,3.737,567,3.126,568,2.51,652,1.685,653,2.959,654,3.563,655,4.533,656,4.533,657,3.64,658,2.959,659,3.64,660,3.64]],["title/index.html",[17,0.242,661,2.414,662,2.414]],["body/index.html",[33,0.041,59,0.041,60,0.041,298,3.522,316,1.824,552,3.064,663,5.108,664,4.443,665,5.108,666,4.443,667,5.108,668,4.443,669,4.443]],["title/modules.html",[467,2.679]],["body/modules.html",[33,0.042,59,0.042,60,0.042,250,2.369,466,3.118,467,3.118,670,4.521,671,4.521]],["title/overview.html",[672,3.158]],["body/overview.html",[2,1.13,33,0.041,59,0.041,60,0.041,62,2.66,465,3.618,573,3.07,577,3.07,580,3.07,646,3.526,672,3.618,673,5.113,674,4.451,675,4.451]],["title/properties.html",[66,1.805,645,1.962]],["body/properties.html",[33,0.044,59,0.042,60,0.042,66,2.374,676,4.53,677,4.53]],["title/miscellaneous/typealiases.html",[652,1.117,678,3.444]],["body/miscellaneous/typealiases.html",[17,0.353,33,0.036,35,0.963,59,0.036,60,0.036,79,1.621,80,1.287,83,1.586,85,2.869,88,1.655,96,1.863,98,1.621,202,2.058,203,1.825,204,3.329,209,2.33,210,2.33,214,1.775,224,2.253,225,2.551,226,2.551,227,2.551,247,3.066,248,3.461,249,3.066,250,2.33,252,2.657,253,3.066,255,3.066,428,2.253,504,1.634,550,2.657,634,3.066,652,1.634,654,3.357,679,3.529,680,4.689,681,4.562,682,4.867,683,3.614,684,3.957,685,2.869,686,2.869]],["title/miscellaneous/variables.html",[652,1.117,687,2.799]],["body/miscellaneous/variables.html",[4,0.18,5,0.561,7,0.21,17,0.124,28,1.382,33,0.047,35,0.712,44,0.403,45,0.994,59,0.017,60,0.017,67,0.994,75,1.244,79,1.119,80,0.751,81,1.576,83,1.354,84,1.221,88,1.315,89,1.382,90,1.474,98,1.899,101,0.953,102,1.918,105,0.845,110,0.743,111,1.833,112,0.953,113,0.743,121,2.107,122,0.651,124,3.072,125,1.08,126,1.852,127,1.119,128,1.308,129,1.08,130,1.382,131,0.857,132,2.662,133,1.88,134,1.421,135,2.116,136,2.528,137,1.819,138,3.447,139,3.447,140,3.447,141,1.819,142,1.421,143,0.857,144,0.857,145,2.116,146,1.421,147,2.345,148,2.116,149,2.116,150,1.421,151,2.116,152,0.857,153,0.857,154,1.421,155,0.857,156,1.421,157,1.819,158,1.421,159,0.857,160,0.857,161,1.421,162,1.421,163,0.857,164,0.857,165,0.857,166,1.421,167,1.421,168,0.857,169,0.857,170,0.857,171,2.116,172,0.857,173,0.857,174,0.857,175,0.857,176,1.421,177,1.421,178,1.421,179,1.421,180,1.819,181,1.421,182,0.857,183,0.857,184,1.421,185,0.857,186,0.857,187,0.857,188,1.819,189,1.421,190,1.421,191,0.857,192,1.819,193,1.421,194,0.857,195,1.819,202,1.221,203,1.083,204,2.595,205,0.857,207,0.857,209,1.382,210,1.382,211,0.953,213,0.857,214,1.934,215,0.651,222,1.833,223,2.72,224,0.575,231,0.857,232,0.857,233,1.231,234,0.857,235,0.857,236,1.421,237,0.857,238,1.421,239,0.857,240,0.857,241,0.857,242,0.743,243,0.857,244,0.857,245,0.857,246,0.857,250,1.382,252,1.576,257,1.421,258,2.959,259,1.819,260,1.833,261,1.421,262,3.143,263,0.857,264,0.857,265,0.857,266,0.857,267,2.319,268,0.857,269,0.857,270,0.857,271,1.819,272,1.819,273,1.819,274,0.857,275,0.857,276,1.574,277,0.857,278,0.857,279,0.857,280,0.857,281,0.857,282,1.819,283,1.88,284,1.88,285,1.421,286,0.857,287,0.857,288,0.857,289,1.231,290,0.857,291,1.421,292,0.857,293,0.857,294,1.421,316,0.845,357,3.072,392,1.819,409,0.857,413,1.231,415,2.859,421,1.231,425,1.231,428,2.456,429,0.743,430,0.743,431,0.953,494,2.144,503,1.421,504,0.953,507,1.674,508,1.674,509,1.674,510,1.674,511,1.674,512,1.674,513,1.674,514,1.674,515,1.674,516,3.301,517,2.98,518,2.98,519,1.674,520,1.674,521,1.674,522,1.674,523,1.674,524,1.674,525,1.674,526,1.674,527,1.674,528,1.01,529,1.01,530,1.674,531,1.01,532,1.01,533,2.144,534,1.674,535,1.01,536,1.674,537,1.01,538,1.01,544,1.819,554,1.231,555,0.743,566,0.857,567,1.819,568,3.78,569,0.857,570,1.674,571,1.01,572,1.01,573,3.342,574,2.144,575,2.144,576,3.301,577,1.421,578,2.144,579,3.621,580,2.905,581,1.674,582,2.494,583,2.494,584,4.025,585,2.98,586,2.764,587,1.01,588,1.674,589,2.144,590,2.764,591,3.424,592,1.01,593,1.674,594,1.01,595,1.01,596,1.01,597,2.494,598,1.01,599,1.674,600,1.01,601,2.144,602,2.494,603,1.01,604,1.01,605,1.674,606,1.674,607,2.144,608,1.01,609,1.01,610,1.01,611,1.01,612,1.01,613,1.01,614,1.01,615,1.01,616,1.01,617,1.01,618,1.01,619,2.98,620,2.764,621,2.764,622,1.01,623,1.01,624,1.01,625,1.01,626,1.01,627,1.674,628,1.01,629,1.01,630,1.01,634,1.421,639,1.674,652,0.575,654,2.677,658,4.388,680,4.233,681,3.889,683,1.674,684,2.144,685,1.01,686,1.01,687,1.01,688,2.637,689,2.06,690,2.06,691,2.637,692,2.637,693,2.637,694,2.637,695,3.068,696,1.243,697,1.243,698,1.243,699,1.243,700,1.243,701,2.637,702,2.06,703,2.06,704,1.243,705,2.637,706,1.243,707,2.637,708,2.06,709,1.243,710,1.243,711,2.06,712,2.06,713,1.243,714,2.06,715,1.243,716,2.06,717,1.243,718,1.243]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":392,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":677,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":591,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.2",{"_index":583,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.3",{"_index":584,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.4",{"_index":597,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.5",{"_index":590,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.7",{"_index":605,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["0.9",{"_index":627,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":573,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":578,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":577,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["101",{"_index":600,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":589,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":618,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["124",{"_index":608,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":621,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":587,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["15.1.0",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":579,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":629,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["2000",{"_index":594,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["21",{"_index":612,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["230",{"_index":603,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["244",{"_index":609,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":580,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["332",{"_index":596,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":593,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["45",{"_index":619,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":582,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["57",{"_index":616,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":599,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["601",{"_index":604,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["675",{"_index":614,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":602,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["8",{"_index":607,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":611,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":109,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["_blank",{"_index":54,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["abstract",{"_index":72,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["acc",{"_index":116,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["accepts",{"_index":69,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["acinus",{"_index":178,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["acinus.svg",{"_index":179,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ai",{"_index":246,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":679,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alveolus",{"_index":159,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["alveolus.svg",{"_index":160,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["anchor",{"_index":50,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.click",{"_index":57,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.href",{"_index":55,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.remove",{"_index":58,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["anchor.target",{"_index":53,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["ancillary",{"_index":511,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":8,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["angular/common",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":217,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{}}}],["application/pdf",{"_index":245,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":76,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["around",{"_index":522,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["array",{"_index":267,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ascending",{"_index":145,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["assets/temp/2d",{"_index":477,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["assets/temp/ftu",{"_index":479,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["available",{"_index":670,"title":{},"body":{"modules.html":{}}}],["base",{"_index":89,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base/root",{"_index":293,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["base_id",{"_index":124,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["base_iri",{"_index":294,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":387,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["between",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bid",{"_index":564,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["biomarker",{"_index":428,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["biomarker.array",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biomarker1",{"_index":576,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker2",{"_index":585,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker3",{"_index":586,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker4",{"_index":622,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker5",{"_index":623,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker6",{"_index":624,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker7",{"_index":625,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker8",{"_index":626,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["biomarker_type",{"_index":275,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["biomarkers",{"_index":425,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["blabel",{"_index":565,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["bronchial",{"_index":161,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":671,"title":{},"body":{"modules.html":{}}}],["cache",{"_index":315,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cache.has(url",{"_index":365,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cache.set(url",{"_index":374,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cachediri",{"_index":314,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell",{"_index":214,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell.array",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_id",{"_index":277,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_label",{"_index":278,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source",{"_index":272,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source_item",{"_index":271,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_source_item.extend",{"_index":274,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_summaries",{"_index":273,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["cell_summaries).pipe",{"_index":339,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell_summary",{"_index":252,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cell_summary['@graph",{"_index":419,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cell_summary_data",{"_index":530,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["cell_summary_row",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cell_summary_row.array",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cells",{"_index":421,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["cellsourceitem",{"_index":249,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["cellsummary",{"_index":224,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cellsummary.push",{"_index":434,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["cellsummaryrow",{"_index":682,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["child",{"_index":438,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["childlabel",{"_index":117,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childnodes",{"_index":114,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["children",{"_index":112,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["children.reduce",{"_index":115,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["childurl",{"_index":118,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["cid",{"_index":562,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["clabel",{"_index":563,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["class",{"_index":47,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["clickable",{"_index":288,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":301,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["clinical",{"_index":513,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["codebook",{"_index":515,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["collecting",{"_index":147,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["collectiong",{"_index":155,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["console",{"_index":488,"title":{},"body":{"injectables/MockContactService.html":{}}}],["console.error('illustration",{"_index":400,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.error(`cell",{"_index":393,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.error(`iri",{"_index":384,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["console.log('message",{"_index":489,"title":{},"body":{"injectables/MockContactService.html":{}}}],["const",{"_index":49,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{}}}],["constant",{"_index":231,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["constructcellsummaries",{"_index":416,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructcellsummaries(data",{"_index":418,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructs",{"_index":436,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["constructtissuelibrary(items",{"_index":440,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["contact",{"_index":13,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":42,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/MockContactService.html":{}}}],["contact/contact.impl",{"_index":470,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contact/contact.service",{"_index":471,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contactimplservice",{"_index":1,"title":{"injectables/ContactImplService.html":{}},"body":{"injectables/ContactImplService.html":{},"modules/HraServiceModule.html":{}}}],["contactmessage",{"_index":21,"title":{"interfaces/ContactMessage.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["contactservice",{"_index":16,"title":{"injectables/ContactService.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["contactservice:11",{"_index":24,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/MockContactService.html":{}}}],["content",{"_index":491,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contents",{"_index":487,"title":{},"body":{"injectables/MockContactService.html":{}}}],["corpuscle",{"_index":143,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["corpuscle.svg",{"_index":144,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["cortical",{"_index":146,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":283,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["count.optional",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count_integer_error",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count_range_error",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["counts",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":100,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["createcell",{"_index":561,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["createcell('cell1",{"_index":575,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell10",{"_index":613,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell11",{"_index":615,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell12",{"_index":617,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell13",{"_index":620,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell2",{"_index":581,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell3",{"_index":588,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell4",{"_index":592,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell5",{"_index":595,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell6",{"_index":598,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell7",{"_index":601,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell8",{"_index":606,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell('cell9",{"_index":610,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["createcell(cid",{"_index":657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlinkid",{"_index":91,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["createlinkid('ftu",{"_index":122,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["createnodeid",{"_index":655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnodeid(label",{"_index":104,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":287,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":560,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["crypt",{"_index":167,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":485,"title":{},"body":{"injectables/MockContactService.html":{}}}],["data",{"_index":128,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data.foreach((summarygroup",{"_index":420,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data.impl",{"_index":472,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["data.impl.ts",{"_index":204,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.mock.ts",{"_index":494,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["data.model",{"_index":228,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["data.model.ts",{"_index":681,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.service",{"_index":230,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["data.service.ts",{"_index":453,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:19",{"_index":464,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:25",{"_index":462,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:30",{"_index":461,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:36",{"_index":457,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:42",{"_index":459,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data.service.ts:48",{"_index":463,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["data/ftu",{"_index":203,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data['@graph'].filter",{"_index":390,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data['@graph'].find",{"_index":383,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["data_file_reference",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data_sources",{"_index":270,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["datafilereference",{"_index":225,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["dataset",{"_index":517,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["dataset_count",{"_index":285,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["datasets",{"_index":209,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["datasets).pipe",{"_index":350,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["datasets.jsonld",{"_index":481,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["datasets['@graph'][number]['data_sources",{"_index":256,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["datasources",{"_index":255,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["default",{"_index":658,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["definenode",{"_index":111,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["definenode('large",{"_index":165,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('liver",{"_index":187,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('prostate",{"_index":191,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode('thymus",{"_index":194,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["definenode(childlabel",{"_index":119,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["definenode(label",{"_index":659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defines",{"_index":64,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["dependencies",{"_index":646,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dermal",{"_index":181,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["descending",{"_index":134,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":235,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["document.body.appendchild(anchor",{"_index":52,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["document.createelement('a",{"_index":51,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["duct",{"_index":148,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["duct.svg",{"_index":149,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["dummy",{"_index":507,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":402,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["element",{"_index":290,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":30,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["emails",{"_index":12,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["emits",{"_index":317,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["empty",{"_index":347,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["endpoint",{"_index":212,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["endpoints",{"_index":205,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":70,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["entire",{"_index":644,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["entries",{"_index":574,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["entry.biomarker.id",{"_index":536,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.biomarker.label",{"_index":537,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell.id",{"_index":534,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell.label",{"_index":535,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.cell_id",{"_index":423,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.cell_label",{"_index":424,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.count",{"_index":429,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.dataset_count",{"_index":433,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.gene_id",{"_index":426,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.gene_label",{"_index":427,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.mean_expression",{"_index":432,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["entry.meanexpression",{"_index":538,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["entry.percentage",{"_index":430,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["epidermal",{"_index":184,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["etching",{"_index":417,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["example",{"_index":527,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["execute",{"_index":669,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["extended",{"_index":82,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extendedtissue",{"_index":78,"title":{"interfaces/ExtendedTissue.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extends",{"_index":15,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["extract",{"_index":528,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["extracted",{"_index":361,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["extremely",{"_index":519,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":240,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":635,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["fetchdata(iri",{"_index":362,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fetched",{"_index":386,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fetchs",{"_index":353,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["field",{"_index":388,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["file_format",{"_index":266,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["fileformatmapping",{"_index":309,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["fileformatmapping['image/svg+xml",{"_index":397,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["files",{"_index":302,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["files.find",{"_index":399,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findcellsummaries(data",{"_index":389,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findgraphitem(data",{"_index":382,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["findillustrationurl(files",{"_index":395,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["finds",{"_index":378,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["firstvaluefrom",{"_index":220,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["firstvaluefrom(resp",{"_index":375,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["format",{"_index":260,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["formated",{"_index":359,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["formates",{"_index":394,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["formats",{"_index":236,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["formats[file_format",{"_index":412,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["forming",{"_index":437,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["found",{"_index":385,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["from(cache.get(url",{"_index":376,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ftu",{"_index":126,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu.mock",{"_index":505,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftu.mock.ts",{"_index":544,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ftu.service",{"_index":551,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["ftu.service.ts",{"_index":634,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu.service.ts:19",{"_index":638,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu.service.ts:22",{"_index":637,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["ftu/2d",{"_index":140,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ftu/tissue",{"_index":504,"title":{},"body":{"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ftu_data_impl_endpoints",{"_index":233,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/variables.html":{}}}],["ftu_data_impl_file_format_mapping",{"_index":238,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["ftudataimplendpoints",{"_index":201,"title":{"interfaces/FtuDataImplEndpoints.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ftudataimplservice",{"_index":295,"title":{"injectables/FtuDataImplService.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{}}}],["ftudataservice",{"_index":229,"title":{"injectables/FtuDataService.html":{}},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["ftudataservice:107",{"_index":500,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:116",{"_index":499,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:125",{"_index":497,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:133",{"_index":498,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:145",{"_index":452,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:146",{"_index":501,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["ftudataservice:156",{"_index":450,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:165",{"_index":449,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:177",{"_index":447,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:189",{"_index":448,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:201",{"_index":451,"title":{},"body":{"injectables/FtuDataImplService.html":{}}}],["ftudataservice:99",{"_index":502,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["function",{"_index":103,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["functional",{"_index":297,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["functions",{"_index":653,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":108,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["gene_id",{"_index":279,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["gene_label",{"_index":280,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["generated",{"_index":664,"title":{},"body":{"index.html":{}}}],["getcellsummaries",{"_index":336,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["getcellsummaries(id",{"_index":636,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["getcellsummaries(iri",{"_index":337,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences",{"_index":342,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getdatafilereferences(iri",{"_index":343,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping",{"_index":330,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationmapping(iri",{"_index":331,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl",{"_index":323,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getillustrationurl(iri",{"_index":327,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getreferenceorgans",{"_index":546,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["gets",{"_index":458,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["getsourcereferences",{"_index":346,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getsourcereferences(iri",{"_index":348,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["getting",{"_index":661,"title":{"index.html":{}},"body":{}}],["gettissuelibrary",{"_index":199,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["given",{"_index":324,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["gland",{"_index":163,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["gland.svg",{"_index":164,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["glandular",{"_index":193,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["google.com",{"_index":516,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":250,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["greater",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":10,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["handling",{"_index":296,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["having",{"_index":213,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["helper",{"_index":559,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["henle",{"_index":137,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["henle.svg",{"_index":141,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["here",{"_index":526,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["hra",{"_index":92,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["hraservicemodule",{"_index":466,"title":{"modules/HraServiceModule.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["hrt",{"_index":514,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":300,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["http.get(url",{"_index":371,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["http://purl.obolibrary.org/obo",{"_index":407,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["httpclient",{"_index":216,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":138,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["https://purl.humanatlas.io/2d",{"_index":125,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":90,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["id_item",{"_index":257,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["id_item.extend",{"_index":261,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["iditem",{"_index":247,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["illusrationfiles",{"_index":253,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/typealiases.html":{}}}],["illustration",{"_index":326,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["illustration_files",{"_index":265,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["illustration_mapping_item",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["illustrationmappingitem",{"_index":226,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["illustrations",{"_index":210,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"modules/HraServiceModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["illustrations).pipe",{"_index":320,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["illustrations.jsonld",{"_index":478,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["illustrations['@graph",{"_index":441,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["illustrations['@graph'][number]['illustration_files",{"_index":254,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["image/png",{"_index":243,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["image/svg+xml",{"_index":241,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":196,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["import",{"_index":40,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inclusive",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["inherited",{"_index":22,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["inject",{"_index":218,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(ftu_data_impl_endpoints",{"_index":307,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(ftu_data_impl_file_format_mapping",{"_index":310,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inject(httpclient",{"_index":305,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"overview.html":{}}}],["injecting",{"_index":206,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injection",{"_index":308,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectiontoken",{"_index":219,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["injectiontoken('endpoints",{"_index":234,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken>('mapping",{"_index":239,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":306,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["inner",{"_index":150,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":207,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["inside",{"_index":379,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["integer",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercalated",{"_index":176,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":61,"title":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["interfaces",{"_index":62,"title":{},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"overview.html":{}}}],["intestine",{"_index":166,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri",{"_index":98,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iri).data_sources",{"_index":351,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri).illustration_files",{"_index":344,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri).mapping",{"_index":334,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["iri.array().default",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islates",{"_index":172,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["islets",{"_index":174,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["isreferenceorgan",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isreferenceorgan(obj",{"_index":556,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":381,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["item.length",{"_index":391,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["items",{"_index":439,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["json",{"_index":369,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["json.stringify(message",{"_index":492,"title":{},"body":{"injectables/MockContactService.html":{}}}],["kidney",{"_index":132,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":102,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["langerhans",{"_index":173,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["langerhans.svg",{"_index":175,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["large",{"_index":169,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":312,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["library",{"_index":316,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueLibraryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["library.mock",{"_index":506,"title":{},"body":{"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{}}}],["library.mock.ts",{"_index":81,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["library.model",{"_index":97,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["library.model.ts",{"_index":684,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["library.service",{"_index":95,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["library.service.ts",{"_index":641,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library.service.ts:9",{"_index":642,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library/tissue",{"_index":80,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn",{"_index":168,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lieberkuhn.svg",{"_index":170,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":524,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":121,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":85,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"miscellaneous/typealiases.html":{}}}],["liver",{"_index":188,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":454,"title":{},"body":{"injectables/FtuDataService.html":{},"injectables/TissueLibraryService.html":{}}}],["loads",{"_index":643,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["lobule",{"_index":189,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lobule.svg",{"_index":190,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["logs",{"_index":486,"title":{},"body":{"injectables/MockContactService.html":{}}}],["long",{"_index":520,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["loop",{"_index":136,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["lung",{"_index":157,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mailto:${message.email}?subject=${message.subject}&body=${message.message",{"_index":56,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["map",{"_index":221,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["map((data",{"_index":321,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["mapping",{"_index":268,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["mappings",{"_index":404,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["matching",{"_index":60,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mean_expression",{"_index":281,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["meanexpression",{"_index":431,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["medicine",{"_index":509,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["medullary",{"_index":151,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":28,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":567,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":26,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["methods",{"_index":18,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["miscellaneous",{"_index":652,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":127,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_reference_organs",{"_index":570,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_summaries",{"_index":503,"title":{},"body":{"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data",{"_index":129,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data.nodes[iri].object.file",{"_index":541,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["mockcontactservice",{"_index":482,"title":{"injectables/MockContactService.html":{}},"body":{"injectables/MockContactService.html":{}}}],["mockftudataservice",{"_index":493,"title":{"injectables/MockFtuDataService.html":{}},"body":{"injectables/MockFtuDataService.html":{}}}],["mocktissueftuservice",{"_index":543,"title":{"injectables/MockTissueFtuService.html":{}},"body":{"injectables/MockTissueFtuService.html":{}}}],["mocktissuelibraryservice",{"_index":197,"title":{"injectables/MockTissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["modal",{"_index":14,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["module",{"_index":465,"title":{"modules/HraServiceModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":467,"title":{"modules.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":360,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["negative",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nephron",{"_index":152,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nephron.svg",{"_index":153,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":101,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":523,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":469,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["node",{"_index":110,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":130,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nodes[id",{"_index":445,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["nodes[parentid",{"_index":444,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["nodes[parentid]?.children.push(id",{"_index":446,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["non",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":566,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":665,"title":{},"body":{"index.html":{}}}],["obeservable",{"_index":460,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["obj",{"_index":557,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["obj['object']['file",{"_index":558,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["object",{"_index":75,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":131,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(childnodes",{"_index":123,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["object.values(mock_summaries).map((summary",{"_index":531,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["object.values(mock_tissue_data.nodes).filter(isreferenceorgan",{"_index":571,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["objecy",{"_index":86,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["observable",{"_index":38,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["of(cell_summary_data",{"_index":540,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["of(mock_reference_organs",{"_index":631,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_summaries",{"_index":632,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["of(mock_tissue_data",{"_index":200,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["of(mock_tissue_data.nodes[iri].object.file",{"_index":539,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["of(sourcereferences",{"_index":542,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["om",{"_index":529,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["ontologyid",{"_index":409,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["ontologyidprefix",{"_index":406,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["open",{"_index":403,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["operations",{"_index":299,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["optional",{"_index":36,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["opts",{"_index":366,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["opts).pipe(map((data",{"_index":372,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["organ",{"_index":555,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["organ_id",{"_index":263,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["organ_label",{"_index":264,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":569,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":675,"title":{},"body":{"overview.html":{}}}],["outer",{"_index":154,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":48,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["overrides",{"_index":25,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{}}}],["overview",{"_index":672,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":518,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":645,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pancreas",{"_index":171,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["pancreatic",{"_index":177,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla",{"_index":182,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["papilla.svg",{"_index":183,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":325,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":367,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["parent",{"_index":105,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parentid",{"_index":443,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["parent}${label.replace",{"_index":107,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["parses",{"_index":355,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["path",{"_index":208,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["peer",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":284,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["percentage_range_error",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["percentage_range_error).lte(1",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["png",{"_index":244,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["precision",{"_index":508,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":303,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["project",{"_index":510,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":377,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["properties",{"_index":66,"title":{"properties.html":{}},"body":{"interfaces/ContactMessage.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"properties.html":{}}}],["prostate",{"_index":192,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":474,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{}}}],["providedin",{"_index":44,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":473,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["provides",{"_index":292,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["pulmonary",{"_index":158,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["purposes",{"_index":496,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["read",{"_index":232,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["reading",{"_index":354,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["readonly",{"_index":304,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["received",{"_index":490,"title":{},"body":{"injectables/MockContactService.html":{}}}],["recipient",{"_index":31,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["record",{"_index":113,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ref",{"_index":398,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["ref.url",{"_index":401,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["reference",{"_index":554,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":639,"title":{},"body":{"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["referenceorgan",{"_index":550,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["references",{"_index":215,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["reflecting",{"_index":259,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":455,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["releases/v1.3/2d",{"_index":139,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["renal",{"_index":142,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["representation_of",{"_index":84,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["representation_of.slice(ontologyidprefix.length",{"_index":410,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["representing",{"_index":73,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["represents",{"_index":484,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{}}}],["requested",{"_index":356,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["reset",{"_index":674,"title":{},"body":{"overview.html":{}}}],["resp",{"_index":370,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["responsetype",{"_index":368,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["results",{"_index":59,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.push",{"_index":408,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["retrived",{"_index":313,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["return",{"_index":106,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{}}}],["ridge",{"_index":185,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["ridge.svg",{"_index":186,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":45,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":668,"title":{},"body":{"index.html":{}}}],["running",{"_index":666,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":43,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["same",{"_index":686,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":357,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["schema.parse(data",{"_index":373,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["see",{"_index":525,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":27,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["sending",{"_index":11,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["sendmessage",{"_index":19,"title":{},"body":{"injectables/ContactImplService.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["sendmessage(message",{"_index":20,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["service",{"_index":9,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{}}}],["services",{"_index":663,"title":{},"body":{"index.html":{}}}],["shared/common.model",{"_index":99,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["single",{"_index":456,"title":{},"body":{"injectables/FtuDataService.html":{}}}],["skin",{"_index":180,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["source_reference",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourcereference",{"_index":227,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{}}}],["sourcereferences",{"_index":413,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["src/.../common.model.ts",{"_index":683,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ftu",{"_index":680,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":654,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.impl.ts",{"_index":6,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["src/lib/contact/contact.mock.ts",{"_index":483,"title":{},"body":{"injectables/MockContactService.html":{}}}],["src/lib/contact/contact.service.ts",{"_index":63,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["src/lib/contact/contact.service.ts:18",{"_index":77,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/lib/ftu",{"_index":202,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/service.module.ts",{"_index":468,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["src/lib/shared/common.model.ts",{"_index":685,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/tissue",{"_index":79,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":662,"title":{"index.html":{}},"body":{}}],["stoe",{"_index":87,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["stores",{"_index":311,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["string",{"_index":67,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["study",{"_index":512,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":65,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["submucosal",{"_index":162,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["summaries",{"_index":211,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"modules/HraServiceModule.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summaries.jsonld",{"_index":480,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["summary",{"_index":276,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["summary.entries.map((entry",{"_index":533,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summary.label",{"_index":532,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["summary1",{"_index":572,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary2",{"_index":628,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summary3",{"_index":630,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["summarygroup.biomarker_type",{"_index":435,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["summarygroup.summary.map((entry",{"_index":422,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["supported",{"_index":237,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":242,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["svg_id",{"_index":269,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["svgformat",{"_index":396,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["synonymlabels",{"_index":120,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["t",{"_index":251,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tag",{"_index":380,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["takes",{"_index":74,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/FtuDataService.html":{}}}],["template",{"_index":358,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["test",{"_index":552,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["testing",{"_index":495,"title":{},"body":{"injectables/MockFtuDataService.html":{}}}],["tests",{"_index":667,"title":{},"body":{"index.html":{}}}],["thick",{"_index":156,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":135,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["this.cache",{"_index":364,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.cachediri",{"_index":363,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.constructcellsummaries(data",{"_index":341,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.constructtissuelibrary(data['@graph",{"_index":322,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.datasets",{"_index":349,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.illustrations",{"_index":319,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.endpoints.summaries",{"_index":338,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.fetchdata(iri",{"_index":332,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.fetchdata(undefined",{"_index":318,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findcellsummaries(data",{"_index":340,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findgraphitem(data",{"_index":333,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.findillustrationurl(data",{"_index":329,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.getdatafilereferences(iri).pipe(map((data",{"_index":328,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.todatafilereferences(data",{"_index":345,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.toillustrationmapping(data",{"_index":335,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["this.tosourcereferences(data",{"_index":352,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["thymus",{"_index":195,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue",{"_index":83,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueFtuService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tissue_library",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tissue_link",{"_index":291,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["tissueftuservice",{"_index":545,"title":{"injectables/TissueFtuService.html":{}},"body":{"injectables/MockTissueFtuService.html":{},"injectables/TissueFtuService.html":{}}}],["tissueftuservice:94",{"_index":548,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissueftuservice:99",{"_index":547,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["tissuelibrary",{"_index":96,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibrary['nodes",{"_index":442,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tissuelibraryservice",{"_index":94,"title":{"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["tissuelibraryservice.gettissuelibrary",{"_index":198,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"injectables/MockTissueLibraryService.html":{}}}],["tissuelibraryservice:162",{"_index":633,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["title",{"_index":415,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["todatafilereferences(data",{"_index":411,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["toillustrationmapping",{"_index":405,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tosourcereferences(data",{"_index":414,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{}}}],["tree",{"_index":289,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":35,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockContactService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":678,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui/cdk/state",{"_index":93,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["ui/utils/types",{"_index":549,"title":{},"body":{"injectables/MockTissueFtuService.html":{}}}],["undefined",{"_index":133,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":298,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"index.html":{}}}],["unknown",{"_index":640,"title":{},"body":{"injectables/TissueFtuService.html":{}}}],["url",{"_index":88,"title":{},"body":{"interfaces/ExtendedTissue.html":{},"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/FtuDataService.html":{},"injectables/MockFtuDataService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["url.brand('iri",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useexisting",{"_index":475,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["user",{"_index":71,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["usevalue",{"_index":476,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["value",{"_index":568,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":68,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["variables",{"_index":687,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":676,"title":{},"body":{"properties.html":{}}}],["via",{"_index":29,"title":{},"body":{"injectables/ContactImplService.html":{}}}],["void",{"_index":39,"title":{},"body":{"injectables/ContactImplService.html":{},"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["whether",{"_index":553,"title":{},"body":{"injectables/MockTissueFtuService.html":{},"miscellaneous/functions.html":{}}}],["wraps",{"_index":521,"title":{},"body":{"injectables/MockFtuDataService.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":660,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":222,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.infer",{"_index":248,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/typealiases.html":{}}}],["z.number",{"_index":282,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["z.number().gte(0",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().int(count_integer_error).nonnegative(count_range_error",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.number().optional",{"_index":286,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"miscellaneous/variables.html":{}}}],["z.object",{"_index":258,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.record(iri",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string",{"_index":262,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["z.string().optional",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z.string().url().brand('url",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zero",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zod",{"_index":223,"title":{},"body":{"interfaces/FtuDataImplEndpoints.html":{},"injectables/FtuDataImplService.html":{},"injectables/TissueFtuService.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":673,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ContactImplService.html":{"url":"injectables/ContactImplService.html","title":"injectable - ContactImplService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactImplService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                ContactImplService - Angular service that handles sending emails from the contact modal\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    Overrides the sendMessage method to send message via email to the recipient\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ContactMessage, ContactService } from './contact.service';\nimport { Observable } from 'rxjs';\n\n/** ContactImplService - Angular service that handles sending emails from the contact modal */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactImplService extends ContactService {\n  /** Overrides the sendMessage method to send message via email to the recipient */\n  override sendMessage(message: ContactMessage): Observable | void {\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n    anchor.target = '_blank';\n    anchor.href = `mailto:${message.email}?subject=${message.subject}&body=${message.message}`;\n    anchor.click();\n    anchor.remove();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactMessage.html":{"url":"interfaces/ContactMessage.html","title":"interface - ContactMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A interface contact which defines email, subject, and the message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable email which accepts the email entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable message which accepts the message entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable subject which accepts the subject entered by user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable | void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a ContactService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/contact/contact.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes a ContactMessage object as an argument and returns an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable | void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtendedTissue.html":{"url":"interfaces/ExtendedTissue.html","title":"interface - ExtendedTissue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtendedTissue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Extended tissue\n\n            \n\n            \n                Extends\n            \n            \n                        Tissue\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Objecy to stoe the file URL\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Base Id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://purl.humanatlas.io/2d-ftu/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FtuDataImplEndpoints.html":{"url":"interfaces/FtuDataImplEndpoints.html","title":"interface - FtuDataImplEndpoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FtuDataImplEndpoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                Endpoints for Injecting input path\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            datasets\n                                        \n                                \n                                \n                                        \n                                            illustrations\n                                        \n                                \n                                \n                                        \n                                            summaries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datasets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datasets:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell Source References data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        illustrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        illustrations:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell illustrations data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        summaries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        summaries:         Url\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Url\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Endpoint for File having Cell Summaries data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, InjectionToken } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, firstValueFrom, from, map } from 'rxjs';\nimport { z } from 'zod';\n\nimport { IRI, Iri, URL, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/** Endpoints for Injecting input path */\nexport interface FtuDataImplEndpoints {\n  /** Endpoint for File having Cell illustrations data */\n  illustrations: Url;\n  /** Endpoint for File having Cell Summaries data */\n  summaries: Url;\n  /** Endpoint for File having Cell Source References data */\n  datasets: Url;\n}\n/** Constant  to read the endpoints */\nexport const FTU_DATA_IMPL_ENDPOINTS = new InjectionToken('Endpoints');\n\n/** Input to different file formats supported */\nexport const FTU_DATA_IMPL_FILE_FORMAT_MAPPING = new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n});\n\ntype IdItem = z.infer;\ntype CellSourceItem = z.infer;\ntype Graph = { '@graph': T[] };\ntype Illustrations = z.infer;\ntype Datasets = z.infer;\ntype Cell_Summary = z.infer;\ntype IllusrationFiles = Illustrations['@graph'][number]['illustration_files'];\ntype dataSources = Datasets['@graph'][number]['data_sources'];\n\n/** Base ID Object */\nconst ID_ITEM = z.object({\n  '@id': IRI,\n});\n\n/** ILLUSTRATIONS Object reflecting the format in the file*/\nconst ILLUSTRATIONS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: URL,\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        label: z.string(),\n        representation_of: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** DATASETS Object reflecting the format in the file*/\nconst DATASETS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Base CELL_SOURCE_ITEM Object  having cell_source */\nconst CELL_SOURCE_ITEM = z.object({\n  cell_source: IRI,\n});\n\n/** CELL_SUMMARIES zod Object reflecting the format in the file*/\nconst CELL_SUMMARIES = z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Creates clickable link for the tissue tree element */\nconst TISSUE_LINK = createLinkId('FTU');\n\n/** Provides Base/root url for the tissue tree */\nconst BASE_IRI = 'https://purl.humanatlas.io/2d-ftu/' as Iri;\n\n/**\n * FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FtuDataImplService extends FtuDataService {\n  /** http client to read files */\n  private readonly http = inject(HttpClient);\n\n  /** Endpoints injector to the service */\n  private readonly endpoints = inject(FTU_DATA_IMPL_ENDPOINTS);\n  /** Endpoint injection for file formats */\n  private readonly fileFormatMapping = inject(FTU_DATA_IMPL_FILE_FORMAT_MAPPING);\n  /** Stores the last retrived Tissue Iri */\n  private cachedIri?: Iri;\n  /** Stores the last retrived data for tissue */\n  private cache = new Map>();\n\n  /**\n  Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n  @returns An Observable that emits the tissue Tree data.\n  */\n  override getTissueLibrary(): Observable {\n    return this.fetchData(undefined, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.constructTissueLibrary(data['@graph']))\n    );\n  }\n\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return this.getDataFileReferences(iri).pipe(map((data) => this.findIllustrationUrl(data)));\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).mapping),\n      map((data) => (data ? this.toIllustrationMapping(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.summaries, CELL_SUMMARIES).pipe(\n      map((data) => this.findCellSummaries(data, iri)),\n      map((data) => (data ? this.constructCellSummaries(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).illustration_files),\n      map((data) => (data ? this.toDataFileReferences(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.datasets, DATASETS).pipe(\n      map((data) => this.findGraphItem(data, iri).data_sources),\n      map((data) => (data ? this.toSourceReferences(data) : []))\n    );\n  }\n\n  /**\n   * Fetchs data after reading the file and parses with the requested schema\n   * @template T : Schema to be formated\n   * @param iri : Tissue iri\n   * @param url : File Url\n   * @param schema :  Format needed to be extracted\n   * @returns data\n   */\n  private fetchData(iri: Iri | undefined, url: Url, schema: T): Observable> {\n    const { http, cachedIri, cache } = this;\n    if (iri !== undefined && iri !== cachedIri) {\n      this.cachedIri = iri;\n      this.cache = new Map();\n    }\n    if (!cache.has(url)) {\n      const opts = { params: { id: iri ?? '' }, responseType: 'json' as const };\n      const resp = http.get(url, opts).pipe(map((data) => schema.parse(data)));\n      cache.set(url, firstValueFrom(resp));\n    }\n    return from(cache.get(url) as Promise>);\n  }\n\n  /**\n   * Finds object inside the @graph tag for the requested id element\n   * @template T\n   * @param data\n   * @param iri\n   * @returns graph item\n   */\n  private findGraphItem(data: Graph, iri: Iri): T {\n    const item = data['@graph'].find(({ '@id': id }) => id === iri);\n    if (item === undefined) {\n      console.error(`Iri not found in data: ${iri}`);\n      return {} as T;\n    }\n\n    return item;\n  }\n\n  /**\n   * Finds cell summaries from fetched Data based on cell_source field\n   * @template T\n   * @param data\n   * @param iri\n   * @returns cell summaries\n   */\n  private findCellSummaries(data: Graph, iri: Iri): T[] {\n    const item = data['@graph'].filter(({ cell_source }) => cell_source === iri);\n    if (item === undefined || item.length == 0) {\n      console.error(`Cell Summary not found in data: ${iri}`);\n      return [];\n    }\n    return item;\n  }\n\n  /**\n   * Finds illustration url and formates it to Url\n   * @param files\n   * @returns illustration url\n   */\n  private findIllustrationUrl(files: DataFileReference[]): Url {\n    const { fileFormatMapping } = this;\n    const svgFormat = fileFormatMapping['image/svg+xml'];\n    const ref = files.find(({ format }) => format === svgFormat);\n    if (ref === undefined) {\n      console.error('Illustration url not found');\n      return '' as Url;\n    }\n    return ref.url;\n  }\n\n  /**\n   * To illustration mapping for each tissue open\n   * @param mappings\n   * @returns illustration mapping\n   */\n  private toIllustrationMapping(\n    mappings: { label: string; svg_id: string; representation_of: string }[]\n  ): IllustrationMappingItem[] {\n    const ontologyIdPrefix = 'http://purl.obolibrary.org/obo/';\n    const results: IllustrationMappingItem[] = [];\n    for (const { label, svg_id, representation_of } of mappings) {\n      results.push({ label, id: svg_id, ontologyId: representation_of.slice(ontologyIdPrefix.length) });\n    }\n\n    return results;\n  }\n\n  /**\n   * Formates data to array of DataFileReference format\n   * @param data\n   * @returns data file references\n   */\n  private toDataFileReferences(data: IllusrationFiles): DataFileReference[] {\n    const { fileFormatMapping: formats } = this;\n    const results: DataFileReference[] = [];\n    for (const { file, file_format } of data) {\n      if (file_format in formats) {\n        results.push({ format: formats[file_format], url: file });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Formats data from 'dataSources' to 'SourceReferences'[] format\n   * @param data\n   * @returns source references\n   */\n  private toSourceReferences(data: dataSources): SourceReference[] {\n    const results: SourceReference[] = [];\n    for (const { label, link, description } of data) {\n      results.push({ label, link, title: description });\n    }\n    return results;\n  }\n\n  /**\n   * constructCellSummaries : Formates Cell Summary after etching the data\n   * @param data\n   * @returns\n   */\n  private constructCellSummaries(data: Cell_Summary['@graph']): CellSummary[] {\n    const cellSummary: CellSummary[] = [];\n\n    data.forEach((summaryGroup) => {\n      const cells = summaryGroup.summary.map((entry) => ({\n        id: entry.cell_id as Iri,\n        label: entry.cell_label,\n      }));\n      const biomarkers = summaryGroup.summary.map((entry) => ({\n        id: entry.gene_id as Iri,\n        label: entry.gene_label,\n      }));\n      const summaries = summaryGroup.summary.map((entry) => ({\n        cell: entry.cell_id as Iri,\n        biomarker: entry.gene_id as Iri,\n        count: entry.count,\n        percentage: entry.percentage,\n        meanExpression: entry.mean_expression,\n        dataset_count: entry.dataset_count,\n      }));\n      cellSummary.push({\n        label: summaryGroup.biomarker_type,\n        cells,\n        biomarkers,\n        summaries,\n      });\n    });\n    return cellSummary;\n  }\n\n  /**\n   * Constructs tissue library ,forming parent and child nodes\n   * @param items\n   * @returns\n   */\n  private constructTissueLibrary(items: Illustrations['@graph']): TissueLibrary {\n    const nodes: TissueLibrary['nodes'] = {};\n    for (const { '@id': id, label, organ_id, organ_label } of items) {\n      const parentId = (BASE_IRI + organ_id) as Iri;\n      nodes[parentId] ??= { id: parentId, label: organ_label, parent: BASE_IRI, children: [] };\n      nodes[id] = { id, label, parent: parentId, children: [], link: TISSUE_LINK };\n      nodes[parentId]?.children.push(id);\n    }\n    return { root: BASE_IRI, nodes };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FtuDataImplService.html":{"url":"injectables/FtuDataImplService.html","title":"injectable - FtuDataImplService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FtuDataImplService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.impl.ts\n        \n\n\n            \n                Description\n            \n            \n                FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n\n            \n\n            \n                Extends\n            \n            \n                        FtuDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCellSummaries\n                            \n                            \n                                    \n                                getDataFileReferences\n                            \n                            \n                                    \n                                getIllustrationMapping\n                            \n                            \n                                    \n                                getIllustrationUrl\n                            \n                            \n                                    \n                                getSourceReferences\n                            \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:177\n\n                \n            \n\n\n            \n                \n                    Overrides the getCellSummaries method to return an CellSummary array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits an CellSummary array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:189\n\n                \n            \n\n\n            \n                \n                    Overrides the getDataFileReferences method to return an DataFileReference array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an DataFileReference array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:165\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an IllustrationMappingItem array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:156\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits the mock URL.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:201\n\n                \n            \n\n\n            \n                \n                    Overrides the getSourceReferences method to return an empty array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an empty array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:145\n\n                \n            \n\n\n            \n                \n                    Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits the tissue Tree data.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable, InjectionToken } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, firstValueFrom, from, map } from 'rxjs';\nimport { z } from 'zod';\n\nimport { IRI, Iri, URL, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/** Endpoints for Injecting input path */\nexport interface FtuDataImplEndpoints {\n  /** Endpoint for File having Cell illustrations data */\n  illustrations: Url;\n  /** Endpoint for File having Cell Summaries data */\n  summaries: Url;\n  /** Endpoint for File having Cell Source References data */\n  datasets: Url;\n}\n/** Constant  to read the endpoints */\nexport const FTU_DATA_IMPL_ENDPOINTS = new InjectionToken('Endpoints');\n\n/** Input to different file formats supported */\nexport const FTU_DATA_IMPL_FILE_FORMAT_MAPPING = new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n});\n\ntype IdItem = z.infer;\ntype CellSourceItem = z.infer;\ntype Graph = { '@graph': T[] };\ntype Illustrations = z.infer;\ntype Datasets = z.infer;\ntype Cell_Summary = z.infer;\ntype IllusrationFiles = Illustrations['@graph'][number]['illustration_files'];\ntype dataSources = Datasets['@graph'][number]['data_sources'];\n\n/** Base ID Object */\nconst ID_ITEM = z.object({\n  '@id': IRI,\n});\n\n/** ILLUSTRATIONS Object reflecting the format in the file*/\nconst ILLUSTRATIONS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: URL,\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        label: z.string(),\n        representation_of: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** DATASETS Object reflecting the format in the file*/\nconst DATASETS = z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Base CELL_SOURCE_ITEM Object  having cell_source */\nconst CELL_SOURCE_ITEM = z.object({\n  cell_source: IRI,\n});\n\n/** CELL_SUMMARIES zod Object reflecting the format in the file*/\nconst CELL_SUMMARIES = z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n});\n\n/** Creates clickable link for the tissue tree element */\nconst TISSUE_LINK = createLinkId('FTU');\n\n/** Provides Base/root url for the tissue tree */\nconst BASE_IRI = 'https://purl.humanatlas.io/2d-ftu/' as Iri;\n\n/**\n * FtuDataImplService - Angular service for handling FTU (Functional Tissue Unit) data operations.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FtuDataImplService extends FtuDataService {\n  /** http client to read files */\n  private readonly http = inject(HttpClient);\n\n  /** Endpoints injector to the service */\n  private readonly endpoints = inject(FTU_DATA_IMPL_ENDPOINTS);\n  /** Endpoint injection for file formats */\n  private readonly fileFormatMapping = inject(FTU_DATA_IMPL_FILE_FORMAT_MAPPING);\n  /** Stores the last retrived Tissue Iri */\n  private cachedIri?: Iri;\n  /** Stores the last retrived data for tissue */\n  private cache = new Map>();\n\n  /**\n  Overrides the getTissueLibrary method to return a data for the tissue Library tree.\n  @returns An Observable that emits the tissue Tree data.\n  */\n  override getTissueLibrary(): Observable {\n    return this.fetchData(undefined, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.constructTissueLibrary(data['@graph']))\n    );\n  }\n\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return this.getDataFileReferences(iri).pipe(map((data) => this.findIllustrationUrl(data)));\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).mapping),\n      map((data) => (data ? this.toIllustrationMapping(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.summaries, CELL_SUMMARIES).pipe(\n      map((data) => this.findCellSummaries(data, iri)),\n      map((data) => (data ? this.constructCellSummaries(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.illustrations, ILLUSTRATIONS).pipe(\n      map((data) => this.findGraphItem(data, iri).illustration_files),\n      map((data) => (data ? this.toDataFileReferences(data) : []))\n    );\n  }\n\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return this.fetchData(iri, this.endpoints.datasets, DATASETS).pipe(\n      map((data) => this.findGraphItem(data, iri).data_sources),\n      map((data) => (data ? this.toSourceReferences(data) : []))\n    );\n  }\n\n  /**\n   * Fetchs data after reading the file and parses with the requested schema\n   * @template T : Schema to be formated\n   * @param iri : Tissue iri\n   * @param url : File Url\n   * @param schema :  Format needed to be extracted\n   * @returns data\n   */\n  private fetchData(iri: Iri | undefined, url: Url, schema: T): Observable> {\n    const { http, cachedIri, cache } = this;\n    if (iri !== undefined && iri !== cachedIri) {\n      this.cachedIri = iri;\n      this.cache = new Map();\n    }\n    if (!cache.has(url)) {\n      const opts = { params: { id: iri ?? '' }, responseType: 'json' as const };\n      const resp = http.get(url, opts).pipe(map((data) => schema.parse(data)));\n      cache.set(url, firstValueFrom(resp));\n    }\n    return from(cache.get(url) as Promise>);\n  }\n\n  /**\n   * Finds object inside the @graph tag for the requested id element\n   * @template T\n   * @param data\n   * @param iri\n   * @returns graph item\n   */\n  private findGraphItem(data: Graph, iri: Iri): T {\n    const item = data['@graph'].find(({ '@id': id }) => id === iri);\n    if (item === undefined) {\n      console.error(`Iri not found in data: ${iri}`);\n      return {} as T;\n    }\n\n    return item;\n  }\n\n  /**\n   * Finds cell summaries from fetched Data based on cell_source field\n   * @template T\n   * @param data\n   * @param iri\n   * @returns cell summaries\n   */\n  private findCellSummaries(data: Graph, iri: Iri): T[] {\n    const item = data['@graph'].filter(({ cell_source }) => cell_source === iri);\n    if (item === undefined || item.length == 0) {\n      console.error(`Cell Summary not found in data: ${iri}`);\n      return [];\n    }\n    return item;\n  }\n\n  /**\n   * Finds illustration url and formates it to Url\n   * @param files\n   * @returns illustration url\n   */\n  private findIllustrationUrl(files: DataFileReference[]): Url {\n    const { fileFormatMapping } = this;\n    const svgFormat = fileFormatMapping['image/svg+xml'];\n    const ref = files.find(({ format }) => format === svgFormat);\n    if (ref === undefined) {\n      console.error('Illustration url not found');\n      return '' as Url;\n    }\n    return ref.url;\n  }\n\n  /**\n   * To illustration mapping for each tissue open\n   * @param mappings\n   * @returns illustration mapping\n   */\n  private toIllustrationMapping(\n    mappings: { label: string; svg_id: string; representation_of: string }[]\n  ): IllustrationMappingItem[] {\n    const ontologyIdPrefix = 'http://purl.obolibrary.org/obo/';\n    const results: IllustrationMappingItem[] = [];\n    for (const { label, svg_id, representation_of } of mappings) {\n      results.push({ label, id: svg_id, ontologyId: representation_of.slice(ontologyIdPrefix.length) });\n    }\n\n    return results;\n  }\n\n  /**\n   * Formates data to array of DataFileReference format\n   * @param data\n   * @returns data file references\n   */\n  private toDataFileReferences(data: IllusrationFiles): DataFileReference[] {\n    const { fileFormatMapping: formats } = this;\n    const results: DataFileReference[] = [];\n    for (const { file, file_format } of data) {\n      if (file_format in formats) {\n        results.push({ format: formats[file_format], url: file });\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Formats data from 'dataSources' to 'SourceReferences'[] format\n   * @param data\n   * @returns source references\n   */\n  private toSourceReferences(data: dataSources): SourceReference[] {\n    const results: SourceReference[] = [];\n    for (const { label, link, description } of data) {\n      results.push({ label, link, title: description });\n    }\n    return results;\n  }\n\n  /**\n   * constructCellSummaries : Formates Cell Summary after etching the data\n   * @param data\n   * @returns\n   */\n  private constructCellSummaries(data: Cell_Summary['@graph']): CellSummary[] {\n    const cellSummary: CellSummary[] = [];\n\n    data.forEach((summaryGroup) => {\n      const cells = summaryGroup.summary.map((entry) => ({\n        id: entry.cell_id as Iri,\n        label: entry.cell_label,\n      }));\n      const biomarkers = summaryGroup.summary.map((entry) => ({\n        id: entry.gene_id as Iri,\n        label: entry.gene_label,\n      }));\n      const summaries = summaryGroup.summary.map((entry) => ({\n        cell: entry.cell_id as Iri,\n        biomarker: entry.gene_id as Iri,\n        count: entry.count,\n        percentage: entry.percentage,\n        meanExpression: entry.mean_expression,\n        dataset_count: entry.dataset_count,\n      }));\n      cellSummary.push({\n        label: summaryGroup.biomarker_type,\n        cells,\n        biomarkers,\n        summaries,\n      });\n    });\n    return cellSummary;\n  }\n\n  /**\n   * Constructs tissue library ,forming parent and child nodes\n   * @param items\n   * @returns\n   */\n  private constructTissueLibrary(items: Illustrations['@graph']): TissueLibrary {\n    const nodes: TissueLibrary['nodes'] = {};\n    for (const { '@id': id, label, organ_id, organ_label } of items) {\n      const parentId = (BASE_IRI + organ_id) as Iri;\n      nodes[parentId] ??= { id: parentId, label: organ_label, parent: BASE_IRI, children: [] };\n      nodes[id] = { id, label, parent: parentId, children: [], link: TISSUE_LINK };\n      nodes[parentId]?.children.push(id);\n    }\n    return { root: BASE_IRI, nodes };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FtuDataService.html":{"url":"injectables/FtuDataService.html","title":"injectable - FtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading all data related to a single ftu\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getDataFileReferences\n                            \n                            \n                                    Abstract\n                                getIllustrationMapping\n                            \n                            \n                                    Abstract\n                                getIllustrationUrl\n                            \n                            \n                                    Abstract\n                                getSourceReferences\n                            \n                            \n                                    Abstract\n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:36\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable of cell summaries\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:42\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of data file references\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:30\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable of IllustrationMappingItem\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:25\n                \n            \n\n\n            \n                \n                    This method takes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        and\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:48\n                \n            \n\n\n            \n                \n                    Gets the\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        obeservable of source references\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ftu-data/ftu-data.service.ts:19\n                \n            \n\n\n            \n                \n                    Gets tissue library\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        tissue library\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\n\n/** Service for loading all data related to a single ftu */\n@Injectable()\nexport abstract class FtuDataService {\n  /**\n   * Gets tissue library\n   * @returns tissue library\n   */\n  abstract getTissueLibrary(): Observable;\n\n  /**\n   * This method takes\n   * @param iri and @returns an observable url\n   */\n  abstract getIllustrationUrl(iri: Iri): Observable;\n  /**\n   * This method takes\n   * @param iri and @returns observable of IllustrationMappingItem\n   */\n  abstract getIllustrationMapping(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri and\n   * @returns observable of cell summaries\n   */\n  abstract getCellSummaries(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of data file references\n   */\n  abstract getDataFileReferences(iri: Iri): Observable;\n  /**\n   * Gets the\n   * @param iri\n   * @returns obeservable of source references\n   */\n  abstract getSourceReferences(iri: Iri): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraServiceModule.html":{"url":"modules/HraServiceModule.html","title":"module - HraServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    HraServiceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/service.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactImplService } from './contact/contact.impl';\nimport { ContactService } from './contact/contact.service';\nimport { FTU_DATA_IMPL_ENDPOINTS, FtuDataImplService } from './ftu-data/ftu-data.impl';\nimport { FtuDataService } from './ftu-data/ftu-data.service';\n\n@NgModule({\n  providers: [\n    {\n      provide: ContactService,\n      useExisting: ContactImplService,\n    },\n    {\n      provide: FtuDataService,\n      useExisting: FtuDataImplService,\n    },\n    {\n      provide: FTU_DATA_IMPL_ENDPOINTS,\n      useValue: {\n        illustrations: 'assets/TEMP/2d-ftu-illustrations.jsonld',\n        summaries: 'assets/TEMP/ftu-cell-summaries.jsonld',\n        datasets: 'assets/TEMP/ftu-datasets.jsonld',\n      },\n    },\n  ],\n})\nexport class HraServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockContactService.html":{"url":"injectables/MockContactService.html","title":"injectable - MockContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents mock implementation of the ContactService class.\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    It accepts an object of type ContactMessage and currently logs the message contents on the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { ContactMessage, ContactService } from './contact.service';\n\n/** This class represents mock implementation of the ContactService class. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockContactService extends ContactService {\n  /** It accepts an object of type ContactMessage and currently logs the message contents on the console. */\n  sendMessage(message: ContactMessage): Observable {\n    console.log('Message received. Content: ' + JSON.stringify(message));\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockFtuDataService.html":{"url":"injectables/MockFtuDataService.html","title":"injectable - MockFtuDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockFtuDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ftu-data/ftu-data.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n\n            \n\n            \n                Extends\n            \n            \n                        FtuDataService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCellSummaries\n                            \n                            \n                                    \n                                getDataFileReferences\n                            \n                            \n                                    \n                                getIllustrationMapping\n                            \n                            \n                                    \n                                getIllustrationUrl\n                            \n                            \n                                    \n                                getSourceReferences\n                            \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:125\n\n                \n            \n\n\n            \n                \n                    Overrides the getCellSummaries method to return an CellSummary array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An Observable that emits an CellSummary array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDataFileReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDataFileReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:133\n\n                \n            \n\n\n            \n                \n                    Overrides the getDataFileReferences method to return an DataFileReference array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an DataFileReference array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationMapping\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationMapping(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:116\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an IllustrationMappingItem array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getIllustrationUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getIllustrationUrl(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:107\n\n                \n            \n\n\n            \n                \n                    Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits the mock URL.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSourceReferences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceReferences(iri: Iri)\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:146\n\n                \n            \n\n\n            \n                \n                    Overrides the getSourceReferences method to return an empty array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                Iri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Iri of the illustration.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An Observable that emits an empty array.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         FtuDataService\n\n                \n            \n            \n                \n                        Defined in         FtuDataService:99\n\n                \n            \n\n\n            \n                \n                    Overrides the getTissueLibrary method to return a mock data for the tissue tree\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        tissue library\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Iri, Url } from '../shared/common.model';\nimport { MOCK_SUMMARIES } from '../tissue-ftu/tissue-ftu.mock';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport {\n  CellSummary,\n  DataFileReference,\n  IllustrationMappingItem,\n  SourceReference,\n  TissueLibrary,\n} from './ftu-data.model';\nimport { FtuDataService } from './ftu-data.service';\n\n/**\n * Dummy data for Source References\n */\nconst sourceReferences = [\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n];\n\n/**\n * Dummy data extract om Mock Data of tissue mock\n */\nconst CELL_SUMMARY_DATA: CellSummary[] = Object.values(MOCK_SUMMARIES).map((summary) => ({\n  label: summary.label,\n  cells: summary.entries.map((entry) => ({\n    id: entry.cell.id as Iri,\n    label: entry.cell.label,\n  })),\n  biomarkers: summary.entries.map((entry) => ({\n    id: entry.biomarker.id as Iri,\n    label: entry.biomarker.label,\n  })),\n  summaries: summary.entries.map((entry) => ({\n    cell: entry.cell.id as Iri,\n    biomarker: entry.biomarker.id as Iri,\n    count: entry.count,\n    percentage: entry.percentage,\n    meanExpression: entry.meanExpression,\n  })),\n}));\n\n/**\nThis class represents a mock implementation of the FtuDataService class.\nIt overrides the methods from the parent class to provide mock data for testing purposes.\n*/\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockFtuDataService extends FtuDataService {\n  /**\n   * Overrides the getTissueLibrary method to return a mock data for the tissue tree\n   * @returns tissue library\n   */\n  override getTissueLibrary(): Observable {\n    return of();\n  }\n  /**\n  Overrides the getIllustrationUrl method to return a mock URL for the given Iri.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits the mock URL.\n  */\n  override getIllustrationUrl(iri: Iri): Observable {\n    return of(MOCK_TISSUE_DATA.nodes[iri].object.file);\n  }\n\n  /**\n  Overrides the getIllustrationMapping method to return an IllustrationMappingItem array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an IllustrationMappingItem array.\n  */\n  override getIllustrationMapping(iri: Iri): Observable {\n    return of([]);\n  }\n\n  /**\n  Overrides the getCellSummaries method to return an CellSummary array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an CellSummary array.\n  */\n  override getCellSummaries(iri: Iri): Observable {\n    return of(CELL_SUMMARY_DATA);\n  }\n  /**\n  Overrides the getDataFileReferences method to return an DataFileReference array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an DataFileReference array.\n  */\n  override getDataFileReferences(iri: Iri): Observable {\n    return of([\n      {\n        format: 'svg',\n        url: MOCK_TISSUE_DATA.nodes[iri].object.file,\n      },\n    ]);\n  }\n  /**\n  Overrides the getSourceReferences method to return an empty array.\n  @param iri The Iri of the illustration.\n  @returns An Observable that emits an empty array.\n  */\n  override getSourceReferences(iri: Iri): Observable {\n    return of(sourceReferences);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueFtuService.html":{"url":"injectables/MockTissueFtuService.html","title":"injectable - MockTissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementation of TissueFtuService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueFtuService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCellSummaries\n                            \n                            \n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \ngetCellSummaries()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:99\n\n                \n            \n\n\n            \n                \n                    Implementation of abstract method\n\n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueFtuService\n\n                \n            \n            \n                \n                        Defined in         TissueFtuService:94\n\n                \n            \n\n\n            \n                \n                    Implementation of getReferenceOrgans method\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Any } from '@hra-ui/utils/types';\nimport { Observable, of } from 'rxjs';\nimport { MOCK_TISSUE_DATA } from '../tissue-library/tissue-library.mock';\nimport { ReferenceOrgan, TissueFtuService } from './tissue-ftu.service';\n\n/** Test whether an object is a reference organ */\nfunction isReferenceOrgan(obj: Any): obj is ReferenceOrgan {\n  return !!obj['object']['file'];\n}\n\n/** Helper for creating summary data */\nfunction createCell(\n  cid: string,\n  clabel: string,\n  bid: string,\n  blabel: string,\n  count: number,\n  percentage: number,\n  meanExpression: number,\n  metadata: { label: string; value: string }[][] = []\n) {\n  return {\n    cell: {\n      id: cid,\n      label: clabel,\n    },\n    biomarker: {\n      id: bid,\n      label: blabel,\n    },\n    count,\n    percentage,\n    meanExpression,\n    metadata,\n  };\n}\n\n/** Reference organs */\nconst MOCK_REFERENCE_ORGANS = Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan);\n\n/** Mock summary data */\nexport const MOCK_SUMMARIES = {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 1.0, 1.0, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2, 0.3),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2, 0.3),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3, 0.5),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1, 0.3),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1, 1.0),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4, 0.3),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2, 0.1),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7, 0.3),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4, 0.3),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5, 0.3),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1, 0.7),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1, 0.4),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1, 0.9),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1, 0.9)],\n  },\n  summary3: {\n    label: 'Summary 3',\n    entries: [],\n  },\n};\n\n/** Implementation of TissueFtuService */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueFtuService extends TissueFtuService {\n  /** Implementation of getReferenceOrgans method */\n  getReferenceOrgans(): Observable {\n    return of(MOCK_REFERENCE_ORGANS);\n  }\n\n  /** Implementation of abstract method */\n  getCellSummaries(): Observable {\n    return of(MOCK_SUMMARIES);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueLibraryService.html":{"url":"injectables/MockTissueLibraryService.html","title":"injectable - MockTissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock implementation of TissueLibraryService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueLibraryService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueLibraryService\n\n                \n            \n            \n                \n                        Defined in         TissueLibraryService:162\n\n                \n            \n\n\n            \n                \n                    Implementation of TissueLibraryService.getTissueLibrary\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createLinkId } from '@hra-ui/cdk/state';\nimport { Observable, of } from 'rxjs';\nimport { TissueLibraryService } from './tissue-library.service';\nimport { Tissue, TissueLibrary } from './tissue-library.model';\nimport { Iri, Url } from '../shared/common.model';\n\n/**\n * Extended tissue\n */\ninterface ExtendedTissue extends Tissue {\n  /** Base Id */\n  representation_of: string;\n  /** Objecy to stoe the file URL */\n  object: {\n    file: Url;\n  };\n}\n\n/** Create a new id from a label */\nfunction createNodeId(label: string, parent: string): string {\n  return `${parent}${label.replace(/ /g, '_')}/`;\n}\n\n/** Create a new node */\nfunction defineNode(\n  label: string,\n  parent: string,\n  url?: string,\n  ...children: [label: string, url: string][]\n): Record {\n  const id = createNodeId(label, parent);\n  const childNodes = children.reduce(\n    (acc, [childLabel, childUrl]) => ({\n      ...acc,\n      ...defineNode(childLabel, id, childUrl),\n    }),\n    {}\n  );\n  const node = {\n    '@type': '',\n    '@id': id,\n    id,\n    parent,\n    label,\n    synonymLabels: [],\n    link: url && createLinkId('FTU'),\n    representation_of: id,\n    object: {\n      file: url,\n    },\n    children: Object.keys(childNodes),\n  };\n\n  return { [id]: node, ...childNodes };\n}\n\n/** Base node id */\nconst BASE_ID = 'https://purl.humanatlas.io/2d-ftu/';\n\n/** Mock tissue data */\nexport const MOCK_TISSUE_DATA = {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n};\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissueLibrary} */\n  override getTissueLibrary(): Observable {\n    return of(MOCK_TISSUE_DATA as TissueLibrary);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueFtuService.html":{"url":"injectables/TissueFtuService.html","title":"injectable - TissueFtuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueFtuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-ftu/tissue-ftu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract Service to fetch reference organs\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCellSummaries\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellSummaries\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellSummaries(id)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:22\n                \n            \n\n\n            \n                \n                    Get summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-ftu/tissue-ftu.service.ts:19\n                \n            \n\n\n            \n                \n                    abstract Method to fetch reference organs\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\nexport type ReferenceOrgan = z.infer;\n\n/** Reference organ type */\nexport const REFERENCE_ORGAN = z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n});\n\n/** Abstract Service to fetch reference organs */\n@Injectable()\nexport abstract class TissueFtuService {\n  /** abstract Method to fetch reference organs */\n  abstract getReferenceOrgans(): Observable;\n\n  /** Get summary data */\n  abstract getCellSummaries(id: unknown): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryService.html":{"url":"injectables/TissueLibraryService.html","title":"injectable - TissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for loading the tissue library\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getTissueLibrary\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueLibrary()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.service.ts:9\n                \n            \n\n\n            \n                \n                    Loads the entire tissue library\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TissueLibrary } from './tissue-library.model';\n\n/** Service for loading the tissue library */\n@Injectable()\nexport abstract class TissueLibraryService {\n  /** Loads the entire tissue library */\n  abstract getTissueLibrary(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createCell   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            createNodeId   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            defineNode   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            isReferenceOrgan   (src/.../tissue-ftu.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCell\n                        \n                    \n                \n            \n            \n                \ncreateCell(cid: string, clabel: string, bid: string, blabel: string, count: number, percentage: number, meanExpression: number, metadata)\n                \n            \n\n\n\n\n            \n                \n                    Helper for creating summary data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    cid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    clabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    bid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    blabel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    percentage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    meanExpression\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    metadata\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isReferenceOrgan\n                        \n                    \n                \n            \n            \n                \nisReferenceOrgan(obj: Any)\n                \n            \n\n\n\n\n            \n                \n                    Test whether an object is a reference organ\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                Any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ReferenceOrgan\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createNodeId\n                        \n                    \n                \n            \n            \n                \ncreateNodeId(label: string, parent: string)\n                \n            \n\n\n\n\n            \n                \n                    Create a new id from a label\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defineNode\n                        \n                    \n                \n            \n            \n                \ndefineNode(label: string, parent: string, url?: string, ...children: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Create a new node\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    children\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nservices\nThis library was generated with Nx.\nRunning unit tests\nRun nx test services to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Biomarker   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Cell   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Cell_Summary   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CellSourceItem   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CellSummary   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CellSummaryRow   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DataFileReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Datasets   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            dataSources   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            Graph   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IdItem   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IllusrationFiles   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IllustrationMappingItem   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Illustrations   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            Iri   (src/.../common.model.ts)\n                        \n                        \n                            ReferenceOrgan   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SourceReference   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Tissue   (src/.../ftu-data.model.ts)\n                        \n                        \n                            Tissue   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TissueLibrary   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TissueLibrary   (src/.../tissue-library.model.ts)\n                        \n                        \n                            Url   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n    \n        \n            \n                \n                    \n                    Biomarker\n                \n            \n            \n                \n                    Type for a Biomarker\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Cell\n                \n            \n            \n                \n                    Type for a cell\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummary\n                \n            \n            \n                \n                    Type for a CellSummary\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSummaryRow\n                \n            \n            \n                \n                    Type for a CellSummaryRow\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataFileReference\n                \n            \n            \n                \n                    Type for a DataFileReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IllustrationMappingItem\n                \n            \n            \n                \n                    Type for a IllustrationMappingItem\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SourceReference\n                \n            \n            \n                \n                    Type for a SourceReference\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tissue\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibrary\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/ftu-data/ftu-data.impl.ts\n    \n    \n        \n            \n                \n                    \n                    Cell_Summary\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CellSourceItem\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Datasets\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    dataSources\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Graph\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IdItem\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IllusrationFiles\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Illustrations\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/shared/common.model.ts\n    \n    \n        \n            \n                \n                    \n                    Iri\n                \n            \n            \n                \n                    Same as an Url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Url\n                \n            \n            \n                \n                    Any url\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n    \n        \n            \n                \n                    \n                    ReferenceOrgan\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    src/lib/tissue-library/tissue-library.model.ts\n    \n    \n        \n            \n                \n                    \n                    Tissue\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueLibrary\n                \n            \n            \n                \n                    Type for Tissue\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_ID   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            BASE_IRI   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            BIOMARKER   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SOURCE_ITEM   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CELL_SUMMARIES   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            CELL_SUMMARY   (src/.../ftu-data.model.ts)\n                        \n                        \n                            CELL_SUMMARY_DATA   (src/.../ftu-data.mock.ts)\n                        \n                        \n                            CELL_SUMMARY_ROW   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_INTEGER_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            COUNT_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DATA_FILE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            DATASETS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            FTU_DATA_IMPL_ENDPOINTS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            FTU_DATA_IMPL_FILE_FORMAT_MAPPING   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            ID_ITEM   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            ILLUSTRATION_MAPPING_ITEM   (src/.../ftu-data.model.ts)\n                        \n                        \n                            ILLUSTRATIONS   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            IRI   (src/.../common.model.ts)\n                        \n                        \n                            MOCK_REFERENCE_ORGANS   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_SUMMARIES   (src/.../tissue-ftu.mock.ts)\n                        \n                        \n                            MOCK_TISSUE_DATA   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            PERCENTAGE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            PERCENTAGE_RANGE_ERROR   (src/.../ftu-data.model.ts)\n                        \n                        \n                            REFERENCE_ORGAN   (src/.../tissue-ftu.service.ts)\n                        \n                        \n                            SOURCE_REFERENCE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            sourceReferences   (src/.../ftu-data.mock.ts)\n                        \n                        \n                            TISSUE   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TISSUE   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TISSUE_LIBRARY   (src/.../ftu-data.model.ts)\n                        \n                        \n                            TISSUE_LIBRARY   (src/.../tissue-library.model.ts)\n                        \n                        \n                            TISSUE_LINK   (src/.../ftu-data.impl.ts)\n                        \n                        \n                            URL   (src/.../common.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://purl.humanatlas.io/2d-ftu/'\n                    \n                \n\n            \n                \n                    Base node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_TISSUE_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  root: BASE_ID as Iri,\n  nodes: Object.assign(\n    {},\n    defineNode(\n      'Kidney',\n      BASE_ID,\n      undefined,\n      [\n        'Descending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-descending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Renal Corpuscle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-renal-corpuscle.svg',\n      ],\n      [\n        'Ascending Thin Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-ascending-thin-loop-of-henle.svg',\n      ],\n      [\n        'Cortical Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-cortical-collecting-duct.svg',\n      ],\n      [\n        'Inner Medullary Collecting Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-inner-medullary-collecting-duct.svg',\n      ],\n      ['Nephron', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-nephron.svg'],\n      [\n        'Outer Medullary Collectiong Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-outer-medullary-collecting-duct.svg',\n      ],\n      [\n        'Thick Ascending Loop of Henle',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-kidney-thick-ascending-loop-of-henle.svg',\n      ]\n    ),\n    defineNode(\n      'Lung',\n      BASE_ID,\n      undefined,\n      [\n        'Pulmonary Alveolus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-pulmonary-alveolus.svg',\n      ],\n      [\n        'Bronchial Submucosal Gland',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-lung-bronchial-submucosal-gland.svg',\n      ]\n    ),\n    defineNode('Large Intestine', BASE_ID, undefined, [\n      'Crypt Lieberkuhn',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-large-intestine-crypt-lieberkuhn.svg',\n    ]),\n    defineNode(\n      'Pancreas',\n      BASE_ID,\n      undefined,\n      [\n        'Islates Langerhans',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-islets-langerhans.svg',\n      ],\n      [\n        'Intercalated Duct',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-intercalated-duct.svg',\n      ],\n      [\n        'Pancreatic Acinus',\n        'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-pancreas-pancreatic-acinus.svg',\n      ]\n    ),\n    defineNode(\n      'Skin',\n      BASE_ID,\n      undefined,\n      ['Dermal Papilla', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-dermal-papilla.svg'],\n      ['Epidermal Ridge', 'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-skin-epidermal-ridge.svg']\n    ),\n    defineNode('Liver', BASE_ID, undefined, [\n      'Liver Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-liver-liver-lobule.svg',\n    ]),\n    defineNode('Prostate', BASE_ID, undefined, [\n      'Prostate Glandular Acinus',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-prostate-prostate-glandular-acinus.svg',\n    ]),\n    defineNode('Thymus', BASE_ID, undefined, [\n      'Thymus Lobule',\n      'https://hubmapconsortium.github.io/ccf-releases/v1.3/2d-ftu/2d-ftu-thymus-thymus-lobule.svg',\n    ])\n  ) as Record,\n}\n                    \n                \n\n            \n                \n                    Mock tissue data\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.impl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 'https://purl.humanatlas.io/2d-ftu/' as Iri\n                    \n                \n\n            \n                \n                    Provides Base/root url for the tissue tree\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SOURCE_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell_source: IRI,\n})\n                    \n                \n\n            \n                \n                    Base CELL_SOURCE_ITEM Object  having cell_source\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': CELL_SOURCE_ITEM.extend({\n    cell_source: IRI,\n    biomarker_type: z.string(),\n    summary: z\n      .object({\n        cell_id: IRI,\n        cell_label: z.string(),\n        gene_id: IRI,\n        gene_label: z.string(),\n        mean_expression: z.number(),\n        count: z.number(),\n        percentage: z.number(),\n        dataset_count: z.number().optional(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    CELL_SUMMARIES zod Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATASETS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    data_sources: z\n      .object({\n        label: z.string(),\n        description: z.string(),\n        link: z.string(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    DATASETS Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FTU_DATA_IMPL_ENDPOINTS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Endpoints')\n                    \n                \n\n            \n                \n                    Constant  to read the endpoints\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FTU_DATA_IMPL_FILE_FORMAT_MAPPING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('Mapping of file formats', {\n  providedIn: 'root',\n  factory: () => ({\n    'image/svg+xml': 'svg',\n    'image/png': 'png',\n    'application/pdf': 'ai',\n  }),\n})\n                    \n                \n\n            \n                \n                    Input to different file formats supported\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ID_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@id': IRI,\n})\n                    \n                \n\n            \n                \n                    Base ID Object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ILLUSTRATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@graph': ID_ITEM.extend({\n    '@id': IRI,\n    label: z.string(),\n    organ_id: z.string(),\n    organ_label: z.string(),\n    representation_of: z.string(),\n    illustration_files: z\n      .object({\n        file: URL,\n        file_format: z.string(),\n      })\n      .array(),\n    mapping: z\n      .object({\n        svg_id: z.string(),\n        label: z.string(),\n        representation_of: z.string(),\n      })\n      .array(),\n  }).array(),\n})\n                    \n                \n\n            \n                \n                    ILLUSTRATIONS Object reflecting the format in the file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LINK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLinkId('FTU')\n                    \n                \n\n            \n                \n                    Creates clickable link for the tissue tree element\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BIOMARKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a BIOMARKER\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a cell object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  label: z.string(),\n  cells: CELL.array(),\n  biomarkers: BIOMARKER.array(),\n  summaries: CELL_SUMMARY_ROW.array(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_ROW\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  cell: IRI,\n  biomarker: IRI,\n  count: COUNT,\n  percentage: PERCENTAGE,\n  meanExpression: PERCENTAGE,\n  dataset_count: COUNT.optional(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a CELL_SUMMARY_ROW\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().int(COUNT_INTEGER_ERROR).nonnegative(COUNT_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A integer greater than or equal to zero\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_INTEGER_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be an integer'\n                    \n                \n\n            \n                \n                    Error message for non integer counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COUNT_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Count must be greater than or equal to 0'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_FILE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  format: z.string(),\n  url: URL,\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a DATA_FILE_REFERENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ILLUSTRATION_MAPPING_ITEM\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: z.string(),\n  label: z.string(),\n  ontologyId: z.string(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a ILLUSTRATION_MAPPING_ITEM\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.number().gte(0, PERCENTAGE_RANGE_ERROR).lte(1, PERCENTAGE_RANGE_ERROR)\n                    \n                \n\n            \n                \n                    A number between 0 and 1 inclusive\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERCENTAGE_RANGE_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Percentage must be between 0 and 1 (inclusive)'\n                    \n                \n\n            \n                \n                    Error message for negative counts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SOURCE_REFERENCE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  title: z.string(),\n  label: z.string(),\n  link: z.string().url(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a SOURCE_REFERENCE\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n  parent: IRI,\n  children: IRI.array().default([]),\n  link: z.string().optional(),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a tissue object\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LIBRARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE),\n})\n                    \n                \n\n            \n                \n                    Zod Schema for a tissue library object\n\n                \n            \n\n        \n    \n\n    src/lib/ftu-data/ftu-data.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CELL_SUMMARY_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CellSummary[]\n\n                    \n                \n                \n                    \n                        Default value : Object.values(MOCK_SUMMARIES).map((summary) => ({\n  label: summary.label,\n  cells: summary.entries.map((entry) => ({\n    id: entry.cell.id as Iri,\n    label: entry.cell.label,\n  })),\n  biomarkers: summary.entries.map((entry) => ({\n    id: entry.biomarker.id as Iri,\n    label: entry.biomarker.label,\n  })),\n  summaries: summary.entries.map((entry) => ({\n    cell: entry.cell.id as Iri,\n    biomarker: entry.biomarker.id as Iri,\n    count: entry.count,\n    percentage: entry.percentage,\n    meanExpression: entry.meanExpression,\n  })),\n}))\n                    \n                \n\n            \n                \n                    Dummy data extract om Mock Data of tissue mock\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceReferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n  {\n    title: 'Kidney Precision Medicine Project',\n    label: 'Ancillary Study Data, Clinical Data, HRT Codebook',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title: '[Dataset Owner Title]',\n    label: '',\n    link: 'google.com',\n  },\n  {\n    title:\n      '[Dataset Owner Title but extremely long and wraps around to the next line as you can see here in this example]',\n    label:\n      '',\n    link: 'google.com',\n  },\n]\n                    \n                \n\n            \n                \n                    Dummy data for Source References\n\n                \n            \n\n        \n    \n\n    src/lib/shared/common.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : URL.brand('IRI')\n                    \n                \n\n            \n                \n                    Same as an URL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.string().url().brand('URL')\n                    \n                \n\n            \n                \n                    Any url\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MOCK_REFERENCE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(MOCK_TISSUE_DATA.nodes).filter(isReferenceOrgan)\n                    \n                \n\n            \n                \n                    Reference organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MOCK_SUMMARIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  summary1: {\n    label: 'Summary 1',\n    entries: [\n      createCell('cell1', 'Cell 1', 'biomarker1', 'Biomarker 1', 10, 1.0, 1.0, [\n        [\n          { label: 'metadata 1', value: 'value of data' },\n          { label: 'metadata 2', value: 'value of data' },\n        ],\n        [{ label: 'metadata 3', value: 'value of data' }],\n      ]),\n      createCell('cell2', 'Cell 2', 'biomarker1', 'Biomarker 1', 5, 0.2, 0.3),\n      createCell('cell2', 'Cell 2', 'biomarker2', 'Biomarker 2', 5, 0.2, 0.3),\n      createCell('cell1', 'Cell 1', 'biomarker3', 'Biomarker 3', 15, 0.2, 0.3),\n      createCell('cell3', 'Cell 3', 'biomarker1', 'Biomarker 1', 11, 0.3, 0.5),\n      createCell('cell3', 'Cell 3', 'biomarker3', 'Biomarker 3', 11, 0.1, 0.3),\n      createCell('cell4', 'Cell 4', 'biomarker1', 'Biomarker 1', 2000, 0.1, 1.0),\n      createCell('cell5', 'Cell 5', 'biomarker1', 'Biomarker 1', 332, 0.4, 0.3),\n      createCell('cell6', 'Cell 6', 'biomarker3', 'Biomarker 3', 101, 0.2, 0.1),\n      createCell('cell7', 'Cell 7', 'biomarker1', 'Biomarker 1', 2, 0.5, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker2', 'Biomarker 2', 230, 0.4, 0.3),\n      createCell('cell7', 'Cell 7', 'biomarker3', 'Biomarker 3', 601, 0.7, 0.3),\n      createCell('cell8', 'Cell 8', 'biomarker1', 'Biomarker 1', 124, 0.5, 0.5),\n      createCell('cell8', 'Cell 8', 'biomarker2', 'Biomarker 2', 244, 0.3, 0.3),\n      createCell('cell9', 'Cell 9', 'biomarker1', 'Biomarker 1', 21, 0.4, 0.3),\n      createCell('cell10', 'Cell 10', 'biomarker2', 'Biomarker 2', 675, 0.5, 0.3),\n      createCell('cell11', 'Cell 11', 'biomarker3', 'Biomarker 3', 57, 0.3, 0.3),\n      createCell('cell12', 'Cell 12', 'biomarker2', 'Biomarker 2', 45, 0.1, 0.7),\n      createCell('cell13', 'Cell 13', 'biomarker4', 'Biomarker 4', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker5', 'Biomarker 5', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker6', 'Biomarker 6', 45, 0.1, 0.4),\n      createCell('cell13', 'Cell 13', 'biomarker7', 'Biomarker 7', 45, 0.1, 0.3),\n      createCell('cell13', 'Cell 13', 'biomarker8', 'Biomarker 8', 45, 0.1, 0.9),\n    ],\n  },\n  summary2: {\n    label: 'Summary 2',\n    entries: [createCell('cell1', 'Cell 1', 'biomarker2', 'Biomarker 2', 20, 1, 0.9)],\n  },\n  summary3: {\n    label: 'Summary 3',\n    entries: [],\n  },\n}\n                    \n                \n\n            \n                \n                    Mock summary data\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-ftu/tissue-ftu.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFERENCE_ORGAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  representation_of: z.string(),\n  object: z.object({\n    file: z.string(),\n  }),\n})\n                    \n                \n\n            \n                \n                    Reference organ type\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-library/tissue-library.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TISSUE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  id: IRI,\n  label: z.string(),\n  parent: IRI,\n  children: IRI.array().default([]),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_LIBRARY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE),\n})\n                    \n                \n\n            \n                \n                    zod Schema Object for a Tissue Library\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
