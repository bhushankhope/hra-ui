var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ContactMessage.html",[0,1.215,1,1.215]],["body/interfaces/ContactMessage.html",[0,1.552,1,1.715,2,1.739,3,0.597,4,0.597,5,0.597,6,1.342,7,0.728,8,1.982,9,1.306,10,3.205,11,3.205,12,2.579,13,0.389,14,1.595,15,2.076,16,0.854,17,0.075,18,2.906,19,2.338,20,2.906,21,2.906,22,0.883,23,0.446,24,0.486,25,1.278,26,0.728,27,0.883,28,1.896,29,0.883,30,0.884,31,1.075,32,1.08,33,1.342,34,1.08,35,1.342,36,0.728,37,1.08,38,0.042,39,0.042]],["title/injectables/ContactService.html",[23,0.415,31,1]],["body/injectables/ContactService.html",[0,1.368,1,1.958,3,0.637,4,0.637,5,0.637,6,1.43,7,0.775,8,1.43,9,0.942,10,2.683,11,2.683,12,2.293,13,0.414,15,1.611,16,0.518,17,0.075,18,2.445,19,1.967,20,2.445,21,2.445,22,0.925,23,0.467,24,0.518,25,1.545,26,0.775,27,0.925,28,2.392,29,1.089,30,1.368,31,1.455,32,1.671,33,2.076,34,1.671,35,2.076,36,1.326,37,1.671,38,0.044,39,0.044,40,0.775,41,1.368,42,2.076,43,0.942,44,1.854,45,1.43,46,1.43,47,1.43]],["title/modules/HraServiceModule.html",[48,1.844,49,1.484]],["body/modules/HraServiceModule.html",[3,0.832,4,0.832,5,0.832,17,0.076,22,1.4,24,0.676,27,0.832,29,0.832,31,1.357,38,0.053,39,0.053,49,2.013,50,1.502,51,2.421,52,3.244,53,2.013,54,2.421,55,2.421,56,2.013,57,1.357,58,1.357,59,2.421,60,1.648,61,1.867,62,2.421,63,2.421,64,2.421,65,2.421,66,1.867,67,3.244,68,3.244]],["title/injectables/MockContactService.html",[23,0.415,53,1.484]],["body/injectables/MockContactService.html",[1,1.995,3,0.673,4,0.673,5,0.673,7,0.819,12,2.029,13,0.437,16,0.914,17,0.075,19,1.738,22,1.123,23,0.486,24,0.547,25,1.368,26,0.819,27,0.673,29,1.297,31,1.642,34,1.738,36,0.819,37,1.738,38,0.046,39,0.046,40,0.819,41,1.423,42,2.16,43,0.995,45,1.51,46,1.51,47,1.51,53,1.738,69,1.958,70,2.801,71,1.738,72,2.16,73,2.16,74,1.51,75,1.958,76,2.801,77,2.801,78,2.801,79,2.801,80,2.801,81,1.958,82,1.51,83,0.995,84,1.958,85,1.958,86,1.958,87,1.958,88,1.51]],["title/injectables/MockTissueLibraryService.html",[23,0.415,56,1.484]],["body/injectables/MockTissueLibraryService.html",[3,0.553,4,0.553,5,0.553,7,0.673,13,0.359,16,0.815,17,0.076,22,1.002,23,0.421,24,0.45,25,1.22,26,0.673,27,0.553,29,0.553,36,0.673,38,0.039,39,0.039,40,0.673,41,1.232,43,0.818,56,1.505,57,1.014,58,0.673,60,1.86,61,1.241,71,1.81,72,2.504,73,1.87,74,1.241,82,1.241,83,1.232,88,1.241,89,0.818,90,1.241,91,2.504,92,1.609,93,2.424,94,0.999,95,0.999,96,0.818,97,1.241,98,1.241,99,1.241,100,1.241,101,0.999,102,2.25,103,2.25,104,2.272,105,1.81,106,1.81,107,2.25,108,1.81,109,1.81,110,2.824,111,2.25,112,2.25,113,1.81,114,2.504,115,2.504,116,2.424,117,1.609]],["title/injectables/TissueLibraryService.html",[23,0.415,60,1.215]],["body/injectables/TissueLibraryService.html",[3,0.511,4,0.511,5,0.511,7,0.622,9,1.16,13,0.332,15,0.756,16,1.116,17,0.076,22,0.955,23,0.396,24,0.416,25,1.407,26,0.622,27,1.27,28,2.204,29,0.955,30,1.412,32,1.417,36,1.162,38,0.037,39,0.037,40,0.622,41,1.16,43,0.756,57,1.162,58,0.955,60,1.584,83,1.16,89,1.16,91,2.405,94,0.923,95,1.935,96,1.16,97,2.144,101,1.417,104,1.725,105,1.417,106,0.923,109,0.923,113,1.417,118,0.923,119,1.487,120,1.487,121,1.487,122,2.368,123,2.144,124,2.144,125,1.761,126,1.147,127,1.935,128,1.147,129,1.147,130,1.147,131,1.147,132,1.147,133,1.147,134,1.147,135,1.147,136,1.147,137,1.761,138,1.761,139,1.761,140,1.147,141,1.147,142,1.147,143,1.147]],["title/dependencies.html",[144,1.558,145,1.777]],["body/dependencies.html",[17,0.073,24,0.918,38,0.064,39,0.064,145,2.444,146,3.284,147,3.284,148,3.284,149,3.284,150,3.937]],["title/index.html",[13,0.451,151,2.02,152,2.02]],["body/index.html",[17,0.064,38,0.064,39,0.064,66,3.011,153,3.237,154,3.237,155,3.903,156,3.237,157,3.903,158,3.903,159,3.237,160,3.237,161,3.237]],["title/modules.html",[50,1.997]],["body/modules.html",[17,0.066,38,0.066,39,0.066,49,2.148,50,2.148,162,3.461,163,3.461,164,3.461]],["title/overview.html",[165,2.481]],["body/overview.html",[0,1.657,17,0.064,38,0.064,39,0.064,40,1.364,48,2.515,108,2.433,145,2.433,165,2.515,166,3.92,167,3.261,168,3.261,169,3.261]],["title/properties.html",[14,1.777,144,1.558]],["body/properties.html",[14,2.165,17,0.07,38,0.066,39,0.066,170,3.488,171,3.488]],["title/miscellaneous/typealiases.html",[172,1.027,173,2.863]],["body/miscellaneous/typealiases.html",[13,0.617,16,1.149,17,0.058,38,0.058,39,0.058,57,1.479,58,1.155,89,1.403,95,2.421,96,1.403,118,2.553,122,2.553,123,3.009,124,3.009,125,3.009,126,2.13,127,2.195,172,1.403,174,2.762,175,3.009]],["title/miscellaneous/variables.html",[172,1.027,176,2.209]],["body/miscellaneous/variables.html",[9,1.219,13,0.354,15,0.806,16,0.967,17,0.073,30,0.806,38,0.039,39,0.039,57,1.003,58,1.003,71,0.985,83,1.47,89,1.219,90,1.85,94,1.489,96,1.219,98,1.85,99,1.224,100,1.224,101,1.795,102,2.231,103,2.231,104,2.473,105,2.149,106,2.001,107,2.231,108,1.795,109,2.001,110,2.808,111,2.231,112,2.231,113,2.149,114,2.486,115,2.486,118,2.001,122,2.26,127,1.489,128,1.224,129,1.224,130,1.224,131,1.224,132,1.224,133,1.224,134,1.224,135,1.224,136,1.224,137,2.231,138,1.85,139,1.85,140,1.224,141,1.224,142,1.224,143,1.224,172,0.806,175,2.486,176,1.224,177,3.224,178,3.224]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":171,"title":{},"body":{"properties.html":{}}}],["1",{"_index":108,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["15.1.0",{"_index":150,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":111,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":147,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":112,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":169,"title":{},"body":{"overview.html":{}}}],["abstract",{"_index":28,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{}}}],["accepted",{"_index":134,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["accepts",{"_index":19,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["aliases",{"_index":174,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular/common",{"_index":149,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{}}}],["argument",{"_index":35,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["available",{"_index":163,"title":{},"body":{"modules.html":{}}}],["browse",{"_index":164,"title":{},"body":{"modules.html":{}}}],["children",{"_index":113,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":29,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["console",{"_index":79,"title":{},"body":{"injectables/MockContactService.html":{}}}],["console.log('message",{"_index":84,"title":{},"body":{"injectables/MockContactService.html":{}}}],["const",{"_index":97,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["contact",{"_index":8,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["contact.service",{"_index":81,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contact/contact.mock",{"_index":54,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contact/contact.service",{"_index":55,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["contactmessage",{"_index":1,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["contactservice",{"_index":31,"title":{"injectables/ContactService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["contactservice:11",{"_index":75,"title":{},"body":{"injectables/MockContactService.html":{}}}],["content",{"_index":86,"title":{},"body":{"injectables/MockContactService.html":{}}}],["contents",{"_index":78,"title":{},"body":{"injectables/MockContactService.html":{}}}],["currently",{"_index":76,"title":{},"body":{"injectables/MockContactService.html":{}}}],["data",{"_index":96,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":43,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["defines",{"_index":9,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":145,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["email",{"_index":10,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["empty",{"_index":80,"title":{},"body":{"injectables/MockContactService.html":{}}}],["ensures",{"_index":129,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["entered",{"_index":20,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["execute",{"_index":161,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["extends",{"_index":73,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["generated",{"_index":154,"title":{},"body":{"index.html":{}}}],["getting",{"_index":151,"title":{"index.html":{}},"body":{}}],["gettissues",{"_index":91,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["graph",{"_index":162,"title":{},"body":{"modules.html":{}}}],["hraservicemodule",{"_index":49,"title":{"modules/HraServiceModule.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["http://example.com/node1",{"_index":102,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["http://example.com/node2",{"_index":114,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["http://example.com/node3",{"_index":115,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["http://example.com/root",{"_index":100,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":104,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":72,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infered",{"_index":123,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["inherited",{"_index":74,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["injectable",{"_index":23,"title":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["injectables",{"_index":40,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"overview.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ContactMessage.html":{}},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"overview.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ContactMessage.html":{}}}],["iri",{"_index":122,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iri.array",{"_index":142,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["iri.or(z.literal",{"_index":140,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":126,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["json.stringify(message",{"_index":87,"title":{},"body":{"injectables/MockContactService.html":{}}}],["label",{"_index":106,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":153,"title":{},"body":{"index.html":{}}}],["library.mock",{"_index":59,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["library.mock.ts",{"_index":90,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["library.service",{"_index":61,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["library.service.ts",{"_index":118,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["library.service.ts:50",{"_index":119,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["library/tissue",{"_index":58,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":116,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["logs",{"_index":77,"title":{},"body":{"injectables/MockContactService.html":{}}}],["marked",{"_index":133,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":39,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":12,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["method",{"_index":32,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{}}}],["methods",{"_index":41,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["miscellaneous",{"_index":172,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":71,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mock_tissue_data",{"_index":98,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["mockcontactservice",{"_index":53,"title":{"injectables/MockContactService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{}}}],["mocktissuelibraryservice",{"_index":56,"title":{"injectables/MockTissueLibraryService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{}}}],["module",{"_index":48,"title":{"modules/HraServiceModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":50,"title":{"modules.html":{}},"body":{"modules/HraServiceModule.html":{},"modules.html":{}}}],["name",{"_index":46,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["ngmodule",{"_index":52,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["node",{"_index":107,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nodes",{"_index":101,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":155,"title":{},"body":{"index.html":{}}}],["object",{"_index":34,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["observable",{"_index":25,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["of(mock_tissue_data",{"_index":117,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["optional",{"_index":47,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["out",{"_index":168,"title":{},"body":{"overview.html":{}}}],["overview",{"_index":165,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":144,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":45,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["parent",{"_index":105,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["peer",{"_index":148,"title":{},"body":{"dependencies.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"interfaces/ContactMessage.html":{},"properties.html":{}}}],["provide",{"_index":67,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["providedin",{"_index":82,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["providers",{"_index":62,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["real",{"_index":65,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["received",{"_index":85,"title":{},"body":{"injectables/MockContactService.html":{}}}],["replace",{"_index":64,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["representing",{"_index":30,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":70,"title":{},"body":{"injectables/MockContactService.html":{}}}],["reset",{"_index":167,"title":{},"body":{"overview.html":{}}}],["results",{"_index":38,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":88,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{}}}],["returns",{"_index":36,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["root",{"_index":83,"title":{},"body":{"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["roottype",{"_index":103,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":159,"title":{},"body":{"index.html":{}}}],["running",{"_index":156,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":26,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["schema",{"_index":127,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sendmessage",{"_index":42,"title":{},"body":{"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["sendmessage(message",{"_index":37,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{}}}],["services",{"_index":66,"title":{},"body":{"modules/HraServiceModule.html":{},"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"modules/HraServiceModule.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["specifically",{"_index":132,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["src/.../tissue",{"_index":175,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/contact/contact.mock.ts",{"_index":69,"title":{},"body":{"injectables/MockContactService.html":{}}}],["src/lib/contact/contact.service.ts",{"_index":6,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["src/lib/contact/contact.service.ts:18",{"_index":44,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/lib/service.module.ts",{"_index":51,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["src/lib/tissue",{"_index":89,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":152,"title":{"index.html":{}},"body":{}}],["string",{"_index":15,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":11,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["synonmynlabels",{"_index":136,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["synonym",{"_index":110,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["synonymlabels",{"_index":109,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["takes",{"_index":33,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["test",{"_index":160,"title":{},"body":{"index.html":{}}}],["tests",{"_index":158,"title":{},"body":{"index.html":{}}}],["tissue",{"_index":57,"title":{},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tissue_data_schema",{"_index":94,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue_data_schema.parse",{"_index":99,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissue_item_schema",{"_index":137,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["tissuedata",{"_index":95,"title":{},"body":{"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissueitem",{"_index":125,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["tissuelibraryservice",{"_index":60,"title":{"injectables/TissueLibraryService.html":{}},"body":{"modules/HraServiceModule.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{}}}],["tissuelibraryservice.gettissues",{"_index":93,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["tissuelibraryservice:45",{"_index":92,"title":{},"body":{"injectables/MockTissueLibraryService.html":{}}}],["todo",{"_index":63,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["tslib",{"_index":146,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{},"injectables/MockContactService.html":{},"injectables/MockTissueLibraryService.html":{},"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":173,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unit",{"_index":157,"title":{},"body":{"index.html":{}}}],["urls",{"_index":131,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["useexisting",{"_index":68,"title":{},"body":{"modules/HraServiceModule.html":{}}}],["user",{"_index":21,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["valid",{"_index":130,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":128,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":18,"title":{},"body":{"interfaces/ContactMessage.html":{},"injectables/ContactService.html":{}}}],["variables",{"_index":176,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":170,"title":{},"body":{"properties.html":{}}}],["z",{"_index":120,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["z.infer",{"_index":124,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/typealiases.html":{}}}],["z.object",{"_index":138,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.record(iri",{"_index":143,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string",{"_index":139,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string().array",{"_index":141,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["z.string().url().brand('iri",{"_index":135,"title":{},"body":{"injectables/TissueLibraryService.html":{},"miscellaneous/variables.html":{}}}],["zod",{"_index":121,"title":{},"body":{"injectables/TissueLibraryService.html":{}}}],["zoom",{"_index":166,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ContactMessage.html":{"url":"interfaces/ContactMessage.html","title":"interface - ContactMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContactMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A interface contact which defines email, subject, and the message.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable email which accepts the email entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable message which accepts the message entered by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A variable subject which accepts the subject entered by user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a ContactService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/contact/contact.service.ts:18\n                \n            \n\n\n            \n                \n                    This method takes a ContactMessage object as an argument and returns an Observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/** A interface contact which defines email, subject, and the message. */\nexport interface ContactMessage {\n  /** A variable email which accepts the email entered by user */\n  email: string;\n  /** A variable subject which accepts the subject entered by user */\n  subject: string;\n  /** A variable message which accepts the message entered by user */\n  message: string;\n}\n\n/** An abstract class representing a ContactService */\n@Injectable()\nexport abstract class ContactService {\n  /** This method takes a ContactMessage object as an argument and returns an Observable  */\n  abstract sendMessage(message: ContactMessage): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HraServiceModule.html":{"url":"modules/HraServiceModule.html","title":"module - HraServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    HraServiceModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/service.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MockContactService } from './contact/contact.mock';\nimport { ContactService } from './contact/contact.service';\nimport { MockTissueLibraryService } from './tissue-library/tissue-library.mock';\nimport { TissueLibraryService } from './tissue-library/tissue-library.service';\n\n@NgModule({\n  providers: [\n    // TODO replace with real services\n    {\n      provide: ContactService,\n      useExisting: MockContactService,\n    },\n    {\n      provide: TissueLibraryService,\n      useExisting: MockTissueLibraryService,\n    },\n  ],\n})\nexport class HraServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockContactService.html":{"url":"injectables/MockContactService.html","title":"injectable - MockContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/contact/contact.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents mock implementation of the ContactService class.\n\n            \n\n            \n                Extends\n            \n            \n                        ContactService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(message: ContactMessage)\n                \n            \n\n\n            \n                \n                    Inherited from         ContactService\n\n                \n            \n            \n                \n                        Defined in         ContactService:11\n\n                \n            \n\n\n            \n                \n                    It accepts an object of type ContactMessage and currently logs the message contents on the console.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                ContactMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { ContactMessage, ContactService } from './contact.service';\n\n/** This class represents mock implementation of the ContactService class. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockContactService extends ContactService {\n  /** It accepts an object of type ContactMessage and currently logs the message contents on the console. */\n  sendMessage(message: ContactMessage): Observable {\n    console.log('Message received. Content: ' + JSON.stringify(message));\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockTissueLibraryService.html":{"url":"injectables/MockTissueLibraryService.html","title":"injectable - MockTissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MockTissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.mock.ts\n        \n\n\n            \n                Description\n            \n            \n                Mock implementation of TissueLibraryService\n\n            \n\n            \n                Extends\n            \n            \n                        TissueLibraryService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTissues\n                        \n                    \n                \n            \n            \n                \ngetTissues()\n                \n            \n\n\n            \n                \n                    Inherited from         TissueLibraryService\n\n                \n            \n            \n                \n                        Defined in         TissueLibraryService:45\n\n                \n            \n\n\n            \n                \n                    Implementation of TissueLibraryService.getTissues\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { TISSUE_DATA_SCHEMA, TissueData, TissueLibraryService } from './tissue-library.service';\n\n/** Mock tissue data */\nconst MOCK_TISSUE_DATA = TISSUE_DATA_SCHEMA.parse({\n  root: 'http://example.com/root',\n  nodes: {\n    'http://example.com/node1': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node1',\n      id: 'http://example.com/node1',\n      parent: '',\n      label: 'Node 1',\n      synonymLabels: ['Synonym 1', 'Synonym 2', 'Synonym 3'],\n      children: ['http://example.com/node2', 'http://example.com/node3'],\n    },\n    'http://example.com/node2': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node2',\n      id: 'http://example.com/node2',\n      parent: '',\n      label: 'Node 2',\n      synonymLabels: ['Synonym 1', 'Synonym 2', 'Synonym 3'],\n      children: [],\n    },\n    'http://example.com/node3': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node3',\n      id: 'http://example.com/node3',\n      parent: '',\n      label: 'Node 3',\n      synonymLabels: [],\n      children: [],\n    },\n  },\n});\n\n/** Mock implementation of {@link TissueLibraryService} */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockTissueLibraryService extends TissueLibraryService {\n  /** Implementation of {@link TissueLibraryService.getTissues} */\n  getTissues(): Observable {\n    return of(MOCK_TISSUE_DATA);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TissueLibraryService.html":{"url":"injectables/TissueLibraryService.html","title":"injectable - TissueLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TissueLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/tissue-library/tissue-library.service.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class representing a TissueLibraryService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getTissues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissues()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/tissue-library/tissue-library.service.ts:50\n                \n            \n\n\n            \n                \n                    This method returns an Observable of the type of TissueData\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { z } from 'zod';\n\n/**\n * A type of Iri which is infered from the IRI\n */\nexport type Iri = z.infer;\n\n/**\n * A type of TissueItem which is infered from the Tissue Item Schema\n */\nexport type TissueItem = z.infer;\n\n/**\n * A type of TissueData which is infered from the Tissue Data Schema\n */\nexport type TissueData = z.infer;\n\n/**\n * A validator that ensures string representing valid URLS, specifically marked as IRI are accepted\n */\nexport const IRI = z.string().url().brand('IRI');\n\n/**\n * Tissue data schema which defines the type, id, parent, synonmynLabels and children\n */\nexport const TISSUE_ITEM_SCHEMA = z.object({\n  '@type': z.string(),\n  '@id': IRI,\n  id: IRI,\n  parent: IRI.or(z.literal('')),\n  label: z.string(),\n  synonymLabels: z.string().array(),\n  children: IRI.array(),\n});\n\n/**\n * A Schema which defines the root and its nodes\n */\nexport const TISSUE_DATA_SCHEMA = z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE_ITEM_SCHEMA),\n});\n\n/** An abstract class representing a TissueLibraryService*/\n@Injectable()\nexport abstract class TissueLibraryService {\n  /** This method returns an Observable of the type of TissueData */\n  abstract getTissues(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nservices\nThis library was generated with Nx.\nRunning unit tests\nRun nx test services to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        HraServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Iri   (src/.../tissue-library.service.ts)\n                        \n                        \n                            TissueData   (src/.../tissue-library.service.ts)\n                        \n                        \n                            TissueItem   (src/.../tissue-library.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.service.ts\n    \n    \n        \n            \n                \n                    \n                    Iri\n                \n            \n            \n                \n                    A type of Iri which is infered from the IRI\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueData\n                \n            \n            \n                \n                    A type of TissueData which is infered from the Tissue Data Schema\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TissueItem\n                \n            \n            \n                \n                    A type of TissueItem which is infered from the Tissue Item Schema\n\n                \n            \n            \n                \n                        z.infer<>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IRI   (src/.../tissue-library.service.ts)\n                        \n                        \n                            MOCK_TISSUE_DATA   (src/.../tissue-library.mock.ts)\n                        \n                        \n                            TISSUE_DATA_SCHEMA   (src/.../tissue-library.service.ts)\n                        \n                        \n                            TISSUE_ITEM_SCHEMA   (src/.../tissue-library.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/tissue-library/tissue-library.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IRI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.string().url().brand('IRI')\n                    \n                \n\n            \n                \n                    A validator that ensures string representing valid URLS, specifically marked as IRI are accepted\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_DATA_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  root: IRI,\n  nodes: z.record(IRI, TISSUE_ITEM_SCHEMA),\n})\n                    \n                \n\n            \n                \n                    A Schema which defines the root and its nodes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TISSUE_ITEM_SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : z.object({\n  '@type': z.string(),\n  '@id': IRI,\n  id: IRI,\n  parent: IRI.or(z.literal('')),\n  label: z.string(),\n  synonymLabels: z.string().array(),\n  children: IRI.array(),\n})\n                    \n                \n\n            \n                \n                    Tissue data schema which defines the type, id, parent, synonmynLabels and children\n\n                \n            \n\n        \n    \n\n    src/lib/tissue-library/tissue-library.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MOCK_TISSUE_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TISSUE_DATA_SCHEMA.parse({\n  root: 'http://example.com/root',\n  nodes: {\n    'http://example.com/node1': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node1',\n      id: 'http://example.com/node1',\n      parent: '',\n      label: 'Node 1',\n      synonymLabels: ['Synonym 1', 'Synonym 2', 'Synonym 3'],\n      children: ['http://example.com/node2', 'http://example.com/node3'],\n    },\n    'http://example.com/node2': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node2',\n      id: 'http://example.com/node2',\n      parent: '',\n      label: 'Node 2',\n      synonymLabels: ['Synonym 1', 'Synonym 2', 'Synonym 3'],\n      children: [],\n    },\n    'http://example.com/node3': {\n      '@type': 'RootType',\n      '@id': 'http://example.com/node3',\n      id: 'http://example.com/node3',\n      parent: '',\n      label: 'Node 3',\n      synonymLabels: [],\n      children: [],\n    },\n  },\n})\n                    \n                \n\n            \n                \n                    Mock tissue data\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
