var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AS.html",[0,0.515]],["body/interfaces/AS.html",[0,0.794,1,1.012,2,0.031,3,0.031,4,0.027,5,2.322,6,4.395,7,4.424,8,0.18,9,0.35,10,1.404,11,2.094,12,3.972,13,2.879,14,1.861,15,2.693,16,2.658,17,3.972,18,2.731,19,4.288,20,0.713,21,0.366,22,0.005,23,3.748,24,1.426,25,0.225,26,2.19,27,1.832,28,1.773,29,0.061,30,2.385,31,2.322,32,1.969,33,2.322,34,2.172,35,2.322,36,2.22,37,2.378,38,1.803,39,1.323,40,2.045,41,1.739,42,2.378,43,1.969,44,0.088,45,2.006,46,1.846,47,1.247,48,0.618,49,4.092,50,1.673,51,2.128,52,2.322,53,2.624,54,3.088,55,2.006,56,3.936,57,2.172,58,2.312,59,2.797,60,2.797,61,3.382,62,3.467,63,3.467,64,0.591,65,3.467,66,2.378,67,2.437,68,2.085,69,2.437,70,2.085,71,3.452,72,2.437,73,2.085,74,2.085,75,1.05,76,3.523,77,2.128,78,3.321,79,4.035,80,2.085,81,2.437,82,2.378,83,2.437,84,2.437,85,2.128,86,2.128,87,1.969,88,1.959,89,2.378,90,2.437,91,2.437,92,2.437,93,2.437,94,1.147,95,1.727,96,2.966,97,1.254,98,1.865,99,2.128,100,1.803,101,3.467,102,1.588,103,3.467,104,2.437,105,2.378,106,3.936,107,2.437,108,1.675,109,1.416,110,2.437,111,2.378,112,2.437,113,1.834,114,1.803,115,2.378,116,1.834,117,1.865,118,1.865,119,1.865,120,1.874,121,1.865,122,1.865,123,2.378,124,2.437,125,2.437,126,2.437,127,2.437,128,2.437,129,2.437,130,0.003,131,0.003]],["title/interfaces/ASCTBConfig.html",[0,0.41,89,2.669]],["body/interfaces/ASCTBConfig.html",[0,0.8,1,1.05,2,0.032,3,0.032,4,0.028,5,2.409,6,4.117,7,4.256,8,0.187,9,0.36,10,1.344,11,2.025,12,3.388,13,2.723,14,1.588,15,2.547,16,2.514,17,3.388,18,2.617,19,2.467,20,0.712,21,0.329,22,0.005,23,3.495,24,1.386,25,0.234,26,2.234,27,1.88,28,1.839,29,0.061,30,2.425,31,2.409,32,2.042,33,2.409,34,2.254,35,2.409,36,2.303,37,2.467,38,1.87,39,1.372,40,2.121,41,1.785,42,2.467,43,2.042,44,0.09,45,2.081,46,1.866,47,1.27,48,0.626,49,4.16,50,1.717,51,2.208,52,2.409,53,2.661,54,3.151,55,2.081,56,4.016,57,2.254,58,2.359,59,2.853,60,2.853,61,3.471,62,3.558,63,3.558,64,0.614,65,3.558,66,2.467,67,2.528,68,2.163,69,2.528,70,2.163,71,3.523,72,2.528,73,2.163,74,2.163,75,1.09,76,3.595,77,2.208,78,3.388,79,4.117,80,2.163,81,2.528,82,2.467,83,2.528,84,2.528,85,2.208,86,2.208,87,2.042,88,2.011,89,3.471,90,4.468,91,4.468,92,4.468,93,4.468,94,1.19,95,1.751,96,3.044,97,1.301,98,1.935,99,2.208,100,1.87,101,3.558,102,1.648,103,3.558,104,2.528,105,2.467,106,4.016,107,2.528,108,1.71,109,1.469,110,2.528,111,2.467,112,2.528,113,1.902,114,1.87,115,2.467,116,1.902,117,1.935,118,1.935,119,1.935,120,1.913,121,1.935,122,1.935,123,2.467,124,2.528,125,2.528,126,2.528,127,2.528,128,2.528,129,2.528,130,0.003,131,0.003]],["title/interfaces/ASCTD.html",[0,0.41,132,3.397]],["body/interfaces/ASCTD.html",[0,0.75,1,1.25,2,0.038,3,0.038,4,0.033,8,0.222,9,0.405,10,1.262,11,1.782,12,3.3,13,1.678,14,1.161,15,2.352,16,2.321,17,3.3,20,0.691,21,0.359,22,0.005,23,2.87,24,0.831,25,0.371,26,2.176,27,2.119,28,2.19,29,0.059,30,2.717,32,2.432,38,2.227,40,2.526,41,1.51,44,0.066,46,1.119,47,1.253,48,0.616,50,2.176,51,2.629,53,2.266,54,2.304,55,2.478,58,2.297,59,3.125,60,3.125,64,0.731,68,2.576,70,2.576,71,2.576,73,2.576,75,2.158,76,2.629,77,2.629,78,2.478,80,2.576,85,2.629,86,2.629,87,4.045,88,2.548,94,1.416,95,1.862,96,4.114,97,1.55,99,2.629,100,2.227,102,2.614,130,0.003,131,0.003,132,4.979,133,3.738,134,6.222,135,3.833,136,6.222,137,5.97,138,4.121,139,3.174,140,4.979,141,2.388,142,3.09,143,3.09,144,3.174,145,3.266,146,1.773,147,4.106,148,5.392,149,3.367,150,3.367,151,3.6,152,3.896,153,3.477,154,3.896,155,3.896,156,3.896,157,3.896,158,3.477,159,3.896,160,3.896,161,3.896,162,3.738,163,3.738,164,3.896,165,3.896,166,3.896,167,3.09,168,3.477,169,3.6,170,3.477,171,3.6,172,3.6,173,3.6,174,1.933,175,1.905,176,1.905,177,1.905,178,1.905,179,3.239,180,4.795,181,3.18,182,3.477,183,1.176]],["title/modules/AnalyticsModule.html",[184,1.108,185,3.541]],["body/modules/AnalyticsModule.html",[0,0.503,2,0.042,3,0.042,4,0.037,10,0.88,20,0.576,21,0.234,22,0.005,23,2.401,24,0.926,25,0.479,29,0.047,30,2.579,44,0.073,48,0.43,74,2.871,120,1.999,130,0.004,131,0.004,184,1.359,185,7.248,186,2.187,187,2.325,188,1.501,189,2.325,190,2.325,191,3.483,192,2.289,193,5.516,194,5.516,195,5.932,196,6.865,197,6.865,198,2.983,199,2.289,200,2.187,201,4.794,202,2.187,203,1.765,204,6.144,205,7.077,206,7.408,207,0.858,208,6.144,209,1.232,210,5.57,211,2.123,212,7.814,213,6.546,214,3.193,215,1.247,216,6.546,217,7.077,218,2.991,219,3.92,220,4.199,221,4.794,222,7.077,223,5.516,224,4.794,225,5.103,226,7.228,227,7.814,228,7.814,229,7.228,230,4.304,231,5.103,232,3.268,233,5.516,234,4.547,235,0.912,236,3.124,237,5.516,238,5.516,239,6.546,240,5.516,241,5.103,242,5.103,243,2.289,244,4.341,245,2.482,246,5.103,247,3.443,248,5.103,249,5.516]],["title/interfaces/AnalyticsOptions.html",[0,0.41,206,3.909]],["body/interfaces/AnalyticsOptions.html",[0,0.514,1,1.423,2,0.043,3,0.043,4,0.037,8,0.253,9,0.441,10,1.4,20,0.671,21,0.353,22,0.005,23,2.453,24,1.326,25,0.483,29,0.048,30,2.605,44,0.075,74,2.933,120,2.027,130,0.004,131,0.004,185,5.646,191,3.225,195,4.88,196,5.646,197,5.646,201,4.897,203,1.406,205,5.635,206,7.22,210,4.435,212,7.174,213,6.636,214,3.225,215,1.274,216,6.636,217,7.174,218,3.055,219,3.974,220,4.257,221,4.897,222,7.174,223,5.635,224,4.897,225,7.686,226,8.114,227,8.772,228,8.772,229,7.301,230,4.363,231,5.213,232,3.294,233,5.635,234,4.645,235,0.921,236,3.191,237,5.635,238,5.635,239,6.636,240,5.635,241,5.213,242,5.213,243,2.339,244,4.435,245,2.535,246,5.213,247,3.517,248,5.213,249,5.635]],["title/components/AppComponent.html",[250,1.355,251,1.99]],["body/components/AppComponent.html",[2,0.034,3,0.034,4,0.04,8,0.273,9,0.374,10,0.703,21,0.259,22,0.005,23,1.917,25,0.48,29,0.029,30,1.454,44,0.058,48,0.544,64,0.899,108,1.112,130,0.003,131,0.003,188,1.198,195,5.563,207,0.947,209,0.984,215,0.996,250,2.102,251,3.333,252,2.787,253,2.051,254,2.051,255,2.051,256,1.746,257,4.405,258,3.302,259,4.478,260,1.344,261,2.756,262,4.209,263,5.971,264,2.74,265,7.777,266,2.74,267,6.785,268,1.541,269,1.943,270,7.63,271,4.075,272,3.447,273,8.391,274,9.339,275,9.339,276,4.906,277,4.906,278,2.388,279,4.075,280,3.631,281,4.405,282,3.631,283,6.785,284,3.094,285,4.075,286,4.405,287,2.695,288,4.405,289,3.828,290,4.405,291,4.405,292,4.906,293,4.405,294,4.906,295,2.727,296,4.906,297,4.906,298,2.651,299,3.906,300,3.326,301,4.906,302,4.794,303,6.091,304,7.777,305,4.905,306,4.794,307,6.091,308,0.87,309,9.11,310,1.958,311,4.906,312,1.214,313,4.906,314,4.906,315,4.906,316,1.397,317,4.906,318,1.857,319,4.906,320,4.405,321,4.906,322,4.906,323,2.679,324,4.906,325,4.906,326,4.405,327,4.906,328,4.906,329,2.825,330,4.906,331,0.544,332,4.405,333,4.906,334,4.405,335,4.405,336,4.906,337,4.906,338,4.906,339,2.996,340,4.906,341,2.836,342,2.74,343,2.051,344,3.507,345,2.051,346,2.051,347,1.949,348,2.051,349,1.949,350,1.416,351,2.051,352,1.949,353,2.051,354,1.917,355,2.051,356,1.949,357,1.746,358,2.051,359,1.949,360,2.051,361,1.949,362,2.051,363,1.949,364,2.836,365,1.949,366,2.051,367,1.949,368,2.051,369,1.917,370,2.051,371,1.887,372,2.051,373,1.949,374,2.051,375,1.949,376,2.051,377,1.949,378,2.051,379,1.982,380,2.051,381,1.949,382,1.379,383,2.051,384,1.949,385,1.244,386,2.051,387,1.949,388,2.568,389,2.051,390,1.949,391,2.051,392,1.982,393,2.051,394,1.949,395,2.051,396,1.982,397,2.051,398,1.949,399,2.051,400,1.949,401,1.828,402,2.051,403,1.949,404,1.917,405,2.051,406,2.016,407,2.051,408,1.949,409,2.051,410,1.949,411,1.949,412,1.982,413,1.857,414,2.051,415,2.051]],["title/modules/AppModule.html",[184,1.108,416,3.909]],["body/modules/AppModule.html",[2,0.036,3,0.036,4,0.031,22,0.005,25,0.533,29,0.043,44,0.063,74,2.474,130,0.003,131,0.003,184,1.171,185,6.392,186,1.884,187,2.004,188,1.293,189,3.062,190,3.062,191,2.968,192,1.973,198,2.705,199,2.663,200,1.884,213,5.936,214,2.622,215,1.075,218,2.577,225,4.398,226,4.398,230,2.891,232,1.884,243,2.663,244,3.742,245,2.139,246,4.398,247,2.967,248,4.398,251,4.008,262,2.839,263,3.59,281,6.417,282,3.919,285,4.398,286,4.754,288,4.754,289,4.131,326,4.754,388,2.705,416,8.27,417,4.754,418,4.754,419,4.754,420,4.754,421,4.754,422,6.898,423,6.898,424,6.086,425,6.32,426,6.898,427,6.898,428,6.898,429,6.898,430,6.898,431,5.917,432,4.754,433,7.148,434,4.131,435,7.148,436,7.148,437,5.295,438,5.295,439,5.295,440,7.148,441,5.295,442,3.049,443,6.417,444,4.754,445,4.754,446,4.398,447,4.131,448,5.295,449,5.295,450,3.742,451,5.295,452,5.295,453,4.754,454,3.742,455,4.131,456,4.754,457,5.295,458,5.295,459,4.398,460,5.295,461,5.295,462,5.295,463,5.295,464,5.295,465,5.295,466,1.943,467,5.295,468,5.576,469,5.295,470,4.131,471,4.131,472,4.846,473,3.919,474,5.576,475,4.398,476,4.754,477,4.754,478,5.295,479,5.295,480,5.295,481,5.295,482,5.295,483,4.398,484,5.295,485,5.295,486,5.295,487,4.754]],["title/modules/AppRoutingModule.html",[184,1.108,422,3.708]],["body/modules/AppRoutingModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.504,29,0.043,30,2.156,44,0.087,130,0.004,131,0.004,186,2.589,192,2.71,214,3.212,215,1.477,243,2.71,250,2.739,284,4.588,318,2.753,354,3.67,357,2.589,369,3.421,394,3.872,412,2.938,422,6.479,488,6.531,489,7.275,490,7.328,491,6.479,492,7.275,493,7.275,494,7.275,495,6.868,496,7.275,497,7.275,498,7.275,499,7.275,500,7.275]],["title/interfaces/B.html",[0,0.41,98,2.094]],["body/interfaces/B.html",[0,0.792,1,0.998,2,0.03,3,0.03,4,0.026,5,2.291,6,4.368,7,4.401,8,0.178,9,0.347,10,1.4,11,2.089,12,3.954,13,2.869,14,1.545,15,2.684,16,2.649,17,3.954,18,2.723,19,2.346,20,0.713,21,0.373,22,0.005,23,3.737,24,1.421,25,0.222,26,2.507,27,1.814,28,1.749,29,0.061,30,2.371,31,2.291,32,1.942,33,2.291,34,2.143,35,2.291,36,2.19,37,2.346,38,1.779,39,1.305,40,2.017,41,1.722,42,2.346,43,1.942,44,0.087,45,1.979,46,1.839,47,1.251,48,0.616,49,4.067,50,1.657,51,2.099,52,2.291,53,2.611,54,3.066,55,1.979,56,3.907,57,2.143,58,2.295,59,2.776,60,2.776,61,3.35,62,3.434,63,3.434,64,0.583,65,3.434,66,2.346,67,2.405,68,2.057,69,2.405,70,2.057,71,3.427,72,2.405,73,2.057,74,2.057,75,1.036,76,3.497,77,2.099,78,3.296,79,4.005,80,2.057,81,2.405,82,2.346,83,2.405,84,2.405,85,2.099,86,2.099,87,1.942,88,2.611,89,2.346,90,2.405,91,2.405,92,2.405,93,2.405,94,1.131,95,1.88,96,3.953,97,1.238,98,2.628,99,3.814,100,1.779,101,3.434,102,1.567,103,3.434,104,2.405,105,2.346,106,3.907,107,2.405,108,1.663,109,1.397,110,2.405,111,2.346,112,2.405,113,1.809,114,1.779,115,2.346,116,1.809,117,1.841,118,1.841,119,1.841,120,1.86,121,1.841,122,1.841,123,2.346,124,2.405,125,2.405,126,2.405,127,2.405,128,2.405,129,2.405,130,0.003,131,0.003]],["title/classes/BMNode.html",[44,0.06,138,2.252]],["body/classes/BMNode.html",[0,0.696,2,0.031,3,0.031,4,0.027,8,0.18,9,0.351,10,1.416,11,1.963,12,3.619,13,2.251,14,1.557,15,2.59,16,2.556,17,3.619,20,0.701,21,0.399,22,0.005,23,3.147,24,0.958,25,0.321,26,2.191,27,2.133,28,1.775,29,0.057,30,2.521,32,1.97,38,1.804,40,2.047,41,1.223,44,0.053,46,1.501,47,1.271,48,0.65,50,2.397,51,3.525,53,2.281,54,3.09,55,3.323,58,2.313,59,3.442,60,3.442,64,0.842,68,2.087,70,2.087,71,2.087,73,2.087,75,1.495,76,2.13,77,2.13,78,2.008,80,2.087,85,2.13,86,2.13,87,4.012,88,2.807,94,1.148,95,1.501,96,4.343,97,2.078,99,3.525,100,1.804,102,2.261,130,0.003,131,0.003,132,3.029,133,3.029,134,3.157,135,2.655,136,3.157,137,4.307,138,3.619,139,2.572,140,4.307,141,1.935,142,2.503,143,2.503,144,2.572,145,2.647,146,1.437,147,4.523,148,5.938,149,4.515,150,4.515,151,2.917,152,3.157,153,2.817,154,3.157,155,3.157,156,3.157,157,3.157,158,2.817,159,3.157,160,3.157,161,3.157,162,3.029,163,3.029,164,3.157,165,3.157,166,3.157,167,2.503,168,2.817,169,2.917,170,2.817,171,2.917,172,2.917,173,2.917,174,1.566,175,1.543,176,1.543,177,1.543,178,1.543,179,2.802,180,4.148,181,2.751,182,2.817,183,0.952,207,1.453,209,0.896,235,0.666,308,1.127,501,1.013,502,4.011,503,6.353,504,4.468,505,4.468,506,4.468,507,4.468,508,4.468,509,4.468,510,4.468,511,4.468,512,4.468,513,4.468,514,4.468,515,4.468,516,4.468,517,4.468,518,4.468,519,4.468,520,4.468,521,4.468,522,4.468,523,4.468,524,4.468,525,4.468,526,4.468,527,4.468]],["title/interfaces/Base.html",[0,0.41,7,2.607]],["body/interfaces/Base.html",[0,0.8,1,1.05,2,0.032,3,0.032,4,0.028,5,2.409,6,4.117,7,4.486,8,0.187,9,0.36,10,1.344,11,2.025,12,3.388,13,2.723,14,1.588,15,2.547,16,2.514,17,3.388,18,2.617,19,2.467,20,0.713,21,0.329,22,0.005,23,3.495,24,1.386,25,0.234,26,2.234,27,1.88,28,1.839,29,0.061,30,2.425,31,2.409,32,2.042,33,2.409,34,2.254,35,2.409,36,2.303,37,2.467,38,1.87,39,1.372,40,2.121,41,1.785,42,2.467,43,2.042,44,0.09,45,2.081,46,1.962,47,1.257,48,0.626,49,4.16,50,1.717,51,2.208,52,2.409,53,2.661,54,3.151,55,2.081,56,4.016,57,2.254,58,2.359,59,2.853,60,2.853,61,4.594,62,4.709,63,4.709,64,0.614,65,3.558,66,2.467,67,2.528,68,2.163,69,2.528,70,2.163,71,3.523,72,2.528,73,2.163,74,2.163,75,1.09,76,3.595,77,2.208,78,3.388,79,4.117,80,2.163,81,2.528,82,2.467,83,2.528,84,2.528,85,2.208,86,2.208,87,2.042,88,2.011,89,2.467,90,2.528,91,2.528,92,2.528,93,2.528,94,1.19,95,1.751,96,3.044,97,1.301,98,1.935,99,2.208,100,1.87,101,3.558,102,1.648,103,3.558,104,2.528,105,2.467,106,4.016,107,2.528,108,1.71,109,1.469,110,2.528,111,2.467,112,2.528,113,1.902,114,1.87,115,2.467,116,1.902,117,1.935,118,1.935,119,1.935,120,1.913,121,1.935,122,1.935,123,2.467,124,2.528,125,2.528,126,2.528,127,2.528,128,2.528,129,2.528,130,0.003,131,0.003]],["title/interfaces/BimodalConfig.html",[0,0.41,179,2.21]],["body/interfaces/BimodalConfig.html",[0,0.754,1,1.27,2,0.039,3,0.039,4,0.033,8,0.226,9,0.41,11,1.796,12,3.335,13,1.705,14,1.18,15,2.37,16,2.339,17,3.335,20,0.692,21,0.374,22,0.005,23,2.9,24,0.845,25,0.375,26,2.199,27,2.141,28,2.225,29,0.06,30,2.732,32,2.47,38,2.262,40,2.566,41,2.427,44,0.067,46,1.137,47,1.246,48,0.62,50,2.193,51,2.67,53,2.29,54,2.341,55,2.517,58,2.322,59,3.15,60,3.15,64,0.742,68,2.617,70,2.617,71,2.617,73,2.617,75,1.746,76,2.67,77,2.67,78,2.517,80,2.617,85,2.67,86,2.67,87,4.066,88,2.568,94,2.276,95,1.69,96,4.14,97,1.574,99,2.67,100,2.262,102,2.641,130,0.003,131,0.003,132,3.797,133,3.797,134,3.958,135,3.102,136,3.958,137,5.031,138,3.74,139,3.225,140,5.031,141,2.426,142,3.139,143,3.139,144,3.225,145,3.318,146,1.802,147,4.139,148,5.434,149,3.42,150,3.42,151,3.657,152,3.958,153,3.532,154,3.958,155,3.958,156,3.958,157,3.958,158,3.532,159,3.958,160,3.958,161,3.958,162,3.797,163,3.797,164,3.958,165,3.958,166,3.958,167,3.139,168,3.532,169,3.657,170,3.532,171,3.657,172,3.657,173,3.657,174,1.964,175,1.935,176,1.935,177,1.935,178,1.935,179,3.671,180,4.845,181,3.214,182,3.532,183,1.194,528,5.785]],["title/interfaces/BimodalData.html",[0,0.41,182,3.16]],["body/interfaces/BimodalData.html",[0,0.753,1,1.266,2,0.038,3,0.038,4,0.033,8,0.225,9,0.409,11,1.793,12,3.328,13,1.699,14,1.176,15,2.366,16,2.335,17,3.328,20,0.692,21,0.351,22,0.005,23,2.893,24,0.842,25,0.374,26,2.194,27,2.137,28,2.217,29,0.06,30,2.729,32,2.462,38,2.255,40,2.557,41,1.529,44,0.066,46,1.133,47,1.246,48,0.619,50,2.189,51,2.661,53,2.285,54,2.333,55,2.509,58,2.316,59,3.144,60,3.144,64,0.74,68,2.608,70,2.608,71,2.608,73,2.608,75,2.167,76,2.661,77,2.661,78,2.509,80,2.608,85,2.661,86,2.661,87,4.061,88,2.564,94,1.434,95,1.869,96,4.134,97,1.569,99,2.661,100,2.255,102,2.635,130,0.003,131,0.003,132,3.785,133,3.785,134,3.944,135,3.849,136,3.944,137,5.02,138,4.138,139,3.214,140,5.02,141,2.417,142,3.128,143,3.128,144,3.214,145,3.307,146,1.795,147,4.132,148,5.425,149,3.409,150,3.409,151,3.645,152,3.944,153,3.52,154,3.944,155,3.944,156,3.944,157,3.944,158,3.52,159,3.944,160,3.944,161,3.944,162,3.785,163,3.785,164,3.944,165,3.944,166,3.944,167,3.128,168,3.52,169,3.645,170,3.52,171,3.645,172,3.645,173,3.645,174,1.957,175,1.929,176,1.929,177,1.929,178,1.929,179,3.903,180,4.835,181,3.207,182,4.67,183,1.887]],["title/classes/BimodalMarkGroup.html",[44,0.06,529,4.161]],["body/classes/BimodalMarkGroup.html",[2,0.013,3,0.013,4,0.011,8,0.076,9,0.177,12,0.842,14,0.674,17,0.842,21,0.282,22,0.005,25,0.095,29,0.011,32,2.457,34,3.156,36,2.085,38,3.717,44,0.022,46,1.952,48,0.547,50,0.494,55,2.229,58,2.447,59,2.884,60,2.884,64,0.555,75,0.986,78,2.229,87,0.826,94,0.822,95,0.65,96,0.875,97,1.394,98,1.338,130,0.001,131,0.001,141,3.929,145,4.917,147,2.466,148,2.737,149,4.776,150,4.776,153,1.182,174,0.657,175,0.647,176,0.647,177,0.647,178,0.647,181,0.811,200,1.139,202,1.139,203,0.939,207,1.092,211,2.555,230,1.748,232,2.631,235,1.097,236,4.831,245,3.404,331,0.759,495,3.362,501,0.425,529,2.659,530,1.874,531,3.596,532,4.452,533,4.959,534,4.959,535,4.452,536,4.452,537,4.452,538,4.452,539,4.959,540,4.959,541,3.202,542,5.059,543,1.874,544,1.874,545,7.267,546,3.202,547,4.011,548,1.958,549,1.874,550,4.118,551,1.874,552,2.874,553,1.874,554,6.136,555,6.136,556,2.624,557,2.364,558,2.261,559,5.449,560,1.874,561,1.874,562,1.526,563,1.874,564,1.874,565,3.202,566,1.874,567,2.962,568,0.826,569,0.667,570,1.874,571,1.682,572,1.324,573,7.673,574,2.09,575,1.874,576,1.874,577,1.874,578,1.682,579,1.874,580,1.682,581,1.682,582,1.682,583,1.682,584,4.118,585,5.571,586,5.332,587,4.735,588,5.188,589,4.452,590,7.568,591,7.268,592,6.931,593,4.452,594,4.452,595,4.452,596,4.452,597,4.452,598,5.059,599,1.682,600,5.058,601,2.874,602,5.385,603,1.756,604,4.634,605,8.484,606,7.061,607,1.682,608,4.452,609,1.682,610,1.682,611,1.682,612,1.682,613,1.682,614,1.682,615,2.874,616,1.682,617,1.682,618,1.682,619,1.682,620,0.744,621,3.869,622,1.874,623,4.582,624,2.659,625,6.639,626,1.874,627,4.462,628,2.262,629,1.07,630,1.874,631,1.874,632,1.462,633,1.874,634,1.556,635,7,636,6.853,637,7.135,638,4.799,639,7.394,640,8.158,641,3.202,642,2.874,643,1.705,644,2.874,645,3.202,646,5.571,647,3.202,648,4.959,649,2.659,650,1.682,651,5.059,652,4.959,653,6.485,654,1.874,655,3.869,656,1.874,657,1.874,658,2.737,659,2.737,660,1.272,661,1.682,662,5.571,663,2.874,664,1.874,665,1.874,666,1.874,667,1.874,668,4.452,669,1.556,670,2.874,671,1.874,672,8.654,673,4.192,674,4.192,675,1.324,676,1.682,677,1.874,678,1.874,679,5.571,680,8.273,681,6.485,682,6.485,683,5.571,684,5.571,685,1.682,686,1.682,687,1.556,688,1.556,689,1.556,690,1.874,691,2.874,692,2.659,693,2.874,694,1.27,695,1.843,696,1.592,697,2.874,698,2.659,699,1.462,700,1.223,701,2.874,702,5.472,703,1.272,704,2.874,705,3.202,706,1.556,707,1.556,708,1.386]],["title/injectables/BimodalService.html",[709,2.094,710,3.541]],["body/injectables/BimodalService.html",[2,0.016,3,0.027,4,0.014,8,0.095,10,0.82,12,2.219,14,0.815,17,2.219,20,0.379,21,0.241,22,0.005,25,0.439,26,0.696,29,0.014,30,2.867,33,2.013,35,2.013,38,1.994,43,1.036,44,0.028,45,2.573,46,1.463,47,0.869,48,0.401,52,2.568,53,1.194,55,3.062,58,2.946,59,1.868,60,1.465,64,0.311,75,2.185,87,2.525,94,1.851,95,1.584,98,3.011,100,0.949,102,1.378,111,1.251,116,2.028,120,0.982,130,0.002,131,0.002,135,3.689,138,3.967,141,4.079,145,2.925,146,2.422,147,1.925,149,2.364,150,2.364,158,1.481,167,4.037,168,3.114,170,2.441,174,1.357,175,1.337,176,1.337,177,1.337,178,1.337,179,3.321,199,1.442,202,1.378,207,0.799,209,1.148,211,1.706,215,0.477,230,3.721,232,3.098,235,0.246,236,1.194,245,1.563,247,1.316,256,1.757,269,0.489,298,1.513,300,4.293,302,6.315,306,6.315,308,0.417,331,0.866,442,1.352,472,1.592,473,1.738,531,4.037,547,3.967,548,3.754,568,3.442,569,1.757,572,2.735,603,0.994,620,0.933,623,1.66,702,1.738,709,1.618,710,2.735,711,1.316,712,2.349,713,4.433,714,4.937,715,3.871,716,3.871,717,1.66,718,4.449,719,2.349,720,2.349,721,1.949,722,3.738,723,5.685,724,2.036,725,3.435,726,4.467,727,2.349,728,4.433,729,7.206,730,3.852,731,1.657,732,3.852,733,2.624,734,0.71,735,3.871,736,5.14,737,3.871,738,2.842,739,1.211,740,1.007,741,3.871,742,3.831,743,4.553,744,2.349,745,3.114,746,3.871,747,2.349,748,4.433,749,1.434,750,1.66,751,1.194,752,1.194,753,1.222,754,1.592,755,1.017,756,1.02,757,1.738,758,1.168,759,1.592,760,1.592,761,1.66,762,1.222,763,2.066,764,0.889,765,0.567,766,1.12,767,2.109,768,2.109,769,2.109,770,2.349,771,1.481,772,1.833,773,5.378,774,1.66,775,2.349,776,2.349,777,2.349,778,2.349,779,6.814,780,6.814,781,3.871,782,5.726,783,4.937,784,5.14,785,2.349,786,5.726,787,2.349,788,2.349,789,2.349,790,2.349,791,2.349,792,5.726,793,2.349,794,2.349,795,3.871,796,2.349,797,3.852,798,2.349,799,2.349,800,6.814,801,2.349,802,2.349,803,2.349,804,2.349,805,2.349,806,2.349,807,2.349,808,2.349,809,2.349,810,2.349,811,2.349,812,3.871,813,6.814,814,4.937,815,3.871,816,3.871,817,4.937,818,2.349,819,2.349,820,2.349,821,1.808,822,3.871,823,1.592,824,3.871,825,2.349,826,2.349,827,3.871,828,5.726,829,5.726,830,3.871,831,4.937,832,2.349,833,3.871,834,2.349,835,4.937,836,4.937,837,3.871,838,3.871,839,5.726,840,2.349,841,3.215,842,2.349,843,2.349,844,2.349,845,2.349,846,2.349,847,3.871,848,3.475,849,2.349,850,3.475,851,3.871,852,3.475,853,3.871,854,2.349,855,3.871,856,2.349,857,2.109,858,2.349,859,2.349,860,2.349,861,3.475,862,2.349,863,2.349,864,2.349,865,2.349,866,2.349,867,3.871,868,2.349,869,2.349,870,3.871,871,2.349,872,6.333,873,6.333,874,2.349,875,2.349,876,2.349,877,2.349,878,2.349,879,2.349,880,2.349,881,2.349,882,2.349,883,3.871,884,2.349,885,2.349,886,2.349,887,2.349,888,3.871,889,4.433,890,2.349,891,3.871,892,6.814,893,7.53,894,3.871,895,5.14,896,3.871,897,3.871,898,5.726,899,5.726,900,3.871,901,5.14,902,5.726,903,2.349,904,3.871,905,5.14,906,3.871,907,3.871,908,2.349,909,2.349,910,2.349,911,1.66,912,4.937,913,2.109,914,2.109,915,2.109,916,2.109,917,2.109,918,2.109,919,2.349,920,3.871,921,6.253,922,5.726,923,3.215,924,3.871,925,3.871,926,3.02,927,2.349,928,2.349,929,3.215,930,2.349,931,3.871,932,3.871,933,3.871,934,2.349,935,3.871,936,3.871,937,2.349,938,2.109,939,2.349,940,2.349,941,2.349,942,2.349,943,3.871,944,2.349,945,5.32,946,3.871,947,2.349,948,2.349,949,1.534,950,2.349,951,2.109,952,3.871,953,2.109,954,3.871,955,2.109,956,2.109,957,2.349,958,1.66,959,1.951,960,2.643,961,1.833,962,0.8,963,3.02,964,1.951,965,1.833,966,1.951,967,1.12,968,1.097,969,1.017,970,1.12,971,1.12,972,1.12,973,2.349,974,2.349,975,3.475,976,2.864,977,2.349,978,2.349,979,2.349,980,2.349,981,2.349,982,2.349,983,2.349,984,2.109,985,3.215,986,1.951,987,2.349,988,2.349,989,2.349,990,3.871,991,2.349,992,2.349,993,2.349,994,2.109]],["title/interfaces/BiomarkersCounts.html",[0,0.41,995,3.397]],["body/interfaces/BiomarkersCounts.html",[0,0.824,1,1.609,2,0.049,3,0.049,4,0.042,8,0.286,9,0.476,14,1.495,16,2.424,18,2.021,20,0.69,21,0.354,22,0.005,25,0.435,28,2.819,29,0.06,47,1.215,48,0.693,94,2.387,95,1.441,98,3.884,130,0.004,131,0.004,139,4.086,146,2.774,235,1.013,312,2.134,331,0.788,734,1.152,823,5.848,995,5.848,996,5.015,997,5.015,998,5.015,999,5.015,1000,6.095,1001,5.015,1002,6.3,1003,5.015,1004,2.915,1005,4.811,1006,4.811]],["title/interfaces/BiomarkersNamesInReport.html",[0,0.41,1006,3.397]],["body/interfaces/BiomarkersNamesInReport.html",[0,0.824,1,1.609,2,0.049,3,0.049,4,0.042,8,0.286,9,0.476,14,1.495,16,2.424,18,2.021,20,0.696,21,0.384,22,0.005,25,0.435,28,2.819,29,0.06,47,1.166,48,0.693,94,2.387,95,1.441,98,3.884,130,0.004,131,0.004,139,4.086,146,2.774,235,0.744,312,2.134,331,0.788,734,1.152,823,5.848,995,4.811,996,5.015,997,5.015,998,5.015,999,5.015,1000,6.095,1001,5.015,1002,6.3,1003,5.015,1004,2.915,1005,4.811,1006,5.848]],["title/interfaces/BmCtPairings.html",[0,0.41,123,2.669]],["body/interfaces/BmCtPairings.html",[0,0.799,1,1.044,2,0.032,3,0.032,4,0.027,5,2.395,6,4.104,7,4.246,8,0.186,9,0.358,11,2.022,12,3.378,13,2.718,14,1.583,15,2.543,16,2.51,17,3.378,18,2.613,19,2.453,20,0.714,21,0.35,22,0.005,23,3.489,24,1.383,25,0.232,26,2.227,27,1.873,28,1.829,29,0.061,30,2.419,31,2.395,32,2.031,33,2.395,34,2.241,35,2.395,36,2.29,37,2.453,38,1.86,39,1.364,40,2.109,41,1.777,42,2.453,43,2.031,44,0.09,45,2.069,46,1.863,47,1.251,48,0.625,49,4.15,50,1.71,51,2.195,52,2.395,53,2.655,54,3.142,55,2.069,56,4.004,57,2.241,58,2.352,59,2.845,60,2.845,61,3.457,62,3.544,63,3.544,64,0.61,65,3.544,66,2.453,67,2.514,68,2.151,69,2.514,70,2.151,71,3.512,72,2.514,73,2.151,74,2.151,75,1.084,76,3.584,77,2.195,78,3.378,79,4.104,80,2.151,81,2.514,82,2.453,83,2.514,84,2.514,85,2.195,86,2.195,87,2.031,88,2.003,89,2.453,90,2.514,91,2.514,92,2.514,93,2.514,94,1.183,95,1.747,96,3.032,97,1.294,98,1.925,99,2.195,100,1.86,101,3.544,102,1.639,103,3.544,104,2.514,105,2.453,106,4.004,107,2.514,108,1.704,109,1.461,110,2.514,111,2.453,112,2.514,113,1.892,114,1.86,115,2.453,116,1.892,117,1.925,118,1.925,119,1.925,120,1.907,121,1.925,122,1.925,123,3.457,124,4.457,125,4.457,126,4.457,127,4.457,128,4.457,129,4.457,130,0.003,131,0.003]],["title/interfaces/CByOrgan.html",[0,0.41,1005,3.397]],["body/interfaces/CByOrgan.html",[0,0.818,1,1.56,2,0.047,3,0.047,4,0.041,8,0.277,9,0.467,10,1.465,14,1.449,16,2.76,18,1.959,20,0.686,21,0.374,22,0.005,25,0.427,28,2.733,29,0.059,47,1.251,48,0.592,94,2.355,95,1.397,98,3.831,130,0.004,131,0.004,139,3.961,146,3.158,235,0.721,312,2.093,331,0.763,734,1.136,823,6.657,995,4.664,996,4.861,997,4.861,998,4.861,999,4.861,1000,6.938,1001,4.861,1002,6.214,1003,4.861,1004,2.826,1005,5.738,1006,4.664]],["title/interfaces/CT.html",[0,0.41,94,1.287]],["body/interfaces/CT.html",[0,0.792,1,0.998,2,0.03,3,0.03,4,0.026,5,2.291,6,4.368,7,4.401,8,0.178,9,0.347,10,1.4,11,2.089,12,3.954,13,2.869,14,1.853,15,2.684,16,2.649,17,3.954,18,2.723,19,2.346,20,0.713,21,0.373,22,0.005,23,3.737,24,1.421,25,0.222,26,2.173,27,2.308,28,1.749,29,0.061,30,2.371,31,2.291,32,1.942,33,2.291,34,2.143,35,2.291,36,2.19,37,2.346,38,1.779,39,1.305,40,2.017,41,1.722,42,2.346,43,1.942,44,0.087,45,1.979,46,1.839,47,1.251,48,0.616,49,4.067,50,1.657,51,2.099,52,2.291,53,2.611,54,3.066,55,1.979,56,3.907,57,2.143,58,2.295,59,2.776,60,2.776,61,3.35,62,3.434,63,3.434,64,0.583,65,3.434,66,2.346,67,2.405,68,2.057,69,2.405,70,2.057,71,3.427,72,2.405,73,2.057,74,2.057,75,1.036,76,3.497,77,2.099,78,3.296,79,4.005,80,2.057,81,2.405,82,2.346,83,2.405,84,2.405,85,2.099,86,2.099,87,1.942,88,1.94,89,2.346,90,2.405,91,2.405,92,2.405,93,2.405,94,1.615,95,1.88,96,3.953,97,2.249,98,1.841,99,2.099,100,1.779,101,3.434,102,1.567,103,3.434,104,2.405,105,2.346,106,3.907,107,2.405,108,1.663,109,1.397,110,2.405,111,2.346,112,2.405,113,1.809,114,1.779,115,2.346,116,1.809,117,1.841,118,1.841,119,1.841,120,1.86,121,1.841,122,1.841,123,2.346,124,2.405,125,2.405,126,2.405,127,2.405,128,2.405,129,2.405,130,0.003,131,0.003]],["title/classes/Cell.html",[44,0.06,100,2.024]],["body/classes/Cell.html",[0,0.797,2,0.031,3,0.031,4,0.027,5,2.375,6,4.086,7,4.23,8,0.184,9,0.356,10,0.654,11,2.08,12,3.363,13,2.846,14,1.576,15,2.536,16,2.503,17,3.363,18,2.744,19,2.432,20,0.713,21,0.349,22,0.005,23,3.48,24,1.41,25,0.231,26,2.217,27,1.862,28,1.814,29,0.061,30,2.41,31,2.375,32,2.014,33,2.375,34,2.223,35,2.375,36,2.271,37,2.432,38,1.844,39,1.353,40,2.092,41,1.767,42,2.432,43,2.014,44,0.089,45,2.052,46,1.858,47,1.25,48,0.64,49,4.134,50,1.7,51,2.177,52,2.375,53,2.647,54,3.127,55,2.052,56,4.57,57,2.223,58,2.341,59,2.832,60,2.832,61,3.437,62,3.523,63,3.523,64,0.855,65,3.523,66,2.432,67,2.493,68,2.133,69,2.493,70,2.133,71,3.496,72,2.493,73,2.133,74,2.133,75,1.075,76,3.567,77,2.177,78,3.363,79,4.086,80,2.133,81,2.493,82,2.432,83,2.493,84,2.493,85,2.177,86,2.177,87,2.014,88,1.991,89,2.432,90,2.493,91,2.493,92,2.493,93,2.493,94,1.173,95,1.93,96,3.015,97,1.283,98,1.909,99,2.177,100,2.606,101,4.086,102,1.625,103,3.523,104,2.493,105,2.432,106,3.986,107,2.493,108,1.697,109,1.448,110,2.493,111,2.432,112,2.493,113,1.876,114,1.844,115,2.432,116,1.876,117,1.909,118,1.909,119,1.909,120,1.898,121,1.909,122,1.909,123,2.432,124,2.493,125,2.493,126,2.493,127,2.493,128,2.493,129,2.493,130,0.003,131,0.003,207,1.243,209,0.916,501,1.035,1007,6.453,1008,4.567,1009,4.567,1010,4.567,1011,4.567]],["title/classes/ClearSheetLogs.html",[44,0.06,1012,3.541]],["body/classes/ClearSheetLogs.html",[2,0.05,3,0.05,4,0.043,8,0.293,9,0.483,20,0.67,21,0.39,22,0.005,29,0.056,44,0.112,64,1.159,130,0.004,131,0.004,203,2.233,207,1.014,235,0.761,268,2.029,269,2.074,308,1.288,312,2.164,501,1.647,734,1.084,749,4.435,1012,6.181,1013,6.032,1014,6.181,1015,3.311,1016,7.264,1017,4.447,1018,6.181,1019,4.55,1020,1.797,1021,5.375,1022,5.667,1023,6.032,1024,6.032]],["title/classes/CloseBottomSheet.html",[44,0.06,1025,2.252]],["body/classes/CloseBottomSheet.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.72,130,0.003,131,0.003,203,2.357,207,0.759,235,0.57,268,1.441,269,2.19,272,2.988,308,0.964,310,1.568,312,1.344,316,2.071,331,0.807,350,1.568,382,1.528,501,1.232,556,2.935,558,3.4,603,1.396,629,1.89,734,1.164,755,2.354,756,1.432,763,3.129,764,2.057,765,1.311,1015,2.057,1025,3.269,1026,2.539,1027,4.221,1028,2.323,1029,5.435,1030,2.889,1031,2.214,1032,1.724,1033,2.442,1034,3.926,1035,3.257,1036,2.444,1037,2.442,1038,2.49,1039,2.397,1040,2.397,1041,2.442,1042,2.442,1043,2.442,1044,2.354,1045,1.724,1046,2.442,1047,2.442,1048,2.442,1049,2.159,1050,2.49,1051,2.49,1052,2.272,1053,2.397,1054,2.442,1055,2.442,1056,2.397,1057,2.442,1058,2.373,1059,2.442]],["title/classes/CloseBottomSheetDOI.html",[44,0.06,1054,2.252]],["body/classes/CloseBottomSheetDOI.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.719,130,0.003,131,0.003,203,2.357,207,0.758,235,0.569,268,1.44,269,2.19,272,2.986,308,0.963,310,1.566,312,1.343,316,2.07,331,0.807,350,1.566,382,1.526,501,1.231,556,2.934,558,3.399,603,1.395,629,1.969,734,1.164,755,2.351,756,1.431,763,3.128,764,2.055,765,1.31,1015,2.055,1025,2.44,1026,2.536,1027,4.22,1028,2.322,1030,2.887,1031,2.213,1032,1.722,1033,2.44,1034,3.924,1035,3.255,1036,2.443,1037,2.44,1038,2.487,1039,2.395,1040,2.395,1041,2.44,1042,2.44,1043,2.44,1044,2.351,1045,1.722,1046,2.44,1047,2.44,1048,2.44,1049,2.157,1050,2.487,1051,2.487,1052,2.269,1053,2.395,1054,3.266,1055,2.44,1056,2.395,1057,2.44,1058,2.371,1059,2.44,1060,5.429]],["title/classes/CloseCompare.html",[44,0.06,1056,2.21]],["body/classes/CloseCompare.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.721,130,0.003,131,0.003,203,2.357,207,0.76,235,0.57,268,1.442,269,2.19,272,2.99,308,0.965,310,1.57,312,1.346,316,2.336,331,0.808,350,1.57,382,1.529,501,1.234,556,2.936,558,3.402,603,1.398,629,1.89,734,1.132,755,2.356,756,1.434,763,3.13,764,2.059,765,1.313,1015,2.059,1025,2.445,1026,2.542,1027,4.222,1028,2.258,1030,2.891,1031,2.216,1032,1.726,1033,2.445,1034,3.927,1035,3.258,1036,2.444,1037,2.445,1038,2.493,1039,2.4,1040,2.4,1041,2.445,1042,2.445,1043,2.445,1044,2.356,1045,1.726,1046,2.445,1047,2.445,1048,2.445,1049,2.161,1050,2.493,1051,2.493,1052,2.274,1053,2.4,1054,2.445,1055,2.445,1056,3.211,1057,2.445,1058,2.374,1059,2.445,1061,5.441]],["title/classes/CloseLoading.html",[44,0.06,755,2.17]],["body/classes/CloseLoading.html",[2,0.036,3,0.036,4,0.032,8,0.214,9,0.395,10,1.16,20,0.641,21,0.403,22,0.005,25,0.409,29,0.062,44,0.125,48,0.371,64,0.948,130,0.003,131,0.003,203,2.352,207,1.13,209,1.063,235,0.556,268,1.717,269,2.185,272,2.938,308,0.94,310,1.53,312,1.311,316,2.037,331,0.794,350,1.53,382,1.49,501,1.202,556,3.117,558,3.372,603,1.362,629,1.871,734,1.122,738,3.052,755,3.098,756,1.397,763,3.109,764,2.006,765,1.279,1015,2.006,1025,2.382,1026,2.477,1027,4.197,1028,2.238,1030,2.841,1031,2.177,1032,1.681,1033,2.382,1034,3.897,1035,3.443,1036,2.426,1037,2.382,1038,2.428,1039,2.338,1040,2.338,1041,2.382,1042,2.382,1043,2.382,1044,2.296,1045,1.681,1046,2.382,1047,2.382,1048,2.382,1049,2.106,1050,2.428,1051,2.428,1052,2.215,1053,2.338,1054,2.382,1055,2.382,1056,2.338,1057,2.382,1058,2.333,1059,2.382,1062,4.136,1063,7.153,1064,5.301]],["title/classes/CloseRightSideNav.html",[44,0.06,1048,2.252]],["body/classes/CloseRightSideNav.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.719,130,0.003,131,0.003,203,2.357,207,0.758,235,0.569,268,1.44,269,2.19,272,2.986,308,0.963,310,1.566,312,1.343,316,2.07,331,0.807,350,1.566,382,2.043,501,1.231,556,2.934,558,3.399,603,1.395,629,1.889,734,1.131,755,2.351,756,1.431,763,3.128,764,2.055,765,1.31,1015,2.055,1025,2.44,1026,2.536,1027,4.22,1028,2.257,1030,2.887,1031,2.213,1032,1.722,1033,2.44,1034,3.924,1035,3.255,1036,2.443,1037,2.44,1038,2.487,1039,2.395,1040,2.395,1041,2.44,1042,2.44,1043,2.44,1044,2.351,1045,1.722,1046,2.44,1047,2.44,1048,3.266,1049,2.887,1050,3.33,1051,2.487,1052,2.269,1053,2.395,1054,2.44,1055,2.44,1056,2.395,1057,2.44,1058,2.371,1059,2.44,1065,5.429]],["title/classes/CloseSearch.html",[44,0.06,1059,2.252]],["body/classes/CloseSearch.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.721,130,0.003,131,0.003,203,2.357,207,0.76,235,0.57,268,1.442,269,2.19,272,2.99,308,0.965,310,1.57,312,1.346,316,2.073,331,0.808,350,1.57,382,1.529,501,1.234,556,2.936,558,3.402,603,1.398,629,1.89,734,1.132,755,2.356,756,1.434,763,3.13,764,2.059,765,1.313,1015,2.059,1025,2.445,1026,2.542,1027,4.222,1028,2.258,1030,2.891,1031,2.216,1032,1.726,1033,2.445,1034,3.927,1035,3.258,1036,2.444,1037,2.445,1038,2.493,1039,2.4,1040,2.4,1041,2.445,1042,2.445,1043,2.445,1044,2.356,1045,1.726,1046,2.445,1047,2.445,1048,2.445,1049,2.161,1050,2.493,1051,2.493,1052,2.274,1053,2.4,1054,2.445,1055,2.445,1056,2.4,1057,2.445,1058,2.676,1059,3.271,1066,5.441]],["title/classes/CloseSnackbar.html",[44,0.06,1042,2.252]],["body/classes/CloseSnackbar.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.721,130,0.003,131,0.003,203,2.357,207,0.76,235,0.57,268,1.442,269,2.19,272,3.37,308,0.965,310,1.57,312,1.346,316,2.073,331,0.808,350,1.57,382,1.529,501,1.234,556,2.936,558,3.402,603,1.398,629,1.89,734,1.132,755,2.356,756,1.434,763,3.13,764,2.059,765,1.313,1015,2.059,1025,2.445,1026,2.542,1027,4.222,1028,2.258,1030,2.891,1031,2.216,1032,1.726,1033,2.445,1034,3.927,1035,3.258,1036,2.444,1037,2.445,1038,2.493,1039,2.4,1040,2.4,1041,2.445,1042,3.271,1043,2.445,1044,2.356,1045,1.726,1046,2.445,1047,2.445,1048,2.445,1049,2.161,1050,2.493,1051,2.493,1052,2.274,1053,2.4,1054,2.445,1055,2.445,1056,2.4,1057,2.445,1058,2.374,1059,2.445,1067,5.441]],["title/components/CompareComponent.html",[250,1.355,347,1.99]],["body/components/CompareComponent.html",[2,0.028,3,0.028,4,0.042,8,0.101,9,0.225,10,1.105,11,2.098,20,0.612,21,0.342,22,0.005,24,0.614,25,0.354,29,0.015,30,2.582,44,0.03,47,0.622,48,0.558,53,0.771,58,1.859,64,0.539,95,1.877,102,2.329,108,1.168,130,0.002,131,0.002,141,2.232,147,2.025,167,1.4,181,2.573,188,0.61,202,1.449,207,1.312,209,1.484,211,2.834,215,0.507,218,1.216,219,3.68,220,1.331,232,2.745,235,0.427,236,3.021,245,2.081,247,1.4,250,1.393,251,0.992,252,1.673,253,2.735,254,1.044,255,1.044,256,0.889,258,1.982,259,2.967,260,0.684,261,2.593,262,3.959,264,1.645,266,1.645,268,1.625,282,4.398,287,0.992,298,2.742,305,5.174,308,0.722,310,0.721,316,2.552,329,1.438,331,1.017,339,1.526,341,1.702,342,1.645,343,1.044,344,2.484,345,1.044,346,1.044,347,2.36,348,1.044,349,0.992,350,2.135,351,1.044,352,0.992,353,1.044,354,0.976,355,1.044,356,0.992,357,0.889,358,1.044,359,0.992,360,1.044,361,0.992,362,1.044,363,0.992,364,1.702,365,0.992,366,1.044,367,0.992,368,1.044,369,0.976,370,1.044,371,0.961,372,1.044,373,0.992,374,1.044,375,0.992,376,1.044,377,0.992,378,1.044,379,1.009,380,1.044,381,0.992,382,0.702,383,1.044,384,0.992,385,1.66,386,1.044,387,0.992,388,2.249,389,1.044,390,0.992,391,1.044,392,1.009,393,1.044,394,0.992,395,1.044,396,1.009,397,1.044,398,0.992,399,1.044,400,0.992,401,0.931,402,1.044,403,0.992,404,0.976,405,1.044,406,1.026,407,1.044,408,0.992,409,1.044,410,0.992,411,0.992,412,1.009,413,1.541,414,1.044,415,1.044,528,1.631,545,1.949,556,1.31,569,2.497,587,3.177,588,3.245,604,1.694,632,3.177,651,3.177,695,3.767,700,2.658,721,1.755,731,2.678,734,1.18,738,2.967,739,1.274,740,1.546,763,0.815,765,0.603,921,3.381,929,4.935,986,3.381,1028,0.618,1056,2.273,1068,2.499,1069,5.153,1070,4.072,1071,5.335,1072,5.335,1073,5.153,1074,4.627,1075,3.573,1076,5.943,1077,3.656,1078,3.381,1079,5.153,1080,5.153,1081,5.943,1082,4.072,1083,4.072,1084,3.282,1085,2.07,1086,5.153,1087,2.568,1088,1.839,1089,3.381,1090,5.153,1091,2.243,1092,6.544,1093,3.667,1094,4.072,1095,3.365,1096,2.499,1097,3.767,1098,2.499,1099,2.499,1100,2.499,1101,3.656,1102,8.846,1103,2.499,1104,3.381,1105,2.499,1106,2.656,1107,2.285,1108,2.285,1109,2.322,1110,2.499,1111,2.499,1112,2.843,1113,3.282,1114,2.599,1115,2.499,1116,2.499,1117,2.499,1118,4.072,1119,2.499,1120,4.072,1121,2.499,1122,3.656,1123,5.335,1124,2.499,1125,2.075,1126,2.499,1127,2.499,1128,7.017,1129,2.499,1130,2.499,1131,2.499,1132,2.499,1133,2.361,1134,2.887,1135,3.381,1136,1.4,1137,1.3,1138,1.3,1139,1.3,1140,2.877,1141,1.48,1142,2.243,1143,4.072,1144,3.656,1145,2.499,1146,2.499,1147,4.072,1148,2.499,1149,2.499,1150,2.499,1151,4.072,1152,2.499,1153,2.499,1154,2.499,1155,2.499,1156,2.499,1157,2.499,1158,2.499,1159,2.499,1160,2.499,1161,2.499,1162,2.499,1163,2.499,1164,2.499,1165,2.499,1166,2.499,1167,2.499,1168,2.243,1169,2.499,1170,2.499,1171,1.631,1172,2.499,1173,2.499,1174,2.499,1175,2.499,1176,2.243,1177,4.627,1178,2.273,1179,2.499,1180,5.153,1181,2.499,1182,2.243,1183,2.243,1184,2.243,1185,0.976,1186,0.903,1187,2.499,1188,2.243,1189,2.499,1190,3.365,1191,5.153,1192,4.831,1193,2.499,1194,2.499,1195,2.075,1196,2.075,1197,2.075,1198,2.075,1199,1.849,1200,2.075,1201,2.075,1202,2.499,1203,2.499,1204,2.243,1205,2.075,1206,2.243,1207,2.243,1208,2.243,1209,2.499,1210,2.499,1211,2.499,1212,2.499,1213,2.499,1214,2.499,1215,2.273,1216,3.656,1217,3.381,1218,3.177,1219,3.656,1220,3.656,1221,4.935,1222,3.381,1223,3.381,1224,3.013,1225,3.656,1226,5.335,1227,3.656,1228,5.335,1229,3.381,1230,3.656,1231,2.568,1232,3.656,1233,3.656,1234,2.412,1235,3.656,1236,3.381,1237,2.877,1238,3.656,1239,3.381,1240,3.013,1241,3.381,1242,3.177,1243,3.88,1244,3.656,1245,3.015,1246,3.656,1247,3.656,1248,4.627,1249,4.072,1250,6.544,1251,2.243,1252,2.499,1253,4.04,1254,3.52,1255,2.499,1256,2.568,1257,2.658,1258,4.072,1259,2.499,1260,2.499,1261,2.243,1262,2.658,1263,4.627,1264,4.28,1265,2.499,1266,1.949,1267,1.576,1268,1.576,1269,3.656,1270,1.949,1271,1.3,1272,4.425,1273,5.128,1274,1.526,1275,1.48,1276,2.967,1277,3.494,1278,1.765,1279,1.765,1280,1.765,1281,2.681,1282,2.243,1283,3.656,1284,4.212,1285,1.765,1286,2.243,1287,2.243,1288,3.254,1289,1.526,1290,1.765,1291,2.075,1292,3.656,1293,3.494,1294,3.656,1295,4.582,1296,2.355,1297,3.629,1298,3.996,1299,4.272,1300,4.029,1301,4.029,1302,2.243,1303,3.381,1304,2.243,1305,3.52,1306,2.62,1307,3.177,1308,2.499,1309,2.243,1310,1.949,1311,3.33,1312,2.486,1313,2.243,1314,1.438,1315,2.243,1316,3.656,1317,3.013,1318,1.949,1319,1.849,1320,2.075,1321,2.075,1322,2.243,1323,2.075,1324,2.243,1325,2.243,1326,2.243,1327,2.243,1328,2.243,1329,2.243]],["title/interfaces/CompareData.html",[0,0.41,1088,1.408]],["body/interfaces/CompareData.html",[0,0.848,1,0.949,2,0.029,3,0.042,4,0.025,8,0.169,9,0.334,10,1.309,11,1.866,13,1.274,14,1.276,15,2.225,16,2.003,18,2.651,20,0.718,21,0.369,22,0.005,24,1.505,26,1.796,27,2.255,29,0.062,39,1.796,41,1.146,46,1.586,47,1.204,48,0.624,50,1.597,75,0.984,88,1.291,94,1.075,95,1.684,97,2.003,109,1.327,120,1.061,130,0.003,131,0.003,146,1.346,174,1.467,175,1.445,176,1.445,177,1.445,178,1.445,183,1.292,235,0.635,260,1.952,261,1.088,295,2.125,331,0.92,466,1.535,620,1.662,629,1.538,660,2.408,703,1.662,721,2.427,724,1.639,731,2.783,734,0.883,739,1.896,740,1.577,756,1.102,960,1.535,962,1.424,1020,2.139,1088,1.704,1106,1.583,1107,3.58,1108,3.513,1109,3.57,1112,2.953,1113,3.742,1114,3.294,1185,1.635,1186,1.512,1245,1.635,1296,2.392,1330,1.719,1331,3.466,1332,2.49,1333,1.69,1334,1.635,1335,1.719,1336,1.719,1337,1.719,1338,1.719,1339,1.719,1340,1.719,1341,2.448,1342,1.69,1343,1.681,1344,1.719,1345,1.749,1346,1.719,1347,1.69,1348,1.24,1349,1.719,1350,1.749,1351,1.749,1352,1.749,1353,1.749,1354,1.749,1355,1.749,1356,1.749,1357,1.749,1358,1.749,1359,1.719,1360,1.719,1361,2.533,1362,2.533,1363,1.749,1364,1.365,1365,1.365,1366,1.365,1367,1.719,1368,1.69,1369,1.719,1370,2.49,1371,2.533,1372,2.533,1373,1.719,1374,1.749,1375,1.609,1376,1.749,1377,1.749,1378,1.749,1379,1.749,1380,1.749,1381,1.662,1382,2.928,1383,1.719,1384,1.749,1385,1.749,1386,1.662,1387,1.749,1388,1.749,1389,2.49,1390,1.749,1391,2.49,1392,1.69,1393,2.49,1394,1.749,1395,1.749,1396,1.69,1397,1.796,1398,1.719,1399,2.49,1400,1.749,1401,1.749,1402,1.749,1403,1.749,1404,1.749,1405,1.749,1406,1.749,1407,1.719,1408,1.662,1409,1.256,1410,1.749]],["title/modules/CompareModule.html",[184,1.108,1411,3.708]],["body/modules/CompareModule.html",[2,0.046,3,0.046,4,0.049,22,0.005,25,0.527,29,0.04,44,0.079,130,0.004,131,0.004,184,1.477,186,2.376,187,2.526,188,1.631,189,3.422,190,2.526,191,2.449,192,3.369,198,3.144,199,2.487,200,2.376,214,3.047,215,1.355,243,3.095,278,3.249,347,4.144,401,2.487,424,6.479,454,4.717,455,5.208,1136,3.74,1411,7.75,1412,5.993,1413,5.993,1414,5.993,1415,5.993,1416,6.258,1417,6.06,1418,6.675,1419,3.3,1420,2.608,1421,6.675,1422,5.423,1423,4.358,1424,4.131,1425,5.423,1426,4.358,1427,5.423,1428,5.239,1429,4.94,1430,4.525,1431,4.94,1432,3.881,1433,3.119,1434,7.458,1435,5.993]],["title/interfaces/CompareReport.html",[0,0.41,1399,2.058]],["body/interfaces/CompareReport.html",[0,0.849,1,0.955,2,0.029,3,0.042,4,0.025,8,0.17,9,0.336,11,1.871,13,1.282,14,1.283,15,2.232,16,2.011,18,2.656,20,0.718,21,0.369,22,0.005,24,1.487,26,1.805,27,2.262,29,0.062,39,1.805,41,1.154,46,1.591,47,1.205,48,0.625,50,1.605,75,0.991,88,1.3,94,1.082,95,1.236,97,2.011,109,1.336,120,1.068,130,0.003,131,0.003,146,1.355,174,1.477,175,1.455,176,1.455,177,1.455,178,1.455,183,1.299,235,0.638,260,1.959,261,1.096,295,2.136,331,0.923,466,1.545,620,1.673,629,1.544,660,2.419,703,1.673,721,2.831,724,1.647,731,2.791,734,0.887,739,1.905,740,1.585,756,1.11,960,1.545,962,1.434,1020,2.144,1088,1.184,1106,1.594,1107,3.333,1108,3.198,1109,3.25,1112,2.958,1113,3.387,1114,2.419,1185,1.646,1186,1.522,1245,1.646,1296,2.401,1330,1.73,1331,2.546,1332,2.502,1333,1.701,1334,1.646,1335,1.73,1336,1.73,1337,1.73,1338,1.73,1339,1.73,1340,1.73,1341,2.46,1342,1.701,1343,1.69,1344,1.73,1345,1.761,1346,1.73,1347,1.701,1348,1.248,1349,1.73,1350,1.761,1351,1.761,1352,1.761,1353,1.761,1354,1.761,1355,1.761,1356,1.761,1357,1.761,1358,1.761,1359,1.73,1360,1.73,1361,2.546,1362,2.546,1363,1.761,1364,1.374,1365,1.374,1366,1.374,1367,1.73,1368,1.701,1369,1.73,1370,2.502,1371,2.546,1372,2.546,1373,1.73,1374,1.761,1375,1.62,1376,1.761,1377,1.761,1378,1.761,1379,1.761,1380,1.761,1381,1.673,1382,2.939,1383,1.73,1384,1.761,1385,1.761,1386,1.673,1387,1.761,1388,1.761,1389,2.502,1390,1.761,1391,2.502,1392,1.701,1393,2.502,1394,1.761,1395,1.761,1396,1.701,1397,1.805,1398,1.73,1399,2.939,1400,3.276,1401,3.276,1402,3.276,1403,3.276,1404,3.276,1405,3.276,1406,3.276,1407,1.73,1408,1.673,1409,1.265,1410,1.761]],["title/interfaces/CompareReportData.html",[0,0.41,1407,2.058]],["body/interfaces/CompareReportData.html",[0,0.853,1,1.009,2,0.031,3,0.044,4,0.026,8,0.179,9,0.35,11,1.593,13,1.355,14,1.335,15,2.289,16,2.074,18,2.691,20,0.717,21,0.281,22,0.005,24,1.5,26,1.878,27,2.32,29,0.062,39,1.878,41,1.219,46,1.632,47,1.215,48,0.636,50,1.67,75,1.047,88,1.374,94,1.143,95,1.286,97,2.074,109,1.412,120,1.129,130,0.003,131,0.003,146,1.432,174,1.561,175,1.538,176,1.538,177,1.538,178,1.538,183,1.351,235,0.664,260,2.021,261,1.158,295,2.222,331,1.031,466,1.633,620,1.768,629,1.593,660,2.517,703,1.768,721,2.512,724,1.713,731,2.127,734,0.915,739,1.982,740,1.649,756,1.173,960,1.633,962,1.516,1020,2.184,1088,1.251,1106,1.685,1107,3.395,1108,3.267,1109,3.32,1112,2.801,1113,3.451,1114,2.517,1185,1.739,1186,1.608,1245,1.739,1296,2.476,1330,1.829,1331,2.648,1332,2.603,1333,1.798,1334,1.739,1335,1.829,1336,1.829,1337,1.829,1338,1.829,1339,1.829,1340,1.829,1341,2.559,1342,1.798,1343,1.758,1344,1.829,1345,1.86,1346,1.829,1347,1.798,1348,1.319,1349,1.829,1350,1.86,1351,1.86,1352,1.86,1353,1.86,1354,1.86,1355,1.86,1356,1.86,1357,1.86,1358,1.86,1359,1.829,1360,1.829,1361,2.648,1362,2.648,1363,1.86,1364,1.452,1365,1.452,1366,1.452,1367,1.829,1368,1.798,1369,1.829,1370,2.603,1371,2.648,1372,2.648,1373,1.829,1374,1.86,1375,1.712,1376,1.86,1377,1.86,1378,1.86,1379,1.86,1380,1.86,1381,1.768,1382,3.031,1383,1.829,1384,1.86,1385,1.86,1386,1.768,1387,1.86,1388,1.86,1389,2.603,1390,1.86,1391,2.603,1392,1.798,1393,2.603,1394,1.86,1395,1.86,1396,1.798,1397,1.878,1398,1.829,1399,3.303,1400,1.86,1401,1.86,1402,1.86,1403,1.86,1404,1.86,1405,1.86,1406,1.86,1407,2.603,1408,1.768,1409,1.337,1410,1.86]],["title/injectables/ConfigService.html",[431,3.06,709,2.094]],["body/injectables/ConfigService.html",[2,0.042,3,0.042,4,0.036,8,0.245,9,0.432,10,0.872,21,0.232,22,0.005,25,0.462,29,0.036,44,0.072,48,0.426,58,2.862,64,0.806,130,0.004,131,0.004,183,1.847,207,1.353,209,1.22,215,1.235,235,0.992,269,1.266,308,1.679,331,1.015,342,3.695,431,4.783,434,4.746,488,8.85,709,3.274,711,3.409,734,0.971,765,1.468,772,4.746,926,4.746,1020,2.263,1375,2.339,1436,6.084,1437,8.663,1438,8.663,1439,8.663,1440,8.663,1441,5.052,1442,7.597,1443,7.833,1444,6.505,1445,7.833,1446,7.833,1447,7.032,1448,7.833,1449,9.69,1450,6.084,1451,7.833,1452,7.833,1453,6.084,1454,7.833,1455,7.833,1456,9.148,1457,9.148,1458,9.148,1459,9.148,1460,9.148,1461,7.833,1462,6.084,1463,7.833,1464,7.032,1465,7.833,1466,6.084,1467,6.084,1468,5.052,1469,5.052]],["title/interfaces/ConfigurationOptions.html",[0,0.41,1383,2.058]],["body/interfaces/ConfigurationOptions.html",[0,0.85,1,0.967,2,0.029,3,0.042,4,0.025,8,0.172,9,0.339,11,1.555,13,1.298,14,1.294,15,2.245,16,2.024,18,2.663,20,0.717,21,0.362,22,0.005,24,1.49,26,1.821,27,2.274,29,0.062,39,1.821,41,1.167,46,1.6,47,1.207,48,0.628,50,1.619,75,1.003,88,1.315,94,1.095,95,1.247,97,2.024,109,1.352,120,1.081,130,0.003,131,0.003,146,1.371,174,1.495,175,1.473,176,1.473,177,1.473,178,1.473,183,1.31,235,0.644,260,1.973,261,1.109,295,2.154,331,0.927,466,1.564,620,1.693,629,1.555,660,2.44,703,1.693,721,2.452,724,1.661,731,2.062,734,0.893,739,1.922,740,1.598,756,1.123,960,1.564,962,1.452,1020,2.378,1088,1.198,1106,1.613,1107,3.596,1108,3.213,1109,3.265,1112,2.761,1113,3.401,1114,2.44,1185,1.666,1186,1.54,1245,1.666,1296,2.417,1330,1.751,1331,2.568,1332,2.524,1333,1.722,1334,1.666,1335,1.751,1336,1.751,1337,1.751,1338,1.751,1339,1.751,1340,1.751,1341,2.481,1342,1.722,1343,1.704,1344,1.751,1345,1.782,1346,1.751,1347,1.722,1348,1.263,1349,1.751,1350,1.782,1351,1.782,1352,1.782,1353,1.782,1354,1.782,1355,1.782,1356,1.782,1357,1.782,1358,1.782,1359,1.751,1360,1.751,1361,2.568,1362,2.568,1363,1.782,1364,1.391,1365,1.391,1366,1.391,1367,1.751,1368,1.722,1369,1.751,1370,2.524,1371,2.568,1372,2.568,1373,1.751,1374,1.782,1375,1.639,1376,1.782,1377,1.782,1378,1.782,1379,1.782,1380,1.782,1381,1.693,1382,3.772,1383,2.524,1384,3.294,1385,3.294,1386,3.131,1387,3.294,1388,3.294,1389,3.238,1390,1.782,1391,2.524,1392,1.722,1393,2.524,1394,1.782,1395,1.782,1396,1.722,1397,1.821,1398,1.751,1399,2.524,1400,1.782,1401,1.782,1402,1.782,1403,1.782,1404,1.782,1405,1.782,1406,1.782,1407,1.751,1408,1.693,1409,1.28,1410,1.782]],["title/injectables/ConsentService.html",[195,3.06,709,2.094]],["body/injectables/ConsentService.html",[2,0.047,3,0.047,4,0.041,8,0.278,9,0.467,10,0.987,21,0.35,22,0.005,23,3.739,25,0.428,29,0.05,44,0.082,48,0.482,64,1.215,130,0.004,131,0.004,195,5.172,202,3.014,207,1.371,209,1.382,211,2.926,215,1.399,235,1.029,258,3.353,269,1.908,298,3.839,308,1.502,569,3.014,709,3.54,711,3.86,1137,3.584,1470,6.185,1471,7.63,1472,9.172,1473,8.471,1474,9.569,1475,8.471,1476,8.471,1477,6.889,1478,6.889,1479,6.889,1480,8.471,1481,5.742,1482,6.889,1483,5.098,1484,5.098,1485,6.889,1486,4.671,1487,6.889,1488,8.471,1489,6.889,1490,6.889]],["title/components/ControlPaneComponent.html",[250,1.355,349,1.99]],["body/components/ControlPaneComponent.html",[2,0.017,3,0.017,4,0.024,8,0.101,9,0.225,10,1.06,11,1.113,14,0.526,20,0.27,21,0.374,22,0.005,23,2.014,25,0.458,29,0.015,30,2.905,38,1.645,41,2.247,44,0.03,45,2.317,46,1.566,48,0.627,50,1.849,53,1.257,54,3.335,58,1.86,59,2.801,60,2.801,64,0.54,73,2.408,75,1.213,108,0.567,109,1.292,114,2.401,120,0.634,130,0.002,131,0.002,138,2.317,141,1.764,142,2.282,143,2.282,179,2.622,183,1.701,188,0.611,202,1.45,207,1.374,209,1.484,211,2.757,215,0.507,232,0.89,235,0.54,250,1.394,251,0.993,252,1.673,253,1.702,254,1.045,255,1.045,256,2.115,258,1.983,259,2.968,260,0.685,261,2.593,262,3.97,263,2.762,264,1.645,266,1.645,268,1.697,287,0.993,298,3.206,300,1.695,302,5.639,305,1.576,306,5.639,308,0.914,310,0.721,312,1.008,323,1.365,329,1.439,331,0.572,341,1.702,342,1.645,343,1.045,344,2.484,345,1.045,346,1.045,347,0.993,348,1.045,349,2.361,350,2.226,351,1.045,352,0.993,353,1.045,354,0.977,355,1.045,356,0.993,357,0.89,358,1.045,359,0.993,360,1.045,361,0.993,362,1.045,363,0.993,364,1.702,365,0.993,366,1.045,367,0.993,368,1.045,369,0.977,370,1.045,371,0.961,372,1.045,373,0.993,374,1.045,375,0.993,376,1.045,377,0.993,378,1.045,379,1.01,380,1.045,381,0.993,382,0.703,383,1.045,384,0.993,385,0.634,386,1.045,387,0.993,388,1.542,389,1.045,390,0.993,391,1.045,392,1.01,393,1.045,394,0.993,395,1.045,396,1.01,397,1.045,398,0.993,399,1.045,400,0.993,401,0.931,402,1.045,403,0.993,404,0.977,405,1.045,406,1.027,407,1.045,408,0.993,409,1.045,410,0.993,411,0.993,412,1.01,413,0.946,414,1.045,415,1.045,431,5.01,442,1.439,450,1.766,470,1.95,471,1.95,472,1.695,473,1.85,528,2.66,557,1.942,562,1.192,569,2.115,643,3.739,675,1.766,696,2.026,700,1.632,702,1.85,708,1.85,710,4.625,717,1.766,718,5.211,722,4.832,724,2.451,725,4.004,726,4.638,734,0.811,739,0.782,740,0.65,742,3.346,751,2.071,754,1.695,757,1.85,758,1.243,762,1.3,763,2.289,764,0.946,765,0.603,766,1.192,774,1.766,821,2.408,889,5.337,905,6.302,911,5.452,945,6.474,958,1.766,961,1.95,967,2.458,968,2.408,969,2.232,970,2.458,971,2.458,972,2.458,1019,1.3,1039,1.797,1040,1.797,1045,0.793,1085,2.071,1088,0.703,1095,6.178,1133,1.866,1137,1.3,1218,1.95,1224,1.85,1234,1.481,1253,2.815,1254,2.413,1275,1.481,1281,1.3,1284,1.365,1288,1.243,1289,1.526,1311,1.401,1312,2.487,1314,1.439,1364,1.681,1365,1.681,1366,2.414,1491,8.866,1492,8.201,1493,2.5,1494,5.155,1495,4.073,1496,5.155,1497,5.155,1498,2.644,1499,4.628,1500,5.877,1501,4.073,1502,4.073,1503,4.073,1504,5.944,1505,5.944,1506,5.944,1507,4.073,1508,2.746,1509,5.107,1510,4.073,1511,2.5,1512,4.073,1513,2.5,1514,4.073,1515,2.5,1516,4.073,1517,2.5,1518,2.5,1519,2.5,1520,2.5,1521,4.073,1522,2.5,1523,4.073,1524,2.5,1525,2.5,1526,4.073,1527,2.5,1528,2.5,1529,4.48,1530,4.073,1531,2.5,1532,3.657,1533,2.5,1534,2.5,1535,4.073,1536,2.5,1537,4.073,1538,2.5,1539,2.5,1540,4.073,1541,2.5,1542,4.073,1543,2.5,1544,3.657,1545,2.5,1546,2.5,1547,4.073,1548,2.5,1549,3.657,1550,2.5,1551,2.5,1552,2.5,1553,4.073,1554,2.5,1555,2.5,1556,1.831,1557,1.123,1558,1.103,1559,2.076,1560,1.95,1561,2.5,1562,2.5,1563,2.5,1564,5.337,1565,2.5,1566,5.944,1567,2.5,1568,2.5,1569,2.5,1570,2.5,1571,2.244,1572,2.244,1573,2.5,1574,2.5,1575,2.878,1576,3.657,1577,2.5,1578,2.5,1579,2.076,1580,2.5,1581,2.5,1582,2.5,1583,2.5,1584,2.5,1585,2.689,1586,2.5,1587,2.5,1588,4.073,1589,2.5,1590,2.5,1591,2.5,1592,2.5,1593,2.5,1594,4.073,1595,4.073,1596,1.866,1597,4.073,1598,2.5,1599,5.155,1600,5.155,1601,2.5,1602,5.944,1603,4.022,1604,4.073,1605,5.944,1606,6.34,1607,6.302,1608,6.302,1609,4.628,1610,2.5,1611,5.155,1612,2.5,1613,2.5,1614,2.5,1615,4.073,1616,4.073,1617,3.657,1618,4.073,1619,2.5,1620,2.5,1621,4.073,1622,2.5,1623,5.155,1624,4.073,1625,2.5,1626,2.5,1627,2.5,1628,2.5,1629,2.076,1630,2.076,1631,2.076,1632,2.076,1633,2.076,1634,2.5,1635,2.076,1636,2.244,1637,2.5,1638,1.95,1639,2.5,1640,2.5,1641,2.5,1642,4.628,1643,2.5,1644,2.5,1645,2.5,1646,2.5,1647,2.5,1648,2.5,1649,2.5,1650,2.5,1651,2.5,1652,2.5,1653,2.5,1654,4.073,1655,2.5,1656,2.5,1657,2.5,1658,2.5,1659,2.5,1660,1.95,1661,2.5,1662,4.073,1663,4.073,1664,1.526,1665,1.766,1666,2.5,1667,2.5,1668,3.657]],["title/modules/ControlPaneModule.html",[184,1.108,1669,3.708]],["body/modules/ControlPaneModule.html",[2,0.046,3,0.046,4,0.04,22,0.005,25,0.521,29,0.04,44,0.079,130,0.004,131,0.004,184,1.475,186,2.372,187,2.523,188,1.628,189,3.42,190,2.523,191,2.445,192,3.367,198,3.141,199,2.484,200,2.372,214,3.045,215,1.353,243,3.092,284,4.204,349,4.143,350,1.923,491,6.142,1417,6.058,1419,3.297,1420,2.605,1432,3.878,1433,3.114,1491,5.985,1492,5.536,1669,7.836,1670,5.985,1671,5.985,1672,5.985,1673,5.985,1674,7.341,1675,7.341,1676,7.01,1677,7.341,1678,6.666,1679,6.666,1680,5.985,1681,6.666,1682,5.536,1683,6.666,1684,6.666,1685,6.666,1686,6.666]],["title/modules/ControlsModule.html",[184,1.108,1674,3.708]],["body/modules/ControlsModule.html",[2,0.048,3,0.048,4,0.041,22,0.005,25,0.527,29,0.041,44,0.083,130,0.004,131,0.004,184,1.541,186,2.479,187,2.637,188,1.702,189,3.488,190,2.637,191,2.556,192,3.434,198,3.228,199,2.596,200,2.479,214,3.129,215,1.414,243,2.596,278,3.391,411,4.166,412,2.814,558,2.596,1136,3.904,1419,3.388,1420,2.722,1422,5.569,1423,4.549,1424,4.241,1425,5.569,1426,4.549,1427,5.569,1428,5.379,1432,3.985,1433,3.255,1674,7.515,1687,6.255,1688,6.255,1689,6.255,1690,6.967,1691,6.255,1692,8.529,1693,6.967,1694,5.569,1695,4.549,1696,7.657,1697,6.255]],["title/interfaces/DD.html",[0,0.41,137,3.397]],["body/interfaces/DD.html",[0,0.757,1,1.286,2,0.039,3,0.039,4,0.034,8,0.229,9,0.413,11,1.808,12,3.363,13,1.727,14,1.195,15,2.385,16,2.354,17,3.363,20,0.696,21,0.319,22,0.005,23,2.924,24,0.855,25,0.378,26,2.217,27,2.159,28,2.253,29,0.06,30,2.743,32,2.502,38,2.291,40,2.598,41,1.553,44,0.068,46,1.151,47,1.248,48,0.678,50,2.207,51,2.704,53,2.309,54,2.371,55,2.549,58,2.341,59,3.169,60,3.169,64,0.752,68,2.65,70,2.65,71,2.65,73,2.65,75,1.761,76,2.704,77,2.704,78,2.549,80,2.65,85,2.704,86,2.704,87,4.083,88,2.584,94,1.457,95,1.7,96,4.16,97,1.594,99,2.704,100,2.291,102,2.663,130,0.003,131,0.003,132,3.845,133,3.845,134,4.008,135,3.128,136,4.008,137,5.677,138,3.763,139,3.265,140,5.073,141,2.456,142,3.178,143,3.178,144,3.265,145,3.36,146,1.824,147,4.164,148,5.468,149,3.463,150,3.463,151,3.703,152,4.008,153,3.577,154,4.008,155,4.008,156,4.008,157,4.008,158,3.577,159,4.008,160,4.008,161,4.008,162,3.845,163,3.845,164,4.008,165,4.008,166,4.008,167,3.178,168,3.577,169,3.703,170,3.577,171,3.703,172,3.703,173,3.703,174,1.989,175,1.96,176,1.96,177,1.96,178,1.96,179,3.3,180,4.886,181,3.241,182,3.577,183,1.209]],["title/interfaces/DOI.html",[0,0.41,629,1.082]],["body/interfaces/DOI.html",[0,0.852,1,0.997,2,0.03,3,0.043,4,0.026,8,0.177,9,0.347,11,1.582,13,1.338,14,1.323,15,2.578,16,2.06,18,2.683,20,0.718,21,0.322,22,0.005,24,1.497,26,1.861,27,2.307,29,0.062,39,1.861,41,1.204,46,1.838,47,1.212,48,0.633,50,1.655,75,1.034,88,1.356,94,1.129,95,1.275,97,2.06,109,1.394,120,1.115,130,0.003,131,0.003,146,1.414,174,1.541,175,1.519,176,1.519,177,1.519,178,1.519,183,1.339,235,0.658,260,2.007,261,1.144,295,2.202,331,0.938,466,1.613,620,1.746,629,1.954,660,2.495,703,1.746,721,2.495,724,1.698,731,2.108,734,0.908,739,1.965,740,1.634,756,1.158,960,1.613,962,1.497,1020,2.175,1088,1.236,1106,1.664,1107,3.381,1108,3.251,1109,3.304,1112,2.789,1113,3.436,1114,2.495,1185,1.718,1186,1.588,1245,1.718,1296,2.459,1330,1.806,1331,2.625,1332,2.58,1333,1.775,1334,1.718,1335,1.806,1336,1.806,1337,1.806,1338,1.806,1339,1.806,1340,1.806,1341,2.537,1342,1.775,1343,1.742,1344,1.806,1345,1.837,1346,1.806,1347,1.775,1348,1.303,1349,1.806,1350,1.837,1351,1.837,1352,1.837,1353,1.837,1354,1.837,1355,1.837,1356,1.837,1357,1.837,1358,1.837,1359,1.806,1360,1.806,1361,2.625,1362,2.625,1363,1.837,1364,1.434,1365,1.434,1366,1.434,1367,1.806,1368,1.775,1369,1.806,1370,2.58,1371,2.625,1372,2.625,1373,1.806,1374,1.837,1375,1.69,1376,1.837,1377,1.837,1378,1.837,1379,1.837,1380,1.837,1381,1.746,1382,3.01,1383,1.806,1384,1.837,1385,1.837,1386,1.746,1387,1.837,1388,1.837,1389,2.58,1390,1.837,1391,2.58,1392,1.775,1393,2.58,1394,1.837,1395,1.837,1396,1.775,1397,1.861,1398,1.806,1399,2.58,1400,1.837,1401,1.837,1402,1.837,1403,1.837,1404,1.837,1405,1.837,1406,1.837,1407,1.806,1408,1.746,1409,1.32,1410,1.837]],["title/classes/Data.html",[44,0.06,331,0.556]],["body/classes/Data.html",[2,0.02,3,0.063,4,0.017,8,0.117,9,0.253,10,0.927,21,0.38,22,0.005,25,0.287,29,0.017,44,0.034,45,3.861,46,1.779,48,0.686,49,2.892,53,0.893,55,1.301,56,2.441,57,1.409,59,1.096,60,1.096,64,0.384,74,3.022,75,2.269,130,0.002,131,0.002,135,2.946,141,3.527,149,5.595,150,5.595,167,2.568,168,2.89,181,1.254,183,0.977,202,1.631,203,1.274,207,1.362,209,1.297,211,3.332,230,3.532,232,3.432,234,4.21,241,6.764,256,3.173,295,1.015,331,1.017,501,0.656,531,4.442,547,2.907,548,3.022,557,3.084,562,2.185,568,3.109,569,1.03,592,3.392,604,4.386,606,2.142,620,2.8,636,2.142,643,5.137,661,5.108,680,7.609,722,5.907,724,2.552,730,6.355,731,1.538,734,1.065,765,0.698,766,1.38,773,2.992,923,7.134,976,6.357,1045,2.725,1058,1.856,1218,5.85,1222,6.227,1301,3.107,1364,0.944,1365,0.944,1366,0.944,1392,1.851,1397,2.414,1585,3.346,1698,2.895,1699,4.583,1700,4.583,1701,6.469,1702,6.469,1703,6.469,1704,6.469,1705,6.469,1706,6.469,1707,6.469,1708,6.469,1709,6.469,1710,6.469,1711,6.469,1712,6.469,1713,6.469,1714,6.469,1715,6.469,1716,6.469,1717,6.469,1718,4.583,1719,4.583,1720,2.639,1721,10.322,1722,3.392,1723,4.583,1724,2.895,1725,4.583,1726,2.895,1727,4.787,1728,5.108,1729,4.583,1730,5.689,1731,2.895,1732,2.895,1733,3.806,1734,2.895,1735,3.806,1736,2.895,1737,9.077,1738,2.895,1739,2.895,1740,5.549,1741,2.895,1742,5.047,1743,2.895,1744,2.895,1745,2.895,1746,2.895,1747,7.713,1748,2.895,1749,2.895,1750,2.895,1751,2.895,1752,2.895,1753,2.895,1754,2.895,1755,6.469,1756,6.469,1757,6.469,1758,2.895,1759,2.895,1760,2.895,1761,2.404,1762,2.895,1763,2.895,1764,2.895,1765,2.895,1766,2.895,1767,2.895,1768,2.895,1769,2.895,1770,2.895,1771,2.895,1772,2.895,1773,2.895,1774,2.895,1775,2.895,1776,2.895,1777,2.895,1778,2.895,1779,2.895,1780,6.781,1781,2.895,1782,2.895,1783,2.599,1784,2.895,1785,2.599,1786,2.599,1787,2.895,1788,2.895,1789,2.895,1790,5.689,1791,5.108,1792,5.108,1793,4.583,1794,2.599,1795,4.583,1796,4.583,1797,4.583,1798,4.583,1799,4.583,1800,4.583,1801,4.583,1802,4.583,1803,4.583,1804,2.895,1805,2.895,1806,2.895,1807,8.591,1808,4.583,1809,2.895,1810,4.583,1811,2.895,1812,4.583,1813,2.895,1814,4.583,1815,2.895,1816,6.469,1817,2.895,1818,2.895,1819,2.895,1820,2.895,1821,2.895,1822,2.895,1823,2.895,1824,2.895,1825,2.895]],["title/components/DebugLogsComponent.html",[250,1.355,352,1.99]],["body/components/DebugLogsComponent.html",[2,0.033,3,0.033,4,0.04,7,2.483,8,0.192,11,1.79,21,0.292,22,0.005,25,0.387,29,0.028,44,0.057,48,0.466,58,2.398,102,1.699,108,1.082,130,0.003,131,0.003,151,3.117,181,2.067,188,1.166,207,1.07,215,0.969,250,2.072,251,1.896,252,2.735,253,1.995,254,1.995,255,1.995,256,1.699,260,1.307,261,2.751,262,4.201,264,2.689,266,2.689,287,1.896,310,2.771,341,2.782,342,2.689,343,1.995,344,3.466,345,1.995,346,1.995,347,1.896,348,1.995,349,1.896,350,1.377,351,1.995,352,3.294,353,1.995,354,1.865,355,1.995,356,1.896,357,1.699,358,1.995,359,1.896,360,1.995,361,1.896,362,1.995,363,1.896,364,2.782,365,1.896,366,1.995,367,1.896,368,1.995,369,1.865,370,1.995,371,1.836,372,1.995,373,1.896,374,1.995,375,1.896,376,1.995,377,1.896,378,1.995,379,1.928,380,1.995,381,1.896,382,1.342,383,1.995,384,1.896,385,1.211,386,1.995,387,1.896,388,2.519,389,1.995,390,1.896,391,1.995,392,1.928,393,1.995,394,1.896,395,1.995,396,1.928,397,1.995,398,1.896,399,1.995,400,1.896,401,1.778,402,1.995,403,1.896,404,1.865,405,1.995,406,1.961,407,1.995,408,1.896,409,1.995,410,1.896,411,1.896,412,1.928,413,1.807,414,1.995,415,1.995,556,1.535,569,1.699,695,3.833,696,2.374,700,3.117,734,0.95,739,2.082,740,2.269,763,3.356,765,1.152,1015,3.578,1017,2.427,1019,2.483,1028,1.181,1032,1.514,1045,3.085,1085,3.384,1087,4.198,1097,4.413,1133,3.511,1134,3.73,1243,5.004,1256,3.011,1257,3.117,1262,5.004,1267,4.198,1268,4.198,1271,3.987,1272,5.23,1273,4.065,1274,2.915,1275,3.944,1276,5.2,1277,5.196,1284,4.932,1288,3.31,1289,2.915,1295,5.004,1296,1.602,1297,2.915,1299,3.117,1300,3.236,1301,3.236,1305,3.944,1306,2.427,1321,5.528,1720,4.413,1826,7.445,1827,6.887,1828,4.774,1829,7.665,1830,6.657,1831,7.665,1832,4.774,1833,4.774,1834,4.774,1835,8.293,1836,3.373,1837,4.774,1838,4.774,1839,5.897,1840,3.724,1841,4.774,1842,4.286,1843,5.977,1844,3.724,1845,4.774,1846,4.774,1847,3.533,1848,4.774,1849,4.286,1850,4.286,1851,2.828,1852,4.286,1853,3.117,1854,3.533]],["title/modules/DebugLogsModule.html",[184,1.108,1855,3.708]],["body/modules/DebugLogsModule.html",[2,0.047,3,0.047,4,0.04,22,0.005,25,0.525,29,0.04,44,0.081,130,0.004,131,0.004,184,1.501,186,2.415,187,2.568,188,1.657,189,3.448,190,2.568,191,2.489,192,3.394,198,3.176,199,2.528,200,2.415,214,3.078,215,1.377,243,3.126,278,3.303,310,1.958,352,4.152,401,2.528,1136,3.802,1416,6.284,1417,6.084,1419,3.333,1420,2.651,1422,5.479,1423,4.43,1424,4.173,1425,5.479,1426,4.43,1427,5.479,1428,5.292,1429,5.021,1430,4.6,1431,5.021,1826,6.092,1827,5.635,1855,7.701,1856,6.092,1857,6.092,1858,6.785,1859,6.092,1860,6.785,1861,6.785,1862,7.534,1863,6.092,1864,6.547,1865,5.021]],["title/interfaces/Degree.html",[0,0.41,87,2.21]],["body/interfaces/Degree.html",[0,0.801,1,1.063,2,0.032,3,0.032,4,0.028,5,2.438,6,4.144,7,4.279,8,0.189,9,0.363,10,0.942,11,2.031,12,3.411,13,2.734,14,1.599,15,2.557,16,2.524,17,3.411,18,2.626,19,2.497,20,0.713,21,0.314,22,0.005,23,3.509,24,1.39,25,0.237,26,2.567,27,1.897,28,1.862,29,0.061,30,2.438,31,2.438,32,2.068,33,2.438,34,2.282,35,2.438,36,2.331,37,2.497,38,1.893,39,1.389,40,2.147,41,1.8,42,2.497,43,2.068,44,0.09,45,2.107,46,1.967,47,1.253,48,0.669,49,4.182,50,1.732,51,2.235,52,2.438,53,2.673,54,3.172,55,2.107,56,4.043,57,2.282,58,2.374,59,2.872,60,2.872,61,3.501,62,3.589,63,3.589,64,0.621,65,3.589,66,2.497,67,2.56,68,2.19,69,2.56,70,2.19,71,3.546,72,2.56,73,2.19,74,2.19,75,1.103,76,3.618,77,2.235,78,3.411,79,4.144,80,2.19,81,2.56,82,2.497,83,2.56,84,2.56,85,2.235,86,2.235,87,2.899,88,2.673,89,2.497,90,2.56,91,2.56,92,2.56,93,2.56,94,1.204,95,1.759,96,3.071,97,1.318,98,1.959,99,2.235,100,1.893,101,3.589,102,1.668,103,3.589,104,2.56,105,2.497,106,4.043,107,2.56,108,1.721,109,1.487,110,2.56,111,2.497,112,2.56,113,1.926,114,1.893,115,2.497,116,1.926,117,1.959,118,1.959,119,1.959,120,1.925,121,1.959,122,1.959,123,2.497,124,2.56,125,2.56,126,2.56,127,2.56,128,2.56,129,2.56,130,0.003,131,0.003]],["title/classes/DeleteCompareSheet.html",[44,0.06,1866,2.295]],["body/classes/DeleteCompareSheet.html",[2,0.047,3,0.034,4,0.03,8,0.2,9,0.377,10,0.711,20,0.632,21,0.4,22,0.005,24,0.749,25,0.395,29,0.062,44,0.124,47,1.017,48,0.347,64,1.037,108,1.126,130,0.003,131,0.003,183,1.459,203,2.339,207,1.093,209,0.996,235,0.52,268,1.891,269,2.172,308,0.881,312,1.936,316,2.229,318,2.962,331,1.116,385,1.259,501,1.126,603,2.518,629,1.689,724,1.849,734,1.291,765,1.198,1004,2.04,1020,1.228,1028,1.692,1031,2.082,1032,1.575,1036,2.658,1084,2.112,1088,2.37,1178,2.19,1215,3.017,1343,1.898,1348,2.027,1409,2.054,1498,2.006,1556,2.231,1557,2.231,1558,2.19,1585,2.04,1596,2.275,1866,3.134,1867,2.32,1868,4.966,1869,6.841,1870,4.966,1871,2.32,1872,2.19,1873,4.353,1874,2.275,1875,2.32,1876,2.231,1877,2.32,1878,2.275,1879,2.81,1880,2.32,1881,2.275,1882,2.275,1883,2.275,1884,2.275,1885,3.196,1886,2.275,1887,2.231,1888,2.275,1889,2.275,1890,2.231,1891,2.19,1892,2.275,1893,2.231,1894,2.231,1895,2.275,1896,2.275,1897,2.32,1898,2.275,1899,2.32,1900,2.32,1901,2.32]],["title/classes/DiscrepencyId.html",[44,0.06,1365,1.634]],["body/classes/DiscrepencyId.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,10,0.778,14,1.143,20,0.359,21,0.395,22,0.005,24,0.819,25,0.414,29,0.06,44,0.121,46,1.663,47,1.056,48,0.38,64,1.16,75,1.277,95,1.476,113,3.366,114,3.873,116,2.23,117,2.269,118,2.269,119,2.269,120,2.078,121,2.269,122,2.269,130,0.003,131,0.003,135,3.038,138,3.266,179,3.206,183,1.866,203,2.294,207,1.144,209,1.089,235,0.569,268,2.019,269,2.131,308,0.963,331,0.909,385,1.377,501,1.231,547,3.266,548,2.536,557,4.572,562,2.588,568,3.206,603,2.631,725,3.465,734,0.673,740,2.132,742,3.465,743,3.538,751,2.76,752,2.76,753,2.824,758,2.7,762,2.824,766,2.588,821,3.828,967,3.906,968,3.828,969,3.548,970,3.906,971,3.906,972,3.906,1028,1.343,1036,2.568,1045,2.894,1058,2.371,1364,1.771,1365,2.371,1366,1.771,1397,1.609,1508,2.892,1902,3.126,1903,5.261,1904,4.509,1905,7.269,1906,5.429,1907,3.042,1908,2.892,1909,2.892,1910,2.964,1911,3.042,1912,3.042,1913,2.892,1914,3.042]],["title/classes/DiscrepencyLabel.html",[44,0.06,1364,1.634]],["body/classes/DiscrepencyLabel.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,10,0.778,14,1.531,20,0.359,21,0.395,22,0.005,24,0.819,25,0.414,29,0.06,44,0.121,46,1.476,47,1.056,48,0.38,64,1.16,75,1.277,95,1.476,113,3.366,114,3.873,116,2.23,117,2.269,118,2.269,119,2.269,120,2.078,121,2.269,122,2.269,130,0.003,131,0.003,135,3.038,138,3.266,179,3.206,183,1.866,203,2.294,207,1.144,209,1.089,235,0.569,268,2.019,269,2.131,308,0.963,331,0.909,385,1.377,501,1.231,547,3.266,548,2.536,557,4.572,562,2.588,568,3.206,603,2.631,725,3.465,734,0.673,740,2.132,742,3.465,743,3.538,751,2.76,752,2.76,753,2.824,758,2.7,762,2.824,766,2.588,821,3.828,967,3.906,968,3.828,969,3.548,970,3.906,971,3.906,972,3.906,1028,1.343,1036,2.568,1045,2.894,1058,2.371,1364,2.371,1365,1.771,1366,1.771,1397,1.609,1508,2.892,1902,3.126,1903,5.261,1904,4.509,1907,3.042,1908,2.892,1909,2.892,1910,2.964,1911,3.042,1912,3.042,1913,2.892,1914,3.042,1915,7.269,1916,5.429]],["title/interfaces/DiscrepencyStructure.html",[0,0.41,114,2.024]],["body/interfaces/DiscrepencyStructure.html",[0,0.799,1,1.044,2,0.032,3,0.032,4,0.027,5,2.395,6,4.104,7,4.246,8,0.186,9,0.358,11,2.022,12,3.378,13,2.718,14,1.583,15,2.543,16,2.51,17,3.378,18,2.613,19,2.453,20,0.713,21,0.35,22,0.005,23,3.489,24,1.383,25,0.232,26,2.227,27,1.873,28,1.829,29,0.061,30,2.419,31,2.395,32,2.031,33,2.395,34,2.241,35,2.395,36,2.29,37,2.453,38,1.86,39,1.364,40,2.109,41,1.777,42,2.453,43,2.031,44,0.09,45,2.069,46,1.96,47,1.266,48,0.666,49,4.15,50,2.268,51,2.195,52,2.395,53,2.655,54,3.732,55,2.069,56,4.004,57,2.241,58,2.352,59,3.379,60,3.379,61,3.457,62,3.544,63,3.544,64,0.61,65,3.544,66,2.453,67,2.514,68,2.151,69,2.514,70,2.151,71,3.512,72,2.514,73,2.151,74,2.151,75,1.084,76,3.584,77,2.195,78,3.378,79,4.104,80,2.151,81,2.514,82,2.453,83,2.514,84,2.514,85,2.195,86,2.195,87,2.031,88,2.003,89,2.453,90,2.514,91,2.514,92,2.514,93,2.514,94,1.183,95,1.747,96,3.032,97,1.294,98,1.925,99,2.195,100,1.86,101,3.544,102,1.639,103,3.544,104,2.514,105,2.453,106,4.004,107,2.514,108,1.704,109,1.461,110,2.514,111,2.453,112,2.514,113,1.892,114,2.622,115,2.453,116,1.892,117,1.925,118,1.925,119,1.925,120,1.907,121,1.925,122,1.925,123,2.453,124,2.514,125,2.514,126,2.514,127,2.514,128,2.514,129,2.514,130,0.003,131,0.003]],["title/classes/DoSearch.html",[44,0.06,1910,2.736]],["body/classes/DoSearch.html",[2,0.037,3,0.037,4,0.032,8,0.216,9,0.398,10,0.768,14,1.128,20,0.355,21,0.396,22,0.005,24,0.808,25,0.411,29,0.06,44,0.12,46,1.463,47,1.05,48,0.375,64,1.153,75,1.261,95,1.463,113,4.044,114,3.516,116,2.201,117,2.239,118,2.239,119,2.239,120,2.065,121,2.239,122,2.239,130,0.003,131,0.003,135,3.011,138,3.238,179,3.178,183,1.856,203,2.29,207,1.215,209,1.075,235,0.562,268,2.035,269,2.127,308,0.95,331,0.903,385,1.359,501,1.215,547,3.238,548,2.503,557,4.33,562,2.554,568,3.178,603,2.627,725,3.435,734,0.664,740,2.118,742,3.435,743,3.507,751,2.724,752,2.724,753,2.787,758,2.665,762,2.787,766,2.554,821,3.803,967,3.881,968,3.803,969,3.525,970,3.881,971,3.881,972,3.881,1028,1.325,1036,2.561,1045,2.881,1058,2.839,1364,1.748,1365,1.748,1366,1.748,1397,1.588,1508,2.854,1902,3.085,1903,4.561,1907,3.002,1908,2.854,1909,2.854,1910,3.934,1911,4.878,1912,5.089,1913,2.854,1914,3.002,1917,5.359,1918,7.205,1919,5.359,1920,5.359]],["title/components/DocsComponent.html",[250,1.355,354,1.958]],["body/components/DocsComponent.html",[2,0.024,3,0.024,4,0.038,8,0.214,9,0.293,10,0.761,11,1.917,20,0.509,21,0.339,22,0.005,25,0.438,29,0.021,30,1.038,44,0.042,47,0.929,48,0.501,58,1.096,64,0.704,102,1.89,108,0.794,130,0.002,131,0.002,181,2.3,188,0.855,202,1.89,207,1.387,209,1.065,210,2.475,211,2.66,215,0.711,218,1.705,219,2.642,220,2.83,235,0.882,245,2.145,250,1.735,251,1.391,252,2.182,253,1.464,254,1.464,255,1.464,256,1.246,258,2.586,259,3.695,260,0.959,261,2.686,262,4.108,263,5.22,264,2.145,266,2.145,268,1.848,269,0.729,270,6.767,284,2.209,287,1.391,298,3.167,299,2.016,305,4.517,308,1.494,310,1.011,329,2.016,331,0.795,339,2.138,341,2.22,342,2.145,343,1.464,344,2.994,345,1.464,346,1.464,347,1.391,348,1.464,349,1.391,350,1.011,351,1.464,352,1.391,353,1.464,354,2.799,355,1.464,356,1.391,357,2.74,358,1.464,359,1.391,360,1.464,361,1.391,362,1.464,363,1.391,364,2.22,365,1.391,366,1.464,367,1.391,368,1.464,369,1.369,370,1.464,371,1.347,372,1.464,373,1.391,374,1.464,375,1.391,376,1.464,377,1.391,378,1.464,379,1.414,380,1.464,381,1.391,382,1.493,383,1.464,384,1.391,385,0.888,386,1.464,387,1.391,388,2.01,389,1.464,390,1.391,391,1.464,392,1.414,393,1.464,394,1.391,395,1.464,396,1.414,397,1.464,398,1.391,399,1.464,400,1.391,401,1.305,402,1.464,403,1.391,404,1.369,405,1.464,406,1.439,407,1.464,408,1.391,409,1.464,410,1.391,411,1.391,412,1.414,413,1.325,414,1.464,415,1.464,431,5.424,450,2.475,466,1.285,556,2.304,569,1.89,628,2.475,638,2.592,658,3.468,659,3.468,696,2.642,739,2.008,740,0.911,921,4.411,969,2.3,1019,1.822,1021,4.749,1034,2.682,1049,2.549,1075,4.204,1093,4.314,1112,2.036,1138,1.822,1139,1.822,1141,2.075,1186,1.265,1262,2.287,1267,2.209,1268,2.209,1271,4.38,1275,2.075,1281,4.005,1284,3.504,1288,4.187,1289,3.919,1306,3.263,1310,2.732,1314,2.016,1317,3.931,1318,4.144,1386,2.549,1664,3.244,1665,4.535,1780,2.592,1839,2.287,1879,2.636,1921,3.502,1922,6.418,1923,5.312,1924,9.057,1925,5.33,1926,5.762,1927,7.521,1928,8.104,1929,6.73,1930,6.73,1931,6.323,1932,6.418,1933,5.698,1934,4.769,1935,7.163,1936,5.949,1937,6.431,1938,6.431,1939,2.732,1940,5.312,1941,5.312,1942,3.502,1943,3.502,1944,3.502,1945,3.502,1946,3.502,1947,3.502,1948,3.502,1949,4.411,1950,3.502,1951,3.502,1952,3.502,1953,3.502,1954,3.502,1955,3.502,1956,3.502,1957,3.502,1958,3.502,1959,3.502,1960,3.502,1961,2.592,1962,2.475,1963,2.592,1964,3.502,1965,2.908,1966,2.908,1967,2.908,1968,2.908,1969,3.502,1970,5.312,1971,5.312,1972,3.502,1973,4.411,1974,3.144,1975,3.502,1976,3.502,1977,3.502,1978,2.592,1979,3.502,1980,3.502,1981,2.287,1982,3.502,1983,3.502,1984,5.588,1985,7.163,1986,3.502,1987,6.418,1988,3.144,1989,2.908,1990,5.007,1991,5.949,1992,2.908,1993,5.726,1994,3.144,1995,3.144,1996,5.762,1997,3.931,1998,4.769,1999,5.312,2000,4.411,2001,3.144,2002,2.908,2003,4.047,2004,3.601,2005,3.144,2006,3.144,2007,4.769,2008,4.769,2009,4.769,2010,4.769,2011,2.908,2012,3.502,2013,3.144,2014,3.144,2015,2.732,2016,2.732,2017,2.908,2018,2.592,2019,2.908,2020,3.502,2021,3.502,2022,3.502,2023,3.502,2024,3.502,2025,2.732,2026,3.502,2027,5.312,2028,3.502,2029,3.502,2030,3.144,2031,3.502,2032,3.502,2033,2.908,2034,3.502,2035,3.502,2036,5.588,2037,4.411,2038,4.144,2039,2.374,2040,3.502,2041,3.144]],["title/modules/DocsModule.html",[184,1.108,423,3.708]],["body/modules/DocsModule.html",[2,0.048,3,0.048,4,0.041,22,0.005,25,0.521,29,0.041,44,0.082,130,0.004,131,0.004,184,1.532,186,2.465,187,2.622,188,1.692,189,3.48,190,2.622,191,2.541,192,3.426,198,3.217,199,2.581,200,2.465,214,3.118,215,1.406,218,3.372,243,3.167,284,4.369,354,4.096,357,2.465,423,7.723,425,6.789,446,7.059,447,5.405,456,6.22,491,6.29,1419,3.376,1420,2.707,2042,6.22,2043,6.22,2044,6.22,2045,6.22,2046,7.411,2047,6.928,2048,6.928,2049,7.631,2050,6.22,2051,5.762,2052,4.697,2053,4.697,2054,5.753,2055,6.928]],["title/components/DocsNavComponent.html",[250,1.355,356,1.99]],["body/components/DocsNavComponent.html",[2,0.034,3,0.034,4,0.041,8,0.201,9,0.378,11,1.48,21,0.322,22,0.005,25,0.396,29,0.03,44,0.059,47,1.019,48,0.48,58,2.145,108,1.129,130,0.003,131,0.003,181,2.157,188,1.217,207,1.309,215,1.011,235,0.928,236,4.856,250,2.119,251,1.978,252,2.816,253,2.082,254,2.082,255,2.082,256,1.772,260,1.364,261,2.759,262,4.213,264,2.769,266,2.769,287,1.978,308,1.571,310,1.437,341,2.865,342,2.769,343,2.082,344,3.529,345,2.082,346,2.082,347,1.978,348,2.082,349,1.978,350,1.437,351,2.082,352,1.978,353,2.082,354,1.946,355,2.082,356,3.354,357,3.399,358,2.082,359,1.978,360,2.082,361,1.978,362,2.082,363,1.978,364,2.865,365,1.978,366,2.082,367,1.978,368,2.082,369,1.946,370,2.082,371,1.915,372,2.082,373,1.978,374,2.082,375,1.978,376,2.082,377,1.978,378,2.082,379,2.012,380,2.082,381,1.978,382,2.203,383,2.082,384,1.978,385,1.263,386,2.082,387,1.978,388,2.594,389,2.082,390,1.978,391,2.082,392,2.012,393,2.082,394,1.978,395,2.082,396,2.012,397,2.082,398,1.978,399,2.082,400,1.978,401,1.856,402,2.082,403,1.978,404,1.946,405,2.082,406,2.046,407,2.082,408,1.978,409,2.082,410,1.978,411,1.978,412,2.012,413,1.885,414,2.082,415,2.082,569,2.44,638,3.686,658,3.252,659,3.252,821,4.137,1085,3.485,1087,4.323,1097,5.098,1133,3.591,1134,4.392,1253,4.28,1254,2.951,1261,4.471,1281,2.591,1288,2.477,1291,4.136,1312,3.041,1314,3.947,1664,4.186,1839,3.252,1887,3.081,1931,7.14,1961,3.686,1962,3.519,1963,3.686,1965,4.136,2033,4.136,2054,7.933,2056,8.576,2057,4.981,2058,7.839,2059,6.855,2060,9.152,2061,9.152,2062,7.839,2063,7.839,2064,7.839,2065,4.981,2066,4.981,2067,4.981,2068,4.981,2069,4.981,2070,4.981,2071,4.981,2072,6.855,2073,6.855,2074,6.855,2075,4.981,2076,4.981,2077,5.348,2078,4.981,2079,4.981]],["title/modules/DocsNavModule.html",[184,1.108,2046,3.708]],["body/modules/DocsNavModule.html",[2,0.051,3,0.051,4,0.044,22,0.005,25,0.496,29,0.044,44,0.088,130,0.004,131,0.004,184,1.643,186,2.643,187,2.811,188,1.814,189,3.586,190,2.811,191,2.725,192,3.531,198,3.355,199,2.767,200,2.643,214,3.252,215,1.508,243,2.767,356,4.199,357,2.643,1419,3.522,1420,2.902,2046,7.613,2051,6.01,2052,5.035,2053,5.035,2054,6.168,2056,6.668,2080,6.668,2081,6.668,2082,6.668,2083,7.428,2084,7.428]],["title/injectables/DocsService.html",[709,2.094,1927,4.161]],["body/injectables/DocsService.html",[2,0.044,3,0.044,4,0.038,8,0.327,9,0.447,10,1.337,20,0.65,21,0.356,22,0.005,25,0.471,29,0.038,30,1.901,43,2.83,44,0.076,46,1.302,47,1.071,48,0.653,64,0.85,130,0.004,131,0.004,202,2.883,207,1.372,209,1.871,211,3.068,215,1.302,232,3.32,235,0.849,269,1.335,298,2.507,308,1.437,357,2.883,434,5.005,447,6.321,556,2.063,569,2.883,709,3.386,711,3.595,771,4.046,772,5.005,1045,2.57,1112,2.57,1137,3.337,1441,5.328,1442,7.748,1444,6.729,1638,6.321,1926,7.973,1927,6.729,1931,7.665,1965,5.328,2085,6.416,2086,8.103,2087,8.103,2088,8.103,2089,8.103,2090,8.103,2091,6.416,2092,8.103,2093,6.416,2094,8.103,2095,6.416,2096,8.881,2097,8.103,2098,6.416,2099,8.103,2100,8.103,2101,8.103,2102,6.416,2103,5.76,2104,6.416,2105,6.416,2106,6.416]],["title/components/DoiComponent.html",[250,1.355,359,1.99]],["body/components/DoiComponent.html",[2,0.034,3,0.034,4,0.041,8,0.199,9,0.376,10,0.708,15,1.941,21,0.321,22,0.005,25,0.425,29,0.029,44,0.059,46,1.384,48,0.546,53,2.725,58,1.546,64,0.903,108,1.12,130,0.003,131,0.003,188,1.207,202,2.426,207,1.306,209,0.991,211,1.707,215,1.003,232,1.758,235,0.818,245,2.754,250,2.11,251,1.963,252,2.801,253,2.065,254,2.065,255,2.065,256,1.758,258,3.318,259,4.494,260,1.353,261,2.758,262,4.211,264,2.754,266,2.754,268,1.808,287,1.963,298,2.664,308,1.385,310,1.426,329,2.844,331,0.934,341,2.849,342,2.754,343,2.065,344,3.517,345,2.065,346,2.065,347,1.963,348,2.065,349,1.963,350,1.426,351,2.065,352,1.963,353,2.065,354,1.931,355,2.065,356,1.963,357,1.758,358,2.065,359,3.343,360,2.065,361,1.963,362,2.065,363,1.963,364,2.849,365,1.963,366,2.065,367,1.963,368,2.065,369,1.931,370,2.065,371,1.9,372,2.065,373,1.963,374,2.065,375,1.963,376,2.065,377,1.963,378,2.065,379,1.996,380,2.065,381,1.963,382,1.389,383,2.065,384,1.963,385,1.253,386,2.065,387,1.963,388,2.58,389,2.065,390,1.963,391,2.065,392,1.996,393,2.065,394,1.963,395,2.065,396,1.996,397,2.065,398,1.963,399,2.065,400,1.963,401,1.841,402,2.065,403,1.963,404,1.931,405,2.065,406,2.03,407,2.065,408,1.963,409,2.065,410,1.963,411,1.963,412,1.996,413,1.87,414,2.065,415,2.065,629,2.182,694,3.35,734,0.612,739,1.546,740,1.285,756,1.796,763,2.978,764,1.87,765,1.192,1027,3.954,1035,3.343,1274,3.017,1275,2.927,1529,2.698,1579,5.662,1761,4.103,1839,3.226,1853,3.226,1854,3.656,2107,4.941,2108,7.806,2109,6.818,2110,7.008,2111,7.928,2112,3.017,2113,7.928,2114,6.818,2115,4.941,2116,6.121,2117,4.941,2118,4.941,2119,4.941,2120,4.941,2121,3.226,2122,4.436,2123,3.656,2124,4.436,2125,4.941,2126,4.941,2127,4.941,2128,4.941,2129,4.941,2130,4.941,2131,4.941,2132,7.806,2133,4.941,2134,4.436,2135,6.818,2136,6.818,2137,6.818,2138,4.103]],["title/modules/DoiModule.html",[184,1.108,2139,3.708]],["body/modules/DoiModule.html",[2,0.05,3,0.05,4,0.044,22,0.005,25,0.512,29,0.044,44,0.087,130,0.004,131,0.004,184,1.621,186,2.608,187,2.773,188,1.79,189,3.566,190,2.773,191,2.688,192,3.511,198,3.328,199,2.73,200,2.608,214,3.226,215,1.488,243,2.73,278,3.567,359,4.192,734,0.908,1419,3.493,1420,2.864,1424,4.373,1432,4.109,1433,3.424,2123,5.423,2139,7.593,2140,6.579,2141,6.579,2142,6.579,2143,7.329,2144,7.329,2145,7.303]],["title/classes/DuplicateId.html",[44,0.06,1366,1.634]],["body/classes/DuplicateId.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,10,0.778,14,1.143,20,0.359,21,0.395,22,0.005,24,0.819,25,0.414,29,0.06,44,0.121,46,1.663,47,1.056,48,0.38,64,1.16,75,1.277,95,1.476,113,3.366,114,3.873,116,2.23,117,2.269,118,2.269,119,2.269,120,2.078,121,2.269,122,2.269,130,0.003,131,0.003,135,3.038,138,3.266,179,3.206,183,1.866,203,2.294,207,1.144,209,1.089,235,0.569,268,2.019,269,2.131,308,0.963,331,0.909,385,1.377,501,1.231,547,3.266,548,2.536,557,4.476,562,3.465,568,3.206,603,2.631,725,3.465,734,0.673,740,2.132,742,3.465,743,3.538,751,2.76,752,2.76,753,2.824,758,2.7,762,2.824,766,2.588,821,3.828,967,3.906,968,3.828,969,3.548,970,3.906,971,3.906,972,3.906,1028,1.343,1036,2.568,1045,2.894,1058,2.371,1364,1.771,1365,1.771,1366,2.371,1397,1.609,1508,2.892,1902,3.126,1903,5.261,1904,4.509,1907,3.042,1908,2.892,1909,2.892,1910,2.964,1911,3.042,1912,3.042,1913,2.892,1914,3.042,2146,7.269,2147,5.429]],["title/interfaces/EntityWithNoOtherEntity.html",[0,0.41,1002,3.397]],["body/interfaces/EntityWithNoOtherEntity.html",[0,0.82,1,1.577,2,0.048,3,0.048,4,0.041,8,0.28,9,0.47,14,2.022,16,2.769,18,2.734,20,0.702,21,0.375,22,0.005,25,0.43,28,2.763,29,0.06,47,1.158,48,0.596,94,2.366,95,1.949,98,3.85,130,0.004,131,0.004,139,4.005,146,2.741,235,0.729,312,2.108,331,0.772,734,1.142,823,5.777,995,4.717,996,4.916,997,4.916,998,4.916,999,4.916,1000,6.021,1001,4.916,1002,6.509,1003,4.916,1004,2.858,1005,4.717,1006,4.717]],["title/interfaces/Error.html",[0,0.41,763,1.634]],["body/interfaces/Error.html",[0,0.76,1,1.609,2,0.049,3,0.049,4,0.042,8,0.286,9,0.476,10,1.474,20,0.655,21,0.368,22,0.005,24,1.519,29,0.057,39,2.103,47,1.166,130,0.004,131,0.004,331,0.788,743,3.454,756,2.547,763,3.153,821,4.03,960,3.634,962,3.373,967,4.112,968,4.03,969,3.735,970,4.112,971,4.112,972,4.112,1030,2.819,1231,4.476,2148,5.537,2149,8.028,2150,5.252,2151,5.848,2152,6.095,2153,5.537]],["title/components/ErrorComponent.html",[250,1.355,361,1.99]],["body/components/ErrorComponent.html",[2,0.036,3,0.036,4,0.042,8,0.21,11,1.126,21,0.199,22,0.005,25,0.357,29,0.031,44,0.062,48,0.495,95,1.63,108,1.183,130,0.003,131,0.003,188,1.274,200,2.518,207,0.728,215,1.059,219,3.519,250,2.171,251,2.072,252,2.907,253,2.18,254,2.18,255,2.18,256,1.857,260,1.429,261,2.767,262,4.225,264,2.858,266,2.858,280,5.236,287,2.072,310,1.505,312,1.75,331,0.956,341,2.957,342,2.858,343,2.18,344,3.599,345,2.18,346,2.18,347,2.072,348,2.18,349,2.072,350,1.505,351,2.18,352,2.072,353,2.18,354,2.039,355,2.18,356,2.072,357,1.857,358,2.18,359,2.072,360,2.18,361,3.42,362,2.18,363,2.072,364,2.957,365,2.072,366,2.18,367,2.072,368,2.18,369,2.039,370,2.18,371,2.006,372,2.18,373,2.072,374,2.18,375,2.072,376,2.18,377,2.072,378,2.18,379,2.107,380,2.18,381,2.072,382,1.466,383,2.18,384,2.072,385,1.323,386,2.18,387,2.072,388,2.678,389,2.18,390,2.072,391,2.18,392,2.107,393,2.18,394,2.072,395,2.18,396,2.107,397,2.18,398,2.072,399,2.18,400,2.072,401,1.944,402,2.18,403,2.072,404,2.039,405,2.18,406,2.143,407,2.18,408,2.072,409,2.18,410,2.072,411,2.072,412,2.107,413,1.974,414,2.18,415,2.18,548,3.306,627,4.62,628,5,695,3.004,734,1.067,739,1.632,745,4.462,763,3.258,764,1.974,969,2.259,985,5.876,1020,1.75,1045,2.244,1085,3.597,1106,3.258,1133,3.242,1144,7.73,1221,5.876,1223,5.876,1224,5.236,1229,5.876,1237,6.084,1240,6.372,1272,3.29,1273,3.186,1295,3.406,1296,1.751,1297,3.186,1298,4.321,1299,3.406,1617,6.353,1636,6.353,1642,4.684,1879,2.907,1993,5,1997,5.236,2019,4.333,2154,5.217,2155,8.03,2156,7.076,2157,5.217,2158,7.076,2159,6.353,2160,7.076,2161,7.076,2162,6.353,2163,7.076,2164,6.717,2165,7.076,2166,6.353,2167,7.076,2168,7.076,2169,7.076,2170,8.61,2171,5.217,2172,7.076,2173,7.076,2174,7.076,2175,6.353,2176,5.217,2177,5.217,2178,5.217,2179,5.217,2180,5.217]],["title/modules/ErrorModule.html",[184,1.108,2181,3.708]],["body/modules/ErrorModule.html",[2,0.052,3,0.052,4,0.045,22,0.005,25,0.482,29,0.045,44,0.09,130,0.004,131,0.004,184,1.668,186,2.684,187,2.854,188,1.842,189,3.61,190,2.854,191,2.766,192,3.553,198,3.385,199,2.809,200,2.684,214,3.282,215,1.531,243,2.809,361,4.206,1419,3.553,1420,2.947,2181,7.636,2182,6.77,2183,6.77,2184,6.77,2185,7.541,2186,7.541]],["title/interfaces/ExportVega.html",[0,0.41,2153,3.909]],["body/interfaces/ExportVega.html",[0,0.771,1,1.662,2,0.05,3,0.05,4,0.044,8,0.295,9,0.485,10,1.26,20,0.661,21,0.335,22,0.005,24,1.326,29,0.058,39,2.171,47,1.061,130,0.004,131,0.004,331,0.813,743,4.756,756,1.931,763,3.073,821,4.109,960,3.226,962,2.994,967,4.193,968,4.109,969,3.808,970,4.193,971,4.193,972,4.193,1030,2.911,1231,6.163,2148,5.717,2149,6.086,2150,5.423,2151,5.962,2152,6.214,2153,6.861]],["title/classes/FetchAllOrganData.html",[44,0.06,1878,2.295]],["body/classes/FetchAllOrganData.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.709,20,0.631,21,0.4,22,0.005,24,0.746,25,0.394,29,0.062,44,0.124,47,0.597,48,0.346,64,1.035,108,1.548,130,0.003,131,0.003,183,1.456,203,2.338,207,1.091,209,0.993,235,0.519,268,1.889,269,2.172,308,0.878,312,1.933,316,1.944,318,2.957,331,1.122,385,1.256,501,1.122,603,2.517,629,1.687,724,1.846,734,1.304,765,1.194,1004,2.034,1020,1.225,1028,1.689,1031,2.078,1032,1.57,1036,2.657,1084,2.106,1088,2.367,1178,2.183,1215,2.183,1343,1.894,1348,2.023,1409,2.05,1498,2,1556,2.225,1557,2.225,1558,2.183,1585,2.034,1596,2.268,1866,2.268,1867,2.313,1871,2.313,1872,2.183,1873,4.403,1874,2.268,1875,2.313,1876,2.225,1877,2.313,1878,3.127,1879,2.804,1880,2.313,1881,2.268,1882,2.268,1883,2.268,1884,2.268,1885,3.19,1886,2.268,1887,2.225,1888,2.268,1889,2.268,1890,2.225,1891,2.183,1892,2.268,1893,2.225,1894,2.225,1895,2.268,1896,2.268,1897,2.313,1898,2.268,1899,2.313,1900,2.313,1901,2.313,2187,3.498,2188,6.827,2189,4.951]],["title/classes/FetchCompareData.html",[44,0.06,1881,2.295]],["body/classes/FetchCompareData.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.709,20,0.631,21,0.4,22,0.005,24,0.746,25,0.394,29,0.062,44,0.124,47,0.597,48,0.346,64,1.035,108,1.122,130,0.003,131,0.003,183,1.456,203,2.338,207,1.091,209,0.993,235,0.519,268,1.889,269,2.172,308,0.878,312,1.933,316,2.225,318,2.957,331,1.122,385,1.256,501,1.122,603,2.517,629,1.687,724,1.846,734,1.288,765,1.194,1004,2.034,1020,1.225,1028,1.689,1031,2.078,1032,1.57,1036,2.657,1084,2.106,1088,2.754,1178,2.183,1215,2.183,1343,1.894,1348,2.023,1409,2.05,1498,2,1556,2.225,1557,2.225,1558,2.183,1585,2.034,1596,2.268,1866,2.268,1867,2.313,1871,2.313,1872,2.183,1873,4.403,1874,2.268,1875,2.313,1876,2.225,1877,2.313,1878,2.268,1879,2.804,1880,2.313,1881,3.127,1882,2.268,1883,2.268,1884,2.268,1885,3.19,1886,2.268,1887,2.225,1888,2.268,1889,2.268,1890,2.225,1891,2.183,1892,2.268,1893,2.225,1894,2.225,1895,2.268,1896,2.268,1897,2.313,1898,2.268,1899,2.313,1900,2.313,1901,2.313,2190,4.951,2191,6.827,2192,4.951]],["title/classes/FetchDataFromAssets.html",[44,0.06,1876,2.252]],["body/classes/FetchDataFromAssets.html",[2,0.047,3,0.034,4,0.029,8,0.197,9,0.373,10,0.7,20,0.653,21,0.4,22,0.005,24,0.737,25,0.392,29,0.062,44,0.124,47,0.589,48,0.342,64,1.028,108,1.108,130,0.003,131,0.003,183,1.443,203,2.335,207,1.17,209,0.98,235,0.512,268,1.936,269,2.169,308,0.867,312,1.92,316,1.927,318,2.937,331,1.12,385,1.24,501,1.108,603,2.51,629,1.675,724,1.829,734,1.304,765,1.179,1004,2.008,1020,2.072,1028,1.674,1031,2.06,1032,1.55,1036,2.653,1084,2.079,1088,2.354,1178,2.155,1215,2.155,1343,1.877,1348,2.005,1409,2.032,1498,1.974,1556,2.196,1557,2.196,1558,2.155,1585,2.008,1596,2.239,1866,2.239,1867,2.283,1871,2.283,1872,2.155,1873,4.392,1874,2.239,1875,2.283,1876,3.041,1877,3.161,1878,2.239,1879,2.779,1880,2.283,1881,2.239,1882,2.239,1883,2.239,1884,2.239,1885,3.161,1886,2.239,1887,2.196,1888,2.239,1889,2.239,1890,2.196,1891,2.155,1892,2.239,1893,2.196,1894,2.196,1895,2.239,1896,2.239,1897,2.283,1898,2.239,1899,2.283,1900,2.283,1901,2.283,2193,4.887,2194,6.766,2195,4.887,2196,4.887]],["title/classes/FetchInitialPlaygroundData.html",[44,0.06,1889,2.295]],["body/classes/FetchInitialPlaygroundData.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,1.117,20,0.63,21,0.4,22,0.005,24,0.743,25,0.394,29,0.062,44,0.124,47,0.595,48,0.345,64,1.033,108,1.118,130,0.003,131,0.003,183,1.451,203,2.337,207,1.089,209,0.989,235,0.517,268,1.888,269,2.171,308,0.875,312,1.929,316,1.939,318,3.182,331,1.122,385,1.251,501,1.118,603,2.515,629,1.683,724,1.84,734,1.303,738,2.839,765,1.189,1004,2.026,1020,1.22,1028,1.684,1031,2.072,1032,1.564,1036,2.656,1084,2.097,1088,2.363,1178,2.175,1215,2.175,1343,1.889,1348,2.017,1409,2.045,1498,1.992,1556,2.216,1557,2.216,1558,2.175,1585,2.026,1596,2.259,1866,2.259,1867,2.304,1871,2.304,1872,2.175,1873,4.4,1874,2.259,1875,2.304,1876,2.216,1877,2.304,1878,2.259,1879,2.797,1880,2.304,1881,2.259,1882,2.259,1883,2.259,1884,2.259,1885,3.181,1886,2.259,1887,2.216,1888,2.259,1889,3.119,1890,3.06,1891,2.175,1892,2.259,1893,2.216,1894,2.216,1895,2.259,1896,2.259,1897,2.304,1898,2.259,1899,2.304,1900,2.304,1901,2.304,2187,3.484,2197,6.808,2198,4.931]],["title/classes/FetchPlaygroundUploadData.html",[44,0.06,1892,2.295]],["body/classes/FetchPlaygroundUploadData.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.709,20,0.655,21,0.4,22,0.005,24,0.746,25,0.394,29,0.062,44,0.124,47,0.597,48,0.346,64,1.035,108,1.121,130,0.003,131,0.003,183,1.455,203,2.338,207,1.09,209,0.992,235,0.518,268,1.889,269,2.172,308,0.877,312,1.932,316,1.943,318,3.186,331,1.138,385,1.254,501,1.121,603,2.516,629,1.686,724,1.844,734,1.288,765,1.193,1004,2.032,1020,1.223,1028,1.687,1031,2.077,1032,1.569,1036,2.657,1084,2.902,1088,2.366,1178,2.181,1215,2.181,1343,1.893,1348,2.022,1409,2.049,1498,1.998,1556,2.223,1557,2.223,1558,2.181,1585,2.032,1596,2.266,1866,2.266,1867,2.311,1871,2.311,1872,2.181,1873,4.402,1874,2.266,1875,2.311,1876,2.223,1877,2.311,1878,2.266,1879,2.803,1880,2.311,1881,2.266,1882,2.266,1883,2.266,1884,2.266,1885,3.187,1886,2.266,1887,2.223,1888,2.266,1889,2.266,1890,2.223,1891,2.181,1892,3.125,1893,2.223,1894,2.223,1895,2.266,1896,2.266,1897,2.311,1898,2.266,1899,2.311,1900,2.311,1901,2.311,2112,3.02,2199,6.822,2200,4.946]],["title/classes/FetchSelectedOrganData.html",[44,0.06,1556,2.252]],["body/classes/FetchSelectedOrganData.html",[2,0.046,3,0.033,4,0.028,8,0.191,9,0.366,10,1.095,20,0.665,21,0.401,22,0.005,24,0.716,25,0.386,29,0.062,44,0.123,47,0.573,48,0.332,64,1.012,108,1.076,130,0.003,131,0.003,183,1.414,203,2.329,207,1.259,209,0.952,235,0.497,268,1.991,269,2.163,308,0.842,312,1.89,316,1.888,318,2.892,331,1.115,385,1.204,501,1.076,603,2.496,629,1.649,724,1.792,734,1.299,738,2.733,765,1.145,1004,1.95,1020,1.174,1028,1.64,1031,2.018,1032,1.505,1036,2.643,1084,2.019,1088,2.601,1178,2.093,1215,2.093,1343,2.12,1348,1.965,1409,1.991,1498,3.515,1556,2.98,1557,2.133,1558,2.093,1585,1.95,1596,3.987,1866,2.174,1867,2.217,1871,2.217,1872,2.093,1873,4.366,1874,2.174,1875,2.217,1876,2.133,1877,2.217,1878,2.174,1879,3.139,1880,4.066,1881,2.174,1882,2.174,1883,2.174,1884,2.174,1885,3.098,1886,2.174,1887,2.133,1888,2.174,1889,2.174,1890,2.133,1891,2.093,1892,2.174,1893,2.133,1894,2.133,1895,2.174,1896,2.174,1897,2.217,1898,2.174,1899,2.217,1900,2.217,1901,2.217,2187,3.354,2201,6.63,2202,4.746,2203,4.746,2204,4.746,2205,4.746]],["title/classes/FetchSheetData.html",[44,0.06,1872,2.21]],["body/classes/FetchSheetData.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.709,20,0.631,21,0.4,22,0.005,24,0.746,25,0.394,29,0.062,44,0.124,47,0.597,48,0.346,64,1.035,108,1.122,130,0.003,131,0.003,183,1.456,203,2.338,207,1.091,209,0.993,235,0.519,268,1.889,269,2.172,308,0.878,312,1.933,316,1.944,318,2.957,331,1.122,385,1.256,501,1.122,603,2.517,629,1.687,724,1.846,734,1.306,765,1.194,1004,2.034,1020,1.225,1028,1.689,1031,2.078,1032,1.57,1036,2.657,1084,2.106,1088,2.367,1178,2.183,1215,2.183,1343,1.894,1348,2.023,1409,2.05,1498,2,1556,2.225,1557,2.225,1558,2.183,1585,2.034,1596,2.268,1866,2.268,1867,2.313,1871,2.313,1872,3.011,1873,4.403,1874,2.268,1875,2.313,1876,2.225,1877,2.313,1878,2.268,1879,2.804,1880,2.313,1881,2.268,1882,2.268,1883,2.268,1884,2.268,1885,3.19,1886,2.268,1887,2.225,1888,2.268,1889,2.268,1890,2.225,1891,2.183,1892,2.268,1893,2.225,1894,2.225,1895,2.268,1896,2.268,1897,2.313,1898,2.268,1899,2.313,1900,2.313,1901,2.313,2187,3.498,2206,6.827,2207,4.951]],["title/classes/FetchValidOmapProtiens.html",[44,0.06,1896,2.295]],["body/classes/FetchValidOmapProtiens.html",[2,0.048,3,0.035,4,0.03,8,0.203,9,0.382,20,0.634,21,0.399,22,0.005,24,0.761,25,0.398,29,0.062,44,0.124,47,0.609,64,0.917,108,1.144,130,0.003,131,0.003,183,1.475,203,2.342,207,0.705,235,0.529,268,1.82,269,2.176,308,0.895,312,1.952,316,1.97,318,2.987,331,1.125,385,1.755,501,1.144,603,2.526,629,1.704,724,1.87,734,1.29,765,1.217,1004,2.073,1020,1.248,1028,1.711,1031,2.106,1032,1.601,1036,2.664,1084,2.147,1088,2.387,1178,3.051,1215,2.226,1343,1.919,1348,2.05,1409,2.077,1498,2.038,1556,2.268,1557,2.268,1558,2.226,1585,2.073,1596,2.312,1866,2.312,1867,2.358,1871,2.358,1872,2.226,1873,4.42,1874,2.312,1875,2.358,1876,2.268,1877,2.358,1878,2.312,1879,2.842,1880,2.358,1881,2.312,1882,2.312,1883,2.312,1884,2.312,1885,3.232,1886,2.312,1887,2.268,1888,2.312,1889,2.312,1890,2.268,1891,2.226,1892,2.312,1893,2.268,1894,2.268,1895,2.312,1896,3.169,1897,3.232,1898,2.312,1899,2.358,1900,2.358,1901,2.358,2208,5.047]],["title/components/FileUploadComponent.html",[250,1.355,363,1.99]],["body/components/FileUploadComponent.html",[2,0.027,3,0.027,4,0.06,8,0.158,9,0.319,10,1.253,11,1.483,20,0.579,21,0.349,22,0.005,25,0.292,29,0.023,30,1.714,44,0.047,48,0.652,53,1.785,74,3.542,102,1.397,108,0.89,130,0.003,131,0.003,188,0.959,191,2.122,202,2.059,207,1.348,209,1.753,211,3.021,215,0.797,230,3.751,232,1.397,235,0.96,236,3.492,244,5.356,245,3.062,250,1.857,251,1.559,252,2.376,253,1.64,254,1.64,255,1.64,256,1.397,258,2.815,260,1.075,261,2.712,262,4.141,264,2.336,266,2.336,287,1.559,298,3.735,308,1.434,310,1.132,320,5.193,323,4.139,341,2.418,342,2.336,343,1.64,344,3.168,345,1.64,346,1.64,347,1.559,348,1.64,349,1.559,350,1.132,351,1.64,352,1.559,353,1.64,354,1.534,355,1.64,356,1.559,357,1.397,358,1.64,359,1.559,360,1.64,361,1.559,362,1.64,363,3.564,364,2.418,365,1.559,366,1.64,367,1.559,368,1.64,369,1.534,370,1.64,371,1.509,372,1.64,373,1.559,374,1.64,375,1.559,376,1.64,377,1.559,378,1.64,379,1.585,380,1.64,381,1.559,382,1.103,383,1.64,384,1.559,385,0.996,386,1.64,387,1.559,388,2.189,389,1.64,390,1.559,391,1.64,392,1.585,393,1.64,394,1.559,395,1.64,396,1.585,397,1.64,398,1.559,399,1.64,400,1.559,401,1.462,402,1.64,403,1.559,404,1.534,405,1.64,406,1.612,407,1.64,408,1.559,409,1.64,410,1.559,411,1.559,412,1.585,413,1.485,414,1.64,415,1.64,454,6.882,569,2.059,695,2.26,739,1.81,740,1.505,1019,2.042,1084,3.438,1087,3.648,1097,3.955,1113,2.26,1114,3.21,1123,6.806,1125,5.705,1133,1.798,1134,3.241,1136,2.199,1245,2.26,1253,3.751,1254,2.325,1271,2.042,1273,2.397,1276,2.26,1281,2.042,1296,2.305,1297,2.397,1298,2.397,1303,3.259,1305,2.325,1306,2.941,1311,2.199,1314,2.26,1373,2.376,1840,3.062,1934,7.256,2003,2.475,2011,3.259,2209,8.745,2210,3.925,2211,6.87,2212,6.87,2213,5.705,2214,6.295,2215,5.705,2216,6.167,2217,5.193,2218,6.87,2219,8.082,2220,8.082,2221,5.193,2222,5.785,2223,5.785,2224,5.785,2225,5.785,2226,5.785,2227,5.785,2228,3.925,2229,5.785,2230,7.581,2231,3.925,2232,3.925,2233,5.785,2234,3.925,2235,5.785,2236,3.925,2237,5.785,2238,3.925,2239,5.785,2240,3.925,2241,5.785,2242,3.925,2243,3.925,2244,6.87,2245,5.785,2246,3.925,2247,3.925,2248,3.925,2249,3.925,2250,3.925,2251,3.925,2252,3.925,2253,3.925,2254,5.785,2255,3.925,2256,3.925,2257,3.925,2258,3.925,2259,3.925,2260,6.87,2261,6.167,2262,5.785,2263,3.925,2264,3.925,2265,3.925,2266,5.785,2267,2.773,2268,3.925,2269,3.259,2270,3.524,2271,3.925,2272,3.925,2273,5.785,2274,2.661,2275,3.925]],["title/modules/FileUploadModule.html",[184,1.108,424,3.272]],["body/modules/FileUploadModule.html",[2,0.045,3,0.045,4,0.049,22,0.005,25,0.516,29,0.039,44,0.078,74,4.619,130,0.004,131,0.004,184,1.455,186,2.341,187,2.489,188,1.607,189,3.4,190,2.489,191,2.413,192,3.347,198,3.115,199,2.451,200,2.341,214,3.019,215,1.335,243,2.451,244,6.986,245,3.993,278,3.202,363,4.238,424,6.55,454,4.648,1136,3.686,1419,3.269,1420,2.57,1424,4.093,1425,5.374,1426,4.294,1428,5.191,1432,3.845,1433,3.073,2051,5.58,2052,4.459,2053,4.459,2209,5.905,2213,7.46,2214,8.211,2215,7.46,2276,5.905,2277,5.905,2278,5.905,2279,6.578,2280,5.816,2281,4.459,2282,5.905]],["title/interfaces/FlatNode.html",[0,0.41,2283,3.909]],["body/interfaces/FlatNode.html",[0,0.619,1,1.309,2,0.04,3,0.04,4,0.034,8,0.233,9,0.418,20,0.653,21,0.342,22,0.005,24,1.274,25,0.482,29,0.034,44,0.069,47,1.123,48,0.668,50,2.517,53,2.606,57,2.809,58,1.805,130,0.003,131,0.003,215,1.172,232,2.054,245,2.331,250,2.046,258,2.809,259,4.358,261,1.501,262,2.292,264,2.331,266,2.331,268,1.143,269,1.201,295,2.654,298,2.958,299,3.323,329,3.323,331,0.64,371,2.219,569,3.313,643,5.37,721,2.577,732,4.503,734,0.938,765,1.392,911,4.078,1036,1.501,1044,2.499,1052,2.412,1097,4.863,1133,4.107,1134,4.733,1481,5.131,1486,3.913,1603,5.905,1606,4.271,1720,3.323,2283,6.589,2284,4.271,2285,4.078,2286,4.793,2287,7.731,2288,7.933,2289,6.286,2290,4.793,2291,5.601,2292,3.913,2293,6.286,2294,4.793,2295,6.286,2296,4.503,2297,5.348,2298,4.503,2299,5.601,2300,5.968,2301,4.793,2302,4.793,2303,4.793,2304,4.503,2305,4.793,2306,4.271,2307,4.078,2308,4.793,2309,4.793,2310,4.793,2311,4.793,2312,4.793,2313,7.014,2314,4.793,2315,6.286,2316,4.793,2317,4.793,2318,4.793,2319,4.793,2320,4.503,2321,4.793,2322,4.793,2323,4.793,2324,4.793,2325,4.793,2326,4.793,2327,7.014,2328,4.793,2329,4.793,2330,4.271,2331,4.793,2332,4.793,2333,4.793,2334,4.793]],["title/components/FooterComponent.html",[250,1.355,365,1.99]],["body/components/FooterComponent.html",[2,0.027,3,0.027,4,0.034,8,0.157,9,0.317,10,0.558,11,1.882,20,0.381,21,0.307,22,0.005,25,0.452,29,0.023,44,0.046,48,0.478,64,0.762,102,2.433,108,0.883,130,0.003,131,0.003,135,2.858,181,2.49,188,0.951,202,2.047,207,1.358,209,0.781,211,2.362,215,0.79,218,1.895,219,1.936,220,2.074,235,0.938,250,1.848,251,1.547,252,2.362,253,1.627,254,1.627,255,1.627,256,1.386,260,1.066,261,2.71,262,4.145,263,3.899,264,2.323,266,2.323,268,1.67,269,0.81,270,6.805,284,2.456,287,1.547,298,2.672,299,2.242,305,3.627,308,1.588,310,1.124,331,0.638,341,2.403,342,2.323,343,1.627,344,3.156,345,1.627,346,1.627,347,1.547,348,1.627,349,1.547,350,1.124,351,1.627,352,1.547,353,1.627,354,1.522,355,1.627,356,1.547,357,2.047,358,1.627,359,1.547,360,1.627,361,1.547,362,1.627,363,1.547,364,2.403,365,3,366,1.627,367,1.547,368,1.627,369,1.522,370,1.627,371,1.497,372,1.627,373,1.547,374,1.627,375,1.547,376,1.627,377,1.547,378,1.627,379,1.573,380,1.627,381,1.547,382,1.094,383,1.627,384,1.547,385,0.988,386,1.627,387,1.547,388,2.176,389,1.627,390,1.547,391,1.627,392,1.573,393,1.627,394,1.547,395,1.627,396,1.573,397,1.627,398,1.547,399,1.627,400,1.547,401,1.451,402,1.627,403,1.547,404,1.522,405,1.627,406,1.6,407,1.627,408,1.547,409,1.627,410,1.547,411,1.547,412,1.573,413,1.474,414,1.627,415,1.627,431,5.582,450,2.751,548,2.687,556,1.85,569,2.047,638,4.256,655,3.038,658,2.542,659,2.542,696,1.936,745,3.627,949,3.755,1019,2.025,1034,2.858,1045,1.235,1075,4.399,1093,4.514,1138,2.025,1139,2.025,1141,2.307,1253,2.126,1271,2.025,1281,2.025,1288,2.86,1298,3.512,1306,1.98,1307,3.038,1314,3.311,1334,1.522,1386,2.716,1660,3.038,1664,3.512,1925,6.69,1929,7.002,1930,7.002,1936,6.271,1939,3.038,1949,4.776,1961,5.06,1962,4.831,1963,5.06,1966,3.234,1967,3.234,1968,3.234,1973,3.234,1984,5.335,1990,3.038,1992,3.234,1993,4.831,1997,5.06,2000,4.776,2002,3.234,2003,3.627,2013,5.163,2036,4.487,2077,4.487,2270,3.496,2274,2.64,2335,3.894,2336,4.636,2337,6.838,2338,5.751,2339,8.432,2340,7.57,2341,7.57,2342,8.432,2343,6.78,2344,7.552,2345,5.751,2346,3.894,2347,3.894,2348,3.894,2349,3.894,2350,3.894,2351,3.894,2352,3.894,2353,3.894,2354,3.894,2355,3.894,2356,3.894,2357,3.894,2358,3.496,2359,3.496,2360,6.838,2361,3.894,2362,6.139,2363,5.163,2364,5.163,2365,5.751,2366,5.163,2367,5.751,2368,5.751,2369,5.751,2370,7.552,2371,7.552,2372,6.139,2373,5.751,2374,5.751,2375,5.163,2376,5.163,2377,5.751,2378,5.751,2379,5.751,2380,6.838,2381,5.751,2382,5.751,2383,5.751,2384,5.751,2385,5.751,2386,5.751,2387,5.751,2388,5.751,2389,5.751,2390,5.751,2391,5.751,2392,5.751,2393,3.894,2394,5.751,2395,5.751,2396,5.751,2397,5.751,2398,3.894,2399,3.894,2400,5.751,2401,3.894,2402,3.894,2403,3.894,2404,5.751,2405,3.894,2406,3.894,2407,5.751,2408,3.894,2409,3.496,2410,3.894,2411,3.894]],["title/modules/FooterModule.html",[184,1.108,425,3.397]],["body/modules/FooterModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.517,29,0.043,44,0.086,130,0.004,131,0.004,184,1.607,186,2.585,187,2.749,188,1.774,189,3.552,190,2.749,191,2.665,192,3.497,198,3.311,199,2.706,200,2.585,214,3.209,215,1.475,243,2.706,278,3.536,365,4.188,425,6.944,1419,3.475,1420,2.838,1424,4.35,1432,4.087,1433,3.394,2051,5.93,2052,4.924,2053,4.924,2280,6.181,2281,4.924,2412,6.521,2413,6.521,2414,6.521,2415,7.264,2416,7.264]],["title/components/FunctionsComponent.html",[250,1.355,367,1.99]],["body/components/FunctionsComponent.html",[2,0.025,3,0.025,4,0.033,8,0.147,9,0.302,10,0.784,11,1.419,20,0.544,21,0.354,22,0.005,25,0.48,29,0.022,30,2.438,41,0.998,44,0.043,48,0.511,53,1.124,58,1.712,64,0.725,94,0.936,100,2.952,102,1.297,108,0.826,130,0.002,131,0.002,144,3.785,146,1.761,169,4.292,171,4.292,172,4.292,173,5.372,179,3.873,181,2.37,183,1.558,188,0.89,202,1.948,207,1.342,209,1.098,210,2.575,211,1.891,215,0.74,218,1.774,219,1.812,220,1.941,230,1.99,235,0.92,250,1.777,251,1.448,252,2.249,253,1.523,254,1.523,255,1.523,256,1.297,260,0.998,261,2.695,262,4.115,264,2.211,266,2.211,268,1.779,287,1.448,295,1.278,298,2.139,308,1.389,310,1.051,323,3.59,331,0.404,339,2.225,341,2.288,342,2.211,343,1.523,344,3.055,345,1.523,346,1.523,347,1.448,348,1.523,349,1.448,350,1.579,351,1.523,352,1.448,353,1.523,354,1.424,355,1.523,356,1.448,357,1.297,358,1.523,359,1.448,360,1.523,361,1.448,362,1.523,363,1.448,364,2.288,365,1.448,366,1.523,367,2.903,368,1.523,369,1.424,370,1.523,371,1.401,372,1.523,373,1.448,374,1.523,375,1.448,376,1.523,377,1.448,378,1.523,379,1.472,380,1.523,381,1.448,382,1.024,383,1.523,384,1.448,385,0.924,386,1.523,387,1.448,388,2.072,389,1.523,390,1.448,391,1.523,392,1.472,393,1.523,394,1.448,395,1.523,396,1.472,397,1.523,398,1.448,399,1.523,400,1.448,401,1.358,402,1.523,403,1.448,404,1.424,405,1.523,406,1.497,407,1.523,408,1.448,409,1.523,410,1.448,411,1.448,412,1.472,413,1.379,414,1.523,415,1.523,442,2.098,466,1.337,472,2.471,473,2.697,556,1.172,574,2.379,588,3.991,695,2.098,696,3.896,710,5.535,717,2.575,718,5.864,722,3.574,724,1.48,725,2.61,726,4.271,740,2.141,751,3.716,754,2.471,758,1.812,763,2.684,764,1.379,945,2.575,1019,1.896,1049,2.611,1075,4.277,1085,2.783,1093,4.389,1095,4.292,1112,1.156,1133,2.508,1137,1.896,1138,1.896,1139,1.896,1141,2.159,1171,2.379,1231,5.769,1234,5.056,1243,4.772,1253,3.991,1254,4.33,1256,2.298,1257,2.379,1262,3.574,1267,4.146,1268,4.146,1270,2.843,1271,3.802,1273,2.225,1275,3.243,1276,5.349,1277,4.955,1278,2.575,1279,2.575,1280,2.575,1281,3.42,1284,5.197,1285,2.575,1288,2.722,1293,3.711,1297,2.225,1298,2.225,1305,2.159,1306,3.716,1307,2.843,1311,2.042,1312,4.463,1314,2.098,1323,3.026,1529,1.99,1575,2.575,1629,3.026,1630,3.026,1631,3.026,1632,3.026,1633,3.026,1664,2.225,1665,2.575,1668,3.272,1722,4.051,1851,2.159,1853,2.379,1909,1.941,1961,2.697,1962,2.575,1963,2.697,2005,3.272,2015,2.843,2016,2.843,2039,3.711,2417,3.644,2418,6.574,2419,5.474,2420,7.834,2421,6.574,2422,6.574,2423,8.228,2424,6.574,2425,5.474,2426,5.474,2427,3.644,2428,5.474,2429,7.309,2430,3.644,2431,3.644,2432,3.644,2433,3.644,2434,3.644,2435,3.644,2436,5.474,2437,3.644,2438,3.644,2439,3.644,2440,3.644,2441,3.644,2442,2.697,2443,3.644,2444,3.644,2445,5.474,2446,3.644,2447,3.644,2448,3.644,2449,3.644,2450,3.644,2451,3.272,2452,2.575,2453,4.546,2454,3.644,2455,3.644,2456,3.272,2457,3.644,2458,7.309,2459,7.309,2460,2.843,2461,4.271,2462,4.051,2463,2.843,2464,2.843,2465,3.644,2466,3.644,2467,3.272,2468,4.914,2469,3.644,2470,3.644,2471,5.408,2472,3.026,2473,3.644]],["title/modules/FunctionsModule.html",[184,1.108,1675,3.708]],["body/modules/FunctionsModule.html",[2,0.049,3,0.049,4,0.042,22,0.005,25,0.523,29,0.042,44,0.085,130,0.004,131,0.004,184,1.574,186,2.533,187,2.694,188,1.739,189,3.521,190,2.694,191,2.611,192,3.466,198,3.27,199,2.652,200,2.533,214,3.17,215,1.445,243,2.652,278,3.464,367,4.177,1419,3.432,1420,2.781,1422,5.642,1423,4.647,1424,4.297,1432,4.037,1433,3.325,1675,7.548,1694,5.642,1695,4.647,2051,5.858,2052,4.825,2053,4.825,2442,5.267,2474,6.39,2475,6.39,2476,6.39,2477,7.118,2478,7.118,2479,6.741]],["title/interfaces/GEdge.html",[0,0.41,1391,2.058]],["body/interfaces/GEdge.html",[0,0.853,1,1.003,2,0.03,3,0.058,4,0.026,8,0.178,9,0.348,11,1.587,13,1.346,14,1.329,15,2.283,16,2.067,18,2.687,20,0.717,21,0.306,22,0.005,24,1.499,26,1.869,27,2.313,29,0.062,39,1.869,41,1.211,46,1.627,47,1.234,48,0.635,50,1.662,75,1.041,88,1.365,94,1.136,95,1.281,97,2.067,109,1.403,120,1.122,130,0.003,131,0.003,146,1.423,174,1.551,175,1.528,176,1.528,177,1.528,178,1.528,183,1.345,235,0.661,260,2.014,261,1.151,295,2.212,331,0.941,466,1.623,620,1.757,629,1.587,660,2.506,703,1.757,721,2.504,724,1.705,731,2.117,734,0.911,739,1.973,740,1.641,756,1.166,960,1.623,962,1.506,1020,2.18,1088,1.243,1106,1.674,1107,3.388,1108,3.259,1109,3.312,1112,2.795,1113,3.443,1114,2.506,1185,1.729,1186,1.598,1245,1.729,1296,2.468,1330,1.817,1331,2.637,1332,2.592,1333,1.787,1334,1.729,1335,1.817,1336,1.817,1337,1.817,1338,1.817,1339,1.817,1340,1.817,1341,2.548,1342,1.787,1343,1.75,1344,1.817,1345,1.849,1346,1.817,1347,1.787,1348,1.311,1349,1.817,1350,1.849,1351,1.849,1352,1.849,1353,1.849,1354,1.849,1355,1.849,1356,1.849,1357,1.849,1358,1.849,1359,1.817,1360,1.817,1361,2.637,1362,2.637,1363,1.849,1364,1.443,1365,1.443,1366,1.443,1367,1.817,1368,1.787,1369,1.817,1370,2.592,1371,2.637,1372,2.637,1373,1.817,1374,1.849,1375,1.701,1376,1.849,1377,1.849,1378,1.849,1379,1.849,1380,1.849,1381,1.757,1382,3.021,1383,1.817,1384,1.849,1385,1.849,1386,1.757,1387,1.849,1388,1.849,1389,2.592,1390,1.849,1391,3.021,1392,3.238,1393,2.592,1394,1.849,1395,1.849,1396,1.787,1397,1.869,1398,1.817,1399,2.592,1400,1.849,1401,1.849,1402,1.849,1403,1.849,1404,1.849,1405,1.849,1406,1.849,1407,1.817,1408,1.757,1409,1.328,1410,1.849]],["title/interfaces/GNode.html",[0,0.41,1393,2.058]],["body/interfaces/GNode.html",[0,0.852,1,0.991,2,0.03,3,0.043,4,0.026,8,0.176,9,0.345,11,1.576,13,1.33,14,1.317,15,2.27,16,2.052,18,2.679,20,0.717,21,0.359,22,0.005,24,1.496,26,1.853,27,2.3,29,0.062,39,1.853,41,1.196,46,1.834,47,1.223,48,0.668,50,1.648,75,1.028,88,1.348,94,1.122,95,1.269,97,2.052,109,1.386,120,1.108,130,0.003,131,0.003,146,1.405,174,1.532,175,1.509,176,1.509,177,1.509,178,1.509,183,1.333,235,0.655,260,2.531,261,1.137,295,2.192,331,0.936,466,1.603,620,1.735,629,1.576,660,2.484,703,1.735,721,2.486,724,1.69,731,2.098,734,0.905,739,1.956,740,1.627,756,1.151,960,1.603,962,1.487,1020,2.171,1088,1.228,1106,1.653,1107,3.374,1108,3.243,1109,3.296,1112,2.783,1113,3.429,1114,2.484,1185,1.707,1186,1.578,1245,1.707,1296,2.451,1330,1.795,1331,2.613,1332,2.569,1333,1.764,1334,1.707,1335,1.795,1336,1.795,1337,1.795,1338,1.795,1339,1.795,1340,1.795,1341,2.525,1342,1.764,1343,1.735,1344,1.795,1345,1.826,1346,1.795,1347,1.764,1348,1.295,1349,1.795,1350,1.826,1351,1.826,1352,1.826,1353,1.826,1354,1.826,1355,1.826,1356,1.826,1357,1.826,1358,1.826,1359,1.795,1360,1.795,1361,2.613,1362,2.613,1363,1.826,1364,1.425,1365,1.425,1366,1.425,1367,1.795,1368,1.764,1369,1.795,1370,2.569,1371,2.613,1372,2.613,1373,1.795,1374,1.826,1375,1.68,1376,1.826,1377,1.826,1378,1.826,1379,1.826,1380,1.826,1381,1.735,1382,3,1383,1.795,1384,1.826,1385,1.826,1386,1.735,1387,1.826,1388,1.826,1389,2.569,1390,1.826,1391,2.569,1392,1.764,1393,3,1394,1.826,1395,1.826,1396,1.764,1397,1.853,1398,1.795,1399,2.569,1400,1.826,1401,1.826,1402,1.826,1403,1.826,1404,1.826,1405,1.826,1406,1.826,1407,1.795,1408,1.735,1409,1.312,1410,1.826]],["title/interfaces/GaCompareInfo.html",[0,0.41,1140,3.541]],["body/interfaces/GaCompareInfo.html",[0,0.759,1,1.432,2,0.043,3,0.043,4,0.038,8,0.255,9,0.443,11,2.002,20,0.699,21,0.365,22,0.005,29,0.058,39,2.377,47,1.064,48,0.442,54,2.64,59,2.391,60,2.391,95,1.883,108,1.432,130,0.004,131,0.004,135,2.64,184,1.397,312,1.985,316,2.285,318,3.036,323,4.815,357,2.855,382,2.255,413,3.036,558,3.285,627,5.757,643,3.365,1020,1.562,1085,3.212,1112,2.942,1133,3.676,1138,3.286,1139,3.286,1140,5.669,1171,4.124,1186,3.352,1311,3.54,1343,2.226,1397,2.613,1498,2.551,1978,4.675,1981,4.124,2004,5.44,2336,5.44,2452,4.464,2480,4.675,2481,6.039,2482,4.464,2483,4.675,2484,4.464,2485,4.928,2486,5.669,2487,6.26,2488,4.928,2489,4.283,2490,4.928,2491,5.669,2492,6.525,2493,6.555,2494,6.879,2495,5.938,2496,4.464,2497,4.675,2498,4.675,2499,4.464,2500,5.938,2501,4.675]],["title/interfaces/GaNodeInfo.html",[0,0.41,2496,3.541]],["body/interfaces/GaNodeInfo.html",[0,0.754,1,1.407,2,0.043,3,0.043,4,0.037,8,0.25,9,0.438,11,1.339,20,0.697,21,0.389,22,0.005,29,0.058,39,2.351,47,1.194,48,0.645,54,3.852,59,3.488,60,3.488,95,1.26,108,1.407,130,0.004,131,0.004,135,2.594,184,1.373,312,1.962,316,2.259,318,3.002,323,4.775,357,2.823,382,2.23,413,3.002,558,3.258,627,5.71,643,3.306,1020,1.535,1085,3.155,1112,1.968,1133,3.634,1138,3.228,1139,3.228,1140,4.385,1171,4.052,1186,2.242,1311,3.477,1343,2.201,1397,2.591,1498,2.507,1978,4.593,1981,4.052,2004,5.378,2336,5.378,2452,4.385,2480,4.593,2481,6.006,2482,4.385,2483,4.593,2484,4.385,2485,4.842,2486,5.606,2487,6.189,2488,4.842,2489,4.207,2490,4.842,2491,5.606,2492,6.471,2493,6.512,2494,6.823,2495,5.871,2496,5.606,2497,6.82,2498,4.593,2499,4.385,2500,5.871,2501,4.593]],["title/interfaces/GaOrganInfo.html",[0,0.41,2500,3.708]],["body/interfaces/GaOrganInfo.html",[0,0.764,1,1.458,2,0.044,3,0.044,4,0.038,8,0.259,9,0.448,11,1.388,20,0.692,21,0.339,22,0.005,29,0.058,39,2.405,47,1.073,48,0.45,54,2.688,59,2.434,60,2.434,95,1.306,108,2.117,130,0.004,131,0.004,135,2.688,184,1.423,312,2.007,316,2.311,318,3.071,323,4.855,357,2.888,382,2.281,413,3.071,558,3.313,627,5.805,643,3.426,1020,2.31,1085,3.27,1112,2.04,1133,3.718,1138,3.346,1139,3.346,1140,4.545,1171,4.2,1186,2.324,1311,3.604,1343,2.251,1397,2.635,1498,2.598,1978,4.76,1981,4.2,2004,5.502,2336,5.502,2452,4.545,2480,4.76,2481,6.072,2482,4.545,2483,4.76,2484,4.545,2485,5.018,2486,5.735,2487,6.332,2488,5.018,2489,4.361,2490,5.018,2491,5.735,2492,6.58,2493,6.598,2494,6.937,2495,6.006,2496,4.545,2497,4.76,2498,4.76,2499,4.545,2500,6.58,2501,4.76]],["title/interfaces/GaOrgansInfo.html",[0,0.41,2499,3.541]],["body/interfaces/GaOrgansInfo.html",[0,0.764,1,1.458,2,0.044,3,0.044,4,0.038,8,0.259,9,0.448,11,1.388,20,0.679,21,0.339,22,0.005,29,0.058,39,2.405,47,1.161,48,0.45,54,2.688,59,2.434,60,2.434,95,1.306,108,1.458,130,0.004,131,0.004,135,2.688,184,1.423,312,2.007,316,2.311,318,3.071,323,4.855,357,2.888,382,2.281,413,3.071,558,3.313,627,5.805,643,3.426,1020,1.591,1085,3.27,1112,2.04,1133,3.718,1138,3.346,1139,3.346,1140,4.545,1171,4.2,1186,2.324,1311,3.604,1343,2.251,1397,2.635,1498,3.772,1978,4.76,1981,4.2,2004,5.502,2336,5.502,2452,4.545,2480,4.76,2481,6.072,2482,4.545,2483,4.76,2484,4.545,2485,5.018,2486,5.735,2487,6.332,2488,5.018,2489,4.361,2490,5.018,2491,5.735,2492,6.58,2493,6.598,2494,6.937,2495,6.006,2496,4.545,2497,4.76,2498,4.76,2499,5.735,2500,6.91,2501,6.91]],["title/injectables/GoogleAnalyticsSyncService.html",[196,3.541,709,2.094]],["body/injectables/GoogleAnalyticsSyncService.html",[2,0.048,3,0.048,4,0.041,10,0.991,20,0.458,21,0.264,22,0.005,24,1.043,25,0.484,29,0.041,44,0.082,48,0.484,64,1.125,120,2.331,130,0.004,131,0.004,195,6.113,196,6,207,0.966,209,1.387,215,1.404,218,3.367,219,3.44,220,4.895,221,5.397,236,4.672,247,3.876,258,3.367,269,1.912,271,5.745,298,3.318,299,5.517,483,5.745,569,2.462,709,3.549,711,3.876,968,3.232,1137,3.599,1481,5.757,1484,5.12,1486,4.69,1933,6.8,2121,4.517,2502,8.492,2503,5.745,2504,9.583,2505,6.918,2506,6.918,2507,6.918,2508,6.625,2509,6.918,2510,6.211,2511,6.918,2512,6.918,2513,8.492,2514,8.492,2515,6.918,2516,6.918,2517,6.918,2518,6.211,2519,6.918,2520,6.918,2521,6.918]],["title/interfaces/Graph.html",[0,0.41,1397,1.485]],["body/interfaces/Graph.html",[0,0.853,1,1.003,2,0.03,3,0.043,4,0.026,8,0.178,9,0.348,11,1.587,13,1.346,14,1.329,15,2.283,16,2.067,18,2.687,20,0.717,21,0.306,22,0.005,24,1.499,26,1.869,27,2.313,29,0.062,39,1.869,41,1.211,46,1.627,47,1.213,48,0.635,50,1.662,75,1.886,88,1.365,94,1.136,95,1.281,97,2.067,109,1.403,120,1.122,130,0.003,131,0.003,146,1.423,174,1.551,175,1.528,176,1.528,177,1.528,178,1.528,183,1.345,235,0.661,260,2.014,261,1.151,295,2.212,331,0.941,466,1.623,620,3.184,629,1.587,660,2.506,703,1.757,721,2.504,724,1.705,731,2.117,734,0.911,739,1.973,740,1.641,756,1.166,960,1.623,962,1.506,1020,2.18,1088,1.243,1106,1.674,1107,3.388,1108,3.259,1109,3.312,1112,2.795,1113,3.443,1114,2.506,1185,1.729,1186,1.598,1245,1.729,1296,2.468,1330,1.817,1331,2.637,1332,2.592,1333,1.787,1334,1.729,1335,1.817,1336,1.817,1337,1.817,1338,1.817,1339,1.817,1340,1.817,1341,2.548,1342,1.787,1343,1.75,1344,1.817,1345,1.849,1346,1.817,1347,1.787,1348,1.311,1349,1.817,1350,1.849,1351,1.849,1352,1.849,1353,1.849,1354,1.849,1355,1.849,1356,1.849,1357,1.849,1358,1.849,1359,1.817,1360,1.817,1361,2.637,1362,2.637,1363,1.849,1364,1.443,1365,1.443,1366,1.443,1367,1.817,1368,1.787,1369,1.817,1370,2.592,1371,2.637,1372,2.637,1373,1.817,1374,1.849,1375,1.701,1376,1.849,1377,1.849,1378,1.849,1379,1.849,1380,1.849,1381,1.757,1382,3.021,1383,1.817,1384,1.849,1385,1.849,1386,1.757,1387,1.849,1388,1.849,1389,2.592,1390,1.849,1391,3.293,1392,1.787,1393,3.293,1394,1.849,1395,1.849,1396,1.787,1397,2.179,1398,1.817,1399,2.592,1400,1.849,1401,1.849,1402,1.849,1403,1.849,1404,1.849,1405,1.849,1406,1.849,1407,1.817,1408,1.757,1409,1.328,1410,1.849]],["title/interfaces/GraphData.html",[0,0.41,1398,2.058]],["body/interfaces/GraphData.html",[0,0.853,1,1.009,2,0.031,3,0.044,4,0.026,8,0.179,9,0.35,11,1.593,13,1.355,14,1.335,15,2.289,16,2.074,18,2.691,20,0.717,21,0.281,22,0.005,24,1.5,26,1.878,27,2.32,29,0.062,39,1.878,41,1.219,46,1.632,47,1.215,48,0.636,50,1.67,75,1.047,88,1.374,94,1.143,95,1.286,97,2.074,109,1.412,120,1.129,130,0.003,131,0.003,146,1.432,174,1.561,175,1.538,176,1.538,177,1.538,178,1.538,183,1.351,235,0.664,260,2.021,261,1.158,295,2.222,331,1.031,466,1.633,620,1.768,629,1.593,660,2.517,703,1.768,721,2.512,724,1.713,731,2.127,734,0.915,739,1.982,740,1.649,756,1.173,960,1.633,962,1.516,1020,2.184,1088,1.251,1106,1.685,1107,3.395,1108,3.267,1109,3.32,1112,2.801,1113,3.451,1114,2.517,1185,1.739,1186,1.608,1245,1.739,1296,2.476,1330,1.829,1331,2.648,1332,2.603,1333,1.798,1334,1.739,1335,1.829,1336,1.829,1337,1.829,1338,1.829,1339,1.829,1340,1.829,1341,2.559,1342,1.798,1343,1.758,1344,1.829,1345,1.86,1346,1.829,1347,1.798,1348,1.319,1349,1.829,1350,1.86,1351,1.86,1352,1.86,1353,1.86,1354,1.86,1355,1.86,1356,1.86,1357,1.86,1358,1.86,1359,1.829,1360,1.829,1361,2.648,1362,2.648,1363,1.86,1364,1.452,1365,1.452,1366,1.452,1367,1.829,1368,1.798,1369,1.829,1370,2.603,1371,2.648,1372,2.648,1373,1.829,1374,1.86,1375,1.712,1376,1.86,1377,1.86,1378,1.86,1379,1.86,1380,1.86,1381,1.768,1382,3.031,1383,1.829,1384,1.86,1385,1.86,1386,1.768,1387,1.86,1388,1.86,1389,2.603,1390,1.86,1391,2.603,1392,1.798,1393,2.603,1394,1.86,1395,1.86,1396,1.798,1397,2.382,1398,2.603,1399,2.603,1400,1.86,1401,1.86,1402,1.86,1403,1.86,1404,1.86,1405,1.86,1406,1.86,1407,1.829,1408,1.768,1409,1.337,1410,1.86]],["title/classes/HasError.html",[44,0.06,756,1.32]],["body/classes/HasError.html",[2,0.037,3,0.037,4,0.032,8,0.214,9,0.396,10,0.762,20,0.599,21,0.403,22,0.005,25,0.409,29,0.062,44,0.125,48,0.372,64,0.95,130,0.003,131,0.003,203,2.353,207,1.132,209,1.066,235,0.557,268,1.719,269,2.186,272,2.945,308,0.943,310,1.534,312,1.315,316,2.041,331,0.796,350,1.534,382,1.495,501,1.206,556,2.914,558,3.375,603,1.366,629,1.873,734,1.123,755,2.303,756,1.889,763,3.348,764,2.013,765,1.283,1015,2.013,1025,2.39,1026,2.485,1027,4.131,1028,2.241,1030,2.847,1031,2.182,1032,1.687,1033,2.39,1034,3.901,1035,3.221,1036,2.428,1037,2.39,1038,2.436,1039,2.346,1040,2.346,1041,2.39,1042,2.39,1043,2.39,1044,2.303,1045,1.687,1046,2.39,1047,2.39,1048,2.39,1049,2.112,1050,2.436,1051,2.436,1052,2.223,1053,2.346,1054,2.39,1055,2.39,1056,2.346,1057,2.39,1058,2.338,1059,2.39,2522,5.318,2523,7.169,2524,5.318]],["title/components/HomeComponent.html",[250,1.355,369,1.958]],["body/components/HomeComponent.html",[2,0.023,3,0.014,4,0.02,8,0.283,9,0.186,10,0.482,11,2.02,20,0.29,21,0.288,22,0.005,25,0.393,29,0.012,30,0.997,34,0.967,44,0.024,46,1.046,47,0.805,48,0.438,58,2.195,64,0.446,100,1.359,102,2.374,106,1.792,108,0.45,109,1.067,130,0.002,131,0.002,141,3.275,142,1.885,143,1.885,144,1.937,158,2.76,181,3.455,188,0.485,200,1.197,202,1.197,207,1.299,209,0.675,210,1.403,211,2.163,215,0.403,218,0.967,219,0.987,220,1.058,230,1.837,235,0.87,245,1.359,250,1.183,251,0.789,252,1.382,253,0.83,254,0.83,255,0.83,256,0.707,258,1.637,260,0.544,261,2.523,262,3.853,263,5.277,264,1.359,266,1.359,268,1.24,269,0.413,270,5.204,284,1.252,287,0.789,298,2.741,299,1.937,305,5.031,308,1.473,310,0.573,318,1.95,331,0.22,334,3.02,339,4.073,341,1.406,342,1.359,343,0.83,344,2.153,345,0.83,346,0.83,347,0.789,348,0.83,349,0.789,350,0.573,351,0.83,352,0.789,353,0.83,354,0.776,355,0.83,356,0.789,357,2.051,358,0.83,359,0.789,360,0.83,361,0.789,362,0.83,363,0.789,364,1.406,365,0.789,366,0.83,367,0.789,368,0.83,369,2.013,370,0.83,371,0.764,372,0.83,373,0.789,374,0.83,375,0.789,376,0.83,377,0.789,378,0.83,379,0.802,380,0.83,381,0.789,382,0.945,383,0.83,384,0.789,385,0.504,386,0.83,387,0.789,388,1.273,389,0.83,390,0.789,391,0.83,392,0.802,393,0.83,394,0.789,395,0.83,396,0.802,397,0.83,398,0.789,399,0.83,400,0.789,401,0.74,402,0.83,403,0.789,404,0.776,405,0.83,406,0.816,407,0.83,408,0.789,409,0.83,410,0.789,411,0.789,412,1.359,413,0.751,414,0.83,415,0.83,431,4.463,450,1.403,466,2.927,556,2.67,569,1.557,604,3.492,628,2.377,658,4.355,659,4.355,687,1.649,695,3.318,696,3.761,700,1.296,702,1.469,730,2.624,739,2.776,740,2.421,745,3.948,765,0.479,901,1.783,938,3.02,949,2.196,969,3.038,1019,1.75,1021,2.489,1028,0.491,1034,2.153,1049,1.738,1075,3.147,1093,3.23,1112,1.828,1138,1.033,1139,1.033,1141,1.176,1186,1.861,1190,1.296,1224,5.192,1237,2.377,1253,4.677,1254,3.952,1256,3.249,1257,3.363,1262,5.082,1264,6.07,1266,2.624,1267,1.252,1268,1.252,1271,3.47,1272,2.76,1273,3.146,1274,1.212,1275,3.709,1281,2.68,1284,3.991,1288,4.68,1289,4.618,1290,2.377,1293,5.277,1295,2.857,1296,1.469,1298,3.146,1299,3.763,1300,2.28,1305,3.952,1306,3.567,1307,1.549,1309,5.175,1310,1.549,1311,1.113,1312,3.146,1314,3.318,1317,1.469,1318,4.019,1320,1.649,1334,0.776,1343,0.933,1375,1.683,1381,2.046,1386,1.738,1468,1.649,1481,2.967,1486,1.346,1498,0.802,1529,1.837,1585,0.816,1664,3.146,1780,1.469,1836,3.092,1839,1.296,1842,3.02,1843,4.625,1850,5.989,1851,1.176,1853,2.196,1854,1.469,1879,0.816,1925,3.634,1929,5.199,1930,5.199,1933,4.265,1936,4.278,1937,4.625,1938,4.625,1939,1.549,1949,2.794,1961,3.238,1962,3.092,1963,3.238,1966,1.649,1967,1.649,1968,1.649,1973,1.649,1984,4.497,1988,1.783,1989,1.649,1990,3.414,1991,4.278,1992,1.649,1993,4.957,1994,1.783,1995,1.783,1996,3.929,1997,3.238,2001,1.783,2002,5.54,2003,4.207,2004,1.346,2006,1.783,2007,5.175,2008,5.175,2009,5.175,2010,5.175,2011,3.634,2014,3.02,2015,3.414,2016,3.414,2017,1.649,2018,3.812,2019,3.634,2025,2.624,2030,1.783,2036,5.204,2037,2.794,2038,4.019,2039,2.967,2077,2.624,2164,2.624,2166,3.02,2267,1.403,2269,1.649,2291,3.238,2292,1.346,2307,3.092,2330,1.469,2340,5.621,2341,5.621,2343,4.625,2358,1.783,2359,1.783,2363,3.02,2364,5.175,2366,3.02,2375,3.02,2376,3.02,2409,4.625,2453,2.794,2462,3.238,2489,4.244,2491,5.165,2525,1.986,2526,4.376,2527,3.364,2528,5.621,2529,6.261,2530,5.621,2531,4.625,2532,5.621,2533,4.376,2534,4.376,2535,5.152,2536,3.364,2537,1.986,2538,1.986,2539,1.986,2540,1.986,2541,1.986,2542,1.986,2543,3.364,2544,1.986,2545,1.986,2546,1.986,2547,1.986,2548,1.986,2549,1.986,2550,1.986,2551,1.986,2552,1.986,2553,1.986,2554,1.986,2555,1.986,2556,1.986,2557,1.986,2558,4.376,2559,3.364,2560,1.986,2561,1.986,2562,1.986,2563,3.414,2564,3.364,2565,1.986,2566,1.986,2567,1.986,2568,1.783,2569,1.986,2570,1.986,2571,1.986,2572,1.783,2573,1.783,2574,3.364,2575,1.986,2576,1.986,2577,3.364,2578,1.986,2579,1.986,2580,1.986,2581,1.986,2582,1.986,2583,1.986,2584,1.986,2585,1.986,2586,1.986,2587,1.986,2588,1.986,2589,1.986,2590,1.986,2591,1.986,2592,1.986,2593,6.261,2594,1.986,2595,5.764,2596,1.986,2597,1.986,2598,1.986,2599,1.986,2600,1.986,2601,4.376,2602,3.02,2603,3.364,2604,6.261,2605,3.364,2606,3.364,2607,3.02,2608,3.364,2609,2.794,2610,5.152,2611,3.364,2612,3.364,2613,3.364,2614,3.364,2615,3.364,2616,3.364,2617,4.376,2618,3.364,2619,3.364,2620,2.794,2621,3.364,2622,6.261,2623,3.364,2624,3.364,2625,3.364,2626,4.376,2627,3.364,2628,3.02,2629,3.364,2630,3.364,2631,4.376,2632,3.364,2633,5.152,2634,3.364,2635,3.364,2636,4.625,2637,3.364,2638,3.364,2639,3.364,2640,3.364,2641,3.364,2642,3.364,2643,3.364,2644,3.02,2645,3.364,2646,3.364,2647,3.364,2648,4.376,2649,3.364,2650,3.364,2651,1.986,2652,4.625,2653,1.986,2654,7.016,2655,1.986,2656,3.364,2657,5.175,2658,1.783,2659,3.02,2660,1.986,2661,4.625,2662,1.986,2663,1.986,2664,1.986,2665,3.634,2666,1.986,2667,1.986,2668,1.986,2669,1.986,2670,1.986,2671,1.986,2672,1.783,2673,1.986,2674,3.364,2675,1.986,2676,1.986,2677,1.986,2678,1.986,2679,1.783,2680,3.364,2681,1.986,2682,1.986,2683,1.986,2684,1.783,2685,1.986,2686,1.986,2687,1.986,2688,1.783,2689,1.986,2690,3.364,2691,3.238,2692,3.634,2693,4.376,2694,3.634,2695,1.986,2696,3.364,2697,1.986,2698,1.986,2699,1.986,2700,1.986,2701,4.376,2702,5.152,2703,3.364,2704,5.152,2705,1.986,2706,3.364,2707,5.152,2708,1.986,2709,1.986,2710,1.986,2711,1.986,2712,1.986,2713,2.794,2714,1.986,2715,1.986,2716,1.986,2717,5.152,2718,3.364,2719,1.986,2720,1.986,2721,1.783,2722,3.364,2723,1.986,2724,3.364,2725,3.364,2726,1.986,2727,1.986,2728,1.986,2729,1.986,2730,3.364,2731,4.376,2732,1.986,2733,1.986,2734,1.986,2735,1.986,2736,1.986,2737,1.649,2738,1.986,2739,1.986,2740,1.649,2741,1.783,2742,1.986,2743,1.986,2744,1.986,2745,1.986,2746,8.781,2747,3.364,2748,3.364,2749,3.364,2750,5.152,2751,4.376,2752,5.764,2753,1.986,2754,6.79,2755,3.364,2756,1.783,2757,3.364,2758,1.986,2759,1.986,2760,3.364,2761,1.986,2762,3.364,2763,1.986,2764,1.649,2765,1.986,2766,1.986,2767,1.986]],["title/modules/HomeModule.html",[184,1.108,426,3.708]],["body/modules/HomeModule.html",[2,0.047,3,0.047,4,0.04,22,0.005,25,0.525,29,0.04,44,0.081,130,0.004,131,0.004,184,1.503,186,2.418,187,2.571,188,1.66,189,3.45,190,2.571,191,2.493,192,3.396,198,3.178,199,2.531,200,2.418,214,3.081,215,1.379,243,3.129,278,3.307,284,4.285,369,4.086,388,2.571,404,3.282,425,6.757,426,7.703,491,6.215,1419,3.336,1420,2.655,1424,4.176,1432,3.924,1433,3.174,2051,5.694,2052,4.606,2053,4.606,2280,5.934,2281,4.606,2531,6.1,2568,6.1,2768,6.1,2769,6.1,2770,6.1,2771,6.1,2772,6.757,2773,6.795,2774,6.795,2775,6.795,2776,8.399,2777,5.028,2778,5.643]],["title/classes/ILNode.html",[44,0.06,2297,3.541]],["body/classes/ILNode.html",[2,0.045,3,0.045,4,0.039,8,0.264,9,0.453,10,1.347,11,2.164,20,0.705,21,0.395,22,0.005,29,0.039,30,1.944,44,0.078,48,0.709,50,2.642,57,4.88,61,4.779,64,0.869,66,3.494,68,3.065,70,3.065,71,3.065,80,3.065,82,3.494,130,0.004,131,0.004,202,2.924,207,1.415,209,1.648,211,2.266,232,2.924,268,1.777,501,1.487,502,7.377,1058,2.68,2297,7.084,2779,6.56,2780,8.217,2781,6.56,2782,6.56,2783,6.56,2784,6.56,2785,6.56,2786,8.217,2787,6.56,2788,8.217,2789,8.217,2790,6.56,2791,6.56]],["title/components/IndentedListComponent.html",[250,1.355,371,1.927]],["body/components/IndentedListComponent.html",[0,0.452,2,0.025,3,0.025,4,0.033,8,0.149,9,0.305,10,1.053,11,1.784,20,0.486,21,0.343,22,0.005,24,0.556,25,0.417,29,0.022,44,0.044,46,0.749,47,0.799,48,0.616,50,1.745,53,2.269,57,1.795,58,1.154,64,0.489,108,0.836,130,0.002,131,0.002,181,2.867,188,0.901,202,1.965,207,1.366,209,1.107,211,1.274,215,0.749,232,1.312,235,0.898,245,1.489,250,1.79,251,1.465,252,2.269,253,1.541,254,1.541,255,1.541,256,2.616,258,2.688,259,3.812,260,1.01,261,2.698,262,4.12,264,2.231,266,2.231,268,1.56,269,0.767,287,1.465,295,1.936,298,2.587,299,2.123,308,1.52,310,1.064,329,2.123,331,0.613,341,2.308,342,2.231,343,1.541,344,3.073,345,1.541,346,1.541,347,1.465,348,1.541,349,1.465,350,1.064,351,1.541,352,1.465,353,1.541,354,1.441,355,1.541,356,1.465,357,1.312,358,1.541,359,1.465,360,1.541,361,1.465,362,1.541,363,1.465,364,2.308,365,1.465,366,1.541,367,1.465,368,1.541,369,1.441,370,1.541,371,2.827,372,1.541,373,1.465,374,1.541,375,1.465,376,1.541,377,1.465,378,1.541,379,1.489,380,1.541,381,1.465,382,1.036,383,1.541,384,1.465,385,0.935,386,1.541,387,1.465,388,2.09,389,1.541,390,1.465,391,1.541,392,1.489,393,1.541,394,1.465,395,1.541,396,1.489,397,1.541,398,1.465,399,1.541,400,1.465,401,1.374,402,1.541,403,1.465,404,1.441,405,1.541,406,1.515,407,1.541,408,1.465,409,1.541,410,1.465,411,1.465,412,1.489,413,1.396,414,1.541,415,1.541,569,3.136,643,5.303,658,2.408,659,2.408,696,1.834,700,2.408,721,2.254,732,5.166,734,0.821,739,1.728,740,1.437,765,0.89,911,5.563,1019,1.918,1036,0.959,1044,3.184,1045,1.752,1052,2.767,1085,2.808,1087,3.483,1097,4.533,1133,3.368,1134,3.71,1271,2.873,1272,2.326,1276,3.18,1281,3.444,1284,4.513,1288,3.292,1293,2.5,1295,2.408,1311,3.095,1317,4.087,1481,4.489,1486,2.5,1529,2.014,1603,5.166,1606,5.827,1720,3.812,1780,2.729,1836,2.606,2003,2.326,2017,3.062,2283,4.309,2284,7.286,2285,6.957,2286,3.062,2287,4.586,2288,5.499,2289,5.499,2290,3.062,2291,4.9,2292,2.5,2293,5.499,2294,3.062,2295,5.499,2296,2.877,2297,5.195,2298,2.877,2299,5.827,2300,5.84,2301,3.062,2302,4.586,2303,5.499,2304,5.166,2305,5.499,2306,4.9,2307,4.678,2308,5.499,2309,4.586,2310,5.499,2311,5.499,2312,3.062,2313,6.539,2314,5.499,2315,6.106,2316,3.062,2317,3.062,2318,5.499,2319,4.586,2320,5.166,2321,4.586,2322,4.586,2323,6.106,2324,3.062,2325,3.062,2326,3.062,2327,5.499,2328,3.062,2329,3.062,2330,2.729,2331,3.062,2332,3.062,2333,4.586,2334,3.062,2602,4.958,2657,3.311,2692,3.062,2792,5.523,2793,3.688,2794,5.523,2795,3.688,2796,3.688,2797,3.688,2798,3.688,2799,3.688,2800,3.688,2801,3.688,2802,3.688,2803,3.688,2804,3.688,2805,3.688,2806,3.688,2807,3.688,2808,3.688,2809,5.523,2810,5.523,2811,5.523,2812,3.688,2813,3.688,2814,5.523,2815,3.688,2816,3.311,2817,3.688,2818,3.688,2819,5.523,2820,3.688,2821,3.688]],["title/modules/IndentedListModule.html",[184,1.108,2822,3.708]],["body/modules/IndentedListModule.html",[2,0.048,3,0.048,4,0.042,22,0.005,25,0.518,29,0.042,44,0.083,130,0.004,131,0.004,184,1.548,186,2.49,187,2.648,188,1.709,189,3.495,190,2.648,191,2.567,192,3.441,198,3.236,199,2.607,200,2.49,214,3.137,215,1.42,243,3.186,278,3.405,371,4.035,401,2.607,1416,6.33,1417,6.129,1419,3.397,1420,2.734,1424,4.252,1429,5.177,1430,4.743,1431,5.177,1432,3.995,1433,3.269,2284,5.177,2285,4.944,2296,5.458,2300,4.944,2822,7.734,2823,6.281,2824,6.281,2825,6.281,2826,6.997,2827,6.997,2828,6.997,2829,8.551]],["title/injectables/IndentedListService.html",[709,2.094,2299,3.708]],["body/injectables/IndentedListService.html",[2,0.042,3,0.042,4,0.036,8,0.244,9,0.431,10,0.868,21,0.231,22,0.005,25,0.461,29,0.036,30,2.315,43,4.401,44,0.072,48,0.424,49,4.807,130,0.004,131,0.004,141,3.384,167,4.379,202,2.781,207,1.091,209,1.216,211,2.094,215,1.23,232,2.781,235,0.635,236,3.973,247,3.396,268,1.713,269,1.9,299,3.49,308,1.075,331,1.119,562,2.89,569,3.078,709,3.266,711,3.396,721,3.11,734,1.237,765,1.462,771,3.823,774,4.283,841,6.49,958,4.283,1137,3.153,1638,6.097,1720,3.49,2284,6.4,2285,6.111,2297,6.455,2298,4.729,2299,5.783,2304,7.127,2830,6.062,2831,7.815,2832,7.815,2833,6.062,2834,7.815,2835,6.062,2836,6.062,2837,5.442,2838,5.442,2839,5.442,2840,5.442,2841,5.442,2842,5.034,2843,5.442,2844,6.062,2845,5.034,2846,6.062,2847,7.016,2848,5.442,2849,7.016,2850,6.062,2851,5.442,2852,5.442,2853,5.442,2854,6.062,2855,6.062,2856,6.062,2857,6.062,2858,6.062,2859,7.815,2860,7.815]],["title/components/InfoComponent.html",[250,1.355,373,1.99]],["body/components/InfoComponent.html",[2,0.063,3,0.027,4,0.034,8,0.158,9,0.319,10,0.561,15,2.554,18,2.156,21,0.322,22,0.005,25,0.441,29,0.023,44,0.047,46,1.82,48,0.48,52,4.843,53,2.696,64,0.765,95,1.172,97,1.623,108,0.888,130,0.003,131,0.003,188,0.956,202,2.055,207,1.278,209,0.785,211,1.353,215,0.795,218,1.906,219,1.947,220,2.086,235,0.719,245,2.771,250,1.854,251,1.555,252,2.372,253,1.636,254,1.636,255,1.636,256,1.393,258,2.811,259,3.949,260,1.072,261,2.712,262,4.14,264,2.332,266,2.332,268,1.813,269,1.937,287,1.555,298,2.256,299,2.254,308,1.217,310,1.13,329,2.254,331,0.995,341,2.413,342,2.332,343,1.636,344,3.165,345,1.636,346,1.636,347,1.555,348,1.636,349,1.555,350,1.13,351,1.636,352,1.555,353,1.636,354,1.53,355,1.636,356,1.555,357,1.393,358,1.636,359,1.555,360,1.636,361,1.555,362,1.636,363,1.555,364,2.413,365,1.555,366,1.636,367,1.555,368,1.636,369,1.53,370,1.636,371,1.506,372,1.636,373,3.008,374,1.636,375,1.555,376,1.636,377,1.555,378,1.636,379,1.581,380,1.636,381,1.555,382,1.1,383,1.636,384,1.555,385,0.993,386,1.636,387,1.555,388,2.185,389,1.636,390,1.555,391,1.636,392,1.581,393,1.636,394,1.555,395,1.636,396,1.581,397,1.636,398,1.555,399,1.636,400,1.555,401,1.459,402,1.636,403,1.555,404,1.53,405,1.636,406,1.608,407,1.636,408,1.555,409,1.636,410,1.555,411,1.555,412,1.581,413,1.482,414,1.636,415,1.636,548,2.698,569,1.393,629,1.823,675,5.969,694,2.654,731,2.541,734,0.716,739,1.225,740,1.019,756,1.995,763,2.756,764,1.482,765,0.945,960,1.436,962,1.333,1027,3.883,1028,0.968,1035,3.008,1075,4.409,1093,4.524,1095,5.272,1097,3.324,1134,2.194,1137,2.037,1138,2.037,1139,2.037,1141,2.32,1185,2.959,1190,2.556,1237,4.08,1274,2.391,1275,2.32,1368,3.058,1529,2.138,1853,2.556,1854,2.897,1873,2.595,2110,6.159,2111,7.249,2112,2.391,2113,7.249,2116,5.184,2121,2.556,2122,3.515,2123,2.897,2124,5.184,2134,3.515,2138,5.697,2493,2.767,2740,4.795,2861,3.916,2862,6.86,2863,5.774,2864,8.737,2865,5.774,2866,3.916,2867,3.916,2868,3.916,2869,3.916,2870,3.916,2871,3.916,2872,3.916,2873,3.916,2874,5.774,2875,5.774,2876,5.774,2877,3.916,2878,3.916,2879,3.916,2880,3.515,2881,7.572,2882,5.774,2883,8.448,2884,5.774,2885,5.774,2886,5.774,2887,7.572,2888,7.572,2889,7.572,2890,5.774,2891,5.774,2892,7.572,2893,7.572,2894,7.572]],["title/modules/InfoModule.html",[184,1.108,2895,3.708]],["body/modules/InfoModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.517,29,0.043,44,0.086,130,0.004,131,0.004,184,1.604,186,2.581,187,2.745,188,1.772,189,3.55,190,2.745,191,2.661,192,3.495,198,3.308,199,2.702,200,2.581,214,3.206,215,1.472,218,3.53,243,2.702,278,3.53,373,4.187,446,7.258,447,5.659,734,0.899,1419,3.472,1420,2.834,1424,4.346,1432,4.083,1433,3.389,2123,5.367,2145,7.258,2895,7.577,2896,6.512,2897,6.512,2898,6.512,2899,7.253,2900,7.253]],["title/interfaces/Legend.html",[0,0.41,188,1.224]],["body/interfaces/Legend.html",[0,0.621,1,1.72,2,0.052,3,0.052,4,0.045,8,0.306,9,0.495,10,1.286,11,2.133,20,0.701,21,0.384,22,0.005,29,0.045,47,1.153,48,0.692,130,0.004,131,0.004,188,2.193,1396,3.992,2274,6.701,2901,7.587,2902,8.874]],["title/components/LegendComponent.html",[250,1.355,375,1.99]],["body/components/LegendComponent.html",[2,0.029,3,0.029,4,0.037,8,0.173,9,0.34,10,0.613,11,1.881,14,0.902,21,0.342,22,0.005,25,0.473,29,0.025,44,0.051,45,3.245,48,0.505,60,1.62,64,0.567,102,1.524,108,0.971,130,0.003,131,0.003,158,2.7,175,1.479,176,1.479,177,1.479,178,1.479,181,1.854,182,5.497,188,2.321,207,1.254,209,0.859,215,0.869,235,0.757,250,1.952,251,1.701,252,2.532,253,1.789,254,1.789,255,1.789,256,1.524,258,3,259,4.157,260,1.173,261,2.73,262,4.169,264,2.489,266,2.489,268,1.221,287,1.701,298,1.673,308,1.281,310,1.235,329,2.465,331,0.475,339,2.614,341,2.576,342,2.489,343,1.789,344,3.301,345,1.789,346,1.789,347,1.701,348,1.789,349,1.701,350,1.235,351,1.789,352,1.701,353,1.789,354,1.673,355,1.789,356,1.701,357,1.524,358,1.789,359,1.701,360,1.789,361,1.701,362,1.789,363,1.701,364,2.576,365,1.701,366,1.789,367,1.701,368,1.789,369,1.673,370,1.789,371,1.646,372,1.789,373,1.701,374,1.789,375,3.137,376,1.789,377,1.701,378,1.789,379,1.729,380,1.789,381,1.701,382,1.203,383,1.789,384,1.701,385,1.086,386,1.789,387,1.701,388,2.332,389,1.789,390,1.701,391,1.789,392,1.729,393,1.789,394,1.701,395,1.789,396,1.729,397,1.789,398,1.701,399,1.789,400,1.701,401,1.595,402,1.789,403,1.701,404,1.673,405,1.789,406,1.759,407,1.789,408,1.701,409,1.789,410,1.701,411,1.701,412,1.729,413,1.62,414,1.789,415,1.789,466,2.897,574,2.796,584,3.556,663,3.844,696,3.065,722,4.714,739,2.81,740,2.268,758,2.129,763,2.843,764,1.62,765,1.033,766,2.041,1036,1.114,1049,1.701,1085,3.133,1088,2.45,1133,3.834,1137,2.227,1243,4.714,1253,3.943,1254,4.278,1256,2.7,1257,2.796,1271,2.227,1274,2.614,1275,2.537,1276,4.547,1277,5.355,1278,3.025,1279,3.025,1280,3.025,1281,5.26,1284,5.019,1285,3.025,1288,2.129,1296,2.068,1306,3.133,1312,4.409,1319,4.561,1564,3.844,1575,3.025,1664,2.614,1665,3.025,1851,2.537,1853,2.796,2015,3.34,2016,3.34,2267,4.355,2460,3.34,2461,4.808,2462,5.343,2463,3.34,2464,3.34,2467,3.844,2468,3.844,2659,7.091,2694,3.556,2754,3.844,2903,4.282,2904,7.221,2905,7.221,2906,6.163,2907,5.343,2908,7.898,2909,4.282,2910,6.951,2911,6.163,2912,4.282,2913,4.282,2914,4.282,2915,4.282,2916,4.282,2917,3.844,2918,4.282,2919,4.282,2920,3.844,2921,4.282,2922,4.282,2923,4.282,2924,4.282,2925,4.282,2926,4.282,2927,4.282,2928,5.533,2929,9.193,2930,4.282,2931,9.193,2932,8.253,2933,7.091,2934,4.282,2935,4.282,2936,4.282,2937,4.282,2938,4.282]],["title/modules/LegendModule.html",[184,1.108,1676,3.541]],["body/modules/LegendModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.504,29,0.043,44,0.087,130,0.004,131,0.004,184,1.612,186,2.593,187,2.757,188,1.78,189,3.557,190,2.757,191,2.673,192,3.502,198,3.316,199,2.714,200,2.593,214,3.215,215,1.479,243,3.265,375,4.189,1419,3.481,1420,2.847,1422,5.722,1423,4.756,1676,7.352,2939,6.541,2940,6.541,2941,6.541,2942,6.541,2943,7.499,2944,7.285,2945,7.285,2946,6.541,2947,6.05,2948,6.541]],["title/injectables/LegendService.html",[709,2.094,2910,4.161]],["body/injectables/LegendService.html",[2,0.03,3,0.03,4,0.026,8,0.178,9,0.347,10,0.632,11,2.17,21,0.168,22,0.005,25,0.444,26,1.307,29,0.026,30,2.373,32,1.946,34,2.147,36,4.21,38,1.782,41,2.011,43,1.946,44,0.053,45,3.598,48,0.707,53,2.91,75,1.482,78,1.983,94,1.617,100,1.782,130,0.003,131,0.003,138,3.598,141,3.667,142,3.528,143,3.528,144,2.54,145,2.613,146,2.723,174,2.208,175,3.201,176,2.175,177,2.175,178,2.175,182,5.05,188,1.956,202,2.241,207,0.879,209,0.885,211,1.524,215,0.896,232,1.57,235,0.66,245,3.809,269,1.666,299,2.54,308,1.117,550,3.664,569,2.613,600,4.66,623,3.117,688,3.664,694,4.978,699,4.912,709,2.632,711,2.472,722,4.111,758,2.194,765,1.064,766,2.103,771,2.782,913,3.961,914,3.961,915,3.961,916,3.961,917,3.961,918,3.961,1088,2.604,1137,2.295,1199,3.265,1341,1.782,1396,3.42,1638,4.912,1839,2.88,1852,5.653,1998,3.961,2274,6.817,2453,7.032,2845,5.229,2902,9.028,2907,4.66,2910,5.229,2917,3.961,2928,3.961,2949,4.412,2950,8.007,2951,6.297,2952,6.297,2953,4.412,2954,6.297,2955,4.412,2956,7.342,2957,7.342,2958,7.342,2959,7.342,2960,7.342,2961,7.342,2962,7.342,2963,7.342,2964,7.342,2965,8.007,2966,10.056,2967,6.297,2968,7.342,2969,8.805,2970,6.297,2971,8.007,2972,8.007,2973,8.007,2974,9.266,2975,7.342,2976,4.412,2977,4.412,2978,4.412,2979,3.961,2980,3.442,2981,6.297,2982,4.412]],["title/classes/Legends.html",[44,0.06,2907,3.708]],["body/classes/Legends.html",[2,0.042,3,0.042,4,0.037,8,0.249,9,0.436,20,0.654,21,0.362,22,0.005,25,0.312,29,0.037,38,2.494,44,0.074,47,1.251,64,1.156,102,2.198,130,0.004,131,0.004,188,2.376,202,2.814,203,1.954,207,1.328,211,3.014,232,3.105,235,0.829,501,1.4,531,5.45,547,2.775,552,7.1,568,2.724,569,2.198,586,6.17,591,6.567,598,7.177,600,5.852,603,2.031,621,6.17,660,3.141,692,5.128,694,6.236,696,3.071,708,4.57,797,6.17,1112,2.508,1306,3.139,1791,8.259,2764,6.567,2907,7.037,2920,5.544,2979,5.544,2983,6.175,2984,9.199,2985,9.199,2986,7.908,2987,6.175,2988,6.175,2989,7.908,2990,7.908,2991,9.199,2992,9.199,2993,9.199,2994,9.199,2995,6.175,2996,7.908,2997,7.908,2998,6.175,2999,6.175,3000,6.175,3001,5.544,3002,7.908,3003,5.544]],["title/interfaces/Link.html",[0,0.41,95,1.017]],["body/interfaces/Link.html",[0,0.755,1,1.276,2,0.039,3,0.039,4,0.033,8,0.227,9,0.411,11,1.8,12,3.345,13,1.713,14,1.185,15,2.375,16,2.344,17,3.345,20,0.693,21,0.338,22,0.005,23,2.909,24,0.848,25,0.376,26,2.206,27,2.148,28,2.235,29,0.06,30,2.736,32,2.482,38,2.273,40,2.578,41,1.541,44,0.067,46,1.142,47,1.263,48,0.621,50,2.198,51,2.682,53,2.297,54,2.352,55,2.529,58,2.329,59,3.157,60,3.157,64,0.746,68,2.629,70,2.629,71,2.629,73,2.629,75,1.752,76,2.682,77,2.682,78,2.529,80,2.629,85,2.682,86,2.682,87,4.072,88,2.574,94,1.445,95,1.802,96,4.147,97,1.581,99,2.682,100,2.273,102,2.649,130,0.003,131,0.003,132,3.815,133,3.815,134,3.976,135,3.111,136,3.976,137,5.046,138,3.749,139,3.239,140,5.046,141,2.437,142,3.153,143,3.153,144,3.239,145,3.333,146,1.81,147,4.148,148,5.446,149,3.436,150,3.436,151,3.674,152,3.976,153,3.548,154,3.976,155,3.976,156,3.976,157,3.976,158,3.548,159,3.976,160,3.976,161,3.976,162,3.815,163,3.815,164,3.976,165,3.976,166,3.976,167,4.974,168,5.598,169,3.674,170,3.548,171,3.674,172,3.674,173,3.674,174,1.973,175,1.944,176,1.944,177,1.944,178,1.944,179,3.283,180,4.86,181,3.223,182,3.548,183,1.2]],["title/interfaces/LinksASCTBData.html",[0,0.41,115,2.669]],["body/interfaces/LinksASCTBData.html",[0,0.799,1,1.044,2,0.032,3,0.032,4,0.027,5,2.395,6,4.104,7,4.246,8,0.186,9,0.358,11,2.022,12,3.378,13,2.718,14,1.583,15,2.543,16,2.51,17,3.378,18,2.613,19,2.453,20,0.711,21,0.35,22,0.005,23,3.489,24,1.383,25,0.232,26,2.227,27,1.873,28,1.829,29,0.061,30,2.419,31,2.395,32,2.031,33,2.395,34,2.241,35,2.395,36,2.29,37,2.453,38,1.86,39,1.364,40,2.109,41,1.777,42,2.453,43,2.031,44,0.09,45,2.069,46,1.863,47,1.266,48,0.625,49,4.15,50,1.71,51,2.195,52,2.395,53,2.655,54,3.142,55,2.069,56,4.004,57,2.241,58,2.352,59,2.845,60,2.845,61,3.457,62,3.544,63,3.544,64,0.61,65,3.544,66,2.453,67,2.514,68,2.151,69,2.514,70,2.151,71,3.512,72,2.514,73,2.151,74,2.151,75,1.084,76,3.584,77,2.195,78,3.378,79,4.104,80,2.151,81,2.514,82,2.453,83,2.514,84,2.514,85,2.195,86,2.195,87,2.031,88,2.003,89,2.453,90,2.514,91,2.514,92,2.514,93,2.514,94,1.183,95,1.747,96,3.032,97,1.294,98,1.925,99,2.195,100,1.86,101,3.544,102,1.639,103,3.544,104,2.514,105,2.453,106,4.004,107,2.514,108,1.704,109,1.461,110,2.514,111,2.453,112,2.514,113,1.892,114,1.86,115,3.457,116,3.353,117,3.411,118,3.411,119,3.411,120,2.416,121,3.411,122,3.411,123,2.453,124,2.514,125,2.514,126,2.514,127,2.514,128,2.514,129,2.514,130,0.003,131,0.003]],["title/interfaces/Loading.html",[0,0.41,1035,1.99]],["body/interfaces/Loading.html",[0,0.8,1,1.666,2,0.051,3,0.051,4,0.044,8,0.296,9,0.486,15,2.093,20,0.679,21,0.36,22,0.005,24,1.475,25,0.476,27,2.542,28,2.92,29,0.058,47,0.887,48,0.514,50,1.937,97,2.066,130,0.004,131,0.004,147,3.655,272,3.019,556,2.364,1015,2.782,1017,4.797,1030,3.5,1031,2.237,1035,4.034,3004,5.734,3005,6.911,3006,5.734,3007,5.734,3008,5.439,3009,5.194,3010,5.194]],["title/components/LoadingComponent.html",[250,1.355,377,1.99]],["body/components/LoadingComponent.html",[2,0.039,3,0.039,4,0.044,8,0.227,9,0.411,10,0.807,20,0.588,21,0.318,22,0.005,25,0.466,29,0.033,44,0.067,48,0.584,64,0.746,108,1.277,130,0.003,131,0.003,188,1.376,207,1.165,209,1.13,215,1.144,250,2.256,251,2.238,252,3.06,253,2.354,254,2.354,255,2.354,256,2.005,258,3.626,259,4.805,260,1.543,261,2.78,262,4.244,264,3.009,266,3.009,268,1.653,287,2.238,298,2.201,310,1.625,329,3.243,331,0.986,341,3.113,342,3.009,343,2.354,344,3.712,345,2.354,346,2.354,347,2.238,348,2.354,349,2.238,350,1.625,351,2.354,352,2.238,353,2.354,354,2.201,355,2.354,356,2.238,357,2.005,358,2.354,359,2.238,360,2.354,361,2.238,362,2.354,363,2.238,364,3.113,365,2.238,366,2.354,367,2.238,368,2.354,369,2.201,370,2.354,371,2.166,372,2.354,373,2.238,374,2.354,375,2.238,376,2.354,377,3.528,378,2.354,379,2.275,380,2.354,381,2.238,382,1.583,383,2.354,384,2.238,385,1.429,386,2.354,387,2.238,388,2.819,389,2.354,390,2.238,391,2.354,392,2.275,393,2.354,394,2.238,395,2.354,396,2.275,397,2.354,398,2.238,399,2.354,400,2.238,401,2.099,402,2.354,403,2.238,404,2.201,405,2.354,406,2.314,407,2.354,408,2.238,409,2.354,410,2.238,411,2.238,412,2.275,413,2.132,414,2.354,415,2.354,442,3.243,474,4.395,475,4.678,1035,2.959,1095,5.449,1137,2.93,1234,3.337,1237,5.264,1529,4.067,1761,4.678,2112,3.44,2121,3.678,2138,6.186,3005,5.897,3011,5.633,3012,8.346,3013,7.449,3014,7.449,3015,5.057,3016,5.633,3017,6.688,3018,5.057,3019,4.395,3020,4.395,3021,5.633,3022,5.633,3023,5.633]],["title/modules/LoadingModule.html",[184,1.108,3024,3.909]],["body/modules/LoadingModule.html",[2,0.052,3,0.052,4,0.045,22,0.005,25,0.482,29,0.045,44,0.09,130,0.004,131,0.004,184,1.668,186,2.684,187,2.854,188,1.842,189,3.61,190,2.854,191,2.766,192,3.553,198,3.385,199,2.809,200,2.684,214,3.282,215,1.531,243,2.809,377,4.206,1419,3.553,1420,2.947,3024,8.05,3025,6.77,3026,6.77,3027,6.77,3028,7.541,3029,7.541]],["title/injectables/LocalStorageSyncService.html",[197,3.541,709,2.094]],["body/injectables/LocalStorageSyncService.html",[2,0.045,3,0.045,4,0.039,10,0.946,20,0.595,21,0.252,22,0.005,23,3.224,25,0.454,29,0.049,30,2.667,43,2.913,44,0.079,48,0.462,64,1.093,130,0.004,131,0.004,163,4.477,195,6.043,197,5.83,207,0.922,209,1.324,215,1.341,221,5.152,224,7.021,232,3.203,234,6.66,235,0.988,236,3.357,258,3.214,269,1.872,271,5.484,298,3.224,299,5.587,300,4.477,302,5.83,308,1.171,569,2.936,709,3.449,711,3.7,771,4.165,774,4.666,958,4.666,1137,3.435,1471,6.976,1481,5.594,1483,4.887,1484,4.887,1486,4.477,2121,4.312,2503,5.484,2508,6.437,2510,5.929,2518,5.929,3030,7.408,3031,6.604,3032,6.604,3033,5.929,3034,5.929,3035,5.929,3036,5.929,3037,5.929,3038,5.929,3039,8.251,3040,6.604,3041,6.604,3042,6.604,3043,6.604,3044,6.604,3045,6.604,3046,6.604,3047,6.604,3048,8.251,3049,6.604,3050,6.604,3051,6.604,3052,6.604,3053,6.604]],["title/interfaces/Log.html",[0,0.41,1017,2.548]],["body/interfaces/Log.html",[0,0.7,1,1.586,2,0.048,3,0.048,4,0.051,8,0.282,9,0.472,20,0.701,21,0.383,22,0.005,29,0.057,39,2.534,46,1.953,47,1.114,130,0.004,131,0.004,556,2.25,759,4.743,760,4.743,763,2.789,962,2.911,1017,4.347,1019,3.639,1020,1.731,1844,5.458,1847,5.177,2151,4.743,2152,4.944,3054,5.81,3055,7.505,3056,7.428,3057,7.428,3058,7.428,3059,7.428,3060,7.119,3061,5.81]],["title/interfaces/LogEntry.html",[0,0.41,3060,3.708]],["body/interfaces/LogEntry.html",[0,0.713,1,1.635,2,0.05,3,0.05,4,0.052,8,0.291,9,0.481,20,0.699,21,0.357,22,0.005,29,0.058,39,2.581,46,1.464,47,0.87,130,0.004,131,0.004,556,3.126,759,4.889,760,4.889,763,2.841,962,2.965,1017,3.666,1019,5.055,1020,2.404,1844,5.626,1847,5.336,2151,4.889,2152,5.095,3054,5.988,3055,5.626,3056,6.925,3057,6.925,3058,6.925,3059,6.925,3060,6.925,3061,5.988]],["title/interfaces/Logs.html",[0,0.41,1015,1.896]],["body/interfaces/Logs.html",[0,0.8,1,1.666,2,0.051,3,0.051,4,0.044,8,0.296,9,0.486,15,2.093,20,0.662,21,0.36,22,0.005,24,1.328,25,0.476,27,2.542,28,2.92,29,0.058,47,0.887,48,0.514,50,1.937,97,2.066,130,0.004,131,0.004,147,3.655,272,3.019,556,2.364,1015,3.334,1017,5.219,1030,3.5,1031,2.237,1035,3.5,3004,5.734,3005,5.194,3006,5.734,3007,5.734,3008,5.439,3009,6.911,3010,6.911]],["title/injectables/LogsState.html",[468,3.909,709,2.094]],["body/injectables/LogsState.html",[0,0.41,2,0.034,3,0.034,4,0.03,8,0.202,10,1.126,21,0.338,22,0.005,25,0.427,29,0.041,30,2.983,44,0.082,46,2.067,47,0.604,48,0.592,58,2.459,130,0.003,131,0.003,141,2.168,202,2.448,203,1.76,207,1.097,209,1.576,211,3.065,215,1.016,232,1.781,247,2.805,261,2.045,298,2.688,300,3.394,302,6.268,306,6.268,442,2.882,468,6.132,556,1.61,709,2.875,711,2.805,733,3.394,734,0.974,749,5.733,750,3.537,761,3.537,949,5.985,962,1.704,1012,5.98,1014,4.861,1015,3.672,1017,4.773,1018,4.861,1019,4.088,1020,1.702,1192,4.491,1529,4.292,2481,5.595,3009,6.477,3010,6.634,3055,6.602,3056,6.565,3057,6.565,3058,6.565,3059,6.565,3060,5.091,3062,4.494,3063,6.879,3064,5.006,3065,7.325,3066,6.176,3067,5.006,3068,6.176,3069,7.028,3070,5.006,3071,5.006,3072,6.176,3073,5.006,3074,3.704,3075,3.537,3076,4.494,3077,3.905,3078,6.176,3079,7.056,3080,6.602,3081,6.176,3082,4.494,3083,4.494,3084,4.494,3085,7.965,3086,7.965,3087,4.494,3088,4.494,3089,4.494,3090,4.494,3091,4.494,3092,4.494,3093,4.494,3094,4.494,3095,4.494,3096,4.494,3097,4.494,3098,4.494,3099,4.494,3100,5.367,3101,4.494]],["title/interfaces/LogsStateModel.html",[0,0.41,3069,4.161]],["body/interfaces/LogsStateModel.html",[0,0.428,1,1.185,2,0.036,3,0.036,4,0.031,8,0.211,9,0.391,21,0.343,22,0.005,25,0.435,29,0.042,30,3.003,44,0.096,46,2.109,47,0.97,48,0.366,58,2.515,130,0.003,131,0.003,141,2.264,203,1.171,211,1.806,215,1.061,232,1.861,261,1.844,300,3.544,302,6.364,306,6.364,442,3.01,468,5.528,556,1.681,709,2.962,731,1.754,733,4.804,734,0.996,749,4.908,750,3.694,761,3.694,949,5.881,962,1.78,1012,5.007,1014,3.694,1015,3.706,1017,5.034,1018,5.007,1019,4.181,1020,1.753,1192,3.413,2481,5.069,3009,6.827,3010,6.92,3055,6.723,3056,6.665,3057,6.665,3058,6.665,3059,6.665,3060,5.244,3062,4.694,3065,6.272,3066,4.694,3068,4.694,3069,6.676,3072,4.694,3074,5.244,3075,5.007,3076,6.362,3077,4.079,3078,6.362,3079,7.217,3080,6.723,3081,6.362,3082,4.694,3083,4.694,3084,4.694,3085,8.086,3086,8.086,3087,4.694,3088,4.694,3089,4.694,3090,4.694,3091,4.694,3092,4.694,3093,4.694,3094,4.694,3095,4.694,3096,4.694,3097,4.694,3098,4.694,3099,4.694,3100,5.528,3101,4.694]],["title/classes/Marker.html",[44,0.06,105,2.669]],["body/classes/Marker.html",[0,0.797,2,0.031,3,0.031,4,0.027,5,2.375,6,4.086,7,4.23,8,0.184,9,0.356,10,0.654,11,2.08,12,3.363,13,2.846,14,1.576,15,2.536,16,2.503,17,3.363,18,2.744,19,2.432,20,0.712,21,0.349,22,0.005,23,3.48,24,1.41,25,0.231,26,2.217,27,1.862,28,1.814,29,0.061,30,2.41,31,2.375,32,2.014,33,2.375,34,2.223,35,2.375,36,2.271,37,2.432,38,1.844,39,1.353,40,2.092,41,1.767,42,2.432,43,2.014,44,0.089,45,2.052,46,1.858,47,1.258,48,0.64,49,4.134,50,1.7,51,2.177,52,2.375,53,2.647,54,3.127,55,2.052,56,4.57,57,2.223,58,2.341,59,2.832,60,2.832,61,3.437,62,3.523,63,3.523,64,0.855,65,3.523,66,2.432,67,2.493,68,2.133,69,2.493,70,2.133,71,3.496,72,2.493,73,2.133,74,2.133,75,1.075,76,3.567,77,2.177,78,3.363,79,4.086,80,2.133,81,2.493,82,2.432,83,2.493,84,2.493,85,2.177,86,2.177,87,2.014,88,1.991,89,2.432,90,2.493,91,2.493,92,2.493,93,2.493,94,1.173,95,1.742,96,3.015,97,1.283,98,1.909,99,2.177,100,1.844,101,4.086,102,1.625,103,3.523,104,2.493,105,3.437,106,4.876,107,2.493,108,1.697,109,1.448,110,2.493,111,2.432,112,2.493,113,1.876,114,1.844,115,2.432,116,1.876,117,1.909,118,1.909,119,1.909,120,1.898,121,1.909,122,1.909,123,2.432,124,2.493,125,2.493,126,2.493,127,2.493,128,2.493,129,2.493,130,0.003,131,0.003,207,1.243,209,0.916,501,1.035,3102,6.453,3103,4.567,3104,4.567,3105,4.567,3106,4.567]],["title/classes/Marks.html",[44,0.06,567,3.541]],["body/classes/Marks.html",[2,0.045,3,0.045,4,0.039,8,0.264,9,0.453,21,0.25,22,0.005,25,0.475,29,0.039,44,0.078,64,1.188,130,0.004,131,0.004,147,4.912,202,2.922,203,2.008,207,1.379,211,3.248,232,3.345,256,2.922,501,1.485,529,5.441,531,5.569,532,8.439,542,7.819,545,8.079,547,3.69,548,3.836,567,7.082,568,3.955,569,2.331,571,5.882,1045,2.604,1727,6.076,1735,8.203,3107,6.552,3108,8.439,3109,8.439,3110,8.21,3111,6.552,3112,6.552,3113,6.552,3114,7.371,3115,6.552,3116,6.552,3117,5.441,3118,6.552,3119,5.441,3120,6.552,3121,6.552,3122,6.552,3123,5.882,3124,5.882,3125,6.552,3126,6.552,3127,6.552]],["title/interfaces/Metadata.html",[0,0.41,260,1.372]],["body/interfaces/Metadata.html",[0,0.85,1,0.971,2,0.029,3,0.042,4,0.025,8,0.173,9,0.34,10,0.883,11,1.558,13,1.303,14,1.763,15,2.249,16,2.029,18,2.666,20,0.718,21,0.357,22,0.005,24,1.491,26,1.826,27,2.515,29,0.062,39,1.826,41,1.173,46,1.603,47,1.208,48,0.665,50,2.205,75,1.008,88,1.321,94,1.1,95,1.251,97,2.45,109,1.358,120,1.086,130,0.003,131,0.003,146,1.377,174,1.501,175,1.479,176,1.479,177,1.479,178,1.479,183,1.314,235,0.646,260,2.163,261,1.114,295,2.161,331,0.929,466,1.571,620,1.701,629,1.558,660,2.448,703,1.701,721,2.458,724,1.666,731,2.068,734,0.895,739,1.928,740,1.603,756,1.128,960,1.571,962,1.458,1020,2.156,1088,1.203,1106,1.62,1107,3.352,1108,3.218,1109,3.271,1112,2.765,1113,3.406,1114,2.448,1185,1.673,1186,1.547,1245,1.673,1296,2.423,1330,1.759,1331,2.576,1332,2.532,1333,1.729,1334,1.673,1335,1.759,1336,1.759,1337,1.759,1338,1.759,1339,1.759,1340,1.759,1341,2.489,1342,1.729,1343,1.71,1344,1.759,1345,1.789,1346,1.759,1347,1.729,1348,1.269,1349,1.759,1350,1.789,1351,1.789,1352,1.789,1353,1.789,1354,1.789,1355,1.789,1356,1.789,1357,1.789,1358,1.789,1359,1.759,1360,1.759,1361,2.576,1362,2.576,1363,1.789,1364,1.397,1365,1.397,1366,1.397,1367,1.759,1368,1.729,1369,1.759,1370,2.532,1371,2.576,1372,2.576,1373,1.759,1374,1.789,1375,1.646,1376,1.789,1377,1.789,1378,1.789,1379,1.789,1380,1.789,1381,1.701,1382,2.966,1383,1.759,1384,1.789,1385,1.789,1386,1.701,1387,1.789,1388,1.789,1389,2.532,1390,1.789,1391,2.532,1392,1.729,1393,2.532,1394,3.301,1395,3.301,1396,3.19,1397,1.826,1398,1.759,1399,2.532,1400,1.789,1401,1.789,1402,1.789,1403,1.789,1404,1.789,1405,1.789,1406,1.789,1407,1.759,1408,1.701,1409,1.286,1410,1.789]],["title/interfaces/MoreOption.html",[0,0.41,1389,2.058]],["body/interfaces/MoreOption.html",[0,0.852,1,0.997,2,0.03,3,0.043,4,0.026,8,0.177,9,0.347,11,1.582,13,1.338,14,1.323,15,2.276,16,2.06,18,2.683,20,0.718,21,0.353,22,0.005,24,1.497,26,1.861,27,2.307,29,0.062,39,1.861,41,1.204,46,1.623,47,1.212,48,0.669,50,1.655,75,1.034,88,1.356,94,1.129,95,1.275,97,2.06,109,1.394,120,1.115,130,0.003,131,0.003,146,1.414,174,1.541,175,1.519,176,1.519,177,1.519,178,1.519,183,1.339,235,0.658,260,2.007,261,1.144,295,2.202,331,0.938,466,1.613,620,1.746,629,1.582,660,2.495,703,1.746,721,2.495,724,1.698,731,2.108,734,0.908,739,1.965,740,1.634,756,1.158,960,1.613,962,1.497,1020,2.175,1088,1.236,1106,3.025,1107,3.381,1108,3.251,1109,3.304,1112,2.789,1113,3.436,1114,2.495,1185,1.718,1186,1.588,1245,1.718,1296,2.459,1330,1.806,1331,2.625,1332,2.58,1333,1.775,1334,1.718,1335,1.806,1336,1.806,1337,1.806,1338,1.806,1339,1.806,1340,1.806,1341,2.537,1342,1.775,1343,1.742,1344,1.806,1345,1.837,1346,1.806,1347,1.775,1348,1.303,1349,1.806,1350,1.837,1351,1.837,1352,1.837,1353,1.837,1354,1.837,1355,1.837,1356,1.837,1357,1.837,1358,1.837,1359,1.806,1360,1.806,1361,2.625,1362,2.625,1363,1.837,1364,1.434,1365,1.434,1366,1.434,1367,1.806,1368,1.775,1369,1.806,1370,2.58,1371,2.625,1372,2.625,1373,1.806,1374,1.837,1375,1.69,1376,1.837,1377,1.837,1378,1.837,1379,1.837,1380,1.837,1381,1.746,1382,3.01,1383,1.806,1384,1.837,1385,1.837,1386,1.746,1387,1.837,1388,1.837,1389,3.01,1390,1.837,1391,2.58,1392,1.775,1393,2.58,1394,1.837,1395,1.837,1396,1.775,1397,1.861,1398,1.806,1399,2.58,1400,1.837,1401,1.837,1402,1.837,1403,1.837,1404,1.837,1405,1.837,1406,1.837,1407,1.806,1408,1.746,1409,1.32,1410,1.837]],["title/modules/MousePositionTrackerModule.html",[184,1.108,427,3.708]],["body/modules/MousePositionTrackerModule.html",[2,0.047,3,0.047,4,0.041,22,0.005,25,0.495,29,0.05,30,2.906,44,0.082,64,0.908,130,0.004,131,0.004,144,3.944,184,1.515,186,2.438,214,3.097,215,1.391,218,3.335,219,3.407,220,3.649,230,3.741,232,3.004,323,4.609,331,0.76,427,6.247,466,2.513,821,3.201,926,5.345,967,3.266,968,3.201,969,2.967,970,4.024,971,3.266,972,3.266,1075,4.996,1093,5.127,1137,3.564,1420,2.677,1469,5.69,1981,4.473,2121,4.473,2508,6.586,3128,6.151,3129,6.151,3130,8.574,3131,6.851,3132,6.851,3133,6.151,3134,5.69,3135,6.851,3136,6.851,3137,8.442,3138,8.442,3139,6.151,3140,8.442,3141,8.442,3142,6.851,3143,6.851,3144,6.851,3145,6.851,3146,6.851,3147,6.851,3148,6.851,3149,6.851,3150,6.151,3151,6.151,3152,6.851,3153,6.851,3154,6.851,3155,6.151,3156,6.851,3157,6.851,3158,6.851,3159,6.851,3160,6.851]],["title/classes/MultiParentMarkGroup.html",[44,0.06,3117,4.161]],["body/classes/MultiParentMarkGroup.html",[2,0.043,3,0.043,4,0.037,8,0.25,9,0.438,20,0.61,21,0.351,22,0.005,25,0.314,29,0.037,38,2.51,44,0.074,47,0.958,48,0.435,64,1.159,130,0.004,131,0.004,141,2.691,147,4.585,153,3.919,202,2.826,203,1.96,207,1.33,211,3.023,232,3.114,235,1.061,236,4.448,331,0.881,495,6.251,501,1.409,531,5.462,542,7.728,567,4.391,568,2.741,569,2.211,574,4.057,586,6.194,588,4.335,592,5.876,600,5.876,602,6.594,603,2.04,604,5.383,605,6.594,606,5.876,621,6.194,623,4.391,635,5.16,636,5.876,649,5.16,655,4.848,689,6.594,1794,5.579,3108,8.278,3114,5.579,3117,6.594,3123,5.579,3161,6.214,3162,9.221,3163,7.94,3164,6.214,3165,6.214,3166,6.214,3167,6.214,3168,6.214,3169,5.579,3170,5.579]],["title/components/NavItemComponent.html",[250,1.355,381,1.99]],["body/components/NavItemComponent.html",[2,0.038,3,0.038,4,0.044,8,0.224,11,1.907,14,1.991,20,0.368,21,0.282,22,0.005,24,0.839,25,0.281,29,0.033,44,0.066,48,0.517,53,2.28,108,1.261,130,0.003,131,0.003,181,2.409,188,1.359,207,1.031,215,1.129,235,0.774,250,2.242,251,2.21,252,3.035,253,2.325,254,2.325,255,2.325,256,1.98,260,1.524,261,2.778,262,4.241,264,2.984,266,2.984,287,2.21,308,1.31,310,1.605,341,3.088,342,2.984,343,2.325,344,3.693,345,2.325,346,2.325,347,2.21,348,2.325,349,2.21,350,1.605,351,2.325,352,2.21,353,2.325,354,2.174,355,2.325,356,2.21,357,1.98,358,2.325,359,2.21,360,2.325,361,2.21,362,2.325,363,2.21,364,3.088,365,2.21,366,2.325,367,2.21,368,2.325,369,2.174,370,2.325,371,2.139,372,2.325,373,2.21,374,2.325,375,2.21,376,2.325,377,2.21,378,2.325,379,2.247,380,2.325,381,3.51,382,2.838,383,2.325,384,2.21,385,1.411,386,2.325,387,2.21,388,2.796,389,2.325,390,2.21,391,2.325,392,2.247,393,2.325,394,2.21,395,2.325,396,2.247,397,2.325,398,2.21,399,2.325,400,2.21,401,2.073,402,2.325,403,2.21,404,2.174,405,2.325,406,2.285,407,2.325,408,2.21,409,2.325,410,2.21,411,2.21,412,2.247,413,2.105,414,2.325,415,2.325,483,6.889,658,3.632,659,3.632,708,4.117,1085,3.756,1133,3.8,1271,3.843,1281,3.843,1288,2.767,1293,3.772,1305,3.296,1306,4.217,1324,6.633,1664,3.397,1839,5.416,2077,4.34,3171,7.447,3172,6.889,3173,5.564,3174,8.295,3175,7.388,3176,5.564,3177,5.564,3178,5.564,3179,5.564,3180,7.388,3181,5.564,3182,5.564,3183,5.564,3184,5.564]],["title/modules/NavItemModule.html",[184,1.108,3185,3.708]],["body/modules/NavItemModule.html",[2,0.052,3,0.052,4,0.045,22,0.005,25,0.481,29,0.045,44,0.089,130,0.004,131,0.004,184,1.66,186,2.671,187,2.841,188,1.834,189,3.603,190,2.841,191,2.754,192,3.547,198,3.376,199,2.797,200,2.671,214,3.273,215,1.524,243,2.797,381,4.204,382,2.11,1419,3.544,1420,2.933,3171,6.739,3172,6.234,3185,7.629,3186,6.739,3187,6.739,3188,6.739,3189,7.507,3190,7.507]],["title/modules/NavbarModule.html",[184,1.108,3191,3.708]],["body/modules/NavbarModule.html",[2,0.045,3,0.045,4,0.039,22,0.005,25,0.53,29,0.039,44,0.077,130,0.004,131,0.004,184,1.436,186,2.31,187,2.457,188,1.586,189,3.379,190,2.457,191,2.381,192,3.327,198,3.089,199,2.418,200,2.31,214,2.994,215,1.318,243,3.041,278,3.159,284,4.094,379,4.198,404,3.19,491,6.041,588,3.544,1136,3.637,1419,3.242,1420,2.537,1424,4.059,1427,5.329,1428,5.148,1432,3.814,1433,3.033,1694,5.329,1695,4.238,2280,5.768,2281,4.401,2442,4.804,2479,6.368,2772,6.681,2777,4.804,2778,5.391,3172,5.391,3185,7.292,3191,7.723,3192,5.828,3193,5.828,3194,5.828,3195,5.828,3196,7.292,3197,6.491,3198,6.491,3199,8.163,3200,6.491,3201,6.491,3202,6.491,3203,6.491,3204,6.368,3205,5.064,3206,5.828]],["title/classes/NoError.html",[44,0.06,1038,2.295]],["body/classes/NoError.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.721,130,0.003,131,0.003,203,2.357,207,0.76,235,0.57,268,1.442,269,2.19,272,2.99,308,0.965,310,1.57,312,1.346,316,2.073,331,0.808,350,1.57,382,1.529,501,1.234,556,2.936,558,3.402,603,1.398,629,1.89,734,1.132,755,2.356,756,1.434,763,3.221,764,2.059,765,1.313,1015,2.059,1025,2.445,1026,2.542,1027,4.155,1028,2.258,1030,2.891,1031,2.216,1032,1.726,1033,2.445,1034,3.927,1035,3.258,1036,2.444,1037,2.445,1038,3.335,1039,2.4,1040,2.4,1041,2.445,1042,2.445,1043,2.445,1044,2.356,1045,1.726,1046,2.445,1047,2.445,1048,2.445,1049,2.161,1050,2.493,1051,2.493,1052,2.274,1053,2.4,1054,2.445,1055,2.445,1056,2.4,1057,2.445,1058,2.374,1059,2.445,3207,5.441]],["title/interfaces/Node.html",[0,0.41,643,2.669]],["body/interfaces/Node.html",[0,0.622,1,1.316,2,0.04,3,0.04,4,0.035,8,0.234,9,0.419,10,1.089,20,0.654,21,0.323,22,0.005,24,0.875,25,0.483,29,0.035,44,0.069,47,1.022,48,0.669,50,2.521,53,2.614,57,4.374,58,1.816,130,0.003,131,0.003,215,1.178,232,2.066,245,2.345,250,2.054,258,2.826,259,4.374,261,1.51,262,2.306,264,2.345,266,2.345,268,1.15,269,1.208,295,2.664,298,2.969,299,3.342,329,3.342,331,0.644,371,2.232,569,3.319,643,5.479,721,2.587,732,4.529,734,0.942,765,1.4,911,4.102,1036,1.51,1044,2.514,1052,2.426,1097,4.876,1133,4.116,1134,4.746,1481,5.151,1486,3.936,1603,5.928,1606,4.296,1720,3.342,2283,5.928,2284,4.296,2285,4.102,2286,4.821,2287,6.31,2288,7.034,2289,6.31,2290,4.821,2291,5.623,2292,3.936,2293,6.31,2294,4.821,2295,6.31,2296,4.529,2297,5.369,2298,4.529,2299,5.623,2300,5.985,2301,4.821,2302,4.821,2303,4.821,2304,4.529,2305,4.821,2306,4.296,2307,4.102,2308,4.821,2309,4.821,2310,4.821,2311,4.821,2312,4.821,2313,7.034,2314,4.821,2315,6.31,2316,4.821,2317,4.821,2318,4.821,2319,4.821,2320,4.529,2321,4.821,2322,4.821,2323,4.821,2324,4.821,2325,4.821,2326,4.821,2327,7.034,2328,4.821,2329,4.821,2330,4.296,2331,4.821,2332,4.821,2333,4.821,2334,4.821]],["title/interfaces/OmapConfig.html",[0,0.41,725,2.389]],["body/interfaces/OmapConfig.html",[0,0.65,1,1.8,2,0.055,3,0.055,4,0.047,8,0.32,9,0.509,21,0.351,22,0.005,24,1.558,29,0.047,130,0.004,131,0.004,725,4.396,3208,7.941,3209,8.329,3210,8.329]],["title/components/OmapControlsComponent.html",[250,1.355,384,1.99]],["body/components/OmapControlsComponent.html",[2,0.034,3,0.034,4,0.04,8,0.199,10,0.706,11,1.469,14,1.038,21,0.32,22,0.005,25,0.425,29,0.029,44,0.059,48,0.546,53,2.595,102,1.755,108,1.768,120,1.978,130,0.003,131,0.003,181,2.135,188,1.204,202,2.423,207,1.174,209,0.989,211,1.703,215,1.001,235,0.517,250,2.108,251,1.959,252,2.797,253,2.061,254,2.061,255,2.061,256,1.755,260,1.35,261,2.757,262,4.21,264,2.75,266,2.75,287,1.959,298,1.927,308,0.875,310,1.423,323,2.692,339,3.011,341,2.845,342,2.75,343,2.061,344,3.514,345,2.061,346,2.061,347,1.959,348,2.061,349,1.959,350,1.423,351,2.061,352,1.959,353,2.061,354,1.927,355,2.061,356,1.959,357,1.755,358,2.061,359,1.959,360,2.061,361,1.959,362,2.061,363,1.959,364,2.845,365,1.959,366,2.061,367,1.959,368,2.061,369,1.927,370,2.061,371,1.896,372,2.061,373,1.959,374,2.061,375,1.959,376,2.061,377,1.959,378,2.061,379,1.992,380,2.061,381,1.959,382,1.386,383,2.061,384,3.34,385,2.529,386,2.061,387,1.959,388,2.577,389,2.061,390,1.959,391,2.061,392,1.992,393,2.061,394,1.959,395,2.061,396,1.992,397,2.061,398,1.959,399,2.061,400,1.959,401,1.837,402,2.061,403,1.959,404,1.927,405,2.061,406,2.026,407,2.061,408,1.959,409,2.061,410,1.959,411,1.959,412,1.992,413,2.951,414,2.061,415,2.061,569,1.755,574,3.219,696,3.878,725,3.717,762,2.565,763,2.976,764,1.866,1049,3.097,1085,3.461,1087,4.293,1097,4.489,1133,3.572,1134,3.815,1241,5.654,1242,5.312,1243,5.091,1253,4.591,1254,4.981,1256,3.11,1257,3.219,1271,3.541,1276,4.841,1277,5.701,1278,3.484,1279,3.484,1280,3.484,1281,3.541,1284,5.203,1285,3.484,1288,2.452,1306,4.275,1312,5.135,1343,1.889,1558,3.439,1664,3.011,1665,3.484,1682,7.328,1851,2.921,2460,3.847,2461,5.312,2462,5.038,2463,3.847,2464,3.847,3209,5.654,3210,5.654,3211,7.922,3212,4.427,3213,7.001,3214,6.112,3215,6.808,3216,7.922,3217,4.931,3218,4.931,3219,4.427,3220,6.808,3221,4.427,3222,4.931,3223,4.931,3224,4.931,3225,4.931,3226,4.931,3227,6.808,3228,6.808,3229,4.931,3230,4.931]],["title/modules/OmapControlsModule.html",[184,1.108,1677,3.708]],["body/modules/OmapControlsModule.html",[2,0.048,3,0.048,4,0.042,22,0.005,25,0.525,29,0.042,44,0.084,130,0.004,131,0.004,184,1.554,186,2.5,187,2.659,188,1.716,189,3.501,190,2.659,191,2.578,192,3.447,198,3.245,199,2.618,200,2.5,214,3.145,215,1.426,243,2.618,278,3.42,384,4.171,385,1.782,1419,3.405,1420,2.746,1422,5.597,1423,4.587,1424,4.263,1432,4.005,1433,3.283,1677,7.528,1682,5.835,1691,6.308,1694,5.597,1695,4.587,2051,5.812,2052,4.763,2053,4.763,2442,5.2,2479,6.689,3211,6.308,3231,6.308,3232,6.308,3233,6.308,3234,7.026,3235,7.697,3236,6.308]],["title/classes/OpenBottomSheet.html",[44,0.06,1052,2.094]],["body/classes/OpenBottomSheet.html",[2,0.037,3,0.037,4,0.032,8,0.214,9,0.395,10,0.761,20,0.599,21,0.403,22,0.005,25,0.409,29,0.062,44,0.125,48,0.372,64,0.949,130,0.003,131,0.003,203,2.353,207,1.131,209,1.065,235,0.557,268,1.718,269,2.185,272,2.943,308,0.942,310,1.533,312,1.314,316,2.04,331,1.005,350,1.533,382,1.493,501,1.204,556,2.913,558,3.374,603,1.365,629,1.872,734,1.156,755,2.301,756,1.4,763,3.111,764,2.01,765,1.282,1015,2.01,1025,2.387,1026,2.482,1027,4.13,1028,2.308,1030,2.845,1031,2.757,1032,1.685,1033,2.387,1034,3.986,1035,3.219,1036,2.427,1037,2.387,1038,2.434,1039,2.343,1040,2.343,1041,2.387,1042,2.387,1043,2.387,1044,2.301,1045,1.685,1046,2.387,1047,2.387,1048,2.387,1049,2.11,1050,2.434,1051,2.434,1052,2.994,1053,2.343,1054,2.387,1055,2.387,1056,2.343,1057,2.387,1058,2.336,1059,2.387,2112,3.244,3237,7.163,3238,5.312]],["title/classes/OpenBottomSheetDOI.html",[44,0.06,1053,2.21]],["body/classes/OpenBottomSheetDOI.html",[2,0.036,3,0.036,4,0.032,8,0.214,9,0.395,10,0.76,20,0.599,21,0.403,22,0.005,25,0.409,29,0.062,44,0.125,48,0.371,64,0.948,130,0.003,131,0.003,203,2.352,207,1.131,209,1.064,235,0.556,268,1.718,269,2.185,272,2.94,308,0.941,310,1.531,312,1.313,316,2.038,331,1.005,350,1.531,382,1.491,501,1.203,556,2.912,558,3.373,603,1.363,629,2.092,734,1.156,755,2.298,756,1.398,763,3.11,764,2.008,765,1.28,1015,2.008,1025,2.385,1026,2.479,1027,4.129,1028,2.307,1030,2.843,1031,2.179,1032,1.683,1033,2.385,1034,3.985,1035,3.218,1036,2.427,1037,2.385,1038,2.431,1039,2.341,1040,2.341,1041,2.385,1042,2.385,1043,2.385,1044,2.298,1045,1.683,1046,2.385,1047,2.385,1048,2.385,1049,2.108,1050,2.431,1051,2.431,1052,2.218,1053,3.157,1054,2.385,1055,2.385,1056,2.341,1057,2.385,1058,2.335,1059,2.385,2112,3.24,3239,7.158,3240,5.307]],["title/interfaces/OpenBottomSheetData.html",[0,0.41,1031,1.525]],["body/interfaces/OpenBottomSheetData.html",[0,0.792,1,1.616,2,0.049,3,0.049,4,0.042,8,0.287,9,0.477,15,2.757,20,0.693,21,0.384,22,0.005,24,1.304,25,0.47,27,2.793,28,2.831,29,0.058,47,1.123,48,0.677,50,2.551,97,2.721,130,0.004,131,0.004,147,4.814,272,2.928,556,2.292,1015,2.697,1017,4.733,1030,3.435,1031,2.633,1035,3.435,3004,5.561,3005,5.036,3006,5.561,3007,5.561,3008,5.275,3009,5.036,3010,5.036]],["title/classes/OpenCompare.html",[44,0.06,1055,2.252]],["body/classes/OpenCompare.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.721,130,0.003,131,0.003,203,2.357,207,0.76,235,0.57,268,1.442,269,2.19,272,2.99,308,0.965,310,1.57,312,1.346,316,2.336,331,0.808,350,1.57,382,1.529,501,1.234,556,2.936,558,3.402,603,1.398,629,1.89,734,1.132,755,2.356,756,1.434,763,3.13,764,2.059,765,1.313,1015,2.059,1025,2.445,1026,2.542,1027,4.155,1028,2.258,1030,2.891,1031,2.216,1032,1.726,1033,2.445,1034,4.01,1035,3.258,1036,2.444,1037,2.445,1038,2.493,1039,2.4,1040,2.4,1041,2.445,1042,2.445,1043,2.445,1044,2.356,1045,1.726,1046,2.445,1047,2.445,1048,2.445,1049,2.161,1050,2.493,1051,2.493,1052,2.274,1053,2.4,1054,2.445,1055,3.271,1056,2.4,1057,2.445,1058,2.374,1059,2.445,3241,5.441]],["title/classes/OpenLoading.html",[44,0.06,1033,2.252]],["body/classes/OpenLoading.html",[2,0.037,3,0.037,4,0.032,8,0.214,9,0.396,10,0.762,20,0.642,21,0.403,22,0.005,25,0.409,29,0.062,44,0.125,48,0.372,64,0.95,130,0.003,131,0.003,203,2.353,207,1.132,209,1.066,235,0.557,268,1.719,269,2.186,272,2.945,308,0.943,310,1.534,312,1.315,316,2.041,331,0.796,350,1.534,382,1.495,501,1.206,556,3.12,558,3.375,603,1.366,629,1.873,734,1.123,755,2.303,756,1.401,763,3.111,764,2.013,765,1.283,1015,2.013,1025,2.39,1026,2.485,1027,4.131,1028,2.241,1030,2.847,1031,2.182,1032,1.687,1033,3.221,1034,3.987,1035,3.447,1036,2.428,1037,2.39,1038,2.436,1039,2.346,1040,2.346,1041,2.39,1042,2.39,1043,2.39,1044,2.303,1045,1.687,1046,2.39,1047,2.39,1048,2.39,1049,2.112,1050,2.436,1051,2.436,1052,2.223,1053,2.346,1054,2.39,1055,2.39,1056,2.346,1057,2.39,1058,2.338,1059,2.39,1062,4.149,3242,7.169,3243,5.318]],["title/classes/OpenSearch.html",[44,0.06,1057,2.252]],["body/classes/OpenSearch.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.721,130,0.003,131,0.003,203,2.357,207,0.76,235,0.57,268,1.442,269,2.19,272,2.99,308,0.965,310,1.57,312,1.346,316,2.073,331,0.808,350,1.57,382,1.529,501,1.234,556,2.936,558,3.402,603,1.398,629,1.89,734,1.132,755,2.356,756,1.434,763,3.13,764,2.059,765,1.313,1015,2.059,1025,2.445,1026,2.542,1027,4.155,1028,2.258,1030,2.891,1031,2.216,1032,1.726,1033,2.445,1034,4.01,1035,3.258,1036,2.444,1037,2.445,1038,2.493,1039,2.4,1040,2.4,1041,2.445,1042,2.445,1043,2.445,1044,2.356,1045,1.726,1046,2.445,1047,2.445,1048,2.445,1049,2.161,1050,2.493,1051,2.493,1052,2.274,1053,2.4,1054,2.445,1055,2.445,1056,2.4,1057,3.271,1058,2.676,1059,2.445,3244,5.441]],["title/classes/OpenSnackbar.html",[44,0.06,1041,2.252]],["body/classes/OpenSnackbar.html",[2,0.036,3,0.036,4,0.031,8,0.211,9,0.392,10,0.751,20,0.64,21,0.405,22,0.005,25,0.406,29,0.062,44,0.124,48,0.367,64,0.941,130,0.003,131,0.003,203,2.35,207,1.205,209,1.052,235,0.55,268,1.841,269,2.183,272,3.308,308,0.93,310,1.513,312,1.297,316,2.022,331,0.788,350,1.513,382,1.474,501,1.189,556,3.11,558,3.359,603,1.347,629,1.862,734,1.118,755,2.271,756,1.382,763,3.1,764,1.985,765,1.265,1015,1.985,1025,2.357,1026,2.45,1027,4.116,1028,2.23,1030,3.582,1031,2.162,1032,1.664,1033,2.357,1034,3.973,1035,3.198,1036,2.418,1037,2.357,1038,2.403,1039,2.313,1040,2.313,1041,3.191,1042,2.357,1043,2.357,1044,2.271,1045,1.664,1046,2.357,1047,2.357,1048,2.357,1049,2.083,1050,2.403,1051,2.403,1052,2.192,1053,2.313,1054,2.357,1055,2.357,1056,2.313,1057,2.357,1058,2.316,1059,2.357,1062,4.092,3245,7.102,3246,5.245,3247,5.245]],["title/pipes/OrderByPipe.html",[2943,3.708,3248,4.161]],["body/pipes/OrderByPipe.html",[2,0.05,3,0.05,4,0.043,10,1.032,21,0.332,22,0.005,25,0.364,29,0.043,30,2.578,44,0.086,48,0.654,58,2.252,98,3.009,130,0.004,131,0.004,141,3.768,162,4.881,168,6.448,202,2.562,207,1.005,209,1.745,211,2.488,215,1.462,232,3.097,234,6.92,245,3.923,258,3.505,260,1.972,1780,5.328,2943,6.439,2947,7.226,3248,7.226,3249,7.2,3250,8.702,3251,7.2,3252,8.702,3253,8.702,3254,8.702,3255,8.702,3256,7.2,3257,5.98,3258,8.702,3259,7.2,3260,9.352,3261,7.2,3262,9.352,3263,7.2]],["title/interfaces/Organ.html",[0,0.41,108,1.136]],["body/interfaces/Organ.html",[0,0.8,1,1.051,2,0.032,3,0.032,4,0.028,5,2.411,6,4.119,7,4.258,8,0.187,9,0.36,11,2.025,12,3.39,13,2.724,14,1.589,15,2.548,16,2.515,17,3.39,18,2.618,19,2.469,20,0.713,21,0.341,22,0.005,23,3.496,24,1.386,25,0.234,26,2.235,27,1.881,28,1.841,29,0.061,30,2.426,31,2.411,32,2.044,33,2.411,34,2.256,35,2.411,36,2.305,37,2.469,38,1.872,39,1.373,40,2.123,41,1.786,42,2.469,43,2.044,44,0.09,45,2.083,46,1.866,47,1.251,48,0.626,49,4.162,50,1.718,51,2.21,52,2.411,53,2.662,54,3.153,55,2.083,56,4.018,57,2.256,58,2.36,59,2.855,60,2.855,61,3.473,62,3.56,63,3.56,64,0.614,65,3.56,66,2.469,67,2.531,68,2.165,69,2.531,70,2.165,71,3.524,72,2.531,73,2.165,74,2.165,75,1.091,76,3.596,77,2.21,78,3.39,79,4.119,80,2.165,81,2.531,82,2.469,83,2.531,84,2.531,85,2.21,86,2.21,87,2.044,88,2.012,89,2.469,90,2.531,91,2.531,92,2.531,93,2.531,94,1.191,95,1.751,96,3.046,97,1.303,98,1.937,99,2.21,100,1.872,101,3.56,102,1.649,103,3.56,104,2.531,105,2.469,106,4.018,107,2.531,108,2.163,109,2.596,110,4.47,111,4.361,112,4.47,113,1.904,114,1.872,115,2.469,116,1.904,117,1.937,118,1.937,119,1.937,120,1.913,121,1.937,122,1.937,123,2.469,124,2.531,125,2.531,126,2.531,127,2.531,128,2.531,129,2.531,130,0.003,131,0.003]],["title/interfaces/OrganTableOnClose.html",[0,0.41,1347,2.024]],["body/interfaces/OrganTableOnClose.html",[0,0.853,1,1.003,2,0.03,3,0.043,4,0.026,8,0.178,9,0.348,11,1.587,13,1.346,14,1.329,15,2.283,16,2.067,18,2.687,20,0.717,21,0.306,22,0.005,24,1.531,26,1.869,27,2.313,29,0.062,39,1.869,41,1.211,46,1.627,47,1.213,48,0.635,50,1.662,75,1.041,88,1.365,94,1.136,95,1.281,97,2.067,109,1.403,120,1.122,130,0.003,131,0.003,146,1.423,174,1.551,175,1.528,176,1.528,177,1.528,178,1.528,183,1.345,235,0.661,260,2.014,261,1.151,295,2.212,331,0.941,466,1.623,620,1.757,629,1.587,660,2.506,703,1.757,721,2.504,724,1.705,731,2.117,734,0.911,739,1.973,740,1.641,756,1.166,960,1.623,962,1.506,1020,2.18,1088,1.243,1106,1.674,1107,3.388,1108,3.259,1109,3.312,1112,2.795,1113,3.443,1114,2.506,1185,1.729,1186,1.598,1245,1.729,1296,2.468,1330,1.817,1331,2.637,1332,2.592,1333,1.787,1334,1.729,1335,1.817,1336,1.817,1337,1.817,1338,1.817,1339,1.817,1340,1.817,1341,2.548,1342,1.787,1343,2.351,1344,1.817,1345,1.849,1346,1.817,1347,2.548,1348,2.375,1349,1.817,1350,1.849,1351,1.849,1352,1.849,1353,1.849,1354,1.849,1355,1.849,1356,1.849,1357,1.849,1358,1.849,1359,1.817,1360,1.817,1361,2.637,1362,2.637,1363,1.849,1364,1.443,1365,1.443,1366,1.443,1367,1.817,1368,1.787,1369,1.817,1370,2.592,1371,2.637,1372,2.637,1373,1.817,1374,1.849,1375,1.701,1376,1.849,1377,1.849,1378,1.849,1379,1.849,1380,1.849,1381,1.757,1382,3.021,1383,1.817,1384,1.849,1385,1.849,1386,1.757,1387,1.849,1388,1.849,1389,2.592,1390,1.849,1391,2.592,1392,1.787,1393,2.592,1394,1.849,1395,1.849,1396,1.787,1397,1.869,1398,1.817,1399,2.592,1400,1.849,1401,1.849,1402,1.849,1403,1.849,1404,1.849,1405,1.849,1406,1.849,1407,1.817,1408,1.757,1409,1.328,1410,1.849]],["title/interfaces/OrganTableSelect.html",[0,0.41,1342,2.024]],["body/interfaces/OrganTableSelect.html",[0,0.851,1,0.987,2,0.03,3,0.043,4,0.026,8,0.175,9,0.344,10,1.14,11,1.573,13,1.325,14,1.314,15,2.266,16,2.048,18,2.677,20,0.717,21,0.334,22,0.005,24,1.528,26,1.848,27,2.296,29,0.062,39,1.848,41,1.192,46,1.616,47,1.211,48,0.632,50,1.643,75,1.024,88,1.343,94,1.118,95,1.266,97,2.048,109,1.381,120,1.104,130,0.003,131,0.003,146,1.4,174,1.526,175,1.504,176,1.504,177,1.504,178,1.504,183,1.33,235,0.654,260,1.996,261,1.133,295,2.187,331,0.935,466,1.597,620,1.729,629,1.573,660,2.477,703,1.729,721,2.481,724,1.686,731,2.093,734,0.903,739,1.951,740,1.623,756,1.147,960,1.597,962,1.482,1020,2.168,1088,1.224,1106,1.648,1107,3.37,1108,3.239,1109,3.292,1112,2.78,1113,3.425,1114,2.477,1185,1.701,1186,1.573,1245,1.701,1296,2.446,1330,1.788,1331,2.607,1332,2.562,1333,1.758,1334,1.701,1335,1.788,1336,1.788,1337,1.788,1338,1.788,1339,1.788,1340,1.788,1341,2.519,1342,2.519,1343,2.337,1344,3.269,1345,3.326,1346,3.269,1347,1.758,1348,1.29,1349,1.788,1350,1.819,1351,1.819,1352,1.819,1353,1.819,1354,1.819,1355,1.819,1356,1.819,1357,1.819,1358,1.819,1359,1.788,1360,1.788,1361,2.607,1362,2.607,1363,1.819,1364,1.42,1365,1.42,1366,1.42,1367,1.788,1368,1.758,1369,1.788,1370,2.562,1371,2.607,1372,2.607,1373,1.788,1374,1.819,1375,1.674,1376,1.819,1377,1.819,1378,1.819,1379,1.819,1380,1.819,1381,1.729,1382,2.994,1383,1.788,1384,1.819,1385,1.819,1386,1.729,1387,1.819,1388,1.819,1389,2.562,1390,1.819,1391,2.562,1392,1.758,1393,2.562,1394,1.819,1395,1.819,1396,1.758,1397,1.848,1398,1.788,1399,2.562,1400,1.819,1401,1.819,1402,1.819,1403,1.819,1404,1.819,1405,1.819,1406,1.819,1407,1.788,1408,1.729,1409,1.307,1410,1.819]],["title/components/OrganTableSelectorComponent.html",[250,1.355,387,1.99]],["body/components/OrganTableSelectorComponent.html",[2,0.015,3,0.015,4,0.032,8,0.087,9,0.2,10,0.939,11,0.468,14,0.457,20,0.572,21,0.356,22,0.005,24,0.914,25,0.368,29,0.013,30,2.315,44,0.026,46,1.106,47,0.657,48,0.561,53,1.44,58,2.665,59,0.821,64,0.48,100,1.884,102,0.772,108,1.861,130,0.002,131,0.002,141,2.837,147,1.078,181,1.569,183,0.772,188,0.53,202,1.289,207,1.346,209,1.314,211,2.615,215,0.44,218,1.056,219,1.078,220,1.155,232,2.474,235,0.93,245,2.201,250,1.261,251,0.861,252,1.488,253,0.906,254,0.906,255,0.906,256,0.772,260,0.594,261,2.57,262,3.9,264,1.463,266,1.463,268,1.626,287,0.861,298,2.958,305,2.285,306,1.532,308,1.456,310,0.626,331,0.772,341,1.514,342,2.201,343,0.906,344,2.278,345,0.906,346,0.906,347,0.861,348,0.906,349,0.861,350,0.626,351,0.906,352,0.861,353,0.906,354,0.847,355,0.906,356,0.861,357,0.772,358,0.906,359,0.861,360,0.906,361,0.861,362,0.906,363,0.861,364,1.514,365,0.861,366,0.906,367,0.861,368,0.906,369,0.847,370,0.906,371,0.834,372,0.906,373,0.861,374,0.906,375,0.861,376,0.906,377,0.861,378,0.906,379,0.876,380,0.906,381,0.861,382,0.61,383,0.906,384,0.861,385,1.763,386,0.906,387,2.165,388,3.941,389,0.906,390,0.861,391,0.906,392,0.876,393,0.906,394,0.861,395,0.906,396,0.876,397,0.906,398,0.861,399,0.906,400,0.861,401,0.808,402,0.906,403,0.861,404,0.847,405,0.906,406,0.891,407,0.906,408,0.861,409,0.906,410,0.861,411,0.861,412,0.876,413,0.821,414,0.906,415,0.906,431,4.623,450,1.532,459,8.039,466,0.796,556,0.697,558,0.808,569,2.331,588,2.547,695,2.086,696,1.078,698,1.801,721,2.732,734,0.812,738,1.249,739,1.459,740,1.418,765,0.523,969,0.939,1020,2.071,1028,1.499,1075,3.309,1089,3.008,1093,3.396,1112,1.149,1138,1.128,1139,1.128,1141,1.285,1171,3.046,1190,2.365,1192,1.416,1234,5.192,1242,4.252,1253,2.976,1254,1.285,1256,2.285,1262,2.365,1267,3.437,1268,3.437,1271,4.174,1272,3.437,1273,4,1274,2.849,1275,2.146,1276,4.82,1284,1.978,1288,2.71,1289,2.212,1293,2.456,1295,3.558,1296,2.333,1297,1.324,1298,1.324,1299,3.046,1300,3.695,1301,3.163,1305,3.59,1306,2.77,1311,2.614,1312,3.328,1313,1.947,1314,2.086,1315,1.947,1316,3.252,1342,2.448,1343,2.534,1344,2.691,1346,1.916,1347,1.884,1348,1.941,1375,3.448,1381,1.853,1464,3.252,1498,0.876,1529,1.184,1783,6.797,1836,1.532,1839,3.558,1847,3.452,1851,2.764,1853,1.416,1854,1.605,1879,2.691,1890,1.628,1933,5.602,1939,1.692,1993,2.56,2003,1.368,2018,1.605,2038,1.692,2039,4.713,2121,1.416,2274,1.47,2320,4.728,2471,4.485,2472,1.801,2484,1.532,2498,5.392,2499,2.56,2501,1.605,2572,1.947,2573,1.947,2652,1.947,2658,1.947,2665,1.801,2672,1.947,2691,2.681,2692,1.801,2713,5.033,2737,1.801,2933,4.893,3015,3.252,3018,1.947,3019,1.692,3130,3.252,3264,8.691,3265,2.169,3266,4.665,3267,3.623,3268,4.665,3269,6.061,3270,4.665,3271,4.665,3272,4.665,3273,4.665,3274,4.665,3275,4.665,3276,4.665,3277,5.45,3278,3.623,3279,3.623,3280,3.623,3281,5.45,3282,5.45,3283,3.623,3284,3.623,3285,4.665,3286,6.061,3287,3.623,3288,2.169,3289,3.623,3290,2.169,3291,3.252,3292,3.623,3293,2.169,3294,3.623,3295,2.169,3296,2.169,3297,2.169,3298,3.623,3299,2.169,3300,3.623,3301,2.169,3302,2.169,3303,2.169,3304,2.169,3305,6.061,3306,2.169,3307,2.169,3308,2.169,3309,2.169,3310,2.169,3311,5.45,3312,5.45,3313,6.061,3314,5.45,3315,5.45,3316,2.169,3317,2.169,3318,5.45,3319,2.169,3320,2.169,3321,5.45,3322,2.169,3323,3.252,3324,3.623,3325,3.623,3326,2.169,3327,2.169,3328,2.169,3329,2.169,3330,2.169,3331,2.169,3332,2.169,3333,2.169,3334,2.169,3335,1.801,3336,2.169,3337,2.169,3338,2.169,3339,2.169,3340,3.623,3341,3.623,3342,4.665,3343,2.169,3344,2.169,3345,2.169,3346,2.169,3347,5.45,3348,4.665,3349,2.169,3350,3.623,3351,3.623,3352,2.169,3353,4.665,3354,3.623,3355,2.169,3356,3.623,3357,4.665,3358,2.169,3359,5.45,3360,2.169,3361,3.623,3362,3.623,3363,2.169,3364,2.169,3365,2.169,3366,2.169,3367,2.169,3368,2.169,3369,2.169,3370,2.169,3371,2.169,3372,2.169,3373,2.169,3374,2.169,3375,2.169,3376,2.169,3377,2.169,3378,3.252,3379,3.623,3380,2.169,3381,2.169,3382,2.169,3383,2.169,3384,6.551,3385,3.623,3386,3.623,3387,3.623,3388,2.169,3389,3.623,3390,2.169,3391,3.623,3392,2.169,3393,2.169,3394,4.665,3395,3.623,3396,2.169,3397,3.623,3398,3.623,3399,3.623,3400,2.169,3401,2.169,3402,2.169,3403,2.169,3404,2.169,3405,2.169,3406,2.169,3407,2.169,3408,2.169,3409,2.169,3410,2.169,3411,6.551,3412,5.881,3413,3.623,3414,5.45,3415,5.45,3416,3.623,3417,3.623,3418,3.623,3419,3.623,3420,3.008,3421,2.169,3422,3.623,3423,2.169,3424,1.947,3425,2.169,3426,4.665,3427,1.947,3428,4.665,3429,2.169,3430,2.169,3431,3.252,3432,4.665,3433,2.169,3434,2.169,3435,2.169,3436,2.169,3437,2.169,3438,1.947,3439,2.169]],["title/modules/OrganTableSelectorModule.html",[184,1.108,428,3.708]],["body/modules/OrganTableSelectorModule.html",[2,0.045,3,0.045,4,0.039,22,0.005,25,0.533,29,0.039,44,0.079,108,1.497,130,0.004,131,0.004,184,1.461,186,2.35,187,2.499,188,1.613,189,3.406,190,2.499,191,2.423,192,3.353,198,3.123,199,2.46,200,2.35,214,3.027,215,1.341,243,2.46,278,3.214,387,4.138,388,3.406,428,7.43,459,5.484,558,2.46,588,3.606,1136,3.7,1419,3.278,1420,2.581,1424,4.103,1425,5.387,1426,4.312,1427,5.876,1428,5.676,1432,4.205,1433,3.085,1694,5.387,1695,4.312,1696,7.408,1697,5.929,1864,6.437,1865,4.887,2280,5.83,2281,4.477,2442,4.887,2479,6.437,3019,5.152,3204,6.437,3205,5.152,3235,7.408,3236,5.929,3264,5.929,3335,5.484,3440,5.929,3441,5.929,3442,5.929,3443,6.604,3444,6.604,3445,7.408,3446,7.408]],["title/components/PlaygroundComponent.html",[250,1.355,390,1.99]],["body/components/PlaygroundComponent.html",[2,0.019,3,0.019,4,0.026,8,0.224,9,0.246,10,1.057,11,0.603,20,0.532,21,0.363,22,0.005,25,0.438,29,0.017,30,2.052,44,0.033,47,0.89,48,0.563,53,0.862,58,2.714,59,1.685,60,1.685,64,0.59,95,1.498,100,1.128,102,1.585,108,0.633,130,0.002,131,0.002,141,2.405,167,1.564,188,0.682,202,1.585,207,1.309,209,1.48,211,2.392,215,0.567,218,1.359,219,2.762,220,1.487,230,2.432,232,2.256,235,0.582,236,1.419,245,3.348,247,2.495,250,1.502,251,1.109,252,1.829,253,1.167,254,1.167,255,1.167,256,0.994,258,2.167,260,0.765,261,2.626,262,4.01,264,1.799,266,1.799,268,1.462,269,1.535,287,1.109,298,2.171,308,1.228,310,0.806,318,2.399,323,2.432,331,0.943,341,1.861,342,1.799,343,1.167,344,2.649,345,1.167,346,1.167,347,1.109,348,1.167,349,1.109,350,0.806,351,1.167,352,1.109,353,1.167,354,1.091,355,1.167,356,1.109,357,0.994,358,1.167,359,1.109,360,1.167,361,1.109,362,1.167,363,1.109,364,1.861,365,1.109,366,1.167,367,1.109,368,1.167,369,1.091,370,1.167,371,1.074,372,1.167,373,1.109,374,1.167,375,1.109,376,1.167,377,1.109,378,1.167,379,1.128,380,1.167,381,1.109,382,0.785,383,1.167,384,1.109,385,0.708,386,1.167,387,1.109,388,3.394,389,1.167,390,2.518,391,1.167,392,1.128,393,1.167,394,1.109,395,1.167,396,1.128,397,1.167,398,1.109,399,1.167,400,1.109,401,1.04,402,1.167,403,1.109,404,1.091,405,1.167,406,1.147,407,1.167,408,1.109,409,1.167,410,1.109,411,1.109,412,1.128,413,1.057,414,1.167,415,1.167,442,1.607,470,2.178,471,2.178,569,2.256,694,6.079,702,2.066,717,1.973,718,5.412,721,0.951,731,1.494,734,1.111,740,1.159,742,2.123,765,0.674,773,1.823,945,3.147,969,2.999,1028,1.374,1075,3.781,1078,3.698,1084,3.139,1093,3.88,1095,4.521,1104,3.698,1106,1.685,1107,2.136,1108,2.136,1109,2.171,1112,2.946,1135,2.319,1136,1.564,1137,1.452,1138,1.452,1139,1.452,1141,1.654,1190,1.823,1192,2.907,1195,2.319,1196,2.319,1197,2.319,1198,2.319,1199,2.066,1200,2.319,1201,2.319,1204,3.998,1205,3.698,1215,1.231,1234,1.654,1236,2.319,1253,4.03,1267,4.654,1268,4.654,1271,1.452,1274,2.719,1276,3.198,1281,1.452,1284,3.033,1288,1.388,1289,1.705,1296,0.937,1297,2.719,1305,1.654,1306,1.419,1314,3.198,1329,2.507,1408,2.518,1499,2.507,1529,3.033,1544,3.998,1559,2.319,1575,1.973,1660,3.474,1720,3.198,1742,2.178,1851,1.654,1865,2.066,1872,1.231,1879,1.829,1887,2.001,1891,1.231,1984,2.178,2003,1.761,2039,1.893,2221,7.929,2267,1.973,2274,1.893,2291,4.111,2292,1.893,2306,3.295,2330,2.066,2452,4.893,2471,2.066,2563,4.334,2679,4.987,2684,2.507,2688,3.998,2713,3.698,2741,2.507,2756,2.507,3074,3.295,3075,4.479,3291,4.987,3431,7.629,3447,2.792,3448,5.555,3449,4.453,3450,5.555,3451,5.555,3452,5.555,3453,5.555,3454,4.453,3455,4.453,3456,4.453,3457,2.792,3458,2.792,3459,4.453,3460,4.453,3461,2.792,3462,4.453,3463,2.792,3464,4.453,3465,2.792,3466,2.792,3467,2.792,3468,7.744,3469,4.453,3470,6.339,3471,2.792,3472,4.453,3473,4.453,3474,2.792,3475,4.453,3476,2.792,3477,4.453,3478,2.792,3479,2.792,3480,5.555,3481,4.453,3482,3.998,3483,4.987,3484,2.792,3485,4.453,3486,4.453,3487,2.792,3488,2.792,3489,4.453,3490,2.792,3491,2.792,3492,2.792,3493,2.792,3494,4.453,3495,4.453,3496,2.792,3497,4.453,3498,5.555,3499,4.453,3500,2.792,3501,2.792,3502,2.792,3503,2.792,3504,5.555,3505,2.792,3506,4.453,3507,2.792,3508,4.453,3509,2.792,3510,4.453,3511,4.453,3512,9.193,3513,2.792,3514,4.453,3515,6.339,3516,2.792,3517,2.792,3518,2.792,3519,2.792,3520,2.792,3521,2.792,3522,2.792,3523,2.792,3524,2.507,3525,2.792,3526,2.792,3527,4.453,3528,2.792,3529,2.792,3530,2.792,3531,4.453,3532,6.925,3533,2.792,3534,2.792,3535,2.792,3536,2.792,3537,2.792,3538,2.792,3539,2.792,3540,2.792,3541,2.792,3542,2.792,3543,2.792,3544,2.792,3545,2.792,3546,2.792,3547,2.792,3548,2.792,3549,2.792,3550,2.792,3551,2.792,3552,4.453,3553,5.555,3554,2.792,3555,2.792,3556,2.792,3557,2.792,3558,2.792,3559,4.453,3560,2.792,3561,2.792,3562,2.792,3563,4.453,3564,2.792,3565,2.792,3566,2.792,3567,2.792,3568,2.792,3569,2.792,3570,4.453,3571,2.507,3572,2.792,3573,2.792,3574,2.507,3575,4.453,3576,2.792,3577,2.792,3578,2.792,3579,2.792,3580,2.792,3581,4.453,3582,2.792,3583,2.792,3584,2.792]],["title/modules/PlaygroundModule.html",[184,1.108,3585,3.708]],["body/modules/PlaygroundModule.html",[2,0.046,3,0.046,4,0.04,22,0.005,25,0.525,29,0.04,44,0.08,130,0.004,131,0.004,184,1.491,186,2.398,187,2.55,188,1.646,189,3.437,190,2.55,191,2.472,192,3.384,198,3.162,199,2.511,200,2.398,214,3.065,215,1.368,243,3.113,390,4.149,424,6.494,453,6.05,454,4.762,455,5.258,588,3.68,1136,3.776,1419,3.319,1420,2.633,1425,5.456,1426,4.4,1427,5.456,1428,5.27,1432,3.904,1433,3.148,1864,6.519,1865,4.987,3204,6.519,3205,5.258,3585,7.759,3586,6.05,3587,6.05,3588,6.05,3589,6.05,3590,7.028,3591,7.361,3592,6.739,3593,6.739,3594,6.05,3595,6.739]],["title/interfaces/PlaygroundSheetOptions.html",[0,0.41,1382,2.058]],["body/interfaces/PlaygroundSheetOptions.html",[0,0.853,1,1.003,2,0.03,3,0.043,4,0.026,8,0.178,9,0.348,11,1.587,13,1.346,14,1.329,15,2.283,16,2.067,18,2.687,20,0.718,21,0.306,22,0.005,24,1.499,26,1.869,27,2.313,29,0.062,39,1.869,41,1.211,46,1.627,47,1.213,48,0.635,50,1.662,75,1.041,88,1.365,94,1.136,95,1.281,97,2.067,109,1.403,120,1.122,130,0.003,131,0.003,146,1.423,174,1.551,175,1.528,176,1.528,177,1.528,178,1.528,183,1.345,235,0.661,260,2.014,261,1.151,295,2.212,331,0.941,466,1.623,620,1.757,629,1.587,660,2.506,703,1.757,721,2.504,724,1.705,731,2.117,734,1.092,739,1.973,740,1.641,756,1.166,960,1.623,962,1.506,1020,2.18,1088,1.243,1106,1.674,1107,3.388,1108,3.259,1109,3.312,1112,2.993,1113,3.443,1114,2.506,1185,1.729,1186,1.598,1245,1.729,1296,2.468,1330,1.817,1331,2.637,1332,2.592,1333,1.787,1334,1.729,1335,1.817,1336,1.817,1337,1.817,1338,1.817,1339,1.817,1340,1.817,1341,2.548,1342,1.787,1343,1.75,1344,1.817,1345,1.849,1346,1.817,1347,1.787,1348,1.311,1349,1.817,1350,1.849,1351,1.849,1352,1.849,1353,1.849,1354,1.849,1355,1.849,1356,1.849,1357,1.849,1358,1.849,1359,1.817,1360,1.817,1361,2.637,1362,2.637,1363,1.849,1364,1.443,1365,1.443,1366,1.443,1367,1.817,1368,1.787,1369,1.817,1370,2.592,1371,2.637,1372,2.637,1373,1.817,1374,1.849,1375,1.701,1376,1.849,1377,1.849,1378,1.849,1379,1.849,1380,1.849,1381,1.757,1382,3.293,1383,1.817,1384,1.849,1385,1.849,1386,1.757,1387,1.849,1388,1.849,1389,2.592,1390,1.849,1391,2.592,1392,1.787,1393,2.592,1394,1.849,1395,1.849,1396,1.787,1397,1.869,1398,1.817,1399,2.592,1400,1.849,1401,1.849,1402,1.849,1403,1.849,1404,1.849,1405,1.849,1406,1.849,1407,1.817,1408,1.757,1409,1.328,1410,1.849]],["title/interfaces/Reference.html",[0,0.41,27,1.446]],["body/interfaces/Reference.html",[0,0.852,1,0.991,2,0.03,3,0.043,4,0.026,8,0.176,9,0.345,10,1.258,11,1.577,13,1.331,14,1.318,15,2.574,16,2.053,18,2.68,20,0.718,21,0.322,22,0.005,24,1.496,26,1.854,27,2.435,29,0.062,39,1.854,41,1.197,46,1.835,47,1.211,48,0.632,50,1.649,75,1.029,88,1.349,94,1.123,95,1.27,97,2.053,109,1.387,120,1.109,130,0.003,131,0.003,146,1.406,174,1.533,175,1.511,176,1.511,177,1.511,178,1.511,183,1.334,235,0.656,260,2.001,261,1.138,295,2.194,331,0.936,466,1.604,620,1.737,629,1.895,660,2.485,703,1.737,721,2.487,724,1.691,731,2.1,734,0.906,739,1.957,740,1.628,756,1.152,960,1.604,962,1.489,1020,2.171,1088,1.229,1106,1.655,1107,3.375,1108,3.245,1109,3.297,1112,2.784,1113,3.43,1114,2.485,1185,1.709,1186,1.58,1245,1.709,1296,2.452,1330,1.796,1331,2.615,1332,2.57,1333,1.766,1334,1.709,1335,1.796,1336,1.796,1337,1.796,1338,1.796,1339,1.796,1340,1.796,1341,2.527,1342,1.766,1343,1.736,1344,1.796,1345,1.827,1346,1.796,1347,1.766,1348,1.296,1349,1.796,1350,1.827,1351,1.827,1352,1.827,1353,1.827,1354,1.827,1355,1.827,1356,1.827,1357,1.827,1358,1.827,1359,1.796,1360,1.796,1361,2.615,1362,2.615,1363,1.827,1364,1.426,1365,1.426,1366,1.426,1367,1.796,1368,1.766,1369,1.796,1370,2.57,1371,2.615,1372,2.615,1373,1.796,1374,1.827,1375,1.681,1376,1.827,1377,1.827,1378,1.827,1379,1.827,1380,1.827,1381,1.737,1382,3.001,1383,1.796,1384,1.827,1385,1.827,1386,1.737,1387,1.827,1388,1.827,1389,2.57,1390,1.827,1391,2.57,1392,1.766,1393,2.57,1394,1.827,1395,1.827,1396,1.766,1397,1.854,1398,1.796,1399,2.57,1400,1.827,1401,1.827,1402,1.827,1403,1.827,1404,1.827,1405,1.827,1406,1.827,1407,1.796,1408,1.737,1409,1.313,1410,1.827]],["title/classes/RefreshData.html",[44,0.06,1874,2.295]],["body/classes/RefreshData.html",[2,0.048,3,0.035,4,0.03,8,0.204,9,0.383,20,0.634,21,0.4,22,0.005,24,0.763,25,0.399,29,0.062,44,0.124,47,0.611,64,0.919,108,1.148,130,0.003,131,0.003,183,1.478,203,2.343,207,0.707,235,0.53,268,1.822,269,2.176,308,0.898,312,1.955,316,1.974,318,2.992,331,1.119,385,1.284,501,1.148,603,2.528,629,1.706,724,1.874,734,1.291,765,1.221,1004,2.079,1020,1.252,1028,1.715,1031,2.11,1032,1.606,1036,2.665,1084,2.153,1088,2.39,1178,2.233,1215,2.233,1343,1.923,1348,2.054,1409,2.082,1498,2.045,1556,2.275,1557,2.275,1558,2.233,1585,2.079,1596,2.319,1866,2.319,1867,2.365,1871,2.365,1872,2.233,1873,4.422,1874,3.176,1875,3.239,1876,2.275,1877,2.365,1878,2.319,1879,2.848,1880,2.365,1881,2.319,1882,2.319,1883,2.319,1884,2.319,1885,3.239,1886,2.319,1887,2.275,1888,2.319,1889,2.319,1890,2.275,1891,2.233,1892,2.319,1893,2.275,1894,2.275,1895,2.319,1896,2.319,1897,2.365,1898,2.319,1899,2.365,1900,2.365,1901,2.365,3596,5.062]],["title/interfaces/Report.html",[0,0.41,312,1.239]],["body/interfaces/Report.html",[0,0.814,1,1.526,2,0.046,3,0.046,4,0.04,8,0.271,9,0.461,14,1.417,16,2.347,18,1.916,20,0.674,21,0.391,22,0.005,25,0.421,28,2.673,29,0.059,47,1.145,48,0.584,94,2.59,95,1.366,98,4.213,130,0.004,131,0.004,139,3.874,146,3.138,235,0.705,312,2.245,331,0.747,734,1.125,823,6.615,995,4.562,996,4.755,997,6.706,998,6.706,999,6.706,1000,6.894,1001,6.706,1002,6.835,1003,6.706,1004,2.765,1005,4.562,1006,4.562]],["title/interfaces/ReportData.html",[0,0.41,1004,2.058]],["body/interfaces/ReportData.html",[0,0.824,1,1.609,2,0.049,3,0.049,4,0.042,8,0.286,9,0.476,14,1.495,16,2.424,18,2.021,20,0.681,21,0.354,22,0.005,25,0.435,28,2.819,29,0.06,47,1.166,48,0.603,94,2.387,95,1.441,98,3.884,130,0.004,131,0.004,139,4.086,146,2.774,235,0.744,312,2.391,331,1.073,734,1.275,823,5.848,995,4.811,996,5.015,997,5.015,998,5.015,999,5.015,1000,6.095,1001,5.015,1002,6.3,1003,5.015,1004,3.543,1005,4.811,1006,4.811]],["title/classes/ReportLog.html",[44,0.06,749,3.06]],["body/classes/ReportLog.html",[2,0.046,3,0.046,4,0.039,8,0.267,9,0.456,10,1.291,20,0.702,21,0.401,22,0.005,29,0.054,44,0.107,48,0.463,64,1.194,130,0.004,131,0.004,203,2.175,207,1.383,209,1.328,235,0.866,268,2.086,269,2.02,308,1.466,312,2.229,501,1.501,734,0.821,738,3.812,749,5.047,1012,4.679,1013,5.499,1014,4.679,1015,2.506,1017,4.581,1018,6.998,1019,5.152,1020,2.402,1021,6.116,1022,5.166,1023,5.499,1024,5.499,3597,6.622,3598,8.265,3599,6.622,3600,6.622,3601,6.622,3602,6.622]],["title/modules/ReportModule.html",[184,1.108,3603,3.708]],["body/modules/ReportModule.html",[2,0.045,3,0.045,4,0.039,22,0.005,25,0.53,29,0.039,44,0.078,130,0.004,131,0.004,184,1.455,186,2.341,187,2.489,188,1.607,189,3.4,190,2.489,191,2.413,192,3.347,198,3.115,199,2.451,200,2.341,214,3.019,215,1.335,243,3.066,278,3.202,392,4.205,401,2.451,443,7.389,444,5.905,445,5.905,1416,6.235,1417,6.037,1419,3.269,1420,2.57,1422,5.374,1423,4.294,1424,4.093,1429,4.867,1430,4.459,1431,4.867,1432,3.845,1433,3.073,1694,5.374,1695,4.294,1864,6.421,1865,4.867,2943,7.317,2946,5.905,2947,5.462,2948,5.905,3335,5.462,3446,7.389,3603,7.736,3604,5.905,3605,5.905,3606,5.905,3607,6.578,3608,6.578,3609,6.578,3610,8.231,3611,6.578]],["title/classes/ReportMultiLog.html",[44,0.06,1022,3.909]],["body/classes/ReportMultiLog.html",[2,0.046,3,0.046,4,0.04,8,0.272,9,0.462,10,0.968,20,0.698,21,0.396,22,0.005,29,0.054,44,0.108,48,0.473,64,1.205,130,0.004,131,0.004,203,2.188,207,1.364,209,1.355,235,0.877,268,2.078,269,2.032,308,1.485,312,2.249,501,1.532,734,0.838,749,4.126,1012,4.775,1013,5.612,1014,4.775,1015,2.557,1017,4.623,1018,6.902,1019,5.178,1020,1.671,1021,5.001,1022,6.53,1023,6.951,1024,8.113,3612,6.758,3613,8.37,3614,6.758,3615,6.758,3616,6.758]],["title/interfaces/Response.html",[0,0.41,2150,3.708]],["body/interfaces/Response.html",[0,0.768,1,1.649,2,0.05,3,0.05,4,0.043,8,0.293,9,0.483,20,0.66,21,0.358,22,0.005,24,1.32,29,0.058,39,2.156,47,1.176,130,0.004,131,0.004,331,1.082,743,3.541,756,1.917,763,3.064,821,4.091,960,3.659,962,3.396,967,4.174,968,4.091,969,3.792,970,4.174,971,4.174,972,4.174,1030,2.89,1231,4.588,2148,5.675,2149,6.041,2150,6.479,2151,5.936,2152,6.186,2153,5.675]],["title/interfaces/ResponseData.html",[0,0.41,1359,2.058]],["body/interfaces/ResponseData.html",[0,0.852,1,0.989,2,0.03,3,0.043,4,0.026,8,0.176,9,0.345,10,0.895,11,1.575,13,1.327,14,1.315,15,2.268,16,2.05,18,2.678,20,0.717,21,0.334,22,0.005,24,1.514,26,1.85,27,2.298,29,0.062,39,1.85,41,1.194,46,1.617,47,1.211,48,0.632,50,1.645,75,1.026,88,1.346,94,1.12,95,1.268,97,2.05,109,1.383,120,1.106,130,0.003,131,0.003,146,1.403,174,1.529,175,1.507,176,1.507,177,1.507,178,1.507,183,1.331,235,0.654,260,1.998,261,1.135,295,2.189,331,1.025,466,1.6,620,1.732,629,1.575,660,2.481,703,1.732,721,2.87,724,1.688,731,2.096,734,0.904,739,1.954,740,1.625,756,1.149,960,1.6,962,1.485,1020,2.169,1088,1.226,1106,1.65,1107,3.372,1108,3.241,1109,3.294,1112,2.782,1113,3.427,1114,2.481,1185,1.704,1186,1.576,1245,3.112,1296,2.448,1330,1.791,1331,3.523,1332,2.565,1333,1.761,1334,1.704,1335,1.791,1336,1.791,1337,1.791,1338,1.791,1339,1.791,1340,1.791,1341,2.522,1342,1.761,1343,1.732,1344,1.791,1345,1.823,1346,1.791,1347,1.761,1348,1.292,1349,1.791,1350,1.823,1351,1.823,1352,1.823,1353,1.823,1354,1.823,1355,1.823,1356,1.823,1357,1.823,1358,1.823,1359,2.565,1360,3.272,1361,2.61,1362,2.61,1363,1.823,1364,1.422,1365,1.422,1366,1.422,1367,1.791,1368,1.761,1369,1.791,1370,2.565,1371,2.61,1372,2.61,1373,1.791,1374,1.823,1375,1.677,1376,1.823,1377,1.823,1378,1.823,1379,1.823,1380,1.823,1381,1.732,1382,2.997,1383,1.791,1384,1.823,1385,1.823,1386,1.732,1387,1.823,1388,1.823,1389,2.565,1390,1.823,1391,2.565,1392,1.761,1393,2.565,1394,1.823,1395,1.823,1396,1.761,1397,1.85,1398,1.791,1399,2.565,1400,1.823,1401,1.823,1402,1.823,1403,1.823,1404,1.823,1405,1.823,1406,1.823,1407,1.791,1408,1.732,1409,1.31,1410,1.823]],["title/modules/RootModule.html",[184,1.108,429,3.708]],["body/modules/RootModule.html",[2,0.039,3,0.039,4,0.034,22,0.005,25,0.531,29,0.034,44,0.068,130,0.003,131,0.003,184,1.255,186,2.019,187,2.147,188,1.385,189,3.169,190,2.147,191,2.081,192,3.12,198,2.832,199,2.113,200,2.019,214,2.745,215,1.151,243,2.788,279,4.71,280,4.197,350,1.637,394,4.05,404,2.924,429,7.911,734,0.703,1411,7.035,1419,2.972,1420,2.216,1492,4.71,1669,7.035,1676,6.717,1680,5.092,1827,4.71,1855,7.035,2049,6.718,2050,5.092,2123,4.197,2139,7.035,2145,6.214,2181,7.035,2285,4.008,2772,6.445,2777,4.197,2778,4.71,2822,7.035,2895,7.035,3019,4.425,3191,7.035,3206,5.092,3445,6.718,3585,7.035,3590,6.717,3594,5.092,3603,7.035,3617,5.092,3618,5.092,3619,5.672,3620,5.092,3621,5.672,3622,5.672,3623,5.672,3624,5.672,3625,5.672,3626,5.672,3627,5.672,3628,5.672,3629,5.672,3630,5.672,3631,5.672,3632,5.672,3633,7.483,3634,7.483,3635,5.672,3636,5.672,3637,5.672,3638,5.672]],["title/interfaces/Row.html",[0,0.41,721,1.706]],["body/interfaces/Row.html",[0,0.848,1,0.949,2,0.029,3,0.042,4,0.025,8,0.169,9,0.335,11,1.539,13,1.275,14,1.277,15,2.226,16,2.431,18,2.939,20,0.717,21,0.372,22,0.005,24,1.485,26,1.797,27,2.496,29,0.062,39,1.797,41,1.147,46,1.587,47,1.204,48,0.624,50,1.598,75,0.985,88,1.292,94,1.076,95,1.231,97,2.431,109,1.328,120,1.062,130,0.003,131,0.003,146,2.514,174,1.468,175,1.447,176,1.447,177,1.447,178,1.447,183,1.293,235,0.636,260,1.953,261,1.089,295,2.126,331,0.921,466,1.536,620,1.663,629,1.539,660,2.409,703,1.663,721,2.662,724,1.64,731,2.035,734,0.884,739,1.897,740,1.578,756,1.103,960,1.536,962,1.426,1020,2.14,1088,1.177,1106,1.585,1107,3.326,1108,3.19,1109,3.242,1112,2.744,1113,3.38,1114,2.409,1185,1.636,1186,1.513,1245,1.636,1296,2.393,1330,1.72,1331,2.535,1332,2.491,1333,1.691,1334,1.636,1335,1.72,1336,1.72,1337,1.72,1338,1.72,1339,1.72,1340,1.72,1341,2.45,1342,1.691,1343,1.682,1344,1.72,1345,1.75,1346,1.72,1347,1.691,1348,1.241,1349,1.72,1350,1.75,1351,3.267,1352,3.267,1353,3.267,1354,3.267,1355,3.267,1356,3.267,1357,3.267,1358,3.267,1359,1.72,1360,1.72,1361,2.535,1362,2.535,1363,1.75,1364,1.366,1365,1.366,1366,1.366,1367,1.72,1368,1.691,1369,1.72,1370,2.491,1371,2.535,1372,2.535,1373,1.72,1374,1.75,1375,1.61,1376,1.75,1377,1.75,1378,1.75,1379,1.75,1380,1.75,1381,1.663,1382,2.929,1383,1.72,1384,1.75,1385,1.75,1386,1.663,1387,1.75,1388,1.75,1389,2.491,1390,1.75,1391,2.491,1392,1.691,1393,2.491,1394,1.75,1395,1.75,1396,1.691,1397,1.797,1398,1.72,1399,2.491,1400,1.75,1401,1.75,1402,1.75,1403,1.75,1404,1.75,1405,1.75,1406,1.75,1407,1.72,1408,1.663,1409,1.258,1410,1.75]],["title/classes/Scales.html",[44,0.06,3639,4.161]],["body/classes/Scales.html",[2,0.044,3,0.044,4,0.038,8,0.255,9,0.443,11,2.173,21,0.336,22,0.005,25,0.32,29,0.038,32,3.545,34,3.083,36,3.149,44,0.075,48,0.562,54,3.881,64,1.17,75,1.49,130,0.004,131,0.004,188,2.392,202,2.86,203,1.977,207,1.338,211,3.05,232,3.142,256,3.41,310,2.319,331,0.892,501,1.436,531,5.501,547,3.967,568,2.793,569,2.254,588,4.388,628,5.679,632,7.244,634,6.674,730,7.244,1017,4.086,1171,6.062,1231,5.068,1735,7.711,2607,7.215,3003,5.686,3155,7.215,3639,7.959,3640,6.333,3641,9.286,3642,9.286,3643,8.037,3644,10.163,3645,6.333,3646,6.333,3647,9.286,3648,8.037,3649,8.037,3650,7.215,3651,8.037,3652,6.333,3653,6.333,3654,6.333,3655,6.333,3656,6.333,3657,8.037,3658,8.037]],["title/modules/SearchModule.html",[184,1.108,3196,3.708]],["body/modules/SearchModule.html",[2,0.047,3,0.047,4,0.041,22,0.005,25,0.53,29,0.041,44,0.081,130,0.004,131,0.004,184,1.509,186,2.428,187,2.582,188,1.667,189,3.456,190,2.582,191,2.503,192,3.402,198,3.186,199,2.542,200,2.428,214,3.089,215,1.385,218,3.321,243,2.542,278,3.321,396,4.225,558,2.542,588,3.725,1058,2.225,1136,3.823,1234,4.042,1276,3.928,1419,3.345,1420,2.666,1424,4.187,1425,5.497,1426,4.455,1427,5.497,1428,5.31,1432,3.934,1433,3.934,1694,5.497,1695,4.455,1862,7.559,1863,6.125,3196,7.482,3204,6.569,3205,5.323,3659,6.125,3660,6.125,3661,6.125,3662,6.823,3663,6.823,3664,8.42,3665,8.42,3666,6.823,3667,8.42]],["title/interfaces/SearchStructure.html",[0,0.41,113,2.058]],["body/interfaces/SearchStructure.html",[0,0.8,1,1.051,2,0.032,3,0.032,4,0.028,5,2.411,6,4.119,7,4.258,8,0.187,9,0.36,11,2.025,12,3.39,13,2.724,14,1.589,15,2.548,16,2.515,17,3.39,18,2.618,19,2.469,20,0.713,21,0.341,22,0.005,23,3.496,24,1.386,25,0.234,26,2.235,27,1.881,28,1.841,29,0.061,30,2.426,31,2.411,32,2.044,33,2.411,34,2.256,35,2.411,36,2.305,37,2.469,38,1.872,39,1.373,40,2.123,41,1.786,42,2.469,43,2.044,44,0.09,45,2.083,46,1.962,47,1.266,48,0.667,49,4.162,50,1.718,51,2.21,52,2.411,53,2.662,54,3.74,55,2.083,56,4.018,57,2.256,58,2.36,59,3.386,60,3.386,61,3.473,62,3.56,63,3.56,64,0.614,65,3.56,66,2.469,67,2.531,68,2.165,69,2.531,70,2.165,71,3.524,72,2.531,73,2.165,74,2.165,75,1.091,76,3.596,77,2.21,78,3.39,79,4.119,80,2.165,81,2.531,82,2.469,83,2.531,84,2.531,85,2.21,86,2.21,87,2.044,88,2.012,89,2.469,90,2.531,91,2.531,92,2.531,93,2.531,94,1.191,95,1.751,96,3.046,97,1.303,98,1.937,99,2.21,100,1.872,101,3.56,102,1.649,103,3.56,104,2.531,105,2.469,106,4.018,107,2.531,108,1.71,109,1.47,110,2.531,111,2.469,112,2.531,113,2.679,114,1.872,115,2.469,116,1.904,117,1.937,118,1.937,119,1.937,120,1.913,121,1.937,122,1.937,123,2.469,124,2.531,125,2.531,126,2.531,127,2.531,128,2.531,129,2.531,130,0.003,131,0.003]],["title/interfaces/SelectedOrganBeforeFilter.html",[0,0.41,1409,1.505]],["body/interfaces/SelectedOrganBeforeFilter.html",[0,0.851,1,0.984,2,0.03,3,0.043,4,0.026,8,0.175,9,0.343,10,1.322,11,1.57,13,1.32,14,1.31,15,2.263,16,2.461,18,2.675,20,0.717,21,0.334,22,0.005,24,1.513,26,1.843,27,2.293,29,0.062,39,1.843,41,1.188,46,1.613,47,1.21,48,0.631,50,1.639,75,1.021,88,1.339,94,1.114,95,1.263,97,2.044,109,1.376,120,1.1,130,0.003,131,0.003,146,1.395,174,1.521,175,1.499,176,1.499,177,1.499,178,1.499,183,1.326,235,0.652,260,1.992,261,2.067,295,2.181,331,0.934,466,1.591,620,1.723,629,1.57,660,2.471,703,1.723,721,2.477,724,1.682,731,2.088,734,0.902,739,1.946,740,1.618,756,1.143,960,1.591,962,1.477,1020,2.323,1088,1.219,1106,1.642,1107,3.366,1108,3.235,1109,3.287,1112,2.777,1113,3.421,1114,2.471,1185,1.695,1186,1.567,1245,1.695,1296,2.441,1330,1.782,1331,2.6,1332,2.556,1333,1.752,1334,1.695,1335,1.782,1336,1.782,1337,1.782,1338,1.782,1339,1.782,1340,1.782,1341,2.513,1342,1.752,1343,1.726,1344,1.782,1345,1.813,1346,1.782,1347,1.752,1348,1.285,1349,1.782,1350,1.813,1351,1.813,1352,1.813,1353,1.813,1354,1.813,1355,1.813,1356,1.813,1357,1.813,1358,1.813,1359,1.782,1360,1.782,1361,2.6,1362,2.6,1363,1.813,1364,1.415,1365,1.415,1366,1.415,1367,1.782,1368,1.752,1369,1.782,1370,2.556,1371,2.6,1372,2.6,1373,1.782,1374,1.813,1375,1.668,1376,1.813,1377,1.813,1378,1.813,1379,1.813,1380,1.813,1381,1.723,1382,2.988,1383,1.782,1384,1.813,1385,1.813,1386,1.723,1387,1.813,1388,1.813,1389,2.556,1390,1.813,1391,2.556,1392,1.752,1393,2.556,1394,1.813,1395,1.813,1396,1.752,1397,1.843,1398,1.782,1399,2.556,1400,1.813,1401,1.813,1402,1.813,1403,1.813,1404,1.813,1405,1.813,1406,1.813,1407,1.782,1408,1.723,1409,1.868,1410,3.321]],["title/interfaces/Sheet.html",[0,0.41,734,0.621]],["body/interfaces/Sheet.html",[0,0.849,1,0.953,2,0.029,3,0.042,4,0.025,8,0.169,9,0.335,10,1.356,11,1.542,13,1.279,14,1.28,15,2.23,16,2.008,18,2.654,20,0.718,21,0.365,22,0.005,24,1.486,26,1.801,27,2.259,29,0.062,39,1.801,41,1.151,46,1.589,47,1.204,48,0.662,50,1.602,75,0.989,88,1.296,94,1.079,95,1.234,97,2.008,109,1.333,120,1.066,130,0.003,131,0.003,146,1.351,174,1.473,175,1.452,176,1.452,177,1.452,178,1.452,183,1.771,235,0.637,260,1.956,261,1.093,295,2.132,331,1.015,466,1.541,620,1.669,629,1.542,660,2.415,703,1.669,721,2.432,724,2.117,731,2.04,734,0.97,739,1.902,740,1.582,756,1.107,960,1.541,962,1.431,1020,2.142,1088,1.181,1106,1.59,1107,3.584,1108,3.517,1109,3.574,1112,2.956,1113,3.745,1114,2.415,1185,1.642,1186,1.518,1245,1.642,1296,2.906,1330,1.726,1331,2.541,1332,2.497,1333,1.697,1334,1.642,1335,1.726,1336,1.726,1337,1.726,1338,1.726,1339,1.726,1340,1.726,1341,2.456,1342,1.697,1343,1.687,1344,1.726,1345,1.756,1346,1.726,1347,1.697,1348,1.245,1349,1.726,1350,1.756,1351,1.756,1352,1.756,1353,1.756,1354,1.756,1355,1.756,1356,1.756,1357,1.756,1358,1.756,1359,1.726,1360,1.726,1361,2.541,1362,2.541,1363,1.756,1364,1.37,1365,1.37,1366,1.37,1367,1.726,1368,1.697,1369,1.726,1370,2.497,1371,2.541,1372,2.541,1373,1.726,1374,1.756,1375,1.616,1376,1.756,1377,1.756,1378,1.756,1379,1.756,1380,1.756,1381,1.669,1382,2.935,1383,1.726,1384,1.756,1385,1.756,1386,1.669,1387,1.756,1388,1.756,1389,2.497,1390,1.756,1391,2.497,1392,1.697,1393,2.497,1394,1.756,1395,1.756,1396,1.697,1397,1.801,1398,1.726,1399,2.497,1400,1.756,1401,1.756,1402,1.756,1403,1.756,1404,1.756,1405,1.756,1406,1.756,1407,1.726,1408,1.669,1409,1.262,1410,1.756]],["title/interfaces/SheetConfig.html",[0,0.41,724,1.355]],["body/interfaces/SheetConfig.html",[0,0.849,1,0.953,2,0.029,3,0.042,4,0.025,8,0.169,9,0.335,10,1.356,11,1.542,13,1.279,14,1.28,15,2.23,16,2.008,18,2.654,20,0.716,21,0.365,22,0.005,24,1.553,26,1.801,27,2.259,29,0.062,39,1.801,41,1.151,46,1.589,47,1.242,48,0.625,50,1.602,75,0.989,88,1.296,94,1.079,95,1.234,97,2.008,109,1.333,120,1.066,130,0.003,131,0.003,146,1.351,174,1.473,175,1.452,176,1.452,177,1.452,178,1.452,183,1.296,235,0.637,260,1.956,261,1.093,295,2.132,331,0.922,466,1.541,620,1.669,629,1.542,660,2.415,703,3.11,721,2.432,724,1.931,731,2.04,734,0.885,739,2.599,740,2.161,756,1.107,960,1.541,962,1.431,1020,2.142,1088,1.181,1106,1.59,1107,3.33,1108,3.194,1109,3.246,1112,2.747,1113,3.384,1114,2.415,1185,1.642,1186,1.518,1245,1.642,1296,2.398,1330,1.726,1331,2.541,1332,2.497,1333,1.697,1334,1.642,1335,1.726,1336,1.726,1337,1.726,1338,1.726,1339,1.726,1340,1.726,1341,2.456,1342,1.697,1343,1.687,1344,1.726,1345,1.756,1346,1.726,1347,1.697,1348,1.245,1349,1.726,1350,1.756,1351,1.756,1352,1.756,1353,1.756,1354,1.756,1355,1.756,1356,1.756,1357,1.756,1358,1.756,1359,1.726,1360,1.726,1361,3.472,1362,3.472,1363,3.272,1364,2.554,1365,2.554,1366,2.554,1367,1.726,1368,1.697,1369,1.726,1370,2.497,1371,2.541,1372,2.541,1373,1.726,1374,1.756,1375,1.616,1376,1.756,1377,1.756,1378,1.756,1379,1.756,1380,1.756,1381,1.669,1382,2.935,1383,1.726,1384,1.756,1385,1.756,1386,1.669,1387,1.756,1388,1.756,1389,2.497,1390,1.756,1391,2.497,1392,1.697,1393,2.497,1394,1.756,1395,1.756,1396,1.697,1397,1.801,1398,1.726,1399,2.497,1400,1.756,1401,1.756,1402,1.756,1403,1.756,1404,1.756,1405,1.756,1406,1.756,1407,1.726,1408,1.669,1409,1.262,1410,1.756]],["title/interfaces/SheetDetails.html",[0,0.41,1375,1.927]],["body/interfaces/SheetDetails.html",[0,0.844,1,0.896,2,0.027,3,0.04,4,0.024,8,0.159,9,0.321,10,1.474,11,1.489,13,1.203,14,1.225,15,2.166,16,1.939,18,2.613,20,0.718,21,0.386,22,0.005,24,1.471,26,1.723,27,2.195,29,0.061,39,1.723,41,1.083,46,1.544,47,1.207,48,0.653,50,1.532,75,0.93,88,1.22,94,1.015,95,1.18,97,1.939,109,2.413,120,1.003,130,0.003,131,0.003,146,1.271,174,1.386,175,1.366,176,1.366,177,1.366,178,1.366,183,1.728,235,0.609,260,1.889,261,1.028,295,2.039,331,0.998,466,2.79,528,3.797,620,1.57,629,1.489,660,3.22,703,1.57,721,2.349,724,1.572,731,1.951,734,0.855,739,1.819,740,1.513,756,1.042,960,1.45,962,1.346,1020,2.27,1088,1.111,1106,1.496,1107,3.529,1108,3.457,1109,3.514,1112,2.911,1113,3.313,1114,2.31,1185,1.545,1186,1.428,1245,1.545,1296,2.845,1330,1.624,1331,2.43,1332,2.389,1333,1.597,1334,1.545,1335,1.624,1336,1.624,1337,1.624,1338,1.624,1339,1.624,1340,1.624,1341,2.349,1342,1.597,1343,1.613,1344,1.624,1345,1.652,1346,1.624,1347,1.597,1348,1.171,1349,1.624,1350,1.652,1351,1.652,1352,1.652,1353,1.652,1354,1.652,1355,1.652,1356,1.652,1357,1.652,1358,1.652,1359,1.624,1360,1.624,1361,2.43,1362,2.43,1363,1.652,1364,1.289,1365,1.289,1366,1.289,1367,1.624,1368,1.597,1369,1.624,1370,3.125,1371,2.43,1372,2.43,1373,1.624,1374,1.652,1375,2.236,1376,3.179,1377,3.179,1378,3.179,1379,3.179,1380,3.179,1381,1.57,1382,2.834,1383,1.624,1384,1.652,1385,1.652,1386,1.57,1387,1.652,1388,1.652,1389,2.389,1390,1.652,1391,2.389,1392,1.597,1393,2.389,1394,1.652,1395,1.652,1396,1.597,1397,1.723,1398,1.624,1399,2.389,1400,1.652,1401,1.652,1402,1.652,1403,1.652,1404,1.652,1405,1.652,1406,1.652,1407,1.624,1408,1.57,1409,1.187,1410,1.652]],["title/interfaces/SheetInfo.html",[0,0.41,1185,1.958]],["body/interfaces/SheetInfo.html",[0,0.848,1,0.941,2,0.029,3,0.041,4,0.025,8,0.167,9,0.332,10,1.115,11,1.531,13,1.263,14,1.741,15,2.533,16,1.994,18,2.646,20,0.718,21,0.375,22,0.005,24,1.503,26,1.785,27,2.488,29,0.062,39,1.785,41,1.136,46,1.58,47,1.215,48,0.66,50,2.178,75,0.976,88,1.28,94,1.066,95,1.223,97,2.423,109,1.316,120,1.799,130,0.003,131,0.003,146,1.334,174,1.455,175,1.433,176,1.433,177,1.433,178,1.433,183,1.284,235,0.631,260,1.942,261,1.079,295,2.112,331,0.917,466,1.522,620,1.648,629,1.531,660,2.393,703,1.648,721,2.415,724,1.629,731,2.022,734,0.879,739,1.885,740,1.567,756,2.051,960,2.855,962,2.65,1020,2.133,1088,1.166,1106,1.57,1107,3.315,1108,3.178,1109,3.23,1112,2.735,1113,3.369,1114,2.393,1185,2.354,1186,2.812,1245,1.621,1296,2.38,1330,1.704,1331,2.518,1332,2.475,1333,1.676,1334,1.621,1335,1.704,1336,1.704,1337,1.704,1338,1.704,1339,1.704,1340,1.704,1341,2.433,1342,1.676,1343,1.671,1344,1.704,1345,1.734,1346,1.704,1347,1.676,1348,1.229,1349,1.704,1350,1.734,1351,1.734,1352,1.734,1353,1.734,1354,1.734,1355,1.734,1356,1.734,1357,1.734,1358,1.734,1359,1.704,1360,1.704,1361,2.518,1362,2.518,1363,1.734,1364,1.353,1365,1.353,1366,1.353,1367,3.197,1368,3.144,1369,3.197,1370,2.475,1371,2.518,1372,2.518,1373,1.704,1374,1.734,1375,1.595,1376,1.734,1377,1.734,1378,1.734,1379,1.734,1380,1.734,1381,1.648,1382,2.914,1383,1.704,1384,1.734,1385,1.734,1386,1.648,1387,1.734,1388,1.734,1389,2.475,1390,1.734,1391,2.475,1392,1.676,1393,2.475,1394,1.734,1395,1.734,1396,1.676,1397,1.785,1398,1.704,1399,2.475,1400,1.734,1401,1.734,1402,1.734,1403,1.734,1404,1.734,1405,1.734,1406,1.734,1407,1.704,1408,1.648,1409,1.246,1410,1.734]],["title/interfaces/SheetOptions.html",[0,0.41,1381,1.99]],["body/interfaces/SheetOptions.html",[0,0.851,1,0.985,2,0.03,3,0.043,4,0.026,8,0.175,9,0.344,10,1.139,11,1.571,13,1.323,14,1.312,15,2.265,16,2.046,18,2.676,20,0.717,21,0.352,22,0.005,24,1.494,26,1.846,27,2.295,29,0.062,39,1.846,41,1.19,46,1.614,47,1.21,48,0.631,50,1.641,75,1.023,88,1.341,94,1.116,95,1.265,97,2.046,109,1.378,120,1.102,130,0.003,131,0.003,146,1.398,174,1.524,175,1.501,176,1.501,177,1.501,178,1.501,183,1.328,235,0.653,260,1.994,261,1.131,295,2.184,331,0.934,466,1.594,528,4.067,620,1.726,629,1.571,660,3.344,703,1.726,721,2.479,724,1.684,731,2.09,734,1.086,739,1.949,740,1.621,756,1.145,960,1.594,962,1.48,1020,2.324,1088,1.221,1106,1.645,1107,3.368,1108,3.237,1109,3.289,1112,2.98,1113,3.423,1114,2.474,1185,1.698,1186,1.57,1245,1.698,1296,2.443,1330,1.785,1331,2.603,1332,2.559,1333,1.755,1334,1.698,1335,1.785,1336,1.785,1337,1.785,1338,1.785,1339,1.785,1340,1.785,1341,2.516,1342,1.755,1343,1.728,1344,1.785,1345,1.816,1346,1.785,1347,1.755,1348,1.288,1349,1.785,1350,1.816,1351,1.816,1352,1.816,1353,1.816,1354,1.816,1355,1.816,1356,1.816,1357,1.816,1358,1.816,1359,1.785,1360,1.785,1361,2.603,1362,2.603,1363,1.816,1364,1.417,1365,1.417,1366,1.417,1367,1.785,1368,1.755,1369,1.785,1370,2.559,1371,2.603,1372,2.603,1373,1.785,1374,1.816,1375,1.671,1376,1.816,1377,1.816,1378,1.816,1379,1.816,1380,1.816,1381,2.474,1382,2.991,1383,1.785,1384,1.816,1385,1.816,1386,1.726,1387,1.816,1388,1.816,1389,2.559,1390,1.816,1391,2.559,1392,1.755,1393,2.559,1394,1.816,1395,1.816,1396,1.755,1397,1.846,1398,1.785,1399,2.559,1400,1.816,1401,1.816,1402,1.816,1403,1.816,1404,1.816,1405,1.816,1406,1.816,1407,1.785,1408,1.726,1409,1.305,1410,1.816]],["title/injectables/SheetService.html",[709,2.094,3668,4.499]],["body/injectables/SheetService.html",[2,0.026,3,0.026,4,0.051,8,0.15,10,1.338,14,0.784,16,2.076,18,2.104,19,2.963,20,0.691,21,0.344,22,0.005,25,0.419,29,0.022,30,1.973,43,1.642,44,0.044,46,2.002,48,0.69,50,1.755,53,2.055,58,1.165,64,0.493,108,0.844,109,2.343,130,0.003,131,0.003,202,1.98,207,1.261,209,1.812,211,3.053,215,0.756,219,3.674,232,3.434,235,0.698,247,2.086,269,0.775,295,1.306,308,0.66,318,2.796,331,1.135,388,2.105,434,2.905,556,2.142,709,2.325,711,2.086,721,2.515,731,2.784,733,3.772,734,1.267,738,4.253,756,0.981,765,0.898,771,2.348,772,2.905,773,6.096,821,1.74,926,2.905,960,1.366,962,1.268,967,1.775,968,1.74,969,1.613,970,1.775,971,1.775,972,1.775,1020,1.827,1095,4.348,1106,2.992,1107,3.04,1108,3.636,1109,2.174,1113,3.453,1134,5.298,1137,1.937,1185,2.174,1186,1.345,1192,3.632,1240,4.928,1245,3.241,1348,2.189,1349,1.53,1360,2.285,1367,2.736,1368,1.504,1369,1.53,1397,1.103,1441,3.092,1442,6.135,1444,4.62,1469,3.092,1635,4.62,1720,4.552,1727,4.117,1733,7.339,1740,2.756,1872,2.937,1873,2.5,1876,2.5,1890,2.5,1891,2.454,2103,4.995,2150,4.117,2307,3.931,2495,4.117,2842,3.092,3150,4.995,3668,4.995,3669,3.724,3670,5.563,3671,5.563,3672,5.563,3673,5.563,3674,5.563,3675,3.724,3676,5.563,3677,3.724,3678,5.563,3679,5.563,3680,6.888,3681,5.563,3682,5.563,3683,5.563,3684,5.563,3685,5.563,3686,5.563,3687,5.563,3688,5.563,3689,3.724,3690,5.563,3691,5.563,3692,5.563,3693,3.724,3694,4.995,3695,3.724,3696,3.724,3697,8.295,3698,3.724,3699,5.563,3700,5.563,3701,4.995,3702,5.563,3703,3.724,3704,5.563,3705,5.563,3706,3.724,3707,5.563,3708,5.563,3709,7.907,3710,3.724,3711,5.563,3712,3.724,3713,5.563,3714,6.633,3715,4.995,3716,5.563,3717,5.563,3718,3.724,3719,3.343,3720,3.724,3721,5.563,3722,3.724,3723,6.66,3724,3.724,3725,3.724,3726,5.563,3727,5.563,3728,3.724,3729,3.724,3730,3.724,3731,3.724,3732,5.563,3733,3.724,3734,3.724,3735,3.343,3736,3.724,3737,3.724,3738,3.724,3739,3.724,3740,3.724,3741,3.724,3742,5.563,3743,3.724,3744,5.563,3745,3.724,3746,3.724,3747,3.724,3748,3.724,3749,3.724,3750,3.724,3751,3.724,3752,3.724,3753,3.724,3754,3.724,3755,3.724,3756,3.724,3757,3.343]],["title/components/SidenavComponent.html",[250,1.355,398,1.99]],["body/components/SidenavComponent.html",[2,0.043,3,0.043,4,0.047,22,0.005,25,0.312,29,0.037,44,0.074,48,0.554,108,1.402,130,0.004,131,0.004,188,1.51,215,1.255,250,2.36,251,2.456,252,3.251,253,2.584,254,2.584,255,2.584,256,2.2,260,1.693,261,2.794,262,4.266,264,3.197,266,3.197,287,2.456,310,1.784,341,3.308,342,3.197,343,2.584,344,3.846,345,2.584,346,2.584,347,2.456,348,2.584,349,2.456,350,1.784,351,2.584,352,2.456,353,2.584,354,2.416,355,2.584,356,2.456,357,2.2,358,2.584,359,2.456,360,2.584,361,2.456,362,2.584,363,2.456,364,3.308,365,2.456,366,2.584,367,2.456,368,2.584,369,2.416,370,2.584,371,2.377,372,2.584,373,2.456,374,2.584,375,2.456,376,2.584,377,2.456,378,2.584,379,2.497,380,2.584,381,2.456,382,1.738,383,2.584,384,2.456,385,1.568,386,2.584,387,2.456,388,2.995,389,2.584,390,2.456,391,2.584,392,2.497,393,2.584,394,2.456,395,2.584,396,2.497,397,2.584,398,3.656,399,2.584,400,2.456,401,3.252,402,2.584,403,2.456,404,2.416,405,2.584,406,2.54,407,2.584,408,2.456,409,2.584,410,2.456,411,2.456,412,2.497,413,2.34,414,2.584,415,2.584,1253,3.376,1284,3.376,1306,4.024,1314,3.56,1660,4.824,3758,6.183,3759,8.73,3760,7.915,3761,6.183,3762,6.183]],["title/components/SidenavHeaderComponent.html",[250,1.355,400,1.99]],["body/components/SidenavHeaderComponent.html",[2,0.037,3,0.037,4,0.043,8,0.216,11,1.155,20,0.476,21,0.346,22,0.005,24,0.807,25,0.27,29,0.032,44,0.064,48,0.504,53,2.222,108,1.214,130,0.003,131,0.003,188,1.307,207,1.268,215,1.087,235,0.853,250,2.199,251,2.126,252,2.958,253,2.237,254,2.237,255,2.237,256,1.905,260,1.466,261,2.772,262,4.232,264,2.908,266,2.908,287,2.126,308,1.443,310,1.544,341,3.009,342,2.908,343,2.237,344,3.637,345,2.237,346,2.237,347,2.126,348,2.237,349,2.126,350,1.544,351,2.237,352,2.126,353,2.237,354,2.092,355,2.237,356,2.126,357,1.905,358,2.237,359,2.126,360,2.237,361,2.126,362,2.237,363,2.126,364,3.009,365,2.126,366,2.237,367,2.126,368,2.237,369,2.092,370,2.237,371,2.058,372,2.237,373,2.126,374,2.237,375,2.126,376,2.237,377,2.126,378,2.237,379,2.162,380,2.237,381,2.126,382,1.504,383,2.237,384,2.126,385,1.358,386,2.237,387,2.126,388,2.725,389,2.237,390,2.126,391,2.237,392,2.162,393,2.237,394,2.126,395,2.237,396,2.162,397,2.237,398,2.126,399,2.237,400,3.456,401,3.619,402,2.237,403,2.126,404,2.092,405,2.237,406,2.199,407,2.237,408,2.126,409,2.237,410,2.126,411,2.126,412,2.162,413,2.026,414,2.237,415,2.237,569,2.562,700,3.495,740,1.393,1019,2.784,1027,3.118,1085,3.66,1087,4.54,1097,5.227,1112,2.966,1133,3.986,1134,4.559,1231,3.376,1288,2.662,1289,3.268,1290,3.782,1296,2.416,1319,3.961,1430,6.34,1836,3.782,1851,4.265,2267,3.782,2372,4.806,3763,8.395,3764,5.353,3765,8.136,3766,7.2,3767,8.136,3768,8.136,3769,8.136,3770,8.136,3771,5.353,3772,5.353,3773,7.2,3774,5.353,3775,5.353,3776,5.353,3777,6.464,3778,7.2,3779,5.353,3780,5.353]],["title/modules/SidenavHeaderModule.html",[184,1.108,1416,3.16]],["body/modules/SidenavHeaderModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.512,29,0.043,44,0.087,130,0.004,131,0.004,184,1.616,186,2.6,187,2.765,188,1.785,189,3.561,190,2.765,191,2.68,192,3.506,198,3.322,199,2.722,200,2.6,214,3.22,215,1.483,243,2.722,278,3.556,400,4.191,401,2.722,1416,6.467,1419,3.487,1420,2.855,1424,4.365,1430,4.954,1432,4.101,1433,3.414,1694,5.732,1695,4.771,3763,6.56,3781,6.56,3782,6.56,3783,6.56,3784,7.307,3785,7.307]],["title/modules/SidenavModule.html",[184,1.108,1417,3.06]],["body/modules/SidenavModule.html",[2,0.051,3,0.051,4,0.044,22,0.005,25,0.497,29,0.044,44,0.089,130,0.004,131,0.004,184,1.653,186,2.659,187,2.828,188,1.825,189,3.596,190,2.828,191,2.741,192,3.54,198,3.367,199,2.784,200,2.659,214,3.264,215,1.517,243,2.784,398,4.202,1417,6.289,1419,3.534,1420,2.92,1432,4.157,1433,3.491,3786,6.709,3787,6.709,3788,6.709,3789,7.473,3790,7.473]],["title/classes/Signals.html",[44,0.06,572,3.541]],["body/classes/Signals.html",[2,0.021,3,0.04,4,0.018,8,0.122,9,0.262,10,1.033,20,0.576,21,0.291,22,0.005,23,2.593,24,1.153,25,0.24,29,0.018,38,1.225,41,0.83,44,0.036,46,1.347,47,0.998,48,0.712,53,0.936,64,0.402,97,1.336,130,0.002,131,0.002,149,4.052,150,4.052,183,1.013,202,1.691,203,1.313,207,1.329,209,1.445,211,3.232,232,3.329,235,1.046,236,5.038,256,2.945,323,2.595,331,0.849,495,3.222,501,0.687,531,2.816,547,4.434,548,4.325,557,2.266,568,1.337,569,1.079,572,5.649,588,5.488,592,7.751,603,2.523,606,4.911,625,2.722,636,4.338,642,8.098,643,5.278,675,3.358,680,4.868,703,1.204,706,4.868,707,2.518,724,2.161,731,1.967,733,5.611,739,2.501,740,2.08,745,2.997,765,0.731,773,3.827,975,6.865,976,5.659,1045,1.507,1058,1.55,1392,1.92,1585,1.952,1747,5.958,1785,2.722,1786,2.722,1981,6.264,2306,3.517,2472,7.843,2481,5.838,3257,6.873,3714,8.098,3791,3.032,3792,4.753,3793,4.753,3794,6.637,3795,6.637,3796,6.637,3797,6.637,3798,6.637,3799,6.637,3800,6.637,3801,6.637,3802,6.637,3803,6.637,3804,6.637,3805,4.753,3806,3.708,3807,4.753,3808,4.753,3809,3.032,3810,4.753,3811,3.032,3812,4.753,3813,3.032,3814,3.032,3815,8.311,3816,6.637,3817,7.647,3818,3.032,3819,7.647,3820,7.647,3821,3.032,3822,5.862,3823,3.032,3824,5.862,3825,3.032,3826,6.637,3827,3.032,3828,6.637,3829,3.032,3830,3.032,3831,4.753,3832,4.753,3833,3.032,3834,4.753,3835,3.032,3836,3.032,3837,4.753,3838,3.032,3839,4.753,3840,4.267,3841,4.753,3842,3.032,3843,3.032,3844,3.032,3845,3.032,3846,3.032,3847,3.032,3848,3.032,3849,3.032,3850,3.032,3851,3.032,3852,3.032,3853,3.032,3854,3.032,3855,3.032,3856,3.032,3857,3.032,3858,3.032,3859,3.032,3860,3.032,3861,3.032,3862,7.208,3863,3.032,3864,3.032,3865,3.032,3866,4.753,3867,2.722,3868,3.032,3869,3.032,3870,6.637,3871,5.862,3872,5.862,3873,5.862,3874,5.862,3875,3.032,3876,3.032]],["title/interfaces/Snackbar.html",[0,0.41,272,2.058]],["body/interfaces/Snackbar.html",[0,0.798,1,1.649,2,0.05,3,0.05,4,0.043,8,0.293,9,0.483,15,2.072,20,0.678,21,0.39,22,0.005,24,1.47,25,0.474,27,2.526,28,2.89,29,0.058,47,0.877,48,0.509,50,1.917,97,2.045,130,0.004,131,0.004,147,3.617,272,3.597,556,3.135,1015,2.753,1017,4.775,1030,3.872,1031,2.214,1035,3.478,3004,5.675,3005,5.14,3006,5.675,3007,5.675,3008,7.213,3009,5.14,3010,5.14]],["title/interfaces/Structure.html",[0,0.41,18,1.427]],["body/interfaces/Structure.html",[0,0.848,1,0.946,2,0.029,3,0.042,4,0.025,8,0.168,9,0.334,10,1.444,11,1.865,13,2.376,14,1.274,15,2.538,16,2.428,18,2.691,20,0.717,21,0.365,22,0.005,24,1.504,26,2.313,27,2.252,29,0.062,39,1.793,41,1.143,46,1.809,47,1.203,48,0.661,50,1.594,75,0.982,88,2.408,94,1.072,95,1.228,97,2,109,1.324,120,1.059,130,0.003,131,0.003,146,1.342,174,1.463,175,1.442,176,1.442,177,1.442,178,1.442,183,1.29,235,0.634,260,1.949,261,1.086,295,2.121,331,0.919,466,1.531,620,1.658,629,1.536,660,2.403,703,1.658,721,2.423,724,1.636,731,2.03,734,0.882,739,1.893,740,1.574,756,1.1,960,1.531,962,1.421,1020,2.137,1088,1.173,1106,1.579,1107,3.322,1108,3.186,1109,3.238,1112,2.74,1113,3.376,1114,2.403,1185,1.631,1186,1.508,1245,1.631,1296,2.388,1330,1.714,1331,2.529,1332,3.206,1333,1.686,1334,1.631,1335,1.714,1336,1.714,1337,1.714,1338,1.714,1339,1.714,1340,1.714,1341,2.444,1342,1.686,1343,1.678,1344,1.714,1345,1.744,1346,1.714,1347,1.686,1348,1.237,1349,3.206,1350,3.262,1351,1.744,1352,1.744,1353,1.744,1354,1.744,1355,1.744,1356,1.744,1357,1.744,1358,1.744,1359,1.714,1360,1.714,1361,2.529,1362,2.529,1363,1.744,1364,1.361,1365,1.361,1366,1.361,1367,1.714,1368,1.686,1369,1.714,1370,2.485,1371,2.529,1372,2.529,1373,1.714,1374,1.744,1375,1.605,1376,1.744,1377,1.744,1378,1.744,1379,1.744,1380,1.744,1381,1.658,1382,2.923,1383,1.714,1384,1.744,1385,1.744,1386,1.658,1387,1.744,1388,1.744,1389,2.485,1390,1.744,1391,2.485,1392,1.686,1393,2.485,1394,1.744,1395,1.744,1396,1.686,1397,1.793,1398,1.714,1399,2.485,1400,1.744,1401,1.744,1402,1.744,1403,1.744,1404,1.744,1405,1.744,1406,1.744,1407,1.714,1408,1.658,1409,1.253,1410,1.744]],["title/classes/TNode.html",[44,0.06,45,2.252]],["body/classes/TNode.html",[0,0.777,2,0.028,3,0.028,4,0.024,5,2.088,6,3.8,7,3.986,8,0.162,9,0.325,10,0.575,11,2.072,12,3.128,13,2.749,14,1.718,15,2.667,16,2.632,17,3.128,18,2.508,19,2.138,20,0.713,21,0.391,22,0.005,23,3.331,24,1.389,25,0.203,26,2.062,27,1.697,28,1.594,29,0.06,30,2.271,31,2.088,32,1.77,33,2.088,34,1.954,35,2.088,36,1.996,37,2.138,38,1.621,39,1.189,40,1.839,41,1.61,42,2.138,43,1.77,44,0.083,45,2.643,46,1.901,47,1.26,48,0.664,49,4.591,50,2.019,51,3.318,52,3.62,53,2.63,54,3.409,55,3.128,56,4.345,57,3.388,58,2.666,59,3.087,60,3.087,61,4.082,62,4.184,63,4.184,64,0.779,65,4.184,66,2.138,67,2.192,68,1.875,69,2.192,70,1.875,71,3.252,72,2.192,73,1.875,74,1.875,75,0.945,76,3.318,77,1.914,78,3.128,79,3.8,80,1.875,81,2.192,82,2.138,83,2.192,84,2.192,85,1.914,86,1.914,87,1.77,88,1.815,89,2.138,90,2.192,91,2.192,92,2.192,93,2.192,94,1.031,95,1.656,96,2.747,97,1.128,98,1.678,99,1.914,100,1.621,101,3.211,102,1.428,103,3.211,104,2.192,105,2.138,106,3.707,107,2.192,108,1.578,109,1.273,110,2.192,111,2.138,112,2.192,113,1.649,114,1.621,115,2.138,116,1.649,117,1.678,118,1.678,119,1.678,120,1.765,121,1.678,122,1.678,123,2.138,124,2.192,125,2.192,126,2.192,127,2.192,128,2.192,129,2.192,130,0.003,131,0.003,207,1.422,209,0.805,235,0.855,308,1.447,501,0.91,3877,4.014,3878,5.881,3879,4.014,3880,4.014,3881,4.014,3882,4.014,3883,4.014,3884,4.014,3885,4.014,3886,4.014,3887,4.014,3888,4.014,3889,4.014,3890,4.014,3891,4.014,3892,4.014,3893,4.014,3894,4.014,3895,4.014,3896,4.014,3897,4.014,3898,4.014]],["title/components/TableNestedMenuComponent.html",[250,1.355,403,1.99]],["body/components/TableNestedMenuComponent.html",[2,0.035,3,0.035,4,0.041,8,0.206,9,0.384,10,0.73,20,0.636,21,0.34,22,0.005,25,0.401,29,0.03,44,0.061,48,0.555,108,1.156,130,0.003,131,0.003,188,1.245,202,2.479,203,1.56,207,1.287,209,1.022,211,1.761,215,1.035,235,0.894,245,2.814,250,2.145,251,2.025,252,2.862,253,2.131,254,2.131,255,2.131,256,1.814,260,1.396,261,2.763,262,4.219,264,2.814,266,2.814,268,1.572,287,2.025,298,1.992,308,1.513,310,1.471,341,2.912,342,2.814,343,2.131,344,3.564,345,2.131,346,2.131,347,2.025,348,2.131,349,2.025,350,1.471,351,2.131,352,2.025,353,2.131,354,1.992,355,2.131,356,2.025,357,1.814,358,2.131,359,2.025,360,2.131,361,2.025,362,2.131,363,2.025,364,2.912,365,2.025,366,2.131,367,2.025,368,2.131,369,1.992,370,2.131,371,1.96,372,2.131,373,2.025,374,2.131,375,2.025,376,2.131,377,2.025,378,2.131,379,2.059,380,2.131,381,2.025,382,1.433,383,2.131,384,2.025,385,1.293,386,2.131,387,2.025,388,3.687,389,2.131,390,2.025,391,2.131,392,2.059,393,2.131,394,2.025,395,2.131,396,2.059,397,2.131,398,2.025,399,2.131,400,2.025,401,1.9,402,2.131,403,3.388,404,4.081,405,2.131,406,2.094,407,2.131,408,2.025,409,2.131,410,2.025,411,2.025,412,2.059,413,1.93,414,2.131,415,2.131,765,1.23,1085,3.542,1107,1.96,1108,3.051,1112,2.517,1133,3.635,1375,3.544,1529,2.784,1933,6.608,1990,3.978,2025,5.435,2281,3.457,2292,3.457,2777,6.982,3899,8.471,3900,5.099,3901,7.936,3902,6.967,3903,7.936,3904,7.936,3905,6.967,3906,5.099,3907,5.099,3908,6.967,3909,5.099,3910,7.936,3911,6.967,3912,5.099,3913,6.967,3914,5.099,3915,5.099,3916,5.099,3917,6.967,3918,6.967]],["title/modules/TableNestedMenuModule.html",[184,1.108,2772,3.397]],["body/modules/TableNestedMenuModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.511,29,0.043,44,0.087,130,0.004,131,0.004,184,1.609,186,2.589,187,2.753,188,1.777,189,3.555,190,2.753,191,2.669,192,3.499,198,3.313,199,2.71,200,2.589,214,3.212,215,1.477,243,2.71,278,3.541,388,2.753,403,4.188,404,3.67,1419,3.478,1420,2.843,1424,4.354,1432,4.091,1433,3.399,2280,6.186,2281,4.932,2772,6.946,2777,5.383,3899,6.531,3919,6.531,3920,6.531,3921,6.531,3922,7.275,3923,7.275]],["title/classes/ToggleBottomSheet.html",[44,0.06,1051,2.295]],["body/classes/ToggleBottomSheet.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.72,130,0.003,131,0.003,203,2.357,207,0.759,235,0.57,268,1.441,269,2.19,272,2.988,308,0.964,310,1.568,312,1.344,316,2.071,331,0.807,350,1.568,382,1.528,501,1.232,556,2.935,558,3.499,603,1.396,629,1.89,734,1.164,755,2.354,756,1.432,763,3.129,764,2.057,765,1.311,1015,2.057,1025,2.442,1026,2.539,1027,4.154,1028,2.323,1030,2.889,1031,2.214,1032,1.724,1033,2.442,1034,3.926,1035,3.257,1036,2.444,1037,2.442,1038,2.49,1039,2.397,1040,2.397,1041,2.442,1042,2.442,1043,2.442,1044,2.354,1045,1.724,1046,2.442,1047,2.442,1048,2.442,1049,2.159,1050,2.49,1051,3.332,1052,2.272,1053,2.397,1054,2.442,1055,2.442,1056,2.397,1057,2.442,1058,2.373,1059,2.442,3924,5.435]],["title/classes/ToggleControlPane.html",[44,0.06,1039,2.21]],["body/classes/ToggleControlPane.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.72,130,0.003,131,0.003,203,2.357,207,0.759,235,0.57,268,1.441,269,2.19,272,2.988,308,0.964,310,1.568,312,1.344,316,2.071,331,0.807,350,2.099,382,1.528,501,1.232,556,2.935,558,3.499,603,1.396,629,1.89,734,1.131,755,2.354,756,1.432,763,3.129,764,2.057,765,1.311,1015,2.057,1025,2.442,1026,2.539,1027,4.154,1028,2.257,1030,2.889,1031,2.214,1032,1.724,1033,2.442,1034,3.926,1035,3.257,1036,2.444,1037,2.442,1038,2.49,1039,3.208,1040,3.208,1041,2.442,1042,2.442,1043,2.442,1044,2.354,1045,1.724,1046,2.442,1047,2.442,1048,2.442,1049,2.159,1050,2.49,1051,2.49,1052,2.272,1053,2.397,1054,2.442,1055,2.442,1056,2.397,1057,2.442,1058,2.373,1059,2.442,3925,5.435]],["title/classes/ToggleDebugLogs.html",[44,0.06,1047,2.252]],["body/classes/ToggleDebugLogs.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.72,130,0.003,131,0.003,203,2.357,207,0.759,235,0.57,268,1.441,269,2.19,272,2.988,308,0.964,310,2.099,312,1.344,316,2.071,331,0.807,350,1.568,382,1.528,501,1.232,556,2.935,558,3.499,603,1.396,629,1.89,734,1.131,755,2.354,756,1.432,763,3.129,764,2.057,765,1.311,1015,2.753,1025,2.442,1026,2.539,1027,4.154,1028,2.257,1030,2.889,1031,2.214,1032,1.724,1033,2.442,1034,3.926,1035,3.257,1036,2.444,1037,2.442,1038,2.49,1039,2.397,1040,2.397,1041,2.442,1042,2.442,1043,2.442,1044,2.354,1045,1.724,1046,2.442,1047,3.269,1048,2.442,1049,2.159,1050,2.49,1051,2.49,1052,2.272,1053,2.397,1054,2.442,1055,2.442,1056,2.397,1057,2.442,1058,2.373,1059,2.442,3926,5.435]],["title/classes/ToggleIndentList.html",[44,0.06,1043,2.252]],["body/classes/ToggleIndentList.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.72,130,0.003,131,0.003,203,2.357,207,0.759,235,0.57,268,1.441,269,2.19,272,2.988,308,0.964,310,1.568,312,1.344,316,2.071,331,0.807,350,1.568,382,1.528,501,1.232,556,2.935,558,3.499,603,1.396,629,1.89,734,1.131,755,2.354,756,1.432,763,3.129,764,2.057,765,1.311,1015,2.057,1025,2.442,1026,2.539,1027,4.154,1028,2.257,1030,2.889,1031,2.214,1032,1.724,1033,2.442,1034,3.926,1035,3.257,1036,2.444,1037,2.442,1038,2.49,1039,2.397,1040,2.397,1041,2.442,1042,2.442,1043,3.269,1044,3.15,1045,2.307,1046,2.442,1047,2.442,1048,2.442,1049,2.159,1050,2.49,1051,2.49,1052,2.272,1053,2.397,1054,2.442,1055,2.442,1056,2.397,1057,2.442,1058,2.373,1059,2.442,3927,5.435]],["title/classes/ToggleReport.html",[44,0.06,1046,2.252]],["body/classes/ToggleReport.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,20,0.604,21,0.403,22,0.005,25,0.414,29,0.062,44,0.125,64,0.721,130,0.003,131,0.003,203,2.357,207,0.76,235,0.57,268,1.442,269,2.19,272,2.99,308,0.965,310,1.57,312,1.801,316,2.073,331,0.808,350,1.57,382,1.529,501,1.234,556,2.936,558,3.5,603,1.398,629,1.89,734,1.132,755,2.356,756,1.434,763,3.13,764,2.059,765,1.313,1015,2.059,1025,2.445,1026,2.542,1027,4.155,1028,2.258,1030,2.891,1031,2.216,1032,1.726,1033,2.445,1034,3.927,1035,3.258,1036,2.444,1037,2.445,1038,2.493,1039,2.4,1040,2.4,1041,2.445,1042,2.445,1043,2.445,1044,2.356,1045,1.726,1046,3.271,1047,2.445,1048,2.445,1049,2.161,1050,2.493,1051,2.493,1052,2.274,1053,2.4,1054,2.445,1055,2.445,1056,2.4,1057,2.445,1058,2.374,1059,2.445,3928,5.441]],["title/classes/ToggleShowAllAS.html",[44,0.06,1557,2.252]],["body/classes/ToggleShowAllAS.html",[2,0.048,3,0.035,4,0.03,8,0.204,9,0.383,20,0.635,21,0.4,22,0.005,24,0.764,25,0.399,29,0.062,44,0.124,47,0.611,64,0.919,108,1.149,130,0.003,131,0.003,183,1.479,203,2.343,207,0.707,235,0.531,268,1.822,269,2.176,308,0.899,312,1.957,316,1.975,318,2.994,331,1.119,385,1.285,501,1.149,603,2.528,629,1.707,724,1.875,734,1.291,765,1.222,1004,2.082,1020,1.253,1028,1.716,1031,2.112,1032,1.607,1036,2.665,1084,2.155,1088,2.391,1178,2.235,1215,2.235,1343,1.924,1348,2.056,1409,2.083,1498,2.047,1556,2.277,1557,3.117,1558,2.235,1585,2.85,1596,2.321,1866,2.321,1867,2.367,1871,2.367,1872,2.235,1873,4.372,1874,2.321,1875,2.367,1876,2.277,1877,2.367,1878,2.321,1879,2.85,1880,2.367,1881,2.321,1882,2.321,1883,2.321,1884,2.321,1885,3.241,1886,2.321,1887,2.277,1888,2.321,1889,2.321,1890,2.277,1891,2.235,1892,2.321,1893,2.277,1894,2.277,1895,2.321,1896,2.321,1897,2.367,1898,2.321,1899,2.367,1900,2.367,1901,2.367,3929,5.067]],["title/components/TrackingPopupComponent.html",[250,1.355,287,1.99]],["body/components/TrackingPopupComponent.html",[2,0.03,3,0.03,4,0.037,8,0.254,9,0.347,10,1.052,11,0.952,20,0.292,21,0.365,22,0.005,23,2.869,24,1.277,25,0.371,29,0.026,30,1.307,44,0.087,48,0.592,64,0.834,108,1,130,0.003,131,0.003,188,1.078,195,5.533,200,3.013,202,2.241,207,1.317,209,1.472,211,2.537,215,0.896,232,2.613,235,0.66,245,1.782,250,1.985,251,1.752,252,2.587,253,1.844,254,1.844,255,1.844,256,1.57,260,1.208,261,2.736,262,4.198,264,2.543,266,2.543,268,1.454,269,1.666,279,3.664,280,3.265,287,3.181,289,7.463,291,3.961,298,3.309,308,1.117,310,1.273,331,0.94,332,3.961,335,3.961,339,2.694,341,2.632,342,2.543,343,1.844,344,3.346,345,1.844,346,1.844,347,1.752,348,1.844,349,1.752,350,1.273,351,1.844,352,1.752,353,1.844,354,1.724,355,1.844,356,1.752,357,1.57,358,1.844,359,1.752,360,1.844,361,1.752,362,1.844,363,1.752,364,2.632,365,1.752,366,1.844,367,1.752,368,1.844,369,1.724,370,1.844,371,1.696,372,1.844,373,1.752,374,1.844,375,1.752,376,1.844,377,1.752,378,1.844,379,1.782,380,1.844,381,1.752,382,1.24,383,1.844,384,1.752,385,1.119,386,1.844,387,1.752,388,2.383,389,1.844,390,1.752,391,1.844,392,1.782,393,1.844,394,1.752,395,1.844,396,1.782,397,1.844,398,1.752,399,1.844,400,1.752,401,1.644,402,1.844,403,1.752,404,1.724,405,1.844,406,4.017,407,1.844,408,1.752,409,1.844,410,1.752,411,1.752,412,1.782,413,1.67,414,1.844,415,1.844,528,4.794,695,2.54,740,1.638,1017,3.201,1089,5.229,1272,2.782,1273,3.845,1281,2.295,1295,4.794,1296,2.113,1297,2.694,1298,3.845,1299,2.88,1305,3.73,1311,4.114,1334,1.724,1471,4.66,1483,4.66,1484,4.66,1529,3.438,1733,5.229,1836,4.449,1840,3.442,2039,2.991,2121,2.88,2563,6.869,3134,5.229,3420,5.229,3930,8.589,3931,4.412,3932,6.297,3933,6.297,3934,8.805,3935,7.342,3936,6.297,3937,7.342,3938,8.007,3939,6.297,3940,6.297,3941,9.431,3942,4.412,3943,6.297,3944,6.297,3945,4.412,3946,6.297,3947,9.681,3948,4.412,3949,6.297,3950,4.412,3951,4.412,3952,6.297,3953,6.297,3954,4.412,3955,4.412,3956,4.412,3957,4.412,3958,4.412,3959,4.412,3960,4.412,3961,4.412,3962,4.412,3963,4.412,3964,4.412,3965,6.297,3966,6.297,3967,6.297,3968,4.412,3969,4.412,3970,4.412,3971,4.412,3972,4.412]],["title/modules/TrackingPopupModule.html",[184,1.108,430,3.708]],["body/modules/TrackingPopupModule.html",[2,0.051,3,0.051,4,0.044,22,0.005,25,0.496,29,0.044,44,0.089,130,0.004,131,0.004,184,1.645,186,2.647,187,2.815,188,1.817,189,3.589,190,2.815,191,2.729,192,3.533,198,3.358,199,2.771,200,2.647,214,3.255,215,1.51,243,2.771,287,4.2,289,5.803,290,6.678,406,3.056,430,7.616,1419,3.525,1420,2.907,1432,4.146,1433,3.475,3930,6.678,3973,6.678,3974,6.678,3975,6.678,3976,7.439]],["title/components/TreeComponent.html",[250,1.355,408,1.99]],["body/components/TreeComponent.html",[2,0.041,3,0.041,4,0.046,8,0.239,9,0.425,21,0.226,22,0.005,25,0.299,29,0.035,44,0.071,48,0.539,108,1.345,130,0.003,131,0.003,188,1.449,207,0.828,215,1.204,250,2.314,251,2.356,252,3.165,253,2.479,254,2.479,255,2.479,256,3.046,260,1.624,261,2.788,262,4.257,264,3.112,266,3.112,280,4.389,287,2.356,310,1.711,341,3.22,342,3.112,343,2.479,344,3.787,345,2.479,346,2.479,347,2.356,348,2.479,349,2.356,350,1.711,351,2.479,352,2.356,353,2.479,354,2.317,355,2.479,356,2.356,357,2.111,358,2.479,359,2.356,360,2.479,361,2.356,362,2.479,363,2.356,364,3.22,365,2.356,366,2.479,367,2.356,368,2.479,369,2.317,370,2.479,371,2.28,372,2.479,373,2.356,374,2.479,375,2.356,376,2.479,377,2.356,378,2.479,379,2.395,380,2.479,381,2.356,382,1.667,383,2.479,384,2.356,385,1.504,386,2.479,387,2.356,388,2.916,389,2.479,390,2.356,391,2.479,392,2.395,393,2.479,394,2.356,395,2.479,396,2.395,397,2.479,398,2.356,399,2.479,400,2.356,401,2.209,402,2.479,403,2.356,404,2.317,405,2.479,406,2.436,407,2.479,408,3.599,409,2.479,410,2.356,411,2.356,412,2.395,413,2.244,414,2.479,415,2.479,739,1.855,1112,2.444,1270,4.627,1274,3.621,1288,2.949,1289,3.621,1290,4.19,1296,1.99,1300,4.021,1304,5.324,1319,4.389,1529,3.238,1792,5.324,2003,3.74,2267,4.19,2292,4.021,2563,6.677,3427,6.917,3977,5.931,3978,8.558,3979,7.705,3980,8.558,3981,7.705,3982,5.931,3983,5.931,3984,5.931]],["title/classes/TreeMarkGroup.html",[44,0.06,3119,4.161]],["body/classes/TreeMarkGroup.html",[2,0.034,3,0.017,4,0.014,8,0.097,9,0.217,14,0.83,21,0.309,22,0.005,25,0.121,29,0.014,44,0.029,46,1.597,48,0.55,50,0.632,58,2.776,59,3.313,60,3.313,64,0.664,78,1.079,95,0.8,130,0.002,131,0.002,135,1.003,141,3.791,145,3.437,147,3.424,148,2.573,151,1.567,153,1.514,181,1.039,202,1.402,203,1.122,207,1.182,211,2.797,232,2.881,235,1.089,236,4.836,245,3.993,256,3.068,331,0.843,495,3.398,501,0.544,531,3.437,535,5.208,536,5.208,537,5.208,538,5.208,542,5.675,545,7.573,547,3.094,550,3.272,554,6.819,555,6.182,556,2.816,557,2.766,558,2.565,559,6.182,562,1.878,567,5.557,568,1.059,569,0.854,572,1.696,573,8.904,574,2.573,578,2.155,580,2.155,581,2.155,582,2.155,583,2.155,584,4.818,586,5.925,587,5.675,588,5.521,589,6.819,590,8.877,591,8.211,592,7.523,593,6.819,594,6.819,595,6.819,596,6.819,597,6.819,598,6.471,599,3.538,600,5.991,601,4.5,602,6.532,603,1.951,604,5.149,605,7.682,606,6.568,607,2.155,608,5.208,609,2.155,610,5.208,611,5.208,612,2.155,613,2.155,614,2.155,615,3.538,616,2.155,617,2.155,618,2.155,619,2.155,621,3.074,623,3.542,624,1.993,634,3.272,635,1.993,636,5.62,649,3.272,650,2.155,651,3.91,655,4.526,658,1.567,659,1.567,660,1.991,668,5.208,669,1.993,670,3.538,675,1.696,676,2.155,685,3.538,686,2.155,687,1.993,689,1.993,691,3.538,693,3.538,695,2.268,696,1.959,697,3.538,698,3.272,699,1.873,700,1.567,701,3.538,703,1.565,704,3.538,706,1.993,707,1.993,708,1.776,797,1.873,1049,1.565,1058,1.285,1290,1.696,2018,1.776,2764,4.818,2980,1.873,3109,5.208,3119,3.272,3124,2.155,3169,2.155,3170,2.155,3867,6.53,3985,2.4,3986,5.801,3987,5.801,3988,5.801,3989,5.801,3990,3.94,3991,2.4,3992,2.4,3993,2.4,3994,2.4,3995,2.4,3996,2.4,3997,2.4,3998,2.4,3999,2.4,4000,3.94,4001,2.4,4002,2.4,4003,2.4,4004,2.4,4005,2.4,4006,2.4,4007,2.4,4008,6.407,4009,5.012,4010,2.4,4011,3.94]],["title/modules/TreeModule.html",[184,1.108,3590,3.541]],["body/modules/TreeModule.html",[2,0.052,3,0.052,4,0.045,22,0.005,25,0.482,29,0.045,44,0.09,130,0.004,131,0.004,184,1.668,186,2.684,187,2.854,188,1.842,189,3.61,190,2.854,191,2.766,192,3.553,198,3.385,199,2.809,200,2.684,214,3.282,215,1.531,243,2.809,408,4.206,1419,3.553,1420,2.947,3590,7.291,4012,6.77,4013,6.77,4014,6.77,4015,7.541,4016,7.541]],["title/injectables/TreeService.html",[709,2.094,4017,4.499]],["body/injectables/TreeService.html",[2,0.023,3,0.023,4,0.02,8,0.134,9,0.281,10,0.73,13,1.552,18,1.452,20,0.22,21,0.346,22,0.005,23,1.297,24,0.769,25,0.485,29,0.02,30,2.846,31,3.229,38,1.34,40,1.52,41,2.058,43,3.761,44,0.04,45,3.714,46,1.414,47,0.84,48,0.434,49,4.336,53,1.573,58,2.585,64,0.676,75,1.2,108,0.752,109,1.053,120,1.293,130,0.002,131,0.002,141,3.436,142,2.857,143,2.857,167,3.903,183,1.324,202,1.814,207,1.268,209,1.397,211,1.147,215,0.674,230,2.784,232,2.675,235,0.348,245,2.507,247,1.86,256,3.178,268,1.826,269,1.82,295,2.177,298,1.992,308,0.589,316,0.945,331,1.023,342,1.34,350,1.471,442,1.911,470,2.589,471,2.589,472,2.25,473,2.456,474,5.435,475,2.756,531,3.678,557,4.066,562,2.431,568,3.645,569,2.209,643,2.716,696,2.535,709,2.131,710,5.311,711,1.86,717,2.345,718,5.71,721,2.372,723,7.124,724,2.145,731,1.114,733,3.456,734,1.169,738,1.911,739,2.351,742,4.17,743,1.615,745,3.215,748,2.98,749,2.026,750,2.345,752,1.687,753,1.726,754,2.25,756,1.343,757,2.456,759,2.25,760,2.25,761,2.345,763,2.272,764,1.256,765,0.801,766,1.582,771,2.093,773,4.053,774,2.345,841,4.234,848,2.98,850,2.98,852,2.98,857,4.577,861,2.98,895,4.577,945,5.311,949,5.181,951,2.98,958,2.345,959,2.756,960,2.277,961,2.589,962,1.13,963,2.589,964,2.756,965,2.589,966,2.756,994,2.98,1034,2.131,1040,2.249,1058,2.025,1088,0.933,1095,6.094,1137,1.726,1178,3.072,1215,2.738,1234,1.966,1500,6.749,1509,5.865,1529,3.39,1532,4.577,1549,4.577,1560,2.589,1571,2.98,1572,2.98,1575,2.345,1720,2.935,1727,2.456,1740,3.773,1742,2.589,1879,2.094,2482,3.602,2609,4.234,2837,2.98,2838,2.98,2839,2.98,2840,2.98,2841,2.98,2842,2.756,2843,2.98,2845,5.785,2847,2.98,2848,5.574,2849,6.749,2851,2.98,2852,5.574,2853,4.577,3017,4.577,3020,2.589,3715,6.254,3757,5.574,4017,4.577,4018,3.319,4019,5.574,4020,6.208,4021,5.099,4022,5.099,4023,5.099,4024,6.208,4025,3.319,4026,5.099,4027,5.099,4028,3.319,4029,3.319,4030,5.099,4031,3.319,4032,3.319,4033,4.577,4034,3.319,4035,3.319,4036,3.319,4037,3.319,4038,2.98,4039,3.319,4040,3.319,4041,3.319,4042,3.319,4043,6.966,4044,6.966,4045,6.966,4046,3.319,4047,3.319,4048,6.966,4049,3.319,4050,3.319,4051,3.319,4052,3.319,4053,3.319,4054,3.319,4055,3.319,4056,3.319,4057,2.98,4058,3.319,4059,5.099,4060,3.319,4061,5.099,4062,3.319,4063,3.319,4064,5.099,4065,3.319,4066,3.319,4067,5.574,4068,6.208,4069,5.099,4070,6.208,4071,5.099,4072,5.099,4073,6.208,4074,3.319,4075,3.319,4076,5.099,4077,5.099,4078,3.319,4079,3.319,4080,3.319,4081,3.319,4082,3.319,4083,5.099,4084,6.966,4085,3.319,4086,3.319,4087,3.319,4088,3.319,4089,3.319,4090,3.319,4091,3.319,4092,3.319,4093,3.319,4094,4.577,4095,3.319,4096,3.319,4097,3.319,4098,3.319,4099,3.319,4100,3.319,4101,2.98,4102,2.98,4103,4.577]],["title/interfaces/TreeStateModel.html",[0,0.41,1560,3.909]],["body/interfaces/TreeStateModel.html",[0,0.248,1,0.688,2,0.021,3,0.021,4,0.018,8,0.122,9,0.263,14,1.002,21,0.368,22,0.005,25,0.404,29,0.028,30,2.631,41,0.831,44,0.07,45,2.984,46,1.348,47,1.027,48,0.212,53,1.468,58,2.077,75,2.089,94,0.78,95,0.966,102,1.693,113,3.401,114,3.518,116,2.963,117,3.014,118,3.198,119,3.014,120,1.941,121,3.014,122,3.343,130,0.002,131,0.002,135,4.085,138,2.138,142,2.666,143,2.666,170,3,179,2.098,180,3.106,181,2.06,183,2.014,203,1.951,215,0.616,232,3.1,236,1.543,256,2.363,261,2.31,295,1.064,312,1.643,331,1.116,385,1.207,442,1.748,472,3.225,528,4.336,547,4.205,557,3.947,562,1.447,568,3.979,588,2.598,643,2.534,709,1.988,718,6.52,722,4.995,725,4.152,728,4.271,731,1.019,734,0.823,739,2.502,740,2.215,742,4.541,743,4.392,745,5.044,751,2.983,752,2.983,753,3.052,754,2.058,758,1.509,762,1.579,766,1.447,949,6.413,953,2.725,955,2.725,956,2.725,976,3.521,1028,1.643,1045,2.106,1058,2.943,1231,1.914,1234,5.16,1296,1.597,1301,3.225,1364,2.896,1365,2.701,1366,2.701,1508,3.125,1560,7.039,1585,2.41,1737,4.271,1740,3.521,1742,2.368,1903,4.287,1908,3.125,1909,3.125,1910,3.203,1911,2.666,1912,1.701,1913,3.125,1914,3.287,1981,3.106,2164,4.577,2481,1.914,2493,3.362,2691,3.521,3065,7.039,3074,3.521,3075,3.362,3077,2.368,3080,7.583,3100,7.664,3209,2.521,3210,2.521,3216,2.725,3524,5.962,3680,4.872,3701,2.725,3815,8.1,4104,3.036,4105,4.758,4106,7.651,4107,7.651,4108,6.641,4109,5.867,4110,4.758,4111,3.036,4112,3.036,4113,3.036,4114,3.036,4115,4.758,4116,3.036,4117,3.036,4118,3.036,4119,3.036,4120,3.036,4121,3.036,4122,3.036,4123,3.036,4124,3.036,4125,3.036,4126,5.867,4127,3.036,4128,3.036,4129,3.036,4130,3.036,4131,3.036,4132,3.036,4133,3.036,4134,3.036,4135,4.758,4136,3.036,4137,3.036,4138,3.036,4139,3.036,4140,3.036,4141,3.036,4142,3.036,4143,4.758,4144,3.036,4145,3.036,4146,3.036,4147,3.036,4148,3.036,4149,3.036,4150,4.758,4151,3.036,4152,3.036,4153,3.036,4154,3.036,4155,3.036]],["title/interfaces/UIStateModel.html",[0,0.41,3020,3.909]],["body/interfaces/UIStateModel.html",[0,0.422,1,0.568,2,0.041,3,0.017,4,0.015,8,0.101,9,0.225,18,1.162,20,0.342,21,0.353,22,0.005,23,2.326,24,1.473,25,0.433,29,0.024,30,2.716,44,0.03,48,0.361,53,2.957,64,0.332,130,0.002,131,0.002,203,1.92,215,0.508,218,1.219,219,1.246,220,1.334,232,3.051,245,3.316,247,4.475,261,2.23,268,0.808,272,3.862,310,2.027,312,1.738,316,2.199,331,0.857,350,1.891,401,2.877,442,1.442,472,1.698,474,3.183,556,2.918,558,2.877,569,1.452,603,1.805,629,1.114,696,2.029,709,1.705,718,4.836,731,0.841,733,1.698,734,1.111,742,1.194,749,1.53,750,1.77,754,1.698,755,2.235,756,1.36,757,1.854,759,1.698,760,1.698,761,1.77,763,2.99,764,0.948,773,5.597,949,6.912,963,1.954,965,1.954,1014,1.77,1015,1.544,1017,2.624,1018,1.77,1025,2.675,1027,3.776,1028,2.218,1030,0.995,1032,0.794,1033,2.32,1034,3.583,1035,3.76,1037,2.32,1039,1.8,1040,2.89,1041,2.32,1042,1.834,1043,1.834,1044,1.767,1045,2.078,1046,1.834,1047,1.834,1048,1.834,1049,2.603,1050,1.147,1052,2.157,1053,2.277,1054,2.675,1055,1.834,1056,1.8,1057,1.834,1058,2.137,1059,1.834,1075,1.368,1093,2.286,1138,1.303,1139,1.303,1141,1.484,1190,4.278,1234,5.243,1239,2.08,1243,3.37,1559,2.08,1849,3.663,1893,1.126,1894,1.126,1913,2.75,2151,1.698,2175,3.663,2261,3.663,2300,3.648,2481,5.928,2482,6.642,2483,3.82,3005,5.643,3008,4.404,3020,6.905,3065,7.334,3074,6.846,3075,6.537,3077,1.954,3080,7.8,3100,7.8,3378,7.17,4019,6.307,4057,3.663,4156,2.505,4157,7.408,4158,7.723,4159,7.408,4160,7.408,4161,7.408,4162,6.553,4163,7.408,4164,4.08,4165,8.721,4166,4.08,4167,2.505,4168,5.162,4169,8.573,4170,2.505,4171,2.505,4172,2.505,4173,2.505,4174,2.505,4175,2.505,4176,2.505,4177,2.505,4178,2.505,4179,2.505,4180,4.08,4181,2.505,4182,4.08,4183,2.505,4184,2.505,4185,2.505,4186,4.08,4187,2.505,4188,2.505,4189,2.505,4190,2.505,4191,2.505,4192,2.505,4193,4.08,4194,2.505,4195,2.505,4196,2.505,4197,2.505,4198,5.343,4199,2.505,4200,2.505,4201,2.505,4202,2.505,4203,7.723,4204,8.405,4205,2.505,4206,2.505,4207,2.505,4208,2.505,4209,2.505,4210,2.505,4211,2.505,4212,2.505,4213,2.505,4214,2.505,4215,2.505,4216,4.08,4217,5.162,4218,2.505,4219,2.505,4220,2.505,4221,2.505,4222,2.505,4223,2.505,4224,2.505,4225,2.505,4226,2.505,4227,2.505,4228,2.505,4229,2.505,4230,2.505,4231,4.08,4232,2.505,4233,2.505,4234,4.08,4235,2.505]],["title/classes/UpdateBimodal.html",[44,0.06,751,2.548]],["body/classes/UpdateBimodal.html",[2,0.037,3,0.037,4,0.032,8,0.216,9,0.398,10,0.769,14,1.13,20,0.355,21,0.396,22,0.005,24,0.809,25,0.411,29,0.06,44,0.12,46,1.464,47,1.05,48,0.375,64,1.154,75,2.049,95,1.845,113,3.346,114,3.517,116,2.204,117,2.242,118,2.242,119,2.242,120,2.066,121,2.242,122,2.242,130,0.003,131,0.003,135,3.911,138,4.083,179,3.18,183,1.857,203,2.29,207,1.216,209,1.076,235,0.562,268,2.035,269,2.128,308,0.951,331,0.904,385,1.361,501,1.216,547,3.66,548,3.369,557,4.332,562,2.557,568,3.18,603,2.627,725,3.437,734,0.665,740,2.119,742,3.437,743,3.509,751,3.666,752,2.727,753,2.79,758,2.667,762,2.79,766,2.557,821,3.805,967,3.883,968,3.805,969,3.527,970,3.883,971,3.883,972,3.883,1028,1.327,1036,2.561,1045,2.762,1058,2.352,1364,1.75,1365,1.75,1366,1.75,1397,1.589,1508,2.857,1902,3.088,1903,4.564,1907,3.006,1908,2.857,1909,2.857,1910,2.929,1911,3.006,1912,3.006,1913,2.857,1914,3.006,4236,5.364,4237,7.21,4238,5.364,4239,5.364]],["title/classes/UpdateBimodalConfig.html",[44,0.06,1909,2.669]],["body/classes/UpdateBimodalConfig.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,10,0.78,14,1.146,20,0.36,21,0.395,22,0.005,24,0.82,25,0.414,29,0.06,44,0.121,46,1.478,47,1.057,48,0.381,64,1.161,75,1.28,95,1.478,113,3.37,114,3.538,116,2.235,117,2.274,118,2.274,119,2.274,120,2.081,121,2.274,122,2.274,130,0.003,131,0.003,135,3.042,138,3.271,179,4.027,183,2.079,203,2.295,207,1.145,209,1.091,235,0.57,268,2.019,269,2.132,308,0.965,331,0.91,385,1.38,501,1.234,547,3.686,548,2.542,557,4.353,562,2.594,568,3.211,603,2.632,725,3.47,734,0.674,740,2.134,742,3.47,743,3.543,751,2.766,752,2.766,753,2.83,758,2.706,762,2.83,766,2.594,821,3.832,967,3.911,968,3.832,969,3.552,970,3.911,971,3.911,972,3.911,1028,1.346,1036,2.569,1045,2.778,1058,2.374,1364,1.775,1365,1.775,1366,1.775,1397,1.612,1508,2.898,1902,3.132,1903,4.596,1907,3.049,1908,2.898,1909,3.878,1910,2.971,1911,3.049,1912,3.049,1913,2.898,1914,3.049,3806,4.245,4240,7.279,4241,5.441]],["title/classes/UpdateBottomSheetDOI.html",[44,0.06,1894,2.252]],["body/classes/UpdateBottomSheetDOI.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.709,20,0.631,21,0.4,22,0.005,24,0.746,25,0.394,29,0.062,44,0.124,47,0.597,48,0.346,64,1.035,108,1.121,130,0.003,131,0.003,183,1.455,203,2.338,207,1.09,209,0.992,235,0.518,268,1.889,269,2.172,308,0.877,312,1.932,316,1.943,318,2.956,331,1.133,385,1.254,501,1.121,603,2.541,629,2.02,724,1.844,734,1.291,765,1.193,1004,2.032,1020,1.223,1028,1.932,1031,2.077,1032,1.569,1036,2.657,1084,2.104,1088,2.366,1178,2.181,1215,2.181,1343,1.893,1348,2.022,1409,2.049,1498,1.998,1556,2.223,1557,2.223,1558,2.181,1585,2.032,1596,2.266,1866,2.266,1867,2.311,1871,2.311,1872,2.181,1873,4.349,1874,2.266,1875,2.311,1876,2.223,1877,2.311,1878,2.266,1879,2.803,1880,2.311,1881,2.266,1882,2.266,1883,2.266,1884,2.266,1885,3.187,1886,2.266,1887,2.223,1888,2.266,1889,2.266,1890,2.223,1891,2.181,1892,2.266,1893,2.223,1894,3.066,1895,2.266,1896,2.266,1897,2.311,1898,2.266,1899,2.311,1900,2.311,1901,2.311,2112,3.02,4242,6.822,4243,4.946]],["title/classes/UpdateBottomSheetData.html",[44,0.06,1913,2.669]],["body/classes/UpdateBottomSheetData.html",[2,0.038,3,0.038,4,0.032,8,0.22,9,0.402,10,0.781,14,1.148,20,0.361,21,0.395,22,0.005,24,0.822,25,0.415,29,0.06,44,0.121,46,1.48,47,1.057,48,0.382,64,1.162,75,1.283,95,1.48,113,3.374,114,3.541,116,2.24,117,2.279,118,2.279,119,2.279,120,2.083,121,2.279,122,2.279,130,0.003,131,0.003,135,3.047,138,3.276,179,3.215,183,1.869,203,2.295,207,1.147,209,1.093,235,0.571,268,2.02,269,2.132,308,0.967,331,1.065,385,1.383,501,1.236,547,3.276,548,2.548,557,4.356,562,2.6,568,3.215,603,2.633,725,3.475,734,0.904,740,2.136,742,3.475,743,3.548,751,2.772,752,2.772,753,2.836,758,2.712,762,2.836,766,2.6,821,3.837,967,3.915,968,3.837,969,3.556,970,3.915,971,3.915,972,3.915,1028,1.803,1036,2.57,1045,2.781,1058,2.378,1364,1.779,1365,1.779,1366,1.779,1397,1.616,1508,2.905,1902,3.139,1903,4.601,1907,3.055,1908,2.905,1909,2.905,1910,2.977,1911,3.055,1912,3.055,1913,3.883,1914,3.055,2112,3.33,4244,7.29,4245,5.453]],["title/classes/UpdateBottomSheetInfo.html",[44,0.06,1893,2.252]],["body/classes/UpdateBottomSheetInfo.html",[2,0.054,3,0.034,4,0.029,8,0.199,9,0.376,10,0.709,20,0.631,21,0.4,22,0.005,24,0.746,25,0.394,29,0.062,44,0.124,47,0.597,48,0.346,64,1.035,108,1.121,130,0.003,131,0.003,183,1.455,203,2.338,207,1.09,209,0.992,235,0.518,268,1.889,269,2.172,308,0.877,312,1.932,316,1.943,318,2.956,331,1.133,385,1.254,501,1.121,603,2.541,629,1.686,724,1.844,734,1.291,765,1.193,1004,2.032,1020,1.223,1028,1.932,1031,2.689,1032,1.569,1036,2.657,1084,2.104,1088,2.366,1178,2.181,1215,2.181,1343,1.893,1348,2.022,1409,2.049,1498,1.998,1556,2.223,1557,2.223,1558,2.181,1585,2.032,1596,2.266,1866,2.266,1867,2.311,1871,2.311,1872,2.181,1873,4.349,1874,2.266,1875,2.311,1876,2.223,1877,2.311,1878,2.266,1879,2.803,1880,2.311,1881,2.266,1882,2.266,1883,2.266,1884,2.266,1885,3.187,1886,2.266,1887,2.223,1888,2.266,1889,2.266,1890,2.223,1891,2.181,1892,2.266,1893,3.066,1894,2.223,1895,2.266,1896,2.266,1897,2.311,1898,2.266,1899,2.311,1900,2.311,1901,2.311,2112,3.02,4246,6.822,4247,4.946]],["title/classes/UpdateConfig.html",[44,0.06,1558,2.21]],["body/classes/UpdateConfig.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.709,20,0.631,21,0.4,22,0.005,24,0.746,25,0.394,29,0.062,44,0.124,47,0.597,48,0.346,64,1.035,108,1.122,130,0.003,131,0.003,183,1.948,203,2.338,207,1.091,209,0.993,235,0.519,268,1.889,269,2.172,308,0.878,312,1.933,316,1.944,318,2.957,331,1.115,385,1.256,501,1.122,603,2.542,629,1.687,724,2.389,734,1.291,765,1.194,1004,2.034,1020,1.225,1028,1.689,1031,2.078,1032,1.57,1036,2.657,1084,2.106,1088,2.367,1178,2.183,1215,2.183,1343,1.894,1348,2.023,1409,2.05,1498,2,1556,2.225,1557,2.225,1558,3.011,1585,2.034,1596,2.268,1866,2.268,1867,2.313,1871,2.313,1872,2.183,1873,4.35,1874,2.268,1875,2.313,1876,2.225,1877,2.313,1878,2.268,1879,2.804,1880,2.313,1881,2.268,1882,2.268,1883,2.268,1884,2.268,1885,3.19,1886,2.268,1887,2.225,1888,2.268,1889,2.268,1890,2.225,1891,2.183,1892,2.268,1893,2.225,1894,2.225,1895,2.268,1896,2.268,1897,2.313,1898,2.268,1899,2.313,1900,2.313,1901,2.313,3806,3.862,4248,6.827,4249,4.951]],["title/classes/UpdateGetFromCache.html",[44,0.06,1895,2.295]],["body/classes/UpdateGetFromCache.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.71,20,0.631,21,0.4,22,0.005,24,1.271,25,0.395,29,0.062,44,0.124,47,0.598,48,0.347,64,1.036,108,1.124,130,0.003,131,0.003,183,1.457,203,2.338,207,1.092,209,0.994,235,0.519,268,1.89,269,2.172,308,0.879,312,1.934,316,1.945,318,2.959,331,1.115,385,1.257,501,1.124,603,2.542,629,1.687,724,1.847,734,1.288,765,1.195,1004,2.036,1020,1.226,1028,1.69,1031,2.08,1032,1.572,1036,2.658,1084,2.108,1088,2.368,1178,2.186,1215,2.186,1343,1.895,1348,2.708,1409,2.052,1498,2.002,1556,2.227,1557,2.227,1558,2.186,1585,2.036,1596,2.27,1866,2.27,1867,2.315,1871,2.315,1872,2.186,1873,4.351,1874,2.27,1875,2.315,1876,2.227,1877,2.315,1878,2.27,1879,2.806,1880,2.315,1881,2.27,1882,2.27,1883,2.27,1884,2.27,1885,3.192,1886,2.27,1887,2.227,1888,2.27,1889,2.27,1890,2.227,1891,2.186,1892,2.27,1893,2.227,1894,2.227,1895,3.13,1896,2.27,1897,2.315,1898,2.27,1899,2.315,1900,2.315,1901,2.315,4250,4.956,4251,6.832,4252,4.956]],["title/classes/UpdateGraphWidth.html",[44,0.06,1907,2.808]],["body/classes/UpdateGraphWidth.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.401,10,0.778,14,1.143,20,0.359,21,0.395,22,0.005,24,0.819,25,0.414,29,0.06,44,0.121,46,1.476,47,1.157,48,0.38,64,1.16,75,1.277,95,1.476,113,3.366,114,3.535,116,2.23,117,2.269,118,2.269,119,2.269,120,2.078,121,2.269,122,2.269,130,0.003,131,0.003,135,3.038,138,3.266,179,3.206,183,1.866,203,2.294,207,1.144,209,1.089,235,0.569,268,2.019,269,2.131,308,0.963,331,0.909,385,1.377,501,1.231,547,3.266,548,2.536,557,4.349,562,2.588,568,3.206,603,2.643,725,3.465,734,0.673,740,2.535,742,3.465,743,3.538,751,2.76,752,2.76,753,2.824,758,2.7,762,2.824,766,2.588,821,3.828,967,3.906,968,3.828,969,3.548,970,3.906,971,3.906,972,3.906,1028,1.343,1036,2.568,1045,2.776,1058,2.371,1364,1.771,1365,1.771,1366,1.771,1397,2.154,1508,2.892,1902,3.126,1903,4.591,1907,4.073,1908,2.892,1909,2.892,1910,2.964,1911,3.042,1912,3.042,1913,2.892,1914,3.042,4253,5.429,4254,7.269,4255,5.429]],["title/classes/UpdateLinksData.html",[44,0.06,752,2.548]],["body/classes/UpdateLinksData.html",[2,0.034,3,0.034,4,0.03,8,0.2,9,0.377,10,1.342,14,1.046,20,0.329,21,0.398,22,0.005,24,1.272,25,0.395,29,0.059,44,0.119,46,1.389,47,1.213,48,0.347,64,1.117,75,1.168,95,1.389,113,3.215,114,3.406,116,3.465,117,3.697,118,3.697,119,3.697,120,2.532,121,3.697,122,3.697,130,0.003,131,0.003,135,3.271,138,3.074,179,3.017,183,1.798,203,2.266,207,1.352,209,0.996,235,0.52,268,2.077,269,2.105,308,0.881,331,0.936,385,1.259,501,1.126,547,3.074,548,2.32,557,4.217,562,2.367,568,3.017,603,2.599,725,3.261,734,0.615,738,4.506,740,2.036,742,3.261,743,3.33,751,2.524,752,3.478,753,2.583,758,2.469,762,2.583,766,2.367,821,3.657,967,3.731,968,3.657,969,3.389,970,3.731,971,3.731,972,3.731,1028,1.228,1036,2.52,1045,2.675,1058,2.231,1364,1.62,1365,1.62,1366,1.62,1397,1.471,1508,2.645,1902,2.859,1903,4.385,1907,2.782,1908,2.645,1909,2.645,1910,2.711,1911,2.782,1912,2.782,1913,2.645,1914,4.957,4256,4.966,4257,6.841,4258,4.966,4259,4.966,4260,4.966,4261,4.966,4262,4.966,4263,4.966,4264,4.966]],["title/classes/UpdateLoadingText.html",[44,0.06,1037,2.252]],["body/classes/UpdateLoadingText.html",[2,0.037,3,0.037,4,0.032,8,0.214,9,0.395,10,0.761,20,0.642,21,0.403,22,0.005,25,0.409,29,0.062,44,0.125,48,0.372,64,0.949,130,0.003,131,0.003,203,2.353,207,1.131,209,1.065,235,0.557,268,1.718,269,2.185,272,2.943,308,0.942,310,1.533,312,1.314,316,2.04,331,0.795,350,1.533,382,1.493,501,1.204,556,3.16,558,3.374,603,1.84,629,1.872,734,1.123,755,2.301,756,1.4,763,3.111,764,2.01,765,1.282,1015,2.01,1025,2.387,1026,2.482,1027,4.13,1028,2.24,1030,2.845,1031,2.18,1032,1.685,1033,2.387,1034,3.9,1035,3.446,1036,2.427,1037,3.219,1038,2.434,1039,2.343,1040,2.343,1041,2.387,1042,2.387,1043,2.387,1044,2.301,1045,1.685,1046,2.387,1047,2.387,1048,2.387,1049,2.11,1050,2.434,1051,2.434,1052,2.22,1053,2.343,1054,2.387,1055,2.387,1056,2.343,1057,2.387,1058,2.336,1059,2.387,1062,4.145,4265,7.163,4266,5.312]],["title/classes/UpdateMode.html",[44,0.06,1884,2.295]],["body/classes/UpdateMode.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.71,20,0.655,21,0.4,22,0.005,24,0.747,25,0.395,29,0.062,44,0.124,47,0.598,48,0.347,64,1.036,108,1.124,130,0.003,131,0.003,183,1.457,203,2.338,207,1.092,209,0.994,235,0.519,268,1.89,269,2.172,308,0.879,312,1.934,316,1.945,318,2.959,331,1.115,385,1.257,501,1.124,603,2.542,629,1.687,724,1.847,734,1.288,765,1.195,1004,2.036,1020,1.226,1028,1.69,1031,2.08,1032,1.572,1036,2.658,1084,2.108,1088,2.368,1178,2.186,1215,2.186,1343,1.895,1348,2.024,1409,2.052,1498,2.002,1556,2.227,1557,2.227,1558,2.186,1585,2.036,1596,2.27,1866,2.27,1867,2.315,1871,2.315,1872,2.186,1873,4.351,1874,2.27,1875,2.315,1876,2.227,1877,2.315,1878,2.27,1879,2.806,1880,2.315,1881,2.27,1882,2.27,1883,2.27,1884,3.13,1885,4.269,1886,2.27,1887,2.227,1888,2.27,1889,2.27,1890,2.227,1891,2.186,1892,2.27,1893,2.227,1894,2.227,1895,2.27,1896,2.27,1897,2.315,1898,2.27,1899,2.315,1900,2.315,1901,2.315,4267,4.956,4268,6.832,4269,4.956]],["title/classes/UpdateOmapConfig.html",[44,0.06,1508,2.669]],["body/classes/UpdateOmapConfig.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,10,0.78,14,1.146,20,0.36,21,0.395,22,0.005,24,0.82,25,0.414,29,0.06,44,0.121,46,1.478,47,1.057,48,0.381,64,1.161,75,1.28,95,1.478,113,3.37,114,3.538,116,2.235,117,2.274,118,2.274,119,2.274,120,2.081,121,2.274,122,2.274,130,0.003,131,0.003,135,3.042,138,3.271,179,3.211,183,2.079,203,2.295,207,1.145,209,1.091,235,0.57,268,2.019,269,2.132,308,0.965,331,0.91,385,1.846,501,1.234,547,3.271,548,2.542,557,4.353,562,2.594,568,3.211,603,2.632,725,4.353,734,0.674,740,2.134,742,3.47,743,3.543,751,2.766,752,2.766,753,2.83,758,2.706,762,2.83,766,2.594,821,3.832,967,3.911,968,3.832,969,3.552,970,3.911,971,3.911,972,3.911,1028,1.346,1036,2.569,1045,2.778,1058,2.374,1364,1.775,1365,1.775,1366,1.775,1397,1.612,1508,3.878,1902,3.132,1903,4.596,1907,3.049,1908,2.898,1909,2.898,1910,2.971,1911,3.049,1912,3.049,1913,2.898,1914,3.049,3806,4.245,4270,7.279,4271,5.441]],["title/classes/UpdatePlaygroundData.html",[44,0.06,1891,2.21]],["body/classes/UpdatePlaygroundData.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.709,20,0.655,21,0.4,22,0.005,24,0.746,25,0.394,29,0.062,44,0.124,47,0.597,48,0.346,64,1.035,108,1.122,130,0.003,131,0.003,183,1.456,203,2.338,207,1.091,209,0.993,235,0.519,268,1.889,269,2.172,308,0.878,312,1.933,316,1.944,318,3.188,331,1.138,385,1.256,501,1.122,603,2.542,629,1.687,724,1.846,734,1.288,765,1.194,1004,2.034,1020,1.225,1028,1.689,1031,2.078,1032,1.57,1036,2.657,1084,2.106,1088,2.367,1178,2.183,1215,2.183,1343,1.894,1348,2.023,1409,2.05,1498,2,1556,2.225,1557,2.225,1558,2.183,1585,2.034,1596,2.268,1866,2.268,1867,2.313,1871,2.313,1872,2.183,1873,4.35,1874,2.268,1875,2.313,1876,2.225,1877,2.313,1878,2.268,1879,2.804,1880,2.313,1881,2.268,1882,2.268,1883,2.268,1884,2.268,1885,3.19,1886,2.268,1887,2.225,1888,2.268,1889,2.268,1890,2.225,1891,3.011,1892,2.268,1893,2.225,1894,2.225,1895,2.268,1896,2.268,1897,2.313,1898,2.268,1899,2.313,1900,2.313,1901,2.313,2112,3.023,4272,6.827,4273,4.951]],["title/classes/UpdatePrevSheet.html",[44,0.06,1886,2.295]],["body/classes/UpdatePrevSheet.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.709,20,0.655,21,0.4,22,0.005,24,0.746,25,0.394,29,0.062,44,0.124,47,0.597,48,0.346,64,1.035,108,1.122,130,0.003,131,0.003,183,1.456,203,2.338,207,1.091,209,0.993,235,0.519,268,1.889,269,2.172,308,0.878,312,1.933,316,1.944,318,2.957,331,1.115,385,1.256,501,1.122,603,2.542,629,1.687,724,1.846,734,1.299,765,1.194,1004,2.034,1020,1.225,1028,1.689,1031,2.078,1032,1.57,1036,2.657,1084,2.106,1088,2.367,1178,2.183,1215,2.183,1343,1.894,1348,2.023,1409,2.05,1498,2,1556,2.225,1557,2.225,1558,2.183,1585,2.034,1596,2.268,1866,2.268,1867,2.313,1871,2.313,1872,2.183,1873,4.35,1874,2.268,1875,2.313,1876,2.225,1877,2.313,1878,2.268,1879,2.804,1880,2.313,1881,2.268,1882,2.268,1883,2.268,1884,2.268,1885,3.19,1886,3.127,1887,3.068,1888,2.268,1889,2.268,1890,2.225,1891,2.183,1892,2.268,1893,2.225,1894,2.225,1895,2.268,1896,2.268,1897,2.313,1898,2.268,1899,2.313,1900,2.313,1901,2.313,2187,3.498,4274,6.827,4275,4.951]],["title/classes/UpdateReport.html",[44,0.06,1882,2.295]],["body/classes/UpdateReport.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.709,20,0.631,21,0.4,22,0.005,24,0.746,25,0.394,29,0.062,44,0.124,47,0.597,48,0.346,64,1.035,108,1.122,130,0.003,131,0.003,183,1.456,203,2.338,207,1.091,209,0.993,235,0.519,268,1.889,269,2.172,308,0.878,312,2.315,316,1.944,318,2.957,331,1.115,385,1.256,501,1.122,603,2.542,629,1.687,724,1.846,734,1.288,765,1.194,1004,3.46,1020,1.225,1028,1.689,1031,2.078,1032,1.57,1036,2.657,1084,2.106,1088,2.367,1178,2.183,1215,2.183,1343,1.894,1348,2.023,1409,2.05,1498,2,1556,2.225,1557,2.225,1558,2.183,1585,2.034,1596,2.268,1866,2.268,1867,2.313,1871,2.313,1872,2.183,1873,4.35,1874,2.268,1875,2.313,1876,2.225,1877,2.313,1878,2.268,1879,2.804,1880,2.313,1881,2.268,1882,3.127,1883,3.127,1884,2.268,1885,3.19,1886,2.268,1887,2.225,1888,2.268,1889,2.268,1890,2.225,1891,2.183,1892,2.268,1893,2.225,1894,2.225,1895,2.268,1896,2.268,1897,2.313,1898,2.268,1899,2.313,1900,2.313,1901,2.313,4276,4.951,4277,6.827,4278,4.951]],["title/classes/UpdateSelectedOrgansBeforeFilter.html",[44,0.06,1898,2.295]],["body/classes/UpdateSelectedOrgansBeforeFilter.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.708,20,0.631,21,0.4,22,0.005,24,0.745,25,0.394,29,0.062,44,0.124,47,0.596,48,0.346,64,1.034,108,1.12,130,0.003,131,0.003,183,1.453,203,2.337,207,1.09,209,0.991,235,0.518,268,1.889,269,2.171,308,0.876,312,1.931,316,1.941,318,2.954,331,1.115,385,1.253,501,1.12,603,2.541,629,1.685,724,1.843,734,1.287,765,1.192,1004,2.03,1020,1.222,1028,1.686,1031,2.075,1032,1.567,1036,2.657,1084,2.102,1088,2.365,1178,2.179,1215,2.179,1343,2.166,1348,2.02,1409,2.652,1498,1.996,1556,2.22,1557,2.22,1558,2.179,1585,2.03,1596,2.263,1866,2.263,1867,2.308,1871,2.308,1872,2.179,1873,4.349,1874,2.263,1875,2.308,1876,2.22,1877,2.308,1878,2.263,1879,3.207,1880,2.308,1881,2.263,1882,2.263,1883,2.263,1884,2.263,1885,3.185,1886,2.263,1887,2.22,1888,2.263,1889,2.263,1890,2.22,1891,2.179,1892,2.263,1893,2.22,1894,2.22,1895,2.263,1896,2.263,1897,2.308,1898,3.123,1899,3.185,1900,3.185,1901,3.932,4279,4.941,4280,6.818,4281,4.941]],["title/classes/UpdateSheet.html",[44,0.06,1888,2.295]],["body/classes/UpdateSheet.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.71,20,0.631,21,0.4,22,0.005,24,0.747,25,0.395,29,0.062,44,0.124,47,0.598,48,0.347,64,1.036,108,1.124,130,0.003,131,0.003,183,1.457,203,2.338,207,1.092,209,0.994,235,0.519,268,1.89,269,2.172,308,0.879,312,1.934,316,1.945,318,2.959,331,1.115,385,1.257,501,1.124,603,2.542,629,1.687,724,1.847,734,1.306,765,1.195,1004,2.036,1020,1.226,1028,1.69,1031,2.08,1032,1.572,1036,2.658,1084,2.108,1088,2.368,1178,2.186,1215,2.186,1343,1.895,1348,2.024,1409,2.052,1498,2.002,1556,2.227,1557,2.227,1558,2.186,1585,2.036,1596,2.27,1866,2.27,1867,2.315,1871,2.315,1872,2.186,1873,4.351,1874,2.27,1875,2.315,1876,2.227,1877,2.315,1878,2.27,1879,2.806,1880,2.315,1881,2.27,1882,2.27,1883,2.27,1884,2.27,1885,3.192,1886,2.27,1887,2.227,1888,3.13,1889,2.27,1890,2.227,1891,2.186,1892,2.27,1893,2.227,1894,2.227,1895,2.27,1896,2.27,1897,2.315,1898,2.27,1899,2.315,1900,2.315,1901,2.315,2187,3.502,4282,6.832,4283,4.956]],["title/classes/UpdateVegaSpec.html",[44,0.06,753,2.607]],["body/classes/UpdateVegaSpec.html",[2,0.038,3,0.038,4,0.032,8,0.22,9,0.403,10,0.782,14,1.15,20,0.361,21,0.395,22,0.005,24,0.823,25,0.415,29,0.06,44,0.121,46,1.481,47,1.058,48,0.382,64,1.162,75,1.285,95,1.481,113,3.375,114,3.542,116,2.243,117,2.282,118,2.282,119,2.282,120,2.084,121,2.282,122,2.282,130,0.003,131,0.003,135,3.049,138,3.279,179,3.218,183,1.87,203,2.296,207,1.147,209,1.095,235,0.572,268,2.02,269,2.133,308,0.968,331,0.912,385,1.385,501,1.238,547,3.279,548,2.55,557,4.357,562,2.602,568,3.624,603,2.633,725,3.478,734,0.677,740,2.138,742,3.478,743,4.577,751,2.775,752,2.775,753,3.795,758,2.715,762,2.84,766,2.602,821,3.839,967,3.917,968,3.839,969,3.558,970,3.917,971,3.917,972,3.917,1028,1.35,1036,2.571,1045,2.782,1058,2.38,1364,1.781,1365,1.781,1366,1.781,1397,1.618,1508,2.908,1902,3.143,1903,4.604,1907,3.059,1908,2.908,1909,2.908,1910,2.981,1911,3.059,1912,3.059,1913,2.908,1914,3.059,4284,5.459,4285,7.296,4286,5.459]],["title/classes/UpdateVegaView.html",[44,0.06,1908,2.669]],["body/classes/UpdateVegaView.html",[2,0.038,3,0.038,4,0.032,8,0.22,9,0.403,10,0.782,14,1.15,20,0.361,21,0.395,22,0.005,24,0.823,25,0.415,29,0.06,44,0.121,46,1.481,47,1.058,48,0.382,64,1.162,75,1.285,95,1.481,113,3.375,114,3.542,116,2.243,117,2.282,118,2.282,119,2.282,120,2.084,121,2.282,122,2.282,130,0.003,131,0.003,135,3.049,138,3.279,179,3.218,183,1.87,203,2.296,207,1.147,209,1.095,235,0.572,268,2.02,269,2.133,308,0.968,331,0.912,385,1.385,501,1.238,547,3.279,548,2.55,557,4.357,562,2.602,568,3.624,603,2.633,725,3.478,734,0.677,740,2.138,742,4.483,743,3.551,751,2.775,752,2.775,753,2.84,758,2.715,762,2.84,766,2.602,821,3.839,967,3.917,968,3.839,969,3.558,970,3.917,971,3.917,972,3.917,1028,1.35,1036,2.571,1045,2.782,1058,2.38,1364,1.781,1365,1.781,1366,1.781,1397,1.618,1508,2.908,1902,3.143,1903,4.604,1907,3.059,1908,3.886,1909,2.908,1910,2.981,1911,3.059,1912,3.059,1913,2.908,1914,3.059,4287,5.459,4288,7.296,4289,5.459]],["title/components/UploadComponent.html",[250,1.355,410,1.99]],["body/components/UploadComponent.html",[2,0.033,3,0.021,4,0.043,8,0.123,9,0.264,10,1.036,11,2.001,20,0.478,21,0.316,22,0.005,24,0.46,25,0.297,29,0.018,30,1.973,44,0.036,48,0.536,53,0.941,58,1.841,64,0.404,95,1.882,102,2.573,108,1.334,130,0.002,131,0.002,141,2.068,147,2.375,167,1.709,181,3.13,184,0.675,188,0.745,202,1.7,207,1.19,209,1.335,211,2.3,215,0.619,219,3.812,232,2.573,235,0.32,236,3.385,245,2.377,250,1.8,251,1.212,252,1.962,253,3.021,254,1.275,255,1.275,256,1.086,258,2.325,259,3.388,260,0.835,261,2.651,262,4.048,264,1.929,266,1.929,268,1.519,282,4.928,287,1.212,298,2.3,305,5.501,308,0.541,310,0.88,316,1.36,318,1.154,329,1.756,331,1.058,339,1.863,341,1.996,342,1.929,343,1.275,344,2.783,345,1.275,346,1.275,347,1.212,348,1.275,349,1.212,350,0.88,351,1.275,352,1.212,353,1.275,354,1.192,355,1.275,356,1.212,357,1.086,358,1.275,359,1.212,360,1.275,361,1.212,362,1.275,363,1.212,364,1.996,365,1.212,366,1.275,367,1.212,368,1.275,369,1.192,370,1.275,371,1.173,372,1.275,373,1.212,374,1.275,375,1.212,376,1.275,377,1.212,378,1.275,379,1.232,380,1.275,381,1.212,382,0.857,383,1.275,384,1.212,385,1.834,386,1.275,387,1.212,388,2.52,389,1.275,390,1.212,391,1.275,392,1.232,393,1.275,394,1.212,395,1.275,396,1.232,397,1.275,398,1.212,399,1.275,400,1.212,401,1.136,402,1.275,403,1.212,404,1.192,405,1.275,406,1.253,407,1.275,408,1.212,409,1.275,410,2.645,411,1.212,412,1.232,413,1.154,414,1.275,415,1.275,528,1.992,556,2.325,569,2.852,587,3.726,588,3.947,604,2.068,632,2.38,651,3.726,695,4.162,696,3.812,721,1.039,734,1.149,739,1.494,740,1.732,763,0.995,765,0.736,929,5.53,986,3.966,1036,0.794,1071,5.978,1072,7.831,1074,5.284,1075,1.666,1077,4.288,1078,3.966,1084,3.71,1087,3.012,1091,2.739,1097,3.388,1101,4.288,1104,3.966,1106,2.901,1107,2.78,1108,2.56,1109,2.602,1112,2.112,1113,2.996,1114,1.897,1122,4.288,1125,3.966,1133,1.397,1134,2.676,1135,3.966,1136,1.709,1142,2.739,1168,2.739,1176,4.288,1177,5.284,1178,2.596,1182,2.739,1183,2.739,1184,2.739,1188,2.739,1192,3.118,1195,2.533,1196,2.533,1197,2.533,1198,2.533,1199,2.257,1200,2.533,1201,2.533,1205,2.533,1206,2.739,1207,2.739,1208,2.739,1216,4.288,1217,3.966,1218,3.726,1219,4.288,1220,4.288,1221,5.53,1222,3.966,1223,3.966,1224,3.534,1225,4.288,1226,5.978,1227,4.288,1228,5.978,1229,3.966,1230,4.288,1231,3.012,1232,4.288,1233,4.288,1234,2.829,1235,4.288,1236,3.966,1237,3.375,1238,4.288,1239,3.966,1240,3.534,1241,3.966,1242,3.726,1243,4.72,1244,4.288,1245,2.996,1246,4.288,1247,4.288,1248,5.978,1251,2.739,1253,4.375,1254,2.829,1256,1.924,1257,1.992,1262,3.118,1263,5.284,1264,3.966,1266,2.38,1267,3.712,1268,3.712,1269,4.288,1270,2.38,1271,3.464,1272,4.559,1273,5.326,1274,1.863,1275,1.807,1276,4.162,1277,4.514,1278,2.155,1279,2.155,1280,2.155,1281,4.168,1282,4.288,1283,5.978,1284,3.947,1285,2.155,1286,2.739,1287,2.739,1288,3.812,1289,1.863,1290,2.155,1291,2.533,1292,4.288,1293,3.99,1294,4.288,1295,4.72,1296,2.426,1297,4.066,1298,4.414,1299,4.348,1300,3.99,1301,3.99,1302,2.739,1303,4.888,1305,3.945,1306,1.551,1311,3.298,1312,1.863,1314,1.756,1317,4.355,1318,2.38,1319,2.257,1320,2.533,1321,2.533,1322,2.739,1323,2.533,1325,2.739,1326,2.739,1327,2.739,1328,2.739,1408,2.871,1635,2.533,1840,2.38,1851,1.807,2003,3.712,2036,3.726,2037,2.533,2038,2.38,2039,3.99,2041,2.739,2216,5.284,2217,4.288,2269,2.533,2274,2.068,2336,2.068,2471,2.257,2721,2.739,3420,5.53,3438,2.739,3482,2.739,3483,5.284,3571,2.739,4290,3.051,4291,6.659,4292,7.229,4293,4.776,4294,3.051,4295,3.051,4296,3.051,4297,3.051,4298,3.051,4299,3.051,4300,3.051,4301,6.659,4302,3.051,4303,3.051,4304,4.776,4305,3.051,4306,3.051,4307,3.051,4308,3.051,4309,3.051,4310,3.051,4311,3.051,4312,4.776,4313,3.051,4314,3.051,4315,3.051,4316,3.051,4317,3.051,4318,3.051]],["title/interfaces/UploadForm.html",[0,0.41,1408,1.99]],["body/interfaces/UploadForm.html",[0,0.85,1,0.973,2,0.03,3,0.042,4,0.026,8,0.173,9,0.341,10,1.25,11,1.561,13,1.307,14,1.3,15,2.252,16,2.032,18,2.668,20,0.718,21,0.351,22,0.005,24,1.491,26,1.83,27,2.282,29,0.062,39,1.83,41,1.176,46,1.605,47,1.208,48,0.629,50,1.627,75,1.01,88,1.325,94,1.103,95,1.701,97,2.032,109,1.362,120,1.089,130,0.003,131,0.003,146,1.381,174,1.505,175,1.483,176,1.483,177,1.483,178,1.483,183,1.316,235,0.647,260,1.98,261,1.117,295,2.165,331,0.93,466,1.575,620,1.705,629,1.561,660,2.453,703,1.705,721,2.462,724,1.669,731,2.072,734,0.896,739,1.932,740,1.606,756,1.131,960,1.575,962,1.462,1020,2.158,1088,1.207,1106,1.625,1107,3.602,1108,3.537,1109,3.595,1112,2.767,1113,3.762,1114,3.328,1185,1.677,1186,1.551,1245,1.677,1296,2.427,1330,1.763,1331,2.581,1332,2.536,1333,1.734,1334,1.677,1335,1.763,1336,1.763,1337,1.763,1338,1.763,1339,1.763,1340,1.763,1341,2.494,1342,1.734,1343,1.713,1344,1.763,1345,1.794,1346,1.763,1347,1.734,1348,1.272,1349,1.763,1350,1.794,1351,1.794,1352,1.794,1353,1.794,1354,1.794,1355,1.794,1356,1.794,1357,1.794,1358,1.794,1359,1.763,1360,1.763,1361,2.581,1362,2.581,1363,1.794,1364,1.4,1365,1.4,1366,1.4,1367,1.763,1368,1.734,1369,1.763,1370,2.536,1371,2.581,1372,2.581,1373,1.763,1374,1.794,1375,1.651,1376,1.794,1377,1.794,1378,1.794,1379,1.794,1380,1.794,1381,1.705,1382,2.971,1383,1.763,1384,1.794,1385,1.794,1386,1.705,1387,1.794,1388,1.794,1389,2.536,1390,1.794,1391,2.536,1392,1.734,1393,2.536,1394,1.794,1395,1.794,1396,1.734,1397,1.83,1398,1.763,1399,2.536,1400,1.794,1401,1.794,1402,1.794,1403,1.794,1404,1.794,1405,1.794,1406,1.794,1407,1.763,1408,2.453,1409,1.289,1410,1.794]],["title/modules/UploadModule.html",[184,1.108,3591,3.708]],["body/modules/UploadModule.html",[2,0.046,3,0.046,4,0.049,22,0.005,25,0.527,29,0.04,44,0.079,130,0.004,131,0.004,184,1.477,186,2.376,187,2.526,188,1.631,189,3.422,190,2.526,191,2.449,192,3.369,198,3.144,199,2.487,200,2.376,214,3.047,215,1.355,243,3.095,278,3.249,401,2.487,410,4.144,424,6.479,454,4.717,455,5.208,1136,3.74,1416,6.258,1417,6.06,1419,3.3,1420,2.608,1422,5.423,1423,4.358,1424,4.131,1425,5.423,1426,4.358,1427,5.423,1428,5.239,1429,4.94,1430,4.525,1431,4.94,1432,3.881,1433,3.119,1434,7.458,1435,5.993,2282,5.993,3591,7.75,4319,5.993,4320,6.675,4321,5.993,4322,5.993,4323,6.675]],["title/injectables/VegaService.html",[709,2.094,1509,3.909]],["body/injectables/VegaService.html",[2,0.026,3,0.026,4,0.023,8,0.153,9,0.311,10,1.195,14,0.797,20,0.445,21,0.357,22,0.005,25,0.507,29,0.023,30,2.811,41,2.18,43,1.669,44,0.045,45,3.346,47,0.456,48,0.635,53,1.167,54,1.581,58,2.103,59,1.432,60,1.432,64,0.746,108,1.276,130,0.003,131,0.003,179,2.483,183,1.588,202,2.003,207,1.289,209,1.673,211,2.75,215,0.768,218,1.842,219,1.881,220,2.015,230,4.848,232,2.003,236,1.924,245,1.528,256,3.229,268,1.879,269,1.887,295,1.974,298,2.2,323,4.346,331,1.007,442,2.178,495,2.565,531,4.716,547,2.53,548,3.479,556,1.217,567,3.978,568,4.073,569,1.346,572,3.978,624,3.142,627,4.39,629,1.215,643,4.729,692,4.675,696,1.881,709,2.353,710,5.624,711,2.12,713,6.036,717,2.673,718,5.924,722,5.642,724,2.656,725,2.684,726,4.392,731,2.499,734,1.161,736,5.054,738,2.178,742,4.65,743,4.495,745,3.55,749,2.31,750,2.673,752,1.924,754,2.565,755,1.638,756,1.483,757,2.8,759,2.565,760,2.565,761,2.673,763,2.429,764,1.432,765,0.913,766,1.804,771,2.386,773,5.642,774,2.673,821,1.768,911,2.673,945,6.106,958,2.673,959,3.142,960,2.466,961,2.952,962,1.288,963,2.952,964,3.142,965,2.952,966,3.142,967,1.804,968,1.768,969,1.638,970,1.804,971,1.804,972,1.804,976,4.166,984,3.397,985,3.142,1028,1.392,1031,1.714,1032,1.2,1034,1.581,1049,1.503,1052,1.581,1053,1.669,1075,4.556,1093,4.46,1138,1.968,1139,1.968,1141,2.241,1190,4.39,1192,3.676,1271,1.968,1306,1.924,1509,4.392,1575,2.673,1576,3.397,1585,1.554,1606,2.8,1607,3.397,1608,3.397,1609,3.397,1629,3.142,1630,3.142,1631,3.142,1632,3.142,1633,3.142,1720,3.241,1727,2.8,1728,3.397,1879,2.762,1908,2.015,2456,3.397,2489,5.048,2496,3.978,2497,2.8,2644,5.054,2880,6.036,2907,4.166,3323,3.397,3639,4.675,3650,5.054,4033,6.685,4038,3.397,4094,3.397,4101,3.397,4102,3.397,4103,5.054,4324,3.784,4325,5.63,4326,5.63,4327,5.63,4328,5.63,4329,5.63,4330,5.63,4331,5.63,4332,3.784,4333,5.63,4334,5.63,4335,3.784,4336,5.63,4337,5.63,4338,3.784,4339,5.63,4340,6.723,4341,3.784,4342,5.63,4343,5.63,4344,5.63,4345,3.784,4346,5.63,4347,3.784,4348,3.784,4349,5.63,4350,3.784,4351,3.784,4352,3.784,4353,3.784,4354,3.784,4355,3.784,4356,3.784,4357,3.784,4358,3.784,4359,3.784,4360,3.784,4361,3.784,4362,3.784,4363,3.784,4364,3.784,4365,3.784,4366,3.784,4367,3.784,4368,3.784,4369,3.784,4370,3.784,4371,3.784,4372,3.784,4373,6.723,4374,3.784,4375,3.784,4376,3.784,4377,3.784,4378,3.784,4379,5.63,4380,3.784,4381,3.784,4382,3.784,4383,3.784,4384,3.784,4385,3.784,4386,3.784,4387,3.784,4388,3.784,4389,3.784,4390,3.784,4391,3.784,4392,3.784,4393,3.784,4394,3.784,4395,3.784]],["title/interfaces/Version.html",[0,0.41,1020,1.239]],["body/interfaces/Version.html",[0,0.853,1,1.003,2,0.03,3,0.043,4,0.026,8,0.178,9,0.348,11,1.587,13,1.346,14,1.329,15,2.283,16,2.067,18,2.687,20,0.718,21,0.306,22,0.005,24,1.499,26,1.869,27,2.313,29,0.062,39,1.869,41,1.211,46,1.627,47,1.213,48,0.635,50,1.662,75,1.041,88,1.365,94,1.136,95,1.281,97,2.067,109,1.403,120,1.122,130,0.003,131,0.003,146,1.423,174,1.551,175,1.528,176,1.528,177,1.528,178,1.528,183,1.345,235,0.661,260,2.014,261,1.151,295,2.212,331,0.941,466,1.623,620,1.757,629,1.587,660,2.506,703,1.757,721,2.504,724,1.705,731,2.117,734,0.911,739,1.973,740,1.641,756,1.166,960,1.623,962,1.506,1020,2.243,1088,1.243,1106,1.674,1107,3.388,1108,3.259,1109,3.312,1112,2.795,1113,3.443,1114,2.506,1185,1.729,1186,1.598,1245,1.729,1296,2.957,1330,1.817,1331,2.637,1332,2.592,1333,1.787,1334,1.729,1335,1.817,1336,1.817,1337,1.817,1338,1.817,1339,1.817,1340,1.817,1341,2.548,1342,1.787,1343,1.75,1344,1.817,1345,1.849,1346,1.817,1347,1.787,1348,1.311,1349,1.817,1350,1.849,1351,1.849,1352,1.849,1353,1.849,1354,1.849,1355,1.849,1356,1.849,1357,1.849,1358,1.849,1359,1.817,1360,1.817,1361,2.637,1362,2.637,1363,1.849,1364,1.443,1365,1.443,1366,1.443,1367,1.817,1368,1.787,1369,1.817,1370,2.592,1371,2.637,1372,2.637,1373,1.817,1374,1.849,1375,1.701,1376,1.849,1377,1.849,1378,1.849,1379,1.849,1380,1.849,1381,1.757,1382,3.021,1383,1.817,1384,1.849,1385,1.849,1386,1.757,1387,1.849,1388,1.849,1389,2.592,1390,3.351,1391,2.592,1392,1.787,1393,2.592,1394,1.849,1395,1.849,1396,1.787,1397,1.869,1398,1.817,1399,2.592,1400,1.849,1401,1.849,1402,1.849,1403,1.849,1404,1.849,1405,1.849,1406,1.849,1407,1.817,1408,1.757,1409,1.328,1410,1.849]],["title/interfaces/VersionDetail.html",[0,0.41,1370,2.058]],["body/interfaces/VersionDetail.html",[0,0.848,1,0.945,2,0.029,3,0.042,4,0.025,8,0.168,9,0.333,10,1.429,11,1.535,13,1.268,14,1.273,15,2.221,16,1.998,18,2.648,20,0.717,21,0.369,22,0.005,24,1.484,26,1.79,27,2.25,29,0.062,39,1.79,41,1.141,46,1.583,47,1.234,48,0.623,50,1.592,75,0.98,88,1.286,94,2.003,95,1.227,97,1.998,109,1.321,120,1.057,130,0.003,131,0.003,146,1.34,174,1.461,175,1.439,176,1.439,177,1.439,178,1.439,183,1.288,235,0.868,260,1.947,261,1.084,295,2.119,331,0.919,466,1.528,620,1.655,629,1.535,660,2.4,703,1.655,721,2.421,724,1.634,731,2.028,734,0.881,739,1.89,740,1.572,756,1.098,960,1.528,962,1.418,1020,2.136,1088,1.171,1106,1.577,1107,3.576,1108,3.508,1109,3.566,1112,2.739,1113,3.374,1114,2.4,1185,1.628,1186,1.505,1245,1.628,1296,2.386,1330,1.711,1331,2.525,1332,2.482,1333,1.683,1334,1.628,1335,1.711,1336,1.711,1337,1.711,1338,1.711,1339,1.711,1340,1.711,1341,2.441,1342,1.683,1343,1.676,1344,1.711,1345,1.741,1346,1.711,1347,1.683,1348,1.235,1349,1.711,1350,1.741,1351,1.741,1352,1.741,1353,1.741,1354,1.741,1355,1.741,1356,1.741,1357,1.741,1358,1.741,1359,1.711,1360,1.711,1361,2.525,1362,2.525,1363,1.741,1364,1.359,1365,1.359,1366,1.359,1367,1.711,1368,1.683,1369,1.711,1370,2.921,1371,3.461,1372,3.461,1373,3.204,1374,3.259,1375,1.602,1376,1.741,1377,1.741,1378,1.741,1379,1.741,1380,1.741,1381,1.655,1382,2.921,1383,1.711,1384,1.741,1385,1.741,1386,1.655,1387,1.741,1388,1.741,1389,2.482,1390,1.741,1391,2.482,1392,1.683,1393,2.482,1394,1.741,1395,1.741,1396,1.683,1397,1.79,1398,1.711,1399,2.482,1400,1.741,1401,1.741,1402,1.741,1403,1.741,1404,1.741,1405,1.741,1406,1.741,1407,1.711,1408,1.655,1409,1.251,1410,1.741]],["title/components/VisControlsComponent.html",[250,1.355,411,1.99]],["body/components/VisControlsComponent.html",[2,0.022,3,0.022,4,0.029,8,0.127,9,0.27,10,0.702,11,1.9,14,1.427,20,0.324,21,0.32,22,0.005,25,0.392,29,0.029,30,1.451,41,1.341,44,0.038,46,1.702,48,0.474,53,2.502,58,2.119,59,2.564,60,2.564,64,0.417,98,1.316,102,2.765,108,0.714,130,0.002,131,0.002,181,1.364,183,1.941,188,0.769,202,1.743,207,1.339,209,0.982,211,3.041,215,0.639,218,1.533,219,1.566,220,1.678,247,1.765,250,1.624,251,1.251,252,2.011,253,1.316,254,1.316,255,1.316,256,2.612,260,0.863,261,2.659,262,4.06,264,1.978,266,1.978,268,0.97,287,1.251,298,3.439,300,5.684,310,0.909,323,3.699,339,1.923,341,2.046,342,2.426,343,1.316,344,2.832,345,1.316,346,1.316,347,1.251,348,1.316,349,1.251,350,0.909,351,1.316,352,1.251,353,1.316,354,1.231,355,1.316,356,1.251,357,1.121,358,1.316,359,1.251,360,1.316,361,1.251,362,1.316,363,1.251,364,2.046,365,1.251,366,1.316,367,1.251,368,1.316,369,1.231,370,1.316,371,1.211,372,1.316,373,1.251,374,1.316,375,1.251,376,1.316,377,1.251,378,1.316,379,1.272,380,1.316,381,1.251,382,0.885,383,1.316,384,1.251,385,0.799,386,1.316,387,1.251,388,1.853,389,1.316,390,1.251,391,1.316,392,1.272,393,1.316,394,1.251,395,1.316,396,1.272,397,1.316,398,1.251,399,1.316,400,1.251,401,1.173,402,1.316,403,1.251,404,1.231,405,1.316,406,1.294,407,1.316,408,1.251,409,1.316,410,1.251,411,2.691,412,3.555,413,3.331,414,1.316,415,1.316,547,3.491,556,1.013,557,3.23,558,3.123,562,2.334,569,1.121,574,4.424,598,3.82,638,3.623,669,2.616,675,4.787,695,3.901,696,2.987,724,1.624,731,1.643,734,0.745,739,2.694,740,2.181,763,2.534,764,1.192,765,0.76,784,6.975,1028,0.779,1036,0.819,1049,2.691,1075,3.699,1085,2.489,1087,3.088,1093,4.112,1097,3.458,1112,0.999,1133,3.362,1134,2.744,1138,1.638,1139,1.638,1141,1.866,1190,2.056,1243,5.072,1253,4.428,1254,4.347,1256,1.986,1257,2.056,1262,2.056,1266,2.457,1267,4.273,1268,4.273,1271,3.125,1272,3.088,1273,3.668,1276,5.312,1277,5.497,1278,2.225,1279,2.225,1280,2.225,1281,3.524,1284,5.096,1285,2.225,1288,2.435,1296,1.057,1297,2.99,1298,2.99,1299,3.197,1300,2.135,1301,2.135,1305,2.901,1306,3.444,1310,2.457,1312,4.137,1397,0.933,1447,2.828,1498,2.426,1579,7.151,1585,3.331,1664,1.923,1665,2.225,1720,3.458,1740,3.623,1851,4.014,1853,2.056,1989,2.616,2033,4.989,2451,7.902,2460,2.457,2461,3.82,2462,3.623,2463,2.457,2464,2.457,2471,7.235,2484,6.084,2486,4.244,2665,2.616,2694,4.066,2737,2.616,2816,2.828,2932,2.828,3075,5.185,3212,2.828,3213,5.393,3214,4.396,3219,2.828,3221,2.828,3424,2.828,3574,2.828,3777,4.396,4198,6.588,4396,9.658,4397,6.775,4398,6.775,4399,6.775,4400,6.775,4401,6.775,4402,6.775,4403,4.897,4404,6.775,4405,6.775,4406,6.775,4407,6.007,4408,3.15,4409,3.15,4410,3.15,4411,3.15,4412,3.15,4413,3.15,4414,3.15,4415,3.15,4416,3.15,4417,3.15,4418,3.15,4419,4.897,4420,3.15,4421,3.15,4422,3.15,4423,3.15,4424,3.15,4425,8.611,4426,8.611,4427,6.775,4428,3.15,4429,3.15,4430,6.007,4431,7.769,4432,6.775,4433,7.339,4434,3.15,4435,3.15,4436,3.15,4437,3.15,4438,3.15,4439,3.15,4440,3.15,4441,3.15,4442,3.15,4443,3.15,4444,3.15,4445,3.15,4446,3.15,4447,3.15,4448,3.15,4449,4.897,4450,4.897,4451,4.897,4452,3.15,4453,4.897,4454,3.15,4455,3.15,4456,3.15,4457,4.897,4458,3.15,4459,4.897,4460,3.15,4461,4.897,4462,3.15,4463,4.897,4464,3.15,4465,3.15,4466,4.897,4467,7.769,4468,6.007,4469,6.007,4470,4.897,4471,6.007]],["title/miscellaneous/enumerations.html",[4472,2.718,4473,5.422]],["body/miscellaneous/enumerations.html",[4,0.038,5,3.311,8,0.257,22,0.005,26,2.389,40,3.694,41,2.423,42,3.391,43,2.808,130,0.004,131,0.004,174,2.232,175,2.199,176,2.199,177,2.199,178,2.199,235,1.131,295,2.827,312,1.994,316,2.296,318,3.051,357,2.869,382,2.266,413,3.051,558,3.004,627,5.264,759,5.466,760,5.466,763,3.034,962,2.745,1030,3.203,1133,3.694,1138,4.194,1139,4.194,1330,2.615,1332,3.312,1333,2.571,1334,2.488,1335,2.615,1336,2.615,1337,2.615,1338,2.615,1339,2.615,1340,2.615,1341,3.257,1397,2.389,1844,4.966,1847,4.711,2004,5.466,2148,4.966,2151,5.999,2152,6.253,2336,5.466,2480,4.711,2486,5.697,2491,5.697,2492,5.967,3054,5.287,3056,5.967,3057,5.967,3058,5.967,3059,5.967,3061,5.287,4472,4.156,4473,5.715,4474,8.063,4475,8.063,4476,8.063,4477,5.715,4478,6.366]],["title/miscellaneous/functions.html",[1722,4.469,4472,2.718]],["body/miscellaneous/functions.html",[8,0.338,10,1.441,18,2.387,20,0.59,21,0.383,22,0.005,24,1.13,47,1.117,48,0.703,53,3.038,94,1.46,98,2.376,100,3.6,120,2.127,130,0.003,131,0.003,142,4.698,143,4.994,144,5.131,146,2.41,201,4.435,206,5.847,209,2.016,210,4.017,211,3.401,216,4.721,230,4.867,231,4.721,235,0.971,239,4.721,242,6.224,245,2.296,308,1.643,312,1.406,331,1.105,388,3.173,431,5.119,432,5.104,466,2.749,476,5.104,477,5.104,487,6.729,721,3.154,731,2.991,734,1.179,738,3.273,740,1.479,767,6.729,768,6.729,769,6.729,1058,1.854,1075,4.092,1093,4.199,1483,6.855,1720,4.315,1722,4.207,2307,4.017,2508,4.435,2691,6.596,3128,5.104,3129,6.729,3133,5.104,3134,6.224,3139,5.104,3257,7.9,3719,6.729,4067,5.104,4472,3.712,4479,5.104,4480,7.495,4481,8.002,4482,7.495,4483,6.729,4484,5.685,4485,7.495,4486,5.685,4487,7.495,4488,5.685,4489,5.104,4490,5.685,4491,5.104,4492,5.685,4493,7.495,4494,9.845,4495,7.495,4496,9.845,4497,8.913,4498,5.685,4499,5.685,4500,5.685,4501,5.685,4502,5.685,4503,5.685,4504,5.685,4505,5.685,4506,5.685,4507,7.495,4508,7.495,4509,5.685]],["title/index.html",[8,0.202,2620,4.161]],["body/index.html",[1,0.773,22,0.005,74,3.747,130,0.002,131,0.002,141,1.477,184,0.754,185,6.229,186,1.214,187,1.291,188,0.833,189,1.291,190,1.291,191,1.251,192,1.271,193,3.062,194,3.062,195,3.855,196,4.461,197,4.461,198,1.97,199,1.271,200,1.214,244,5.668,245,3.24,251,3.314,252,1.401,287,3.314,347,3.314,349,3.314,352,3.314,354,3.26,356,3.314,359,3.314,361,3.314,363,3.862,365,3.314,367,3.314,369,3.26,371,3.208,373,3.314,375,3.314,377,3.314,379,3.37,381,3.314,384,3.314,387,3.314,390,3.314,392,3.37,394,3.314,396,3.37,398,3.314,400,3.314,403,3.314,408,3.314,410,3.314,411,3.314,416,7.924,417,3.062,418,3.062,419,3.062,420,3.062,421,3.062,422,4.672,423,6.656,424,5.756,425,5.832,426,6.656,427,4.672,428,5.936,429,7.607,430,5.936,431,3.855,490,2.661,501,0.773,711,1.911,1411,6.864,1412,3.062,1413,3.062,1414,3.062,1415,3.062,1416,5.672,1417,5.584,1669,7.143,1670,3.062,1671,3.062,1672,3.062,1673,3.062,1674,5.936,1675,5.936,1676,6.229,1677,5.936,1687,3.062,1688,3.062,1689,3.062,1855,6.656,1856,3.062,1857,3.062,1859,3.062,2042,3.062,2043,3.062,2044,3.062,2045,3.062,2046,5.936,2080,3.062,2081,3.062,2082,3.062,2139,5.936,2140,3.062,2141,3.062,2142,3.062,2181,5.936,2182,3.062,2183,3.062,2184,3.062,2213,5.243,2214,6.661,2215,5.243,2276,3.062,2277,3.062,2278,3.062,2412,3.062,2413,3.062,2414,3.062,2474,3.062,2475,3.062,2476,3.062,2620,2.832,2768,3.062,2769,3.062,2770,3.062,2771,3.062,2772,5.832,2822,6.656,2823,3.062,2824,3.062,2825,3.062,2895,5.936,2896,3.062,2897,3.062,2898,3.062,2939,3.062,2940,3.062,2941,3.062,2942,3.062,2943,5.229,2980,2.661,3001,3.062,3024,5.937,3025,3.062,3026,3.062,3027,3.062,3185,5.936,3186,3.062,3187,3.062,3188,3.062,3191,6.864,3192,3.062,3193,3.062,3194,3.062,3195,3.062,3196,5.936,3231,3.062,3232,3.062,3233,3.062,3248,2.832,3440,3.062,3441,3.062,3442,3.062,3585,6.864,3586,3.062,3587,3.062,3588,3.062,3589,3.062,3590,5.895,3591,6.864,3603,6.864,3604,3.062,3605,3.062,3606,3.062,3617,3.062,3618,3.062,3620,3.062,3659,3.062,3660,3.062,3661,3.062,3781,3.062,3782,3.062,3783,3.062,3786,3.062,3787,3.062,3788,3.062,3919,3.062,3920,3.062,3921,3.062,3973,3.062,3974,3.062,3975,3.062,4012,3.062,4013,3.062,4014,3.062,4319,3.062,4321,3.062,4322,3.062,4510,3.41,4511,3.41,4512,3.41,4513,3.41,4514,3.41]],["title/modules.html",[186,2.45]],["body/modules.html",[22,0.004,130,0.004,131,0.004,185,4.599,186,2.316,282,7.964,416,5.078,422,4.816,423,4.816,424,4.249,425,4.412,426,4.816,427,4.816,428,4.816,429,4.816,430,4.816,1397,2.423,1411,4.816,1416,4.104,1417,3.974,1669,4.816,1674,4.816,1675,4.816,1676,4.599,1677,4.816,1855,4.816,1962,7.604,2046,4.816,2139,4.816,2181,4.816,2740,6.79,2772,4.412,2822,4.816,2895,4.816,3024,5.078,3185,4.816,3191,4.816,3196,4.816,3585,4.816,3590,4.599,3591,4.816,3603,4.816,4515,10.762,4516,10.775]],["title/routes.html",[490,5.371]],["body/routes.html",[22,0.004,130,0.004,131,0.004,490,6.52]],["title/miscellaneous/typealiases.html",[4472,2.718,4517,6.039]],["body/miscellaneous/typealiases.html",[8,0.326,21,0.308,22,0.005,23,3.159,94,2.076,98,3.378,130,0.004,131,0.004,1470,7.257,1471,6.894,1483,5.982,1484,5.982,4472,5.278,4481,7.257,4491,7.257,4518,8.083,4519,8.083,4520,9.317]],["title/miscellaneous/variables.html",[4472,2.718,4521,5.422]],["body/miscellaneous/variables.html",[5,1.79,8,0.139,12,1.546,17,1.546,20,0.506,21,0.378,22,0.005,29,0.038,31,2.727,32,1.518,33,2.727,34,1.675,35,2.727,36,1.711,37,2.792,38,2.564,43,1.518,46,1.947,47,0.415,48,0.604,53,1.062,75,0.81,87,2.8,95,1.794,100,1.39,102,1.865,130,0.003,131,0.002,133,2.333,140,3.554,141,2.27,142,1.928,143,1.928,144,1.981,145,3.761,146,1.107,169,3.422,170,2.17,171,3.422,172,3.422,173,3.422,174,1.207,175,1.189,176,1.189,177,1.189,178,1.189,180,2.247,181,1.49,195,2.101,196,2.431,197,2.431,201,2.685,224,4.089,229,4.353,235,1.043,245,2.117,256,1.865,257,3.089,263,4.813,285,6.685,293,4.706,298,1.345,303,6.373,305,2.17,307,4.706,308,1.765,310,1.832,312,1.756,316,2.176,318,3.046,331,0.957,357,1.225,413,2.403,495,6.716,569,1.225,574,2.247,623,2.431,628,3.704,644,3.089,688,2.858,694,2.333,699,2.685,742,1.641,745,5.861,771,2.17,797,4.089,923,2.858,1017,3.609,1045,2.252,1058,2.315,1084,1.464,1106,2.686,1112,3.042,1186,3.596,1199,2.547,1217,2.858,1240,4.698,1333,2.564,1397,1.553,1468,2.858,1471,2.547,1722,4.698,1851,5.572,1883,1.576,1931,4.089,1974,5.7,1991,7.164,1993,2.431,1997,2.547,2000,2.858,2018,2.547,2025,2.685,2159,3.089,2162,3.089,2164,4.953,2300,5.016,2362,4.706,2489,2.333,2503,4.353,2528,4.706,2530,4.706,2532,4.706,2609,2.858,2628,4.706,2636,3.089,2661,7.745,2691,5.253,2980,2.685,3030,3.089,3033,4.706,3034,3.089,3035,3.089,3036,3.089,3037,3.089,3038,3.089,3151,4.706,3412,3.089,3680,6.951,3694,3.089,3735,3.089,3840,3.089,4472,2.247,4477,6.373,4479,4.706,4483,3.089,4489,3.089,4521,3.089,4522,7.64,4523,6.349,4524,3.441,4525,3.441,4526,3.441,4527,5.242,4528,3.441,4529,3.441,4530,3.441,4531,3.441,4532,3.441,4533,3.441,4534,3.441,4535,3.441,4536,6.349,4537,3.441,4538,3.441,4539,8.627,4540,3.441,4541,3.441,4542,8.37,4543,3.441,4544,3.441,4545,3.441,4546,3.441,4547,3.441,4548,3.441,4549,3.441,4550,3.441,4551,3.441,4552,3.441,4553,3.441,4554,3.441,4555,3.441,4556,3.441,4557,3.441,4558,3.441,4559,3.441,4560,5.242,4561,3.441,4562,3.441,4563,3.441,4564,3.441,4565,3.441,4566,3.441,4567,3.441,4568,3.441,4569,3.441,4570,3.441,4571,3.441,4572,3.441,4573,3.441,4574,3.441,4575,3.441,4576,3.441,4577,3.441,4578,3.441,4579,3.441,4580,5.242,4581,7.099,4582,3.441,4583,3.441,4584,3.441,4585,3.441,4586,3.441,4587,3.441,4588,5.242,4589,3.441,4590,3.441,4591,3.441,4592,3.441,4593,3.441,4594,3.441,4595,3.441,4596,3.441,4597,3.441,4598,3.441,4599,3.441,4600,3.441,4601,3.441,4602,3.441,4603,3.441,4604,7.64,4605,3.441,4606,7.64,4607,3.441,4608,5.242,4609,3.441,4610,3.441,4611,3.441,4612,3.441,4613,9.406,4614,3.441,4615,3.441,4616,3.441,4617,3.441,4618,3.441,4619,3.441,4620,3.441,4621,3.441,4622,3.441,4623,3.441,4624,3.441,4625,3.441,4626,5.242,4627,3.441,4628,3.441,4629,3.441,4630,3.441,4631,3.441,4632,3.441,4633,3.441,4634,3.441,4635,3.441,4636,3.441,4637,3.441,4638,3.441,4639,3.441,4640,3.441,4641,3.441,4642,3.441,4643,3.441,4644,3.441,4645,6.349,4646,6.349,4647,6.349,4648,3.441,4649,7.64,4650,7.099,4651,3.441,4652,3.441,4653,3.441,4654,3.441,4655,5.242,4656,3.441,4657,3.441,4658,3.441,4659,3.441,4660,3.441,4661,3.441,4662,3.441,4663,3.441,4664,3.441,4665,9.591,4666,3.441,4667,3.441,4668,3.441,4669,3.441,4670,3.441,4671,3.441,4672,5.242,4673,3.441,4674,3.441,4675,3.441,4676,3.441,4677,3.441,4678,3.441,4679,3.441,4680,3.441,4681,3.441,4682,3.441,4683,3.441,4684,3.441,4685,3.441,4686,3.441,4687,3.441]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":58,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"interfaces/FlatNode.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"interfaces/Node.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["0.02rem",{"_index":2670,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.03rem",{"_index":4313,"title":{},"body":{"components/UploadComponent.html":{}}}],["0.057",{"_index":2705,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.0625rem",{"_index":1660,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FooterComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{}}}],["0.063rem",{"_index":1313,"title":{},"body":{"components/CompareComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["0.1",{"_index":655,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/FooterComponent.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["0.125rem",{"_index":2694,"title":{},"body":{"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.15",{"_index":654,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["0.1875rem",{"_index":2741,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["0.18rem",{"_index":4463,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["0.1px",{"_index":2467,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{}}}],["0.226",{"_index":2710,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.25",{"_index":3169,"title":{},"body":{"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["0.25rem",{"_index":1310,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.2rem",{"_index":2410,"title":{},"body":{"components/FooterComponent.html":{}}}],["0.2s",{"_index":2077,"title":{},"body":{"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NavItemComponent.html":{}}}],["0.3",{"_index":652,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["0.3125rem",{"_index":1843,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{}}}],["0.3rem",{"_index":2272,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["0.3s",{"_index":1665,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.4",{"_index":3170,"title":{},"body":{"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["0.432rem",{"_index":3435,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["0.438rem",{"_index":2932,"title":{},"body":{"components/LegendComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.5",{"_index":651,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{}}}],["0.525rem",{"_index":3423,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["0.5625rem",{"_index":3178,"title":{},"body":{"components/NavItemComponent.html":{}}}],["0.5rem",{"_index":1312,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsNavComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.5s",{"_index":2706,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.625rem",{"_index":1293,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/NavItemComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{}}}],["0.75rem",{"_index":3430,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["0.7rem",{"_index":2275,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["0.813rem",{"_index":4466,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["0.85",{"_index":1286,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["0.85rem",{"_index":4315,"title":{},"body":{"components/UploadComponent.html":{}}}],["0.875rem",{"_index":2662,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.89rem",{"_index":3230,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["0.8rem",{"_index":3438,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{}}}],["0.9375rem",{"_index":2462,"title":{},"body":{"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.938rem",{"_index":3425,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["0.9rem",{"_index":3424,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/VisControlsComponent.html":{}}}],["000",{"_index":686,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["00008b",{"_index":914,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["007cbe",{"_index":3972,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0d%0a%0d%0a1",{"_index":1646,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["0px",{"_index":3432,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["0rem",{"_index":2713,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{}}}],["0s",{"_index":2755,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":141,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"components/HomeComponent.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/MultiParentMarkGroup.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1)[0].hraversion",{"_index":3403,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["1.063rem",{"_index":2929,"title":{},"body":{"components/LegendComponent.html":{}}}],["1.125rem",{"_index":1307,"title":{},"body":{"components/CompareComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{}}}],["1.25rem",{"_index":2657,"title":{},"body":{"components/HomeComponent.html":{},"components/IndentedListComponent.html":{}}}],["1.4375rem",{"_index":2727,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.4rem",{"_index":4318,"title":{},"body":{"components/UploadComponent.html":{}}}],["1.5",{"_index":622,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["1.5625rem",{"_index":2019,"title":{},"body":{"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{}}}],["1.5rem",{"_index":1317,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/UploadComponent.html":{}}}],["1.75rem",{"_index":2702,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.875rem",{"_index":1309,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{}}}],["10",{"_index":694,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/DoiComponent.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"components/PlaygroundComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1262,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["1000",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["1000px",{"_index":2678,"title":{},"body":{"components/HomeComponent.html":{}}}],["100px",{"_index":1329,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{}}}],["10pt",{"_index":1291,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsNavComponent.html":{},"components/UploadComponent.html":{}}}],["10px",{"_index":1324,"title":{},"body":{"components/CompareComponent.html":{},"components/NavItemComponent.html":{}}}],["10vh",{"_index":2736,"title":{},"body":{"components/HomeComponent.html":{}}}],["11",{"_index":699,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/LegendService.html":{},"classes/TreeMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["11.25rem",{"_index":2938,"title":{},"body":{"components/LegendComponent.html":{}}}],["117",{"_index":4620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":4681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.5rem",{"_index":2712,"title":{},"body":{"components/HomeComponent.html":{}}}],["1200px",{"_index":2730,"title":{},"body":{"components/HomeComponent.html":{}}}],["128",{"_index":2704,"title":{},"body":{"components/HomeComponent.html":{}}}],["12pt",{"_index":1842,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{}}}],["12s",{"_index":2760,"title":{},"body":{"components/HomeComponent.html":{}}}],["13",{"_index":4683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["132",{"_index":2178,"title":{},"body":{"components/ErrorComponent.html":{}}}],["14",{"_index":797,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Legends.html":{},"classes/TreeMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["14.688rem",{"_index":2271,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["1400",{"_index":3569,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["140px",{"_index":2470,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["14pt",{"_index":2017,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{}}}],["14px",{"_index":2468,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{}}}],["15",{"_index":2764,"title":{},"body":{"components/HomeComponent.html":{},"classes/Legends.html":{},"classes/TreeMarkGroup.html":{}}}],["15.625rem",{"_index":3780,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["150",{"_index":705,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["159",{"_index":1662,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["16",{"_index":3001,"title":{},"body":{"classes/Legends.html":{},"index.html":{}}}],["164",{"_index":2674,"title":{},"body":{"components/HomeComponent.html":{}}}],["16s",{"_index":2762,"title":{},"body":{"components/HomeComponent.html":{}}}],["18.75rem",{"_index":1854,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/DoiComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["180",{"_index":4011,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["18pt",{"_index":2668,"title":{},"body":{"components/HomeComponent.html":{}}}],["18rem",{"_index":2022,"title":{},"body":{"components/DocsComponent.html":{}}}],["196",{"_index":1316,"title":{},"body":{"components/CompareComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["1976d2",{"_index":2814,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["1px",{"_index":3433,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["1rem",{"_index":2039,"title":{},"body":{"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{}}}],["2",{"_index":38,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"classes/MultiParentMarkGroup.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"miscellaneous/variables.html":{}}}],["2.1875rem",{"_index":2709,"title":{},"body":{"components/HomeComponent.html":{}}}],["2.375rem",{"_index":3436,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["2.3rem",{"_index":2667,"title":{},"body":{"components/HomeComponent.html":{}}}],["2.5rem",{"_index":1327,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["2.75rem",{"_index":2012,"title":{},"body":{"components/DocsComponent.html":{}}}],["20",{"_index":692,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{},"injectables/VegaService.html":{}}}],["200",{"_index":3002,"title":{},"body":{"classes/Legends.html":{}}}],["201",{"_index":2179,"title":{},"body":{"components/ErrorComponent.html":{}}}],["207",{"_index":4622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20pt",{"_index":2821,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["215",{"_index":2819,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["218",{"_index":2696,"title":{},"body":{"components/HomeComponent.html":{}}}],["228",{"_index":1283,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["232",{"_index":4625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["247",{"_index":4631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["249",{"_index":2404,"title":{},"body":{"components/FooterComponent.html":{}}}],["24px",{"_index":3970,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["25",{"_index":839,"title":{},"body":{"injectables/BimodalService.html":{}}}],["250",{"_index":4509,"title":{},"body":{"miscellaneous/functions.html":{}}}],["255",{"_index":2407,"title":{},"body":{"components/FooterComponent.html":{}}}],["25rem",{"_index":2268,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["262626",{"_index":2002,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["270",{"_index":4633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e3243",{"_index":2034,"title":{},"body":{"components/DocsComponent.html":{}}}],["2em",{"_index":2812,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["2px",{"_index":2076,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["2rem",{"_index":2270,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FooterComponent.html":{}}}],["3",{"_index":145,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"classes/TreeMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["3.125rem",{"_index":2011,"title":{},"body":{"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{}}}],["3.5",{"_index":656,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["3.75rem",{"_index":2684,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["3.8rem",{"_index":3421,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["30",{"_index":4390,"title":{},"body":{"injectables/VegaService.html":{}}}],["30.375rem",{"_index":2743,"title":{},"body":{"components/HomeComponent.html":{}}}],["300",{"_index":151,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/DebugLogsComponent.html":{},"interfaces/Link.html":{},"classes/TreeMarkGroup.html":{}}}],["3000",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["304",{"_index":4635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30px",{"_index":1260,"title":{},"body":{"components/CompareComponent.html":{}}}],["31",{"_index":4512,"title":{},"body":{"index.html":{}}}],["31.25rem",{"_index":1837,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["33",{"_index":4617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":4511,"title":{},"body":{"index.html":{}}}],["3456789bc'.split",{"_index":1210,"title":{},"body":{"components/CompareComponent.html":{}}}],["377eb8",{"_index":34,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["38824ba8",{"_index":4585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":1258,"title":{},"body":{"components/CompareComponent.html":{}}}],["3rem",{"_index":2041,"title":{},"body":{"components/DocsComponent.html":{},"components/UploadComponent.html":{}}}],["4",{"_index":688,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/LegendService.html":{},"miscellaneous/variables.html":{}}}],["4.375rem",{"_index":2675,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.6875rem",{"_index":2676,"title":{},"body":{"components/HomeComponent.html":{}}}],["400",{"_index":2018,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"classes/TreeMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["400px",{"_index":3968,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["4018",{"_index":2387,"title":{},"body":{"components/FooterComponent.html":{}}}],["40px",{"_index":1259,"title":{},"body":{"components/CompareComponent.html":{}}}],["4180cb",{"_index":2400,"title":{},"body":{"components/FooterComponent.html":{}}}],["444a65",{"_index":1318,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["444a6510",{"_index":3579,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["444a6590",{"_index":2733,"title":{},"body":{"components/HomeComponent.html":{}}}],["450px",{"_index":2745,"title":{},"body":{"components/HomeComponent.html":{}}}],["47408",{"_index":2389,"title":{},"body":{"components/FooterComponent.html":{}}}],["480",{"_index":4638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4b2079",{"_index":918,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["4daf4a",{"_index":36,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/LegendService.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["4rem",{"_index":1304,"title":{},"body":{"components/CompareComponent.html":{},"components/TreeComponent.html":{}}}],["4s",{"_index":2757,"title":{},"body":{"components/HomeComponent.html":{}}}],["5",{"_index":623,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"injectables/LegendService.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["5.1875rem",{"_index":2720,"title":{},"body":{"components/HomeComponent.html":{}}}],["5.5rem",{"_index":2682,"title":{},"body":{"components/HomeComponent.html":{}}}],["5.625rem",{"_index":2698,"title":{},"body":{"components/HomeComponent.html":{}}}],["50",{"_index":158,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"interfaces/Link.html":{}}}],["500",{"_index":2665,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/VisControlsComponent.html":{}}}],["50rem",{"_index":3584,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["50}px",{"_index":2578,"title":{},"body":{"components/HomeComponent.html":{}}}],["540",{"_index":4639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["576px",{"_index":2719,"title":{},"body":{"components/HomeComponent.html":{}}}],["58fwlw86sd",{"_index":4652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5rem",{"_index":2683,"title":{},"body":{"components/HomeComponent.html":{}}}],["6",{"_index":2980,"title":{},"body":{"injectables/LegendService.html":{},"classes/TreeMarkGroup.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["6.25rem",{"_index":2269,"title":{},"body":{"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["6.4375rem",{"_index":2726,"title":{},"body":{"components/HomeComponent.html":{}}}],["600",{"_index":1290,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{}}}],["61",{"_index":1663,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["62px",{"_index":2031,"title":{},"body":{"components/DocsComponent.html":{}}}],["669",{"_index":4641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66bb6a",{"_index":1845,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["6c6a63",{"_index":657,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["6c757d",{"_index":2766,"title":{},"body":{"components/HomeComponent.html":{}}}],["6rem",{"_index":3971,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["7",{"_index":1199,"title":{},"body":{"components/CompareComponent.html":{},"injectables/LegendService.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["7.5rem",{"_index":2690,"title":{},"body":{"components/HomeComponent.html":{}}}],["7.6875rem",{"_index":2718,"title":{},"body":{"components/HomeComponent.html":{}}}],["70",{"_index":4513,"title":{},"body":{"index.html":{}}}],["700",{"_index":2013,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{}}}],["7034",{"_index":2392,"title":{},"body":{"components/FooterComponent.html":{}}}],["71",{"_index":4514,"title":{},"body":{"index.html":{}}}],["74px",{"_index":2469,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["75",{"_index":2714,"title":{},"body":{"components/HomeComponent.html":{}}}],["757575",{"_index":1303,"title":{},"body":{"components/CompareComponent.html":{},"components/FileUploadComponent.html":{},"components/UploadComponent.html":{}}}],["7588a1",{"_index":3439,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["768px",{"_index":2724,"title":{},"body":{"components/HomeComponent.html":{}}}],["77k2vnzrj2",{"_index":4654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["796",{"_index":4643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7fd9da",{"_index":2669,"title":{},"body":{"components/HomeComponent.html":{}}}],["7rem",{"_index":2473,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["8",{"_index":574,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"classes/MultiParentMarkGroup.html":{},"components/OmapControlsComponent.html":{},"classes/TreeMarkGroup.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["80",{"_index":2717,"title":{},"body":{"components/HomeComponent.html":{}}}],["800",{"_index":2024,"title":{},"body":{"components/DocsComponent.html":{}}}],["808080",{"_index":66,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["812",{"_index":2390,"title":{},"body":{"components/FooterComponent.html":{}}}],["856",{"_index":2391,"title":{},"body":{"components/FooterComponent.html":{}}}],["89",{"_index":3180,"title":{},"body":{"components/NavItemComponent.html":{}}}],["8pt",{"_index":2817,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["8px",{"_index":1255,"title":{},"body":{"components/CompareComponent.html":{}}}],["8rem",{"_index":2020,"title":{},"body":{"components/DocsComponent.html":{}}}],["8s",{"_index":2750,"title":{},"body":{"components/HomeComponent.html":{}}}],["9",{"_index":4676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97",{"_index":2977,"title":{},"body":{"injectables/LegendService.html":{}}}],["98",{"_index":2979,"title":{},"body":{"injectables/LegendService.html":{},"classes/Legends.html":{}}}],["989898",{"_index":4471,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["99",{"_index":1852,"title":{},"body":{"components/DebugLogsComponent.html":{},"injectables/LegendService.html":{}}}],["9999",{"_index":3969,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["9d9e9a",{"_index":2273,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["_",{"_index":2312,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["_]{15,})\\/(.*?gid=(\\d+))?|\\w*csv",{"_index":1205,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["_blank",{"_index":1990,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/TableNestedMenuComponent.html":{}}}],["_comparedata",{"_index":4024,"title":{},"body":{"injectables/TreeService.html":{}}}],["_config",{"_index":1730,"title":{},"body":{"classes/Data.html":{}}}],["_control",{"_index":2243,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["_currentsheet",{"_index":1732,"title":{},"body":{"classes/Data.html":{}}}],["_data",{"_index":3695,"title":{},"body":{"injectables/SheetService.html":{}}}],["_error",{"_index":3042,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["_filename",{"_index":2259,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["_multiparentlinksdata",{"_index":4340,"title":{},"body":{"injectables/VegaService.html":{}}}],["_signal",{"_index":4373,"title":{},"body":{"injectables/VegaService.html":{}}}],["a.comparatorid",{"_index":814,"title":{},"body":{"injectables/BimodalService.html":{}}}],["a.comparatorname",{"_index":817,"title":{},"body":{"injectables/BimodalService.html":{}}}],["a.indegree?.size",{"_index":833,"title":{},"body":{"injectables/BimodalService.html":{}}}],["a.outdegree?.size",{"_index":832,"title":{},"body":{"injectables/BimodalService.html":{}}}],["a.structure.tolowercase",{"_index":828,"title":{},"body":{"injectables/BimodalService.html":{}}}],["a03837",{"_index":4554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a1",{"_index":3551,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["a:hover",{"_index":2037,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["a[key",{"_index":3261,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["above",{"_index":2165,"title":{},"body":{"components/ErrorComponent.html":{}}}],["absence",{"_index":2978,"title":{},"body":{"injectables/LegendService.html":{}}}],["absolute",{"_index":2654,"title":{},"body":{"components/HomeComponent.html":{}}}],["abstractcontrol",{"_index":1123,"title":{},"body":{"components/CompareComponent.html":{},"components/FileUploadComponent.html":{}}}],["acc",{"_index":1621,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["acc[e.ontologyid",{"_index":1623,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["accept",{"_index":4216,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["access",{"_index":1227,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["accessors",{"_index":1089,"title":{},"body":{"components/CompareComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["action",{"_index":2481,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Signals.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["action(clearsheetlogs",{"_index":3066,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["action(closebottomsheet",{"_index":4226,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closebottomsheetdoi",{"_index":4224,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closecompare",{"_index":4232,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closeloading",{"_index":4202,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closerightsidenav",{"_index":4213,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closesearch",{"_index":4235,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closesnackbar",{"_index":4195,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(discrepencyid",{"_index":4145,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(discrepencylabel",{"_index":4144,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(dosearch",{"_index":4142,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(duplicateid",{"_index":4146,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(haserror",{"_index":4206,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(openbottomsheet",{"_index":4218,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(openbottomsheetdoi",{"_index":4222,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(opencompare",{"_index":4230,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(openloading",{"_index":4200,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(opensearch",{"_index":4233,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(opensnackbar",{"_index":4194,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(reportlog",{"_index":3072,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["action(togglecontrolpane",{"_index":4197,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(toggledebuglogs",{"_index":4214,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(toggleindentlist",{"_index":4208,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(togglereport",{"_index":4210,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(updatebimodal",{"_index":4133,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updatebimodalconfig",{"_index":4140,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updatebottomsheetdata",{"_index":4147,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updatelinksdata",{"_index":4149,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updateloadingtext",{"_index":4201,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(updateomapconfig",{"_index":4141,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updatevegaspec",{"_index":4139,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updatevegaview",{"_index":4134,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["actions/logs.actions",{"_index":750,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["actions/sheet.actions",{"_index":1559,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{}}}],["actions/tree.actions",{"_index":754,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["actions/ui.actions",{"_index":757,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["actionsdiv",{"_index":2574,"title":{},"body":{"components/HomeComponent.html":{}}}],["actionsdiv.style.maxheight",{"_index":2576,"title":{},"body":{"components/HomeComponent.html":{}}}],["actionsdiv.style.overflowy",{"_index":2579,"title":{},"body":{"components/HomeComponent.html":{}}}],["actionsheight",{"_index":2744,"title":{},"body":{"components/HomeComponent.html":{}}}],["activatedroute",{"_index":1924,"title":{},"body":{"components/DocsComponent.html":{}}}],["activatenode",{"_index":2305,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["active",{"_index":2033,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/VisControlsComponent.html":{}}}],["actual_component",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["add",{"_index":1192,"title":{},"body":{"components/CompareComponent.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{}}}],["addcomparesheetrow",{"_index":1076,"title":{},"body":{"components/CompareComponent.html":{}}}],["addedbmbf",{"_index":2960,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmbg",{"_index":2956,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmbl",{"_index":2958,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmbm",{"_index":2959,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmbp",{"_index":2957,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmproteinabsencepath",{"_index":2962,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmproteinintermediatepath",{"_index":2964,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmproteinpresencepath",{"_index":2963,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedct",{"_index":2961,"title":{},"body":{"injectables/LegendService.html":{}}}],["adding",{"_index":819,"title":{},"body":{"injectables/BimodalService.html":{}}}],["address",{"_index":1221,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"components/UploadComponent.html":{}}}],["addsheets",{"_index":3277,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["addsignallisteners",{"_index":4325,"title":{},"body":{"injectables/VegaService.html":{}}}],["addsignallisteners(view",{"_index":4331,"title":{},"body":{"injectables/VegaService.html":{}}}],["affiliated",{"_index":2650,"title":{},"body":{"components/HomeComponent.html":{}}}],["affiliation",{"_index":2660,"title":{},"body":{"components/HomeComponent.html":{}}}],["affiliations",{"_index":2648,"title":{},"body":{"components/HomeComponent.html":{}}}],["afterviewinit",{"_index":2291,"title":{},"body":{"interfaces/FlatNode.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"components/PlaygroundComponent.html":{}}}],["against",{"_index":4657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajay",{"_index":4579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":4518,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliceblue",{"_index":599,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["align",{"_index":695,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["alllogs",{"_index":3010,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{}}}],["alllogs.find((l",{"_index":3085,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["alllogs.push",{"_index":3101,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["allomapsheetconfigurations",{"_index":1437,"title":{},"body":{"injectables/ConfigService.html":{}}}],["allorgans",{"_index":1914,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["allow_telemetry",{"_index":3038,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["allowtelemetry",{"_index":3941,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["allparentids",{"_index":4061,"title":{},"body":{"injectables/TreeService.html":{}}}],["allparentids.add(parent.id",{"_index":4085,"title":{},"body":{"injectables/TreeService.html":{}}}],["allparentids.delete(1",{"_index":4092,"title":{},"body":{"injectables/TreeService.html":{}}}],["allparentidsarray",{"_index":4093,"title":{},"body":{"injectables/TreeService.html":{}}}],["allparentidsarray.includes(x.id",{"_index":4100,"title":{},"body":{"injectables/TreeService.html":{}}}],["allsheetconfigurations",{"_index":1438,"title":{},"body":{"injectables/ConfigService.html":{}}}],["along",{"_index":2632,"title":{},"body":{"components/HomeComponent.html":{}}}],["alphabetically",{"_index":170,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":1979,"title":{},"body":{"components/DocsComponent.html":{}}}],["alt",{"_index":4606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amount",{"_index":2464,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["analyst",{"_index":4573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analytics",{"_index":220,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["analyticsmodule",{"_index":185,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["analyticsmodule.forroot",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["analyticsoptions",{"_index":206,"title":{"interfaces/AnalyticsOptions.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["anatomical",{"_index":142,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["anatomical_structures",{"_index":1351,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["anatomicalstructures",{"_index":1000,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["anatomicalstructuresdata",{"_index":777,"title":{},"body":{"injectables/BimodalService.html":{}}}],["anatomicalstructuresdata.find((a",{"_index":813,"title":{},"body":{"injectables/BimodalService.html":{}}}],["angular",{"_index":3151,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk/collections",{"_index":3334,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["angular/cdk/drag",{"_index":3635,"title":{},"body":{"modules/RootModule.html":{}}}],["angular/cdk/tree",{"_index":2290,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["angular/common",{"_index":1420,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{}}}],["angular/common/http",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["angular/core",{"_index":215,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"modules/MousePositionTrackerModule.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["angular/forms",{"_index":1136,"title":{},"body":{"components/CompareComponent.html":{},"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{}}}],["angular/material/bottom",{"_index":2123,"title":{},"body":{"components/DoiComponent.html":{},"modules/DoiModule.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"modules/RootModule.html":{}}}],["angular/material/button",{"_index":1433,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DoiModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/UploadModule.html":{}}}],["angular/material/card",{"_index":1435,"title":{},"body":{"modules/CompareModule.html":{},"modules/UploadModule.html":{}}}],["angular/material/checkbox",{"_index":3236,"title":{},"body":{"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["angular/material/core",{"_index":3666,"title":{},"body":{"modules/SearchModule.html":{}}}],["angular/material/dialog",{"_index":3019,"title":{},"body":{"components/LoadingComponent.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"modules/RootModule.html":{}}}],["angular/material/expansion",{"_index":1423,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/FunctionsModule.html":{},"modules/LegendModule.html":{},"modules/OmapControlsModule.html":{},"modules/ReportModule.html":{},"modules/UploadModule.html":{}}}],["angular/material/form",{"_index":3205,"title":{},"body":{"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{}}}],["angular/material/icon",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DoiModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/UploadModule.html":{}}}],["angular/material/input",{"_index":1426,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/FileUploadModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{},"modules/UploadModule.html":{}}}],["angular/material/list",{"_index":1863,"title":{},"body":{"modules/DebugLogsModule.html":{},"modules/SearchModule.html":{}}}],["angular/material/menu",{"_index":2281,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/HomeModule.html":{},"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{}}}],["angular/material/select",{"_index":2442,"title":{},"body":{"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["angular/material/sidenav",{"_index":2050,"title":{},"body":{"modules/DocsModule.html":{},"modules/RootModule.html":{}}}],["angular/material/slide",{"_index":1697,"title":{},"body":{"modules/ControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["angular/material/slider",{"_index":1693,"title":{},"body":{"modules/ControlsModule.html":{}}}],["angular/material/snack",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"modules/RootModule.html":{},"components/TrackingPopupComponent.html":{}}}],["angular/material/sort",{"_index":3611,"title":{},"body":{"modules/ReportModule.html":{}}}],["angular/material/table",{"_index":3335,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{}}}],["angular/material/tabs",{"_index":1865,"title":{},"body":{"modules/DebugLogsModule.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{}}}],["angular/material/toolbar",{"_index":3200,"title":{},"body":{"modules/NavbarModule.html":{}}}],["angular/material/tooltip",{"_index":1695,"title":{},"body":{"modules/ControlsModule.html":{},"modules/FunctionsModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{}}}],["angular/material/tree",{"_index":2296,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"interfaces/Node.html":{}}}],["angular/platform",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/router",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/ControlPaneModule.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/NavbarModule.html":{}}}],["angular/youtube",{"_index":2568,"title":{},"body":{"components/HomeComponent.html":{},"modules/HomeModule.html":{}}}],["anim",{"_index":2751,"title":{},"body":{"components/HomeComponent.html":{}}}],["animation",{"_index":2746,"title":{},"body":{"components/HomeComponent.html":{}}}],["antibody",{"_index":1242,"title":{},"body":{"components/CompareComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{}}}],["anyone",{"_index":1230,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["anyview",{"_index":973,"title":{},"body":{"injectables/BimodalService.html":{}}}],["anyview._runtime.signals.node__click.value",{"_index":974,"title":{},"body":{"injectables/BimodalService.html":{}}}],["anyview._runtime.signals.sources__click.value",{"_index":978,"title":{},"body":{"injectables/BimodalService.html":{}}}],["anyview._runtime.signals.targets__click.value",{"_index":979,"title":{},"body":{"injectables/BimodalService.html":{}}}],["api",{"_index":3680,"title":{},"body":{"injectables/SheetService.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/variables.html":{}}}],["api/readme.md",{"_index":4687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["app.component",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.ts",{"_index":1982,"title":{},"body":{"components/DocsComponent.html":{}}}],["app_initializer",{"_index":213,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{}}}],["appcomponent",{"_index":251,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["appearance",{"_index":1265,"title":{},"body":{"components/CompareComponent.html":{}}}],["applied",{"_index":4349,"title":{},"body":{"injectables/VegaService.html":{}}}],["appmodule",{"_index":416,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":226,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{}}}],["appropriate",{"_index":1239,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{}}}],["approutingmodule",{"_index":422,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["aprop",{"_index":3260,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["architect",{"_index":4562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arg1",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["arg2",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["arg3",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["around",{"_index":555,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["array",{"_index":3257,"title":{},"body":{"pipes/OrderByPipe.html":{},"classes/Signals.html":{},"miscellaneous/functions.html":{}}}],["array.slice().sort((a",{"_index":3259,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["arrow",{"_index":1668,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{}}}],["art",{"_index":2363,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["as_as",{"_index":118,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["as_as_organwise",{"_index":122,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["as_ct",{"_index":116,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["as_ct[node.organname",{"_index":943,"title":{},"body":{"injectables/BimodalService.html":{}}}],["as_ct_links",{"_index":781,"title":{},"body":{"injectables/BimodalService.html":{}}}],["as_ct_organwise",{"_index":119,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["as_height",{"_index":1785,"title":{},"body":{"classes/Data.html":{},"classes/Signals.html":{}}}],["as_id",{"_index":129,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["as_name",{"_index":128,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["as_red",{"_index":31,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"miscellaneous/variables.html":{}}}],["as_width",{"_index":1786,"title":{},"body":{"classes/Data.html":{},"classes/Signals.html":{}}}],["asbyasorganwise",{"_index":4068,"title":{},"body":{"injectables/TreeService.html":{}}}],["asbyasorganwise[row?.organname",{"_index":4076,"title":{},"body":{"injectables/TreeService.html":{}}}],["asct",{"_index":1989,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/VisControlsComponent.html":{}}}],["asct+b",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["asctb",{"_index":3707,"title":{},"body":{"injectables/SheetService.html":{}}}],["asctbapiurl",{"_index":4649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asctbconfig",{"_index":89,"title":{"interfaces/ASCTBConfig.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["asctd",{"_index":132,"title":{"interfaces/ASCTD.html":{}},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["aslinktextmark",{"_index":4010,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["assets",{"_index":1877,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["assets/contributors/ajay.jpeg",{"_index":4577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/bruce.jpg",{"_index":4555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/ellen.jpeg",{"_index":4568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/katy.png",{"_index":4545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/mac.jpeg",{"_index":4586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/nikhil.jpeg",{"_index":4592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/paul.jpg",{"_index":4533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/pramod.png",{"_index":4599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/about/readme.md",{"_index":4667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/asct+b",{"_index":4686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/compare/readme.md",{"_index":4675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/data",{"_index":4669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/export/readme.md",{"_index":4685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/faq/readme.md",{"_index":4668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/indented",{"_index":4679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/intro/readme.md",{"_index":4666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/log/readme.md",{"_index":4684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/playground/readme.md",{"_index":4677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/report/readme.md",{"_index":4678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/search/readme.md",{"_index":4682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/vis",{"_index":4672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/visualization/readme.md",{"_index":4671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/homepage/laptop",{"_index":4604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/playground/sheet.csv",{"_index":4662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/stylesheets/_colors.scss",{"_index":2460,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["assign",{"_index":3651,"title":{},"body":{"classes/Scales.html":{}}}],["astextmark",{"_index":4008,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["astextmark:click",{"_index":3865,"title":{},"body":{"classes/Signals.html":{}}}],["astextmark:mouseover",{"_index":3869,"title":{},"body":{"classes/Signals.html":{}}}],["astree",{"_index":4003,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["aswithnoct",{"_index":1001,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["aswithnolink",{"_index":997,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["async",{"_index":713,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/VegaService.html":{}}}],["atleastonephonerequired",{"_index":1077,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["atleastonephonerequired(group",{"_index":1101,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["attrs",{"_index":238,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["attrs[key",{"_index":237,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["authored",{"_index":2606,"title":{},"body":{"components/HomeComponent.html":{}}}],["auto",{"_index":1275,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{}}}],["autosize",{"_index":4388,"title":{},"body":{"injectables/VegaService.html":{}}}],["autosized",{"_index":2738,"title":{},"body":{"components/HomeComponent.html":{}}}],["available",{"_index":2740,"title":{},"body":{"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules.html":{}}}],["ave",{"_index":2383,"title":{},"body":{"components/FooterComponent.html":{}}}],["avoid",{"_index":2858,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["await",{"_index":824,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b",{"_index":98,"title":{"interfaces/B.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["b.btype",{"_index":873,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b.indegree?.size",{"_index":831,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b.nodesize",{"_index":870,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b.outdegree?.size",{"_index":830,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b.structure.tolowercase",{"_index":829,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b[key",{"_index":3263,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["b_green",{"_index":35,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["b_type",{"_index":1350,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["back",{"_index":1986,"title":{},"body":{"components/DocsComponent.html":{}}}],["background",{"_index":1281,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/PlaygroundComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["bar",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"modules/RootModule.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{}}}],["base",{"_index":7,"title":{"interfaces/Base.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["based",{"_index":3312,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["baseline",{"_index":697,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["basis",{"_index":4456,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["before",{"_index":1899,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["behavior",{"_index":2097,"title":{},"body":{"injectables/DocsService.html":{}}}],["behaviorsubject",{"_index":2096,"title":{},"body":{"injectables/DocsService.html":{}}}],["being",{"_index":3816,"title":{},"body":{"classes/Signals.html":{}}}],["below",{"_index":1224,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["between",{"_index":1301,"title":{},"body":{"components/CompareComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["bf",{"_index":1336,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["bfbfbf",{"_index":2078,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["bg",{"_index":2029,"title":{},"body":{"components/DocsComponent.html":{}}}],["bgoffset",{"_index":573,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["bhakta",{"_index":4601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bherr@indiana.edu",{"_index":4563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bimodal",{"_index":547,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/Legends.html":{},"classes/Marks.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["bimodal.service",{"_index":4038,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["bimodal_distance_x",{"_index":1362,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["bimodal_distance_y",{"_index":1361,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["bimodal_text__click",{"_index":3863,"title":{},"body":{"classes/Signals.html":{}}}],["bimodal_text__hover",{"_index":707,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["bimodalbsizeoptions",{"_index":171,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/FunctionsComponent.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["bimodalbtypeoptions",{"_index":173,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/FunctionsComponent.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["bimodalconfig",{"_index":179,"title":{"interfaces/BimodalConfig.html":{}},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FunctionsComponent.html":{},"interfaces/Link.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["bimodalconfig.bm.size",{"_index":868,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bimodalconfig.bm.sort",{"_index":866,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bimodalconfig.bm.type",{"_index":871,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bimodalconfig.ct.size",{"_index":834,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bimodalconfig.ct.sort",{"_index":826,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bimodalctsizeoptions",{"_index":172,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/FunctionsComponent.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["bimodaldata",{"_index":182,"title":{"interfaces/BimodalData.html":{}},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{}}}],["bimodalmarkgroup",{"_index":529,"title":{"classes/BimodalMarkGroup.html":{}},"body":{"classes/BimodalMarkGroup.html":{},"classes/Marks.html":{}}}],["bimodalmarkgroup().group",{"_index":570,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["bimodalmarkgroup.create",{"_index":3127,"title":{},"body":{"classes/Marks.html":{}}}],["bimodalservice",{"_index":710,"title":{"injectables/BimodalService.html":{}},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["bimodalsortoptions",{"_index":169,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/FunctionsComponent.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["bio",{"_index":874,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarker",{"_index":2453,"title":{},"body":{"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{}}}],["biomarkers",{"_index":146,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["biomarkers.filter((b",{"_index":872,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarkers.filter((elem",{"_index":864,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarkers.foreach((b",{"_index":869,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarkers.foreach((marker",{"_index":875,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarkers.sort((a",{"_index":867,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarkers_gene",{"_index":1353,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["biomarkers_lipids",{"_index":1355,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["biomarkers_meta",{"_index":1356,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["biomarkers_prot",{"_index":1357,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["biomarkers_protein",{"_index":1354,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["biomarkerscounts",{"_index":995,"title":{"interfaces/BiomarkersCounts.html":{}},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["biomarkersnamesinreport",{"_index":1006,"title":{"interfaces/BiomarkersNamesInReport.html":{}},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["biomodal",{"_index":4336,"title":{},"body":{"injectables/VegaService.html":{}}}],["bip",{"_index":2075,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["bisque",{"_index":614,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["bl",{"_index":1335,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["black",{"_index":708,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"classes/Legends.html":{},"components/NavItemComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["blob",{"_index":1326,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["block",{"_index":2267,"title":{},"body":{"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TreeComponent.html":{}}}],["blocksize",{"_index":2584,"title":{},"body":{"components/HomeComponent.html":{}}}],["bloomington",{"_index":2388,"title":{},"body":{"components/FooterComponent.html":{}}}],["blue",{"_index":634,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Scales.html":{},"classes/TreeMarkGroup.html":{}}}],["bm",{"_index":41,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bm_id",{"_index":125,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["bm_name",{"_index":124,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["bm_type",{"_index":1332,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["bmctpairings",{"_index":123,"title":{"interfaces/BmCtPairings.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["bmnode",{"_index":138,"title":{"classes/BMNode.html":{}},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["bmnode(leaf",{"_index":794,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bms",{"_index":2420,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["bmsizeoptions",{"_index":2421,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["bmtype",{"_index":1396,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Legend.html":{},"injectables/LegendService.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["body",{"_index":109,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["bold",{"_index":702,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["boolean",{"_index":24,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/IndentedListComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":190,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["border",{"_index":1253,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["borner",{"_index":4553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":1028,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["bottomsheetdata",{"_index":4106,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["bottomsheetinfo",{"_index":3687,"title":{},"body":{"injectables/SheetService.html":{}}}],["bottomsheetopen",{"_index":4157,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["boundary",{"_index":3157,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["bounds.x1",{"_index":589,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["bounds.x2",{"_index":594,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["bounds.y1",{"_index":595,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["bounds.y2",{"_index":597,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["box",{"_index":1256,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["bp",{"_index":1374,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["bprop",{"_index":3262,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["br",{"_index":3761,"title":{},"body":{"components/SidenavComponent.html":{}}}],["brands",{"_index":2358,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["break",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/OrganTableSelectorComponent.html":{}}}],["broken",{"_index":2885,"title":{},"body":{"components/InfoComponent.html":{}}}],["browse",{"_index":4516,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"components/UploadComponent.html":{},"modules.html":{}}}],["browser/animations",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["bruce",{"_index":4556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":2680,"title":{},"body":{"components/HomeComponent.html":{}}}],["btype",{"_index":99,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["bubble_chart",{"_index":2459,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["build",{"_index":820,"title":{},"body":{"injectables/BimodalService.html":{}}}],["building",{"_index":2644,"title":{},"body":{"components/HomeComponent.html":{},"injectables/VegaService.html":{}}}],["built",{"_index":4612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["burlywood",{"_index":615,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["button",{"_index":1311,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{}}}],["buttons",{"_index":4615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bwithnolink",{"_index":999,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["by.pipe",{"_index":2948,"title":{},"body":{"modules/LegendModule.html":{},"modules/ReportModule.html":{}}}],["by.pipe.ts",{"_index":3251,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["by.pipe.ts:9",{"_index":3256,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["by/order",{"_index":2947,"title":{},"body":{"modules/LegendModule.html":{},"pipes/OrderByPipe.html":{},"modules/ReportModule.html":{}}}],["börner",{"_index":4547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":1805,"title":{},"body":{"classes/Data.html":{}}}],["c.color",{"_index":2972,"title":{},"body":{"injectables/LegendService.html":{}}}],["c.indegree?.size",{"_index":837,"title":{},"body":{"injectables/BimodalService.html":{}}}],["c.nodesize",{"_index":836,"title":{},"body":{"injectables/BimodalService.html":{}}}],["c.outdegree?.size",{"_index":838,"title":{},"body":{"injectables/BimodalService.html":{}}}],["c2cae5",{"_index":1328,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["cache",{"_index":1348,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["calc(100vh",{"_index":3984,"title":{},"body":{"components/TreeComponent.html":{}}}],["call",{"_index":1635,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/SheetService.html":{},"components/UploadComponent.html":{}}}],["cancel",{"_index":1847,"title":{},"body":{"components/DebugLogsComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"components/OrganTableSelectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["card",{"_index":2701,"title":{},"body":{"components/HomeComponent.html":{}}}],["card:hover",{"_index":2708,"title":{},"body":{"components/HomeComponent.html":{}}}],["cards",{"_index":2700,"title":{},"body":{"components/HomeComponent.html":{}}}],["care",{"_index":3734,"title":{},"body":{"injectables/SheetService.html":{}}}],["case",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["catch",{"_index":958,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/IndentedListService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["categories",{"_index":2490,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["cbyorgan",{"_index":1005,"title":{"interfaces/CByOrgan.html":{}},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["cc",{"_index":1252,"title":{},"body":{"components/CompareComponent.html":{}}}],["ccc",{"_index":78,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{}}}],["ccf",{"_index":2604,"title":{},"body":{"components/HomeComponent.html":{}}}],["ce",{"_index":3500,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["ce(earlier",{"_index":3499,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["cell",{"_index":100,"title":{"classes/Cell.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["cell.color",{"_index":851,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.indegree",{"_index":854,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.isnew",{"_index":849,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.label",{"_index":858,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.length",{"_index":3556,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["cell.link",{"_index":845,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.nodesize",{"_index":846,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.notes",{"_index":843,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.organname",{"_index":844,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.outdegree",{"_index":856,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.references",{"_index":860,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.structure",{"_index":842,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell_col",{"_index":91,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["cell_types",{"_index":1352,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["cellout.name",{"_index":910,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cellout.proteinpresence",{"_index":912,"title":{},"body":{"injectables/BimodalService.html":{}}}],["celltype",{"_index":110,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["celltypes",{"_index":823,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["celltypes.foreach((c",{"_index":835,"title":{},"body":{"injectables/BimodalService.html":{}}}],["celltypes.foreach((cell",{"_index":840,"title":{},"body":{"injectables/BimodalService.html":{}}}],["celltypes.sort((a",{"_index":827,"title":{},"body":{"injectables/BimodalService.html":{}}}],["center",{"_index":1298,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["change",{"_index":2452,"title":{},"body":{"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/PlaygroundComponent.html":{}}}],["changebimodaldistancex",{"_index":4397,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["changebimodaldistancey",{"_index":4398,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["changedetection",{"_index":3932,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy",{"_index":3957,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":3933,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["changedetectorref",{"_index":2864,"title":{},"body":{"components/InfoComponent.html":{}}}],["changeheight",{"_index":4399,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["changeoptions",{"_index":2425,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["changeoptions(type",{"_index":2428,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["changeshowas",{"_index":4400,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["changeshowontology",{"_index":4401,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["changetab",{"_index":3278,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["changetab(tabindex",{"_index":3289,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["changeversion",{"_index":3279,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["changeversion(element.version[0].value",{"_index":3416,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["changeversion(value",{"_index":3292,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["changewidth",{"_index":4402,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["charts",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"modules/ReportModule.html":{}}}],["check",{"_index":4043,"title":{},"body":{"injectables/TreeService.html":{}}}],["check_circle",{"_index":1844,"title":{},"body":{"components/DebugLogsComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox",{"_index":3229,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["checkboxclicked",{"_index":3215,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["checkboxclicked(event",{"_index":3220,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["checkboxlabel",{"_index":3280,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["checkboxlabel(row",{"_index":3294,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["checklinkformat",{"_index":1078,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["checklinkformat(url",{"_index":1104,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["chevron_right",{"_index":2810,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["child",{"_index":2789,"title":{},"body":{"classes/ILNode.html":{}}}],["child(1",{"_index":2753,"title":{},"body":{"components/HomeComponent.html":{}}}],["child(11",{"_index":3577,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["child(2",{"_index":2756,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["child(3",{"_index":2758,"title":{},"body":{"components/HomeComponent.html":{}}}],["child(4",{"_index":2759,"title":{},"body":{"components/HomeComponent.html":{}}}],["child(5",{"_index":2761,"title":{},"body":{"components/HomeComponent.html":{}}}],["child.name.tolowercase",{"_index":2790,"title":{},"body":{"classes/ILNode.html":{}}}],["childmenu",{"_index":3903,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["children",{"_index":57,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/FlatNode.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Node.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["chosen",{"_index":4128,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["ci",{"_index":2373,"title":{},"body":{"components/FooterComponent.html":{}}}],["circle",{"_index":663,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/LegendComponent.html":{}}}],["cl",{"_index":3682,"title":{},"body":{"injectables/SheetService.html":{}}}],["class",{"_index":44,"title":{"classes/BMNode.html":{},"classes/BimodalMarkGroup.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"classes/ILNode.html":{},"classes/Legends.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/TreeMarkGroup.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"modules/RootModule.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["classes",{"_index":501,"title":{},"body":{"classes/BMNode.html":{},"classes/BimodalMarkGroup.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"classes/ILNode.html":{},"classes/Legends.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/TreeMarkGroup.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"index.html":{}}}],["clear",{"_index":1014,"title":{},"body":{"classes/ClearSheetLogs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/UIStateModel.html":{}}}],["clearsheetlogs",{"_index":1012,"title":{"classes/ClearSheetLogs.html":{}},"body":{"classes/ClearSheetLogs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["clearsheetlogs(undefined",{"_index":3064,"title":{},"body":{"injectables/LogsState.html":{}}}],["click",{"_index":627,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ErrorComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/VegaService.html":{},"miscellaneous/enumerations.html":{}}}],["click)=\"prevclick.emit",{"_index":2072,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["click[!event.item",{"_index":3862,"title":{},"body":{"classes/Signals.html":{}}}],["clicked",{"_index":976,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Data.html":{},"classes/Signals.html":{},"interfaces/TreeStateModel.html":{},"injectables/VegaService.html":{}}}],["clicking",{"_index":642,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Signals.html":{}}}],["clicks",{"_index":2487,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["clientheight",{"_index":3138,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientwidth",{"_index":3137,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientx",{"_index":3140,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clienty",{"_index":3141,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clikable",{"_index":4000,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["close",{"_index":1027,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DoiComponent.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/SidenavHeaderComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closebottomsheet",{"_index":1025,"title":{"classes/CloseBottomSheet.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closebottomsheetdoi",{"_index":1054,"title":{"classes/CloseBottomSheetDOI.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closecompare",{"_index":1056,"title":{"classes/CloseCompare.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closed",{"_index":3325,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["closedebug",{"_index":1831,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["closeil",{"_index":2308,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["closeloading",{"_index":755,"title":{"classes/CloseLoading.html":{}},"body":{"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{}}}],["closeloading('visualization",{"_index":984,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/VegaService.html":{}}}],["closerightsidenav",{"_index":1048,"title":{"classes/CloseRightSideNav.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closesearch",{"_index":1059,"title":{"classes/CloseSearch.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closesidenav",{"_index":3769,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["closesnackbar",{"_index":1042,"title":{"classes/CloseSnackbar.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["clsname",{"_index":3937,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["cluster",{"_index":1784,"title":{},"body":{"classes/Data.html":{}}}],["cluster_analyticsmodule",{"_index":193,"title":{},"body":{"modules/AnalyticsModule.html":{},"index.html":{}}}],["cluster_analyticsmodule_providers",{"_index":194,"title":{},"body":{"modules/AnalyticsModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_comparemodule",{"_index":1412,"title":{},"body":{"modules/CompareModule.html":{},"index.html":{}}}],["cluster_comparemodule_declarations",{"_index":1415,"title":{},"body":{"modules/CompareModule.html":{},"index.html":{}}}],["cluster_comparemodule_exports",{"_index":1414,"title":{},"body":{"modules/CompareModule.html":{},"index.html":{}}}],["cluster_comparemodule_imports",{"_index":1413,"title":{},"body":{"modules/CompareModule.html":{},"index.html":{}}}],["cluster_controlpanemodule",{"_index":1670,"title":{},"body":{"modules/ControlPaneModule.html":{},"index.html":{}}}],["cluster_controlpanemodule_declarations",{"_index":1673,"title":{},"body":{"modules/ControlPaneModule.html":{},"index.html":{}}}],["cluster_controlpanemodule_exports",{"_index":1672,"title":{},"body":{"modules/ControlPaneModule.html":{},"index.html":{}}}],["cluster_controlpanemodule_imports",{"_index":1671,"title":{},"body":{"modules/ControlPaneModule.html":{},"index.html":{}}}],["cluster_controlsmodule",{"_index":1687,"title":{},"body":{"modules/ControlsModule.html":{},"index.html":{}}}],["cluster_controlsmodule_declarations",{"_index":1688,"title":{},"body":{"modules/ControlsModule.html":{},"index.html":{}}}],["cluster_controlsmodule_exports",{"_index":1689,"title":{},"body":{"modules/ControlsModule.html":{},"index.html":{}}}],["cluster_debuglogsmodule",{"_index":1856,"title":{},"body":{"modules/DebugLogsModule.html":{},"index.html":{}}}],["cluster_debuglogsmodule_declarations",{"_index":1859,"title":{},"body":{"modules/DebugLogsModule.html":{},"index.html":{}}}],["cluster_debuglogsmodule_exports",{"_index":1857,"title":{},"body":{"modules/DebugLogsModule.html":{},"index.html":{}}}],["cluster_debuglogsmodule_imports",{"_index":1858,"title":{},"body":{"modules/DebugLogsModule.html":{}}}],["cluster_docsmodule",{"_index":2042,"title":{},"body":{"modules/DocsModule.html":{},"index.html":{}}}],["cluster_docsmodule_declarations",{"_index":2043,"title":{},"body":{"modules/DocsModule.html":{},"index.html":{}}}],["cluster_docsmodule_exports",{"_index":2044,"title":{},"body":{"modules/DocsModule.html":{},"index.html":{}}}],["cluster_docsmodule_imports",{"_index":2045,"title":{},"body":{"modules/DocsModule.html":{},"index.html":{}}}],["cluster_docsnavmodule",{"_index":2080,"title":{},"body":{"modules/DocsNavModule.html":{},"index.html":{}}}],["cluster_docsnavmodule_declarations",{"_index":2081,"title":{},"body":{"modules/DocsNavModule.html":{},"index.html":{}}}],["cluster_docsnavmodule_exports",{"_index":2082,"title":{},"body":{"modules/DocsNavModule.html":{},"index.html":{}}}],["cluster_doimodule",{"_index":2140,"title":{},"body":{"modules/DoiModule.html":{},"index.html":{}}}],["cluster_doimodule_declarations",{"_index":2141,"title":{},"body":{"modules/DoiModule.html":{},"index.html":{}}}],["cluster_doimodule_exports",{"_index":2142,"title":{},"body":{"modules/DoiModule.html":{},"index.html":{}}}],["cluster_errormodule",{"_index":2182,"title":{},"body":{"modules/ErrorModule.html":{},"index.html":{}}}],["cluster_errormodule_declarations",{"_index":2183,"title":{},"body":{"modules/ErrorModule.html":{},"index.html":{}}}],["cluster_errormodule_exports",{"_index":2184,"title":{},"body":{"modules/ErrorModule.html":{},"index.html":{}}}],["cluster_fileuploadmodule",{"_index":2276,"title":{},"body":{"modules/FileUploadModule.html":{},"index.html":{}}}],["cluster_fileuploadmodule_declarations",{"_index":4510,"title":{},"body":{"index.html":{}}}],["cluster_fileuploadmodule_exports",{"_index":2278,"title":{},"body":{"modules/FileUploadModule.html":{},"index.html":{}}}],["cluster_fileuploadmodule_fileuploadcomponent_providers",{"_index":2277,"title":{},"body":{"modules/FileUploadModule.html":{},"index.html":{}}}],["cluster_footermodule",{"_index":2412,"title":{},"body":{"modules/FooterModule.html":{},"index.html":{}}}],["cluster_footermodule_declarations",{"_index":2414,"title":{},"body":{"modules/FooterModule.html":{},"index.html":{}}}],["cluster_footermodule_exports",{"_index":2413,"title":{},"body":{"modules/FooterModule.html":{},"index.html":{}}}],["cluster_functionsmodule",{"_index":2474,"title":{},"body":{"modules/FunctionsModule.html":{},"index.html":{}}}],["cluster_functionsmodule_declarations",{"_index":2475,"title":{},"body":{"modules/FunctionsModule.html":{},"index.html":{}}}],["cluster_functionsmodule_exports",{"_index":2476,"title":{},"body":{"modules/FunctionsModule.html":{},"index.html":{}}}],["cluster_homemodule",{"_index":2768,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_homemodule_declarations",{"_index":2769,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_homemodule_exports",{"_index":2770,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_homemodule_imports",{"_index":2771,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_indentedlistmodule",{"_index":2823,"title":{},"body":{"modules/IndentedListModule.html":{},"index.html":{}}}],["cluster_indentedlistmodule_declarations",{"_index":2825,"title":{},"body":{"modules/IndentedListModule.html":{},"index.html":{}}}],["cluster_indentedlistmodule_exports",{"_index":2824,"title":{},"body":{"modules/IndentedListModule.html":{},"index.html":{}}}],["cluster_indentedlistmodule_imports",{"_index":2826,"title":{},"body":{"modules/IndentedListModule.html":{}}}],["cluster_infomodule",{"_index":2896,"title":{},"body":{"modules/InfoModule.html":{},"index.html":{}}}],["cluster_infomodule_declarations",{"_index":2898,"title":{},"body":{"modules/InfoModule.html":{},"index.html":{}}}],["cluster_infomodule_exports",{"_index":2897,"title":{},"body":{"modules/InfoModule.html":{},"index.html":{}}}],["cluster_legendmodule",{"_index":2939,"title":{},"body":{"modules/LegendModule.html":{},"index.html":{}}}],["cluster_legendmodule_declarations",{"_index":2942,"title":{},"body":{"modules/LegendModule.html":{},"index.html":{}}}],["cluster_legendmodule_exports",{"_index":2940,"title":{},"body":{"modules/LegendModule.html":{},"index.html":{}}}],["cluster_legendmodule_imports",{"_index":2941,"title":{},"body":{"modules/LegendModule.html":{},"index.html":{}}}],["cluster_loadingmodule",{"_index":3025,"title":{},"body":{"modules/LoadingModule.html":{},"index.html":{}}}],["cluster_loadingmodule_declarations",{"_index":3027,"title":{},"body":{"modules/LoadingModule.html":{},"index.html":{}}}],["cluster_loadingmodule_exports",{"_index":3026,"title":{},"body":{"modules/LoadingModule.html":{},"index.html":{}}}],["cluster_navbarmodule",{"_index":3192,"title":{},"body":{"modules/NavbarModule.html":{},"index.html":{}}}],["cluster_navbarmodule_declarations",{"_index":3194,"title":{},"body":{"modules/NavbarModule.html":{},"index.html":{}}}],["cluster_navbarmodule_exports",{"_index":3193,"title":{},"body":{"modules/NavbarModule.html":{},"index.html":{}}}],["cluster_navbarmodule_imports",{"_index":3195,"title":{},"body":{"modules/NavbarModule.html":{},"index.html":{}}}],["cluster_navitemmodule",{"_index":3186,"title":{},"body":{"modules/NavItemModule.html":{},"index.html":{}}}],["cluster_navitemmodule_declarations",{"_index":3188,"title":{},"body":{"modules/NavItemModule.html":{},"index.html":{}}}],["cluster_navitemmodule_exports",{"_index":3187,"title":{},"body":{"modules/NavItemModule.html":{},"index.html":{}}}],["cluster_omapcontrolsmodule",{"_index":3231,"title":{},"body":{"modules/OmapControlsModule.html":{},"index.html":{}}}],["cluster_omapcontrolsmodule_declarations",{"_index":3232,"title":{},"body":{"modules/OmapControlsModule.html":{},"index.html":{}}}],["cluster_omapcontrolsmodule_exports",{"_index":3233,"title":{},"body":{"modules/OmapControlsModule.html":{},"index.html":{}}}],["cluster_organtableselectormodule",{"_index":3440,"title":{},"body":{"modules/OrganTableSelectorModule.html":{},"index.html":{}}}],["cluster_organtableselectormodule_declarations",{"_index":3441,"title":{},"body":{"modules/OrganTableSelectorModule.html":{},"index.html":{}}}],["cluster_organtableselectormodule_exports",{"_index":3442,"title":{},"body":{"modules/OrganTableSelectorModule.html":{},"index.html":{}}}],["cluster_playgroundmodule",{"_index":3586,"title":{},"body":{"modules/PlaygroundModule.html":{},"index.html":{}}}],["cluster_playgroundmodule_declarations",{"_index":3588,"title":{},"body":{"modules/PlaygroundModule.html":{},"index.html":{}}}],["cluster_playgroundmodule_exports",{"_index":3587,"title":{},"body":{"modules/PlaygroundModule.html":{},"index.html":{}}}],["cluster_playgroundmodule_imports",{"_index":3589,"title":{},"body":{"modules/PlaygroundModule.html":{},"index.html":{}}}],["cluster_reportmodule",{"_index":3604,"title":{},"body":{"modules/ReportModule.html":{},"index.html":{}}}],["cluster_reportmodule_declarations",{"_index":3605,"title":{},"body":{"modules/ReportModule.html":{},"index.html":{}}}],["cluster_reportmodule_exports",{"_index":3606,"title":{},"body":{"modules/ReportModule.html":{},"index.html":{}}}],["cluster_reportmodule_imports",{"_index":3607,"title":{},"body":{"modules/ReportModule.html":{}}}],["cluster_rootmodule",{"_index":3617,"title":{},"body":{"modules/RootModule.html":{},"index.html":{}}}],["cluster_rootmodule_declarations",{"_index":3618,"title":{},"body":{"modules/RootModule.html":{},"index.html":{}}}],["cluster_rootmodule_exports",{"_index":3620,"title":{},"body":{"modules/RootModule.html":{},"index.html":{}}}],["cluster_rootmodule_imports",{"_index":3619,"title":{},"body":{"modules/RootModule.html":{}}}],["cluster_searchmodule",{"_index":3659,"title":{},"body":{"modules/SearchModule.html":{},"index.html":{}}}],["cluster_searchmodule_declarations",{"_index":3660,"title":{},"body":{"modules/SearchModule.html":{},"index.html":{}}}],["cluster_searchmodule_exports",{"_index":3661,"title":{},"body":{"modules/SearchModule.html":{},"index.html":{}}}],["cluster_sidenavheadermodule",{"_index":3781,"title":{},"body":{"modules/SidenavHeaderModule.html":{},"index.html":{}}}],["cluster_sidenavheadermodule_declarations",{"_index":3783,"title":{},"body":{"modules/SidenavHeaderModule.html":{},"index.html":{}}}],["cluster_sidenavheadermodule_exports",{"_index":3782,"title":{},"body":{"modules/SidenavHeaderModule.html":{},"index.html":{}}}],["cluster_sidenavmodule",{"_index":3786,"title":{},"body":{"modules/SidenavModule.html":{},"index.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":3788,"title":{},"body":{"modules/SidenavModule.html":{},"index.html":{}}}],["cluster_sidenavmodule_exports",{"_index":3787,"title":{},"body":{"modules/SidenavModule.html":{},"index.html":{}}}],["cluster_tablenestedmenumodule",{"_index":3919,"title":{},"body":{"modules/TableNestedMenuModule.html":{},"index.html":{}}}],["cluster_tablenestedmenumodule_declarations",{"_index":3921,"title":{},"body":{"modules/TableNestedMenuModule.html":{},"index.html":{}}}],["cluster_tablenestedmenumodule_exports",{"_index":3920,"title":{},"body":{"modules/TableNestedMenuModule.html":{},"index.html":{}}}],["cluster_trackingpopupmodule",{"_index":3973,"title":{},"body":{"modules/TrackingPopupModule.html":{},"index.html":{}}}],["cluster_trackingpopupmodule_declarations",{"_index":3974,"title":{},"body":{"modules/TrackingPopupModule.html":{},"index.html":{}}}],["cluster_trackingpopupmodule_exports",{"_index":3975,"title":{},"body":{"modules/TrackingPopupModule.html":{},"index.html":{}}}],["cluster_treemodule",{"_index":4012,"title":{},"body":{"modules/TreeModule.html":{},"index.html":{}}}],["cluster_treemodule_declarations",{"_index":4014,"title":{},"body":{"modules/TreeModule.html":{},"index.html":{}}}],["cluster_treemodule_exports",{"_index":4013,"title":{},"body":{"modules/TreeModule.html":{},"index.html":{}}}],["cluster_uploadmodule",{"_index":4319,"title":{},"body":{"modules/UploadModule.html":{},"index.html":{}}}],["cluster_uploadmodule_declarations",{"_index":4322,"title":{},"body":{"modules/UploadModule.html":{},"index.html":{}}}],["cluster_uploadmodule_exports",{"_index":4321,"title":{},"body":{"modules/UploadModule.html":{},"index.html":{}}}],["cluster_uploadmodule_imports",{"_index":4320,"title":{},"body":{"modules/UploadModule.html":{}}}],["cns",{"_index":2369,"title":{},"body":{"components/FooterComponent.html":{}}}],["color",{"_index":11,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["colors",{"_index":3649,"title":{},"body":{"classes/Scales.html":{}}}],["column",{"_index":2679,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["columns",{"_index":3508,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["colums",{"_index":3462,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["command",{"_index":240,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["common",{"_index":2612,"title":{},"body":{"components/HomeComponent.html":{}}}],["commonmodule",{"_index":1419,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{}}}],["company",{"_index":2401,"title":{},"body":{"components/FooterComponent.html":{}}}],["comparator",{"_index":61,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["comparatorid",{"_index":63,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["comparatorname",{"_index":62,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["compare",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["compare'},{'name",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["compare.component",{"_index":1421,"title":{},"body":{"modules/CompareModule.html":{}}}],["compare.component.html",{"_index":1070,"title":{},"body":{"components/CompareComponent.html":{}}}],["compare.component.scss",{"_index":1069,"title":{},"body":{"components/CompareComponent.html":{}}}],["comparecomponent",{"_index":347,"title":{"components/CompareComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["comparedata",{"_index":1088,"title":{"interfaces/CompareData.html":{}},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["comparedata.find((c",{"_index":2971,"title":{},"body":{"injectables/LegendService.html":{}}}],["comparedata.length",{"_index":2970,"title":{},"body":{"injectables/LegendService.html":{}}}],["comparedd",{"_index":134,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["comparemodule",{"_index":1411,"title":{"modules/CompareModule.html":{}},"body":{"modules/CompareModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["compareopen",{"_index":4158,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["comparereport",{"_index":1399,"title":{"interfaces/CompareReport.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["comparereportdata",{"_index":1407,"title":{"interfaces/CompareReportData.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["comparesheets",{"_index":1086,"title":{},"body":{"components/CompareComponent.html":{}}}],["comparison",{"_index":2492,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"miscellaneous/enumerations.html":{}}}],["comparisondetails",{"_index":1880,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["compiler",{"_index":3152,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["component",{"_index":250,"title":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["component_template",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["componentactive",{"_index":3268,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["components",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["components/compare/compare.module",{"_index":3629,"title":{},"body":{"modules/RootModule.html":{}}}],["components/controls/controls.module",{"_index":1679,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["components/debug",{"_index":3627,"title":{},"body":{"modules/RootModule.html":{}}}],["components/doi/doi.module",{"_index":3637,"title":{},"body":{"modules/RootModule.html":{}}}],["components/error/error.module",{"_index":3631,"title":{},"body":{"modules/RootModule.html":{}}}],["components/file",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/PlaygroundModule.html":{}}}],["components/footer/footer.module",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"modules/DocsModule.html":{}}}],["components/home/home.component",{"_index":494,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/home/home.module",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["components/indented",{"_index":3625,"title":{},"body":{"modules/RootModule.html":{}}}],["components/info/info.module",{"_index":3638,"title":{},"body":{"modules/RootModule.html":{}}}],["components/legend/legend.module",{"_index":1680,"title":{},"body":{"modules/ControlPaneModule.html":{},"modules/RootModule.html":{}}}],["components/nav",{"_index":3201,"title":{},"body":{"modules/NavbarModule.html":{}}}],["components/omap",{"_index":1681,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["components/organ",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["components/report/report.module",{"_index":3624,"title":{},"body":{"modules/RootModule.html":{}}}],["components/sidenav/sidenav.module",{"_index":1684,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["components/table",{"_index":3206,"title":{},"body":{"modules/NavbarModule.html":{},"modules/RootModule.html":{}}}],["components/tracking",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/upload/upload.module",{"_index":3595,"title":{},"body":{"modules/PlaygroundModule.html":{}}}],["compute",{"_index":4497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["computes",{"_index":4623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["con",{"_index":2742,"title":{},"body":{"components/HomeComponent.html":{}}}],["con.desc",{"_index":2646,"title":{},"body":{"components/HomeComponent.html":{}}}],["con.mail",{"_index":2647,"title":{},"body":{"components/HomeComponent.html":{}}}],["con.name",{"_index":2645,"title":{},"body":{"components/HomeComponent.html":{}}}],["conditions",{"_index":2379,"title":{},"body":{"components/FooterComponent.html":{}}}],["config",{"_index":183,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["config.discrepencyid",{"_index":1612,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["config.discrepencylabel",{"_index":1601,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["config.duplicateid",{"_index":1614,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["config.json",{"_index":1447,"title":{},"body":{"injectables/ConfigService.html":{},"components/VisControlsComponent.html":{}}}],["config.json').pipe(take(1",{"_index":1452,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["config.service.ts",{"_index":1436,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:10",{"_index":1450,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:14",{"_index":1466,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:25",{"_index":1462,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:36",{"_index":1443,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:9",{"_index":1453,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config['mastersheetlink",{"_index":1968,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["configs",{"_index":3321,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["configservice",{"_index":431,"title":{"injectables/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["configservice.config$.topromise()]).then",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":736,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/VegaService.html":{}}}],["configurationoptions",{"_index":1383,"title":{"interfaces/ConfigurationOptions.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["configurations",{"_index":4033,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["connection",{"_index":2886,"title":{},"body":{"components/InfoComponent.html":{}}}],["consent",{"_index":1471,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consent.service",{"_index":221,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["consentchange",{"_index":1472,"title":{},"body":{"injectables/ConsentService.html":{}}}],["consentservice",{"_index":195,"title":{"injectables/ConsentService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["consentservice.consentchange.subscribe((consent",{"_index":2516,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["consentservice.setconsent(this.loadconsent",{"_index":3044,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["console.log('bm",{"_index":1634,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["console.log(data",{"_index":3730,"title":{},"body":{"injectables/SheetService.html":{}}}],["console.log(err",{"_index":1637,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["console.log(error",{"_index":959,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["console.log(item",{"_index":2130,"title":{},"body":{"components/DoiComponent.html":{}}}],["consortia",{"_index":2641,"title":{},"body":{"components/HomeComponent.html":{}}}],["consortium",{"_index":2376,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["const",{"_index":30,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"modules/MousePositionTrackerModule.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"classes/TNode.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["constomize",{"_index":4636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":3021,"title":{},"body":{"components/LoadingComponent.html":{}}}],["constructor(as_ct",{"_index":4256,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["constructor(cache",{"_index":4250,"title":{},"body":{"classes/UpdateGetFromCache.html":{}}}],["constructor(comparedata",{"_index":2190,"title":{},"body":{"classes/FetchCompareData.html":{}}}],["constructor(config",{"_index":3806,"title":{},"body":{"classes/Signals.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateConfig.html":{},"classes/UpdateOmapConfig.html":{}}}],["constructor(configservice",{"_index":1939,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["constructor(consentservice",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["constructor(currentsheet",{"_index":1718,"title":{},"body":{"classes/Data.html":{}}}],["constructor(data",{"_index":2112,"title":{},"body":{"components/DoiComponent.html":{},"classes/FetchPlaygroundUploadData.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdatePlaygroundData.html":{}}}],["constructor(discrepencystructures",{"_index":1904,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DuplicateId.html":{}}}],["constructor(elementref",{"_index":3942,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["constructor(error",{"_index":2522,"title":{},"body":{"classes/HasError.html":{}}}],["constructor(fb",{"_index":1091,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["constructor(ga",{"_index":4408,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["constructor(http",{"_index":1441,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["constructor(i",{"_index":1868,"title":{},"body":{"classes/DeleteCompareSheet.html":{}}}],["constructor(id",{"_index":3877,"title":{},"body":{"classes/TNode.html":{}}}],["constructor(indentservice",{"_index":2793,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["constructor(ls",{"_index":2909,"title":{},"body":{"components/LegendComponent.html":{}}}],["constructor(message",{"_index":3612,"title":{},"body":{"classes/ReportMultiLog.html":{}}}],["constructor(mode",{"_index":4267,"title":{},"body":{"classes/UpdateMode.html":{}}}],["constructor(name",{"_index":502,"title":{},"body":{"classes/BMNode.html":{},"classes/ILNode.html":{}}}],["constructor(nodes",{"_index":4236,"title":{},"body":{"classes/UpdateBimodal.html":{}}}],["constructor(organslist",{"_index":4279,"title":{},"body":{"classes/UpdateSelectedOrgansBeforeFilter.html":{}}}],["constructor(private",{"_index":772,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/ConfigService.html":{},"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["constructor(public",{"_index":1036,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"classes/HasError.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["constructor(reportdata",{"_index":4276,"title":{},"body":{"classes/UpdateReport.html":{}}}],["constructor(searchstructures",{"_index":1917,"title":{},"body":{"classes/DoSearch.html":{}}}],["constructor(sheet",{"_index":2187,"title":{},"body":{"classes/FetchAllOrganData.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateSheet.html":{}}}],["constructor(spec",{"_index":4284,"title":{},"body":{"classes/UpdateVegaSpec.html":{}}}],["constructor(store",{"_index":717,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["constructor(structure",{"_index":101,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["constructor(text",{"_index":1062,"title":{},"body":{"classes/CloseLoading.html":{},"classes/OpenLoading.html":{},"classes/OpenSnackbar.html":{},"classes/UpdateLoadingText.html":{}}}],["constructor(type",{"_index":3597,"title":{},"body":{"classes/ReportLog.html":{}}}],["constructor(version",{"_index":2193,"title":{},"body":{"classes/FetchDataFromAssets.html":{}}}],["constructor(view",{"_index":4287,"title":{},"body":{"classes/UpdateVegaView.html":{}}}],["constructor(width",{"_index":4253,"title":{},"body":{"classes/UpdateGraphWidth.html":{}}}],["contact",{"_index":1642,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/ErrorComponent.html":{}}}],["container",{"_index":1295,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{}}}],["contains",{"_index":3701,"title":{},"body":{"injectables/SheetService.html":{},"interfaces/TreeStateModel.html":{}}}],["content",{"_index":1272,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["contentboxsize",{"_index":2582,"title":{},"body":{"components/HomeComponent.html":{}}}],["contextmenu(obj",{"_index":3509,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["contirbutors",{"_index":2528,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["contributors",{"_index":2631,"title":{},"body":{"components/HomeComponent.html":{}}}],["control",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/RootModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["controller",{"_index":3485,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["controlpanecomponent",{"_index":349,"title":{"components/ControlPaneComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["controlpanemodule",{"_index":1669,"title":{"modules/ControlPaneModule.html":{}},"body":{"modules/ControlPaneModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["controlpaneopen",{"_index":4019,"title":{},"body":{"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["controls",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["controls'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component",{"_index":1691,"title":{},"body":{"modules/ControlsModule.html":{},"modules/OmapControlsModule.html":{}}}],["controls.component.html",{"_index":3214,"title":{},"body":{"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component.scss",{"_index":3213,"title":{},"body":{"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component.ts",{"_index":3212,"title":{},"body":{"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component.ts:106",{"_index":4420,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:11",{"_index":3218,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["controls.component.ts:12",{"_index":3217,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["controls.component.ts:13",{"_index":4410,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:14",{"_index":3219,"title":{},"body":{"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component.ts:15",{"_index":4411,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":3221,"title":{},"body":{"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":4412,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:21",{"_index":4409,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":4424,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":4418,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":4415,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:40",{"_index":4417,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:49",{"_index":4422,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:60",{"_index":4421,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:71",{"_index":4423,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:82",{"_index":4413,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:90",{"_index":4414,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:98",{"_index":4416,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.module",{"_index":1683,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["controls.module.ts",{"_index":3234,"title":{},"body":{"modules/OmapControlsModule.html":{}}}],["controls/omap",{"_index":1682,"title":{},"body":{"modules/ControlPaneModule.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{}}}],["controls/readme.md",{"_index":4674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controlsmodule",{"_index":1674,"title":{"modules/ControlsModule.html":{}},"body":{"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"index.html":{},"modules.html":{}}}],["controlvalueaccessor",{"_index":2211,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["coordinate",{"_index":2613,"title":{},"body":{"components/HomeComponent.html":{}}}],["coordinates",{"_index":735,"title":{},"body":{"injectables/BimodalService.html":{}}}],["copy",{"_index":2163,"title":{},"body":{"components/ErrorComponent.html":{}}}],["copyright",{"_index":2405,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyrightyear",{"_index":1925,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["core",{"_index":2642,"title":{},"body":{"components/HomeComponent.html":{}}}],["could’ve",{"_index":2161,"title":{},"body":{"components/ErrorComponent.html":{}}}],["count",{"_index":106,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/HomeComponent.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["cover",{"_index":2693,"title":{},"body":{"components/HomeComponent.html":{}}}],["creat",{"_index":4342,"title":{},"body":{"injectables/VegaService.html":{}}}],["create",{"_index":531,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Data.html":{},"classes/Legends.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["create(config",{"_index":3808,"title":{},"body":{"classes/Signals.html":{}}}],["create(currentsheet",{"_index":1723,"title":{},"body":{"classes/Data.html":{}}}],["createcompareform",{"_index":1079,"title":{},"body":{"components/CompareComponent.html":{}}}],["createcompareform(link",{"_index":1111,"title":{},"body":{"components/CompareComponent.html":{}}}],["created",{"_index":2811,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["creates",{"_index":1735,"title":{},"body":{"classes/Data.html":{},"classes/Marks.html":{},"classes/Scales.html":{}}}],["creation",{"_index":4630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":667,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["cs",{"_index":1496,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["cscontrols",{"_index":1090,"title":{},"body":{"components/CompareComponent.html":{}}}],["csv",{"_index":1245,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["csv/xlsx",{"_index":4312,"title":{},"body":{"components/UploadComponent.html":{}}}],["csvfileurl",{"_index":3697,"title":{},"body":{"injectables/SheetService.html":{}}}],["csvurl",{"_index":1109,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ct",{"_index":94,"title":{"interfaces/CT.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ct_b",{"_index":117,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["ct_b_organwise",{"_index":121,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["ct_blue",{"_index":33,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["ct_bm",{"_index":783,"title":{},"body":{"injectables/BimodalService.html":{}}}],["ct_bm[node.organname",{"_index":936,"title":{},"body":{"injectables/BimodalService.html":{}}}],["ct_bm_links",{"_index":782,"title":{},"body":{"injectables/BimodalService.html":{}}}],["ct_id",{"_index":127,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["ct_name",{"_index":126,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["ctrl",{"_index":3548,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["ctsizeoptions",{"_index":2422,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["ctwithnob",{"_index":1003,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["ctwithnolink",{"_index":998,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["current",{"_index":733,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["currentcolor",{"_index":4454,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["currently",{"_index":3691,"title":{},"body":{"injectables/SheetService.html":{}}}],["currentsheet",{"_index":1720,"title":{},"body":{"classes/Data.html":{},"components/DebugLogsComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["currentsheet.display",{"_index":2860,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["cursor",{"_index":658,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/NavItemComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["curve",{"_index":1804,"title":{},"body":{"classes/Data.html":{}}}],["custom",{"_index":4364,"title":{},"body":{"injectables/VegaService.html":{}}}],["cut",{"_index":2739,"title":{},"body":{"components/HomeComponent.html":{}}}],["d",{"_index":2466,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["d8d8d8",{"_index":3184,"title":{},"body":{"components/NavItemComponent.html":{}}}],["dark",{"_index":2001,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["darkblue",{"_index":611,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["darken($color",{"_index":2463,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["data",{"_index":331,"title":{"classes/Data.html":{}},"body":{"components/AppComponent.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data(currentsheet",{"_index":1759,"title":{},"body":{"classes/Data.html":{}}}],["data.create(currentsheet",{"_index":4392,"title":{},"body":{"injectables/VegaService.html":{}}}],["data.csvurl",{"_index":3566,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["data.data",{"_index":2325,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["data.foreach((row",{"_index":2842,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{}}}],["data.formdata",{"_index":3570,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["data.getfromcache",{"_index":3351,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["data.gid",{"_index":3562,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["data.length",{"_index":1575,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["data.omaporgans",{"_index":3356,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["data.organs",{"_index":3354,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["data.push",{"_index":1181,"title":{},"body":{"components/CompareComponent.html":{}}}],["data.sheetid",{"_index":3564,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["data:text/json;charset=utf",{"_index":4442,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["data[0].anatomical_structures[0].id",{"_index":2837,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["data[0].anatomical_structures[0].name",{"_index":4062,"title":{},"body":{"injectables/TreeService.html":{}}}],["data[0].anatomical_structures[0].notes",{"_index":4063,"title":{},"body":{"injectables/TreeService.html":{}}}],["data[data.findindex((i",{"_index":990,"title":{},"body":{"injectables/BimodalService.html":{}}}],["dataelement.symbol",{"_index":3359,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["dataelement.version?.find((v",{"_index":3404,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["dataelement.version?.foreach((v",{"_index":3358,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["dataelement?.version?.foreach((v",{"_index":3361,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["datalookup",{"_index":1619,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["datalookup[e.ontologyid",{"_index":1626,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["datasets",{"_index":2367,"title":{},"body":{"components/FooterComponent.html":{}}}],["datasource",{"_index":2320,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"components/OrganTableSelectorComponent.html":{}}}],["datasource.data.length",{"_index":3390,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["dataversion",{"_index":2307,"title":{},"body":{"interfaces/FlatNode.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"injectables/SheetService.html":{},"miscellaneous/functions.html":{}}}],["date().getfullyear",{"_index":1949,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["datum",{"_index":706,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.btype",{"_index":662,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.children",{"_index":3867,"title":{},"body":{"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.color",{"_index":670,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.datum.children",{"_index":4009,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["datum.datum.id",{"_index":608,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.group",{"_index":672,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.id",{"_index":680,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Data.html":{},"classes/Signals.html":{}}}],["datum.isnew",{"_index":668,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.label",{"_index":678,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.name",{"_index":671,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.ontologyid",{"_index":676,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.pathcolor",{"_index":639,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.problem",{"_index":685,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.source.group",{"_index":637,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.source.id",{"_index":635,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.source.pathcolor",{"_index":649,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.source.references",{"_index":3861,"title":{},"body":{"classes/Signals.html":{}}}],["datum.sources",{"_index":3874,"title":{},"body":{"classes/Signals.html":{}}}],["datum.target.group",{"_index":625,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Signals.html":{}}}],["datum.target.id",{"_index":640,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.target.pathcolor",{"_index":650,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.target.references",{"_index":3860,"title":{},"body":{"classes/Signals.html":{}}}],["datum.targets",{"_index":3873,"title":{},"body":{"classes/Signals.html":{}}}],["datum.type",{"_index":3866,"title":{},"body":{"classes/Signals.html":{}}}],["dd",{"_index":137,"title":{"interfaces/DD.html":{}},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["de.symbol",{"_index":3346,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["de.version?.foreach((v",{"_index":3345,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["debug",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["debuglogopen",{"_index":4159,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["debuglogscomponent",{"_index":352,"title":{"components/DebugLogsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["debuglogsmodule",{"_index":1855,"title":{"modules/DebugLogsModule.html":{}},"body":{"modules/DebugLogsModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["declarations",{"_index":189,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["declare",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["decoration",{"_index":2036,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["decorators",{"_index":1529,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/DoiComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{},"injectables/LogsState.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"injectables/TreeService.html":{}}}],["deep",{"_index":1268,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["default",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"classes/BMNode.html":{},"injectables/BimodalService.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":3077,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["defined",{"_index":207,"title":{},"body":{"modules/AnalyticsModule.html":{},"components/AppComponent.html":{},"classes/BMNode.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["degree",{"_index":87,"title":{"interfaces/Degree.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["delay",{"_index":2754,"title":{},"body":{"components/HomeComponent.html":{},"components/LegendComponent.html":{}}}],["delete",{"_index":1215,"title":{},"body":{"components/CompareComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["deletecomparesheet",{"_index":1866,"title":{"classes/DeleteCompareSheet.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["denote",{"_index":3839,"title":{},"body":{"classes/Signals.html":{}}}],["denotes",{"_index":4030,"title":{},"body":{"injectables/TreeService.html":{}}}],["dependencies",{"_index":187,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["deprecated",{"_index":2170,"title":{},"body":{"components/ErrorComponent.html":{}}}],["depricated",{"_index":1727,"title":{},"body":{"classes/Data.html":{},"classes/Marks.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["deps",{"_index":248,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{}}}],["depth",{"_index":1788,"title":{},"body":{"classes/Data.html":{}}}],["desc",{"_index":1186,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DocsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":731,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["deselect",{"_index":3394,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["deselected",{"_index":4380,"title":{},"body":{"injectables/VegaService.html":{}}}],["desktops",{"_index":2729,"title":{},"body":{"components/HomeComponent.html":{}}}],["details",{"_index":2135,"title":{},"body":{"components/DoiComponent.html":{}}}],["determins",{"_index":3684,"title":{},"body":{"injectables/SheetService.html":{}}}],["develop",{"_index":2611,"title":{},"body":{"components/HomeComponent.html":{}}}],["developed",{"_index":2368,"title":{},"body":{"components/FooterComponent.html":{}}}],["developer",{"_index":4581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developing",{"_index":4656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["developmentmode",{"_index":228,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["devices",{"_index":2722,"title":{},"body":{"components/HomeComponent.html":{}}}],["diagonal",{"_index":1793,"title":{},"body":{"classes/Data.html":{}}}],["dialog",{"_index":3324,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["dialogref",{"_index":3269,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["diamond",{"_index":664,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["didn't",{"_index":2171,"title":{},"body":{"components/ErrorComponent.html":{}}}],["didn\\'t",{"_index":2180,"title":{},"body":{"components/ErrorComponent.html":{}}}],["different",{"_index":2609,"title":{},"body":{"components/HomeComponent.html":{},"injectables/TreeService.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":1320,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["directive",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["directives",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["director",{"_index":4548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":968,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["disabled",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/NavItemComponent.html":{}}}],["disclaimer",{"_index":1292,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["discrepency",{"_index":557,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/VisControlsComponent.html":{}}}],["discrepency_signal",{"_index":3876,"title":{},"body":{"classes/Signals.html":{}}}],["discrepencyid",{"_index":1365,"title":{"classes/DiscrepencyId.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["discrepencyid(discrepencyids",{"_index":1613,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencyids",{"_index":1611,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencylabel",{"_index":1364,"title":{"classes/DiscrepencyLabel.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["discrepencylabel(discrepencylabels",{"_index":1610,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencylabels",{"_index":1600,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencyset",{"_index":1602,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencyset.add",{"_index":1605,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencystructure",{"_index":114,"title":{"interfaces/DiscrepencyStructure.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["discrepencystructures",{"_index":1903,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["discussion",{"_index":1653,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["dismiss",{"_index":3938,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["dispatch",{"_index":4203,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["dispatch(new",{"_index":4204,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["display",{"_index":1296,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/Structure.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["displayed",{"_index":4148,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["displayedcolumns",{"_index":3270,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["displaying",{"_index":2605,"title":{},"body":{"components/HomeComponent.html":{}}}],["distance",{"_index":784,"title":{},"body":{"injectables/BimodalService.html":{},"components/VisControlsComponent.html":{}}}],["distances",{"_index":737,"title":{},"body":{"injectables/BimodalService.html":{}}}],["distancey",{"_index":786,"title":{},"body":{"injectables/BimodalService.html":{}}}],["div",{"_index":2937,"title":{},"body":{"components/LegendComponent.html":{}}}],["docs",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["docs'},{'name",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["docs.component",{"_index":2048,"title":{},"body":{"modules/DocsModule.html":{}}}],["docs.component.html",{"_index":1923,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs.component.scss",{"_index":1922,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs/:id",{"_index":497,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["docscomponent",{"_index":354,"title":{"components/DocsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["docsdata",{"_index":1926,"title":{},"body":{"components/DocsComponent.html":{},"injectables/DocsService.html":{}}}],["docsmodule",{"_index":423,"title":{"modules/DocsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DocsModule.html":{},"index.html":{},"modules.html":{}}}],["docsnavcomponent",{"_index":356,"title":{"components/DocsNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["docsnavmodule",{"_index":2046,"title":{"modules/DocsNavModule.html":{}},"body":{"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"index.html":{},"modules.html":{}}}],["docsservice",{"_index":1927,"title":{"injectables/DocsService.html":{}},"body":{"components/DocsComponent.html":{},"injectables/DocsService.html":{}}}],["doctors",{"_index":2638,"title":{},"body":{"components/HomeComponent.html":{}}}],["document",{"_index":3130,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{}}}],["document).body",{"_index":3160,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["document.body.appendchild(element",{"_index":4446,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["document.body.removechild(element",{"_index":4448,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["document.createelement('a",{"_index":4440,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["document.getelementbyid('actionsheight",{"_index":2575,"title":{},"body":{"components/HomeComponent.html":{}}}],["document.getelementsbytagname('body')[0].clientheight",{"_index":4111,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["document.title",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2000,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["doesformhaveerror",{"_index":1080,"title":{},"body":{"components/CompareComponent.html":{}}}],["doi",{"_index":629,"title":{"interfaces/DOI.html":{}},"body":{"classes/BimodalMarkGroup.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"components/DoiComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["doi'},{'name",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["doi.component",{"_index":2144,"title":{},"body":{"modules/DoiModule.html":{}}}],["doi.component.html",{"_index":2109,"title":{},"body":{"components/DoiComponent.html":{}}}],["doi.component.scss",{"_index":2108,"title":{},"body":{"components/DoiComponent.html":{}}}],["doi/references",{"_index":4381,"title":{},"body":{"injectables/VegaService.html":{}}}],["doicomponent",{"_index":359,"title":{"components/DoiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["doimodule",{"_index":2139,"title":{"modules/DoiModule.html":{}},"body":{"modules/DoiModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["dom",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["domain",{"_index":2607,"title":{},"body":{"components/HomeComponent.html":{},"classes/Scales.html":{}}}],["domsanitizer",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":1235,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["dosearch",{"_index":1910,"title":{"classes/DoSearch.html":{}},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["download",{"_index":3767,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["downloadable",{"_index":4624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadfn",{"_index":3770,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["dragdropmodule",{"_index":3634,"title":{},"body":{"modules/RootModule.html":{}}}],["drawer",{"_index":2021,"title":{},"body":{"components/DocsComponent.html":{}}}],["drop",{"_index":3636,"title":{},"body":{"modules/RootModule.html":{}}}],["dropdown",{"_index":3422,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["due",{"_index":2158,"title":{},"body":{"components/ErrorComponent.html":{}}}],["duplicate",{"_index":562,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"injectables/IndentedListService.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/VisControlsComponent.html":{}}}],["duplicateid",{"_index":1366,"title":{"classes/DuplicateId.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["duplicateid([...duplicateid",{"_index":1627,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicateid.filter((e",{"_index":1625,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicateid.reduce",{"_index":1620,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicateidset",{"_index":1615,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicateidset.add",{"_index":1618,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicateidstree",{"_index":1624,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicates",{"_index":4451,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["duration",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["during",{"_index":4628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dx",{"_index":691,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["dy",{"_index":693,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["e",{"_index":1622,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["e.urltitle).indexof(title",{"_index":2101,"title":{},"body":{"injectables/DocsService.html":{}}}],["e16156",{"_index":916,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["e1e1e1",{"_index":2030,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["e3e3e3",{"_index":2688,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["e41a1c",{"_index":32,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["e4e4e4",{"_index":4314,"title":{},"body":{"components/UploadComponent.html":{}}}],["each",{"_index":2495,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/SheetService.html":{}}}],["eaeaea",{"_index":2731,"title":{},"body":{"components/HomeComponent.html":{}}}],["eagerly_loaded_services",{"_index":229,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/variables.html":{}}}],["ease",{"_index":2707,"title":{},"body":{"components/HomeComponent.html":{}}}],["ececec",{"_index":1261,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsNavComponent.html":{}}}],["edgedata",{"_index":991,"title":{},"body":{"injectables/BimodalService.html":{}}}],["edgedata.values",{"_index":993,"title":{},"body":{"injectables/BimodalService.html":{}}}],["edges",{"_index":620,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["edit",{"_index":3380,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["editing",{"_index":3716,"title":{},"body":{"injectables/SheetService.html":{}}}],["efefef",{"_index":3182,"title":{},"body":{"components/NavItemComponent.html":{}}}],["el",{"_index":3139,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["element.click",{"_index":4447,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["element.display",{"_index":3413,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["element.imagingmethod",{"_index":3417,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["element.name",{"_index":1464,"title":{},"body":{"injectables/ConfigService.html":{},"components/OrganTableSelectorComponent.html":{}}}],["element.omapid",{"_index":3419,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["element.setattribute('download",{"_index":4444,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["element.setattribute('href",{"_index":4441,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["element.style.display",{"_index":4445,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["element.tissuepreservationmethod",{"_index":3418,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["element.version.length",{"_index":1461,"title":{},"body":{"injectables/ConfigService.html":{}}}],["element.version?.filter((version",{"_index":1458,"title":{},"body":{"injectables/ConfigService.html":{}}}],["element.version?.length",{"_index":1465,"title":{},"body":{"injectables/ConfigService.html":{}}}],["element.version[0].viewvalue",{"_index":3415,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["elementref",{"_index":2563,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{}}}],["elementref.nativeelement",{"_index":3961,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["elements",{"_index":2483,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/UIStateModel.html":{}}}],["elevation",{"_index":1279,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["ellen",{"_index":4569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ellenmq@indiana.edu",{"_index":4574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elsewhere",{"_index":3817,"title":{},"body":{"classes/Signals.html":{}}}],["emit",{"_index":3323,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"injectables/VegaService.html":{}}}],["emitevent",{"_index":1168,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["emitted",{"_index":2494,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["empty",{"_index":2261,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/UIStateModel.html":{}}}],["enabled",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enables",{"_index":4110,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["encode",{"_index":586,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["encodeuricomponent(sjson",{"_index":4443,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["end",{"_index":4455,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["ending",{"_index":2168,"title":{},"body":{"components/ErrorComponent.html":{}}}],["enents",{"_index":2485,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["engineer",{"_index":4537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":587,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{}}}],["entering",{"_index":3486,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["entities",{"_index":4618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":3678,"title":{},"body":{"injectables/SheetService.html":{}}}],["entitywithnootherentity",{"_index":1002,"title":{"interfaces/EntityWithNoOtherEntity.html":{}},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["entries",{"_index":2585,"title":{},"body":{"components/HomeComponent.html":{}}}],["entry",{"_index":3951,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["enum",{"_index":39,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["enumerations",{"_index":4473,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.asctbapiurl",{"_index":4663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.googleanalyticsid",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["environment.production",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.tag",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["environments/environment",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["envision",{"_index":2365,"title":{},"body":{"components/FooterComponent.html":{}}}],["err",{"_index":961,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["error",{"_index":763,"title":{"interfaces/Error.html":{}},"body":{"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DoiComponent.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ExportVega.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Response.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error'},{'name",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["error.component",{"_index":2186,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.component.html",{"_index":2156,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.scss",{"_index":2155,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.msg",{"_index":2175,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/UIStateModel.html":{}}}],["error2",{"_index":4101,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["error2.name",{"_index":4102,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["error2.status",{"_index":4103,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["errorcomponent",{"_index":361,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["errormodule",{"_index":2181,"title":{"modules/ErrorModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["errors",{"_index":2159,"title":{},"body":{"components/ErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":967,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["eslint/explicit",{"_index":3156,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["eslint/no",{"_index":971,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["event",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/ControlPaneComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"modules/MousePositionTrackerModule.html":{},"components/OmapControlsComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Signals.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["event.stoppropagation",{"_index":4437,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["event.target",{"_index":2252,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.urlafterredirects",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["event.value",{"_index":2447,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["event['organsonly",{"_index":3223,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["event['proteinsonly",{"_index":3225,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["eventemitter",{"_index":1097,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["events",{"_index":1981,"title":{},"body":{"components/DocsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"modules/MousePositionTrackerModule.html":{},"classes/Signals.html":{},"interfaces/TreeStateModel.html":{}}}],["events.subscribe((data",{"_index":3147,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["example",{"_index":2166,"title":{},"body":{"components/ErrorComponent.html":{},"components/HomeComponent.html":{}}}],["expand_more",{"_index":2602,"title":{},"body":{"components/HomeComponent.html":{},"components/IndentedListComponent.html":{}}}],["expandable",{"_index":2287,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["expansion",{"_index":1277,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["experimental",{"_index":1219,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["experts",{"_index":2608,"title":{},"body":{"components/HomeComponent.html":{}}}],["explicit",{"_index":972,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["explore",{"_index":4634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":29,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["exportcontrols",{"_index":4403,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["exportcontrols(event",{"_index":4419,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["exported",{"_index":4632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exports",{"_index":192,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["exportvega",{"_index":2153,"title":{"interfaces/ExportVega.html":{}},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Response.html":{}}}],["expr",{"_index":1807,"title":{},"body":{"classes/Data.html":{}}}],["extends",{"_index":6,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["exteral",{"_index":3679,"title":{},"body":{"injectables/SheetService.html":{}}}],["external",{"_index":2488,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["extra",{"_index":2728,"title":{},"body":{"components/HomeComponent.html":{}}}],["extralinks",{"_index":1369,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["f2f2f2",{"_index":2028,"title":{},"body":{"components/DocsComponent.html":{}}}],["f44336",{"_index":1294,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["f4f4f4",{"_index":2079,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["f5f5f5",{"_index":2465,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["fa",{"_index":2402,"title":{},"body":{"components/FooterComponent.html":{}}}],["faarrowleft",{"_index":2060,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["faarrowright",{"_index":2061,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["fachevronright",{"_index":1928,"title":{},"body":{"components/DocsComponent.html":{}}}],["factory",{"_index":3037,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["fadna",{"_index":2423,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["faenvelope",{"_index":1929,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["fafacebooksquare",{"_index":2339,"title":{},"body":{"components/FooterComponent.html":{}}}],["fafafa",{"_index":669,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{},"components/VisControlsComponent.html":{}}}],["fagithub",{"_index":2340,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["faglobe",{"_index":2341,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["failed",{"_index":964,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["fails",{"_index":3153,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["falinkedin",{"_index":2529,"title":{},"body":{"components/HomeComponent.html":{}}}],["fallthrough",{"_index":3051,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["false",{"_index":53,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FunctionsComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":2007,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["faphone",{"_index":1930,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["faq",{"_index":2362,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["fatwittersquare",{"_index":2342,"title":{},"body":{"components/FooterComponent.html":{}}}],["fb",{"_index":1071,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["fcfcfc",{"_index":3762,"title":{},"body":{"components/SidenavComponent.html":{}}}],["feature",{"_index":1218,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/UploadComponent.html":{}}}],["features",{"_index":4658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetch",{"_index":1873,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/InfoComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchallorgandata",{"_index":1878,"title":{"classes/FetchAllOrganData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchbottomsheetdata",{"_index":3670,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetchbottomsheetdata(id",{"_index":3676,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetchcomparedata",{"_index":1881,"title":{"classes/FetchCompareData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchdatafromassets",{"_index":1876,"title":{"classes/FetchDataFromAssets.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchdatafromassets(dataversion",{"_index":3688,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetching",{"_index":3694,"title":{},"body":{"injectables/SheetService.html":{},"miscellaneous/variables.html":{}}}],["fetching_text",{"_index":4527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetchinitialplaygrounddata",{"_index":1889,"title":{"classes/FetchInitialPlaygroundData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchplaygrounddata",{"_index":3671,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetchplaygrounddata(_data",{"_index":3692,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetchplaygrounduploaddata",{"_index":1892,"title":{"classes/FetchPlaygroundUploadData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchselectedorgandata",{"_index":1556,"title":{"classes/FetchSelectedOrganData.html":{}},"body":{"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchselectedorgandata(sheet",{"_index":1598,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["fetchsheetdata",{"_index":1872,"title":{"classes/FetchSheetData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchsheetdata(sheet",{"_index":3572,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["fetchsheetdata(sheetid",{"_index":3696,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetchvalidomapprotiens",{"_index":1896,"title":{"classes/FetchValidOmapProtiens.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["ff5722",{"_index":1848,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["ffca28",{"_index":1846,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["fff",{"_index":687,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/HomeComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["ffffff",{"_index":4469,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["field",{"_index":588,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"classes/MultiParentMarkGroup.html":{},"modules/NavbarModule.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{}}}],["fields",{"_index":1222,"title":{},"body":{"components/CompareComponent.html":{},"classes/Data.html":{},"components/UploadComponent.html":{}}}],["field}:${event.value}.tolowercase",{"_index":2454,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["file.name",{"_index":2255,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["file.value",{"_index":1165,"title":{},"body":{"components/CompareComponent.html":{}}}],["fileformdataevent",{"_index":1125,"title":{},"body":{"components/CompareComponent.html":{},"components/FileUploadComponent.html":{},"components/UploadComponent.html":{}}}],["filename",{"_index":1114,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["files",{"_index":1244,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["fileupload",{"_index":2232,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["fileupload.click",{"_index":2263,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["fileuploadcomponent",{"_index":363,"title":{"components/FileUploadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["fileuploaderror",{"_index":2218,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["fileuploadmodule",{"_index":424,"title":{"modules/FileUploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/FileUploadModule.html":{},"modules/PlaygroundModule.html":{},"modules/UploadModule.html":{},"index.html":{},"modules.html":{}}}],["fill",{"_index":598,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{},"classes/TreeMarkGroup.html":{},"components/VisControlsComponent.html":{}}}],["filled",{"_index":4317,"title":{},"body":{"components/UploadComponent.html":{}}}],["filter",{"_index":923,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Data.html":{},"miscellaneous/variables.html":{}}}],["filter((element",{"_index":1460,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filteredout",{"_index":1410,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["filteredproteins",{"_index":1497,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["filteredprotiens",{"_index":726,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["filteredprotiens?.includes(elem.comparatorname?.tolowercase",{"_index":865,"title":{},"body":{"injectables/BimodalService.html":{}}}],["filteredprotiens?.map((word",{"_index":775,"title":{},"body":{"injectables/BimodalService.html":{}}}],["filtering",{"_index":1900,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["find",{"_index":4498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fires",{"_index":1980,"title":{},"body":{"components/DocsComponent.html":{}}}],["first",{"_index":1849,"title":{},"body":{"components/DebugLogsComponent.html":{},"interfaces/UIStateModel.html":{}}}],["fit",{"_index":2692,"title":{},"body":{"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["fixed",{"_index":2005,"title":{},"body":{"components/DocsComponent.html":{},"components/FunctionsComponent.html":{}}}],["flag",{"_index":4067,"title":{},"body":{"injectables/TreeService.html":{},"miscellaneous/functions.html":{}}}],["flatnode",{"_index":2283,"title":{"interfaces/FlatNode.html":{}},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["flatten",{"_index":1816,"title":{},"body":{"classes/Data.html":{}}}],["flattreecontrol",{"_index":2289,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["flex",{"_index":1273,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["fly",{"_index":4637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fma",{"_index":3732,"title":{},"body":{"injectables/SheetService.html":{}}}],["fma12345",{"_index":3736,"title":{},"body":{"injectables/SheetService.html":{}}}],["fma:12456",{"_index":3737,"title":{},"body":{"injectables/SheetService.html":{}}}],["fmaid:12345",{"_index":3738,"title":{},"body":{"injectables/SheetService.html":{}}}],["focus",{"_index":4470,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["folder",{"_index":1390,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["following",{"_index":4655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["follows",{"_index":1238,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["font",{"_index":1288,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["fontawesome",{"_index":2053,"title":{},"body":{"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/OmapControlsModule.html":{}}}],["fontawesomemodule",{"_index":2051,"title":{},"body":{"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/OmapControlsModule.html":{}}}],["fontsize",{"_index":148,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"classes/TreeMarkGroup.html":{}}}],["fontweight",{"_index":701,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["footer",{"_index":2336,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/UploadComponent.html":{},"miscellaneous/enumerations.html":{}}}],["footer'},{'name",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["footer.component",{"_index":2416,"title":{},"body":{"modules/FooterModule.html":{}}}],["footer.component.html",{"_index":2338,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":2337,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.module",{"_index":2775,"title":{},"body":{"modules/HomeModule.html":{}}}],["footercomponent",{"_index":365,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["footermodule",{"_index":425,"title":{"modules/FooterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DocsModule.html":{},"modules/FooterModule.html":{},"modules/HomeModule.html":{},"index.html":{},"modules.html":{}}}],["form",{"_index":1171,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/OrganTableSelectorComponent.html":{},"classes/Scales.html":{}}}],["form.controls",{"_index":1173,"title":{},"body":{"components/CompareComponent.html":{}}}],["form.markastouched",{"_index":1172,"title":{},"body":{"components/CompareComponent.html":{}}}],["formarray",{"_index":1160,"title":{},"body":{"components/CompareComponent.html":{}}}],["formarray.controls.foreach((control",{"_index":1162,"title":{},"body":{"components/CompareComponent.html":{}}}],["format",{"_index":1240,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"injectables/SheetService.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["format/readme.md",{"_index":4670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formatdata",{"_index":3135,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["formats",{"_index":3735,"title":{},"body":{"injectables/SheetService.html":{},"miscellaneous/variables.html":{}}}],["formbuilder",{"_index":4292,"title":{},"body":{"components/UploadComponent.html":{}}}],["formcontrol",{"_index":4301,"title":{},"body":{"components/UploadComponent.html":{}}}],["formdata",{"_index":1113,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["formdata.append('csvfile",{"_index":2256,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formgroup",{"_index":1072,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["formsheets",{"_index":1073,"title":{},"body":{"components/CompareComponent.html":{}}}],["formsmodule",{"_index":1427,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{},"modules/UploadModule.html":{}}}],["formurl",{"_index":3672,"title":{},"body":{"injectables/SheetService.html":{}}}],["formurl(sheetid",{"_index":3702,"title":{},"body":{"injectables/SheetService.html":{}}}],["formvalid",{"_index":1074,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["forroot",{"_index":204,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["forroot(options",{"_index":205,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["fortawesome/angular",{"_index":2052,"title":{},"body":{"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/OmapControlsModule.html":{}}}],["fortawesome/free",{"_index":1961,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{}}}],["found",{"_index":52,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/InfoComponent.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["foundindex",{"_index":892,"title":{},"body":{"injectables/BimodalService.html":{}}}],["foundlog",{"_index":3084,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundlog?.messages.push(newlog",{"_index":3087,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundmilllog",{"_index":3095,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundmilllog?.multi_in_links.push(message",{"_index":3096,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundnillog",{"_index":3092,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundnillog?.no_in_links.push(message",{"_index":3093,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundnollog",{"_index":3089,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundnollog?.no_out_links.push(message",{"_index":3090,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundsllog",{"_index":3098,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundsllog?.self_links.push(message",{"_index":3099,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["framework",{"_index":2614,"title":{},"body":{"components/HomeComponent.html":{}}}],["fromevent",{"_index":3131,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fromevent(el",{"_index":3144,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["function",{"_index":230,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Data.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{},"miscellaneous/functions.html":{}}}],["functionalities",{"_index":2621,"title":{},"body":{"components/HomeComponent.html":{}}}],["functions",{"_index":1722,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Data.html":{},"components/FunctionsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions'},{'name",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["functions.component",{"_index":2478,"title":{},"body":{"modules/FunctionsModule.html":{}}}],["functions.component.html",{"_index":2419,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["functions.component.scss",{"_index":2418,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["functions/functions.module",{"_index":1685,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["functions/readme.md",{"_index":4673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functionscomponent",{"_index":367,"title":{"components/FunctionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["functionsmodule",{"_index":1675,"title":{"modules/FunctionsModule.html":{}},"body":{"modules/ControlPaneModule.html":{},"modules/FunctionsModule.html":{},"index.html":{},"modules.html":{}}}],["g",{"_index":1333,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ga",{"_index":1075,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["ga.event('webpage",{"_index":3148,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["ga_details",{"_index":3366,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["ga_details.numorgans",{"_index":3375,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["ga_details.selectedorgans.length",{"_index":3376,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["ga_details.selectedorgans.push",{"_index":3371,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["gaaction",{"_index":1138,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gaaction.click",{"_index":2450,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["gacategory",{"_index":1139,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gacategory.compare",{"_index":1191,"title":{},"body":{"components/CompareComponent.html":{}}}],["gacategory.controls",{"_index":2451,"title":{},"body":{"components/FunctionsComponent.html":{},"components/VisControlsComponent.html":{}}}],["gacategory.docs",{"_index":1985,"title":{},"body":{"components/DocsComponent.html":{}}}],["gacategory.footer",{"_index":2360,"title":{},"body":{"components/FooterComponent.html":{}}}],["gacategory.graph",{"_index":2880,"title":{},"body":{"components/InfoComponent.html":{},"injectables/VegaService.html":{}}}],["gacategory.home",{"_index":2593,"title":{},"body":{"components/HomeComponent.html":{}}}],["gacategory.navbar",{"_index":3378,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"interfaces/UIStateModel.html":{}}}],["gacategory.playground",{"_index":3559,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["gacompareinfo",{"_index":1140,"title":{"interfaces/GaCompareInfo.html":{}},"body":{"components/CompareComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["ganodeinfo",{"_index":2496,"title":{"interfaces/GaNodeInfo.html":{}},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/VegaService.html":{}}}],["gaorganinfo",{"_index":2500,"title":{"interfaces/GaOrganInfo.html":{}},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["gaorgansinfo",{"_index":2499,"title":{"interfaces/GaOrgansInfo.html":{}},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/OrganTableSelectorComponent.html":{}}}],["gap",{"_index":1323,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/UploadComponent.html":{}}}],["gatoken",{"_index":225,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{}}}],["gedge",{"_index":1391,"title":{"interfaces/GEdge.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["gene",{"_index":174,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":1652,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["generatecolumns",{"_index":3454,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["generatecolumns(len",{"_index":3460,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["generated",{"_index":1643,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["generator",{"_index":4608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('assets/omap",{"_index":1446,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get_app",{"_index":3777,"title":{},"body":{"components/SidenavHeaderComponent.html":{},"components/VisControlsComponent.html":{}}}],["getallowtelemetry",{"_index":3955,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["getassetsurl",{"_index":3719,"title":{},"body":{"injectables/SheetService.html":{},"miscellaneous/functions.html":{}}}],["getassetsurl(dataversion",{"_index":4490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getbimodal(state",{"_index":4121,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getbimodalconfig(state",{"_index":4114,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getbiomarkertype(state",{"_index":4112,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getbottomsheet(state",{"_index":4187,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getbottomsheetdata(state",{"_index":4123,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getcomparestate(state",{"_index":4189,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getcontrolpanestate(state",{"_index":4176,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getcscontrols",{"_index":1131,"title":{},"body":{"components/CompareComponent.html":{}}}],["getdata",{"_index":2086,"title":{},"body":{"injectables/DocsService.html":{}}}],["getdata(title",{"_index":2090,"title":{},"body":{"injectables/DocsService.html":{}}}],["getdatawithbody",{"_index":3673,"title":{},"body":{"injectables/SheetService.html":{}}}],["getdatawithbody(data",{"_index":3705,"title":{},"body":{"injectables/SheetService.html":{}}}],["getdebuglog(state",{"_index":4185,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["geterror(state",{"_index":4177,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getfoundindex",{"_index":4480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getfoundindex(str",{"_index":4492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getfromcache",{"_index":1346,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["gethassomeorgans",{"_index":3331,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["getid",{"_index":2087,"title":{},"body":{"injectables/DocsService.html":{}}}],["getid(title",{"_index":2092,"title":{},"body":{"injectables/DocsService.html":{}}}],["getindentlist(state",{"_index":4179,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getlatestsearchstructure(state",{"_index":4129,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getlinksdata(state",{"_index":4125,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getloading(state",{"_index":4172,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getloadingtext(state",{"_index":4174,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getlogs",{"_index":3063,"title":{},"body":{"injectables/LogsState.html":{}}}],["getlogs(state",{"_index":3068,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["getomapconfig(state",{"_index":4131,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getrandomcolor",{"_index":1081,"title":{},"body":{"components/CompareComponent.html":{}}}],["getreport(state",{"_index":4181,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getrightsidenav(state",{"_index":4183,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getsearchstate(state",{"_index":4191,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getsnackbar(state",{"_index":4170,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate",{"_index":3080,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["getstate().compareopen",{"_index":4231,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate().controlpaneopen",{"_index":4199,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate().debuglogopen",{"_index":4215,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate().indentlistopen",{"_index":4209,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate().reportopen",{"_index":4211,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate().searchopen",{"_index":4234,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getting",{"_index":644,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["gettitle",{"_index":2088,"title":{},"body":{"injectables/DocsService.html":{}}}],["gettitle(id",{"_index":2094,"title":{},"body":{"injectables/DocsService.html":{}}}],["gettreedata(state",{"_index":4117,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getvegaspec(state",{"_index":4116,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getvegaview(state",{"_index":4119,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["gid",{"_index":1108,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["github",{"_index":1991,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["given",{"_index":1483,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["gives",{"_index":2619,"title":{},"body":{"components/HomeComponent.html":{}}}],["gnode",{"_index":1393,"title":{"interfaces/GNode.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["go",{"_index":2617,"title":{},"body":{"components/HomeComponent.html":{}}}],["good",{"_index":1616,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["google",{"_index":219,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["googleanalyticsid",{"_index":4647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googleanalyticsservice",{"_index":1093,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["googleanalyticssyncservice",{"_index":196,"title":{"injectables/GoogleAnalyticsSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["goto",{"_index":2032,"title":{},"body":{"components/DocsComponent.html":{}}}],["gotoplayground",{"_index":2535,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1397,"title":{"interfaces/Graph.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["graphdata",{"_index":1398,"title":{"interfaces/GraphData.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["gree",{"_index":3648,"title":{},"body":{"classes/Scales.html":{}}}],["green",{"_index":633,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["grey",{"_index":700,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/SidenavHeaderComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["greying",{"_index":641,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["grid",{"_index":1322,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["group",{"_index":147,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"interfaces/OpenBottomSheetData.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/Snackbar.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{}}}],["group.controls['filename'].value",{"_index":1208,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["group.controls['link'].value",{"_index":1207,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["groupmark",{"_index":542,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["groupname",{"_index":54,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"injectables/VegaService.html":{}}}],["groupnamemapper",{"_index":140,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["groupnamemapper[group",{"_index":161,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["groups",{"_index":546,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["groups/bimodal",{"_index":3116,"title":{},"body":{"classes/Marks.html":{}}}],["groups/multiparent",{"_index":3118,"title":{},"body":{"classes/Marks.html":{}}}],["groups/tree",{"_index":3120,"title":{},"body":{"classes/Marks.html":{}}}],["gtag",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["gtag('config",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["h1",{"_index":2023,"title":{},"body":{"components/DocsComponent.html":{}}}],["h6",{"_index":2040,"title":{},"body":{"components/DocsComponent.html":{}}}],["hall",{"_index":2385,"title":{},"body":{"components/FooterComponent.html":{}}}],["handle",{"_index":4468,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["handled",{"_index":4310,"title":{},"body":{"components/UploadComponent.html":{}}}],["haschild",{"_index":2311,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["haserror",{"_index":756,"title":{"classes/HasError.html":{}},"body":{"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DoiComponent.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["haserror(err",{"_index":966,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["hasgiderror",{"_index":2149,"title":{},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Response.html":{}}}],["hassomeorgans",{"_index":3285,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["header",{"_index":1851,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["header.component",{"_index":3785,"title":{},"body":{"modules/SidenavHeaderModule.html":{}}}],["header.component.html",{"_index":3766,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.scss",{"_index":3765,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts",{"_index":3764,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts:10",{"_index":3771,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts:11",{"_index":3774,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts:12",{"_index":3775,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts:13",{"_index":3776,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts:9",{"_index":3772,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.module",{"_index":1431,"title":{},"body":{"modules/CompareModule.html":{},"modules/DebugLogsModule.html":{},"modules/IndentedListModule.html":{},"modules/ReportModule.html":{},"modules/UploadModule.html":{}}}],["header.module.ts",{"_index":3784,"title":{},"body":{"modules/SidenavHeaderModule.html":{}}}],["header/sidenav",{"_index":1430,"title":{},"body":{"modules/CompareModule.html":{},"modules/DebugLogsModule.html":{},"modules/IndentedListModule.html":{},"modules/ReportModule.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/UploadModule.html":{}}}],["header:hover",{"_index":1285,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["header:not(.compare",{"_index":1280,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["headercount",{"_index":1384,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["healthy",{"_index":2615,"title":{},"body":{"components/HomeComponent.html":{}}}],["height",{"_index":739,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"components/TreeComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["hello",{"_index":3773,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["help",{"_index":2372,"title":{},"body":{"components/FooterComponent.html":{},"components/SidenavHeaderComponent.html":{}}}],["help_outline",{"_index":3778,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["here",{"_index":1636,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/ErrorComponent.html":{}}}],["herr",{"_index":4558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herr.html",{"_index":4565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hgnc",{"_index":2891,"title":{},"body":{"components/InfoComponent.html":{}}}],["hi",{"_index":1639,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["hidden",{"_index":2658,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["hide",{"_index":3841,"title":{},"body":{"classes/Signals.html":{}}}],["hierarchical",{"_index":4621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highlight",{"_index":2815,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["highlighted",{"_index":977,"title":{},"body":{"injectables/BimodalService.html":{}}}],["hint",{"_index":4316,"title":{},"body":{"components/UploadComponent.html":{}}}],["hngc",{"_index":3683,"title":{},"body":{"injectables/SheetService.html":{}}}],["home",{"_index":2491,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["home'},{'name",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["home.component",{"_index":2774,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":2527,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":2526,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":369,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["homemodule",{"_index":426,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"index.html":{},"modules.html":{}}}],["horizontal",{"_index":1792,"title":{},"body":{"classes/Data.html":{},"components/TreeComponent.html":{}}}],["host",{"_index":1840,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/FileUploadComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{}}}],["hostbinding",{"_index":3958,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["hostbinding('class",{"_index":3952,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["hostbindings",{"_index":3940,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["hover",{"_index":638,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/VisControlsComponent.html":{}}}],["hover:not(.bg",{"_index":2026,"title":{},"body":{"components/DocsComponent.html":{}}}],["hovered",{"_index":1747,"title":{},"body":{"classes/Data.html":{},"classes/Signals.html":{}}}],["hovering",{"_index":3819,"title":{},"body":{"classes/Signals.html":{}}}],["hraversion",{"_index":1372,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["hrishikesh",{"_index":4534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hrpaul@iu.edu",{"_index":4540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["htmlelement",{"_index":3134,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/functions.html":{}}}],["htmlinputelement",{"_index":2230,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["http",{"_index":1444,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["http://localhost:5000",{"_index":4660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1442,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["httpclientmodule",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["https://apps.humanatlas.io/asctb",{"_index":4650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cns.iu.edu/current_team/bio/bruce",{"_index":4564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cns.iu.edu/current_team/bio/ellen",{"_index":4575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://docs.google.com/spreadsheets/d",{"_index":3913,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["https://docs.google.com/spreadsheets/d/${sheetid}/export?format=csv&gid=${gid",{"_index":3727,"title":{},"body":{"injectables/SheetService.html":{}}}],["https://docs.google.com/spreadsheets/d/1j_slhfiprwucrzrcdfnh15owoilf7cjks7nvppe3hti/edit#gid=1268820100",{"_index":1995,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["https://github.com/bherr2",{"_index":4567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/hrishikeshpaul",{"_index":4544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/macvogelsang",{"_index":4590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/nikhil",{"_index":4596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/pbrm4",{"_index":4603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/vutukuriajay2241",{"_index":4583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://hrishikeshpaul.github.io",{"_index":4541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://in.linkedin.com/in/ajay",{"_index":4584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://info.sice.indiana.edu/~katy",{"_index":4551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://vega.github.io/schema/vega/v5.json",{"_index":4387,"title":{},"body":{"injectables/VegaService.html":{}}}],["https://www.linkedin.com/in/bruceherr",{"_index":4566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.linkedin.com/in/hrishikeshpaul",{"_index":4543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.linkedin.com/in/katy",{"_index":4552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.linkedin.com/in/mac",{"_index":4591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.linkedin.com/in/nikhilm2395",{"_index":4598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubmap",{"_index":2375,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["human",{"_index":2610,"title":{},"body":{"components/HomeComponent.html":{}}}],["hyphens",{"_index":2014,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["i.btype",{"_index":2974,"title":{},"body":{"injectables/LegendService.html":{}}}],["i.color",{"_index":2969,"title":{},"body":{"injectables/LegendService.html":{}}}],["i.color)?.title",{"_index":2973,"title":{},"body":{"injectables/LegendService.html":{}}}],["i.comparator",{"_index":2846,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["i.comparatorid",{"_index":4069,"title":{},"body":{"injectables/TreeService.html":{}}}],["i.comparatorname",{"_index":4072,"title":{},"body":{"injectables/TreeService.html":{}}}],["i.group",{"_index":897,"title":{},"body":{"injectables/BimodalService.html":{}}}],["i.isnew",{"_index":2967,"title":{},"body":{"injectables/LegendService.html":{}}}],["i.name",{"_index":898,"title":{},"body":{"injectables/BimodalService.html":{}}}],["i.ontologyid",{"_index":896,"title":{},"body":{"injectables/BimodalService.html":{}}}],["i.organname",{"_index":4071,"title":{},"body":{"injectables/TreeService.html":{}}}],["i.proteinpresence",{"_index":2975,"title":{},"body":{"injectables/LegendService.html":{}}}],["i.type",{"_index":2845,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"injectables/TreeService.html":{}}}],["i2",{"_index":1841,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["icon",{"_index":1019,"title":{},"body":{"classes/ClearSheetLogs.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"components/SidenavHeaderComponent.html":{}}}],["icons",{"_index":1963,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{}}}],["id",{"_index":46,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["id.includes",{"_index":3741,"title":{},"body":{"injectables/SheetService.html":{}}}],["id.split(':')[0",{"_index":3743,"title":{},"body":{"injectables/SheetService.html":{}}}],["id.split(':')[1",{"_index":3742,"title":{},"body":{"injectables/SheetService.html":{}}}],["id.substring(3",{"_index":3740,"title":{},"body":{"injectables/SheetService.html":{}}}],["id.tolowercase().startswith('fma",{"_index":3739,"title":{},"body":{"injectables/SheetService.html":{}}}],["identicalas",{"_index":1400,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["identicalb",{"_index":1404,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["identicalbmctpair",{"_index":1406,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["identicalct",{"_index":1402,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["idnameset",{"_index":4060,"title":{},"body":{"injectables/TreeService.html":{}}}],["idnameset[newnode.ontologyid",{"_index":4083,"title":{},"body":{"injectables/TreeService.html":{}}}],["idnameset[structure.id",{"_index":4077,"title":{},"body":{"injectables/TreeService.html":{}}}],["ids",{"_index":1740,"title":{},"body":{"classes/Data.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"components/VisControlsComponent.html":{}}}],["idx",{"_index":921,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{}}}],["ignored",{"_index":3043,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["igoogleanalyticscommand",{"_index":216,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["igoogleanalyticssettings",{"_index":2504,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ii",{"_index":4559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["il",{"_index":4212,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["ilnode",{"_index":2297,"title":{"classes/ILNode.html":{}},"body":{"interfaces/FlatNode.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{}}}],["ilnode(data[0].anatomical_structures[0].name",{"_index":2836,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["ilnode(structure.name",{"_index":2850,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["image",{"_index":2659,"title":{},"body":{"components/HomeComponent.html":{},"components/LegendComponent.html":{}}}],["images",{"_index":2530,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["images/compare.svg",{"_index":4609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/il.svg",{"_index":4610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/link.svg",{"_index":4611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/report.svg",{"_index":4607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/vis.svg",{"_index":4605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imaging",{"_index":3313,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["imagingmethod",{"_index":1378,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["img",{"_index":2661,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["img:nth",{"_index":2752,"title":{},"body":{"components/HomeComponent.html":{}}}],["imgoptions",{"_index":1385,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["implements",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Node.html":{},"pipes/OrderByPipe.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["important",{"_index":1284,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["imports",{"_index":243,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{}}}],["improve",{"_index":3966,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["inactive",{"_index":4462,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["incase",{"_index":4217,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["indata(\"sources_clicked_array",{"_index":1821,"title":{},"body":{"classes/Data.html":{}}}],["indata(\"sources_hovered_array",{"_index":1824,"title":{},"body":{"classes/Data.html":{}}}],["indata(\"targets_clicked_array",{"_index":1822,"title":{},"body":{"classes/Data.html":{}}}],["indata(\"targets_hovered_array",{"_index":1825,"title":{},"body":{"classes/Data.html":{}}}],["indata('discrepencyid",{"_index":616,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["indata('discrepencylabel",{"_index":612,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["indata('duplicateid",{"_index":619,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["indata('search",{"_index":607,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["indata('sources_clicked_array",{"_index":648,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('sources_hovered_array",{"_index":647,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('sources_of_sources__click",{"_index":682,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('sources_of_sources__hover",{"_index":684,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('targets_clicked_array",{"_index":646,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('targets_hovered_array",{"_index":645,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('targets_of_targets__click",{"_index":681,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('targets_of_targets__hover",{"_index":683,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('view_mode__click",{"_index":679,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('view_mode__hover",{"_index":653,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indegree",{"_index":12,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["indent",{"_index":1044,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"interfaces/FlatNode.html":{},"classes/HasError.html":{},"components/IndentedListComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["indent'},{'name",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["indentdata",{"_index":2304,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{}}}],["indented",{"_index":2300,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"interfaces/Node.html":{},"interfaces/UIStateModel.html":{},"miscellaneous/variables.html":{}}}],["indentedlist",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["indentedlistcomponent",{"_index":371,"title":{"components/IndentedListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["indentedlistmodule",{"_index":2822,"title":{"modules/IndentedListModule.html":{}},"body":{"modules/IndentedListModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["indentedlistservice",{"_index":2299,"title":{"injectables/IndentedListService.html":{}},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{}}}],["indentlistopen",{"_index":4160,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["indentservice",{"_index":2323,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["indenttree",{"_index":2310,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexof(node_sources__hover",{"_index":1810,"title":{},"body":{"classes/Data.html":{}}}],["indexof(node_targets__hover",{"_index":1808,"title":{},"body":{"classes/Data.html":{}}}],["indexof(sources__click",{"_index":1814,"title":{},"body":{"classes/Data.html":{}}}],["indexof(targets__click",{"_index":1812,"title":{},"body":{"classes/Data.html":{}}}],["indiana",{"_index":2370,"title":{},"body":{"components/FooterComponent.html":{}}}],["indicate",{"_index":4500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["infinite",{"_index":2749,"title":{},"body":{"components/HomeComponent.html":{}}}],["infinity",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["infix",{"_index":3434,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["info'},{'name",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["info.component",{"_index":2900,"title":{},"body":{"modules/InfoModule.html":{}}}],["info.component.html",{"_index":2863,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":2862,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.desc",{"_index":2888,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.haserror",{"_index":2875,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.iri",{"_index":2892,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.msg",{"_index":2877,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.name",{"_index":2881,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.notes",{"_index":2883,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.ontologycode",{"_index":2890,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.ontologyid",{"_index":2889,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.status",{"_index":2878,"title":{},"body":{"components/InfoComponent.html":{}}}],["infoccf&#64;indiana.edu",{"_index":2393,"title":{},"body":{"components/FooterComponent.html":{}}}],["infoccf@indiana.edu",{"_index":2411,"title":{},"body":{"components/FooterComponent.html":{}}}],["infocomponent",{"_index":373,"title":{"components/InfoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["infomodule",{"_index":2895,"title":{"modules/InfoModule.html":{}},"body":{"modules/InfoModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["information",{"_index":2493,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/InfoComponent.html":{},"interfaces/TreeStateModel.html":{}}}],["inherit",{"_index":4453,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["initcommands",{"_index":4482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initcommands(options",{"_index":239,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["initial",{"_index":1890,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/OrganTableSelectorComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["initialize",{"_index":3467,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["initializeapp",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initializeapp(configservice",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initializetree",{"_index":2792,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["initializetree(data",{"_index":2333,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["inittable",{"_index":3455,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["inittable(data",{"_index":3465,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["inject",{"_index":2121,"title":{},"body":{"components/DoiComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inject(document",{"_index":3158,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["inject(local_storage_consent_key",{"_index":3040,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["inject(mat_bottom_sheet_data",{"_index":2116,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["inject(mat_dialog_data",{"_index":3015,"title":{},"body":{"components/LoadingComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":3953,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["inject(ngx_google_analytics_settings_token",{"_index":2512,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["inject(ngx_window",{"_index":2511,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["injectable",{"_index":709,"title":{"injectables/BimodalService.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"injectables/DocsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}},"body":{"injectables/BimodalService.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"injectables/DocsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["injectables",{"_index":711,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"injectables/DocsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{},"index.html":{}}}],["injectiontoken",{"_index":3032,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["injectiontoken('key",{"_index":3034,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":1319,"title":{},"body":{"components/CompareComponent.html":{},"components/LegendComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{}}}],["inlinesize",{"_index":2583,"title":{},"body":{"components/HomeComponent.html":{}}}],["input",{"_index":1133,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsNavComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["input[type='color",{"_index":1263,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["inputs",{"_index":1085,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsNavComponent.html":{},"components/ErrorComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/VisControlsComponent.html":{}}}],["insert",{"_index":3510,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["instance",{"_index":3497,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["instanceof",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["institutions",{"_index":2649,"title":{},"body":{"components/HomeComponent.html":{}}}],["instruction",{"_index":1287,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["instructions",{"_index":1216,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["intentionally",{"_index":2260,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["inter",{"_index":2671,"title":{},"body":{"components/HomeComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Legend.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/IndentedListComponent.html":{},"interfaces/Legend.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["interfaces",{"_index":1,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Legend.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"index.html":{}}}],["intermediate",{"_index":1341,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["intial",{"_index":2126,"title":{},"body":{"components/DoiComponent.html":{}}}],["introduction",{"_index":1974,"title":{},"body":{"components/DocsComponent.html":{},"miscellaneous/variables.html":{}}}],["invalid",{"_index":2884,"title":{},"body":{"components/InfoComponent.html":{}}}],["inverting",{"_index":4196,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["iri",{"_index":1368,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["isallselected",{"_index":3281,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["isbiomarker",{"_index":4495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isforreport",{"_index":4494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isintilalselect",{"_index":1345,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["isnew",{"_index":13,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["isomap",{"_index":1331,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["isreport",{"_index":723,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["isreportnotorganwise",{"_index":4496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issue",{"_index":2173,"title":{},"body":{"components/ErrorComponent.html":{}}}],["issue/bug",{"_index":1647,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["issues",{"_index":2172,"title":{},"body":{"components/ErrorComponent.html":{}}}],["isvalid(datum.source.references",{"_index":630,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["item",{"_index":1839,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"components/NavItemComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["item'},{'name",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["item.color",{"_index":2981,"title":{},"body":{"injectables/LegendService.html":{}}}],["item.component",{"_index":3190,"title":{},"body":{"modules/NavItemModule.html":{}}}],["item.component.html",{"_index":3175,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item.component.scss",{"_index":3174,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item.component.ts",{"_index":3173,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item.component.ts:10",{"_index":3176,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item.component.ts:9",{"_index":3177,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item.display",{"_index":3372,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["item.doi",{"_index":2132,"title":{},"body":{"components/DoiComponent.html":{}}}],["item.doi.substring(5",{"_index":2133,"title":{},"body":{"components/DoiComponent.html":{}}}],["item.doi.touppercase().search('doi",{"_index":2131,"title":{},"body":{"components/DoiComponent.html":{}}}],["item.id",{"_index":2136,"title":{},"body":{"components/DoiComponent.html":{}}}],["item.key",{"_index":2893,"title":{},"body":{"components/InfoComponent.html":{}}}],["item.module",{"_index":3202,"title":{},"body":{"modules/NavbarModule.html":{}}}],["item.module.ts",{"_index":3189,"title":{},"body":{"modules/NavItemModule.html":{}}}],["item.name",{"_index":3368,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["item.notes",{"_index":2137,"title":{},"body":{"components/DoiComponent.html":{}}}],["item.symbol",{"_index":3369,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["item.symbol.split",{"_index":3373,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["item.title",{"_index":1998,"title":{},"body":{"components/DocsComponent.html":{},"injectables/LegendService.html":{}}}],["item.value",{"_index":2894,"title":{},"body":{"components/InfoComponent.html":{}}}],["item/nav",{"_index":3172,"title":{},"body":{"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{}}}],["item:active",{"_index":3183,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item:hover",{"_index":3181,"title":{},"body":{"components/NavItemComponent.html":{}}}],["items",{"_index":1297,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["items.push",{"_index":3512,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["iteration",{"_index":2748,"title":{},"body":{"components/HomeComponent.html":{}}}],["iu",{"_index":2635,"title":{},"body":{"components/HomeComponent.html":{}}}],["jexcel",{"_index":3468,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["jexcel.column",{"_index":3464,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["jexcel.jspreadsheetinstance",{"_index":3495,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["jexcel_about",{"_index":3573,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["json",{"_index":3709,"title":{},"body":{"injectables/SheetService.html":{}}}],["json.parse(json.stringify(this.currentsheet",{"_index":3560,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["json.stringify(ga_details",{"_index":3379,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["json.stringify(nodeinfo",{"_index":4371,"title":{},"body":{"injectables/VegaService.html":{}}}],["json.stringify(sheetinfo",{"_index":1193,"title":{},"body":{"components/CompareComponent.html":{}}}],["json.stringify(this.config",{"_index":4439,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["jsonld",{"_index":3726,"title":{},"body":{"injectables/SheetService.html":{}}}],["jspreadsheet",{"_index":3498,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["jump",{"_index":2594,"title":{},"body":{"components/HomeComponent.html":{}}}],["justify",{"_index":1299,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["katy",{"_index":4546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["katy@indiana.edu",{"_index":4550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keep",{"_index":3074,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/PlaygroundComponent.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["keeps",{"_index":3494,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["key",{"_index":234,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"classes/Data.html":{},"injectables/LocalStorageSyncService.html":{},"pipes/OrderByPipe.html":{}}}],["keyframes",{"_index":2763,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyof",{"_index":162,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"pipes/OrderByPipe.html":{}}}],["knob",{"_index":4465,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["know",{"_index":2628,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["l",{"_index":901,"title":{},"body":{"injectables/BimodalService.html":{},"components/HomeComponent.html":{}}}],["l.color",{"_index":2968,"title":{},"body":{"injectables/LegendService.html":{}}}],["l.icon",{"_index":1835,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["l.id",{"_index":3086,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["l.loadingtext",{"_index":3023,"title":{},"body":{"components/LoadingComponent.html":{}}}],["l.name",{"_index":2928,"title":{},"body":{"components/LegendComponent.html":{},"injectables/LegendService.html":{}}}],["l.s",{"_index":932,"title":{},"body":{"injectables/BimodalService.html":{}}}],["l.t",{"_index":933,"title":{},"body":{"injectables/BimodalService.html":{}}}],["lab",{"_index":4597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":14,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["labelfontsize",{"_index":2991,"title":{},"body":{"classes/Legends.html":{}}}],["labeloffset",{"_index":2992,"title":{},"body":{"classes/Legends.html":{}}}],["labels",{"_index":1742,"title":{},"body":{"classes/Data.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{}}}],["laptop",{"_index":2715,"title":{},"body":{"components/HomeComponent.html":{}}}],["laptop:after",{"_index":2716,"title":{},"body":{"components/HomeComponent.html":{}}}],["large",{"_index":2366,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["last",{"_index":728,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/TreeStateModel.html":{}}}],["lastclickedoption",{"_index":1912,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["lastclickedstructure",{"_index":4143,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["lastsearch",{"_index":4107,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["latest",{"_index":1021,"title":{},"body":{"classes/ClearSheetLogs.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["launch",{"_index":2601,"title":{},"body":{"components/HomeComponent.html":{}}}],["layer",{"_index":729,"title":{},"body":{"injectables/BimodalService.html":{}}}],["lead",{"_index":4538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaf",{"_index":791,"title":{},"body":{"injectables/BimodalService.html":{}}}],["left",{"_index":696,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"classes/Legends.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["legend",{"_index":188,"title":{"interfaces/Legend.html":{}},"body":{"modules/AnalyticsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"modules/TreeModule.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["legend'},{'name",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["legend.component",{"_index":2945,"title":{},"body":{"modules/LegendModule.html":{}}}],["legend.component.html",{"_index":2906,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.scss",{"_index":2905,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.service",{"_index":2918,"title":{},"body":{"components/LegendComponent.html":{}}}],["legendcomponent",{"_index":375,"title":{"components/LegendComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["legenddata",{"_index":2950,"title":{},"body":{"injectables/LegendService.html":{}}}],["legendmodule",{"_index":1676,"title":{"modules/LegendModule.html":{}},"body":{"modules/ControlPaneModule.html":{},"modules/LegendModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["legends",{"_index":2907,"title":{"classes/Legends.html":{}},"body":{"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/VegaService.html":{}}}],["legends().legends",{"_index":2998,"title":{},"body":{"classes/Legends.html":{}}}],["legends.create",{"_index":4394,"title":{},"body":{"injectables/VegaService.html":{}}}],["legends.findindex((l",{"_index":2965,"title":{},"body":{"injectables/LegendService.html":{}}}],["legends.push",{"_index":2966,"title":{},"body":{"injectables/LegendService.html":{}}}],["legendservice",{"_index":2910,"title":{"injectables/LegendService.html":{}},"body":{"components/LegendComponent.html":{},"injectables/LegendService.html":{}}}],["legendx",{"_index":2996,"title":{},"body":{"classes/Legends.html":{}}}],["legendy",{"_index":2997,"title":{},"body":{"classes/Legends.html":{}}}],["len",{"_index":3463,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["length(datum.source.references",{"_index":631,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["length(datum.sources",{"_index":673,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["length(datum.target.references",{"_index":626,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["length(datum.targets",{"_index":674,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["letter",{"_index":2015,"title":{},"body":{"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{}}}],["letters",{"_index":1209,"title":{},"body":{"components/CompareComponent.html":{}}}],["level",{"_index":2288,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["lh",{"_index":2176,"title":{},"body":{"components/ErrorComponent.html":{}}}],["li",{"_index":2399,"title":{},"body":{"components/FooterComponent.html":{}}}],["license",{"_index":2397,"title":{},"body":{"components/FooterComponent.html":{}}}],["light",{"_index":2027,"title":{},"body":{"components/DocsComponent.html":{}}}],["lightblue",{"_index":610,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["lightyellow",{"_index":618,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["limit",{"_index":704,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["line",{"_index":969,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ExportVega.html":{},"components/HomeComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["link",{"_index":95,"title":{"interfaces/Link.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/ErrorComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/variables.html":{}}}],["link.clearvalidators",{"_index":1166,"title":{},"body":{"components/CompareComponent.html":{}}}],["link.updatevalueandvalidity",{"_index":1167,"title":{},"body":{"components/CompareComponent.html":{}}}],["linkedin",{"_index":4542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linker",{"_index":2664,"title":{},"body":{"components/HomeComponent.html":{}}}],["linker:hover",{"_index":2666,"title":{},"body":{"components/HomeComponent.html":{}}}],["linkformcontrol",{"_index":3450,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["linkpath",{"_index":1790,"title":{},"body":{"classes/Data.html":{}}}],["links",{"_index":135,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FooterComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Link.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["links)).subscribe",{"_index":948,"title":{},"body":{"injectables/BimodalService.html":{}}}],["links).resize().runasync",{"_index":982,"title":{},"body":{"injectables/BimodalService.html":{}}}],["links.push",{"_index":904,"title":{},"body":{"injectables/BimodalService.html":{}}}],["links.some((l",{"_index":931,"title":{},"body":{"injectables/BimodalService.html":{}}}],["linksasctbdata",{"_index":115,"title":{"interfaces/LinksASCTBData.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["lipids",{"_index":176,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":1045,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"injectables/DocsService.html":{},"classes/DuplicateId.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"classes/HasError.html":{},"components/IndentedListComponent.html":{},"classes/Marks.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/Signals.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"miscellaneous/variables.html":{}}}],["list.component",{"_index":2828,"title":{},"body":{"modules/IndentedListModule.html":{}}}],["list.component.html",{"_index":2302,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["list.component.scss",{"_index":2303,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["list.component.ts",{"_index":2286,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["list.component.ts:27",{"_index":2803,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:28",{"_index":2801,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:29",{"_index":2808,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:31",{"_index":2796,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:32",{"_index":2795,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:33",{"_index":2797,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:34",{"_index":2798,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:35",{"_index":2799,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:40",{"_index":2805,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:42",{"_index":2802,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:44",{"_index":2806,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:58",{"_index":2807,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:65",{"_index":2794,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:67",{"_index":2804,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:92",{"_index":2800,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.module",{"_index":3626,"title":{},"body":{"modules/RootModule.html":{}}}],["list.module.ts",{"_index":2827,"title":{},"body":{"modules/IndentedListModule.html":{}}}],["list.service",{"_index":2301,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["list.service.ts",{"_index":2830,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["list.service.ts:11",{"_index":2835,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["list.service.ts:13",{"_index":2833,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["list/indented",{"_index":2285,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{},"modules/RootModule.html":{}}}],["list/readme.md",{"_index":4680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listed",{"_index":2622,"title":{},"body":{"components/HomeComponent.html":{}}}],["listener",{"_index":4377,"title":{},"body":{"injectables/VegaService.html":{}}}],["listeners",{"_index":4333,"title":{},"body":{"injectables/VegaService.html":{}}}],["lists",{"_index":4626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":528,"title":{},"body":{"interfaces/BimodalConfig.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetOptions.html":{},"components/TrackingPopupComponent.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{}}}],["loadconsent",{"_index":3047,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["loaded",{"_index":2266,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["loading",{"_index":1035,"title":{"interfaces/Loading.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DoiComponent.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"interfaces/Logs.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["loading'},{'name",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["loading.component",{"_index":3029,"title":{},"body":{"modules/LoadingModule.html":{}}}],["loading.component.html",{"_index":3013,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":3012,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":377,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["loadingmodule",{"_index":3024,"title":{"modules/LoadingModule.html":{}},"body":{"modules/LoadingModule.html":{},"index.html":{},"modules.html":{}}}],["loadingtext",{"_index":3005,"title":{},"body":{"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"interfaces/Logs.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{},"interfaces/UIStateModel.html":{}}}],["loads",{"_index":2882,"title":{},"body":{"components/InfoComponent.html":{}}}],["local",{"_index":223,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["local_storage_consent_key",{"_index":3033,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":4659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage",{"_index":3039,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["localstoragesyncservice",{"_index":197,"title":{"injectables/LocalStorageSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":2380,"title":{},"body":{"components/FooterComponent.html":{}}}],["log",{"_index":1017,"title":{"interfaces/Log.html":{}},"body":{"classes/ClearSheetLogs.html":{},"components/DebugLogsComponent.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"interfaces/Snackbar.html":{},"components/TrackingPopupComponent.html":{},"interfaces/UIStateModel.html":{},"miscellaneous/variables.html":{}}}],["log_icons",{"_index":759,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"miscellaneous/enumerations.html":{}}}],["log_icons.error",{"_index":965,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["log_icons.success",{"_index":987,"title":{},"body":{"injectables/BimodalService.html":{}}}],["log_types",{"_index":760,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"miscellaneous/enumerations.html":{}}}],["logentry",{"_index":3060,"title":{"interfaces/LogEntry.html":{}},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["logo1",{"_index":2697,"title":{},"body":{"components/HomeComponent.html":{}}}],["logo2",{"_index":2699,"title":{},"body":{"components/HomeComponent.html":{}}}],["logs",{"_index":1015,"title":{"interfaces/Logs.html":{}},"body":{"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DebugLogsComponent.html":{},"classes/HasError.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["logs'},{'name",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["logs.component",{"_index":1861,"title":{},"body":{"modules/DebugLogsModule.html":{}}}],["logs.component.html",{"_index":1830,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.component.scss",{"_index":1829,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.component.ts",{"_index":1828,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.component.ts:11",{"_index":1832,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.component.ts:12",{"_index":1833,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.component.ts:13",{"_index":1834,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.model",{"_index":3006,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{}}}],["logs.module",{"_index":3628,"title":{},"body":{"modules/RootModule.html":{}}}],["logs.module.ts",{"_index":1860,"title":{},"body":{"modules/DebugLogsModule.html":{}}}],["logs/debug",{"_index":1827,"title":{},"body":{"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"modules/RootModule.html":{}}}],["logslist",{"_index":1838,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logsstate",{"_index":468,"title":{"injectables/LogsState.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["logsstatemodel",{"_index":3069,"title":{"interfaces/LogsStateModel.html":{}},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["look",{"_index":4642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lookup",{"_index":1795,"title":{},"body":{"classes/Data.html":{}}}],["ls",{"_index":2908,"title":{},"body":{"components/LegendComponent.html":{}}}],["luddy",{"_index":2384,"title":{},"body":{"components/FooterComponent.html":{}}}],["m",{"_index":4570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mac",{"_index":4587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["madvogel@iu.edu",{"_index":4589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mahadevaswamy",{"_index":4594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":4539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailtext",{"_index":1654,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["mailto:infoccf@indiana.edu?subject=${subject}&body=${body",{"_index":1655,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["main",{"_index":2655,"title":{},"body":{"components/HomeComponent.html":{}}}],["make",{"_index":929,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["makeas",{"_index":767,"title":{},"body":{"injectables/BimodalService.html":{},"miscellaneous/functions.html":{}}}],["makeas(data",{"_index":4501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makeas(sheetdata",{"_index":778,"title":{},"body":{"injectables/BimodalService.html":{}}}],["makeasmultiparentedgesdata",{"_index":1699,"title":{},"body":{"classes/Data.html":{}}}],["makeasmultiparentedgesdata(multiparentlinksdata",{"_index":1725,"title":{},"body":{"classes/Data.html":{}}}],["makeastreedata",{"_index":1700,"title":{},"body":{"classes/Data.html":{}}}],["makeastreedata(_currentsheet",{"_index":1729,"title":{},"body":{"classes/Data.html":{}}}],["makeastreeheightsignal",{"_index":3792,"title":{},"body":{"classes/Signals.html":{}}}],["makeastreeheightsignal(height",{"_index":3810,"title":{},"body":{"classes/Signals.html":{}}}],["makeastreelinksdata",{"_index":1701,"title":{},"body":{"classes/Data.html":{}}}],["makeastreewidthsignal",{"_index":3793,"title":{},"body":{"classes/Signals.html":{}}}],["makeastreewidthsignal(width",{"_index":3812,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodal",{"_index":4326,"title":{},"body":{"injectables/VegaService.html":{}}}],["makebimodal(view",{"_index":4334,"title":{},"body":{"injectables/VegaService.html":{}}}],["makebimodaldata",{"_index":714,"title":{},"body":{"injectables/BimodalService.html":{}}}],["makebimodaldata(sheetdata",{"_index":720,"title":{},"body":{"injectables/BimodalService.html":{}}}],["makebimodaledgesdata",{"_index":1702,"title":{},"body":{"classes/Data.html":{}}}],["makebimodallegend",{"_index":2984,"title":{},"body":{"classes/Legends.html":{}}}],["makebimodalmarkgroup",{"_index":532,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Marks.html":{}}}],["makebimodalnodeclickstatesignal",{"_index":3794,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodalnodehoverstatesignal",{"_index":3795,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodalnodesdata",{"_index":1703,"title":{},"body":{"classes/Data.html":{}}}],["makebimodalnodesourceshoverstatesignal",{"_index":3796,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodalnodetargetshoverstatesignal",{"_index":3797,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodalpathmarks",{"_index":533,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["makebimodalsourcesclickstatesignal",{"_index":3798,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodalsymbolmarks",{"_index":534,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["makebimodaltargetsclickstatesignal",{"_index":3799,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodaltextclicksignal",{"_index":3800,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodaltextdiscrepencyidmarks",{"_index":535,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["makebimodaltextdiscrepencylabelmarks",{"_index":536,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["makebimodaltextduplicateidmarks",{"_index":537,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["makebimodaltexthoversignal",{"_index":3801,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodaltextsearchmarks",{"_index":538,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["makebimodalwithdiscrepencyid",{"_index":1501,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makebimodalwithdiscrepencyid(config",{"_index":1512,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makebimodalwithdiscrepencylabel",{"_index":1502,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makebimodalwithdiscrepencylabel(config",{"_index":1514,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makebiomarkers",{"_index":768,"title":{},"body":{"injectables/BimodalService.html":{},"miscellaneous/functions.html":{}}}],["makebiomarkers(data",{"_index":4502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makebiomarkers(sheetdata",{"_index":862,"title":{},"body":{"injectables/BimodalService.html":{}}}],["makebiomodalpathdoisignal",{"_index":3802,"title":{},"body":{"classes/Signals.html":{}}}],["makebiomodalscale",{"_index":3641,"title":{},"body":{"classes/Scales.html":{}}}],["makebiomodaltextlinkmarks",{"_index":539,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["makebiomodaltextmarks",{"_index":540,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["makecelltypes",{"_index":769,"title":{},"body":{"injectables/BimodalService.html":{},"miscellaneous/functions.html":{}}}],["makecelltypes(data",{"_index":4503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makecelltypes(sheetdata",{"_index":825,"title":{},"body":{"injectables/BimodalService.html":{}}}],["makediscrepencyiddata",{"_index":1704,"title":{},"body":{"classes/Data.html":{}}}],["makediscrepencylabeldata",{"_index":1705,"title":{},"body":{"classes/Data.html":{}}}],["makediscrepencysignal",{"_index":3803,"title":{},"body":{"classes/Signals.html":{}}}],["makeduplicateid",{"_index":1503,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makeduplicateid(config",{"_index":1516,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makeduplicateiddata",{"_index":1706,"title":{},"body":{"classes/Data.html":{}}}],["makeindentdata",{"_index":2831,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["makeindentdata(currentsheet",{"_index":2832,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["makelegenddata",{"_index":2951,"title":{},"body":{"injectables/LegendService.html":{}}}],["makelegenddata(treedata",{"_index":2952,"title":{},"body":{"injectables/LegendService.html":{}}}],["makemultiparentmarkgroup",{"_index":3108,"title":{},"body":{"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{}}}],["makemultiparentpathmarks",{"_index":3162,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["makenodeinfostring",{"_index":4327,"title":{},"body":{"injectables/VegaService.html":{}}}],["makenodeinfostring(node",{"_index":4337,"title":{},"body":{"injectables/VegaService.html":{}}}],["makesearchidsdata",{"_index":1707,"title":{},"body":{"classes/Data.html":{}}}],["makesearchsignal",{"_index":3804,"title":{},"body":{"classes/Signals.html":{}}}],["makeshowontologyidsignal",{"_index":3805,"title":{},"body":{"classes/Signals.html":{}}}],["makeshowontologyidsignal(value",{"_index":3837,"title":{},"body":{"classes/Signals.html":{}}}],["makesourcesclickdata",{"_index":1708,"title":{},"body":{"classes/Data.html":{}}}],["makesourceshoverdata",{"_index":1709,"title":{},"body":{"classes/Data.html":{}}}],["makesourcesofsourcesclickdata",{"_index":1710,"title":{},"body":{"classes/Data.html":{}}}],["makesourcesofsourceshoverdata",{"_index":1711,"title":{},"body":{"classes/Data.html":{}}}],["maketargetsclickdata",{"_index":1712,"title":{},"body":{"classes/Data.html":{}}}],["maketargetshoverdata",{"_index":1713,"title":{},"body":{"classes/Data.html":{}}}],["maketargetsoftargetsclickdata",{"_index":1714,"title":{},"body":{"classes/Data.html":{}}}],["maketargetsoftargetshoverdata",{"_index":1715,"title":{},"body":{"classes/Data.html":{}}}],["maketreedata",{"_index":4021,"title":{},"body":{"injectables/TreeService.html":{}}}],["maketreedata(currentsheet",{"_index":4023,"title":{},"body":{"injectables/TreeService.html":{}}}],["maketreelegend",{"_index":2985,"title":{},"body":{"classes/Legends.html":{}}}],["maketreelegendscale",{"_index":3642,"title":{},"body":{"classes/Scales.html":{}}}],["maketreemarkgroup",{"_index":3109,"title":{},"body":{"classes/Marks.html":{},"classes/TreeMarkGroup.html":{}}}],["maketreepathmarks",{"_index":3986,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["maketreesymbolmarks",{"_index":3987,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["maketreetextlinkmarks",{"_index":3988,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["maketreetextmarks",{"_index":3989,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["makevegaconfig",{"_index":4328,"title":{},"body":{"injectables/VegaService.html":{}}}],["makevegaconfig(currentsheet",{"_index":4339,"title":{},"body":{"injectables/VegaService.html":{}}}],["makeviewmodeclickdata",{"_index":1716,"title":{},"body":{"classes/Data.html":{}}}],["makeviewmodehoverdata",{"_index":1717,"title":{},"body":{"classes/Data.html":{}}}],["making",{"_index":822,"title":{},"body":{"injectables/BimodalService.html":{}}}],["map",{"_index":926,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/ConfigService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/SheetService.html":{}}}],["map((data",{"_index":1456,"title":{},"body":{"injectables/ConfigService.html":{}}}],["map((element",{"_index":1457,"title":{},"body":{"injectables/ConfigService.html":{}}}],["map((res",{"_index":3747,"title":{},"body":{"injectables/SheetService.html":{}}}],["map((val",{"_index":920,"title":{},"body":{"injectables/BimodalService.html":{}}}],["map(formatdata",{"_index":3146,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mapping",{"_index":1241,"title":{},"body":{"components/CompareComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{}}}],["maps",{"_index":3685,"title":{},"body":{"injectables/SheetService.html":{}}}],["margin",{"_index":1305,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/NavItemComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["mark",{"_index":545,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"classes/Marks.html":{},"classes/TreeMarkGroup.html":{}}}],["markdown",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/DocsModule.html":{},"injectables/DocsService.html":{},"modules/InfoModule.html":{}}}],["markdownmodule",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/DocsModule.html":{},"modules/InfoModule.html":{}}}],["markdownmodule.forroot",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":105,"title":{"classes/Marker.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["marker.btype",{"_index":887,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.color",{"_index":883,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.indegree",{"_index":884,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.isnew",{"_index":882,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.link",{"_index":879,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.nodesize",{"_index":880,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.notes",{"_index":877,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.organname",{"_index":878,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.outdegree",{"_index":885,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.proteinpresence",{"_index":881,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.structure",{"_index":876,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker_col",{"_index":92,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["markers",{"_index":111,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["markformgrouptouched",{"_index":1082,"title":{},"body":{"components/CompareComponent.html":{}}}],["markformgrouptouched(formgroup",{"_index":1118,"title":{},"body":{"components/CompareComponent.html":{}}}],["marks",{"_index":567,"title":{"classes/Marks.html":{}},"body":{"classes/BimodalMarkGroup.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{}}}],["marks().marks",{"_index":3121,"title":{},"body":{"classes/Marks.html":{}}}],["marks.create",{"_index":4395,"title":{},"body":{"injectables/VegaService.html":{}}}],["master",{"_index":1997,"title":{},"body":{"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["mastersheetlink",{"_index":1386,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["mastertoggle",{"_index":3282,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["mat",{"_index":1276,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/SearchModule.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["mat_bottom_sheet_data",{"_index":2122,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["mat_dialog_data",{"_index":3018,"title":{},"body":{"components/LoadingComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["mat_snack_bar_data",{"_index":3959,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["matbottomsheetmodule",{"_index":2145,"title":{},"body":{"modules/DoiModule.html":{},"modules/InfoModule.html":{},"modules/RootModule.html":{}}}],["matbottomsheetref",{"_index":2113,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["matbuttonmodule",{"_index":1432,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DoiModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/UploadModule.html":{}}}],["matbuttontogglemodule",{"_index":3667,"title":{},"body":{"modules/SearchModule.html":{}}}],["matcardmodule",{"_index":1434,"title":{},"body":{"modules/CompareModule.html":{},"modules/UploadModule.html":{}}}],["match",{"_index":1617,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/ErrorComponent.html":{}}}],["matcheckboxmodule",{"_index":3235,"title":{},"body":{"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["matching",{"_index":131,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialogmodule",{"_index":3445,"title":{},"body":{"modules/OrganTableSelectorModule.html":{},"modules/RootModule.html":{}}}],["matdialogref",{"_index":3286,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["matexpansionmodule",{"_index":1422,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/FunctionsModule.html":{},"modules/LegendModule.html":{},"modules/OmapControlsModule.html":{},"modules/ReportModule.html":{},"modules/UploadModule.html":{}}}],["matformfieldmodule",{"_index":3204,"title":{},"body":{"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{}}}],["maticonmodule",{"_index":1424,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DoiModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/UploadModule.html":{}}}],["maticonregistry",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodule",{"_index":1425,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/FileUploadModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{},"modules/UploadModule.html":{}}}],["matlistmodule",{"_index":1862,"title":{},"body":{"modules/DebugLogsModule.html":{},"modules/SearchModule.html":{}}}],["matmenu",{"_index":3910,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["matmenumodule",{"_index":2280,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/HomeModule.html":{},"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/TableNestedMenuModule.html":{}}}],["matoptionmodule",{"_index":3665,"title":{},"body":{"modules/SearchModule.html":{}}}],["matselectchange",{"_index":2429,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["matselectmodule",{"_index":2479,"title":{},"body":{"modules/FunctionsModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["matsidenavmodule",{"_index":2049,"title":{},"body":{"modules/DocsModule.html":{},"modules/RootModule.html":{}}}],["matslidermodule",{"_index":1692,"title":{},"body":{"modules/ControlsModule.html":{}}}],["matslidetogglemodule",{"_index":1696,"title":{},"body":{"modules/ControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["matsnackbar",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["matsnackbarmodule",{"_index":3633,"title":{},"body":{"modules/RootModule.html":{}}}],["matsortmodule",{"_index":3610,"title":{},"body":{"modules/ReportModule.html":{}}}],["mattabchangeevent",{"_index":3470,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["mattabledatasource",{"_index":3305,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["mattabledatasource(this.omapsheetoptions",{"_index":3343,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["mattabledatasource(this.sheetoptions",{"_index":3349,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["mattablemodule",{"_index":3446,"title":{},"body":{"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{}}}],["mattabsmodule",{"_index":1864,"title":{},"body":{"modules/DebugLogsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{}}}],["mattoolbarmodule",{"_index":3199,"title":{},"body":{"modules/NavbarModule.html":{}}}],["mattooltipmodule",{"_index":1694,"title":{},"body":{"modules/ControlsModule.html":{},"modules/FunctionsModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{}}}],["mattree",{"_index":2293,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["mattreeflatdatasource",{"_index":2294,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":2321,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["mattreeflattener",{"_index":2295,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["mattreemodule",{"_index":2829,"title":{},"body":{"modules/IndentedListModule.html":{}}}],["max",{"_index":1853,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/DoiComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/VisControlsComponent.html":{}}}],["mc",{"_index":2634,"title":{},"body":{"components/HomeComponent.html":{}}}],["md",{"_index":2035,"title":{},"body":{"components/DocsComponent.html":{}}}],["mdc",{"_index":2471,"title":{},"body":{"components/FunctionsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["media",{"_index":2409,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["medium",{"_index":2721,"title":{},"body":{"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["members",{"_index":2633,"title":{},"body":{"components/HomeComponent.html":{}}}],["mentioned",{"_index":1223,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"components/UploadComponent.html":{}}}],["menu",{"_index":2025,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/TableNestedMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["menu'},{'name",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["menu.component",{"_index":3923,"title":{},"body":{"modules/TableNestedMenuModule.html":{}}}],["menu.component.html",{"_index":3902,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.scss",{"_index":3901,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts",{"_index":3900,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:11",{"_index":3906,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:12",{"_index":3907,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:13",{"_index":3915,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:14",{"_index":3912,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:15",{"_index":3914,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:17",{"_index":3909,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.module",{"_index":2778,"title":{},"body":{"modules/HomeModule.html":{},"modules/NavbarModule.html":{},"modules/RootModule.html":{}}}],["menu.module.ts",{"_index":3922,"title":{},"body":{"modules/TableNestedMenuModule.html":{}}}],["menu/table",{"_index":2777,"title":{},"body":{"modules/HomeModule.html":{},"modules/NavbarModule.html":{},"modules/RootModule.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{}}}],["menu:hover",{"_index":2653,"title":{},"body":{"components/HomeComponent.html":{}}}],["merge",{"_index":2600,"title":{},"body":{"components/HomeComponent.html":{}}}],["message",{"_index":1018,"title":{},"body":{"classes/ClearSheetLogs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/UIStateModel.html":{}}}],["messages",{"_index":3055,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["metabolites",{"_index":177,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":260,"title":{"interfaces/Metadata.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"pipes/OrderByPipe.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["method",{"_index":1783,"title":{},"body":{"classes/Data.html":{},"components/OrganTableSelectorComponent.html":{}}}],["methods",{"_index":202,"title":{},"body":{"modules/AnalyticsModule.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/LogsState.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"components/OmapControlsComponent.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["middle",{"_index":698,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/OrganTableSelectorComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["milti",{"_index":1023,"title":{},"body":{"classes/ClearSheetLogs.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["min",{"_index":1836,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["miner",{"_index":4027,"title":{},"body":{"injectables/TreeService.html":{}}}],["miscellaneous",{"_index":4472,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":4449,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["missing",{"_index":4450,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["mit",{"_index":2396,"title":{},"body":{"components/FooterComponent.html":{}}}],["mode",{"_index":1885,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["model",{"_index":4169,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["models/bimodal.model",{"_index":758,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["models/ga.model",{"_index":1141,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["models/indent.model",{"_index":2298,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{}}}],["models/legend.model",{"_index":2917,"title":{},"body":{"components/LegendComponent.html":{},"injectables/LegendService.html":{}}}],["models/logs.model",{"_index":761,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["models/omap.model",{"_index":762,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/OmapControlsComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["models/report.model",{"_index":1871,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["models/response.model",{"_index":764,"title":{},"body":{"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/ControlPaneComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["models/sheet.model",{"_index":765,"title":{},"body":{"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"components/DoiComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["models/tree.model",{"_index":766,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["models/ui.model",{"_index":1032,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"injectables/VegaService.html":{}}}],["module",{"_index":184,"title":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["modules",{"_index":186,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{},"modules.html":{}}}],["modules/docs/docs.component",{"_index":493,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/docs/docs.module",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/root/root.component",{"_index":492,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/root/root.module",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/tree/bimodal.service",{"_index":2443,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["modulewithproviders",{"_index":212,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["more",{"_index":3412,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"miscellaneous/variables.html":{}}}],["moreoption",{"_index":1389,"title":{"interfaces/MoreOption.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["moreoptions",{"_index":1388,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["mouse",{"_index":3820,"title":{},"body":{"classes/Signals.html":{}}}],["mouseevent",{"_index":3136,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove",{"_index":3149,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove').pipe(throttletime(1000",{"_index":3145,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mouseover[!event.item",{"_index":3870,"title":{},"body":{"classes/Signals.html":{}}}],["mousepositiontrackermodule",{"_index":427,"title":{"modules/MousePositionTrackerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MousePositionTrackerModule.html":{},"index.html":{},"modules.html":{}}}],["msg",{"_index":962,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"injectables/TreeService.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["multi",{"_index":74,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"index.html":{}}}],["multi_in_links",{"_index":3056,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["multi_parent_edges",{"_index":1794,"title":{},"body":{"classes/Data.html":{},"classes/MultiParentMarkGroup.html":{}}}],["multimessage",{"_index":1024,"title":{},"body":{"classes/ClearSheetLogs.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["multiparent",{"_index":3114,"title":{},"body":{"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{}}}],["multiparentlinksdata",{"_index":1728,"title":{},"body":{"classes/Data.html":{},"injectables/VegaService.html":{}}}],["multiparentmarkgroup",{"_index":3117,"title":{"classes/MultiParentMarkGroup.html":{}},"body":{"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{}}}],["multiparentmarkgroup().group",{"_index":3167,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["multiparentmarkgroup.create",{"_index":3126,"title":{},"body":{"classes/Marks.html":{}}}],["multiplexed",{"_index":3311,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["muted",{"_index":2765,"title":{},"body":{"components/HomeComponent.html":{}}}],["mw",{"_index":3779,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["n",{"_index":2381,"title":{},"body":{"components/FooterComponent.html":{}}}],["name",{"_index":48,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/CloseLoading.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenLoading.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name.tolowercase",{"_index":2791,"title":{},"body":{"classes/ILNode.html":{}}}],["names",{"_index":3840,"title":{},"body":{"classes/Signals.html":{},"miscellaneous/variables.html":{}}}],["nav",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/UpdateLoadingText.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nav'},{'name",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["nav.component",{"_index":2084,"title":{},"body":{"modules/DocsNavModule.html":{}}}],["nav.component.html",{"_index":2059,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.scss",{"_index":2058,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts",{"_index":2057,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:11",{"_index":2071,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:12",{"_index":2070,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:13",{"_index":2069,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:15",{"_index":2065,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:16",{"_index":2066,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:17",{"_index":2067,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:18",{"_index":2068,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.module",{"_index":2055,"title":{},"body":{"modules/DocsModule.html":{}}}],["nav.module.ts",{"_index":2083,"title":{},"body":{"modules/DocsNavModule.html":{}}}],["nav/docs",{"_index":2054,"title":{},"body":{"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{}}}],["nav:hover",{"_index":2663,"title":{},"body":{"components/HomeComponent.html":{}}}],["navbar",{"_index":2004,"title":{},"body":{"components/DocsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["navbar'},{'name",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["navbar.component",{"_index":3198,"title":{},"body":{"modules/NavbarModule.html":{}}}],["navbar/navbar.module",{"_index":3630,"title":{},"body":{"modules/RootModule.html":{}}}],["navbarcomponent",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"modules/NavbarModule.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["navbarmodule",{"_index":3191,"title":{"modules/NavbarModule.html":{}},"body":{"modules/NavbarModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["navigation",{"_index":1978,"title":{},"body":{"components/DocsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["navigationend",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["navitemcomponent",{"_index":381,"title":{"components/NavItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["navitemmodule",{"_index":3185,"title":{"modules/NavItemModule.html":{}},"body":{"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"index.html":{},"modules.html":{}}}],["nbsp",{"_index":1251,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["needs",{"_index":1756,"title":{},"body":{"classes/Data.html":{}}}],["neg",{"_index":1339,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["negative",{"_index":1340,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["nested",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"modules/NavbarModule.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/RootModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["network",{"_index":548,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/InfoComponent.html":{},"classes/Marks.html":{},"classes/Signals.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["new",{"_index":569,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/LocalStorageSyncService.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["newas",{"_index":1401,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["newb",{"_index":1405,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["newct",{"_index":1403,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["newleaf",{"_index":793,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.color",{"_index":808,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.id",{"_index":801,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.indegree",{"_index":812,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.isnew",{"_index":806,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.label",{"_index":816,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.ontologyid",{"_index":810,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.outdegree",{"_index":815,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.pathcolor",{"_index":804,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.problem",{"_index":802,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newlog",{"_index":3082,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["newnode",{"_index":841,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["newnode.btype",{"_index":886,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newnode.color",{"_index":852,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["newnode.comparator",{"_index":2851,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["newnode.comparatorid",{"_index":4081,"title":{},"body":{"injectables/TreeService.html":{}}}],["newnode.comparatorname",{"_index":4082,"title":{},"body":{"injectables/TreeService.html":{}}}],["newnode.id",{"_index":847,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newnode.indegree",{"_index":853,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newnode.isnew",{"_index":848,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["newnode.label",{"_index":857,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["newnode.name",{"_index":2852,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["newnode.ontologyid",{"_index":2853,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["newnode.outdegree",{"_index":855,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newnode.pathcolor",{"_index":850,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["newnode.references",{"_index":859,"title":{},"body":{"injectables/BimodalService.html":{}}}],["next",{"_index":821,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsNavComponent.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["next_plan",{"_index":3061,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"miscellaneous/enumerations.html":{}}}],["nextclick",{"_index":2063,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["ng",{"_index":1267,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["ng_validators",{"_index":2215,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":2213,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":2330,"title":{},"body":{"interfaces/FlatNode.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"components/PlaygroundComponent.html":{}}}],["ngmodule",{"_index":214,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{}}}],["ngonchanges",{"_index":2921,"title":{},"body":{"components/LegendComponent.html":{}}}],["ngondestroy",{"_index":1486,"title":{},"body":{"injectables/ConsentService.html":{},"interfaces/FlatNode.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Node.html":{}}}],["ngoninit",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"interfaces/Node.html":{},"components/UploadComponent.html":{}}}],["ngx",{"_index":218,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/SearchModule.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["ngx_google_analytics_settings_token",{"_index":2506,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngx_window",{"_index":2507,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngxchartsmodule",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"modules/ReportModule.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":217,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxgoogleanalyticsmodule.forroot(options.gatoken",{"_index":249,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxmatselectsearchmodule",{"_index":3664,"title":{},"body":{"modules/SearchModule.html":{}}}],["ngxs",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxs/logger",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxs/store",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/LoadingComponent.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["ngxsloggerpluginmodule",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsmodule",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsmodule.forroot([sheetstate",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsresetpluginmodule",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsresetpluginmodule.forroot",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["nikhil",{"_index":4593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nmahade@iu.edu",{"_index":4595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["no_in_links",{"_index":3057,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["no_out_links",{"_index":3058,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["node",{"_index":643,"title":{"interfaces/Node.html":{}},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"interfaces/FlatNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"classes/Signals.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"injectables/VegaService.html":{}}}],["node.children",{"_index":1603,"title":{},"body":{"components/ControlPaneComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["node.children.length",{"_index":2317,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["node.color",{"_index":4087,"title":{},"body":{"injectables/TreeService.html":{}}}],["node.expandable",{"_index":2313,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["node.group",{"_index":889,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{}}}],["node.groupname",{"_index":1609,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/VegaService.html":{}}}],["node.id",{"_index":905,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{}}}],["node.indegree?.foreach((str",{"_index":906,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.label",{"_index":1604,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["node.level",{"_index":2315,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["node.name",{"_index":911,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"injectables/VegaService.html":{}}}],["node.ontologyid",{"_index":1606,"title":{},"body":{"components/ControlPaneComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"injectables/VegaService.html":{}}}],["node.organname",{"_index":935,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.outdegree?.foreach((str",{"_index":891,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.pathcolor",{"_index":4088,"title":{},"body":{"injectables/TreeService.html":{}}}],["node.sources",{"_index":890,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.sources.findindex((l",{"_index":907,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.sources.push(nodes[foundindex].id",{"_index":908,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.sources.push(s",{"_index":944,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.targets.findindex((l",{"_index":900,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.targets.push(nodes[foundindex].id",{"_index":903,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.targets.push(s",{"_index":937,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.type",{"_index":4370,"title":{},"body":{"injectables/VegaService.html":{}}}],["node.x",{"_index":1607,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/VegaService.html":{}}}],["node.y",{"_index":1608,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/VegaService.html":{}}}],["node:hover",{"_index":2813,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["node__click",{"_index":606,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Data.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["node__hover",{"_index":636,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Data.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["node_sources__hover",{"_index":3822,"title":{},"body":{"classes/Signals.html":{}}}],["node_targets__hover",{"_index":3824,"title":{},"body":{"classes/Signals.html":{}}}],["node_type",{"_index":40,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"miscellaneous/enumerations.html":{}}}],["node_type.as",{"_index":81,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["node_type.bm",{"_index":164,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["node_type.r",{"_index":4065,"title":{},"body":{"injectables/TreeService.html":{}}}],["nodedata",{"_index":989,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodedata.values",{"_index":992,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodeid",{"_index":4379,"title":{},"body":{"injectables/VegaService.html":{}}}],["nodeinfo",{"_index":4369,"title":{},"body":{"injectables/VegaService.html":{}}}],["nodes",{"_index":75,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/variables.html":{}}}],["nodes).data('edges",{"_index":981,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodes.findindex((i",{"_index":895,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["nodes.foreach((node",{"_index":888,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodes.push(newleaf",{"_index":818,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodes.push(newnode",{"_index":861,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["nodes.push(root",{"_index":4066,"title":{},"body":{"injectables/TreeService.html":{}}}],["nodes.shift",{"_index":4089,"title":{},"body":{"injectables/TreeService.html":{}}}],["nodes[0",{"_index":4090,"title":{},"body":{"injectables/TreeService.html":{}}}],["nodes[foundindex].id",{"_index":902,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodes[foundindex].outdegree?.foreach((cellout",{"_index":909,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodes[s",{"_index":4086,"title":{},"body":{"injectables/TreeService.html":{}}}],["nodesize",{"_index":96,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["noerror",{"_index":1038,"title":{"classes/NoError.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/UpdateLoadingText.html":{}}}],["noid",{"_index":2110,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["none",{"_index":102,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"interfaces/DD.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":3429,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["normalize",{"_index":3731,"title":{},"body":{"injectables/SheetService.html":{}}}],["normalized",{"_index":3686,"title":{},"body":{"injectables/SheetService.html":{}}}],["note",{"_index":3150,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"injectables/SheetService.html":{}}}],["notes",{"_index":15,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DoiComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["now",{"_index":1246,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["nowrap",{"_index":3983,"title":{},"body":{"components/TreeComponent.html":{}}}],["null",{"_index":236,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"injectables/LocalStorageSyncService.html":{},"classes/MultiParentMarkGroup.html":{},"components/PlaygroundComponent.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{}}}],["null)?.files?.[0",{"_index":2253,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["number",{"_index":47,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Legend.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"interfaces/Node.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numberinput",{"_index":4452,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["numorgans",{"_index":2501,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/OrganTableSelectorComponent.html":{}}}],["numrows",{"_index":3389,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["numselected",{"_index":3387,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["o.name",{"_index":3341,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["obj",{"_index":4504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obj.deletecolumn(obj.getselectedcolumns().length",{"_index":3519,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.deleterow(obj.getselectedrows().length",{"_index":3536,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.download(true",{"_index":3549,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.insertcolumn(1",{"_index":3514,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.insertrow(1",{"_index":3531,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowcomments",{"_index":3537,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowdeletecolumn",{"_index":3517,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowdeleterow",{"_index":3534,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowexport",{"_index":3545,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowinsertcolumn",{"_index":3511,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowinsertrow",{"_index":3529,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowrenamecolumn",{"_index":3521,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.columnsorting",{"_index":3525,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.addcomments",{"_index":3540,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.clearcomments",{"_index":3543,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.deleteselectedcolumns",{"_index":3518,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.deleteselectedrows",{"_index":3535,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.editcomments",{"_index":3539,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.insertanewcolumnafter",{"_index":3516,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.insertanewcolumnbefore",{"_index":3513,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.insertanewrowafter",{"_index":3533,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.insertanewrowbefore",{"_index":3530,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.orderascending",{"_index":3526,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.orderdescending",{"_index":3528,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.renamethiscolumn",{"_index":3522,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.saveas",{"_index":3546,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.orderby(parseint(x",{"_index":3527,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.records[+y][+x].getattribute('title",{"_index":3538,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.setcomments",{"_index":3541,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.setcomments([parseint(x",{"_index":3544,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.setheader(parseint(x",{"_index":3523,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["object",{"_index":2691,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.entries(node).length",{"_index":4374,"title":{},"body":{"injectables/VegaService.html":{}}}],["object.entries(obj).reduce>((attrs",{"_index":233,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["object.entries(view).length",{"_index":4228,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["object.keys(view).length",{"_index":4045,"title":{},"body":{"injectables/TreeService.html":{}}}],["object.prototype.hasownproperty.call(as_ct",{"_index":942,"title":{},"body":{"injectables/BimodalService.html":{}}}],["object.prototype.hasownproperty.call(asbyasorganwise",{"_index":4074,"title":{},"body":{"injectables/TreeService.html":{}}}],["object.prototype.hasownproperty.call(ct_bm",{"_index":934,"title":{},"body":{"injectables/BimodalService.html":{}}}],["object.values(formgroup.controls).foreach((control",{"_index":1170,"title":{},"body":{"components/CompareComponent.html":{}}}],["observable",{"_index":1095,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{}}}],["occurred",{"_index":2162,"title":{},"body":{"components/ErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["offset",{"_index":591,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{},"classes/TreeMarkGroup.html":{}}}],["oid",{"_index":2497,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/VegaService.html":{}}}],["old",{"_index":1996,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["omap",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["omapconfig",{"_index":725,"title":{"interfaces/OmapConfig.html":{}},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FunctionsComponent.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["omapconfig?.proteinsonly",{"_index":863,"title":{},"body":{"injectables/BimodalService.html":{}}}],["omapcontrolscomponent",{"_index":384,"title":{"components/OmapControlsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["omapcontrolsmodule",{"_index":1677,"title":{"modules/OmapControlsModule.html":{}},"body":{"modules/ControlPaneModule.html":{},"modules/OmapControlsModule.html":{},"index.html":{},"modules.html":{}}}],["omapdatasource",{"_index":3271,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["omapdisplayedcolumns",{"_index":3272,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["omapid",{"_index":1376,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["omaporgans",{"_index":1344,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["omaporgans.push(element.symbol",{"_index":3382,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["omaps",{"_index":3216,"title":{},"body":{"components/OmapControlsComponent.html":{},"interfaces/TreeStateModel.html":{}}}],["omapselectedorgans",{"_index":1596,"title":{},"body":{"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["omapselection",{"_index":3273,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["omapsheetconfiguration",{"_index":1439,"title":{},"body":{"injectables/ConfigService.html":{}}}],["omapsheetoptions",{"_index":3274,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["onchange",{"_index":1934,"title":{},"body":{"components/DocsComponent.html":{},"components/FileUploadComponent.html":{}}}],["onchange(idx",{"_index":1941,"title":{},"body":{"components/DocsComponent.html":{}}}],["onchanges",{"_index":2904,"title":{},"body":{"components/LegendComponent.html":{}}}],["onclick",{"_index":2221,"title":{},"body":{"components/FileUploadComponent.html":{},"components/PlaygroundComponent.html":{}}}],["onclick(fileupload",{"_index":2229,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onclose",{"_index":3275,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["ondestroy",{"_index":1481,"title":{},"body":{"injectables/ConsentService.html":{},"interfaces/FlatNode.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Node.html":{}}}],["one",{"_index":3411,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["onfileselected",{"_index":2222,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onfileselected(event",{"_index":2233,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["oninit",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"interfaces/Node.html":{},"components/UploadComponent.html":{}}}],["onlatest",{"_index":1935,"title":{},"body":{"components/DocsComponent.html":{}}}],["ontology",{"_index":675,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"components/InfoComponent.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"components/VisControlsComponent.html":{}}}],["ontologycode",{"_index":1367,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ontologyid",{"_index":50,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ontologytype",{"_index":1395,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ontologytypeid",{"_index":1394,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ontouched",{"_index":2219,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onvalidatorchange",{"_index":2220,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["opacity",{"_index":604,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"classes/Data.html":{},"components/HomeComponent.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{}}}],["open",{"_index":1034,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{}}}],["openbottomsheet",{"_index":1052,"title":{"classes/OpenBottomSheet.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"interfaces/FlatNode.html":{},"classes/HasError.html":{},"components/IndentedListComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{}}}],["openbottomsheet(node",{"_index":4375,"title":{},"body":{"injectables/VegaService.html":{}}}],["openbottomsheetdata",{"_index":1031,"title":{"interfaces/OpenBottomSheetData.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"injectables/VegaService.html":{}}}],["openbottomsheetdoi",{"_index":1053,"title":{"classes/OpenBottomSheetDOI.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{}}}],["openbottomsheetdoi(text",{"_index":4384,"title":{},"body":{"injectables/VegaService.html":{}}}],["opencompare",{"_index":1055,"title":{"classes/OpenCompare.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["opendata",{"_index":1936,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["opendataold",{"_index":1937,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["opendocs",{"_index":2343,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["opened",{"_index":3008,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{},"interfaces/UIStateModel.html":{}}}],["openfaq",{"_index":2344,"title":{},"body":{"components/FooterComponent.html":{}}}],["opengithub",{"_index":1938,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["openloading",{"_index":1033,"title":{"classes/OpenLoading.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["opensearch",{"_index":1057,"title":{"classes/OpenSearch.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["opensnackbar",{"_index":1041,"title":{"classes/OpenSnackbar.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["opensnackbar(text",{"_index":4205,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["openurl",{"_index":3905,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["openurl(sheetid",{"_index":3908,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["opt",{"_index":3947,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["option",{"_index":1231,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"components/FunctionsComponent.html":{},"interfaces/Response.html":{},"classes/Scales.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{}}}],["option.title",{"_index":2618,"title":{},"body":{"components/HomeComponent.html":{}}}],["option.viewvalue",{"_index":3414,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/CloseLoading.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenLoading.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/Reference.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/ResponseData.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":210,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1225,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["orderby",{"_index":3252,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["orderbypipe",{"_index":2943,"title":{"pipes/OrderByPipe.html":{}},"body":{"modules/LegendModule.html":{},"pipes/OrderByPipe.html":{},"modules/ReportModule.html":{},"index.html":{}}}],["ordinal",{"_index":3657,"title":{},"body":{"classes/Scales.html":{}}}],["organ",{"_index":108,"title":{"interfaces/Organ.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"interfaces/LinksASCTBData.html":{},"components/LoadingComponent.html":{},"classes/Marker.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["organmenu",{"_index":2711,"title":{},"body":{"components/HomeComponent.html":{}}}],["organname",{"_index":16,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["organrow",{"_index":112,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["organs",{"_index":1343,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/OmapControlsComponent.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["organslist",{"_index":1901,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["organsonly",{"_index":3209,"title":{},"body":{"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"interfaces/TreeStateModel.html":{}}}],["organtableonclose",{"_index":1347,"title":{"interfaces/OrganTableOnClose.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["organtableselect",{"_index":1342,"title":{"interfaces/OrganTableSelect.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["organtableselectorcomponent",{"_index":387,"title":{"components/OrganTableSelectorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["organtableselectormodule",{"_index":428,"title":{"modules/OrganTableSelectorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrganTableSelectorModule.html":{},"index.html":{},"modules.html":{}}}],["orgon",{"_index":3426,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["orient",{"_index":1791,"title":{},"body":{"classes/Data.html":{},"classes/Legends.html":{}}}],["out",{"_index":200,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"classes/BimodalMarkGroup.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["outdegree",{"_index":17,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["outline",{"_index":1266,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["output",{"_index":1134,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["outputs",{"_index":1087,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"components/IndentedListComponent.html":{},"components/OmapControlsComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["over",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow",{"_index":1274,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DoiComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{}}}],["overview",{"_index":2620,"title":{"index.html":{}},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["owl",{"_index":3722,"title":{},"body":{"injectables/SheetService.html":{}}}],["p",{"_index":1334,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/FooterComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"components/TrackingPopupComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["pad",{"_index":4389,"title":{},"body":{"injectables/VegaService.html":{}}}],["padding",{"_index":1271,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["page_path",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["pages",{"_index":2099,"title":{},"body":{"injectables/DocsService.html":{}}}],["pane",{"_index":1040,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/ControlPaneComponent.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["pane'},{'name",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["pane.component",{"_index":1686,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["pane.component.html",{"_index":1495,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.scss",{"_index":1494,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts",{"_index":1493,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:110",{"_index":1519,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:119",{"_index":1515,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:157",{"_index":1513,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:195",{"_index":1517,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:24",{"_index":1511,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:243",{"_index":1522,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:26",{"_index":1533,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:261",{"_index":1520,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:265",{"_index":1518,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:27",{"_index":1545,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:274",{"_index":1527,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:29",{"_index":1554,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:30",{"_index":1543,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:32",{"_index":1548,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:34",{"_index":1531,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:35",{"_index":1536,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:37",{"_index":1550,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:39",{"_index":1541,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:40",{"_index":1538,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:42",{"_index":1539,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:43",{"_index":1551,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:45",{"_index":1552,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:46",{"_index":1510,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:49",{"_index":1546,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:50",{"_index":1528,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:51",{"_index":1555,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:52",{"_index":1534,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:78",{"_index":1524,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.module",{"_index":3623,"title":{},"body":{"modules/RootModule.html":{}}}],["pane.module.ts",{"_index":1678,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["pane/control",{"_index":1492,"title":{},"body":{"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/RootModule.html":{}}}],["panel",{"_index":1243,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["panel:not([class*='mat",{"_index":1278,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["panels",{"_index":3227,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["paneopen",{"_index":4507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["panewidth",{"_index":4508,"title":{},"body":{"miscellaneous/functions.html":{}}}],["param",{"_index":773,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Data.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["parameter",{"_index":3700,"title":{},"body":{"injectables/SheetService.html":{}}}],["parameters",{"_index":209,"title":{},"body":{"modules/AnalyticsModule.html":{},"components/AppComponent.html":{},"classes/BMNode.html":{},"injectables/BimodalService.html":{},"classes/Cell.html":{},"classes/CloseLoading.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"classes/Marker.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenLoading.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":3723,"title":{},"body":{"injectables/SheetService.html":{}}}],["parent",{"_index":49,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/IndentedListService.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{}}}],["parent.children?.[s",{"_index":2855,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["parent.children?.findindex",{"_index":2844,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["parent.children?.push(newnode",{"_index":2854,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["parent.comparator",{"_index":2847,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["parent.comparatorid",{"_index":4070,"title":{},"body":{"injectables/TreeService.html":{}}}],["parent.comparatorname",{"_index":4073,"title":{},"body":{"injectables/TreeService.html":{}}}],["parent.id",{"_index":4078,"title":{},"body":{"injectables/TreeService.html":{}}}],["parentkey",{"_index":1782,"title":{},"body":{"classes/Data.html":{}}}],["parents",{"_index":56,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["parse",{"_index":4351,"title":{},"body":{"injectables/VegaService.html":{}}}],["parse(config",{"_index":4359,"title":{},"body":{"injectables/VegaService.html":{}}}],["parsed",{"_index":1360,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["parseint(x",{"_index":3515,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["parseint(y",{"_index":3532,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["parsing",{"_index":4629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":2127,"title":{},"body":{"components/DoiComponent.html":{}}}],["particular",{"_index":3690,"title":{},"body":{"injectables/SheetService.html":{}}}],["partonomy",{"_index":4346,"title":{},"body":{"injectables/VegaService.html":{}}}],["partonomy/vega",{"_index":4343,"title":{},"body":{"injectables/VegaService.html":{}}}],["passing",{"_index":3681,"title":{},"body":{"injectables/SheetService.html":{}}}],["pasting",{"_index":1220,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["patchstate",{"_index":4135,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["path",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{},"miscellaneous/variables.html":{}}}],["path:click",{"_index":3859,"title":{},"body":{"classes/Signals.html":{}}}],["path__click",{"_index":3858,"title":{},"body":{"classes/Signals.html":{}}}],["pathcolor",{"_index":55,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["paths",{"_index":550,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/LegendService.html":{},"classes/TreeMarkGroup.html":{}}}],["paul",{"_index":4535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":1250,"title":{},"body":{"components/CompareComponent.html":{}}}],["pipe",{"_index":3248,"title":{"pipes/OrderByPipe.html":{}},"body":{"pipes/OrderByPipe.html":{},"index.html":{}}}],["pipe(take(1",{"_index":1448,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pipes",{"_index":3249,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["pipes/order",{"_index":2946,"title":{},"body":{"modules/LegendModule.html":{},"modules/ReportModule.html":{}}}],["pipetransform",{"_index":3258,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["play",{"_index":4640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player",{"_index":2531,"title":{},"body":{"components/HomeComponent.html":{},"modules/HomeModule.html":{}}}],["playground",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["playground'},{'name",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["playground.component",{"_index":3593,"title":{},"body":{"modules/PlaygroundModule.html":{}}}],["playground.component.html",{"_index":3449,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["playground.component.scss",{"_index":3448,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["playground/playground.module",{"_index":3632,"title":{},"body":{"modules/RootModule.html":{}}}],["playgroundcomponent",{"_index":390,"title":{"components/PlaygroundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["playgroundmodule",{"_index":3585,"title":{"modules/PlaygroundModule.html":{}},"body":{"modules/PlaygroundModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["playgroundsheetoptions",{"_index":1382,"title":{"interfaces/PlaygroundSheetOptions.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["please",{"_index":1237,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{},"components/UploadComponent.html":{}}}],["plugin",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["pnbhakta@iu.edu",{"_index":4602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pointer",{"_index":659,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/NavItemComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["points",{"_index":3142,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["points.join('_",{"_index":3143,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["policy",{"_index":2377,"title":{},"body":{"components/FooterComponent.html":{}}}],["poppins",{"_index":2008,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["popup",{"_index":3934,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup'},{'name",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["popup.component",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"modules/TrackingPopupModule.html":{}}}],["popup.component.html",{"_index":3936,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.scss",{"_index":3935,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts",{"_index":3931,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:12",{"_index":3944,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:14",{"_index":3956,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:18",{"_index":3943,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:23",{"_index":3954,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:28",{"_index":3945,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:32",{"_index":3950,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:37",{"_index":3948,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.module",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["popup.module.ts",{"_index":3976,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup/tracking",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{}}}],["pos",{"_index":1337,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["position",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{}}}],["positive",{"_index":1338,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["possible",{"_index":1644,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pramod",{"_index":4600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preclose",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["presence",{"_index":2976,"title":{},"body":{"injectables/LegendService.html":{}}}],["presevation",{"_index":3315,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["prev",{"_index":2062,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["prevclick",{"_index":2064,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["previous",{"_index":1887,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"components/DocsNavComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["prevtab",{"_index":3451,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["private",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/DocsComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Node.html":{}}}],["privileges",{"_index":1233,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["pro",{"_index":2689,"title":{},"body":{"components/HomeComponent.html":{}}}],["problem",{"_index":51,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["problems",{"_index":2160,"title":{},"body":{"components/ErrorComponent.html":{}}}],["production",{"_index":4645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":2767,"title":{},"body":{"components/HomeComponent.html":{}}}],["projectname",{"_index":227,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["promise",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["promise.all([configservice.sheetconfiguration$.topromise",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["prompt(obj.options.text?.comments",{"_index":3542,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["prop",{"_index":1525,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["prop.config.height",{"_index":1584,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["prop.config.show_ontology).runasync",{"_index":1587,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["prop.config.width",{"_index":1582,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["prop.property",{"_index":1580,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["proper",{"_index":3755,"title":{},"body":{"injectables/SheetService.html":{}}}],["properly",{"_index":3155,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"classes/Scales.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["property",{"_index":1579,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/DoiComponent.html":{},"components/VisControlsComponent.html":{}}}],["protein",{"_index":175,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["protein_presence",{"_index":26,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["protein_presence.intermediate",{"_index":917,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["protein_presence.neg",{"_index":915,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["protein_presence.pos",{"_index":913,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["protein_presence.unknown",{"_index":152,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["proteinpresence",{"_index":88,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["proteins",{"_index":3228,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["proteinsonly",{"_index":3210,"title":{},"body":{"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"interfaces/TreeStateModel.html":{}}}],["proteoforms",{"_index":178,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["protiens",{"_index":1897,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["provide",{"_index":244,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"index.html":{}}}],["providedin",{"_index":771,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/DocsService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":191,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["public",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["pure",{"_index":3253,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["quardokus",{"_index":4571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quardokus.html",{"_index":4576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryparams",{"_index":2598,"title":{},"body":{"components/HomeComponent.html":{}}}],["queryparamshandling",{"_index":2599,"title":{},"body":{"components/HomeComponent.html":{}}}],["r",{"_index":42,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/enumerations.html":{}}}],["radius",{"_index":1254,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["range",{"_index":3658,"title":{},"body":{"classes/Scales.html":{}}}],["rawvalue",{"_index":3048,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rawvalue.trim().tolowercase",{"_index":3050,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rdfs:label",{"_index":677,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["rdfs_label",{"_index":1349,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["re",{"_index":4044,"title":{},"body":{"injectables/TreeService.html":{}}}],["reach",{"_index":2174,"title":{},"body":{"components/ErrorComponent.html":{}}}],["reactiveformsmodule",{"_index":1428,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/FileUploadModule.html":{},"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{},"modules/UploadModule.html":{}}}],["read",{"_index":3475,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["readonly",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"injectables/SheetService.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["reassign",{"_index":2857,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["recently",{"_index":4127,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["record",{"_index":120,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{}}}],["record>)[type][field",{"_index":2446,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["rect",{"_index":584,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/LegendComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["rectangle",{"_index":554,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["rectmark",{"_index":583,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["rectmarkdiscrepencyid",{"_index":613,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["rectmarkdiscrepencylabel",{"_index":609,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["rectmarkduplicateid",{"_index":617,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["red",{"_index":632,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"classes/Scales.html":{},"components/UploadComponent.html":{}}}],["reduced",{"_index":1757,"title":{},"body":{"classes/Data.html":{}}}],["refer.doi",{"_index":2887,"title":{},"body":{"components/InfoComponent.html":{}}}],["reference",{"_index":27,"title":{"interfaces/Reference.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["references",{"_index":97,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["refresh",{"_index":1875,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["refreshdata",{"_index":1874,"title":{"classes/RefreshData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["registeronchange",{"_index":2223,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registeronchange(onchange",{"_index":2235,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registerontouched",{"_index":2224,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registerontouched(ontouched",{"_index":2237,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registeronvalidatorchange",{"_index":2225,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registeronvalidatorchange(onvalidatorchange",{"_index":2239,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registry",{"_index":1931,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"miscellaneous/variables.html":{}}}],["registry.map((e",{"_index":2100,"title":{},"body":{"injectables/DocsService.html":{}}}],["registry[id].urltitle",{"_index":2106,"title":{},"body":{"injectables/DocsService.html":{}}}],["registry[next].title",{"_index":2074,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["registry[prev].title",{"_index":2073,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["regular",{"_index":2359,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["related",{"_index":4105,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["relative",{"_index":2652,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["release",{"_index":1987,"title":{},"body":{"components/DocsComponent.html":{}}}],["remove",{"_index":3578,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["removecomparesheetrow",{"_index":1083,"title":{},"body":{"components/CompareComponent.html":{}}}],["removecomparesheetrow(i",{"_index":1120,"title":{},"body":{"components/CompareComponent.html":{}}}],["removing",{"_index":975,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Signals.html":{}}}],["rename",{"_index":3520,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["render",{"_index":3715,"title":{},"body":{"injectables/SheetService.html":{},"injectables/TreeService.html":{}}}],["rendered",{"_index":985,"title":{},"body":{"injectables/BimodalService.html":{},"components/ErrorComponent.html":{},"injectables/VegaService.html":{}}}],["rendergraph",{"_index":4329,"title":{},"body":{"injectables/VegaService.html":{}}}],["rendergraph(config",{"_index":4344,"title":{},"body":{"injectables/VegaService.html":{}}}],["repeat",{"_index":2931,"title":{},"body":{"components/LegendComponent.html":{}}}],["replaysubject",{"_index":1482,"title":{},"body":{"injectables/ConsentService.html":{}}}],["replaysubject(1",{"_index":1480,"title":{},"body":{"injectables/ConsentService.html":{}}}],["report",{"_index":312,"title":{"interfaces/Report.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["report'},{'name",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["report.component",{"_index":3609,"title":{},"body":{"modules/ReportModule.html":{}}}],["report:hover",{"_index":1666,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["report_cols",{"_index":90,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["reportcomponent",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/ReportModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["reportdata",{"_index":1004,"title":{"interfaces/ReportData.html":{}},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"classes/DeleteCompareSheet.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["reporter",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["reporter%0d%0a%0d%0a2",{"_index":1649,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["reporter'},{'name",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["reporter.%0d%0a%0d%0a3",{"_index":1651,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["reportlog",{"_index":749,"title":{"classes/ReportLog.html":{}},"body":{"injectables/BimodalService.html":{},"classes/ClearSheetLogs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["reportlog(log_types.msg",{"_index":963,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["reportlog(undefined",{"_index":3071,"title":{},"body":{"injectables/LogsState.html":{}}}],["reportmodule",{"_index":3603,"title":{"modules/ReportModule.html":{}},"body":{"modules/ReportModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["reportmultilog",{"_index":1022,"title":{"classes/ReportMultiLog.html":{}},"body":{"classes/ClearSheetLogs.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["reportopen",{"_index":4161,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["representation_of",{"_index":1379,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["request",{"_index":1650,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["required",{"_index":1248,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["res.description",{"_index":3748,"title":{},"body":{"injectables/SheetService.html":{}}}],["res.extralinks",{"_index":3750,"title":{},"body":{"injectables/SheetService.html":{}}}],["res.label",{"_index":3751,"title":{},"body":{"injectables/SheetService.html":{}}}],["res.link",{"_index":3749,"title":{},"body":{"injectables/SheetService.html":{}}}],["rescinded",{"_index":1484,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["research",{"_index":4572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["researcher",{"_index":4549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["researchers",{"_index":2639,"title":{},"body":{"components/HomeComponent.html":{}}}],["reserved",{"_index":2395,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":199,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"injectables/BimodalService.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["resizeobserver",{"_index":2571,"title":{},"body":{"components/HomeComponent.html":{}}}],["resizeobserver((entries",{"_index":2581,"title":{},"body":{"components/HomeComponent.html":{}}}],["respective",{"_index":2128,"title":{},"body":{"components/DoiComponent.html":{}}}],["response",{"_index":2150,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{}}}],["response.model",{"_index":3007,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{}}}],["responsedata",{"_index":1359,"title":{"interfaces/ResponseData.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["responsetype",{"_index":2103,"title":{},"body":{"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["results",{"_index":130,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":232,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marks.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"interfaces/Node.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{}}}],["returns",{"_index":211,"title":{},"body":{"modules/AnalyticsModule.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"components/OmapControlsComponent.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["rgb(164",{"_index":2673,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgb(196",{"_index":1315,"title":{},"body":{"components/CompareComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["rgb(215",{"_index":2818,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["rgb(218",{"_index":2695,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgb(228",{"_index":1282,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["rgb(245",{"_index":1667,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["rgb(249",{"_index":2403,"title":{},"body":{"components/FooterComponent.html":{}}}],["rgb(64",{"_index":2177,"title":{},"body":{"components/ErrorComponent.html":{}}}],["rgb(89",{"_index":3179,"title":{},"body":{"components/NavItemComponent.html":{}}}],["rgba(128",{"_index":2703,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(245",{"_index":1661,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["rgba(255",{"_index":2406,"title":{},"body":{"components/FooterComponent.html":{}}}],["right",{"_index":1049,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["rights",{"_index":2394,"title":{},"body":{"components/FooterComponent.html":{}}}],["rightsidenavopen",{"_index":4162,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["root",{"_index":43,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/DocsService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"interfaces/LinksASCTBData.html":{},"injectables/LocalStorageSyncService.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["root.children?.[0",{"_index":2856,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["root.comparator",{"_index":2838,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["root.component",{"_index":3622,"title":{},"body":{"modules/RootModule.html":{}}}],["root.label",{"_index":4064,"title":{},"body":{"injectables/TreeService.html":{}}}],["root.name",{"_index":2839,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["root.ontologyid",{"_index":2840,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["root.type",{"_index":2841,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["rootcomponent",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/RootModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["rootmodule",{"_index":429,"title":{"modules/RootModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["round",{"_index":590,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["rounded",{"_index":1325,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["router",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["routermodule",{"_index":491,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ControlPaneModule.html":{},"modules/DocsModule.html":{},"modules/HomeModule.html":{},"modules/NavbarModule.html":{}}}],["routermodule.forroot(routes",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":490,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":489,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":721,"title":{"interfaces/Row.html":{}},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{}}}],["row.anatomical_structures.foreach((structure",{"_index":2843,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["row.anatomical_structures.unshift(organ",{"_index":3756,"title":{},"body":{"injectables/SheetService.html":{}}}],["row.name",{"_index":3397,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["row.organname",{"_index":3757,"title":{},"body":{"injectables/SheetService.html":{},"injectables/TreeService.html":{}}}],["row.position",{"_index":3396,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["row.some((cell",{"_index":3555,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["row.symbol",{"_index":3398,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["row.symbol?.split",{"_index":3401,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["row.version?.slice",{"_index":3402,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["row?.organname",{"_index":4075,"title":{},"body":{"injectables/TreeService.html":{}}}],["rowpadding",{"_index":2994,"title":{},"body":{"classes/Legends.html":{}}}],["runtime",{"_index":4358,"title":{},"body":{"injectables/VegaService.html":{}}}],["rxjs",{"_index":1137,"title":{},"body":{"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"injectables/DocsService.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{}}}],["rxjs/operators",{"_index":1469,"title":{},"body":{"injectables/ConfigService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/SheetService.html":{}}}],["s",{"_index":167,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"injectables/IndentedListService.html":{},"interfaces/Link.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{}}}],["sai",{"_index":4578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sans",{"_index":2009,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["save",{"_index":1236,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["saveconsent(value",{"_index":3052,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sc",{"_index":4020,"title":{},"body":{"injectables/TreeService.html":{}}}],["scale",{"_index":3644,"title":{},"body":{"classes/Scales.html":{}}}],["scale(0.7",{"_index":2820,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["scale(0.99",{"_index":2735,"title":{},"body":{"components/HomeComponent.html":{}}}],["scales",{"_index":3639,"title":{"classes/Scales.html":{}},"body":{"classes/Scales.html":{},"injectables/VegaService.html":{}}}],["scales().scales",{"_index":3653,"title":{},"body":{"classes/Scales.html":{}}}],["scales.create",{"_index":4393,"title":{},"body":{"injectables/VegaService.html":{}}}],["scaling",{"_index":3647,"title":{},"body":{"classes/Scales.html":{}}}],["schema",{"_index":4386,"title":{},"body":{"injectables/VegaService.html":{}}}],["science",{"_index":2374,"title":{},"body":{"components/FooterComponent.html":{}}}],["screen",{"_index":2677,"title":{},"body":{"components/HomeComponent.html":{}}}],["scroll",{"_index":3427,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/TreeComponent.html":{}}}],["scrollpositionrestoration",{"_index":499,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search",{"_index":1058,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/HasError.html":{},"classes/ILNode.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"modules/SearchModule.html":{},"classes/Signals.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["search(name",{"_index":2786,"title":{},"body":{"classes/ILNode.html":{}}}],["search.component",{"_index":3663,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.module",{"_index":3203,"title":{},"body":{"modules/NavbarModule.html":{}}}],["search_signal",{"_index":3875,"title":{},"body":{"classes/Signals.html":{}}}],["searchcomponent",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["searchids",{"_index":136,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["searchmodule",{"_index":3196,"title":{"modules/SearchModule.html":{}},"body":{"modules/NavbarModule.html":{},"modules/SearchModule.html":{},"index.html":{},"modules.html":{}}}],["searchopen",{"_index":4163,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["searchstructure",{"_index":113,"title":{"interfaces/SearchStructure.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["searchstructures",{"_index":1911,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["sec",{"_index":4613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":4221,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["secondary",{"_index":2461,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["seconds",{"_index":2545,"title":{},"body":{"components/HomeComponent.html":{}}}],["section",{"_index":1850,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{}}}],["see",{"_index":628,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"classes/Scales.html":{},"miscellaneous/variables.html":{}}}],["seekvideo",{"_index":2536,"title":{},"body":{"components/HomeComponent.html":{}}}],["seekvideo(seconds",{"_index":2543,"title":{},"body":{"components/HomeComponent.html":{}}}],["select",{"_index":1234,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/LoadingComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/SearchModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{}}}],["select(sheetstate.getcomparesheets",{"_index":1535,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(sheetstate.getfilteredprotiens",{"_index":1537,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(sheetstate.getparseddata",{"_index":3477,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["select(sheetstate.getselectedorgans",{"_index":1542,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(sheetstate.getsheet",{"_index":1544,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/PlaygroundComponent.html":{}}}],["select(sheetstate.getsheetconfig",{"_index":1532,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{}}}],["select(treestate",{"_index":1549,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{}}}],["select(treestate.getbimodal",{"_index":1530,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(treestate.getbimodalconfig",{"_index":2436,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["select(treestate.getomapconfig",{"_index":1540,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(treestate.gettreedata",{"_index":1547,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(treestate.getvegaview",{"_index":1553,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(uistate",{"_index":3017,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/TreeService.html":{}}}],["selectbyhraversion",{"_index":3283,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selectbyhraversion(row",{"_index":3298,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selected",{"_index":1879,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"injectables/VegaService.html":{}}}],["selected:enabled",{"_index":4458,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["selectedorganbeforefilter",{"_index":1409,"title":{"interfaces/SelectedOrganBeforeFilter.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["selectedorgans",{"_index":1498,"title":{},"body":{"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/VisControlsComponent.html":{}}}],["selectedsheetoption",{"_index":3276,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selectedversion",{"_index":3400,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selecting",{"_index":1228,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["selection",{"_index":2498,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/OrganTableSelectorComponent.html":{}}}],["selection.clear",{"_index":3392,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selection.select(...datasource.data",{"_index":3393,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selection.selected.length",{"_index":3388,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selectionmodel",{"_index":3333,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selectionmodel(true",{"_index":3318,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["selector'},{'name",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["selector.component",{"_index":3444,"title":{},"body":{"modules/OrganTableSelectorModule.html":{}}}],["selector.component.html",{"_index":3267,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.scss",{"_index":3266,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts",{"_index":3265,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:121",{"_index":3288,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:156",{"_index":3296,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:164",{"_index":3297,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:174",{"_index":3295,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:181",{"_index":3293,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:19",{"_index":3329,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:190",{"_index":3299,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:203",{"_index":3301,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:219",{"_index":3290,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:24",{"_index":3320,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:28",{"_index":3332,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:37",{"_index":3330,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:41",{"_index":3327,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:42",{"_index":3326,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:43",{"_index":3317,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:44",{"_index":3310,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:45",{"_index":3308,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:46",{"_index":3316,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:54",{"_index":3328,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:55",{"_index":3319,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:56",{"_index":3302,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:60",{"_index":3322,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:65",{"_index":3306,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:66",{"_index":3287,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:69",{"_index":3303,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:70",{"_index":3307,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:71",{"_index":3304,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:72",{"_index":3309,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.module",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["selector.module.ts",{"_index":3443,"title":{},"body":{"modules/OrganTableSelectorModule.html":{}}}],["selector/organ",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{}}}],["selector:active",{"_index":2734,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector:not(.active):hover",{"_index":2732,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectors",{"_index":2623,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectrow",{"_index":3284,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selectrow(row",{"_index":3300,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["self_links",{"_index":3059,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["send",{"_index":3713,"title":{},"body":{"injectables/SheetService.html":{}}}],["sendmail",{"_index":1504,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["senior",{"_index":4560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["separation",{"_index":1787,"title":{},"body":{"classes/Data.html":{}}}],["serif",{"_index":2010,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["service",{"_index":1733,"title":{},"body":{"classes/Data.html":{},"injectables/SheetService.html":{},"components/TrackingPopupComponent.html":{}}}],["services/analytics.module",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["services/consent.service",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["services/docs.service",{"_index":1964,"title":{},"body":{"components/DocsComponent.html":{}}}],["services/mouse",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":3076,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["set",{"_index":23,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"injectables/LocalStorageSyncService.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["setconsent",{"_index":1473,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setconsent(value",{"_index":1476,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setstate",{"_index":3100,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["setting",{"_index":4193,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["shadow",{"_index":1257,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["shape",{"_index":661,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Data.html":{}}}],["share",{"_index":1229,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"components/UploadComponent.html":{}}}],["sharereplay",{"_index":1467,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sharereplay(1",{"_index":1449,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sheet",{"_index":734,"title":{"interfaces/Sheet.html":{}},"body":{"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["sheet.color",{"_index":1189,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.config.height",{"_index":3568,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["sheet.controls['formdata",{"_index":1163,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.controls['formdata'].setvalue(fileformdataevent",{"_index":1169,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.controls['link",{"_index":1164,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.controls['link'].markastouched",{"_index":1212,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.csvurl",{"_index":3565,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["sheet.description",{"_index":1187,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.display",{"_index":3917,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["sheet.filename",{"_index":4309,"title":{},"body":{"components/UploadComponent.html":{}}}],["sheet.formdata",{"_index":3571,"title":{},"body":{"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["sheet.gid",{"_index":3561,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["sheet.link",{"_index":1188,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["sheet.model",{"_index":28,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/SearchStructure.html":{},"interfaces/Snackbar.html":{},"classes/TNode.html":{}}}],["sheet.sheetid",{"_index":3563,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["sheet.title",{"_index":1180,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheetconfig",{"_index":724,"title":{"interfaces/SheetConfig.html":{}},"body":{"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["sheetconfig).data",{"_index":1760,"title":{},"body":{"classes/Data.html":{}}}],["sheetconfig?.bimodal_distance_x",{"_index":785,"title":{},"body":{"injectables/BimodalService.html":{}}}],["sheetconfig?.bimodal_distance_y",{"_index":787,"title":{},"body":{"injectables/BimodalService.html":{}}}],["sheetconfiguration",{"_index":1440,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sheetdata",{"_index":732,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["sheetdetails",{"_index":1375,"title":{"interfaces/SheetDetails.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["sheetid",{"_index":1107,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["sheetinfo",{"_index":1185,"title":{"interfaces/SheetInfo.html":{}},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["sheetlogs",{"_index":3009,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{}}}],["sheetlogs.messages.push(newlog",{"_index":3083,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["sheetlogs.multi_in_links.push(message",{"_index":3094,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["sheetlogs.no_in_links.push(message",{"_index":3091,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["sheetlogs.no_out_links.push(message",{"_index":3088,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["sheetlogs.self_links.push(message",{"_index":3097,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["sheetoptions",{"_index":1381,"title":{"interfaces/SheetOptions.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["sheetoptions.filter((o",{"_index":3340,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["sheetref",{"_index":2111,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["sheets",{"_index":1144,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{}}}],["sheets.length",{"_index":1149,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheetservice",{"_index":3668,"title":{"injectables/SheetService.html":{}},"body":{"injectables/SheetService.html":{}}}],["sheetstate",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"components/ControlPaneComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{}}}],["sheeturl",{"_index":3904,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["shortcut",{"_index":3547,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["show",{"_index":1585,"title":{},"body":{"components/ControlPaneComponent.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/HomeComponent.html":{},"classes/RefreshData.html":{},"classes/Signals.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["show_all_as",{"_index":1363,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["show_ontology",{"_index":703,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["showallas",{"_index":1505,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["showbutton",{"_index":3939,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showbutton(button",{"_index":3946,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showdiscrepencyid",{"_index":4404,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["showdiscrepencylabel",{"_index":4405,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["showduplicateid",{"_index":4406,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["showheader",{"_index":1932,"title":{},"body":{"components/DocsComponent.html":{}}}],["shows",{"_index":4164,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["side",{"_index":1050,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["sidebar",{"_index":4165,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["sidenav",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/ReportModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"components/VisControlsComponent.html":{}}}],["sidenav'},{'name",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["sidenav.component",{"_index":3790,"title":{},"body":{"modules/SidenavModule.html":{}}}],["sidenav.component.html",{"_index":3760,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":3759,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav/sidenav.module",{"_index":1429,"title":{},"body":{"modules/CompareModule.html":{},"modules/DebugLogsModule.html":{},"modules/IndentedListModule.html":{},"modules/ReportModule.html":{},"modules/UploadModule.html":{}}}],["sidenavcomponent",{"_index":398,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavModule.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["sidenavheadercomponent",{"_index":400,"title":{"components/SidenavHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["sidenavheadermodule",{"_index":1416,"title":{"modules/SidenavHeaderModule.html":{}},"body":{"modules/CompareModule.html":{},"modules/DebugLogsModule.html":{},"modules/IndentedListModule.html":{},"modules/ReportModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/UploadModule.html":{},"index.html":{},"modules.html":{}}}],["sidenavmodule",{"_index":1417,"title":{"modules/SidenavModule.html":{}},"body":{"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/DebugLogsModule.html":{},"modules/IndentedListModule.html":{},"modules/ReportModule.html":{},"modules/SidenavModule.html":{},"modules/UploadModule.html":{},"index.html":{},"modules.html":{}}}],["signal",{"_index":592,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Data.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["signals",{"_index":572,"title":{"classes/Signals.html":{}},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{}}}],["signals(config).signals",{"_index":3842,"title":{},"body":{"classes/Signals.html":{}}}],["signals.create(sheetconfig",{"_index":4391,"title":{},"body":{"injectables/VegaService.html":{}}}],["size",{"_index":181,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"interfaces/Link.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":4108,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["sjson",{"_index":4438,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["skip",{"_index":2624,"title":{},"body":{"components/HomeComponent.html":{}}}],["slice(1).join",{"_index":3374,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["slide",{"_index":2486,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["slider",{"_index":2484,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/OrganTableSelectorComponent.html":{},"components/VisControlsComponent.html":{}}}],["slider__thumb",{"_index":4464,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["slider__track",{"_index":4461,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["smes",{"_index":2640,"title":{},"body":{"components/HomeComponent.html":{}}}],["snackbar",{"_index":272,"title":{"interfaces/Snackbar.html":{}},"body":{"components/AppComponent.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["snackbar.dismiss",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["snackbartype",{"_index":1030,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/HasError.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Response.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"miscellaneous/enumerations.html":{}}}],["snackbartype.error",{"_index":4207,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["snackbartype.success",{"_index":4168,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["social",{"_index":2408,"title":{},"body":{"components/FooterComponent.html":{}}}],["software",{"_index":4536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":1314,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/UploadComponent.html":{}}}],["sort",{"_index":180,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/variables.html":{}}}],["sort_by_alpha",{"_index":2458,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["sorting",{"_index":3524,"title":{},"body":{"components/PlaygroundComponent.html":{},"interfaces/TreeStateModel.html":{}}}],["sortoptions",{"_index":2424,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["sortorder",{"_index":2902,"title":{},"body":{"interfaces/Legend.html":{},"injectables/LegendService.html":{}}}],["sotre",{"_index":4166,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["source",{"_index":3,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["source.color",{"_index":1153,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.description",{"_index":1155,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.filename",{"_index":1157,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.formdata",{"_index":1156,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.link",{"_index":1152,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.title",{"_index":1154,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.x",{"_index":1797,"title":{},"body":{"classes/Data.html":{}}}],["source.y",{"_index":1799,"title":{},"body":{"classes/Data.html":{}}}],["sources",{"_index":150,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Link.html":{},"classes/Signals.html":{}}}],["sources.foreach((s",{"_index":941,"title":{},"body":{"injectables/BimodalService.html":{}}}],["sources.push(nodes[s].id",{"_index":940,"title":{},"body":{"injectables/BimodalService.html":{}}}],["sources__click",{"_index":3826,"title":{},"body":{"classes/Signals.html":{}}}],["sources_clicked_array",{"_index":1813,"title":{},"body":{"classes/Data.html":{}}}],["sources_hovered_array",{"_index":1809,"title":{},"body":{"classes/Data.html":{}}}],["sources_of_sources__click",{"_index":1817,"title":{},"body":{"classes/Data.html":{}}}],["sources_of_sources__hover",{"_index":1819,"title":{},"body":{"classes/Data.html":{}}}],["sourcex",{"_index":1796,"title":{},"body":{"classes/Data.html":{}}}],["sourcey",{"_index":1798,"title":{},"body":{"classes/Data.html":{}}}],["space",{"_index":1300,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["spacer",{"_index":2651,"title":{},"body":{"components/HomeComponent.html":{}}}],["spacing",{"_index":2016,"title":{},"body":{"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{}}}],["spec",{"_index":743,"title":{},"body":{"injectables/BimodalService.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Response.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["spec.data",{"_index":988,"title":{},"body":{"injectables/BimodalService.html":{}}}],["spec.data?.[0",{"_index":4097,"title":{},"body":{"injectables/TreeService.html":{}}}],["spec/data",{"_index":4353,"title":{},"body":{"injectables/VegaService.html":{}}}],["spec/legends",{"_index":4354,"title":{},"body":{"injectables/VegaService.html":{}}}],["spec/marks",{"_index":4355,"title":{},"body":{"injectables/VegaService.html":{}}}],["spec/scales",{"_index":4356,"title":{},"body":{"injectables/VegaService.html":{}}}],["spec/signals",{"_index":4357,"title":{},"body":{"injectables/VegaService.html":{}}}],["specifically",{"_index":2627,"title":{},"body":{"components/HomeComponent.html":{}}}],["specification",{"_index":4109,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["spliturl",{"_index":1196,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["spliturl.length",{"_index":1198,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["spliturl[5",{"_index":1200,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["spliturl[6].split('=')[1",{"_index":1201,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["spreadsheet",{"_index":3452,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["spreadsheetdata",{"_index":3453,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["square",{"_index":665,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/.../analytics.module.ts",{"_index":4483,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.component.ts",{"_index":4529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":4484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../bimodal.model.ts",{"_index":4522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consent.service.ts",{"_index":4519,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../docs.ts",{"_index":4531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":4524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.stage.ts",{"_index":4525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ga.model.ts",{"_index":4475,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../home.ts",{"_index":4523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":4530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logs.model.ts",{"_index":4476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mouse",{"_index":4486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../response.model.ts",{"_index":4478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../sheet.model.ts",{"_index":4474,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../sheet.state.ts",{"_index":4528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tree.functions.ts",{"_index":4481,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../tree.model.ts",{"_index":4477,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../url.ts",{"_index":4479,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.ts",{"_index":4488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/actions/logs.actions.ts",{"_index":1013,"title":{},"body":{"classes/ClearSheetLogs.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["src/app/actions/logs.actions.ts:12",{"_index":3613,"title":{},"body":{"classes/ReportMultiLog.html":{}}}],["src/app/actions/logs.actions.ts:14",{"_index":3615,"title":{},"body":{"classes/ReportMultiLog.html":{}}}],["src/app/actions/logs.actions.ts:15",{"_index":3614,"title":{},"body":{"classes/ReportMultiLog.html":{}}}],["src/app/actions/logs.actions.ts:16",{"_index":3616,"title":{},"body":{"classes/ReportMultiLog.html":{}}}],["src/app/actions/logs.actions.ts:2",{"_index":3598,"title":{},"body":{"classes/ReportLog.html":{}}}],["src/app/actions/logs.actions.ts:21",{"_index":1016,"title":{},"body":{"classes/ClearSheetLogs.html":{}}}],["src/app/actions/logs.actions.ts:4",{"_index":3601,"title":{},"body":{"classes/ReportLog.html":{}}}],["src/app/actions/logs.actions.ts:5",{"_index":3600,"title":{},"body":{"classes/ReportLog.html":{}}}],["src/app/actions/logs.actions.ts:6",{"_index":3599,"title":{},"body":{"classes/ReportLog.html":{}}}],["src/app/actions/logs.actions.ts:7",{"_index":3602,"title":{},"body":{"classes/ReportLog.html":{}}}],["src/app/actions/sheet.actions.ts",{"_index":1867,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["src/app/actions/sheet.actions.ts:102",{"_index":4251,"title":{},"body":{"classes/UpdateGetFromCache.html":{}}}],["src/app/actions/sheet.actions.ts:103",{"_index":4252,"title":{},"body":{"classes/UpdateGetFromCache.html":{}}}],["src/app/actions/sheet.actions.ts:107",{"_index":2208,"title":{},"body":{"classes/FetchValidOmapProtiens.html":{}}}],["src/app/actions/sheet.actions.ts:11",{"_index":3596,"title":{},"body":{"classes/RefreshData.html":{}}}],["src/app/actions/sheet.actions.ts:111",{"_index":4280,"title":{},"body":{"classes/UpdateSelectedOrgansBeforeFilter.html":{}}}],["src/app/actions/sheet.actions.ts:112",{"_index":4281,"title":{},"body":{"classes/UpdateSelectedOrgansBeforeFilter.html":{}}}],["src/app/actions/sheet.actions.ts:15",{"_index":2194,"title":{},"body":{"classes/FetchDataFromAssets.html":{}}}],["src/app/actions/sheet.actions.ts:17",{"_index":2196,"title":{},"body":{"classes/FetchDataFromAssets.html":{}}}],["src/app/actions/sheet.actions.ts:18",{"_index":2195,"title":{},"body":{"classes/FetchDataFromAssets.html":{}}}],["src/app/actions/sheet.actions.ts:23",{"_index":2188,"title":{},"body":{"classes/FetchAllOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:24",{"_index":2189,"title":{},"body":{"classes/FetchAllOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:28",{"_index":2201,"title":{},"body":{"classes/FetchSelectedOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:30",{"_index":2205,"title":{},"body":{"classes/FetchSelectedOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:31",{"_index":2204,"title":{},"body":{"classes/FetchSelectedOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:32",{"_index":2203,"title":{},"body":{"classes/FetchSelectedOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:33",{"_index":2202,"title":{},"body":{"classes/FetchSelectedOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:38",{"_index":2191,"title":{},"body":{"classes/FetchCompareData.html":{}}}],["src/app/actions/sheet.actions.ts:39",{"_index":2192,"title":{},"body":{"classes/FetchCompareData.html":{}}}],["src/app/actions/sheet.actions.ts:43",{"_index":4248,"title":{},"body":{"classes/UpdateConfig.html":{}}}],["src/app/actions/sheet.actions.ts:44",{"_index":4249,"title":{},"body":{"classes/UpdateConfig.html":{}}}],["src/app/actions/sheet.actions.ts:48",{"_index":3929,"title":{},"body":{"classes/ToggleShowAllAS.html":{}}}],["src/app/actions/sheet.actions.ts:52",{"_index":4277,"title":{},"body":{"classes/UpdateReport.html":{}}}],["src/app/actions/sheet.actions.ts:53",{"_index":4278,"title":{},"body":{"classes/UpdateReport.html":{}}}],["src/app/actions/sheet.actions.ts:57",{"_index":1869,"title":{},"body":{"classes/DeleteCompareSheet.html":{}}}],["src/app/actions/sheet.actions.ts:58",{"_index":1870,"title":{},"body":{"classes/DeleteCompareSheet.html":{}}}],["src/app/actions/sheet.actions.ts:6",{"_index":2206,"title":{},"body":{"classes/FetchSheetData.html":{}}}],["src/app/actions/sheet.actions.ts:62",{"_index":4268,"title":{},"body":{"classes/UpdateMode.html":{}}}],["src/app/actions/sheet.actions.ts:63",{"_index":4269,"title":{},"body":{"classes/UpdateMode.html":{}}}],["src/app/actions/sheet.actions.ts:67",{"_index":4274,"title":{},"body":{"classes/UpdatePrevSheet.html":{}}}],["src/app/actions/sheet.actions.ts:68",{"_index":4275,"title":{},"body":{"classes/UpdatePrevSheet.html":{}}}],["src/app/actions/sheet.actions.ts:7",{"_index":2207,"title":{},"body":{"classes/FetchSheetData.html":{}}}],["src/app/actions/sheet.actions.ts:72",{"_index":4282,"title":{},"body":{"classes/UpdateSheet.html":{}}}],["src/app/actions/sheet.actions.ts:73",{"_index":4283,"title":{},"body":{"classes/UpdateSheet.html":{}}}],["src/app/actions/sheet.actions.ts:77",{"_index":2197,"title":{},"body":{"classes/FetchInitialPlaygroundData.html":{}}}],["src/app/actions/sheet.actions.ts:78",{"_index":2198,"title":{},"body":{"classes/FetchInitialPlaygroundData.html":{}}}],["src/app/actions/sheet.actions.ts:82",{"_index":4272,"title":{},"body":{"classes/UpdatePlaygroundData.html":{}}}],["src/app/actions/sheet.actions.ts:83",{"_index":4273,"title":{},"body":{"classes/UpdatePlaygroundData.html":{}}}],["src/app/actions/sheet.actions.ts:87",{"_index":2199,"title":{},"body":{"classes/FetchPlaygroundUploadData.html":{}}}],["src/app/actions/sheet.actions.ts:88",{"_index":2200,"title":{},"body":{"classes/FetchPlaygroundUploadData.html":{}}}],["src/app/actions/sheet.actions.ts:92",{"_index":4246,"title":{},"body":{"classes/UpdateBottomSheetInfo.html":{}}}],["src/app/actions/sheet.actions.ts:93",{"_index":4247,"title":{},"body":{"classes/UpdateBottomSheetInfo.html":{}}}],["src/app/actions/sheet.actions.ts:97",{"_index":4242,"title":{},"body":{"classes/UpdateBottomSheetDOI.html":{}}}],["src/app/actions/sheet.actions.ts:98",{"_index":4243,"title":{},"body":{"classes/UpdateBottomSheetDOI.html":{}}}],["src/app/actions/tree.actions.ts",{"_index":1902,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["src/app/actions/tree.actions.ts:11",{"_index":4285,"title":{},"body":{"classes/UpdateVegaSpec.html":{}}}],["src/app/actions/tree.actions.ts:13",{"_index":4286,"title":{},"body":{"classes/UpdateVegaSpec.html":{}}}],["src/app/actions/tree.actions.ts:17",{"_index":4288,"title":{},"body":{"classes/UpdateVegaView.html":{}}}],["src/app/actions/tree.actions.ts:19",{"_index":4289,"title":{},"body":{"classes/UpdateVegaView.html":{}}}],["src/app/actions/tree.actions.ts:23",{"_index":4237,"title":{},"body":{"classes/UpdateBimodal.html":{}}}],["src/app/actions/tree.actions.ts:25",{"_index":4239,"title":{},"body":{"classes/UpdateBimodal.html":{}}}],["src/app/actions/tree.actions.ts:26",{"_index":4238,"title":{},"body":{"classes/UpdateBimodal.html":{}}}],["src/app/actions/tree.actions.ts:31",{"_index":4240,"title":{},"body":{"classes/UpdateBimodalConfig.html":{}}}],["src/app/actions/tree.actions.ts:32",{"_index":4241,"title":{},"body":{"classes/UpdateBimodalConfig.html":{}}}],["src/app/actions/tree.actions.ts:36",{"_index":1918,"title":{},"body":{"classes/DoSearch.html":{}}}],["src/app/actions/tree.actions.ts:38",{"_index":1920,"title":{},"body":{"classes/DoSearch.html":{}}}],["src/app/actions/tree.actions.ts:39",{"_index":1919,"title":{},"body":{"classes/DoSearch.html":{}}}],["src/app/actions/tree.actions.ts:44",{"_index":1915,"title":{},"body":{"classes/DiscrepencyLabel.html":{}}}],["src/app/actions/tree.actions.ts:45",{"_index":1916,"title":{},"body":{"classes/DiscrepencyLabel.html":{}}}],["src/app/actions/tree.actions.ts:48",{"_index":1905,"title":{},"body":{"classes/DiscrepencyId.html":{}}}],["src/app/actions/tree.actions.ts:49",{"_index":1906,"title":{},"body":{"classes/DiscrepencyId.html":{}}}],["src/app/actions/tree.actions.ts:53",{"_index":2146,"title":{},"body":{"classes/DuplicateId.html":{}}}],["src/app/actions/tree.actions.ts:54",{"_index":2147,"title":{},"body":{"classes/DuplicateId.html":{}}}],["src/app/actions/tree.actions.ts:58",{"_index":4244,"title":{},"body":{"classes/UpdateBottomSheetData.html":{}}}],["src/app/actions/tree.actions.ts:6",{"_index":4254,"title":{},"body":{"classes/UpdateGraphWidth.html":{}}}],["src/app/actions/tree.actions.ts:60",{"_index":4245,"title":{},"body":{"classes/UpdateBottomSheetData.html":{}}}],["src/app/actions/tree.actions.ts:64",{"_index":4257,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:66",{"_index":4261,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:67",{"_index":4263,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:68",{"_index":4262,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:69",{"_index":4264,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:7",{"_index":4255,"title":{},"body":{"classes/UpdateGraphWidth.html":{}}}],["src/app/actions/tree.actions.ts:70",{"_index":4259,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:71",{"_index":4260,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:72",{"_index":4258,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:77",{"_index":4270,"title":{},"body":{"classes/UpdateOmapConfig.html":{}}}],["src/app/actions/tree.actions.ts:78",{"_index":4271,"title":{},"body":{"classes/UpdateOmapConfig.html":{}}}],["src/app/actions/ui.actions.ts",{"_index":1026,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/UpdateLoadingText.html":{}}}],["src/app/actions/ui.actions.ts:11",{"_index":4265,"title":{},"body":{"classes/UpdateLoadingText.html":{}}}],["src/app/actions/ui.actions.ts:12",{"_index":4266,"title":{},"body":{"classes/UpdateLoadingText.html":{}}}],["src/app/actions/ui.actions.ts:16",{"_index":1063,"title":{},"body":{"classes/CloseLoading.html":{}}}],["src/app/actions/ui.actions.ts:17",{"_index":1064,"title":{},"body":{"classes/CloseLoading.html":{}}}],["src/app/actions/ui.actions.ts:21",{"_index":2523,"title":{},"body":{"classes/HasError.html":{}}}],["src/app/actions/ui.actions.ts:22",{"_index":2524,"title":{},"body":{"classes/HasError.html":{}}}],["src/app/actions/ui.actions.ts:26",{"_index":3207,"title":{},"body":{"classes/NoError.html":{}}}],["src/app/actions/ui.actions.ts:30",{"_index":3925,"title":{},"body":{"classes/ToggleControlPane.html":{}}}],["src/app/actions/ui.actions.ts:34",{"_index":3245,"title":{},"body":{"classes/OpenSnackbar.html":{}}}],["src/app/actions/ui.actions.ts:36",{"_index":3246,"title":{},"body":{"classes/OpenSnackbar.html":{}}}],["src/app/actions/ui.actions.ts:37",{"_index":3247,"title":{},"body":{"classes/OpenSnackbar.html":{}}}],["src/app/actions/ui.actions.ts:42",{"_index":1067,"title":{},"body":{"classes/CloseSnackbar.html":{}}}],["src/app/actions/ui.actions.ts:46",{"_index":3927,"title":{},"body":{"classes/ToggleIndentList.html":{}}}],["src/app/actions/ui.actions.ts:50",{"_index":3928,"title":{},"body":{"classes/ToggleReport.html":{}}}],["src/app/actions/ui.actions.ts:54",{"_index":3926,"title":{},"body":{"classes/ToggleDebugLogs.html":{}}}],["src/app/actions/ui.actions.ts:58",{"_index":1065,"title":{},"body":{"classes/CloseRightSideNav.html":{}}}],["src/app/actions/ui.actions.ts:6",{"_index":3242,"title":{},"body":{"classes/OpenLoading.html":{}}}],["src/app/actions/ui.actions.ts:62",{"_index":3924,"title":{},"body":{"classes/ToggleBottomSheet.html":{}}}],["src/app/actions/ui.actions.ts:66",{"_index":3237,"title":{},"body":{"classes/OpenBottomSheet.html":{}}}],["src/app/actions/ui.actions.ts:67",{"_index":3238,"title":{},"body":{"classes/OpenBottomSheet.html":{}}}],["src/app/actions/ui.actions.ts:7",{"_index":3243,"title":{},"body":{"classes/OpenLoading.html":{}}}],["src/app/actions/ui.actions.ts:71",{"_index":3239,"title":{},"body":{"classes/OpenBottomSheetDOI.html":{}}}],["src/app/actions/ui.actions.ts:72",{"_index":3240,"title":{},"body":{"classes/OpenBottomSheetDOI.html":{}}}],["src/app/actions/ui.actions.ts:76",{"_index":1029,"title":{},"body":{"classes/CloseBottomSheet.html":{}}}],["src/app/actions/ui.actions.ts:80",{"_index":1060,"title":{},"body":{"classes/CloseBottomSheetDOI.html":{}}}],["src/app/actions/ui.actions.ts:84",{"_index":3241,"title":{},"body":{"classes/OpenCompare.html":{}}}],["src/app/actions/ui.actions.ts:88",{"_index":1061,"title":{},"body":{"classes/CloseCompare.html":{}}}],["src/app/actions/ui.actions.ts:92",{"_index":3244,"title":{},"body":{"classes/OpenSearch.html":{}}}],["src/app/actions/ui.actions.ts:96",{"_index":1066,"title":{},"body":{"classes/CloseSearch.html":{}}}],["src/app/app",{"_index":488,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ConfigService.html":{}}}],["src/app/app.component.ts",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts:17",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/compare/compare.component.ts",{"_index":1068,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:114",{"_index":1105,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:132",{"_index":1115,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:14",{"_index":1098,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:15",{"_index":1099,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:160",{"_index":1103,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:169",{"_index":1132,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:17",{"_index":1096,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:173",{"_index":1117,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:182",{"_index":1116,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:19",{"_index":1127,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:190",{"_index":1100,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:196",{"_index":1121,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:20",{"_index":1129,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:21",{"_index":1094,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:24",{"_index":1126,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:25",{"_index":1130,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:67",{"_index":1124,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:72",{"_index":1119,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:83",{"_index":1110,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.module.ts",{"_index":1418,"title":{},"body":{"modules/CompareModule.html":{}}}],["src/app/components/controls/controls.module.ts",{"_index":1690,"title":{},"body":{"modules/ControlsModule.html":{}}}],["src/app/components/controls/vis",{"_index":4396,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["src/app/components/debug",{"_index":1826,"title":{},"body":{"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{}}}],["src/app/components/doi/doi.component.ts",{"_index":2107,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:12",{"_index":2118,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:13",{"_index":2119,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:14",{"_index":2114,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:16",{"_index":2117,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:17",{"_index":2120,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:35",{"_index":2115,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.module.ts",{"_index":2143,"title":{},"body":{"modules/DoiModule.html":{}}}],["src/app/components/error/error.component.ts",{"_index":2154,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/components/error/error.component.ts:10",{"_index":2157,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/components/error/error.module.ts",{"_index":2185,"title":{},"body":{"modules/ErrorModule.html":{}}}],["src/app/components/file",{"_index":2209,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":2335,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:16",{"_index":2354,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:17",{"_index":2353,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:18",{"_index":2355,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:19",{"_index":2351,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:20",{"_index":2352,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:21",{"_index":2356,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:23",{"_index":2350,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:24",{"_index":2345,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:27",{"_index":2349,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:29",{"_index":2357,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:36",{"_index":2347,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:41",{"_index":2348,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:46",{"_index":2346,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.module.ts",{"_index":2415,"title":{},"body":{"modules/FooterModule.html":{}}}],["src/app/components/home/home.component.ts",{"_index":2525,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:104",{"_index":2540,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:112",{"_index":2538,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:19",{"_index":2567,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:20",{"_index":2549,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:21",{"_index":2562,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:22",{"_index":2547,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:23",{"_index":2556,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:24",{"_index":2566,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:26",{"_index":2553,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:27",{"_index":2552,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:28",{"_index":2551,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:29",{"_index":2554,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:30",{"_index":2550,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:32",{"_index":2548,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:33",{"_index":2557,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:34",{"_index":2561,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:36",{"_index":2565,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:37",{"_index":2560,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:39",{"_index":2537,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:42",{"_index":2546,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:44",{"_index":2555,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:79",{"_index":2544,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:89",{"_index":2542,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:94",{"_index":2541,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:99",{"_index":2539,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.module.ts",{"_index":2773,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/components/indented",{"_index":2284,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{}}}],["src/app/components/info/info.component.ts",{"_index":2861,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:15",{"_index":2870,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:16",{"_index":2871,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:17",{"_index":2868,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:18",{"_index":2865,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:23",{"_index":2867,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:25",{"_index":2872,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:26",{"_index":2869,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:50",{"_index":2866,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.module.ts",{"_index":2899,"title":{},"body":{"modules/InfoModule.html":{}}}],["src/app/components/legend/legend.component.ts",{"_index":2903,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:16",{"_index":2915,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:18",{"_index":2914,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:19",{"_index":2912,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:20",{"_index":2913,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:21",{"_index":2911,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:23",{"_index":2916,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.module.ts",{"_index":2944,"title":{},"body":{"modules/LegendModule.html":{}}}],["src/app/components/legend/legend.service.ts",{"_index":2949,"title":{},"body":{"injectables/LegendService.html":{}}}],["src/app/components/legend/legend.service.ts:13",{"_index":2955,"title":{},"body":{"injectables/LegendService.html":{}}}],["src/app/components/legend/legend.service.ts:15",{"_index":2953,"title":{},"body":{"injectables/LegendService.html":{}}}],["src/app/components/loading/loading.component.ts",{"_index":3011,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/loading/loading.component.ts:13",{"_index":3014,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/loading/loading.component.ts:15",{"_index":3016,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/loading/loading.module.ts",{"_index":3028,"title":{},"body":{"modules/LoadingModule.html":{}}}],["src/app/components/nav",{"_index":3171,"title":{},"body":{"components/NavItemComponent.html":{},"modules/NavItemModule.html":{}}}],["src/app/components/omap",{"_index":3211,"title":{},"body":{"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{}}}],["src/app/components/organ",{"_index":3264,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{}}}],["src/app/components/report/report.module.ts",{"_index":3608,"title":{},"body":{"modules/ReportModule.html":{}}}],["src/app/components/sidenav",{"_index":3763,"title":{},"body":{"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{}}}],["src/app/components/sidenav/sidenav.component.ts",{"_index":3758,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/sidenav/sidenav.module.ts",{"_index":3789,"title":{},"body":{"modules/SidenavModule.html":{}}}],["src/app/components/table",{"_index":3899,"title":{},"body":{"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{}}}],["src/app/components/tracking",{"_index":3930,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{}}}],["src/app/components/upload/upload.component.ts",{"_index":4290,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:11",{"_index":4294,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:13",{"_index":4300,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:14",{"_index":4293,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:16",{"_index":4299,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:40",{"_index":4295,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:49",{"_index":4298,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:53",{"_index":4297,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:74",{"_index":4296,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.module.ts",{"_index":4323,"title":{},"body":{"modules/UploadModule.html":{}}}],["src/app/models/bimodal.model.ts",{"_index":133,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/bimodal.model.ts:11",{"_index":514,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:12",{"_index":517,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:13",{"_index":508,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:14",{"_index":509,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:15",{"_index":507,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:16",{"_index":526,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:17",{"_index":527,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:18",{"_index":510,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:19",{"_index":505,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:20",{"_index":515,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:21",{"_index":524,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:22",{"_index":523,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:24",{"_index":520,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:25",{"_index":519,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:26",{"_index":512,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:27",{"_index":525,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:28",{"_index":506,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:29",{"_index":511,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:30",{"_index":518,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:31",{"_index":513,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:32",{"_index":504,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:33",{"_index":521,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:34",{"_index":522,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:35",{"_index":516,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:36",{"_index":503,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/ga.model.ts",{"_index":2480,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/indent.model.ts",{"_index":2779,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:18",{"_index":2787,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:2",{"_index":2784,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:3",{"_index":2785,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:4",{"_index":2781,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:5",{"_index":2782,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:6",{"_index":2783,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:7",{"_index":2780,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/legend.model.ts",{"_index":2901,"title":{},"body":{"interfaces/Legend.html":{}}}],["src/app/models/logs.model.ts",{"_index":3054,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/omap.model.ts",{"_index":3208,"title":{},"body":{"interfaces/OmapConfig.html":{}}}],["src/app/models/report.model.ts",{"_index":996,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["src/app/models/response.model.ts",{"_index":2148,"title":{},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Response.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/sheet.model.ts",{"_index":1330,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/tree.model.ts",{"_index":5,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/tree.model.ts:126",{"_index":1011,"title":{},"body":{"classes/Cell.html":{}}}],["src/app/models/tree.model.ts:127",{"_index":1010,"title":{},"body":{"classes/Cell.html":{}}}],["src/app/models/tree.model.ts:128",{"_index":1009,"title":{},"body":{"classes/Cell.html":{}}}],["src/app/models/tree.model.ts:129",{"_index":1008,"title":{},"body":{"classes/Cell.html":{}}}],["src/app/models/tree.model.ts:130",{"_index":1007,"title":{},"body":{"classes/Cell.html":{}}}],["src/app/models/tree.model.ts:142",{"_index":3106,"title":{},"body":{"classes/Marker.html":{}}}],["src/app/models/tree.model.ts:143",{"_index":3105,"title":{},"body":{"classes/Marker.html":{}}}],["src/app/models/tree.model.ts:144",{"_index":3103,"title":{},"body":{"classes/Marker.html":{}}}],["src/app/models/tree.model.ts:145",{"_index":3104,"title":{},"body":{"classes/Marker.html":{}}}],["src/app/models/tree.model.ts:146",{"_index":3102,"title":{},"body":{"classes/Marker.html":{}}}],["src/app/models/tree.model.ts:15",{"_index":3886,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:16",{"_index":3889,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:17",{"_index":3892,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:18",{"_index":3891,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:19",{"_index":3880,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:20",{"_index":3895,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:21",{"_index":3884,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:22",{"_index":3885,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:23",{"_index":3887,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:24",{"_index":3894,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:25",{"_index":3893,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:26",{"_index":3879,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:27",{"_index":3897,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:28",{"_index":3898,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:29",{"_index":3896,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:30",{"_index":3881,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:31",{"_index":3883,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:32",{"_index":3882,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:33",{"_index":3888,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:34",{"_index":3890,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:35",{"_index":3878,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/ui.model.ts",{"_index":3004,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{}}}],["src/app/modules/control",{"_index":1491,"title":{},"body":{"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{}}}],["src/app/modules/docs/docs",{"_index":2056,"title":{},"body":{"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{}}}],["src/app/modules/docs/docs.component.ts",{"_index":1921,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:16",{"_index":1960,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:17",{"_index":1955,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:18",{"_index":1954,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:19",{"_index":1953,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:20",{"_index":1959,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:21",{"_index":1951,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:22",{"_index":1957,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:23",{"_index":1958,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:24",{"_index":1950,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:25",{"_index":1940,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:28",{"_index":1948,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:30",{"_index":1947,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:31",{"_index":1952,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:32",{"_index":1956,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:56",{"_index":1942,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:63",{"_index":1943,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:68",{"_index":1946,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:73",{"_index":1944,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:78",{"_index":1945,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.module.ts",{"_index":2047,"title":{},"body":{"modules/DocsModule.html":{}}}],["src/app/modules/functions/functions.component.ts",{"_index":2417,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:26",{"_index":2435,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:27",{"_index":2440,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:28",{"_index":2437,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:29",{"_index":2432,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:30",{"_index":2433,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:31",{"_index":2438,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:33",{"_index":2427,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:35",{"_index":2426,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:38",{"_index":2441,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:39",{"_index":2434,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:40",{"_index":2439,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:47",{"_index":2430,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:57",{"_index":2431,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.module.ts",{"_index":2477,"title":{},"body":{"modules/FunctionsModule.html":{}}}],["src/app/modules/navbar/navbar.module.ts",{"_index":3197,"title":{},"body":{"modules/NavbarModule.html":{}}}],["src/app/modules/playground/playground.component.ts",{"_index":3447,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:19",{"_index":3490,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:21",{"_index":3478,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:22",{"_index":3488,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:249",{"_index":3471,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:263",{"_index":3474,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:27",{"_index":3491,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:280",{"_index":3458,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:31",{"_index":3496,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:35",{"_index":3487,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:39",{"_index":3476,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:43",{"_index":3493,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:48",{"_index":3484,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:53",{"_index":3457,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:56",{"_index":3492,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:57",{"_index":3479,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:81",{"_index":3461,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:97",{"_index":3466,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.module.ts",{"_index":3592,"title":{},"body":{"modules/PlaygroundModule.html":{}}}],["src/app/modules/root/root.module.ts",{"_index":3621,"title":{},"body":{"modules/RootModule.html":{}}}],["src/app/modules/search/search.module.ts",{"_index":3662,"title":{},"body":{"modules/SearchModule.html":{}}}],["src/app/modules/tree/bimodal.service.ts",{"_index":712,"title":{},"body":{"injectables/BimodalService.html":{}}}],["src/app/modules/tree/bimodal.service.ts:19",{"_index":719,"title":{},"body":{"injectables/BimodalService.html":{}}}],["src/app/modules/tree/bimodal.service.ts:30",{"_index":727,"title":{},"body":{"injectables/BimodalService.html":{}}}],["src/app/modules/tree/bimodal.service.ts:393",{"_index":744,"title":{},"body":{"injectables/BimodalService.html":{}}}],["src/app/modules/tree/bimodal.service.ts:414",{"_index":747,"title":{},"body":{"injectables/BimodalService.html":{}}}],["src/app/modules/tree/spec/data.ts",{"_index":1698,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:111",{"_index":1734,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:12",{"_index":1719,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:130",{"_index":1726,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:158",{"_index":1738,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:168",{"_index":1736,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:196",{"_index":1751,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:212",{"_index":1746,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:228",{"_index":1750,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:244",{"_index":1745,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:260",{"_index":1752,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:280",{"_index":1748,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:300",{"_index":1753,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:320",{"_index":1749,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:340",{"_index":1754,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:356",{"_index":1758,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:41",{"_index":1744,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:52",{"_index":1739,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:6",{"_index":1724,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:63",{"_index":1743,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:74",{"_index":1741,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:87",{"_index":1731,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts",{"_index":530,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:136",{"_index":553,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:17",{"_index":544,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:185",{"_index":561,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:234",{"_index":549,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:38",{"_index":563,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:398",{"_index":551,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:4",{"_index":543,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:458",{"_index":564,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:538",{"_index":566,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:8",{"_index":541,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:87",{"_index":560,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/multiparent.ts",{"_index":3161,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/multiparent.ts:10",{"_index":3163,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/multiparent.ts:16",{"_index":3165,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/multiparent.ts:26",{"_index":3166,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/multiparent.ts:6",{"_index":3164,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts",{"_index":3985,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:110",{"_index":3993,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:17",{"_index":3996,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:182",{"_index":3992,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:254",{"_index":3994,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:326",{"_index":3997,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:358",{"_index":3998,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:38",{"_index":3995,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:4",{"_index":3991,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:402",{"_index":3999,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:457",{"_index":4001,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:8",{"_index":3990,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/legends.ts",{"_index":2983,"title":{},"body":{"classes/Legends.html":{}}}],["src/app/modules/tree/spec/legends.ts:10",{"_index":2986,"title":{},"body":{"classes/Legends.html":{}}}],["src/app/modules/tree/spec/legends.ts:19",{"_index":2988,"title":{},"body":{"classes/Legends.html":{}}}],["src/app/modules/tree/spec/legends.ts:35",{"_index":2995,"title":{},"body":{"classes/Legends.html":{}}}],["src/app/modules/tree/spec/legends.ts:6",{"_index":2987,"title":{},"body":{"classes/Legends.html":{}}}],["src/app/modules/tree/spec/marks.ts",{"_index":3107,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/marks.ts:14",{"_index":3110,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/marks.ts:23",{"_index":3115,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/marks.ts:30",{"_index":3113,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/marks.ts:37",{"_index":3112,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/marks.ts:7",{"_index":3111,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/scales.ts",{"_index":3640,"title":{},"body":{"classes/Scales.html":{}}}],["src/app/modules/tree/spec/scales.ts:21",{"_index":3646,"title":{},"body":{"classes/Scales.html":{}}}],["src/app/modules/tree/spec/scales.ts:36",{"_index":3652,"title":{},"body":{"classes/Scales.html":{}}}],["src/app/modules/tree/spec/scales.ts:4",{"_index":3645,"title":{},"body":{"classes/Scales.html":{}}}],["src/app/modules/tree/spec/scales.ts:8",{"_index":3643,"title":{},"body":{"classes/Scales.html":{}}}],["src/app/modules/tree/spec/signals.ts",{"_index":3791,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:110",{"_index":3830,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:12",{"_index":3807,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:131",{"_index":3814,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:152",{"_index":3818,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:170",{"_index":3823,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:188",{"_index":3821,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:206",{"_index":3827,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:227",{"_index":3825,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:244",{"_index":3836,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:254",{"_index":3835,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:38",{"_index":3833,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:5",{"_index":3809,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:58",{"_index":3838,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:69",{"_index":3813,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:80",{"_index":3811,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:92",{"_index":3829,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/tree.component.ts",{"_index":3977,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/modules/tree/tree.component.ts:9",{"_index":3982,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/modules/tree/tree.functions.ts",{"_index":4491,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/tree/tree.module.ts",{"_index":4015,"title":{},"body":{"modules/TreeModule.html":{}}}],["src/app/modules/tree/tree.service.ts",{"_index":4018,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:108",{"_index":4025,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:25",{"_index":4031,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:29",{"_index":4029,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:33",{"_index":4032,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:38",{"_index":4035,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:43",{"_index":4036,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:48",{"_index":4022,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:51",{"_index":4034,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:52",{"_index":4037,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:53",{"_index":4028,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/vega.service.ts",{"_index":4324,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:118",{"_index":4335,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:141",{"_index":4341,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:30",{"_index":4330,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:33",{"_index":4350,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:34",{"_index":4347,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:35",{"_index":4348,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:43",{"_index":4345,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:69",{"_index":4338,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:86",{"_index":4332,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/pipes/order",{"_index":3250,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["src/app/services/analytics.module.ts",{"_index":201,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/analytics.module.ts:60",{"_index":208,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["src/app/services/consent.service.ts",{"_index":1470,"title":{},"body":{"injectables/ConsentService.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/services/consent.service.ts:10",{"_index":1475,"title":{},"body":{"injectables/ConsentService.html":{}}}],["src/app/services/consent.service.ts:20",{"_index":1477,"title":{},"body":{"injectables/ConsentService.html":{}}}],["src/app/services/consent.service.ts:27",{"_index":1478,"title":{},"body":{"injectables/ConsentService.html":{}}}],["src/app/services/consent.service.ts:8",{"_index":1479,"title":{},"body":{"injectables/ConsentService.html":{}}}],["src/app/services/docs.service.ts",{"_index":2085,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/docs.service.ts:13",{"_index":2098,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/docs.service.ts:18",{"_index":2089,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/docs.service.ts:21",{"_index":2091,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/docs.service.ts:28",{"_index":2093,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/docs.service.ts:32",{"_index":2095,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/google",{"_index":2502,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["src/app/services/local",{"_index":3030,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/mouse",{"_index":3128,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/services/sheet.service.ts",{"_index":3669,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:11",{"_index":3675,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:121",{"_index":3693,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:131",{"_index":3712,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:139",{"_index":3706,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:158",{"_index":3703,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:20",{"_index":3698,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:64",{"_index":3689,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:70",{"_index":3710,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:82",{"_index":3677,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/static/docs.ts",{"_index":4664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/static/home.ts",{"_index":4532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/static/url.ts",{"_index":4489,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/static/util.ts",{"_index":4505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/store/logs.state.ts",{"_index":3062,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["src/app/store/logs.state.ts:110",{"_index":3067,"title":{},"body":{"injectables/LogsState.html":{}}}],["src/app/store/logs.state.ts:53",{"_index":3070,"title":{},"body":{"injectables/LogsState.html":{}}}],["src/app/store/logs.state.ts:64",{"_index":3073,"title":{},"body":{"injectables/LogsState.html":{}}}],["src/app/store/sheet.state.ts",{"_index":4661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/store/tree.state.ts",{"_index":4104,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["src/app/store/ui.state.ts",{"_index":4156,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["src/environments/environment.prod.ts",{"_index":4644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.stage.ts",{"_index":4651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ss",{"_index":938,"title":{},"body":{"injectables/BimodalService.html":{},"components/HomeComponent.html":{}}}],["ss.foreach((s",{"_index":939,"title":{},"body":{"injectables/BimodalService.html":{}}}],["st_id",{"_index":37,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["staging",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":3254,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["start",{"_index":1321,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/UploadComponent.html":{}}}],["started",{"_index":4614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state",{"_index":949,"title":{},"body":{"injectables/BimodalService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["state.alllogs",{"_index":3079,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["state.bimodal",{"_index":4122,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.bimodal.config",{"_index":4115,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.bimodal.config.bm.type",{"_index":4113,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.bimodal.links",{"_index":955,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/TreeStateModel.html":{}}}],["state.bimodal.nodes",{"_index":953,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/TreeStateModel.html":{}}}],["state.bottomsheetdata",{"_index":4124,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.bottomsheetopen",{"_index":4188,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.compareopen",{"_index":4190,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.controlpaneopen",{"_index":4057,"title":{},"body":{"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["state.debuglogopen",{"_index":4186,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.discrepencyid",{"_index":4051,"title":{},"body":{"injectables/TreeService.html":{}}}],["state.discrepencylabel",{"_index":4049,"title":{},"body":{"injectables/TreeService.html":{}}}],["state.duplicateid",{"_index":4053,"title":{},"body":{"injectables/TreeService.html":{}}}],["state.error",{"_index":4178,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.height",{"_index":4042,"title":{},"body":{"injectables/TreeService.html":{}}}],["state.id",{"_index":3081,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["state.indentlistopen",{"_index":4180,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.lastsearch",{"_index":4130,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links",{"_index":4126,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.as_as",{"_index":4155,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.as_as_organwise",{"_index":4150,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.as_ct",{"_index":4151,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.as_ct_organwise",{"_index":4154,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.ct_b",{"_index":4152,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.ct_b_organwise",{"_index":4153,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.loading",{"_index":4173,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.loadingtext",{"_index":4175,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.omapconfig",{"_index":4132,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.reportopen",{"_index":4182,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.rightsidenavopen",{"_index":4184,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.search",{"_index":4046,"title":{},"body":{"injectables/TreeService.html":{}}}],["state.searchopen",{"_index":4192,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.sheetlogs",{"_index":3078,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["state.snackbar",{"_index":4171,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.spec",{"_index":956,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/TreeStateModel.html":{}}}],["state.treedata",{"_index":4118,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.view",{"_index":4120,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["statecontext",{"_index":3065,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["states.sheetstate.comparesheets",{"_index":1659,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["states.sheetstate.data",{"_index":1629,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["states.sheetstate.filteredprotiens",{"_index":1633,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["states.sheetstate.omapselectedorgans",{"_index":1597,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["states.sheetstate.selectedorgans",{"_index":1595,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["states.sheetstate.sheet",{"_index":1594,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["states.sheetstate.sheetconfig",{"_index":2456,"title":{},"body":{"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["states.treestate.bimodal.config",{"_index":1631,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["states.treestate.omapconfig",{"_index":1632,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["states.treestate.treedata",{"_index":1630,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["static",{"_index":203,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"classes/BimodalMarkGroup.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"classes/Legends.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["static/docs",{"_index":1965,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{}}}],["static/home",{"_index":2569,"title":{},"body":{"components/HomeComponent.html":{}}}],["static/url",{"_index":3720,"title":{},"body":{"injectables/SheetService.html":{}}}],["statistics",{"_index":1883,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"miscellaneous/variables.html":{}}}],["status",{"_index":960,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"injectables/TreeService.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["steelblue",{"_index":601,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["storage",{"_index":224,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":718,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["store/logs.state",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["store/sheet.state",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"components/ControlPaneComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{}}}],["store/tree.state",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/TreeService.html":{}}}],["store/ui.state",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"components/LoadingComponent.html":{},"injectables/TreeService.html":{}}}],["stored",{"_index":3036,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["stores",{"_index":1737,"title":{},"body":{"classes/Data.html":{},"interfaces/TreeStateModel.html":{}}}],["str",{"_index":4499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["str.id",{"_index":893,"title":{},"body":{"injectables/BimodalService.html":{}}}],["str.id.tolowercase",{"_index":894,"title":{},"body":{"injectables/BimodalService.html":{}}}],["str.name",{"_index":899,"title":{},"body":{"injectables/BimodalService.html":{}}}],["stratify",{"_index":1781,"title":{},"body":{"classes/Data.html":{}}}],["string",{"_index":20,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Legend.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":600,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["strokedash",{"_index":689,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["strokewidth",{"_index":621,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["structure",{"_index":18,"title":{"interfaces/Structure.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{}}}],["structure.color",{"_index":4084,"title":{},"body":{"injectables/TreeService.html":{}}}],["structure.id",{"_index":2849,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["structure.name",{"_index":2848,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["structure.notes",{"_index":4079,"title":{},"body":{"injectables/TreeService.html":{}}}],["structure.rdfs_label",{"_index":4080,"title":{},"body":{"injectables/TreeService.html":{}}}],["structures",{"_index":143,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":2274,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"interfaces/Legend.html":{},"injectables/LegendService.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["styles",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["styleurls",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["sub",{"_index":1302,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["subject",{"_index":1638,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/DocsService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{}}}],["subjects",{"_index":1645,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["submit",{"_index":3420,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{}}}],["submit(entry",{"_index":3949,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["submitdata",{"_index":4291,"title":{},"body":{"components/UploadComponent.html":{}}}],["subscribe((data",{"_index":2104,"title":{},"body":{"injectables/DocsService.html":{}}}],["subscription",{"_index":2508,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":2510,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["substructures",{"_index":4026,"title":{},"body":{"injectables/TreeService.html":{}}}],["subtitle",{"_index":2687,"title":{},"body":{"components/HomeComponent.html":{}}}],["success",{"_index":2151,"title":{},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Response.html":{},"interfaces/UIStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":986,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["suitable",{"_index":1249,"title":{},"body":{"components/CompareComponent.html":{}}}],["suite",{"_index":2386,"title":{},"body":{"components/FooterComponent.html":{}}}],["support",{"_index":4515,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1247,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["sure",{"_index":1226,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["svg",{"_index":1962,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"modules.html":{}}}],["svutuku@iu.edu",{"_index":4582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swatch",{"_index":1269,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["swimlane/ngx",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/ReportModule.html":{}}}],["switch",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/VisControlsComponent.html":{}}}],["switch.mdc",{"_index":4457,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["switch__icon",{"_index":4459,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["symbol",{"_index":660,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/Legends.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["symbol:click",{"_index":3871,"title":{},"body":{"classes/Signals.html":{}}}],["symbol:mouseover",{"_index":3872,"title":{},"body":{"classes/Signals.html":{}}}],["symbols",{"_index":552,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{}}}],["symbolsize",{"_index":2993,"title":{},"body":{"classes/Legends.html":{}}}],["sync.service",{"_index":222,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["sync.service.ts",{"_index":2503,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:10",{"_index":2505,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:14",{"_index":3031,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["system",{"_index":4561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":168,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Link.html":{},"pipes/OrderByPipe.html":{}}}],["tab",{"_index":3431,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{}}}],["tab.index",{"_index":3553,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tab.mdc",{"_index":3580,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tabchange",{"_index":3456,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tabchange(tab",{"_index":3469,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tabindex",{"_index":3291,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{}}}],["table",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["tablenestedmenucomponent",{"_index":403,"title":{"components/TableNestedMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["tablenestedmenumodule",{"_index":2772,"title":{"modules/TableNestedMenuModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/NavbarModule.html":{},"modules/RootModule.html":{},"modules/TableNestedMenuModule.html":{},"index.html":{},"modules.html":{}}}],["tables",{"_index":1993,"title":{},"body":{"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"miscellaneous/variables.html":{}}}],["tablets",{"_index":2723,"title":{},"body":{"components/HomeComponent.html":{}}}],["tableversion",{"_index":1358,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["tabs",{"_index":3472,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tabular",{"_index":3717,"title":{},"body":{"injectables/SheetService.html":{}}}],["tag",{"_index":4646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["take",{"_index":1468,"title":{},"body":{"injectables/ConfigService.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["takes",{"_index":3733,"title":{},"body":{"injectables/SheetService.html":{}}}],["target",{"_index":1392,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["target.x",{"_index":1801,"title":{},"body":{"classes/Data.html":{}}}],["target.y",{"_index":1803,"title":{},"body":{"classes/Data.html":{}}}],["targets",{"_index":149,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Link.html":{},"classes/Signals.html":{}}}],["targets.foreach((s",{"_index":930,"title":{},"body":{"injectables/BimodalService.html":{}}}],["targets.push(nodes[s].id",{"_index":928,"title":{},"body":{"injectables/BimodalService.html":{}}}],["targets__click",{"_index":3828,"title":{},"body":{"classes/Signals.html":{}}}],["targets_clicked_array",{"_index":1811,"title":{},"body":{"classes/Data.html":{}}}],["targets_hovered_array",{"_index":1806,"title":{},"body":{"classes/Data.html":{}}}],["targets_of_targets__click",{"_index":1815,"title":{},"body":{"classes/Data.html":{}}}],["targets_of_targets__hover",{"_index":1818,"title":{},"body":{"classes/Data.html":{}}}],["targetx",{"_index":1800,"title":{},"body":{"classes/Data.html":{}}}],["targety",{"_index":1802,"title":{},"body":{"classes/Data.html":{}}}],["tbody",{"_index":3575,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["td",{"_index":1499,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/PlaygroundComponent.html":{}}}],["td.children",{"_index":790,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.color",{"_index":809,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.isnew",{"_index":807,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.name",{"_index":792,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.notes",{"_index":798,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.ontologyid",{"_index":800,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.ontologyid.tolowercase",{"_index":811,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.organname",{"_index":799,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.pathcolor",{"_index":805,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.problem",{"_index":803,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.x",{"_index":795,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.y",{"_index":796,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td:nth",{"_index":3582,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["te",{"_index":4138,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["team",{"_index":2636,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["templateurl",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["termid",{"_index":3744,"title":{},"body":{"injectables/SheetService.html":{}}}],["terms",{"_index":2378,"title":{},"body":{"components/FooterComponent.html":{}}}],["test",{"_index":605,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["testcallback",{"_index":3674,"title":{},"body":{"injectables/SheetService.html":{}}}],["testcallback(data",{"_index":3708,"title":{},"body":{"injectables/SheetService.html":{}}}],["text",{"_index":556,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"injectables/SheetService.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["text.length",{"_index":4383,"title":{},"body":{"injectables/VegaService.html":{}}}],["textbox",{"_index":1308,"title":{},"body":{"components/CompareComponent.html":{}}}],["textlinkmark",{"_index":690,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["textmark",{"_index":585,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["textmark:click",{"_index":3864,"title":{},"body":{"classes/Signals.html":{}}}],["textmark:mouseover",{"_index":3868,"title":{},"body":{"classes/Signals.html":{}}}],["texts",{"_index":565,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["th",{"_index":3437,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["thank",{"_index":1640,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["thead",{"_index":3583,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["theme",{"_index":4363,"title":{},"body":{"injectables/VegaService.html":{}}}],["this.activatedroute.params.subscribe((params",{"_index":1969,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.addsignallisteners(treeview",{"_index":4366,"title":{},"body":{"injectables/VegaService.html":{}}}],["this.allomapsheetconfigurations$.pipe",{"_index":1455,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.allsheetconfigurations$.pipe",{"_index":1463,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.atleastonephonerequired",{"_index":1206,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.bimodalconfig",{"_index":2445,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["this.bimodaldata",{"_index":2922,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.bimodaldata.nodes",{"_index":2926,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.bimodaldata.nodes.length",{"_index":2924,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.bm.makebimodaldata",{"_index":4096,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.bm.makebimodaldata(data",{"_index":1576,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/VegaService.html":{}}}],["this.bms.makebimodaldata(data",{"_index":2457,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["this.changedetectorref.detectchanges",{"_index":2879,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.checklinkformat(sheet.link)?.csvurl",{"_index":1184,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.checklinkformat(sheet.link)?.gid",{"_index":1183,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.checklinkformat(sheet.link)?.sheetid",{"_index":1182,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.children",{"_index":2788,"title":{},"body":{"classes/ILNode.html":{}}}],["this.color",{"_index":71,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.comparator",{"_index":82,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.comparatorid",{"_index":83,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.comparatorname",{"_index":84,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.comparedata",{"_index":2927,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.comparedata.emit(data",{"_index":1194,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.comparesheets.subscribe((sheets",{"_index":1148,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.componentactive",{"_index":3384,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.config",{"_index":4426,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config$.subscribe((config",{"_index":2444,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["this.config.bimodal_distance_x",{"_index":4434,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.bimodal_distance_y",{"_index":4435,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.discrepencyid",{"_index":4432,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.discrepencylabel",{"_index":4431,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.duplicateid",{"_index":4433,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.height",{"_index":4429,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.show_all_as",{"_index":4436,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.show_ontology",{"_index":4430,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.width",{"_index":4428,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.configservice.config$.subscribe((config",{"_index":1966,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["this.configservice.omapsheetconfiguration$.subscribe((sheetoptions",{"_index":3338,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.configservice.sheetconfiguration$.subscribe((sheetoptions",{"_index":2572,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["this.consent",{"_index":1488,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.complete",{"_index":1487,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(this.consent",{"_index":1485,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(value",{"_index":1489,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentservice.consent",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["this.consentservice.setconsent(entry",{"_index":3963,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.container",{"_index":3960,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.controlpaneopen",{"_index":4056,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.count",{"_index":107,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.createcompareform",{"_index":1151,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.currentsheet",{"_index":3502,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.data",{"_index":1761,"title":{},"body":{"classes/Data.html":{},"components/DoiComponent.html":{},"components/LoadingComponent.html":{}}}],["this.data$.subscribe((data",{"_index":3503,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.data.isintilalselect",{"_index":3377,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.data.map((item",{"_index":2129,"title":{},"body":{"components/DoiComponent.html":{}}}],["this.data.preclose",{"_index":3962,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.data.subscribe((info",{"_index":2873,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.datasource",{"_index":3348,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.datasource.data",{"_index":2334,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.datasource.data.foreach((dataelement",{"_index":3357,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.dialogref.close",{"_index":3383,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.dismiss",{"_index":3964,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.docsdata",{"_index":1976,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.docsdata.next(data",{"_index":2105,"title":{},"body":{"injectables/DocsService.html":{}}}],["this.docsservice.docsdata.subscribe((data",{"_index":1975,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.docsservice.getdata(params['id",{"_index":1972,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.docsservice.getid(params['id",{"_index":1970,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.docsservice.gettitle(idx",{"_index":1977,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/compare.svg",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/debug.svg",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/indent.svg",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/playground.svg",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/report.svg",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/upload.svg",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["this.error",{"_index":2876,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.fb.array",{"_index":1145,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.fb.group",{"_index":1143,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.fileformdataevent.emit(formdata",{"_index":2257,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.filename",{"_index":2254,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.filteredproteins$.subscribe",{"_index":1568,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.fontsize",{"_index":154,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.formgroup",{"_index":1142,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.formgroup.controls['sheets",{"_index":1161,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formgroup.get('link')?.clearvalidators",{"_index":4305,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.formgroup.get('link')?.updatevalueandvalidity",{"_index":4306,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.formgroup.get('sheets",{"_index":1147,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formgroup.patchvalue",{"_index":4307,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.formgroup.status",{"_index":1177,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.formgroup.value",{"_index":4308,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.formgroup.value.sheets.entries",{"_index":1179,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formgroup.valuechanges.subscribe",{"_index":1159,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formgroup.valuechanges.subscribe((x",{"_index":4303,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.formsheets",{"_index":1146,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formsheets.push",{"_index":1150,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formsheets.push(sheet",{"_index":1213,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formsheets.push(this.createcompareform",{"_index":1158,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formsheets.removeat(i",{"_index":1214,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formvalid",{"_index":1176,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.ga.event",{"_index":2449,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["this.ga.event(gaaction.click",{"_index":1190,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["this.ga.event(gaaction.nav",{"_index":1984,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["this.ga.event(gaaction.slide",{"_index":4427,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.ga.event(gaaction.toggle",{"_index":4198,"title":{},"body":{"interfaces/UIStateModel.html":{},"components/VisControlsComponent.html":{}}}],["this.generatecolumns(data[0].length",{"_index":3550,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.getfromcache",{"_index":3350,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.getrandomcolor",{"_index":1202,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.group",{"_index":153,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["this.groupname",{"_index":73,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.height",{"_index":4041,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.http",{"_index":1445,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get('assets/sheet",{"_index":1451,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(`${url}/lookup/${ontologycode}/${termid}`).pipe",{"_index":3746,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(`${url}/v2/${sheetid}/${gid",{"_index":3728,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(`${url}/v2/${sheetid}/${gid}/graph",{"_index":3725,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(`${url}/v2/csv",{"_index":3721,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(`${url}/v2/playground",{"_index":3752,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(getassetsurl(dataversion",{"_index":3729,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(registry[index].path",{"_index":2102,"title":{},"body":{"injectables/DocsService.html":{}}}],["this.http.get>('assets/configuration.json').pipe(take(1",{"_index":1454,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.post(`${url}/v2/csv",{"_index":3724,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.post(`${url}/v2/playground",{"_index":3753,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.id",{"_index":67,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.indentdata.asobservable",{"_index":2834,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["this.indentdata.next",{"_index":2859,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["this.indentservice.indentdata$.subscribe((data",{"_index":2324,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.indentservice.makeindentdata(this.currentsheet",{"_index":2328,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.indenttree",{"_index":2331,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.indenttree.treecontrol.expandall",{"_index":2332,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.info",{"_index":2874,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.initializetree(data.data",{"_index":2326,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.inittable(data",{"_index":3506,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.isallselected",{"_index":3391,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.isnew",{"_index":76,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.label",{"_index":165,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.legenddata.asobservable",{"_index":2954,"title":{},"body":{"injectables/LegendService.html":{}}}],["this.legenddata.next(legends",{"_index":2982,"title":{},"body":{"injectables/LegendService.html":{}}}],["this.legends",{"_index":2920,"title":{},"body":{"components/LegendComponent.html":{},"classes/Legends.html":{}}}],["this.link",{"_index":104,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.loading",{"_index":2124,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["this.loadingtext$.subscribe((l",{"_index":3022,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.ls.legenddata$.pipe(delay(0)).subscribe((data",{"_index":2919,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.ls.makelegenddata(this.treedata",{"_index":2925,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.makeastreedata(currentsheet",{"_index":1762,"title":{},"body":{"classes/Data.html":{}}}],["this.makeastreeheightsignal(config.height",{"_index":3854,"title":{},"body":{"classes/Signals.html":{}}}],["this.makeastreelinksdata",{"_index":1763,"title":{},"body":{"classes/Data.html":{}}}],["this.makeastreewidthsignal(config.width",{"_index":3853,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodal(treeview",{"_index":4368,"title":{},"body":{"injectables/VegaService.html":{}}}],["this.makebimodaledgesdata",{"_index":1765,"title":{},"body":{"classes/Data.html":{}}}],["this.makebimodallegend",{"_index":2999,"title":{},"body":{"classes/Legends.html":{}}}],["this.makebimodalmarkgroup",{"_index":571,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Marks.html":{}}}],["this.makebimodalnodeclickstatesignal",{"_index":3844,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodalnodehoverstatesignal",{"_index":3845,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodalnodesdata",{"_index":1764,"title":{},"body":{"classes/Data.html":{}}}],["this.makebimodalnodesourceshoverstatesignal",{"_index":3846,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodalnodetargetshoverstatesignal",{"_index":3847,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodalpathmarks",{"_index":575,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["this.makebimodalsourcesclickstatesignal",{"_index":3849,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodalsymbolmarks",{"_index":576,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["this.makebimodaltargetsclickstatesignal",{"_index":3848,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodaltextclicksignal",{"_index":3851,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodaltextdiscrepencyidmarks",{"_index":581,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["this.makebimodaltextdiscrepencylabelmarks",{"_index":580,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["this.makebimodaltextduplicateidmarks",{"_index":582,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["this.makebimodaltexthoversignal",{"_index":3852,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodaltextsearchmarks",{"_index":578,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["this.makebimodalwithdiscrepencyid(prop.config",{"_index":1591,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.makebimodalwithdiscrepencylabel(prop.config",{"_index":1590,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.makebiomodalpathdoisignal",{"_index":3856,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebiomodalscale",{"_index":3655,"title":{},"body":{"classes/Scales.html":{}}}],["this.makebiomodaltextlinkmarks",{"_index":579,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["this.makebiomodaltextmarks",{"_index":577,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["this.makediscrepencyiddata",{"_index":1778,"title":{},"body":{"classes/Data.html":{}}}],["this.makediscrepencylabeldata",{"_index":1777,"title":{},"body":{"classes/Data.html":{}}}],["this.makediscrepencysignal",{"_index":3857,"title":{},"body":{"classes/Signals.html":{}}}],["this.makeduplicateid(prop.config",{"_index":1592,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.makeduplicateiddata",{"_index":1779,"title":{},"body":{"classes/Data.html":{}}}],["this.makemultiparentmarkgroup",{"_index":3123,"title":{},"body":{"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{}}}],["this.makemultiparentpathmarks",{"_index":3168,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["this.makenodeinfostring(node",{"_index":4376,"title":{},"body":{"injectables/VegaService.html":{}}}],["this.makesearchidsdata",{"_index":1776,"title":{},"body":{"classes/Data.html":{}}}],["this.makesearchsignal",{"_index":3850,"title":{},"body":{"classes/Signals.html":{}}}],["this.makeshowontologyidsignal(config.show_ontology",{"_index":3855,"title":{},"body":{"classes/Signals.html":{}}}],["this.makesourcesclickdata",{"_index":1766,"title":{},"body":{"classes/Data.html":{}}}],["this.makesourceshoverdata",{"_index":1767,"title":{},"body":{"classes/Data.html":{}}}],["this.makesourcesofsourcesclickdata",{"_index":1770,"title":{},"body":{"classes/Data.html":{}}}],["this.makesourcesofsourceshoverdata",{"_index":1771,"title":{},"body":{"classes/Data.html":{}}}],["this.maketargetsclickdata",{"_index":1768,"title":{},"body":{"classes/Data.html":{}}}],["this.maketargetshoverdata",{"_index":1769,"title":{},"body":{"classes/Data.html":{}}}],["this.maketargetsoftargetsclickdata",{"_index":1772,"title":{},"body":{"classes/Data.html":{}}}],["this.maketargetsoftargetshoverdata",{"_index":1773,"title":{},"body":{"classes/Data.html":{}}}],["this.maketreelegend",{"_index":3000,"title":{},"body":{"classes/Legends.html":{}}}],["this.maketreelegendscale",{"_index":3656,"title":{},"body":{"classes/Scales.html":{}}}],["this.maketreemarkgroup",{"_index":3124,"title":{},"body":{"classes/Marks.html":{},"classes/TreeMarkGroup.html":{}}}],["this.maketreepathmarks",{"_index":4004,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["this.maketreesymbolmarks",{"_index":4005,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["this.maketreetextlinkmarks",{"_index":4007,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["this.maketreetextmarks",{"_index":4006,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["this.makeviewmodeclickdata",{"_index":1774,"title":{},"body":{"classes/Data.html":{}}}],["this.makeviewmodehoverdata",{"_index":1775,"title":{},"body":{"classes/Data.html":{}}}],["this.markformgrouptouched(form",{"_index":1174,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.markformgrouptouched(this.formgroup",{"_index":1175,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.marks",{"_index":3122,"title":{},"body":{"classes/Marks.html":{}}}],["this.mastersheetlink",{"_index":1967,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["this.maticonregistry.addsvgicon",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["this.name",{"_index":68,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.nodes",{"_index":1566,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.nodesize",{"_index":157,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.notes",{"_index":85,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.omapdatasource",{"_index":3342,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapdatasource.data.foreach((dataelement",{"_index":3364,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapdatasource.data?.foreach((de",{"_index":3344,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omaporgans",{"_index":3355,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omaporgans.foreach((item",{"_index":3363,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omaps.organsonly",{"_index":3222,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["this.omaps.proteinsonly",{"_index":3224,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["this.omapselection",{"_index":3386,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapselection.isempty",{"_index":3336,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapselection.select(dataelement",{"_index":3365,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapselection.selected.foreach((element",{"_index":3381,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapselection.toggle(row",{"_index":3410,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapsheetoptions",{"_index":3339,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.onchange",{"_index":2264,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.onchange(this.filename",{"_index":2258,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.onclose.cache",{"_index":3352,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.ontologyid",{"_index":70,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.ontouched",{"_index":2262,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.onvalidatorchange",{"_index":2265,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.organname",{"_index":86,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.organs",{"_index":3353,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.organs.foreach((item",{"_index":3360,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.organs.push(item.symbol",{"_index":3370,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.parent",{"_index":69,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.parents",{"_index":79,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.pathcolor",{"_index":77,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.player.height",{"_index":2577,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.player.pausevideo",{"_index":2590,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.player.playvideo",{"_index":2592,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.player.seekto(seconds",{"_index":2591,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.player.width",{"_index":2586,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.prevtab",{"_index":3552,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.problem",{"_index":72,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.proteinpresence",{"_index":166,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.router.events.subscribe((event",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":1983,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.router.navigate(['/docs",{"_index":1973,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate(['/docs/faq",{"_index":2361,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.router.navigate(['/vis",{"_index":2597,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.saveconsent(consent",{"_index":3046,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.sc$.subscribe((config",{"_index":4058,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.scales",{"_index":3654,"title":{},"body":{"classes/Scales.html":{}}}],["this.selectbyhraversion(row",{"_index":3399,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selected",{"_index":1971,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.selection",{"_index":3385,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.clear",{"_index":3408,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.deselect(dataelement",{"_index":3407,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.isempty",{"_index":3337,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.isselected(row",{"_index":3395,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.select(dataelement",{"_index":3362,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.selected.map((item",{"_index":3367,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.toggle(row",{"_index":3409,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.setconsent('not",{"_index":1490,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.sheet$.subscribe((sheet",{"_index":3501,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.sheetconfig",{"_index":4059,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.sheetdata",{"_index":2329,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.sheetoptions",{"_index":2573,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["this.sheetref.dismiss",{"_index":2134,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["this.showallas",{"_index":1589,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.signals",{"_index":3843,"title":{},"body":{"classes/Signals.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sources",{"_index":160,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.spreadsheetdata",{"_index":3504,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.spreadsheetdata.filter((row",{"_index":3554,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.storage",{"_index":3041,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.getitem?.(this.key",{"_index":3049,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.setitem?.(this.key",{"_index":3053,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.store.dispatch",{"_index":1658,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.store.dispatch(new",{"_index":945,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["this.store.selectsnapshot(sheetstate.getdata",{"_index":1569,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.store.selectsnapshot(sheetstate.getfilteredprotiens",{"_index":1574,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.store.selectsnapshot(sheetstate.getsheetconfig",{"_index":1572,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{}}}],["this.store.selectsnapshot(treestate",{"_index":950,"title":{},"body":{"injectables/BimodalService.html":{}}}],["this.store.selectsnapshot(treestate.getbimodalconfig",{"_index":1571,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{}}}],["this.store.selectsnapshot(treestate.getomapconfig",{"_index":1573,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.store.selectsnapshot(treestate.gettreedata",{"_index":1570,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.store.selectsnapshot(treestate.getvegaview",{"_index":4227,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["this.structure",{"_index":103,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.subscriptions.add",{"_index":2515,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.subscriptions.add(consentservice.consentchange.subscribe((consent",{"_index":3045,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions.unsubscribe",{"_index":2518,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["this.tabindex",{"_index":3567,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.table",{"_index":3505,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.table.destroy",{"_index":3507,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.targets",{"_index":159,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.togglegoogleanalytics(consent",{"_index":2517,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.token",{"_index":2514,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.transformer",{"_index":2319,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.tree$.subscribe((state",{"_index":4040,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.tree$.subscribe((tree",{"_index":1563,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.treedata",{"_index":1564,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/LegendComponent.html":{}}}],["this.treedata.length",{"_index":2923,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.treeflattener",{"_index":2322,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.type",{"_index":80,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.uistate$.subscribe((state",{"_index":4055,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.updatebimodal",{"_index":2448,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["this.updatebimodal(prop.config",{"_index":1588,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.updatebimodaldata(view",{"_index":957,"title":{},"body":{"injectables/BimodalService.html":{}}}],["this.updateconfig.emit(this.omaps",{"_index":3226,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["this.updatedconfig.emit",{"_index":4425,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.updatespec(spec",{"_index":983,"title":{},"body":{"injectables/BimodalService.html":{}}}],["this.uploadform.emit(data",{"_index":4311,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.videocontainerresizeobserver",{"_index":2580,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.videocontainerresizeobserver.observe(this.videocontainer.nativeelement",{"_index":2587,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.videocontainerresizeobserver?.disconnect",{"_index":2588,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.videosectionselected",{"_index":2589,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.view",{"_index":1578,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.view$.subscribe((data",{"_index":1577,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.view.signal('show_ontology",{"_index":1586,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.visible",{"_index":2327,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.vs.makebimodal(this.view.signal('as_height",{"_index":1583,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.vs.makebimodal(this.view.signal('as_width",{"_index":1581,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.vs.makevegaconfig(currentsheet",{"_index":4091,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.vs.rendergraph(spec",{"_index":4095,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.window",{"_index":2520,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.window.open(`${this.sheeturl}${sheetid}/edit#gid=${gid",{"_index":3916,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["this.window[`ga",{"_index":2521,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.x",{"_index":155,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.y",{"_index":156,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["throttletime",{"_index":3132,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["through",{"_index":1217,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["throwerror",{"_index":3718,"title":{},"body":{"injectables/SheetService.html":{}}}],["throwerror('invalid",{"_index":3745,"title":{},"body":{"injectables/SheetService.html":{}}}],["timing",{"_index":2747,"title":{},"body":{"components/HomeComponent.html":{}}}],["tissue",{"_index":3314,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["tissuepreservationmethod",{"_index":1377,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["title",{"_index":1112,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"classes/Legends.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["title1",{"_index":2681,"title":{},"body":{"components/HomeComponent.html":{}}}],["title2",{"_index":2006,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["title3",{"_index":2685,"title":{},"body":{"components/HomeComponent.html":{}}}],["title4",{"_index":2686,"title":{},"body":{"components/HomeComponent.html":{}}}],["titlefontsize",{"_index":2990,"title":{},"body":{"classes/Legends.html":{}}}],["titlepadding",{"_index":2989,"title":{},"body":{"classes/Legends.html":{}}}],["tnode",{"_index":45,"title":{"classes/TNode.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"injectables/VegaService.html":{}}}],["tnode[]).filter((x",{"_index":4099,"title":{},"body":{"injectables/TreeService.html":{}}}],["toattributes",{"_index":242,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["toattributes(obj",{"_index":231,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":558,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"modules/ControlsModule.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"modules/SearchModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["togglebottomsheet",{"_index":1051,"title":{"classes/ToggleBottomSheet.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/UpdateLoadingText.html":{}}}],["togglecontrolpane",{"_index":1039,"title":{"classes/ToggleControlPane.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/ControlPaneComponent.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["toggledebuglogs",{"_index":1047,"title":{"classes/ToggleDebugLogs.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["togglegoogleanalytics(disabled",{"_index":2519,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["toggleindentlist",{"_index":1043,"title":{"classes/ToggleIndentList.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["togglepane",{"_index":1506,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["togglereport",{"_index":1046,"title":{"classes/ToggleReport.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["toggleshowallas",{"_index":1557,"title":{"classes/ToggleShowAllAS.html":{}},"body":{"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["toggleshowallas()).subscribe((states",{"_index":1593,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["token",{"_index":2509,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["tool",{"_index":2364,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["toolbar",{"_index":4616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tooltip",{"_index":624,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{}}}],["tooltipstring",{"_index":3768,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["top",{"_index":1306,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"classes/Legends.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["touched",{"_index":1211,"title":{},"body":{"components/CompareComponent.html":{}}}],["tr",{"_index":3581,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tr:nth",{"_index":3576,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["track",{"_index":3075,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/PlaygroundComponent.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/VisControlsComponent.html":{}}}],["tracker.module",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["tracker.module.ts",{"_index":3129,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["tracking",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["trackingcode",{"_index":2513,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["trackingpopupcomponent",{"_index":287,"title":{"components/TrackingPopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["trackingpopupmodule",{"_index":430,"title":{"modules/TrackingPopupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TrackingPopupModule.html":{},"index.html":{},"modules.html":{}}}],["trackmouseposition",{"_index":4485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trackmouseposition((document",{"_index":3159,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["trackmouseposition(el",{"_index":3133,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["transform",{"_index":1780,"title":{},"body":{"classes/Data.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"pipes/OrderByPipe.html":{}}}],["transform(array",{"_index":3255,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["transformer",{"_index":2316,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["transition",{"_index":1664,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["translate",{"_index":3704,"title":{},"body":{"injectables/SheetService.html":{}}}],["transparent",{"_index":2816,"title":{},"body":{"components/IndentedListComponent.html":{},"components/VisControlsComponent.html":{}}}],["tree",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"classes/Marks.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["tree'},{'name",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["tree.bimodal.nodes",{"_index":1567,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["tree.component",{"_index":4016,"title":{},"body":{"modules/TreeModule.html":{}}}],["tree.component.html",{"_index":3979,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree.component.scss",{"_index":3978,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree.functions",{"_index":770,"title":{},"body":{"injectables/BimodalService.html":{}}}],["tree.model",{"_index":139,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/DD.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Link.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["tree.state",{"_index":4167,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["tree.treedata",{"_index":1565,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["tree/bimodal.service",{"_index":1561,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["tree/tree.module",{"_index":3594,"title":{},"body":{"modules/PlaygroundModule.html":{},"modules/RootModule.html":{}}}],["tree/vega.service",{"_index":1562,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["treecomponent",{"_index":408,"title":{"components/TreeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"modules/TreeModule.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["treecontrol",{"_index":2314,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["treecontrol.isexpanded(node",{"_index":2809,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["treedata",{"_index":722,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/TreeStateModel.html":{},"injectables/VegaService.html":{}}}],["treedata.foreach((td",{"_index":789,"title":{},"body":{"injectables/BimodalService.html":{}}}],["treedata.length",{"_index":788,"title":{},"body":{"injectables/BimodalService.html":{}}}],["treeelementref",{"_index":3980,"title":{},"body":{"components/TreeComponent.html":{}}}],["treeflattener",{"_index":2318,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["treelegend",{"_index":3003,"title":{},"body":{"classes/Legends.html":{},"classes/Scales.html":{}}}],["treelinks",{"_index":1789,"title":{},"body":{"classes/Data.html":{}}}],["treemarkgroup",{"_index":3119,"title":{"classes/TreeMarkGroup.html":{}},"body":{"classes/Marks.html":{},"classes/TreeMarkGroup.html":{}}}],["treemarkgroup().group",{"_index":4002,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["treemarkgroup.create",{"_index":3125,"title":{},"body":{"classes/Marks.html":{}}}],["treemodule",{"_index":3590,"title":{"modules/TreeModule.html":{}},"body":{"modules/PlaygroundModule.html":{},"modules/RootModule.html":{},"modules/TreeModule.html":{},"index.html":{},"modules.html":{}}}],["treeservice",{"_index":4017,"title":{"injectables/TreeService.html":{}},"body":{"injectables/TreeService.html":{}}}],["treestate",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["treestate.getvegaview(state",{"_index":951,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["treestatemodel",{"_index":1560,"title":{"interfaces/TreeStateModel.html":{}},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{}}}],["treeview",{"_index":4360,"title":{},"body":{"injectables/VegaService.html":{}}}],["treeview.data('links').length",{"_index":4367,"title":{},"body":{"injectables/VegaService.html":{}}}],["treeview.runasync",{"_index":4365,"title":{},"body":{"injectables/VegaService.html":{}}}],["treex",{"_index":779,"title":{},"body":{"injectables/BimodalService.html":{}}}],["treey",{"_index":780,"title":{},"body":{"injectables/BimodalService.html":{}}}],["triangle",{"_index":666,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["trigger",{"_index":2472,"title":{},"body":{"components/FunctionsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"classes/Signals.html":{}}}],["triggered",{"_index":3831,"title":{},"body":{"classes/Signals.html":{}}}],["trimming",{"_index":2125,"title":{},"body":{"components/DoiComponent.html":{}}}],["true",{"_index":245,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"interfaces/Node.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":774,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/IndentedListService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["tt",{"_index":919,"title":{},"body":{"injectables/BimodalService.html":{}}}],["tt.foreach((s",{"_index":927,"title":{},"body":{"injectables/BimodalService.html":{}}}],["turned",{"_index":559,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["tutorial",{"_index":2656,"title":{},"body":{"components/HomeComponent.html":{}}}],["type",{"_index":21,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4517,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":3154,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["typedata",{"_index":4493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["typeof",{"_index":163,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"injectables/LocalStorageSyncService.html":{}}}],["types",{"_index":144,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":970,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["typestructure",{"_index":4520,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typing",{"_index":4619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["u0000",{"_index":3557,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["uberon",{"_index":19,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"classes/TNode.html":{}}}],["uberon:0013702",{"_index":3754,"title":{},"body":{"injectables/SheetService.html":{}}}],["uberon_col",{"_index":93,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["uberon_id",{"_index":1380,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ui",{"_index":2482,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["uid",{"_index":65,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["uistate",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"components/LoadingComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["uistatemodel",{"_index":3020,"title":{"interfaces/UIStateModel.html":{}},"body":{"components/LoadingComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["ul",{"_index":2398,"title":{},"body":{"components/FooterComponent.html":{}}}],["undefined",{"_index":247,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"injectables/LogsState.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"components/VisControlsComponent.html":{}}}],["under",{"_index":3035,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["underline",{"_index":2038,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{}}}],["understand",{"_index":3967,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["university",{"_index":2371,"title":{},"body":{"components/FooterComponent.html":{}}}],["unknown",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/FlatNode.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/IndentedListComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["unselected",{"_index":4467,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["unselected:enabled",{"_index":4460,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["unset",{"_index":2933,"title":{},"body":{"components/LegendComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["unsetconsent",{"_index":1474,"title":{},"body":{"injectables/ConsentService.html":{}}}],["untypedformarray",{"_index":1128,"title":{},"body":{"components/CompareComponent.html":{}}}],["untypedformbuilder",{"_index":1092,"title":{},"body":{"components/CompareComponent.html":{}}}],["untypedformcontrol",{"_index":3480,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["untypedformgroup",{"_index":1102,"title":{},"body":{"components/CompareComponent.html":{}}}],["up",{"_index":2725,"title":{},"body":{"components/HomeComponent.html":{}}}],["update",{"_index":603,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"classes/Legends.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/Signals.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatebimodal",{"_index":751,"title":{"classes/UpdateBimodal.html":{}},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FunctionsComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatebimodal(config",{"_index":1521,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updatebimodal(nodes",{"_index":947,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatebimodalconfig",{"_index":1909,"title":{"classes/UpdateBimodalConfig.html":{}},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FunctionsComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatebimodalconfig(this.bimodalconfig)).subscribe((states",{"_index":2455,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["updatebimodaldata",{"_index":715,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatebimodaldata(view",{"_index":741,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatebottomsheetdata",{"_index":1913,"title":{"classes/UpdateBottomSheetData.html":{}},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatebottomsheetdata(data)).subscribe((_unused",{"_index":4219,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["updatebottomsheetdoi",{"_index":1894,"title":{"classes/UpdateBottomSheetDOI.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updatebottomsheetdoi(data",{"_index":4223,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["updatebottomsheetinfo",{"_index":1893,"title":{"classes/UpdateBottomSheetInfo.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updatebottomsheetinfo(data",{"_index":4220,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["updateconfig",{"_index":1558,"title":{"classes/UpdateConfig.html":{}},"body":{"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/OmapControlsComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updateconfig(config",{"_index":1599,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updateconfig(config)).subscribe((states",{"_index":1628,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updateconfiginsheet",{"_index":1507,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updateconfiginsheet(prop",{"_index":1523,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updated",{"_index":3714,"title":{},"body":{"injectables/SheetService.html":{},"classes/Signals.html":{}}}],["updatedconfig",{"_index":4407,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["updatedlinks",{"_index":954,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatednodes",{"_index":952,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updategetfromcache",{"_index":1895,"title":{"classes/UpdateGetFromCache.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updategraphwidth",{"_index":1907,"title":{"classes/UpdateGraphWidth.html":{}},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatelinksdata",{"_index":752,"title":{"classes/UpdateLinksData.html":{}},"body":{"injectables/BimodalService.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["updatelinksdata(0",{"_index":4094,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["updatelinksdata(as_ct_links",{"_index":946,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updateloadingtext",{"_index":1037,"title":{"classes/UpdateLoadingText.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["updatemode",{"_index":1884,"title":{"classes/UpdateMode.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updateomapconfig",{"_index":1508,"title":{"classes/UpdateOmapConfig.html":{}},"body":{"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updateomapconfig(event",{"_index":1526,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updateomapconfig(event)).subscribe((states",{"_index":1657,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updateplaygrounddata",{"_index":1891,"title":{"classes/UpdatePlaygroundData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updateplaygrounddata(data",{"_index":3711,"title":{},"body":{"injectables/SheetService.html":{}}}],["updateplaygrounddata(this.spreadsheetdata",{"_index":3558,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["updateprevsheet",{"_index":1886,"title":{"classes/UpdatePrevSheet.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updatereport",{"_index":1882,"title":{"classes/UpdateReport.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updates",{"_index":3815,"title":{},"body":{"classes/Signals.html":{},"interfaces/TreeStateModel.html":{}}}],["updateselectedorgansbeforefilter",{"_index":1898,"title":{"classes/UpdateSelectedOrgansBeforeFilter.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updatesheet",{"_index":1888,"title":{"classes/UpdateSheet.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updatespec",{"_index":716,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatespec(spec",{"_index":746,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatevegaspec",{"_index":753,"title":{"classes/UpdateVegaSpec.html":{}},"body":{"injectables/BimodalService.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatevegaspec(spec",{"_index":994,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["updatevegaview",{"_index":1908,"title":{"classes/UpdateVegaView.html":{}},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["updatevegaview(view)).subscribe((states",{"_index":4385,"title":{},"body":{"injectables/VegaService.html":{}}}],["updtes",{"_index":3834,"title":{},"body":{"classes/Signals.html":{}}}],["upload",{"_index":1084,"title":{},"body":{"components/CompareComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["upload'},{'name",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["upload(data",{"_index":3473,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["upload(fileformdataevent",{"_index":1122,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["upload.component",{"_index":2282,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/UploadModule.html":{}}}],["upload.component.html",{"_index":2217,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UploadComponent.html":{}}}],["upload.component.scss",{"_index":2216,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UploadComponent.html":{}}}],["upload.component.ts",{"_index":2210,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:29",{"_index":2247,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:31",{"_index":2228,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:33",{"_index":2234,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:45",{"_index":2248,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:47",{"_index":2249,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:51",{"_index":2250,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:55",{"_index":2251,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:59",{"_index":2231,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:64",{"_index":2246,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:68",{"_index":2236,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:72",{"_index":2238,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:76",{"_index":2240,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:80",{"_index":2242,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.module",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/PlaygroundModule.html":{},"modules/UploadModule.html":{}}}],["upload.module.ts",{"_index":2279,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["upload/file",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"modules/CompareModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"modules/PlaygroundModule.html":{},"modules/UploadModule.html":{}}}],["upload_file",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/FileUploadComponent.html":{}}}],["uploadcomponent",{"_index":410,"title":{"components/UploadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["uploadform",{"_index":1408,"title":{"interfaces/UploadForm.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["uploadmodule",{"_index":3591,"title":{"modules/UploadModule.html":{}},"body":{"modules/PlaygroundModule.html":{},"modules/UploadModule.html":{},"index.html":{},"modules.html":{}}}],["upon",{"_index":3832,"title":{},"body":{"classes/Signals.html":{}}}],["url",{"_index":1106,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/ErrorComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/variables.html":{}}}],["url(../../../assets/legends/crosssymbol.svg",{"_index":2936,"title":{},"body":{"components/LegendComponent.html":{}}}],["url(../../../assets/legends/diamondsymbol.svg",{"_index":2930,"title":{},"body":{"components/LegendComponent.html":{}}}],["url(../../../assets/legends/squaresymbol.svg",{"_index":2934,"title":{},"body":{"components/LegendComponent.html":{}}}],["url(../../../assets/legends/trianglesymbol.svg",{"_index":2935,"title":{},"body":{"components/LegendComponent.html":{}}}],["url.split",{"_index":1197,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["url.startswith('https://docs.google.com/spreadsheets/d",{"_index":1195,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["urls",{"_index":2167,"title":{},"body":{"components/ErrorComponent.html":{}}}],["urltitle",{"_index":4665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":3965,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["use",{"_index":2164,"title":{},"body":{"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":730,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Data.html":{},"components/HomeComponent.html":{},"classes/Scales.html":{}}}],["useexisting",{"_index":2214,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"index.html":{}}}],["usefactory",{"_index":246,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{}}}],["uses",{"_index":3650,"title":{},"body":{"classes/Scales.html":{},"injectables/VegaService.html":{}}}],["using",{"_index":3699,"title":{},"body":{"injectables/SheetService.html":{}}}],["usp=sharing",{"_index":2169,"title":{},"body":{"components/ErrorComponent.html":{}}}],["v.hraversion?.includes(selectedversion",{"_index":3405,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["v.value",{"_index":3347,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["v2.8",{"_index":2603,"title":{},"body":{"components/HomeComponent.html":{}}}],["va.desc",{"_index":2630,"title":{},"body":{"components/HomeComponent.html":{}}}],["va.header",{"_index":2629,"title":{},"body":{"components/HomeComponent.html":{}}}],["val",{"_index":922,"title":{},"body":{"injectables/BimodalService.html":{}}}],["val.name",{"_index":925,"title":{},"body":{"injectables/BimodalService.html":{}}}],["val.ontologyid",{"_index":924,"title":{},"body":{"injectables/BimodalService.html":{}}}],["valid",{"_index":1178,"title":{},"body":{"components/CompareComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{}}}],["validate",{"_index":2226,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["validate(_control",{"_index":2241,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["validatewidth",{"_index":4487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatewidth(width",{"_index":4506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":3459,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["validationerrors",{"_index":2244,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["validator",{"_index":2212,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["validatorfn",{"_index":3483,"title":{},"body":{"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["validators",{"_index":1135,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["validators.compose",{"_index":3481,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["validators.compose([validators.pattern(/\\/([\\w",{"_index":4302,"title":{},"body":{"components/UploadComponent.html":{}}}],["validators.compose([validators.required",{"_index":1203,"title":{},"body":{"components/CompareComponent.html":{}}}],["validators.pattern(/\\/([\\w",{"_index":1204,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{}}}],["validators.required",{"_index":3482,"title":{},"body":{"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["value",{"_index":235,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"classes/BMNode.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":241,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"classes/Data.html":{}}}],["valuesdata",{"_index":748,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["valuesdata).values",{"_index":4098,"title":{},"body":{"injectables/TreeService.html":{}}}],["var",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["variable",{"_index":4225,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["variables",{"_index":4521,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":2489,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"injectables/VegaService.html":{},"miscellaneous/variables.html":{}}}],["vega",{"_index":568,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/Legends.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["vega.service",{"_index":4039,"title":{},"body":{"injectables/TreeService.html":{}}}],["vegadatainterface",{"_index":1721,"title":{},"body":{"classes/Data.html":{}}}],["vegaservice",{"_index":1509,"title":{"injectables/VegaService.html":{}},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["vegatooltip",{"_index":4352,"title":{},"body":{"injectables/VegaService.html":{}}}],["vegatooltip(treeview",{"_index":4362,"title":{},"body":{"injectables/VegaService.html":{}}}],["version",{"_index":1020,"title":{"interfaces/Version.html":{}},"body":{"classes/ClearSheetLogs.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["version.value",{"_index":3406,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["version.viewvalue",{"_index":3918,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["version.viewvalue.includes('draft",{"_index":1459,"title":{},"body":{"injectables/ConfigService.html":{}}}],["version1url",{"_index":1387,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["versiondetail",{"_index":1370,"title":{"interfaces/VersionDetail.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["vertical",{"_index":2737,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/VisControlsComponent.html":{}}}],["video",{"_index":2595,"title":{},"body":{"components/HomeComponent.html":{}}}],["video_actions",{"_index":2532,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["video_actions[id].header",{"_index":2596,"title":{},"body":{"components/HomeComponent.html":{}}}],["videocontainer",{"_index":2533,"title":{},"body":{"components/HomeComponent.html":{}}}],["videocontainerresizeobserver",{"_index":2570,"title":{},"body":{"components/HomeComponent.html":{}}}],["videosectionselected",{"_index":2534,"title":{},"body":{"components/HomeComponent.html":{}}}],["view",{"_index":742,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{},"miscellaneous/variables.html":{}}}],["view(runtime).renderer('svg').initialize('#vis').hover",{"_index":4361,"title":{},"body":{"injectables/VegaService.html":{}}}],["view._viewwidth",{"_index":4137,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["view.addsignallistener('bimodal_text__click",{"_index":4372,"title":{},"body":{"injectables/VegaService.html":{}}}],["view.addsignallistener('node__click",{"_index":4378,"title":{},"body":{"injectables/VegaService.html":{}}}],["view.addsignallistener('path__click",{"_index":4382,"title":{},"body":{"injectables/VegaService.html":{}}}],["view.data('discrepencyid",{"_index":4052,"title":{},"body":{"injectables/TreeService.html":{}}}],["view.data('discrepencylabel",{"_index":4050,"title":{},"body":{"injectables/TreeService.html":{}}}],["view.data('duplicateid",{"_index":4054,"title":{},"body":{"injectables/TreeService.html":{}}}],["view.data('nodes",{"_index":980,"title":{},"body":{"injectables/BimodalService.html":{}}}],["view.data('search",{"_index":4047,"title":{},"body":{"injectables/TreeService.html":{}}}],["view.data('tree",{"_index":4136,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["view.runasync",{"_index":4048,"title":{},"body":{"injectables/TreeService.html":{}}}],["view.signal('bimodal_text__click",{"_index":4229,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["view_mode__click",{"_index":1820,"title":{},"body":{"classes/Data.html":{}}}],["view_mode__hover",{"_index":1823,"title":{},"body":{"classes/Data.html":{}}}],["viewchild",{"_index":2292,"title":{},"body":{"interfaces/FlatNode.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"components/PlaygroundComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TreeComponent.html":{}}}],["viewchild('childmenu",{"_index":3911,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["viewchild('graph",{"_index":3981,"title":{},"body":{"components/TreeComponent.html":{}}}],["viewchild('indenttree",{"_index":2309,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["viewchild('spreadsheet",{"_index":3489,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["viewchild('tutorialvideo",{"_index":2559,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild('tutorialvideocontainer",{"_index":2564,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewer",{"_index":1232,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["viewvalue",{"_index":1371,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["vis",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"modules/ControlsModule.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["vis/:sheet/:version/:playground",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["viscontrolscomponent",{"_index":411,"title":{"components/VisControlsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"modules/ControlsModule.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["visibility",{"_index":3574,"title":{},"body":{"components/PlaygroundComponent.html":{},"components/VisControlsComponent.html":{}}}],["visible",{"_index":2306,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"components/PlaygroundComponent.html":{},"classes/Signals.html":{}}}],["visualization",{"_index":745,"title":{},"body":{"injectables/BimodalService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"classes/Signals.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"injectables/VegaService.html":{},"miscellaneous/variables.html":{}}}],["vogelsang",{"_index":4588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["vs",{"_index":1500,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{}}}],["vutukuri",{"_index":4580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["w",{"_index":4557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":2138,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{}}}],["want",{"_index":2626,"title":{},"body":{"components/HomeComponent.html":{}}}],["wanting",{"_index":1641,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["warning",{"_index":2152,"title":{},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Response.html":{},"miscellaneous/enumerations.html":{}}}],["warnings",{"_index":4627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webkit",{"_index":1264,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["website",{"_index":2616,"title":{},"body":{"components/HomeComponent.html":{}}}],["weight",{"_index":1289,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{}}}],["welcome",{"_index":1999,"title":{},"body":{"components/DocsComponent.html":{}}}],["well",{"_index":2637,"title":{},"body":{"components/HomeComponent.html":{}}}],["white",{"_index":2003,"title":{},"body":{"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{}}}],["whole",{"_index":1755,"title":{},"body":{"classes/Data.html":{}}}],["width",{"_index":740,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"components/TrackingPopupComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["window",{"_index":1933,"title":{},"body":{"components/DocsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TableNestedMenuComponent.html":{}}}],["window.location.href",{"_index":1656,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["window.open",{"_index":1994,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["window.open('https://github.com/hubmapconsortium/ccf",{"_index":1988,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["window.open(this.mastersheetlink",{"_index":1992,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["wit",{"_index":1648,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["woodlawn",{"_index":2382,"title":{},"body":{"components/FooterComponent.html":{}}}],["word",{"_index":2672,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["word.tolowercase",{"_index":776,"title":{},"body":{"injectables/BimodalService.html":{}}}],["working",{"_index":2643,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrap",{"_index":3428,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["wrapper",{"_index":1270,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{}}}],["writevalue",{"_index":2227,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["writevalue(value",{"_index":2245,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["wyfw84s56b",{"_index":4648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":59,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["x.filename",{"_index":4304,"title":{},"body":{"components/UploadComponent.html":{}}}],["x2",{"_index":593,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["xlsx",{"_index":1373,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["y",{"_index":60,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/LegendComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["y2",{"_index":596,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["yes",{"_index":738,"title":{},"body":{"injectables/BimodalService.html":{},"classes/CloseLoading.html":{},"components/CompareComponent.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchSelectedOrganData.html":{},"components/OrganTableSelectorComponent.html":{},"classes/ReportLog.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"classes/UpdateLinksData.html":{},"injectables/VegaService.html":{},"miscellaneous/functions.html":{}}}],["youtubeplayer",{"_index":2558,"title":{},"body":{"components/HomeComponent.html":{}}}],["youtubeplayermodule",{"_index":2776,"title":{},"body":{"modules/HomeModule.html":{}}}],["you’d",{"_index":2625,"title":{},"body":{"components/HomeComponent.html":{}}}],["z",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["zindex",{"_index":602,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["zoom",{"_index":198,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AS.html":{"url":"interfaces/AS.html","title":"interface - AS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Base\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            indegree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isNew\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outdegree\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                                \n                                        \n                                            uberon\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        indegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNew:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outdegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outdegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uberon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uberon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ASCTBConfig.html":{"url":"interfaces/ASCTBConfig.html","title":"interface - ASCTBConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ASCTBConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cell_col\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            marker_col\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            report_cols\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uberon_col\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cell_col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cell_col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        marker_col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        marker_col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        report_cols\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        report_cols:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uberon_col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uberon_col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ASCTD.html":{"url":"interfaces/ASCTD.html","title":"interface - ASCTD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ASCTD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compareDD\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compareDD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compareDD:         DD[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DD[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:         Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Link[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:         BMNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BMNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchIds:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsentService\n                        \n                        \n                            GoogleAnalyticsSyncService\n                        \n                        \n                            LocalStorageSyncService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: AnalyticsOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/analytics.module.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AnalyticsOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\nconst EAGERLY_LOADED_SERVICES = [ConsentService, GoogleAnalyticsSyncService, LocalStorageSyncService];\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [\n        toAttributes({\n          appName,\n          projectName,\n          developmentMode,\n        }),\n      ],\n    },\n  ];\n}\n\n@NgModule({\n  imports: [NgxGoogleAnalyticsModule],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES,\n    },\n  ],\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(options.gaToken, initCommands(options));\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyticsOptions.html":{"url":"interfaces/AnalyticsOptions.html","title":"interface - AnalyticsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyticsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/analytics.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            appName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            developmentMode\n                                        \n                                \n                                \n                                        \n                                            gaToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        developmentMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        developmentMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gaToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gaToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\nconst EAGERLY_LOADED_SERVICES = [ConsentService, GoogleAnalyticsSyncService, LocalStorageSyncService];\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [\n        toAttributes({\n          appName,\n          projectName,\n          developmentMode,\n        }),\n      ],\n    },\n  ];\n}\n\n@NgModule({\n  imports: [NgxGoogleAnalyticsModule],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES,\n    },\n  ],\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(options.gaToken, initCommands(options));\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reporter\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, snackbar: MatSnackBar, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                        MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { environment } from '../environments/environment';\nimport { TrackingPopupComponent } from './components/tracking-popup/tracking-popup.component';\nimport { ConsentService } from './services/consent.service';\n\ndeclare let gtag: (arg1?: unknown, arg2?: unknown, arg3?: unknown) => void;\n\n@Component({\n  selector: 'app-reporter',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    readonly consentService: ConsentService,\n    readonly snackbar: MatSnackBar,\n    private readonly matIconRegistry: MatIconRegistry,\n    private readonly domSanitizer: DomSanitizer,\n    public readonly router: Router,\n  ) {\n    switch (environment.tag) {\n      case 'Staging':\n        document.title = 'ASCT+B Reporter | Staging';\n        break;\n      case 'Development':\n        document.title = 'ASCT+B Reporter | Development';\n        break;\n      default:\n        document.title = 'ASCT+B Reporter';\n    }\n\n    this.matIconRegistry.addSvgIcon(\n      'debug',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/debug.svg'),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'report',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/report.svg'),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'indentedList',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/indent.svg'),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'compare',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/compare.svg'),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'playground',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/playground.svg'),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'upload_file',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/upload.svg'),\n    );\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        gtag('config', environment.googleAnalyticsId, {\n          page_path: event.urlAfterRedirects,\n        });\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        },\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000,\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .over {\n  z-index: 1000;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAppModule -->\n\nAnalyticsModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDocsModule\n\nDocsModule\n\nAppModule -->\n\nDocsModule->AppModule\n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nAppModule -->\n\nFileUploadModule->AppModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nAppModule -->\n\nFooterModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nMousePositionTrackerModule\n\nMousePositionTrackerModule\n\nAppModule -->\n\nMousePositionTrackerModule->AppModule\n\n\n\n\n\nOrganTableSelectorModule\n\nOrganTableSelectorModule\n\nAppModule -->\n\nOrganTableSelectorModule->AppModule\n\n\n\n\n\nRootModule\n\nRootModule\n\nAppModule -->\n\nRootModule->AppModule\n\n\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nAppModule -->\n\nTrackingPopupModule->AppModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nAppModule -->\n\nConfigService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnalyticsModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            DocsModule\n                        \n                        \n                            FileUploadModule\n                        \n                        \n                            FooterModule\n                        \n                        \n                            HomeModule\n                        \n                        \n                            MousePositionTrackerModule\n                        \n                        \n                            OrganTableSelectorModule\n                        \n                        \n                            RootModule\n                        \n                        \n                            TrackingPopupModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { NgxsResetPluginModule } from 'ngxs-reset-plugin';\n\nimport { environment } from '../environments/environment';\nimport { ConfigService } from './app-config.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FileUploadModule } from './components/file-upload/file-upload.module';\nimport { FooterModule } from './components/footer/footer.module';\nimport { HomeModule } from './components/home/home.module';\nimport { OrganTableSelectorModule } from './components/organ-table-selector/organ-table-selector.module';\nimport { TrackingPopupModule } from './components/tracking-popup/tracking-popup.module';\nimport { DocsModule } from './modules/docs/docs.module';\nimport { RootModule } from './modules/root/root.module';\nimport { AnalyticsModule } from './services/analytics.module';\nimport { MousePositionTrackerModule } from './services/mouse-position-tracker.module';\nimport { LogsState } from './store/logs.state';\nimport { SheetState } from './store/sheet.state';\nimport { TreeState } from './store/tree.state';\nimport { UIState } from './store/ui.state';\n\nexport function initializeApp(configService: ConfigService): () => Promise {\n  return () =>\n    Promise.all([configService.sheetConfiguration$.toPromise(), configService.config$.toPromise()]).then(\n      () => undefined,\n    );\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxsModule.forRoot([SheetState, TreeState, UIState, LogsState]),\n    NgxsResetPluginModule.forRoot(),\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production,\n    }),\n    MarkdownModule.forRoot(),\n    DocsModule,\n    RootModule,\n    HomeModule,\n    FileUploadModule,\n    OrganTableSelectorModule,\n    FooterModule,\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsId,\n      appName: 'reporter',\n    }),\n    TrackingPopupModule,\n    MousePositionTrackerModule,\n  ],\n  providers: [\n    ConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      deps: [ConfigService],\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RootComponent } from './modules/root/root.component';\nimport { DocsComponent } from './modules/docs/docs.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'vis',\n    component: RootComponent,\n  },\n  {\n    path: 'playground',\n    component: RootComponent,\n  },\n  {\n    path: 'vis/:sheet/:version/:playground',\n    component: RootComponent,\n  },\n  {\n    path: 'docs',\n    component: DocsComponent,\n  },\n  {\n    path: 'docs/:id',\n    component: DocsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/B.html":{"url":"interfaces/B.html","title":"interface - B","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  B\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Base\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bType\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            indegree\n                                        \n                                \n                                \n                                        \n                                            isNew\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nodeSize\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outdegree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            proteinPresence\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        indegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNew:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outdegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outdegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proteinPresence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proteinPresence:         PROTEIN_PRESENCE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PROTEIN_PRESENCE\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BMNode.html":{"url":"classes/BMNode.html","title":"class - BMNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BMNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bType\n                            \n                            \n                                color\n                            \n                            \n                                    Optional\n                                degree\n                            \n                            \n                                fontSize\n                            \n                            \n                                group\n                            \n                            \n                                groupName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                indegree\n                            \n                            \n                                isNew\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                name\n                            \n                            \n                                nodeSize\n                            \n                            \n                                notes\n                            \n                            \n                                ontologyId\n                            \n                            \n                                organName\n                            \n                            \n                                    Optional\n                                outdegree\n                            \n                            \n                                pathColor\n                            \n                            \n                                problem\n                            \n                            \n                                proteinPresence\n                            \n                            \n                                    Optional\n                                references\n                            \n                            \n                                sources\n                            \n                            \n                                targets\n                            \n                            \n                                type\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, group: number, x: number, y: number, fontSize: number, notes: string, organName: string, ontologyId: string, color: string, nodeSize: number, proteinPresence)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/bimodal.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        group\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fontSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notes\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        organName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ontologyId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodeSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        proteinPresence\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        degree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fontSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        indegree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ontologyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        outdegree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pathColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        problem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        proteinPresence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PROTEIN_PRESENCE\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reference[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Base.html":{"url":"interfaces/Base.html","title":"interface - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            comparator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comparatorId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comparatorName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comparatorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comparatorId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comparatorName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comparatorName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BimodalConfig.html":{"url":"interfaces/BimodalConfig.html","title":"interface - BimodalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BimodalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            BM\n                                        \n                                \n                                \n                                        \n                                            CT\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        BM\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BM:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CT:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BimodalData.html":{"url":"interfaces/BimodalData.html","title":"interface - BimodalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BimodalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         BimodalConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BimodalConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:         Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Link[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:         BMNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BMNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BimodalMarkGroup.html":{"url":"classes/BimodalMarkGroup.html","title":"class - BimodalMarkGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BimodalMarkGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/groups/bimodal.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeBimodalMarkGroup\n                            \n                            \n                                makeBimodalPathMarks\n                            \n                            \n                                makeBimodalSymbolMarks\n                            \n                            \n                                makeBimodalTextDiscrepencyIdMarks\n                            \n                            \n                                makeBimodalTextDiscrepencyLabelMarks\n                            \n                            \n                                makeBimodalTextDuplicateIdMarks\n                            \n                            \n                                makeBimodalTextSearchMarks\n                            \n                            \n                                makeBiomodalTextLinkMarks\n                            \n                            \n                                makeBiomodalTextMarks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/groups/bimodal.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GroupMark\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/groups/bimodal.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeBimodalMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:17\n                        \n                    \n\n\n            \n                \n                        Function to create the mark groups for the bimodal network\n\n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalPathMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalPathMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:234\n                        \n                    \n\n\n            \n                \n                        Bimodal paths\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalSymbolMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalSymbolMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:398\n                        \n                    \n\n\n            \n                \n                        Bimodal symbols\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDiscrepencyIdMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDiscrepencyIdMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:136\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when discrepency Id toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDiscrepencyLabelMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDiscrepencyLabelMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:87\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when discrepency label toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDuplicateIdMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDuplicateIdMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:185\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when duplicate Id toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextSearchMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextSearchMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:38\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBiomodalTextLinkMarks\n                        \n                    \n                \n            \n            \n                \nmakeBiomodalTextLinkMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:458\n                        \n                    \n\n\n            \n                \n                        Bimodal link texts\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBiomodalTextMarks\n                        \n                    \n                \n            \n            \n                \nmakeBiomodalTextMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:538\n                        \n                    \n\n\n            \n                \n                        Bimodal text marks\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GroupMark, Mark } from 'vega';\n\nexport class BimodalMarkGroup {\n  static create(): GroupMark {\n    return new BimodalMarkGroup().group;\n  }\n\n  group: GroupMark;\n\n  constructor() {\n    this.group = this.makeBimodalMarkGroup();\n  }\n\n  /**\n   * Function to create the mark groups for the bimodal network\n   */\n  makeBimodalMarkGroup(): GroupMark {\n    return {\n      type: 'group',\n      signals: [{ name: 'bgoffset', value: 8 }],\n      name: 'bimodal-network',\n      marks: [\n        this.makeBimodalPathMarks(),\n        this.makeBimodalSymbolMarks(),\n        this.makeBiomodalTextMarks(),\n        this.makeBimodalTextSearchMarks(),\n        this.makeBiomodalTextLinkMarks(),\n        this.makeBimodalTextDiscrepencyLabelMarks(),\n        this.makeBimodalTextDiscrepencyIdMarks(),\n        this.makeBimodalTextDuplicateIdMarks(),\n      ],\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark\n   */\n  makeBimodalTextSearchMarks(): Mark {\n    return {\n      name: 'rectmark',\n      type: 'rect',\n      from: { data: 'textmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'aliceblue' },\n          stroke: { value: 'steelblue' },\n          zindex: { value: -1 },\n        },\n        update: {\n          opacity: [\n            {\n              test: \"node__click === null && indata('search', 'id', datum.datum.id)\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when discrepency label toggle is turned on\n   */\n  makeBimodalTextDiscrepencyLabelMarks(): Mark {\n    return {\n      name: 'rectmarkdiscrepencylabel',\n      type: 'rect',\n      from: { data: 'textmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightblue' },\n          stroke: { value: 'darkblue' },\n          zindex: { value: -1 },\n        },\n        update: {\n          opacity: [\n            {\n              test: \"node__click === null && indata('discrepencyLabel', 'id', datum.datum.id)\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when discrepency Id toggle is turned on\n   */\n  makeBimodalTextDiscrepencyIdMarks(): Mark {\n    return {\n      name: 'rectmarkdiscrepencyid',\n      type: 'rect',\n      from: { data: 'textmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'bisque' },\n          stroke: { value: 'burlywood' },\n          zindex: { value: -1 },\n        },\n        update: {\n          opacity: [\n            {\n              test: \"node__click === null && indata('discrepencyId', 'id', datum.datum.id)\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when duplicate Id toggle is turned on\n   */\n  makeBimodalTextDuplicateIdMarks(): Mark {\n    return {\n      name: 'rectmarkduplicateid',\n      type: 'rect',\n      from: { data: 'textmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightyellow' },\n          stroke: { value: 'burlywood' },\n          zindex: { value: -1 },\n        },\n        update: {\n          opacity: [\n            {\n              test: \"node__click === null && indata('duplicateId', 'id', datum.datum.id)\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Bimodal paths\n   */\n  makeBimodalPathMarks(): Mark {\n    return {\n      type: 'path',\n      name: 'bimodal-path',\n      from: { data: 'edges' },\n      encode: {\n        enter: {\n          stroke: { value: '#ccc' },\n          strokeWidth: { value: 1.5 },\n          x: { value: 0 },\n          y: { value: 5 },\n        },\n        update: {\n          tooltip: [\n            {\n              test: 'node__click === null && datum.target.group === 2',\n              signal: \"length(datum.target.references) > 0 ? 'Click to see DOI References' : 'No DOI References'\",\n            },\n            {\n              test: 'node__click === null && datum.target.group !== 2',\n              signal:\n                \"isValid(datum.source.references) && length(datum.source.references) > 0 ? 'Click to see DOI References' : 'No DOI References'\",\n            },\n          ],\n          strokeWidth: { value: 5 },\n          path: { field: 'path' },\n          stroke: [\n            // red: E41A1C, green: 4DAF4A, blue: 377EB8\n            {\n              test: 'datum.source.id === node__hover && datum.source.group == 1',\n              value: '#E41A1C',\n            }, // for hover\n            {\n              test: 'datum.source.id === node__hover && datum.source.group == 2 && !datum.pathColor',\n              value: '#377EB8',\n            }, // for hover\n            {\n              test: 'datum.source.id === node__hover && datum.source.group == 2 && datum.pathColor',\n              field: 'pathColor',\n            }, // for hover\n            {\n              test: 'datum.target.id === node__hover && datum.target.group == 2',\n              value: '#E41A1C',\n            }, // for hover\n            {\n              test: 'datum.target.id === node__hover && datum.target.group == 3 && !datum.pathColor',\n              value: '#4DAF4A',\n            }, // for hover\n            {\n              test: 'datum.target.id === node__hover && datum.target.group == 3 && datum.pathColor',\n              field: 'pathColor',\n            }, // for hover\n            {\n              test: 'datum.source.id === node__click && datum.source.group == 1',\n              value: '#E41A1C',\n            }, // for click\n            {\n              test: 'datum.source.id === node__click && datum.source.group == 2 && !datum.pathColor',\n              value: '#377EB8',\n            }, // for click\n            {\n              test: 'datum.source.id === node__click && datum.source.group == 2 && datum.pathColor',\n              field: 'pathColor',\n            }, // for click\n            {\n              test: 'datum.target.id === node__click && datum.target.group == 2',\n              value: '#E41A1C',\n            }, // for click\n            {\n              test: 'datum.target.id === node__click && datum.target.group == 3 && !datum.pathColor',\n              value: '#4DAF4A',\n            }, // for click\n            {\n              test: 'datum.target.id === node__click && datum.target.group == 3 && datum.pathColor',\n              field: 'pathColor',\n            }, // for click\n            {\n              test: '(node__click !== null || node__hover !== null) && datum.target.group == 3',\n              value: '#ccc', // for greying out other paths when clicking on a node\n            },\n            {\n              test: '(node__click !== null || node__hover !== null) && datum.target.group == 2',\n              value: '#ccc', // for greying out other paths when clicking on a node\n            },\n            // for getting AS -> CT -> B\n            {\n              test: \"indata('targets_hovered_array', 'id', datum.source.id)\",\n              value: '#377EB8',\n            },\n\n            {\n              test: \"indata('targets_clicked_array', 'id', datum.source.id)\",\n              value: '#377EB8',\n            },\n            // for getting B -> CT -> AS\n            {\n              test: \"indata('sources_hovered_array', 'id', datum.target.id) && datum.source.group !== 2\",\n              value: '#377EB8',\n            },\n            {\n              test: \"indata('sources_clicked_array', 'id', datum.target.id) && datum.source.group !== 2\",\n              value: '#377EB8',\n            },\n            {\n              signal:\n                'datum.pathColor? datum.pathColor :datum.source.pathColor === datum.target.pathColor ? datum.source.pathColor : \"#ccc\"',\n            },\n          ],\n          opacity: [\n            { test: 'datum.target.id === node__click', value: 0.5 },\n            { test: 'datum.source.id === node__click', value: 0.5 },\n            {\n              test: \"indata('targets_clicked_array', 'id', datum.source.id)\",\n              value: 0.5,\n            },\n            {\n              test: \"indata('sources_clicked_array', 'id', datum.target.id) && datum.source.group !== 2\",\n              value: 0.5,\n            },\n            {\n              test: \"indata('targets_hovered_array', 'id', datum.source.id)\",\n              value: 0.3,\n            },\n            {\n              test: \"indata('sources_hovered_array', 'id', datum.target.id)\",\n              value: 0.3,\n            },\n            {\n              test: \"indata('view_mode__hover', 'id', datum.source.id) && indata('view_mode__hover', 'id', datum.target.id)\",\n              value: 0.3,\n            },\n            {\n              test: 'node__hover && datum.source.id !== node__hover && node__click === null',\n              value: 0.15,\n            },\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            { value: 0.3 },\n          ],\n          zindex: [\n            { test: 'datum.source.id === node__hover', value: 2 },\n            { test: 'datum.target.id === node__hover', value: 2 },\n            { test: 'datum.source.id === node__click', value: 2 },\n            { test: 'datum.target.id === node__click', value: 2 },\n            {\n              test: \"indata('targets_clicked_array', 'id', datum.source.id)\",\n              value: 2,\n            },\n          ],\n        },\n        hover: {\n          strokeWidth: [{ test: 'node__click === null', value: 3.5 }],\n          stroke: { value: '#6c6a63' },\n          cursor: [{ test: 'node__click === null', value: 'pointer' }],\n        },\n      },\n    };\n  }\n\n  /**\n   * Bimodal symbols\n   */\n  makeBimodalSymbolMarks(): Mark {\n    return {\n      type: 'symbol',\n      name: 'bimodal-symbol',\n      from: { data: 'nodes' },\n      encode: {\n        enter: {\n          shape: {\n            signal: `datum.bType === \"gene\" ?\n              \"circle\" : datum.bType === \"protein\" ?\n              \"diamond\" : datum.bType === \"lipids\" ?\n              \"square\" : datum.bType === \"metabolites\" ?\n              \"triangle\": datum.bType === \"proteoforms\" ?\n              \"cross\" : \"circle\"`,\n          },\n          size: { field: 'nodeSize' },\n          fill: { signal: 'datum.isNew ? \"#fafafa\" : datum.color' },\n          x: { field: 'x' },\n          y: { field: 'y', offset: 5 },\n          cursor: { value: 'pointer' },\n          tooltip: {\n            signal:\n              '{\\'Name\\': datum.name, \\'Degree\\': datum.group === 1 ? length(datum.sources) + length(datum.targets) + 1 : length(datum.sources) + length(datum.targets), \"Indegree\": datum.group == 1 ? 1 : length(datum.sources), \"Outdegree\": length(datum.targets), \"Ontology ID\": datum.ontologyId, \"rdfs:label\": datum.label}',\n          },\n        },\n        update: {\n          opacity: [\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: \"indata('view_mode__click', 'id', datum.id) || indata('targets_of_targets__click', 'targets', datum.id) || (indata('sources_of_sources__click', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: \"node__hover !== null && indata('view_mode__hover', 'id', datum.id) || indata('targets_of_targets__hover', 'targets', datum.id) || (indata('sources_of_sources__hover', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && datum.id !== node__hover && node__click === null',\n              value: 0.5,\n            },\n            {\n              value: 0.1,\n            },\n          ],\n          stroke: {\n            signal: 'datum.problem ? \"#000\" : datum.isNew ? datum.color : \"#fff\"',\n          },\n          strokeWidth: { signal: 'datum.isNew ? 4 : 0' },\n          strokeDash: { signal: 'datum.isNew ? [3, 3] : [0, 0]' },\n        },\n      },\n    };\n  }\n\n  /**\n   * Bimodal link texts\n   */\n  makeBiomodalTextLinkMarks(): Mark {\n    return {\n      type: 'text',\n      name: 'textlinkmark',\n      zindex: 5,\n      from: { data: 'nodes' },\n      encode: {\n        update: {\n          x: { field: 'x' },\n          y: { field: 'y', offset: 5 },\n          dx: { value: 20 },\n          dy: { value: 10 },\n          align: { value: 'left' },\n          baseline: { value: 'middle' },\n          text: { field: 'ontologyId' },\n          fontSize: { value: 11 },\n          fill: [\n            {\n              value: 'grey',\n            },\n          ],\n          fontWeight: [\n            {\n              test: \"indata('targets_clicked_array', 'id', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: 'datum.id === node__click',\n              value: 'bold',\n            },\n            {\n              test: \"indata('sources_clicked_array', 'id', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: \"indata('targets_of_targets__click', 'targets', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: \"indata('sources_of_sources__click', 'sources', datum.id)  && datum.group !== 2 && datum.group !== 3\",\n              value: 'bold',\n            },\n          ],\n          opacity: [\n            {\n              test: '!show_ontology',\n              value: 0,\n            },\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: \"indata('view_mode__click', 'id', datum.id) || indata('targets_of_targets__click', 'targets', datum.id) || (indata('sources_of_sources__click', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: \"node__hover !== null && indata('view_mode__hover', 'id', datum.id) || indata('targets_of_targets__hover', 'targets', datum.id) || (indata('sources_of_sources__hover', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && datum.id !== node__hover && node__click === null',\n              value: 0.5,\n            },\n            {\n              value: 0.1,\n            },\n          ],\n          limit: {\n            signal:\n              \"node__click === datum.id || node__hover === datum.id || indata('view_mode__click', 'id', datum.id) || indata('view_mode__hover', 'id', datum.id) || indata('targets_of_targets__click', 'targets', datum.id) || indata('sources_of_sources__click', 'sources', datum.id) || indata('targets_of_targets__hover', 'targets', datum.id) || indata('sources_of_sources__hover', 'sources', datum.id)? null : 150\",\n          },\n        },\n      },\n    };\n  }\n\n  /**\n   * Bimodal text marks\n   */\n  makeBiomodalTextMarks(): Mark {\n    return {\n      type: 'text',\n      name: 'textmark',\n      zindex: 5,\n      from: { data: 'nodes' },\n      encode: {\n        update: {\n          x: { field: 'x' },\n          y: { field: 'y', offset: 5 },\n          dx: { value: 20 },\n          dy: { signal: 'show_ontology ? -8 : 0' },\n          align: { value: 'left' },\n          baseline: { value: 'middle' },\n          text: { field: 'name' },\n          fontSize: { field: 'fontSize' },\n          cursor: { value: 'pointer' },\n          fill: [\n            {\n              test: 'datum === bimodal_text__hover',\n              value: 'steelblue',\n            },\n            {\n              value: 'black',\n            },\n          ],\n          fontWeight: [\n            {\n              test: \"indata('targets_clicked_array', 'id', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: 'datum.id === node__click',\n              value: 'bold',\n            },\n            {\n              test: \"indata('sources_clicked_array', 'id', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: \"indata('targets_of_targets__click', 'targets', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: \"indata('sources_of_sources__click', 'sources', datum.id)  && datum.group !== 2 && datum.group !== 3\",\n              value: 'bold',\n            },\n          ],\n          opacity: [\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: \"indata('view_mode__click', 'id', datum.id) || indata('targets_of_targets__click', 'targets', datum.id) || (indata('sources_of_sources__click', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: \"node__hover !== null && indata('view_mode__hover', 'id', datum.id) || indata('targets_of_targets__hover', 'targets', datum.id) || (indata('sources_of_sources__hover', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && datum.id !== node__hover && node__click === null',\n              value: 0.5,\n            },\n            {\n              value: 0.1,\n            },\n          ],\n          limit: {\n            signal:\n              \"node__click === datum.id || node__hover === datum.id || indata('view_mode__click', 'id', datum.id) || indata('view_mode__hover', 'id', datum.id) || indata('targets_of_targets__click', 'targets', datum.id) || indata('sources_of_sources__click', 'sources', datum.id) || indata('targets_of_targets__hover', 'targets', datum.id) || indata('sources_of_sources__hover', 'sources', datum.id)? null : 150\",\n          },\n        },\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BimodalService.html":{"url":"injectables/BimodalService.html","title":"injectable - BimodalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BimodalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/bimodal.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                makeBimodalData\n                            \n                            \n                                updateBimodalData\n                            \n                            \n                                updateSpec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/bimodal.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        makeBimodalData\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeBimodalData(sheetData: Row[], treeData: TNode[], bimodalConfig: BimodalConfig, isReport, sheetConfig?: SheetConfig, omapConfig?: OmapConfig, filteredProtiens?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/bimodal.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Function to create the bimodal network\nlast layer is used to create the CT layer\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sheetData\n                                            \n                                                            Row[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    current sheet data\n\n                                            \n                                        \n                                        \n                                                treeData\n                                            \n                                                            TNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    data from the vega tree. the coordinates from the\nlast layer is used to create the CT layer\n\n                                            \n                                        \n                                        \n                                                bimodalConfig\n                                            \n                                                            BimodalConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    bimodal configuration for x and y distances\n\n                                            \n                                        \n                                        \n                                                isReport\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                sheetConfig\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    sheet configuration for height and width\n\n                                            \n                                        \n                                        \n                                                omapConfig\n                                            \n                                                            OmapConfig\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                filteredProtiens\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBimodalData\n                        \n                    \n                \n            \n            \n                \nupdateBimodalData(view: View, spec: Spec, nodes: BMNode[], links: Link[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/bimodal.service.ts:393\n                        \n                    \n\n\n            \n                \n                        Function to reset the signals and data of the visualization\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        View\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega view\n\n                                            \n                                        \n                                        \n                                                spec\n                                            \n                                                        Spec\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega spec\n\n                                            \n                                        \n                                        \n                                                nodes\n                                            \n                                                            BMNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    bimodal network nodes\n\n                                            \n                                        \n                                        \n                                                links\n                                            \n                                                            Link[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    bimodal network links\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSpec\n                        \n                    \n                \n            \n            \n                \nupdateSpec(spec: Spec, nodes: BMNode[], links: Link[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/bimodal.service.ts:414\n                        \n                    \n\n\n            \n                \n                        Function to update the spec with bimodal data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                spec\n                                            \n                                                        Spec\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega spec\n\n                                            \n                                        \n                                        \n                                                nodes\n                                            \n                                                            BMNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    bimodal network nodes\n\n                                            \n                                        \n                                        \n                                                links\n                                            \n                                                            Link[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    bimodal network links\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Spec, ValuesData, View } from 'vega';\nimport { ReportLog } from '../../actions/logs.actions';\nimport { UpdateBimodal, UpdateLinksData, UpdateVegaSpec } from '../../actions/tree.actions';\nimport { CloseLoading, HasError } from '../../actions/ui.actions';\nimport { BMNode, BimodalConfig, Link } from '../../models/bimodal.model';\nimport { LOG_ICONS, LOG_TYPES } from '../../models/logs.model';\nimport { OmapConfig } from '../../models/omap.model';\nimport { Error } from '../../models/response.model';\nimport { PROTEIN_PRESENCE, Row, SheetConfig } from '../../models/sheet.model';\nimport { AS, B, B_GREEN, CT, CT_BLUE, TNode } from '../../models/tree.model';\nimport { TreeState } from '../../store/tree.state';\nimport { makeAS, makeBioMarkers, makeCellTypes } from './tree.functions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BimodalService {\n  constructor(private readonly store: Store) {}\n\n  /**\n   * Function to create the bimodal network\n   * @param sheetData current sheet data\n   * @param treeData data from the vega tree. the coordinates from the\n   * last layer is used to create the CT layer\n   * @param bimodalConfig bimodal configuration for x and y distances\n   * @param sheetConfig sheet configuration for height and width\n   */\n  async makeBimodalData(\n    sheetData: Row[],\n    treeData: TNode[],\n    bimodalConfig: BimodalConfig,\n    isReport = false,\n    sheetConfig?: SheetConfig,\n    omapConfig?: OmapConfig,\n    filteredProtiens?: string[],\n  ) {\n    try {\n      filteredProtiens = filteredProtiens?.map((word) => word.toLowerCase()) ?? [];\n      const anatomicalStructuresData = makeAS(sheetData);\n      const links: { s: number; t: number; pathColor?: string }[] = [];\n      const nodes: BMNode[] = [];\n      let treeX = 0;\n      let treeY = 50;\n      let AS_CT_LINKS = 0;\n      let CT_BM_LINKS = 0;\n      const CT_BM: Record = {};\n      const AS_CT: Record = {};\n      const distance = sheetConfig?.bimodal_distance_x ?? 0;\n      const distanceY = sheetConfig?.bimodal_distance_y ?? 0;\n      let id = treeData.length + 1;\n      let biomarkers = [];\n      treeData.forEach((td) => {\n        if (td.children === 0 || isReport) {\n          const leaf = td.name;\n          const newLeaf = new BMNode(leaf, 1, td.x, td.y - 5, 14, td.notes, td.organName, td.ontologyId);\n          newLeaf.id = id;\n          newLeaf.problem = td.problem;\n          newLeaf.pathColor = td.pathColor;\n          newLeaf.isNew = td.isNew;\n          newLeaf.color = td.color;\n          newLeaf.ontologyId = td.ontologyId;\n          if (td.ontologyId && td.ontologyId.toLowerCase() !== 'not found') {\n            newLeaf.indegree = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorId === td.ontologyId;\n            })?.indegree;\n            newLeaf.outdegree = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorId === td.ontologyId;\n            })?.outdegree;\n            newLeaf.label = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorId === td.ontologyId;\n            })?.label;\n          } else {\n            newLeaf.indegree = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorName === td.name;\n            })?.indegree;\n            newLeaf.outdegree = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorName === td.name;\n            })?.outdegree;\n            newLeaf.label = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorName === td.name;\n            })?.label;\n          }\n          nodes.push(newLeaf);\n          id += 1;\n          treeX = td.x;\n        }\n      });\n\n      // adding x distance to build the next layer of bimodal\n      treeX += distance;\n\n      // making group 2: cell type\n      const cellTypes = await makeCellTypes(sheetData);\n\n      switch (bimodalConfig.CT.sort) {\n        case 'Alphabetically':\n          cellTypes.sort((a, b) => {\n            return a.structure.toLowerCase() > b.structure.toLowerCase()\n              ? 1\n              : b.structure.toLowerCase() > a.structure.toLowerCase()\n                ? -1\n                : 0;\n          });\n          break;\n\n        case 'Degree':\n          cellTypes.sort((a, b) => {\n            return (\n              (b.outdegree?.size ?? 0) + (b.indegree?.size ?? 0) - ((a.outdegree?.size ?? 0) + (a.indegree?.size ?? 0))\n            );\n          });\n          break;\n      }\n\n      switch (bimodalConfig.CT.size) {\n        case 'None':\n          break;\n        case 'Degree':\n          cellTypes.forEach((c) => {\n            c.nodeSize = ((c.indegree?.size ?? 0) + (c.outdegree?.size ?? 0)) * 25;\n          });\n          break;\n        case 'Indegree':\n          cellTypes.forEach((c) => {\n            c.nodeSize = (c.indegree?.size ?? 0) * 25;\n          });\n          break;\n        case 'Outdegree':\n          cellTypes.forEach((c) => {\n            c.nodeSize = (c.outdegree?.size ?? 0) * 25;\n          });\n          break;\n      }\n\n      cellTypes.forEach((cell: CT) => {\n        const newNode = new BMNode(\n          cell.structure,\n          2,\n          treeX,\n          treeY,\n          14,\n          cell.notes,\n          cell.organName ?? '',\n          cell.link,\n          CT_BLUE,\n          cell.nodeSize,\n        );\n        newNode.id = id;\n        newNode.isNew = cell.isNew;\n        newNode.pathColor = cell.color;\n        newNode.color = cell.color;\n        newNode.indegree = cell.indegree;\n        newNode.outdegree = cell.outdegree;\n        newNode.label = cell.label;\n        newNode.references = cell.references;\n\n        nodes.push(newNode);\n        treeY += distanceY;\n        id += 1;\n      });\n\n      treeY = distanceY;\n      treeX += distance;\n\n      biomarkers = await makeBioMarkers(sheetData);\n      if (omapConfig?.proteinsOnly) {\n        biomarkers = biomarkers.filter((elem) => filteredProtiens?.includes(elem.comparatorName?.toLowerCase() ?? ''));\n      }\n      switch (bimodalConfig.BM.sort) {\n        case 'Alphabetically':\n          biomarkers.sort((a, b) => {\n            return a.structure.toLowerCase() > b.structure.toLowerCase()\n              ? 1\n              : b.structure.toLowerCase() > a.structure.toLowerCase()\n                ? -1\n                : 0;\n          });\n          break;\n\n        case 'Degree':\n          biomarkers.sort((a, b) => {\n            return (b.indegree?.size ?? 0) - (a.indegree?.size ?? 0);\n          });\n          break;\n      }\n\n      switch (bimodalConfig.BM.size) {\n        case 'None':\n          break;\n        case 'Degree':\n          biomarkers.forEach((b) => {\n            b.nodeSize = (b.nodeSize ?? 0) + ((b.indegree?.size ?? 0) + (b.outdegree?.size ?? 0)) * 25;\n          });\n          break;\n      }\n\n      switch (bimodalConfig.BM.type) {\n        case 'All':\n          break;\n        case 'Gene':\n          biomarkers = biomarkers.filter((b) => b.bType === 'gene');\n          break;\n        case 'Protein':\n          biomarkers = biomarkers.filter((b) => b.bType === 'protein');\n          break;\n        case 'Lipids':\n          biomarkers = biomarkers.filter((b) => b.bType === 'lipids');\n          break;\n        case 'Metabolites':\n          biomarkers = biomarkers.filter((b) => b.bType === 'metabolites');\n          break;\n        case 'Proteoforms':\n          biomarkers = biomarkers.filter((b) => b.bType === 'proteoforms');\n          break;\n      }\n\n      // making group 3: bio markers\n      biomarkers.forEach((marker: B) => {\n        const newNode = new BMNode(\n          marker.structure,\n          3,\n          treeX,\n          treeY,\n          14,\n          marker.notes,\n          marker.organName ?? '',\n          marker.link,\n          B_GREEN,\n          marker.nodeSize,\n          marker.proteinPresence,\n        );\n        newNode.id = id;\n        newNode.isNew = marker.isNew;\n        newNode.pathColor = marker.color;\n        newNode.color = marker.color;\n        newNode.indegree = marker.indegree;\n        newNode.outdegree = marker.outdegree;\n        newNode.bType = marker.bType;\n\n        nodes.push(newNode);\n        treeY += distanceY;\n        id += 1;\n      });\n\n      nodes.forEach((node) => {\n        if (node.group === 1) {\n          node.sources = [];\n          node.outdegree?.forEach((str) => {\n            let foundIndex: number;\n            if (str.id && str.id.toLowerCase() !== 'not found') {\n              foundIndex = nodes.findIndex((i: BMNode) => i.ontologyId === str.id && i.group !== 1);\n            } else {\n              foundIndex = nodes.findIndex((i: BMNode) => i.name === str.name && i.group !== 1);\n            }\n            if (node.targets.findIndex((l) => l === nodes[foundIndex].id) === -1) {\n              node.targets.push(nodes[foundIndex].id);\n            }\n            links.push({ s: node.id, t: nodes[foundIndex].id });\n          });\n        }\n\n        if (node.group === 3) {\n          node.indegree?.forEach((str) => {\n            let pathColor = '';\n            let foundIndex: number;\n            if (str.id) {\n              foundIndex = nodes.findIndex((i: BMNode) => i.ontologyId === str.id);\n            } else {\n              foundIndex = nodes.findIndex((i: BMNode) => i.name === str.name);\n            }\n            if (node.sources.findIndex((l) => l === nodes[foundIndex].id) === -1) {\n              node.sources.push(nodes[foundIndex].id);\n            }\n            nodes[foundIndex].outdegree?.forEach((cellOut) => {\n              if (cellOut.name === node.name) {\n                if (cellOut.proteinPresence === PROTEIN_PRESENCE.POS) {\n                  pathColor = '#00008B';\n                } else if (cellOut.proteinPresence === PROTEIN_PRESENCE.NEG) {\n                  pathColor = '#E16156';\n                } else if (cellOut.proteinPresence === PROTEIN_PRESENCE.INTERMEDIATE) {\n                  pathColor = '#4B2079';\n                }\n              }\n            });\n            links.push({ s: nodes[foundIndex].id, t: node.id, pathColor });\n          });\n        }\n      });\n\n      nodes.forEach((node: BMNode) => {\n        if (node.group === 2) {\n          node.outdegree?.forEach((str) => {\n            const tt = nodes\n              .map((val, idx) => ({ val, idx }))\n              .filter(({ val }) => {\n                if (str.id) {\n                  return val.ontologyId === str.id;\n                } else {\n                  return val.name === str.name;\n                }\n              })\n              .map(({ idx }) => idx);\n            const targets: number[] = [];\n            tt.forEach((s) => {\n              targets.push(nodes[s].id);\n            });\n\n            // make targets only if there is a link from CT to B\n            targets.forEach((s) => {\n              if (links.some((l) => l.s === node.id && l.t === s)) {\n                if (node.targets.findIndex((l) => l === s) === -1) {\n                  if (Object.prototype.hasOwnProperty.call(CT_BM, node.organName)) {\n                    CT_BM[node.organName] += 1;\n                  } else {\n                    CT_BM[node.organName] = 1;\n                  }\n                  CT_BM_LINKS += 1;\n                  node.targets.push(s);\n                }\n              }\n            });\n          });\n          // make sources only if there is a link from AS to CT\n          node.indegree?.forEach((str) => {\n            const ss = nodes\n              .map((val, idx) => ({ val, idx }))\n              .filter(({ val }) => {\n                if (str.id && str.id.toLowerCase() !== 'not found') {\n                  return val.ontologyId === str.id;\n                } else {\n                  return val.name === str.name;\n                }\n              })\n              .map(({ idx }) => idx);\n            const sources: number[] = [];\n            ss.forEach((s) => {\n              sources.push(nodes[s].id);\n            });\n            sources.forEach((s) => {\n              if (links.some((l) => l.s === s && l.t === node.id)) {\n                if (node.sources.findIndex((l) => l === s) === -1) {\n                  if (Object.prototype.hasOwnProperty.call(AS_CT, node.organName)) {\n                    AS_CT[node.organName] += 1;\n                  } else {\n                    AS_CT[node.organName] = 1;\n                  }\n                  AS_CT_LINKS += 1;\n                  node.sources.push(s);\n                }\n              }\n            });\n          });\n        }\n      });\n\n      if (!isReport) {\n        this.store.dispatch(new UpdateLinksData(AS_CT_LINKS, CT_BM_LINKS, AS_CT, CT_BM));\n\n        this.store.dispatch(new UpdateBimodal(nodes, links)).subscribe(() => {\n          const state = this.store.selectSnapshot(TreeState);\n          const view = TreeState.getVegaView(state);\n          const updatedNodes = state.bimodal.nodes;\n          const updatedLinks = state.bimodal.links;\n          const spec = state.spec;\n          this.updateBimodalData(view, spec, updatedNodes, updatedLinks);\n        });\n      } else {\n        this.store.dispatch(new UpdateLinksData(AS_CT_LINKS, CT_BM_LINKS, AS_CT, CT_BM, 0, undefined, true));\n      }\n    } catch (error) {\n      console.log(error);\n      const status = (error as { status: number }).status;\n      const err: Error = {\n        msg: `${error} (Status: ${status})`,\n        status: status,\n        hasError: true,\n      };\n      this.store.dispatch(new ReportLog(LOG_TYPES.MSG, 'Failed to create Tree', LOG_ICONS.error));\n      this.store.dispatch(new HasError(err));\n    }\n  }\n\n  /**\n   * Function to reset the signals and data of the visualization\n   *\n   * @param view vega view\n   * @param spec vega spec\n   * @param nodes bimodal network nodes\n   * @param links bimodal network links\n   */\n  updateBimodalData(view: View, spec: Spec, nodes: BMNode[], links: Link[]) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const anyView: any = view;\n    anyView._runtime.signals.node__click.value = null; // removing clicked highlighted nodes if at all\n    anyView._runtime.signals.sources__click.value = []; // removing clicked bold source nodes if at all\n    anyView._runtime.signals.targets__click.value = [];\n    view.data('nodes', nodes).data('edges', links).resize().runAsync();\n\n    this.updateSpec(spec, nodes, links);\n\n    this.store.dispatch(new CloseLoading('Visualization Rendered'));\n    this.store.dispatch(new ReportLog(LOG_TYPES.MSG, 'Visualization successfully rendered', LOG_ICONS.success));\n  }\n\n  /**\n   * Function to update the spec with bimodal data\n   *\n   * @param spec vega spec\n   * @param nodes bimodal network nodes\n   * @param links bimodal network links\n   */\n  updateSpec(spec: Spec, nodes: BMNode[], links: Link[]) {\n    const data = spec.data ?? [];\n    const nodeData = data[data.findIndex((i) => i.name === 'nodes')] as ValuesData;\n    const edgeData = data[data.findIndex((i) => i.name === 'edges')] as ValuesData;\n    nodeData.values = nodes;\n    edgeData.values = links;\n\n    this.store.dispatch(new UpdateVegaSpec(spec));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BiomarkersCounts.html":{"url":"interfaces/BiomarkersCounts.html","title":"interface - BiomarkersCounts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BiomarkersCounts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BiomarkersNamesInReport.html":{"url":"interfaces/BiomarkersNamesInReport.html","title":"interface - BiomarkersNamesInReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BiomarkersNamesInReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BmCtPairings.html":{"url":"interfaces/BmCtPairings.html","title":"interface - BmCtPairings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BmCtPairings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AS_ID\n                                        \n                                \n                                \n                                        \n                                            AS_NAME\n                                        \n                                \n                                \n                                        \n                                            BM_ID\n                                        \n                                \n                                \n                                        \n                                            BM_NAME\n                                        \n                                \n                                \n                                        \n                                            CT_ID\n                                        \n                                \n                                \n                                        \n                                            CT_NAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AS_ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AS_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BM_ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BM_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BM_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BM_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CT_ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CT_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CT_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CT_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CByOrgan.html":{"url":"interfaces/CByOrgan.html","title":"interface - CByOrgan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CByOrgan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            biomarkers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellTypes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTypes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CT.html":{"url":"interfaces/CT.html","title":"interface - CT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Base\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            indegree\n                                        \n                                \n                                \n                                        \n                                            isNew\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nodeSize\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outdegree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            references\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        indegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNew:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outdegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outdegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                isNew\n                            \n                            \n                                link\n                            \n                            \n                                parents\n                            \n                            \n                                structure\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(structure: string, link: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tree.model.ts:130\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        structure\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        link\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:126\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSheetLogs.html":{"url":"classes/ClearSheetLogs.html","title":"class - ClearSheetLogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSheetLogs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/logs.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLEAR] Sheet Logs'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ReportLog {\n  static readonly type = '[REPORT] Log';\n  constructor(\n    public type: string,\n    public message: string,\n    public icon?: string,\n    public version = 'latest',\n  ) {}\n}\n\nexport class ReportMultiLog {\n  static readonly type = '[REPORT] Milti Log';\n  constructor(\n    public message: string,\n    public icon: string,\n    public multiMessage = '',\n  ) {}\n}\n\nexport class ClearSheetLogs {\n  static readonly type = '[CLEAR] Sheet Logs';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseBottomSheet.html":{"url":"classes/CloseBottomSheet.html","title":"class - CloseBottomSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseBottomSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Bottom Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseBottomSheetDOI.html":{"url":"classes/CloseBottomSheetDOI.html","title":"class - CloseBottomSheetDOI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseBottomSheetDOI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Bottom Sheet DOI'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseCompare.html":{"url":"classes/CloseCompare.html","title":"class - CloseCompare","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseCompare\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Compare'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseLoading.html":{"url":"classes/CloseLoading.html","title":"class - CloseLoading","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseLoading\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                text\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Loading'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseRightSideNav.html":{"url":"classes/CloseRightSideNav.html","title":"class - CloseRightSideNav","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseRightSideNav\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Right Side Nav'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseSearch.html":{"url":"classes/CloseSearch.html","title":"class - CloseSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Search'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseSnackbar.html":{"url":"classes/CloseSnackbar.html","title":"class - CloseSnackbar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseSnackbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Snackbar'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompareComponent.html":{"url":"components/CompareComponent.html","title":"component - CompareComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CompareComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/compare/compare.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-compare\n            \n\n\n\n            \n                styleUrls\n                ./compare.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./compare.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                formGroup\n                            \n                            \n                                formSheets\n                            \n                            \n                                formValid\n                            \n                            \n                                    Public\n                                ga\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCompareSheetRow\n                            \n                            \n                                atLeastOnePhoneRequired\n                            \n                            \n                                checkLinkFormat\n                            \n                            \n                                compare\n                            \n                            \n                                createCompareForm\n                            \n                            \n                                doesFormHaveError\n                            \n                            \n                                getRandomColor\n                            \n                            \n                                markFormGroupTouched\n                            \n                            \n                                removeCompareSheetRow\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                compareSheets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeCompare\n                            \n                            \n                                compareData\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    CSControls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: UntypedFormBuilder, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/compare/compare.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        UntypedFormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        compareSheets\n                    \n                \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/compare/compare.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeCompare\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/compare/compare.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        compareData\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/compare/compare.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCompareSheetRow\n                        \n                    \n                \n            \n            \n                \naddCompareSheetRow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        atLeastOnePhoneRequired\n                        \n                    \n                \n            \n            \n                \natLeastOnePhoneRequired(group: UntypedFormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        UntypedFormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLinkFormat\n                        \n                    \n                \n            \n            \n                \ncheckLinkFormat(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { sheetID: any; gid: any; csvUrl: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n            \n                \ncompare()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCompareForm\n                        \n                    \n                \n            \n            \n                \ncreateCompareForm(link: string, color?: string, title: string, description: string, formData?: FormData, fileName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                link\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                description\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                formData\n                                            \n                                                            FormData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     UntypedFormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doesFormHaveError\n                        \n                    \n                \n            \n            \n                \ndoesFormHaveError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomColor\n                        \n                    \n                \n            \n            \n                \ngetRandomColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \nmarkFormGroupTouched(formGroup: UntypedFormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        UntypedFormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCompareSheetRow\n                        \n                    \n                \n            \n            \n                \nremoveCompareSheetRow(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(fileFormDataEvent: FormData, control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileFormDataEvent\n                                            \n                                                            FormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UntypedFormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/compare/compare.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UntypedFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/compare/compare.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formSheets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UntypedFormArray\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/compare/compare.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formValid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/compare/compare.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/compare/compare.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        CSControls\n                    \n                \n\n                \n                    \n                        getCSControls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/compare/compare.component.ts:169\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { GaAction, GaCategory, GaCompareInfo } from '../../models/ga.model';\nimport { CompareData } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-compare',\n  templateUrl: './compare.component.html',\n  styleUrls: ['./compare.component.scss'],\n})\nexport class CompareComponent implements OnInit {\n  @Output() closeCompare = new EventEmitter();\n  @Output() compareData = new EventEmitter();\n\n  @Input() compareSheets!: Observable;\n\n  formGroup!: UntypedFormGroup;\n  formSheets!: UntypedFormArray;\n  formValid = true;\n\n  constructor(\n    public fb: UntypedFormBuilder,\n    public ga: GoogleAnalyticsService,\n  ) {}\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      sheets: this.fb.array([]),\n    });\n    this.formSheets = this.formGroup.get('sheets') as UntypedFormArray;\n\n    this.compareSheets.subscribe((sheets) => {\n      if (sheets.length) {\n        for (const source of sheets) {\n          this.formSheets.push(\n            this.createCompareForm(\n              source.link,\n              source.color,\n              source.title,\n              source.description,\n              source.formData,\n              source.fileName,\n            ),\n          );\n        }\n      } else {\n        this.formSheets.push(this.createCompareForm());\n      }\n    });\n\n    this.formGroup.valueChanges.subscribe(() => {\n      const formArray = this.formGroup.controls['sheets'] as UntypedFormArray;\n      formArray.controls.forEach((control) => {\n        const sheet = control as UntypedFormGroup;\n        const file = sheet.controls['formData'];\n        const link = sheet.controls['link'];\n        if (file.value != null) {\n          link.clearValidators();\n          link.updateValueAndValidity({ emitEvent: false });\n        }\n      });\n    });\n  }\n\n  upload(fileFormDataEvent: FormData, control: AbstractControl) {\n    const sheet = control as UntypedFormGroup;\n    sheet.controls['formData'].setValue(fileFormDataEvent);\n  }\n\n  markFormGroupTouched(formGroup: UntypedFormGroup) {\n    Object.values(formGroup.controls).forEach((control) => {\n      const form = control as UntypedFormGroup;\n      form.markAsTouched();\n\n      if (form.controls) {\n        this.markFormGroupTouched(form);\n      }\n    });\n  }\n\n  compare() {\n    this.markFormGroupTouched(this.formGroup);\n    this.formValid = this.formGroup.status === 'VALID';\n    if (this.formGroup.status !== 'VALID') {\n      return;\n    }\n    const data: CompareData[] = [];\n    for (const [idx, sheet] of this.formGroup.value.sheets.entries()) {\n      if (sheet.title === '') {\n        sheet.title = `Sheet ${idx + 1}`;\n      }\n\n      data.push({\n        ...sheet,\n        sheetId: this.checkLinkFormat(sheet.link)?.sheetID,\n        gid: this.checkLinkFormat(sheet.link)?.gid,\n        csvUrl: this.checkLinkFormat(sheet.link)?.csvUrl,\n      });\n\n      const sheetInfo: GaCompareInfo = {\n        title: sheet.title,\n        desc: sheet.description,\n        link: sheet.link,\n        color: sheet.color,\n      };\n      this.ga.event(GaAction.CLICK, GaCategory.COMPARE, `Add new sheet to compare: ${JSON.stringify(sheetInfo)}`);\n    }\n\n    this.compareData.emit(data);\n  }\n\n  checkLinkFormat(url: string) {\n    if (url.startsWith('https://docs.google.com/spreadsheets/d/')) {\n      const splitUrl = url.split('/');\n      if (splitUrl.length === 7) {\n        return {\n          sheetID: splitUrl[5],\n          gid: splitUrl[6].split('=')[1],\n          csvUrl: '',\n        };\n      }\n    }\n    return {\n      sheetID: '0',\n      gid: '0',\n      csvUrl: url,\n    };\n  }\n\n  createCompareForm(\n    link = '',\n    color?: string,\n    title = '',\n    description = '',\n    formData?: FormData,\n    fileName?: string,\n  ): UntypedFormGroup {\n    if (!color) {\n      color = this.getRandomColor();\n    }\n\n    return this.fb.group(\n      {\n        title: [title],\n        description: [description],\n        link: [\n          link,\n          Validators.compose([Validators.required, Validators.pattern(/\\/([\\w-_]{15,})\\/(.*?gid=(\\d+))?|\\w*csv$/)]),\n        ],\n        color: [color],\n        formData: [formData],\n        fileName: [fileName],\n      },\n      { validators: [this.atLeastOnePhoneRequired] },\n    );\n  }\n\n  atLeastOnePhoneRequired(group: UntypedFormGroup): { [s: string]: boolean } | null {\n    if (group) {\n      if (group.controls['link'].value || group.controls['fileName'].value) {\n        return null;\n      }\n    }\n    return { error: true };\n  }\n\n  get CSControls() {\n    return this.formGroup.get('sheets') as UntypedFormArray;\n  }\n\n  getRandomColor() {\n    const letters = '3456789BC'.split('');\n    let color = '#';\n    for (let i = 0; i  {\n      // mark as touched for all controls\n      sheet.controls['link'].markAsTouched();\n    });\n    return this.formGroup.status !== 'VALID';\n  }\n\n  addCompareSheetRow() {\n    const sheet = this.createCompareForm();\n    this.formSheets.push(sheet);\n    this.ga.event(GaAction.CLICK, GaCategory.COMPARE, 'Add new compare row', undefined);\n  }\n\n  removeCompareSheetRow(i: number) {\n    this.formSheets.removeAt(i);\n    this.ga.event(GaAction.CLICK, GaCategory.COMPARE, 'Delete compare row', i);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        \n          \n            Instructions\n          \n        \n\n        \n          \n            \n              Through this feature, you can upload your own data (ASCT+B to ASCT+B, ASCT+B to experimental data, or\n              ASCT+B to OMAP) by pasting the Browser URL address for the Google sheet of your data in the fields\n              mentioned below.\n            \n            \n              In order to successfully link your sheet, make sure the sheet has public access by selecting Share --> Get\n              link --> selecting \"Anyone with the link\" option and \"Viewer\" privileges, select \"Done\" to save.\n            \n\n            \n              Please make sure your data follows the appropriate data format:\n              \n                \n                  ASCT+B Table template\n                \n                \n                  OMAP compare template\n                \n              \n            \n          \n        \n        \n        \n          New\n          Organ Mapping Antibody Panel files (CSV) are now supported!\n        \n      \n    \n\n    \n      \n        * required field\n      \n\n      \n        \n          \n            \n              \n                \n                  \n                    \n                      Title\n                      \n                      A title for your sheet\n                    \n                  \n                \n                \n                  \n                    \n                      \n                        Description\n                        \n                        A suitable description\n                      \n                    \n                  \n                  \n                    \n                      delete\n                    \n                  \n                \n              \n\n              \n                Pick Color\n                \n              \n\n              \n                Data\n                * &nbsp;\n                 ( Upload a csv file or link to the data)\n              \n\n              \n                \n                  \n                    \n                      Google Sheet (or CSV) Link\n                      \n                      Enter Browser URL address for your public Google Sheet (or CSV)\n                    \n                  \n                \n\n                \n                  \n                    \n                      \n                    \n                  \n                \n              \n            \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n        Compare\n      \n      \n        add\n        Add\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./compare.component.scss\n                \n                // .cc {\n//   border-radius: 8px;\n//   box-shadow: 3px 3px 40px 30px #ececec;\n// }\n\n.link-input-field {\n  width: 100%;\n}\n\ninput[type='color'] {\n  -webkit-appearance: none;\n  border: none;\n  outline: none;\n}\n\n::ng-deep input[type='color']::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n\ninput[type='color']::-webkit-color-swatch {\n  border: none;\n}\n\n.content {\n  flex: 1 1;\n  overflow: auto;\n}\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n  box-shadow: none;\n}\n\n.mat-expansion-panel-header:not(.compare) {\n  background: rgb(228, 228, 228) !important;\n}\n\n.mat-expansion-panel-header:hover {\n  opacity: 0.85 !important;\n}\n\n.instruction-title {\n  font-weight: 600;\n  font-size: 10pt;\n}\n\n.required-field-disclaimer {\n  font-size: 0.625rem;\n  color: #f44336;\n}\n\n.title-sheet-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.title-sheet-sub-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 0.5;\n}\n\n.flex-container {\n  flex: 0.5;\n}\n\n.file-upload {\n  color: #757575;\n}\n\n.sheet-link-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.pick-color-container {\n  width: 4rem;\n  margin-top: 1.125rem !important;\n  margin-bottom: 1.125rem !important;\n\n  .pick-color-title {\n    font-size: 0.625rem;\n    color: grey;\n  }\n\n  .pick-color-textbox {\n    height: 1.875rem;\n    margin-top: 0.25rem;\n  }\n}\n\n.button-container {\n  width: 100%;\n  justify-content: space-between;\n  display: flex;\n}\n\n.compare-button {\n  border-radius: 0.5rem !important;\n}\n\n.compare-button-color {\n  background-color: #f44336 !important;\n}\n\n.add-button {\n  border: 0.063rem solid rgb(196, 196, 196);\n  color: grey;\n  border-radius: 0.5rem !important;\n}\n\n.data-upload-title {\n  margin-top: 1.5rem !important;\n  color: #444a65;\n\n  .data-disclaimer-text {\n    font-size: 0.625rem;\n    color: #757575;\n  }\n}\n\n.red {\n  color: red;\n  display: inline;\n}\n\n.optional-info {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  grid-gap: 10px;\n}\n\n.rounded-blob {\n  align-items: center;\n  height: 1.5rem;\n  width: 2.5rem;\n  background-color: #c2cae5;\n  border-radius: 100px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Instructions                                                              Through this feature, you can upload your own data (ASCT+B to ASCT+B, ASCT+B to experimental data, or              ASCT+B to OMAP) by pasting the Browser URL address for the Google sheet of your data in the fields              mentioned below.                                      In order to successfully link your sheet, make sure the sheet has public access by selecting Share --> Get              link --> selecting \"Anyone with the link\" option and \"Viewer\" privileges, select \"Done\" to save.                                      Please make sure your data follows the appropriate data format:                                                ASCT+B Table template                                                  OMAP compare template                                                                                      New          Organ Mapping Antibody Panel files (CSV) are now supported!                                    * required field                                                                                                                                    Title                                            A title for your sheet                                                                                                                                                          Description                                                A suitable description                                                                                                                        delete                                                                                                  Pick Color                                                            Data                *                   ( Upload a csv file or link to the data)                                                                                                        Google Sheet (or CSV) Link                                            Enter Browser URL address for your public Google Sheet (or CSV)                                                                                                                                                                                                                                                                                Compare                    add        Add            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompareComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompareData.html":{"url":"interfaces/CompareData.html","title":"interface - CompareData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompareData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            csvUrl\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            formData\n                                        \n                                \n                                \n                                        \n                                            gid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isOmap\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            sheetId\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        csvUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csvUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formData:         FormData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOmap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOmap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompareModule.html":{"url":"modules/CompareModule.html","title":"module - CompareModule","body":"\n                   \n\n\n\n\n    Modules\n    CompareModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompareModule\n\n\n\ncluster_CompareModule_imports\n\n\n\ncluster_CompareModule_exports\n\n\n\ncluster_CompareModule_declarations\n\n\n\n\nCompareComponent\n\nCompareComponent\n\n\n\nCompareModule\n\nCompareModule\n\nCompareModule -->\n\nCompareComponent->CompareModule\n\n\n\n\n\nCompareComponent \n\nCompareComponent \n\nCompareComponent  -->\n\nCompareModule->CompareComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nCompareModule -->\n\nFileUploadModule->CompareModule\n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nCompareModule -->\n\nSidenavHeaderModule->CompareModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nCompareModule -->\n\nSidenavModule->CompareModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/compare/compare.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CompareComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileUploadModule\n                        \n                        \n                            SidenavHeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompareComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompareComponent } from './compare.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SidenavModule } from '../sidenav/sidenav.module';\nimport { SidenavHeaderModule } from '../sidenav-header/sidenav-header.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FileUploadModule } from '../file-upload/file-upload.module';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [CompareComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SidenavModule,\n    SidenavHeaderModule,\n    MatButtonModule,\n    FileUploadModule,\n    MatCardModule,\n  ],\n  exports: [CompareComponent],\n})\nexport class CompareModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompareReport.html":{"url":"interfaces/CompareReport.html","title":"interface - CompareReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompareReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            identicalAS\n                                        \n                                \n                                \n                                        \n                                            identicalB\n                                        \n                                \n                                \n                                        \n                                            identicalBMCTPair\n                                        \n                                \n                                \n                                        \n                                            identicalCT\n                                        \n                                \n                                \n                                        \n                                            newAS\n                                        \n                                \n                                \n                                        \n                                            newB\n                                        \n                                \n                                \n                                        \n                                            newCT\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identicalAS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identicalAS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identicalB\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identicalB:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identicalBMCTPair\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identicalBMCTPair:         Row[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Row[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identicalCT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identicalCT:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newAS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newAS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newB\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newB:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newCT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newCT:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompareReportData.html":{"url":"interfaces/CompareReportData.html","title":"interface - CompareReportData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompareReportData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     CompareReport[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CompareReport[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allOMAPSheetConfigurations$\n                            \n                            \n                                allSheetConfigurations$\n                            \n                            \n                                config$\n                            \n                            \n                                omapsheetConfiguration$\n                            \n                            \n                                sheetConfiguration$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-config.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allOMAPSheetConfigurations$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.http\n    .get('assets/omap-sheet-config.json')\n    .pipe(take(1), shareReplay(1))\n                    \n                \n                    \n                        \n                                Defined in src/app/app-config.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allSheetConfigurations$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.http.get('assets/sheet-config.json').pipe(take(1), shareReplay(1))\n                    \n                \n                    \n                        \n                                Defined in src/app/app-config.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.http.get>('assets/configuration.json').pipe(take(1), shareReplay(1))\n                    \n                \n                    \n                        \n                                Defined in src/app/app-config.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapsheetConfiguration$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.allOMAPSheetConfigurations$.pipe(\n    map((data) =>\n      data\n        .map((element) => ({\n          ...element,\n          version: element.version?.filter((version) => !version.viewValue.includes('DRAFT')) ?? [],\n        }))\n        .filter((element) => element.version.length > 0),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/app-config.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetConfiguration$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.allSheetConfigurations$.pipe(\n    map((data) =>\n      data\n        .map((element) => ({\n          ...element,\n          version: element.version?.filter((version) => !version.viewValue.includes('DRAFT')) ?? [],\n        }))\n        .filter((element) => element.name === 'some' || element.version?.length > 0),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/app-config.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { SheetDetails } from './models/sheet.model';\nimport { map, shareReplay, take } from 'rxjs/operators';\n\n@Injectable()\nexport class ConfigService {\n  allSheetConfigurations$ = this.http.get('assets/sheet-config.json').pipe(take(1), shareReplay(1));\n  allOMAPSheetConfigurations$ = this.http\n    .get('assets/omap-sheet-config.json')\n    .pipe(take(1), shareReplay(1));\n\n  sheetConfiguration$ = this.allSheetConfigurations$.pipe(\n    map((data) =>\n      data\n        .map((element) => ({\n          ...element,\n          version: element.version?.filter((version) => !version.viewValue.includes('DRAFT')) ?? [],\n        }))\n        .filter((element) => element.name === 'some' || element.version?.length > 0),\n    ),\n  );\n\n  omapsheetConfiguration$ = this.allOMAPSheetConfigurations$.pipe(\n    map((data) =>\n      data\n        .map((element) => ({\n          ...element,\n          version: element.version?.filter((version) => !version.viewValue.includes('DRAFT')) ?? [],\n        }))\n        .filter((element) => element.version.length > 0),\n    ),\n  );\n\n  config$ = this.http.get>('assets/configuration.json').pipe(take(1), shareReplay(1));\n\n  constructor(private readonly http: HttpClient) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationOptions.html":{"url":"interfaces/ConfigurationOptions.html","title":"interface - ConfigurationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            headerCount\n                                        \n                                \n                                \n                                        \n                                            imgOptions\n                                        \n                                \n                                \n                                        \n                                            masterSheetLink\n                                        \n                                \n                                \n                                        \n                                            moreOptions\n                                        \n                                \n                                \n                                        \n                                            playgroundSheetOptions\n                                        \n                                \n                                \n                                        \n                                            sheetId\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                                \n                                        \n                                            version1Url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headerCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headerCount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imgOptions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        masterSheetLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        masterSheetLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moreOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moreOptions:         MoreOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MoreOption[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playgroundSheetOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playgroundSheetOptions:     PlaygroundSheetOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlaygroundSheetOptions[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         Version[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Version[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version1Url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version1Url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentService.html":{"url":"injectables/ConsentService.html","title":"injectable - ConsentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/consent.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consent\n                            \n                            \n                                    Readonly\n                                consentChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setConsent\n                            \n                            \n                                unsetConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/consent.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setConsent\n                        \n                    \n                \n            \n            \n                \nsetConsent(value: Consent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/consent.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            Consent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetConsent\n                        \n                    \n                \n            \n            \n                \nunsetConsent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/consent.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consent\n\n                    \n                \n                \n                    \n                        Default value : 'not-set'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/consent.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        consentChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/consent.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\nexport type Consent = 'not-set' | 'given' | 'rescinded';\n\n@Injectable()\nexport class ConsentService implements OnDestroy {\n  consent: Consent = 'not-set';\n\n  readonly consentChange = new ReplaySubject(1);\n\n  constructor() {\n    this.consentChange.next(this.consent);\n  }\n\n  ngOnDestroy(): void {\n    this.consentChange.complete();\n  }\n\n  setConsent(value: Consent): void {\n    if (this.consent !== value) {\n      this.consent = value;\n      this.consentChange.next(value);\n    }\n  }\n\n  unsetConsent(): void {\n    this.setConsent('not-set');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlPaneComponent.html":{"url":"components/ControlPaneComponent.html","title":"component - ControlPaneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ControlPaneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/control-pane/control-pane.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-control-pane\n            \n\n\n\n            \n                styleUrls\n                ./control-pane.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./control-pane.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bm\n                            \n                            \n                                    \n                                bm$\n                            \n                            \n                                    \n                                config$\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    \n                                cs$\n                            \n                            \n                                    \n                                filteredProteins$\n                            \n                            \n                                groupName\n                            \n                            \n                                nodes\n                            \n                            \n                                    \n                                omapConfig$\n                            \n                            \n                                    \n                                selectedOrgans$\n                            \n                            \n                                    \n                                sheet$\n                            \n                            \n                                    Public\n                                store\n                            \n                            \n                                    \n                                td$\n                            \n                            \n                                    \n                                tree$\n                            \n                            \n                                treeData\n                            \n                            \n                                view\n                            \n                            \n                                    \n                                view$\n                            \n                            \n                                    Public\n                                vs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeBimodalWithDiscrepencyId\n                            \n                            \n                                makeBimodalWithDiscrepencyLabel\n                            \n                            \n                                makeDuplicateId\n                            \n                            \n                                sendMail\n                            \n                            \n                                showAllAS\n                            \n                            \n                                togglePane\n                            \n                            \n                                updateBimodal\n                            \n                            \n                                updateConfigInSheet\n                            \n                            \n                                updateOmapConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, bm: BimodalService, vs: VegaService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bm\n                                                  \n                                                        \n                                                                        BimodalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vs\n                                                  \n                                                        \n                                                                        VegaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/control-pane/control-pane.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalWithDiscrepencyId\n                        \n                    \n                \n            \n            \n                \nmakeBimodalWithDiscrepencyId(config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalWithDiscrepencyLabel\n                        \n                    \n                \n            \n            \n                \nmakeBimodalWithDiscrepencyLabel(config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDuplicateId\n                        \n                    \n                \n            \n            \n                \nmakeDuplicateId(config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMail\n                        \n                    \n                \n            \n            \n                \nsendMail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:265\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAllAS\n                        \n                    \n                \n            \n            \n                \nshowAllAS()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePane\n                        \n                    \n                \n            \n            \n                \ntogglePane()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:261\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBimodal\n                        \n                    \n                \n            \n            \n                \nupdateBimodal(config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateConfigInSheet\n                        \n                    \n                \n            \n            \n                \nupdateConfigInSheet(prop: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prop\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOmapConfig\n                        \n                    \n                \n            \n            \n                \nupdateOmapConfig(event: OmapConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:274\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            OmapConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState.getBimodal)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        config$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getSheetConfig)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getCompareSheets)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        filteredProteins$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getFilteredProtiens)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Anatomical Structures'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BMNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        omapConfig$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState.getOmapConfig)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        selectedOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getSelectedOrgans)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sheet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getSheet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        td$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState.getTreeData)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tree$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        treeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        view$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState.getVegaView)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VegaService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { FetchSelectedOrganData, ToggleShowAllAS, UpdateConfig } from '../../actions/sheet.actions';\nimport { DiscrepencyId, DiscrepencyLabel, DuplicateId, UpdateOmapConfig } from '../../actions/tree.actions';\nimport { ToggleControlPane } from '../../actions/ui.actions';\nimport { ConfigService } from '../../app-config.service';\nimport { BMNode } from '../../models/bimodal.model';\nimport { OmapConfig } from '../../models/omap.model';\nimport { Error } from '../../models/response.model';\nimport { CompareData, Sheet, SheetConfig } from '../../models/sheet.model';\nimport { DiscrepencyStructure, TNode } from '../../models/tree.model';\nimport { SheetState } from '../../store/sheet.state';\nimport { TreeState, TreeStateModel } from '../../store/tree.state';\nimport { BimodalService } from '../tree/bimodal.service';\nimport { VegaService } from '../tree/vega.service';\n\n@Component({\n  selector: 'app-control-pane',\n  templateUrl: './control-pane.component.html',\n  styleUrls: ['./control-pane.component.scss'],\n})\nexport class ControlPaneComponent implements OnInit {\n  @Input() error!: Error;\n\n  @Select(SheetState.getSheetConfig) config$!: Observable;\n  @Select(SheetState.getSheet) sheet$!: Observable;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Select(TreeState.getVegaView) view$!: Observable;\n  @Select(SheetState.getSelectedOrgans) selectedOrgans$!: Observable;\n\n  @Select(TreeState.getTreeData) td$!: Observable;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Select(TreeState.getBimodal) bm$!: Observable;\n  @Select(SheetState.getCompareSheets) cs$!: Observable;\n\n  @Select(TreeState) tree$!: Observable;\n\n  @Select(TreeState.getOmapConfig) omapConfig$!: Observable;\n  @Select(SheetState.getFilteredProtiens) filteredProteins$!: Observable;\n\n  nodes: BMNode[] = [];\n  treeData: TNode[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  view: any;\n  groupName = 'Anatomical Structures';\n\n  constructor(\n    public store: Store,\n    public bm: BimodalService,\n    public vs: VegaService,\n    public configService: ConfigService,\n  ) {\n    this.tree$.subscribe((tree) => {\n      this.treeData = tree.treeData;\n      this.nodes = tree.bimodal.nodes;\n    });\n\n    this.filteredProteins$.subscribe(() => {\n      const data = this.store.selectSnapshot(SheetState.getData);\n      const treeData = this.store.selectSnapshot(TreeState.getTreeData);\n      const bimodalConfig = this.store.selectSnapshot(TreeState.getBimodalConfig);\n      const sheetConfig = this.store.selectSnapshot(SheetState.getSheetConfig);\n      const omapConfig = this.store.selectSnapshot(TreeState.getOmapConfig);\n      const filteredProtiens = this.store.selectSnapshot(SheetState.getFilteredProtiens);\n      if (data.length) {\n        this.bm.makeBimodalData(data, treeData, bimodalConfig, false, sheetConfig, omapConfig, filteredProtiens);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.view$.subscribe((data) => {\n      this.view = data;\n    });\n  }\n\n  updateConfigInSheet(prop: { property: string; config: SheetConfig }) {\n    switch (prop.property) {\n      case 'width':\n        this.vs.makeBimodal(this.view.signal('as_width', prop.config.width));\n        break;\n      case 'height':\n        this.vs.makeBimodal(this.view.signal('as_height', prop.config.height));\n        break;\n      case 'show-ontology':\n        this.view.signal('show_ontology', prop.config.show_ontology).runAsync();\n        break;\n      case 'bm-x':\n        this.updateBimodal(prop.config);\n        break;\n      case 'bm-y':\n        this.updateBimodal(prop.config);\n        break;\n      case 'show-as':\n        this.showAllAS();\n        break;\n      case 'show-discrepency-label':\n        this.makeBimodalWithDiscrepencyLabel(prop.config);\n        break;\n      case 'show-discrepency-id':\n        this.makeBimodalWithDiscrepencyId(prop.config);\n        break;\n      case 'show-duplicate-id':\n        this.makeDuplicateId(prop.config);\n        break;\n    }\n  }\n\n  showAllAS() {\n    this.store.dispatch(new ToggleShowAllAS()).subscribe((states) => {\n      const sheet = states.sheetState.sheet;\n      const selectedOrgans = states.sheetState.selectedOrgans;\n      const omapSelectedOrgans = states.sheetState.omapSelectedOrgans;\n      this.store.dispatch(new FetchSelectedOrganData(sheet, selectedOrgans, omapSelectedOrgans));\n    });\n  }\n\n  makeBimodalWithDiscrepencyLabel(config: SheetConfig) {\n    this.store.dispatch(new UpdateConfig(config));\n    let discrepencyLabels: DiscrepencyStructure[] = [];\n    if (config.discrepencyLabel) {\n      const discrepencySet = new Set();\n      for (const node of this.treeData) {\n        if (node.children !== 0 && node.label !== node.name) {\n          discrepencySet.add({\n            id: node.id,\n            name: node.name,\n            groupName: this.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      for (const node of this.nodes) {\n        if ((node.group === 1 || node.group === 2) && node.label !== node.name) {\n          discrepencySet.add({\n            id: node.id,\n            name: node.name,\n            groupName: node.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      discrepencyLabels = [...discrepencySet];\n      this.store.dispatch(new DiscrepencyId([]));\n      this.store.dispatch(new DuplicateId([]));\n    } else {\n      discrepencyLabels = [];\n    }\n    this.store.dispatch(new DiscrepencyLabel(discrepencyLabels));\n  }\n\n  makeBimodalWithDiscrepencyId(config: SheetConfig) {\n    this.store.dispatch(new UpdateConfig(config));\n    let discrepencyIds: DiscrepencyStructure[] = [];\n    if (config.discrepencyId) {\n      const discrepencySet = new Set();\n      for (const node of this.treeData) {\n        if (node.children !== 0 && !node.ontologyId) {\n          discrepencySet.add({\n            id: node.id,\n            name: node.name,\n            groupName: this.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      for (const node of this.nodes) {\n        if ((node.group === 1 || node.group === 2) && !node.ontologyId) {\n          discrepencySet.add({\n            id: node.id,\n            name: node.name,\n            groupName: node.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      discrepencyIds = [...discrepencySet];\n      this.store.dispatch(new DiscrepencyLabel([]));\n      this.store.dispatch(new DuplicateId([]));\n    } else {\n      discrepencyIds = [];\n    }\n    this.store.dispatch(new DiscrepencyId(discrepencyIds));\n  }\n\n  makeDuplicateId(config: SheetConfig) {\n    this.store.dispatch(new UpdateConfig(config));\n    let duplicateId: DiscrepencyStructure[] = [];\n    if (config.duplicateId) {\n      const duplicateIdSet = new Set();\n      for (const node of this.treeData) {\n        if (node.children !== 0 && node.ontologyId && node.ontologyId !== 'no good match') {\n          duplicateIdSet.add({\n            id: node.id,\n            name: node.name,\n            groupName: this.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      for (const node of this.nodes) {\n        if (node.ontologyId && node.ontologyId !== 'no good match') {\n          duplicateIdSet.add({\n            id: node.id,\n            name: node.name,\n            groupName: node.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      duplicateId = [...duplicateIdSet];\n      const dataLookup = duplicateId.reduce(\n        (acc, e) => {\n          acc[e.ontologyId]++;\n          acc[e.ontologyId] = acc[e.ontologyId] || 0;\n          return acc;\n        },\n        {} as Record,\n      );\n      const duplicateIdsTree = duplicateId.filter((e) => dataLookup[e.ontologyId]);\n      duplicateId = [...duplicateIdsTree];\n      this.store.dispatch(new DiscrepencyLabel([]));\n      this.store.dispatch(new DiscrepencyId([]));\n    } else {\n      duplicateId = [];\n    }\n    this.store.dispatch(new DuplicateId([...duplicateId]));\n  }\n\n  updateBimodal(config: SheetConfig) {\n    this.store.dispatch(new UpdateConfig(config)).subscribe((states) => {\n      const data = states.sheetState.data;\n      const treeData = states.treeState.treeData;\n      const bimodalConfig = states.treeState.bimodal.config;\n      const omapConfig = states.treeState.omapConfig;\n      const filteredProtiens = states.sheetState.filteredProtiens;\n      if (data.length) {\n        try {\n          console.log('BM Call here');\n          this.bm.makeBimodalData(data, treeData, bimodalConfig, false, config, omapConfig, filteredProtiens);\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    });\n  }\n\n  togglePane() {\n    this.store.dispatch(new ToggleControlPane());\n  }\n\n  sendMail() {\n    const subject = 'About the ASCT+B Reporter!';\n    const body = `Hi, thank you for wanting to contact us! This is an auto-generated body template.\n      Below are a list of possible subjects, %0D%0A%0D%0A1. Issue/bug wit the Reporter%0D%0A%0D%0A2.\n      Feature request for the reporter.%0D%0A%0D%0A3. General discussion about the Reporter.`;\n    const mailText = `mailto:infoccf@indiana.edu?subject=${subject}&body=${body}`;\n    window.location.href = mailText;\n  }\n\n  updateOmapConfig(event: OmapConfig) {\n    this.store.dispatch(new UpdateOmapConfig(event)).subscribe((states) => {\n      this.store.dispatch(\n        new FetchSelectedOrganData(\n          states.sheetState.sheet,\n          states.sheetState.selectedOrgans,\n          states.sheetState.omapSelectedOrgans,\n          states.sheetState.compareSheets,\n        ),\n      );\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n  \n\n  \n    Contact Us\n  \n\n\n    \n\n    \n                \n                    ./control-pane.component.scss\n                \n                /* REPORT */\n.report {\n  border: 0.0625rem solid rgba(245, 159, 61);\n  border-radius: 0.5rem !important;\n  color: black;\n  transition: all 0.3s;\n}\n\n.report:hover {\n  background-color: rgb(245, 159, 61);\n}\n\na {\n  color: grey;\n}\n.arrow-left-button {\n  border-radius: 0.5rem;\n}\n.arrow-left-icon {\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Contact Us  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ControlPaneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ControlPaneModule.html":{"url":"modules/ControlPaneModule.html","title":"module - ControlPaneModule","body":"\n                   \n\n\n\n\n    Modules\n    ControlPaneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ControlPaneModule\n\n\n\ncluster_ControlPaneModule_imports\n\n\n\ncluster_ControlPaneModule_exports\n\n\n\ncluster_ControlPaneModule_declarations\n\n\n\n\nControlPaneComponent\n\nControlPaneComponent\n\n\n\nControlPaneModule\n\nControlPaneModule\n\nControlPaneModule -->\n\nControlPaneComponent->ControlPaneModule\n\n\n\n\n\nControlPaneComponent \n\nControlPaneComponent \n\nControlPaneComponent  -->\n\nControlPaneModule->ControlPaneComponent \n\n\n\n\n\nControlsModule\n\nControlsModule\n\nControlPaneModule -->\n\nControlsModule->ControlPaneModule\n\n\n\n\n\nFunctionsModule\n\nFunctionsModule\n\nControlPaneModule -->\n\nFunctionsModule->ControlPaneModule\n\n\n\n\n\nLegendModule\n\nLegendModule\n\nControlPaneModule -->\n\nLegendModule->ControlPaneModule\n\n\n\n\n\nOmapControlsModule\n\nOmapControlsModule\n\nControlPaneModule -->\n\nOmapControlsModule->ControlPaneModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nControlPaneModule -->\n\nSidenavModule->ControlPaneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/control-pane/control-pane.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ControlPaneComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ControlsModule\n                        \n                        \n                            FunctionsModule\n                        \n                        \n                            LegendModule\n                        \n                        \n                            OmapControlsModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ControlPaneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { ControlsModule } from '../../components/controls/controls.module';\nimport { LegendModule } from '../../components/legend/legend.module';\nimport { OmapControlsModule } from '../../components/omap-controls/omap-controls.module';\nimport { SidenavModule } from '../../components/sidenav/sidenav.module';\nimport { FunctionsModule } from '../functions/functions.module';\nimport { ControlPaneComponent } from './control-pane.component';\n\n@NgModule({\n  declarations: [ControlPaneComponent],\n  imports: [\n    CommonModule,\n    SidenavModule,\n    MatButtonModule,\n    LegendModule,\n    FunctionsModule,\n    ControlsModule,\n    RouterModule,\n    OmapControlsModule,\n  ],\n  exports: [ControlPaneComponent],\n})\nexport class ControlPaneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ControlsModule.html":{"url":"modules/ControlsModule.html","title":"module - ControlsModule","body":"\n                   \n\n\n\n\n    Modules\n    ControlsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ControlsModule\n\n\n\ncluster_ControlsModule_declarations\n\n\n\ncluster_ControlsModule_exports\n\n\n\n\nVisControlsComponent\n\nVisControlsComponent\n\n\n\nControlsModule\n\nControlsModule\n\nControlsModule -->\n\nVisControlsComponent->ControlsModule\n\n\n\n\n\nVisControlsComponent \n\nVisControlsComponent \n\nVisControlsComponent  -->\n\nControlsModule->VisControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/controls/controls.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisControlsComponent } from './vis-controls.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [VisControlsComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatSliderModule,\n    MatIconModule,\n    MatTooltipModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n  ],\n  exports: [VisControlsComponent],\n})\nexport class ControlsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DD.html":{"url":"interfaces/DD.html","title":"interface - DD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DOI.html":{"url":"interfaces/DOI.html","title":"interface - DOI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DOI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            doi\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Data.html":{"url":"classes/Data.html","title":"class - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeASMultiParentEdgesData\n                            \n                            \n                                makeASTreeData\n                            \n                            \n                                makeASTreeLinksData\n                            \n                            \n                                makeBimodalEdgesData\n                            \n                            \n                                makeBimodalNodesData\n                            \n                            \n                                makeDiscrepencyIdData\n                            \n                            \n                                makeDiscrepencyLabelData\n                            \n                            \n                                makeDuplicateIdData\n                            \n                            \n                                makeSearchIdsData\n                            \n                            \n                                makeSourcesClickData\n                            \n                            \n                                makeSourcesHoverData\n                            \n                            \n                                makeSourcesOfSourcesClickData\n                            \n                            \n                                makeSourcesOfSourcesHoverData\n                            \n                            \n                                makeTargetsClickData\n                            \n                            \n                                makeTargetsHoverData\n                            \n                            \n                                makeTargetsOfTargetsClickData\n                            \n                            \n                                makeTargetsOfTargetsHoverData\n                            \n                            \n                                makeViewModeClickData\n                            \n                            \n                                makeViewModeHoverData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/data.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currentSheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        treeData\n                                                  \n                                                        \n                                                                        TNode[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheetConfig\n                                                  \n                                                        \n                                                                        SheetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VegaDataInterface[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/data.ts:12\n                        \n                    \n\n            \n                \n                    List of data functions\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                treeData\n                                            \n                                                            TNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sheetConfig\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         VegaDataInterface[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeASMultiParentEdgesData\n                        \n                    \n                \n            \n            \n                \nmakeASMultiParentEdgesData(multiParentLinksData: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:130\n                        \n                    \n\n\n            \n                \n                        Function to create edges between multi parents (depricated)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                multiParentLinksData\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    multi parent links (depricated)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         VegaDataInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeASTreeData\n                        \n                    \n                \n            \n            \n                \nmakeASTreeData(_currentSheet: Sheet, treeData: TNode[], _config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:87\n                        \n                    \n\n\n            \n                \n                        Function to create vega data. Has tree config\nand the nodes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                treeData\n                                            \n                                                            TNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    tree data from tree service\n\n                                            \n                                        \n                                        \n                                                _config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         VegaDataInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeASTreeLinksData\n                        \n                    \n                \n            \n            \n                \nmakeASTreeLinksData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:111\n                        \n                    \n\n\n            \n                \n                        Creates links in the vega tree\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalEdgesData\n                        \n                    \n                \n            \n            \n                \nmakeBimodalEdgesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:168\n                        \n                    \n\n\n            \n                \n                        Stores the edges of the bimodal network\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalNodesData\n                        \n                    \n                \n            \n            \n                \nmakeBimodalNodesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:158\n                        \n                    \n\n\n            \n                \n                        Stores the nodes data of the bimodal network\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDiscrepencyIdData\n                        \n                    \n                \n            \n            \n                \nmakeDiscrepencyIdData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:52\n                        \n                    \n\n\n            \n                \n                        Stores the list of IDs that should show on the graph\nwhen Discrepency ID feature is used\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDiscrepencyLabelData\n                        \n                    \n                \n            \n            \n                \nmakeDiscrepencyLabelData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:74\n                        \n                    \n\n\n            \n                \n                        Stores the list of Labels that should show on the graph\nwhen Discrepency Labels feature is used\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDuplicateIdData\n                        \n                    \n                \n            \n            \n                \nmakeDuplicateIdData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:63\n                        \n                    \n\n\n            \n                \n                        Stores the list of IDs that should show on the graph\nwhen Duplicate ID feature is used\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSearchIdsData\n                        \n                    \n                \n            \n            \n                \nmakeSearchIdsData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:41\n                        \n                    \n\n\n            \n                \n                        Stores the list of IDs that should show on the graph\nwhen search is used\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSourcesClickData\n                        \n                    \n                \n            \n            \n                \nmakeSourcesClickData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:244\n                        \n                    \n\n\n            \n                \n                        Stores the sources of a node that has been clicked on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSourcesHoverData\n                        \n                    \n                \n            \n            \n                \nmakeSourcesHoverData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:212\n                        \n                    \n\n\n            \n                \n                        Stores the sources of a node that has been hovered on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSourcesOfSourcesClickData\n                        \n                    \n                \n            \n            \n                \nmakeSourcesOfSourcesClickData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:280\n                        \n                    \n\n\n            \n                \n                        Stores the sources or sources of a node that has been clicked on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSourcesOfSourcesHoverData\n                        \n                    \n                \n            \n            \n                \nmakeSourcesOfSourcesHoverData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:320\n                        \n                    \n\n\n            \n                \n                        Stores the sources or sources of a node that has been hovered on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTargetsClickData\n                        \n                    \n                \n            \n            \n                \nmakeTargetsClickData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:228\n                        \n                    \n\n\n            \n                \n                        Stores the targets of a node that has been clicked on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTargetsHoverData\n                        \n                    \n                \n            \n            \n                \nmakeTargetsHoverData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:196\n                        \n                    \n\n\n            \n                \n                        Stores the targets of a node that has been hovered on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTargetsOfTargetsClickData\n                        \n                    \n                \n            \n            \n                \nmakeTargetsOfTargetsClickData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:260\n                        \n                    \n\n\n            \n                \n                        Stores the targets or targets of a node that has been clicked on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTargetsOfTargetsHoverData\n                        \n                    \n                \n            \n            \n                \nmakeTargetsOfTargetsHoverData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:300\n                        \n                    \n\n\n            \n                \n                        Stores the targets or targets of a node that has been hovered on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeViewModeClickData\n                        \n                    \n                \n            \n            \n                \nmakeViewModeClickData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:340\n                        \n                    \n\n\n            \n                \n                        Stores the nodes whole opacity needs to be reduced when a node is clicked on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeViewModeHoverData\n                        \n                    \n                \n            \n            \n                \nmakeViewModeHoverData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:356\n                        \n                    \n\n\n            \n                \n                        Stores the nodes whole opacity needs to be reduced when a node is hovered on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Data as VegaDataInterface } from 'vega';\nimport { Sheet, SheetConfig } from '../../../models/sheet.model';\nimport { TNode } from '../../../models/tree.model';\n\nexport class Data {\n  static create(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig): VegaDataInterface[] {\n    return new Data(currentSheet, treeData, sheetConfig).data;\n  }\n  /**\n   * List of data functions\n   */\n  data: VegaDataInterface[];\n\n  constructor(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig) {\n    this.data = [\n      this.makeASTreeData(currentSheet, treeData, sheetConfig),\n      this.makeASTreeLinksData(),\n      this.makeBimodalNodesData(),\n      this.makeBimodalEdgesData(),\n      this.makeSourcesClickData(),\n      this.makeSourcesHoverData(),\n      this.makeTargetsClickData(),\n      this.makeTargetsHoverData(),\n      this.makeSourcesOfSourcesClickData(),\n      this.makeSourcesOfSourcesHoverData(),\n      this.makeTargetsOfTargetsClickData(),\n      this.makeTargetsOfTargetsHoverData(),\n      this.makeViewModeClickData(),\n      this.makeViewModeHoverData(),\n      this.makeSearchIdsData(),\n      this.makeDiscrepencyLabelData(),\n      this.makeDiscrepencyIdData(),\n      this.makeDuplicateIdData(),\n    ];\n  }\n\n  /**\n   * Stores the list of IDs that should show on the graph\n   * when search is used\n   */\n  makeSearchIdsData(): VegaDataInterface {\n    return {\n      name: 'search',\n      values: [],\n    };\n  }\n\n  /**\n   * Stores the list of IDs that should show on the graph\n   * when Discrepency ID feature is used\n   */\n  makeDiscrepencyIdData(): VegaDataInterface {\n    return {\n      name: 'discrepencyId',\n      values: [],\n    };\n  }\n\n  /**\n   * Stores the list of IDs that should show on the graph\n   * when Duplicate ID feature is used\n   */\n  makeDuplicateIdData(): VegaDataInterface {\n    return {\n      name: 'duplicateId',\n      values: [],\n    };\n  }\n\n  /**\n   * Stores the list of Labels that should show on the graph\n   * when Discrepency Labels feature is used\n   */\n  makeDiscrepencyLabelData(): VegaDataInterface {\n    return {\n      name: 'discrepencyLabel',\n      values: [],\n    };\n  }\n\n  /**\n   * Function to create vega data. Has tree config\n   * and the nodes\n   *\n   * @param treeData tree data from tree service\n   */\n  makeASTreeData(_currentSheet: Sheet, treeData: TNode[], _config: SheetConfig): VegaDataInterface {\n    return {\n      name: 'tree',\n      values: treeData,\n      transform: [\n        {\n          type: 'stratify',\n          key: 'id',\n          parentKey: 'parent',\n        },\n        {\n          type: 'tree',\n          method: 'cluster',\n          size: [{ signal: 'as_height' }, { signal: 'as_width' }],\n          separation: false,\n          as: ['y', 'x', 'depth', 'children'],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Creates links in the vega tree\n   */\n  makeASTreeLinksData(): VegaDataInterface {\n    return {\n      name: 'links',\n      source: 'tree',\n      transform: [\n        { type: 'treelinks' },\n        {\n          type: 'linkpath',\n          orient: 'horizontal',\n          shape: 'diagonal',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Function to create edges between multi parents (depricated)\n   * @param multiParentLinksData multi parent links (depricated)\n   */\n  makeASMultiParentEdgesData(multiParentLinksData: unknown[]): VegaDataInterface {\n    return {\n      name: 'multi_parent_edges',\n      values: multiParentLinksData,\n      transform: [\n        {\n          type: 'lookup',\n          from: 'tree',\n          key: 'id',\n          fields: ['s', 't'],\n          as: ['source', 'target'],\n        },\n        {\n          type: 'linkpath',\n          sourceX: 'source.x',\n          sourceY: 'source.y',\n          targetX: 'target.x',\n          targetY: 'target.y',\n          orient: 'horizontal',\n          shape: 'curve',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the nodes data of the bimodal network\n   */\n  makeBimodalNodesData(): VegaDataInterface {\n    return {\n      name: 'nodes',\n      values: [],\n    };\n  }\n\n  /**\n   * Stores the edges of the bimodal network\n   */\n  makeBimodalEdgesData(): VegaDataInterface {\n    return {\n      name: 'edges',\n      values: [],\n      transform: [\n        {\n          type: 'lookup',\n          from: 'nodes',\n          key: 'id',\n          fields: ['s', 't', 'pathColor'],\n          as: ['source', 'target', 'c'],\n        },\n        {\n          type: 'linkpath',\n          sourceX: 'source.x',\n          sourceY: 'source.y',\n          targetX: 'target.x',\n          targetY: 'target.y',\n          orient: 'horizontal',\n          shape: 'diagonal',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the targets of a node that has been hovered on\n   */\n  makeTargetsHoverData(): VegaDataInterface {\n    return {\n      name: 'targets_hovered_array',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(node_targets__hover, datum.id) !== -1',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the sources of a node that has been hovered on\n   */\n  makeSourcesHoverData(): VegaDataInterface {\n    return {\n      name: 'sources_hovered_array',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(node_sources__hover, datum.id) !== -1',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the targets of a node that has been clicked on\n   */\n  makeTargetsClickData(): VegaDataInterface {\n    return {\n      name: 'targets_clicked_array',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(targets__click, datum.id) !== -1',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the sources of a node that has been clicked on\n   */\n  makeSourcesClickData(): VegaDataInterface {\n    return {\n      name: 'sources_clicked_array',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(sources__click, datum.id) !== -1',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the targets or targets of a node that has been clicked on\n   */\n  makeTargetsOfTargetsClickData(): VegaDataInterface {\n    return {\n      name: 'targets_of_targets__click',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(targets__click, datum.id) !== -1',\n        },\n        {\n          type: 'flatten',\n          fields: ['targets'],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the sources or sources of a node that has been clicked on\n   */\n  makeSourcesOfSourcesClickData(): VegaDataInterface {\n    return {\n      name: 'sources_of_sources__click',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(sources__click, datum.id) !== -1',\n        },\n        {\n          type: 'flatten',\n          fields: ['sources'],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the targets or targets of a node that has been hovered on\n   */\n  makeTargetsOfTargetsHoverData(): VegaDataInterface {\n    return {\n      name: 'targets_of_targets__hover',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(node_targets__hover, datum.id) !== -1',\n        },\n        {\n          type: 'flatten',\n          fields: ['targets'],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the sources or sources of a node that has been hovered on\n   */\n  makeSourcesOfSourcesHoverData(): VegaDataInterface {\n    return {\n      name: 'sources_of_sources__hover',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(node_sources__hover, datum.id) !== -1',\n        },\n        {\n          type: 'flatten',\n          fields: ['sources'],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the nodes whole opacity needs to be reduced when a node is clicked on\n   */\n  makeViewModeClickData(): VegaDataInterface {\n    return {\n      name: 'view_mode__click',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'node__click === datum.id || indata(\"sources_clicked_array\", \"id\", datum.id) || indata(\"targets_clicked_array\", \"id\", datum.id)',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the nodes whole opacity needs to be reduced when a node is hovered on\n   */\n  makeViewModeHoverData(): VegaDataInterface {\n    return {\n      name: 'view_mode__hover',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'node__hover === datum.id || indata(\"sources_hovered_array\", \"id\", datum.id) || indata(\"targets_hovered_array\", \"id\", datum.id)',\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugLogsComponent.html":{"url":"components/DebugLogsComponent.html","title":"component - DebugLogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DebugLogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/debug-logs/debug-logs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-debug-logs\n            \n\n\n\n            \n                styleUrls\n                ./debug-logs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-logs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentSheet\n                            \n                            \n                                logs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeDebug\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentSheet\n                    \n                \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/debug-logs/debug-logs.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logs\n                    \n                \n                \n                    \n                        Type :         Logs\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/debug-logs/debug-logs.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeDebug\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/debug-logs/debug-logs.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Sheet } from '../../models/sheet.model';\nimport { Logs } from '../../models/ui.model';\n\n@Component({\n  selector: 'app-debug-logs',\n  templateUrl: './debug-logs.component.html',\n  styleUrls: ['./debug-logs.component.scss'],\n})\nexport class DebugLogsComponent {\n  @Input() currentSheet!: Sheet;\n  @Input() logs!: Logs;\n  @Output() closeDebug = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        \n          \n            \n              {{ l.icon }}\n              \n                \n              \n            \n            \n              error\n              \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              error\n              \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              error\n              \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              error\n              \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n          \n        \n      \n      \n        \n          \n            {{ l.icon }}\n            \n              \n            \n          \n          \n            error\n            \n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n            error\n            \n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n            error\n            \n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n            error\n            \n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./debug-logs.component.scss\n                \n                .debug-log {\n  min-width: 31.25rem;\n}\n\n.logsList .mat-list-item {\n  height: auto;\n  width: 100%;\n}\n\n::ng-deep .mat-list-item-content {\n  padding: 0 !important;\n}\n\n:host ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content {\n  align-items: flex-start;\n}\n\n.i2 {\n  font-size: 12pt;\n  margin-top: 0.3125rem;\n  margin-bottom: 0.3125rem;\n  font-weight: 300;\n}\n\n.check_circle {\n  color: #66bb6a !important;\n}\n\n.error {\n  color: #ffca28 !important;\n}\n\n.cancel {\n  color: #ff5722 !important;\n}\n.mat-list-container {\n  padding: 0;\n}\n.list-item-first {\n  padding-left: 0;\n}\n.error-icon-list {\n  color: grey;\n}\n.list-item-section {\n  width: 100%;\n}\n.expansion-panel-container {\n  box-shadow: none !important;\n}\n.expansion-panel-header {\n  width: 99%;\n}\n.expansion-panel-content {\n  text-align: start;\n  max-height: 18.75rem;\n  overflow: auto;\n}\n.error-list-container {\n  width: 100%;\n  display: flex !important;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ l.icon }}                                                                                  error                                                                                                                                                                                                                                                                                                          error                                                                                                                                                                                                                                                                                                          error                                                                                                                                                                                                                                                                                                          error                                                                                                                                                                                                                                                                                                                                            {{ l.icon }}                                                                      error                                                                                                                                                                                                                                                                        error                                                                                                                                                                                                                                                                        error                                                                                                                                                                                                                                                                        error                                                                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugLogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DebugLogsModule.html":{"url":"modules/DebugLogsModule.html","title":"module - DebugLogsModule","body":"\n                   \n\n\n\n\n    Modules\n    DebugLogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DebugLogsModule\n\n\n\ncluster_DebugLogsModule_exports\n\n\n\ncluster_DebugLogsModule_imports\n\n\n\ncluster_DebugLogsModule_declarations\n\n\n\n\nDebugLogsComponent\n\nDebugLogsComponent\n\n\n\nDebugLogsModule\n\nDebugLogsModule\n\nDebugLogsModule -->\n\nDebugLogsComponent->DebugLogsModule\n\n\n\n\n\nDebugLogsComponent \n\nDebugLogsComponent \n\nDebugLogsComponent  -->\n\nDebugLogsModule->DebugLogsComponent \n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nDebugLogsModule -->\n\nSidenavHeaderModule->DebugLogsModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nDebugLogsModule -->\n\nSidenavModule->DebugLogsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/debug-logs/debug-logs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DebugLogsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SidenavHeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DebugLogsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavModule } from '../sidenav/sidenav.module';\nimport { DebugLogsComponent } from './debug-logs.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SidenavHeaderModule } from '../sidenav-header/sidenav-header.module';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@NgModule({\n  declarations: [DebugLogsComponent],\n  imports: [\n    CommonModule,\n    SidenavModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatTabsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SidenavHeaderModule,\n  ],\n  exports: [DebugLogsComponent],\n})\nexport class DebugLogsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Degree.html":{"url":"interfaces/Degree.html","title":"interface - Degree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Degree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            proteinPresence\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proteinPresence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proteinPresence:         PROTEIN_PRESENCE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PROTEIN_PRESENCE\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteCompareSheet.html":{"url":"classes/DeleteCompareSheet.html","title":"class - DeleteCompareSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteCompareSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(i: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        i\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[DELETE] Compare Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiscrepencyId.html":{"url":"classes/DiscrepencyId.html","title":"class - DiscrepencyId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiscrepencyId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                discrepencyStructures\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discrepencyStructures: DiscrepencyStructure[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discrepencyStructures\n                                                  \n                                                        \n                                                                    DiscrepencyStructure[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        discrepencyStructures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DiscrepencyStructure[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[DISCREPENCY] Update discrepency Id List'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiscrepencyLabel.html":{"url":"classes/DiscrepencyLabel.html","title":"class - DiscrepencyLabel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiscrepencyLabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                discrepencyStructures\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discrepencyStructures: DiscrepencyStructure[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discrepencyStructures\n                                                  \n                                                        \n                                                                    DiscrepencyStructure[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        discrepencyStructures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DiscrepencyStructure[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[DISCREPENCY] Update discrepency Label List'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscrepencyStructure.html":{"url":"interfaces/DiscrepencyStructure.html","title":"interface - DiscrepencyStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscrepencyStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            groupName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DoSearch.html":{"url":"classes/DoSearch.html","title":"class - DoSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DoSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                lastClickedOption\n                            \n                            \n                                    Public\n                                searchStructures\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(searchStructures: SearchStructure[], lastClickedOption: SearchStructure)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchStructures\n                                                  \n                                                        \n                                                                    SearchStructure[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastClickedOption\n                                                  \n                                                        \n                                                                        SearchStructure\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastClickedOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchStructure\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchStructures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SearchStructure[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SEARCH] Update Search List'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocsComponent.html":{"url":"components/DocsComponent.html","title":"component - DocsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/docs/docs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-docs\n            \n\n\n\n            \n                styleUrls\n                ./docs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./docs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                copyrightYear\n                            \n                            \n                                docsData\n                            \n                            \n                                    Public\n                                docsService\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faEnvelope\n                            \n                            \n                                faPhone\n                            \n                            \n                                    Public\n                                ga\n                            \n                            \n                                masterSheetLink\n                            \n                            \n                                REGISTRY\n                            \n                            \n                                selected\n                            \n                            \n                                showHeader\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                onLatest\n                            \n                            \n                                openData\n                            \n                            \n                                openDataOld\n                            \n                            \n                                openGithub\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, router: Router, activatedRoute: ActivatedRoute, docsService: DocsService, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/docs/docs.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        docsService\n                                                  \n                                                        \n                                                                        DocsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(idx: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/docs/docs.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idx\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLatest\n                        \n                    \n                \n            \n            \n                \nonLatest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/docs/docs.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openData\n                        \n                    \n                \n            \n            \n                \nopenData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/docs/docs.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDataOld\n                        \n                    \n                \n            \n            \n                \nopenDataOld()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/docs/docs.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGithub\n                        \n                    \n                \n            \n            \n                \nopenGithub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/docs/docs.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyrightYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        docsData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        docsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DocsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faEnvelope\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faEnvelope\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPhone\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterSheetLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REGISTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REGISTRY\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { faChevronRight, faEnvelope, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ConfigService } from '../../app-config.service';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { DocsService } from '../../services/docs.service';\nimport { REGISTRY } from '../../static/docs';\n\n@Component({\n  selector: 'app-docs',\n  templateUrl: './docs.component.html',\n  styleUrls: ['./docs.component.scss'],\n})\nexport class DocsComponent implements OnInit {\n  window = window;\n  faPhone = faPhone;\n  faEnvelope = faEnvelope;\n  faChevronRight = faChevronRight;\n  showHeader = true;\n  docsData!: string;\n  REGISTRY = REGISTRY;\n  selected!: number;\n  copyrightYear = new Date().getFullYear();\n  masterSheetLink!: string;\n\n  constructor(\n    public configService: ConfigService,\n    private readonly router: Router,\n    public activatedRoute: ActivatedRoute,\n    public docsService: DocsService,\n    public ga: GoogleAnalyticsService,\n  ) {\n    this.configService.config$.subscribe((config) => {\n      this.masterSheetLink = config['masterSheetLink'] as string;\n    });\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params) => {\n      if (this.docsService.getID(params['id']) >= 0) {\n        this.selected = this.docsService.getID(params['id']);\n        this.docsService.getData(params['id']);\n      } else {\n        this.router.navigate(['/docs', 'introduction']);\n      }\n    });\n\n    this.docsService.docsData.subscribe((data) => {\n      if (data) {\n        this.docsData = data;\n      }\n    });\n  }\n\n  onChange(idx: number) {\n    this.selected = idx;\n    const title = this.docsService.getTitle(idx);\n    this.router.navigate(['/docs', title]);\n    // Router navigation already fires Google Analytics events, see app.component.ts\n  }\n\n  onLatest() {\n    this.router.navigate(['/']);\n    this.ga.event(GaAction.NAV, GaCategory.DOCS, 'Back to Latest Release');\n  }\n\n  openGithub() {\n    window.open('https://github.com/hubmapconsortium/ccf-asct-reporter', '_blank');\n    this.ga.event(GaAction.NAV, GaCategory.DOCS, 'Open Github');\n  }\n\n  openData() {\n    window.open(this.masterSheetLink, '_blank');\n    this.ga.event(GaAction.NAV, GaCategory.DOCS, 'Open Data Tables');\n  }\n\n  openDataOld() {\n    window.open(\n      'https://docs.google.com/spreadsheets/d/1j_SLhFipRWUcRZrCDfNH15OWoiLf7cJks7NVppe3htI/edit#gid=1268820100',\n      '_blank',\n    );\n    this.ga.event(GaAction.NAV, GaCategory.DOCS, 'Open Old Data Tables');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            Master Tables\n            GitHub\n            Old Tables\n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          Latest Release\n          \n        \n        \n        \n          {{ item.title }}\n        \n      \n\n      \n        \n          \n            ASCT+B REPORTER DOCS\n            Welcome to the ASCT+B Reporter Documentation!\n          \n\n          \n            \n          \n\n          \n            \n          \n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./docs.component.scss\n                \n                .dark {\n  background-color: #262626;\n}\n\na {\n  color: white;\n}\n\n.navbar {\n  position: fixed;\n  z-index: 100;\n}\n\n.title2 {\n  font-family: 'Poppins', sans-serif;\n  font-size: 3.125rem;\n  line-height: 2.75rem;\n  font-weight: 700;\n  hyphens: auto;\n  letter-spacing: 0.25rem;\n}\n\n.desc {\n  font-size: 14pt;\n  font-weight: 400;\n  line-height: 1.5625rem;\n}\n\n.top-padding {\n  padding-top: 8rem;\n}\n\n.drawer {\n  width: 18rem;\n}\n\nh1 {\n  font-weight: 800 !important;\n  font-family: 'Poppins', sans-serif;\n}\n\n.menu-item {\n  transform: all 0.3s;\n  cursor: pointer;\n\n  &:hover:not(.bg-light) {\n    transition: all 0.3s;\n    background-color: #f2f2f2 !important;\n  }\n}\n\n.bg-light {\n  color: #444a65;\n  background-color: #e1e1e1 !important;\n}\n\n.nav-height {\n  padding-top: 62px;\n}\n\n.goto {\n  transition: all 0.3s;\n  cursor: pointer;\n\n  &:hover {\n    color: white;\n    background-color: #444a65;\n  }\n\n  &:active {\n    color: white;\n    background-color: #2e3243;\n  }\n}\n\n.md-file ::ng-deep {\n  a {\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n}\n\n.icon-right {\n  padding-right: 1rem;\n}\n\n.h6-title {\n  padding-left: 3rem;\n}\n\n.navbar-options {\n  a {\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n  .github {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Master Tables            GitHub            Old Tables                                                            Latest Release                                            {{ item.title }}                                                  ASCT+B REPORTER DOCS            Welcome to the ASCT+B Reporter Documentation!                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocsModule.html":{"url":"modules/DocsModule.html","title":"module - DocsModule","body":"\n                   \n\n\n\n\n    Modules\n    DocsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocsModule\n\n\n\ncluster_DocsModule_declarations\n\n\n\ncluster_DocsModule_exports\n\n\n\ncluster_DocsModule_imports\n\n\n\n\nDocsComponent\n\nDocsComponent\n\n\n\nDocsModule\n\nDocsModule\n\nDocsModule -->\n\nDocsComponent->DocsModule\n\n\n\n\n\nDocsComponent \n\nDocsComponent \n\nDocsComponent  -->\n\nDocsModule->DocsComponent \n\n\n\n\n\nDocsNavModule\n\nDocsNavModule\n\nDocsModule -->\n\nDocsNavModule->DocsModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nDocsModule -->\n\nFooterModule->DocsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/docs/docs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DocsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DocsNavModule\n                        \n                        \n                            FooterModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DocsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocsComponent } from './docs.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { DocsNavModule } from './docs-nav/docs-nav.module';\nimport { RouterModule } from '@angular/router';\nimport { FooterModule } from '../../components/footer/footer.module';\n\n@NgModule({\n  declarations: [DocsComponent],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    MarkdownModule,\n    FontAwesomeModule,\n    DocsNavModule,\n    RouterModule,\n    FooterModule,\n  ],\n  exports: [DocsComponent],\n})\nexport class DocsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocsNavComponent.html":{"url":"components/DocsNavComponent.html","title":"component - DocsNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocsNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/docs/docs-nav/docs-nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-docs-nav\n            \n\n\n\n            \n                styleUrls\n                ./docs-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./docs-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faArrowLeft\n                            \n                            \n                                faArrowRight\n                            \n                            \n                                REGISTRY\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                next\n                            \n                            \n                                prev\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nextClick\n                            \n                            \n                                prevClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        next\n                    \n                \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prev\n                    \n                \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nextClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prevClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faArrowLeft\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faArrowLeft\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faArrowRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faArrowRight\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REGISTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REGISTRY\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { REGISTRY } from '../../../static/docs';\n\n@Component({\n  selector: 'app-docs-nav',\n  templateUrl: './docs-nav.component.html',\n  styleUrls: ['./docs-nav.component.scss'],\n})\nexport class DocsNavComponent {\n  REGISTRY = REGISTRY;\n  faArrowRight = faArrowRight;\n  faArrowLeft = faArrowLeft;\n\n  @Input() next: number | null = null;\n  @Input() prev: number | null = null;\n  @Output() nextClick = new EventEmitter();\n  @Output() prevClick = new EventEmitter();\n}\n\n    \n\n    \n        \n  = 0\"\n    (click)=\"prevClick.emit()\"\n  >\n    \n    \n      Previous\n      {{ REGISTRY[prev].title }}\n    \n  \n\n  \n    \n      Next\n      {{ REGISTRY[next].title }}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./docs-nav.component.scss\n                \n                .bip {\n  font-size: 10pt;\n}\n\n.item {\n  border-radius: 0.5rem;\n  border: 2px solid #ececec;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    transition: all 0.2s;\n    border-color: #bfbfbf;\n  }\n\n  &:active {\n    background-color: #f4f4f4;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  = 0\"    (click)=\"prevClick.emit()\"  >              Previous      {{ REGISTRY[prev].title }}                  Next      {{ REGISTRY[next].title }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocsNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocsNavModule.html":{"url":"modules/DocsNavModule.html","title":"module - DocsNavModule","body":"\n                   \n\n\n\n\n    Modules\n    DocsNavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocsNavModule\n\n\n\ncluster_DocsNavModule_declarations\n\n\n\ncluster_DocsNavModule_exports\n\n\n\n\nDocsNavComponent\n\nDocsNavComponent\n\n\n\nDocsNavModule\n\nDocsNavModule\n\nDocsNavModule -->\n\nDocsNavComponent->DocsNavModule\n\n\n\n\n\nDocsNavComponent \n\nDocsNavComponent \n\nDocsNavComponent  -->\n\nDocsNavModule->DocsNavComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/docs/docs-nav/docs-nav.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DocsNavComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DocsNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { DocsNavComponent } from './docs-nav.component';\n\n@NgModule({\n  declarations: [DocsNavComponent],\n  imports: [CommonModule, FontAwesomeModule],\n  exports: [DocsNavComponent],\n})\nexport class DocsNavModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocsService.html":{"url":"injectables/DocsService.html","title":"injectable - DocsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/docs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docsData\n                            \n                            \n                                REGISTRY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getID\n                            \n                            \n                                getTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/docs.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/docs.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getID\n                        \n                    \n                \n            \n            \n                \ngetID(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/docs.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTitle\n                        \n                    \n                \n            \n            \n                \ngetTitle(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/docs.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        docsData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/docs.service.ts:18\n                        \n                    \n\n            \n                \n                    Behavior subject to return the markdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REGISTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REGISTRY\n                    \n                \n                    \n                        \n                                Defined in src/app/services/docs.service.ts:13\n                        \n                    \n\n            \n                \n                    List of all the docs pages\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { REGISTRY } from '../static/docs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DocsService {\n  /**\n   * List of all the docs pages\n   */\n  REGISTRY = REGISTRY;\n\n  /**\n   * Behavior subject to return the markdown\n   */\n  docsData = new BehaviorSubject('');\n  constructor(private readonly http: HttpClient) {}\n\n  getData(title: string) {\n    const index = REGISTRY.map((e) => e.urlTitle).indexOf(title);\n    this.http.get(REGISTRY[index].path, { responseType: 'text' }).subscribe((data) => {\n      this.docsData.next(data);\n    });\n  }\n\n  getID(title: string) {\n    return REGISTRY.map((e) => e.urlTitle).indexOf(title);\n  }\n\n  getTitle(id: number) {\n    return REGISTRY[id].urlTitle;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DoiComponent.html":{"url":"components/DoiComponent.html","title":"component - DoiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DoiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/doi/doi.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-doi\n            \n\n\n\n            \n                styleUrls\n                ./doi.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./doi.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                error\n                            \n                            \n                                loading\n                            \n                            \n                                noId\n                            \n                            \n                                    Public\n                                sheetRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DOI[], sheetRef: MatBottomSheetRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/doi/doi.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DOI[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheetRef\n                                                  \n                                                        \n                                                                    MatBottomSheetRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/doi/doi.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DOI[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_BOTTOM_SHEET_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/doi/doi.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Error\n\n                    \n                \n                \n                    \n                        Default value : { hasError: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/doi/doi.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/doi/doi.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/doi/doi.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheetRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatBottomSheetRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/doi/doi.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { Error } from '../../models/response.model';\nimport { DOI } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-doi',\n  templateUrl: './doi.component.html',\n  styleUrls: ['./doi.component.scss'],\n})\nexport class DoiComponent implements OnInit {\n  loading = true;\n  noId = false;\n  error: Error = { hasError: false };\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: DOI[],\n    public sheetRef: MatBottomSheetRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = false;\n\n    /**\n     * Trimming the intial part of the doi property as it as \"DOI: \" in its respective property.\n     */\n    this.data = this.data.map((item) => {\n      console.log(item);\n      if (item.doi.toUpperCase().search('DOI') === 0) {\n        item.doi = item.doi.substring(5);\n      }\n      return item;\n    });\n  }\n\n  close() {\n    this.sheetRef.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      DOI Details\n    \n    \n      \n        close\n      \n    \n  \n  \n    \n      \n        DOI: \n        \n          {{ item.doi }}\n        \n\n        \n\n        Id: \n        \n          {{ item.id }}\n        \n\n        \n\n        Notes: \n        \n          {{ item.notes }}\n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./doi.component.scss\n                \n                .doi {\n  max-height: 18.75rem;\n  overflow: auto;\n}\n.loading-wait {\n  width: 10%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            DOI Details                      close                                DOI:                   {{ item.doi }}                        Id:                   {{ item.id }}                        Notes:                   {{ item.notes }}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DoiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DoiModule.html":{"url":"modules/DoiModule.html","title":"module - DoiModule","body":"\n                   \n\n\n\n\n    Modules\n    DoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DoiModule\n\n\n\ncluster_DoiModule_declarations\n\n\n\ncluster_DoiModule_exports\n\n\n\n\nDoiComponent\n\nDoiComponent\n\n\n\nDoiModule\n\nDoiModule\n\nDoiModule -->\n\nDoiComponent->DoiModule\n\n\n\n\n\nDoiComponent \n\nDoiComponent \n\nDoiComponent  -->\n\nDoiModule->DoiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/doi/doi.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DoiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DoiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DoiComponent } from './doi.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n\n@NgModule({\n  declarations: [DoiComponent],\n  imports: [CommonModule, MatIconModule, MatButtonModule, MatBottomSheetModule],\n  exports: [DoiComponent],\n})\nexport class DoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateId.html":{"url":"classes/DuplicateId.html","title":"class - DuplicateId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                discrepencyStructures\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discrepencyStructures: DiscrepencyStructure[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discrepencyStructures\n                                                  \n                                                        \n                                                                    DiscrepencyStructure[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        discrepencyStructures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DiscrepencyStructure[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[DISCREPENCY] Update duplicate Id List'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityWithNoOtherEntity.html":{"url":"interfaces/EntityWithNoOtherEntity.html","title":"interface - EntityWithNoOtherEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityWithNoOtherEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            organName\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Error.html":{"url":"interfaces/Error.html","title":"interface - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/response.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hasError\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasGidError\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            msg\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasGidError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasGidError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: any;\n  msg: string;\n  status: number;\n}\n\nexport interface Error {\n  hasError?: boolean;\n  msg?: string;\n  status?: number;\n  hasGidError?: boolean;\n}\n\nexport enum SnackbarType {\n  success = 'success',\n  error = 'error',\n  warning = 'warning',\n}\n\nexport interface ExportVega {\n  option: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  spec?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/error/error.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n\n\n            \n                styleUrls\n                ./error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/error/error.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Error } from '../../models/response.model';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n})\nexport class ErrorComponent {\n  @Input() error!: Error;\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        Error!\n        \n          The visualization could not be rendered due to some errors. Below mentioned are a list of problems that\n            could’ve occurred.\n        \n        \n          \n            \n            \n              Please copy and use the sheet URL from the Address bar like from above example.\n            \n            \n              Do not use the Share URL from Google Sheets (URLs ending with ?usp=sharing).\n            \n            \n              The data version that you selected is deprecated for the sheet. Click on this link to see the deprecated\n              sheets.\n            \n            The format of the data didn't match the format of the master tables.\n            Network issues.\n          \n          \n            To report this issue, please reach out to us,\n            here.\n          \n        \n        \n          {{ error.msg }}\n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./error.component.scss\n                \n                .lh {\n  line-height: 1.5625rem;\n}\n.error-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.contact-us-link {\n  color: rgb(64, 132, 201);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Error!                  The visualization could not be rendered due to some errors. Below mentioned are a list of problems that            could’ve occurred.                                                                Please copy and use the sheet URL from the Address bar like from above example.                                      Do not use the Share URL from Google Sheets (URLs ending with ?usp=sharing).                                      The data version that you selected is deprecated for the sheet. Click on this link to see the deprecated              sheets.                        The format of the data didn\\'t match the format of the master tables.            Network issues.                                To report this issue, please reach out to us,            here.                                    {{ error.msg }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_exports\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nErrorComponent->ErrorModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nErrorModule->ErrorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/error/error.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorComponent } from './error.component';\n\n@NgModule({\n  declarations: [ErrorComponent],\n  imports: [CommonModule],\n  exports: [ErrorComponent],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExportVega.html":{"url":"interfaces/ExportVega.html","title":"interface - ExportVega","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExportVega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/response.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            option\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spec\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        option\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        option:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spec:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: any;\n  msg: string;\n  status: number;\n}\n\nexport interface Error {\n  hasError?: boolean;\n  msg?: string;\n  status?: number;\n  hasGidError?: boolean;\n}\n\nexport enum SnackbarType {\n  success = 'success',\n  error = 'error',\n  warning = 'warning',\n}\n\nexport interface ExportVega {\n  option: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  spec?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchAllOrganData.html":{"url":"classes/FetchAllOrganData.html","title":"class - FetchAllOrganData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchAllOrganData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: Sheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] All Organ Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchCompareData.html":{"url":"classes/FetchCompareData.html","title":"class - FetchCompareData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchCompareData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                compareData\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(compareData: CompareData[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        compareData\n                                                  \n                                                        \n                                                                        CompareData[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        compareData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompareData[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Compare Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchDataFromAssets.html":{"url":"classes/FetchDataFromAssets.html","title":"class - FetchDataFromAssets","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchDataFromAssets\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(version: string, sheet: Sheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Data from Assets'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchInitialPlaygroundData.html":{"url":"classes/FetchInitialPlaygroundData.html","title":"class - FetchInitialPlaygroundData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchInitialPlaygroundData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet?: Sheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Initial Playground Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchPlaygroundUploadData.html":{"url":"classes/FetchPlaygroundUploadData.html","title":"class - FetchPlaygroundUploadData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchPlaygroundUploadData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: string[][])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:87\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    string[][]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Playground Upload Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSelectedOrganData.html":{"url":"classes/FetchSelectedOrganData.html","title":"class - FetchSelectedOrganData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSelectedOrganData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                comparisonDetails\n                            \n                            \n                                    Public\n                                omapSelectedOrgans\n                            \n                            \n                                    Public\n                                selectedOrgans\n                            \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: Sheet, selectedOrgans: string[], omapSelectedOrgans: string[], comparisonDetails?: CompareData[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedOrgans\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        omapSelectedOrgans\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comparisonDetails\n                                                  \n                                                        \n                                                                        CompareData[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        comparisonDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompareData[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        omapSelectedOrgans\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedOrgans\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Selected Organs Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSheetData.html":{"url":"classes/FetchSheetData.html","title":"class - FetchSheetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSheetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: Sheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Sheet Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchValidOmapProtiens.html":{"url":"classes/FetchValidOmapProtiens.html","title":"class - FetchValidOmapProtiens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchValidOmapProtiens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Valid OMAP Protiens Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:107\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadComponent.html":{"url":"components/FileUploadComponent.html","title":"component - FileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/file-upload/file-upload.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                Validator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}\n                            {\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}\n                \n            \n\n\n            \n                selector\n                app-file-upload\n            \n\n\n\n            \n                styleUrls\n                ./file-upload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fileName\n                            \n                            \n                                fileUploadError\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                onValidatorChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileFormDataEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        fileFormDataEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/file-upload/file-upload.component.ts:31\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(fileUpload: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileUpload\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnValidatorChange\n                        \n                    \n                \n            \n            \n                \nregisterOnValidatorChange(onValidatorChange: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onValidatorChange\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(_control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/file-upload/file-upload.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileUploadError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/file-upload/file-upload.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/file-upload/file-upload.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/file-upload/file-upload.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onValidatorChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/file-upload/file-upload.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: FileUploadComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: FileUploadComponent,\n    },\n  ],\n})\nexport class FileUploadComponent implements ControlValueAccessor, Validator {\n  fileName = '';\n\n  @Output() fileFormDataEvent = new EventEmitter();\n\n  onFileSelected(event: Event) {\n    const file = (event.target as HTMLInputElement | null)?.files?.[0];\n\n    if (file) {\n      this.fileName = file.name;\n      const formData = new FormData();\n      formData.append('csvFile', file);\n      this.fileFormDataEvent.emit(formData);\n      this.onChange(this.fileName);\n    }\n  }\n\n  fileUploadError = false;\n\n  onChange = (_fileName: string) => {\n    // Intentionally empty\n  };\n\n  onTouched = () => {\n    // Intentionally empty\n  };\n\n  onValidatorChange = () => {\n    // Intentionally empty\n  };\n\n  onClick(fileUpload: HTMLInputElement) {\n    this.onTouched();\n    fileUpload.click();\n  }\n\n  writeValue(value: string) {\n    this.fileName = value;\n  }\n\n  registerOnChange(onChange: (value: string) => void) {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void) {\n    this.onTouched = onTouched;\n  }\n\n  registerOnValidatorChange(onValidatorChange: () => void) {\n    this.onValidatorChange = onValidatorChange;\n  }\n\n  validate(_control: AbstractControl): ValidationErrors | null {\n    return null;\n  }\n}\n\n    \n\n    \n        \n\n\n  upload_file\n  Upload file (CSV or XLSX)\n\n\n\n  {{ fileName || 'No file loaded' }}\n\n\n    \n\n    \n                \n                    ./file-upload.component.scss\n                \n                :host {\n  display: block;\n  width: 25rem;\n  height: 6.25rem;\n\n  .file-input {\n    display: none;\n  }\n\n  .file-upload {\n    color: #757575;\n  }\n\n  button {\n    margin-top: 2rem;\n    display: flex;\n    width: 14.688rem;\n    height: 3.125rem;\n    align-items: center;\n    background: white;\n    border-radius: 0.3rem;\n    border-color: #9d9e9a;\n    border-style: solid;\n  }\n\n  mat-icon {\n    color: #9d9e9a;\n  }\n\n  .file-name {\n    padding-top: 0.7rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  upload_file  Upload file (CSV or XLSX)  {{ fileName || \\'No file loaded\\' }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileUploadModule.html":{"url":"modules/FileUploadModule.html","title":"module - FileUploadModule","body":"\n                   \n\n\n\n\n    Modules\n    FileUploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileUploadModule\n\n\n\ncluster_FileUploadModule_FileUploadComponent_providers\n\n\n\ncluster_FileUploadModule_exports\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nFileUploadModule -->\n\nFileUploadComponent->FileUploadModule\n\n\n\n\n\nFileUploadComponent \n\nFileUploadComponent \n\nFileUploadComponent  -->\n\nFileUploadModule->FileUploadComponent \n\n\n\n\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}\n\nFileUploadComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}->FileUploadComponent\n\n\n\n\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}\n\nFileUploadComponent -->\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}->FileUploadComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/file-upload/file-upload.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FileUploadComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileUploadComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FileUploadComponent } from './file-upload.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [FileUploadComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    FontAwesomeModule,\n  ],\n  exports: [FileUploadComponent],\n})\nexport class FileUploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlatNode.html":{"url":"interfaces/FlatNode.html","title":"interface - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/indented-list/indented-list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expandable\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expandable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTree, MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { ILNode } from '../../models/indent.model';\nimport { Row, Sheet } from '../../models/sheet.model';\nimport { IndentedListService } from './indented-list.service';\n\ninterface Node {\n  name: string;\n  ontologyId: string;\n  children?: Node[];\n}\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  ontologyId: string;\n  level: number;\n}\n\n@Component({\n  selector: 'app-indent',\n  templateUrl: './indented-list.component.html',\n  styleUrls: ['./indented-list.component.scss'],\n})\nexport class IndentedListComponent implements OnInit, OnDestroy, AfterViewInit {\n  indentData = [];\n  activateNode?: unknown;\n  visible = false;\n\n  @Input() dataVersion?: unknown;\n  @Input() currentSheet!: Sheet;\n  @Input() sheetData: Row[] = [];\n  @Output() closeIL = new EventEmitter();\n  @Output() openBottomSheet = new EventEmitter();\n\n  @ViewChild('indentTree') indentTree!: MatTree;\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n\n  treeControl = new FlatTreeControl(\n    (node) => node.level,\n    (node) => node.expandable,\n  );\n\n  private readonly transformer = (node: Node, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      ontologyId: node.ontologyId,\n      level,\n    };\n  };\n\n  treeFlattener = new MatTreeFlattener(\n    this.transformer,\n    (node) => node.level,\n    (node) => node.expandable,\n    (node) => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor(public indentService: IndentedListService) {}\n\n  ngOnInit(): void {\n    this.indentService.indentData$.subscribe((data) => {\n      if (data.data) {\n        this.initializeTree(data.data);\n        this.visible = true;\n      } else {\n        this.visible = false;\n      }\n    });\n\n    this.indentService.makeIndentData(this.currentSheet, this.sheetData);\n  }\n\n  ngAfterViewInit(): void {\n    if (this.indentTree) {\n      this.indentTree.treeControl.expandAll();\n    }\n  }\n\n  ngOnDestroy() {\n    this.visible = false;\n  }\n\n  public initializeTree(data: ILNode) {\n    this.dataSource.data = [data];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                            \n                                copyrightYear\n                            \n                            \n                                faEnvelope\n                            \n                            \n                                faFacebookSquare\n                            \n                            \n                                faGithub\n                            \n                            \n                                faGlobe\n                            \n                            \n                                faPhone\n                            \n                            \n                                faTwitterSquare\n                            \n                            \n                                    Public\n                                ga\n                            \n                            \n                                masterSheetLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openData\n                            \n                            \n                                openDocs\n                            \n                            \n                                openFaq\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, router: Router, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/footer/footer.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openData\n                        \n                    \n                \n            \n            \n                \nopenData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/footer/footer.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDocs\n                        \n                    \n                \n            \n            \n                \nopenDocs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/footer/footer.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openFaq\n                        \n                    \n                \n            \n            \n                \nopenFaq()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/footer/footer.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyrightYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faEnvelope\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faEnvelope\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faFacebookSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFacebookSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGithub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGithub\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGlobe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGlobe\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPhone\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faTwitterSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faTwitterSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterSheetLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faFacebookSquare, faGithub, faTwitterSquare } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons';\nimport { faGlobe, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ConfigService } from '../../app-config.service';\nimport { GaAction, GaCategory } from '../../models/ga.model';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {\n  faGlobe = faGlobe;\n  faGithub = faGithub;\n  faPhone = faPhone;\n  faEnvelope = faEnvelope;\n  faFacebookSquare = faFacebookSquare;\n  faTwitterSquare = faTwitterSquare;\n\n  copyrightYear = new Date().getFullYear();\n  masterSheetLink = '';\n\n  constructor(\n    public configService: ConfigService,\n    private readonly router: Router,\n    public ga: GoogleAnalyticsService,\n  ) {\n    this.configService.config$.subscribe((config) => {\n      this.masterSheetLink = config['masterSheetLink'] as string;\n    });\n  }\n\n  openDocs() {\n    this.router.navigate(['/docs']);\n    this.ga.event(GaAction.NAV, GaCategory.FOOTER, 'Open Docs');\n  }\n\n  openFaq() {\n    this.router.navigate(['/docs/faq']);\n    this.ga.event(GaAction.NAV, GaCategory.FOOTER, 'Open FAQ');\n  }\n\n  openData() {\n    window.open(this.masterSheetLink, '_blank');\n    this.ga.event(GaAction.NAV, GaCategory.FOOTER, 'Open Master Tables');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        ASCT+B Reporter\n        \n          A state of the art visualization tool to envision large datasets developed by CNS, Indiana University.\n        \n        \n          \n          \n        \n      \n      \n        Help\n        \n          • Documentation\n          • FAQ\n          \n            •\n            Master Data Tables\n          \n        \n      \n      \n        Links\n        \n          \n            •\n            Indiana University\n          \n          \n            •\n            CI for Network Science Center\n          \n          \n            •\n            HuBMAP Consortium\n          \n          \n            •\n            Policy\n          \n          \n            •\n            Terms & Conditions\n          \n        \n      \n      \n        Location\n        700 N. Woodlawn Ave. Luddy Hall, Suite 4018 Bloomington, IN 47408\n         (812) 856 7034\n        \n          \n          infoccf&#64;indiana.edu\n        \n      \n    \n    \n      \n        \n          © {{ copyrightYear }}. All Rights Reserved. MIT License.\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                a {\n  cursor: pointer;\n}\n\n.footer {\n  background: #262626;\n  color: white;\n  .links,\n  .help {\n    ul {\n      list-style-type: none;\n    }\n    li a {\n      text-decoration: none;\n      color: white;\n      transition: color 0.2s;\n      &:hover {\n        text-decoration: none;\n        color: #4180cb;\n      }\n    }\n  }\n  .about-company {\n    fa-icon {\n      font-size: 2rem;\n    }\n    a {\n      color: rgb(249, 249, 249);\n      transition: color 0.2s;\n      &:hover {\n        color: #4180cb;\n      }\n    }\n  }\n  .location {\n    i {\n      font-size: 1.125rem;\n    }\n  }\n  .copyright p {\n    border-top: 0.0625rem solid rgba(255, 255, 255, 0.1);\n  }\n}\n\n.social-media {\n  a {\n    padding-left: 0.2rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ASCT+B Reporter                  A state of the art visualization tool to envision large datasets developed by CNS, Indiana University.                                                                Help                  • Documentation          • FAQ                      •            Master Data Tables                                      Links                              •            Indiana University                                •            CI for Network Science Center                                •            HuBMAP Consortium                                •            Policy                                •            Terms & Conditions                                      Location        700 N. Woodlawn Ave. Luddy Hall, Suite 4018 Bloomington, IN 47408         (812) 856 7034                            infoccf@indiana.edu                                              © {{ copyrightYear }}. All Rights Reserved. MIT License.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FooterModule.html":{"url":"modules/FooterModule.html","title":"module - FooterModule","body":"\n                   \n\n\n\n\n    Modules\n    FooterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FooterModule\n\n\n\ncluster_FooterModule_exports\n\n\n\ncluster_FooterModule_declarations\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nFooterModule\n\nFooterModule\n\nFooterModule -->\n\nFooterComponent->FooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nFooterModule->FooterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/footer/footer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FooterComponent } from './footer.component';\n\n@NgModule({\n  declarations: [FooterComponent],\n  imports: [CommonModule, MatIconModule, MatButtonModule, MatMenuModule, FontAwesomeModule],\n  exports: [FooterComponent],\n})\nexport class FooterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FunctionsComponent.html":{"url":"components/FunctionsComponent.html","title":"component - FunctionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FunctionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/functions/functions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-functions\n            \n\n\n\n            \n                styleUrls\n                ./functions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./functions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bimodalBTypeOptions\n                            \n                            \n                                bimodalConfig\n                            \n                            \n                                    Public\n                                bms\n                            \n                            \n                                bmSizeOptions\n                            \n                            \n                                    \n                                config$\n                            \n                            \n                                ctSizeOptions\n                            \n                            \n                                faDna\n                            \n                            \n                                    Public\n                                ga\n                            \n                            \n                                sortOptions\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeOptions\n                            \n                            \n                                updateBimodal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, bms: BimodalService, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/functions/functions.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bms\n                                                  \n                                                        \n                                                                        BimodalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/functions/functions.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeOptions\n                        \n                    \n                \n            \n            \n                \nchangeOptions(type: string, field: string, event: MatSelectChange)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/functions/functions.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        MatSelectChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBimodal\n                        \n                    \n                \n            \n            \n                \nupdateBimodal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/functions/functions.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bimodalBTypeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : bimodalBTypeOptions\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bimodalConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bmSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : bimodalBSizeOptions\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        config$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState.getBimodalConfig)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ctSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : bimodalCTSizeOptions\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faDna\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faDna\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : bimodalSortOptions\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport { faDna } from '@fortawesome/free-solid-svg-icons';\nimport { Select, Store } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { UpdateBimodalConfig } from '../../actions/tree.actions';\nimport {\n  BimodalConfig,\n  bimodalBSizeOptions,\n  bimodalBTypeOptions,\n  bimodalCTSizeOptions,\n  bimodalSortOptions,\n} from '../../models/bimodal.model';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { Error } from '../../models/response.model';\nimport { BimodalService } from '../../modules/tree/bimodal.service';\nimport { TreeState } from '../../store/tree.state';\n\n@Component({\n  selector: 'app-functions',\n  templateUrl: './functions.component.html',\n  styleUrls: ['./functions.component.scss'],\n})\nexport class FunctionsComponent {\n  bmSizeOptions = bimodalBSizeOptions;\n  sortOptions = bimodalSortOptions;\n  ctSizeOptions = bimodalCTSizeOptions;\n  bimodalBTypeOptions = bimodalBTypeOptions;\n  bimodalConfig!: BimodalConfig;\n  faDna = faDna;\n\n  @Input() error!: Error;\n\n  @Select(TreeState.getBimodalConfig) config$!: Observable;\n\n  constructor(\n    public store: Store,\n    public bms: BimodalService,\n    public ga: GoogleAnalyticsService,\n  ) {\n    this.config$.subscribe((config) => {\n      this.bimodalConfig = config;\n    });\n  }\n\n  changeOptions(type: string, field: string, event: MatSelectChange) {\n    (this.bimodalConfig as unknown as Record>)[type][field] = event.value;\n    this.updateBimodal();\n    this.ga.event(\n      GaAction.CLICK,\n      GaCategory.CONTROLS,\n      `Change Cell Type (CT) or Biomarker (BM) Options: ${field}:${event.value}.toLowerCase()`,\n    );\n  }\n\n  updateBimodal() {\n    this.store.dispatch(new UpdateBimodalConfig(this.bimodalConfig)).subscribe((states) => {\n      const data = states.sheetState.data;\n      const treeData = states.treeState.treeData;\n      const bimodalConfig = states.treeState.bimodal.config;\n      const sheetConfig = states.sheetState.sheetConfig;\n      const omapConfig = states.treeState.omapConfig;\n      const filteredProtiens = states.sheetState.filteredProtiens;\n      if (data.length) {\n        this.bms.makeBimodalData(data, treeData, bimodalConfig, false, sheetConfig, omapConfig, filteredProtiens);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Cell Types \n        \n      \n    \n\n    \n      \n        \n          sort_by_alpha\n        \n        \n          \n            \n              {{ option }}\n            \n          \n        \n      \n    \n    \n      \n        \n          bubble_chart\n        \n        \n          \n            \n              {{ option }}\n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n           Biomarkers \n        \n      \n    \n\n    \n      \n        \n          sort_by_alpha\n        \n        \n          \n            \n              {{ option }}\n            \n          \n        \n      \n    \n    \n      \n        \n          bubble_chart\n        \n        \n          \n            \n              {{ option }}\n            \n          \n        \n      \n    \n    \n      \n        \n          \n        \n        \n          \n            \n              {{ option }}\n            \n          \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./functions.component.scss\n                \n                @import './../../../assets/stylesheets/_colors.scss';\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n  box-shadow: none;\n}\n\n.mat-expansion-panel-header:not(.compare) {\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header {\n  transition: all 0.3s;\n  background-color: $secondary !important;\n  padding-left: 0.9375rem !important;\n  padding-right: 0.9375rem !important;\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header:hover {\n  background-color: darken($color: $secondary, $amount: 8%) !important;\n}\n\n.function-button {\n  width: 100% !important;\n  background-color: #f5f5f5;\n  padding: 0 0.625rem 0 0.625rem !important;\n\n  ::ng-deep {\n    .mat-form-field {\n      width: auto !important;\n    }\n\n    .mat-select-value {\n      max-width: 100%;\n      width: auto;\n    }\n  }\n}\n\n.biomarker-icon-type {\n  font-size: 1.125rem;\n}\n\n.d-flex {\n  gap: 1rem;\n}\n\nmat-select {\n  letter-spacing: 0.1px;\n  font-size: 14px;\n  align-items: center;\n}\n\n::ng-deep {\n  .cell-types-panel {\n    left: 74px;\n    position: fixed !important;\n    width: 140px !important;\n  }\n\n  .mat-mdc-select-arrow-wrapper {\n    margin: 14px;\n  }\n}\n\n.control-title ::ng-deep .mat-mdc-select-trigger {\n  .mat-mdc-select-value {\n    width: 7rem;\n    .mat-mdc-select-value-text {\n      padding-left: 1rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Cell Types                                               sort_by_alpha                                                    {{ option }}                                                                    bubble_chart                                                    {{ option }}                                                                         Biomarkers                                               sort_by_alpha                                                    {{ option }}                                                                    bubble_chart                                                    {{ option }}                                                                                                                        {{ option }}                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FunctionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FunctionsModule.html":{"url":"modules/FunctionsModule.html","title":"module - FunctionsModule","body":"\n                   \n\n\n\n\n    Modules\n    FunctionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FunctionsModule\n\n\n\ncluster_FunctionsModule_declarations\n\n\n\ncluster_FunctionsModule_exports\n\n\n\n\nFunctionsComponent\n\nFunctionsComponent\n\n\n\nFunctionsModule\n\nFunctionsModule\n\nFunctionsModule -->\n\nFunctionsComponent->FunctionsModule\n\n\n\n\n\nFunctionsComponent \n\nFunctionsComponent \n\nFunctionsComponent  -->\n\nFunctionsModule->FunctionsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/functions/functions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FunctionsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FunctionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FunctionsComponent } from './functions.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [FunctionsComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatTooltipModule,\n    FontAwesomeModule,\n    MatButtonModule,\n  ],\n  exports: [FunctionsComponent],\n})\nexport class FunctionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GEdge.html":{"url":"interfaces/GEdge.html","title":"interface - GEdge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GEdge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GNode.html":{"url":"interfaces/GNode.html","title":"interface - GNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         Metadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Metadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GaCompareInfo.html":{"url":"interfaces/GaCompareInfo.html","title":"interface - GaCompareInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GaCompareInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ga.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GaAction {\n  // Action for form inputs\n  INPUT = 'input',\n  // Action for toggle ui elements\n  TOGGLE = 'toggle',\n  // Action for slider change enents\n  SLIDE = 'slide',\n  // Action for other button clicks or graph clicks\n  CLICK = 'click',\n  // Action for module navigation or external links\n  NAV = 'nav',\n}\n\n// Various event categories\nexport enum GaCategory {\n  HOME = 'home',\n  FOOTER = 'footer',\n  DOCS = 'docs',\n  REPORT = 'report',\n  NAVBAR = 'navbar',\n  PLAYGROUND = 'playground',\n  GRAPH = 'graph',\n  COMPARE = 'compare',\n  CONTROLS = 'controls',\n  COMPARISON = 'comparison',\n}\n\n// Information to be emitted on each Comparison event\nexport interface GaCompareInfo {\n  title: string;\n  desc: string;\n  link: string;\n  color: string;\n}\n\n// Information to be emitted on each Node Click event\nexport interface GaNodeInfo {\n  oid: string;\n  type: string;\n  x: number;\n  y: number;\n  name: string;\n  groupName: string;\n}\n\n// Information to be emitted on organs selection events\nexport interface GaOrgansInfo {\n  selectedOrgans: GaOrganInfo[];\n  numOrgans: number;\n}\n\n// Organs Information\nexport interface GaOrganInfo {\n  organ: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GaNodeInfo.html":{"url":"interfaces/GaNodeInfo.html","title":"interface - GaNodeInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GaNodeInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ga.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            groupName\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            oid\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GaAction {\n  // Action for form inputs\n  INPUT = 'input',\n  // Action for toggle ui elements\n  TOGGLE = 'toggle',\n  // Action for slider change enents\n  SLIDE = 'slide',\n  // Action for other button clicks or graph clicks\n  CLICK = 'click',\n  // Action for module navigation or external links\n  NAV = 'nav',\n}\n\n// Various event categories\nexport enum GaCategory {\n  HOME = 'home',\n  FOOTER = 'footer',\n  DOCS = 'docs',\n  REPORT = 'report',\n  NAVBAR = 'navbar',\n  PLAYGROUND = 'playground',\n  GRAPH = 'graph',\n  COMPARE = 'compare',\n  CONTROLS = 'controls',\n  COMPARISON = 'comparison',\n}\n\n// Information to be emitted on each Comparison event\nexport interface GaCompareInfo {\n  title: string;\n  desc: string;\n  link: string;\n  color: string;\n}\n\n// Information to be emitted on each Node Click event\nexport interface GaNodeInfo {\n  oid: string;\n  type: string;\n  x: number;\n  y: number;\n  name: string;\n  groupName: string;\n}\n\n// Information to be emitted on organs selection events\nexport interface GaOrgansInfo {\n  selectedOrgans: GaOrganInfo[];\n  numOrgans: number;\n}\n\n// Organs Information\nexport interface GaOrganInfo {\n  organ: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GaOrganInfo.html":{"url":"interfaces/GaOrganInfo.html","title":"interface - GaOrganInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GaOrganInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ga.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GaAction {\n  // Action for form inputs\n  INPUT = 'input',\n  // Action for toggle ui elements\n  TOGGLE = 'toggle',\n  // Action for slider change enents\n  SLIDE = 'slide',\n  // Action for other button clicks or graph clicks\n  CLICK = 'click',\n  // Action for module navigation or external links\n  NAV = 'nav',\n}\n\n// Various event categories\nexport enum GaCategory {\n  HOME = 'home',\n  FOOTER = 'footer',\n  DOCS = 'docs',\n  REPORT = 'report',\n  NAVBAR = 'navbar',\n  PLAYGROUND = 'playground',\n  GRAPH = 'graph',\n  COMPARE = 'compare',\n  CONTROLS = 'controls',\n  COMPARISON = 'comparison',\n}\n\n// Information to be emitted on each Comparison event\nexport interface GaCompareInfo {\n  title: string;\n  desc: string;\n  link: string;\n  color: string;\n}\n\n// Information to be emitted on each Node Click event\nexport interface GaNodeInfo {\n  oid: string;\n  type: string;\n  x: number;\n  y: number;\n  name: string;\n  groupName: string;\n}\n\n// Information to be emitted on organs selection events\nexport interface GaOrgansInfo {\n  selectedOrgans: GaOrganInfo[];\n  numOrgans: number;\n}\n\n// Organs Information\nexport interface GaOrganInfo {\n  organ: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GaOrgansInfo.html":{"url":"interfaces/GaOrgansInfo.html","title":"interface - GaOrgansInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GaOrgansInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ga.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numOrgans\n                                        \n                                \n                                \n                                        \n                                            selectedOrgans\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numOrgans:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOrgans:     GaOrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GaOrganInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GaAction {\n  // Action for form inputs\n  INPUT = 'input',\n  // Action for toggle ui elements\n  TOGGLE = 'toggle',\n  // Action for slider change enents\n  SLIDE = 'slide',\n  // Action for other button clicks or graph clicks\n  CLICK = 'click',\n  // Action for module navigation or external links\n  NAV = 'nav',\n}\n\n// Various event categories\nexport enum GaCategory {\n  HOME = 'home',\n  FOOTER = 'footer',\n  DOCS = 'docs',\n  REPORT = 'report',\n  NAVBAR = 'navbar',\n  PLAYGROUND = 'playground',\n  GRAPH = 'graph',\n  COMPARE = 'compare',\n  CONTROLS = 'controls',\n  COMPARISON = 'comparison',\n}\n\n// Information to be emitted on each Comparison event\nexport interface GaCompareInfo {\n  title: string;\n  desc: string;\n  link: string;\n  color: string;\n}\n\n// Information to be emitted on each Node Click event\nexport interface GaNodeInfo {\n  oid: string;\n  type: string;\n  x: number;\n  y: number;\n  name: string;\n  groupName: string;\n}\n\n// Information to be emitted on organs selection events\nexport interface GaOrgansInfo {\n  selectedOrgans: GaOrganInfo[];\n  numOrgans: number;\n}\n\n// Organs Information\nexport interface GaOrganInfo {\n  organ: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsSyncService.html":{"url":"injectables/GoogleAnalyticsSyncService.html","title":"injectable - GoogleAnalyticsSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/google-analytics-sync.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, window: Record | null, undefined: IGoogleAnalyticsSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/google-analytics-sync.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Record | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                    IGoogleAnalyticsSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { IGoogleAnalyticsSettings, NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN, NGX_WINDOW } from 'ngx-google-analytics';\nimport { Subscription } from 'rxjs';\n\nimport { ConsentService } from './consent.service';\n\n@Injectable()\nexport class GoogleAnalyticsSyncService implements OnDestroy {\n  private readonly token: string;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(NGX_WINDOW) private readonly window: Record | null,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN)\n    { trackingCode }: IGoogleAnalyticsSettings,\n  ) {\n    this.token = trackingCode;\n\n    this.subscriptions.add(\n      consentService.consentChange.subscribe((consent) => this.toggleGoogleAnalytics(consent === 'rescinded')),\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private toggleGoogleAnalytics(disabled: boolean): void {\n    if (this.window) {\n      this.window[`ga-disable-${this.token}`] = disabled;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Graph.html":{"url":"interfaces/Graph.html","title":"interface - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            edges\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edges:         GEdge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GEdge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:     GNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Graph\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Graph\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HasError.html":{"url":"classes/HasError.html","title":"class - HasError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HasError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: Error)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        Error\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Error\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[ERROR] Has Error'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                            \n                                CONTIRBUTORS\n                            \n                            \n                                copyrightYear\n                            \n                            \n                                dataVersion\n                            \n                            \n                                faEnvelope\n                            \n                            \n                                faGithub\n                            \n                            \n                                faGlobe\n                            \n                            \n                                faLinkedin\n                            \n                            \n                                faPhone\n                            \n                            \n                                    Public\n                                ga\n                            \n                            \n                                IMAGES\n                            \n                            \n                                masterSheetLink\n                            \n                            \n                                    \n                                player\n                            \n                            \n                                sheetOptions\n                            \n                            \n                                VIDEO_ACTIONS\n                            \n                            \n                                    \n                                videoContainer\n                            \n                            \n                                videoSectionSelected\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToPlayground\n                            \n                            \n                                openData\n                            \n                            \n                                openDataOld\n                            \n                            \n                                openDocs\n                            \n                            \n                                openGithub\n                            \n                            \n                                seekVideo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, router: Router, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToPlayground\n                        \n                    \n                \n            \n            \n                \ngoToPlayground()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openData\n                        \n                    \n                \n            \n            \n                \nopenData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDataOld\n                        \n                    \n                \n            \n            \n                \nopenDataOld()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDocs\n                        \n                    \n                \n            \n            \n                \nopenDocs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGithub\n                        \n                    \n                \n            \n            \n                \nopenGithub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekVideo\n                        \n                    \n                \n            \n            \n                \nseekVideo(seconds: number, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONTIRBUTORS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONTIRBUTORS\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyrightYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'latest'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faEnvelope\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faEnvelope\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGithub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGithub\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGlobe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGlobe\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faLinkedin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faLinkedin\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPhone\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IMAGES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : IMAGES\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterSheetLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        player\n                        \n                    \n                \n            \n                \n                    \n                        Type :     YouTubePlayer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('tutorialVideo')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SheetDetails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VIDEO_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : VIDEO_ACTIONS\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        videoContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('tutorialVideoContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoSectionSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { YouTubePlayer } from '@angular/youtube-player';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons';\nimport { faGlobe, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ConfigService } from '../../app-config.service';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { SheetDetails } from '../../models/sheet.model';\nimport { CONTIRBUTORS, IMAGES, VIDEO_ACTIONS } from '../../static/home';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements AfterViewInit, OnDestroy {\n  window = window;\n  dataVersion = 'latest';\n  VIDEO_ACTIONS = VIDEO_ACTIONS;\n  CONTIRBUTORS = CONTIRBUTORS;\n  IMAGES = IMAGES;\n  videoSectionSelected = 0;\n\n  faLinkedin = faLinkedin;\n  faGlobe = faGlobe;\n  faGithub = faGithub;\n  faPhone = faPhone;\n  faEnvelope = faEnvelope;\n\n  copyrightYear = new Date().getFullYear();\n  masterSheetLink = '';\n  sheetOptions: SheetDetails[] = [];\n\n  @ViewChild('tutorialVideoContainer') videoContainer!: ElementRef;\n  @ViewChild('tutorialVideo') player!: YouTubePlayer;\n\n  private videoContainerResizeObserver?: ResizeObserver;\n\n  constructor(\n    public configService: ConfigService,\n    private readonly router: Router,\n    public ga: GoogleAnalyticsService,\n  ) {\n    this.configService.config$.subscribe((config) => {\n      this.masterSheetLink = config['masterSheetLink'] as string;\n    });\n\n    this.configService.sheetConfiguration$.subscribe((sheetOptions) => {\n      this.sheetOptions = sheetOptions;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    const actionsDiv = document.getElementById('actionsHeight');\n    if (actionsDiv) {\n      actionsDiv.style.maxHeight = `${this.player.height + 50}px`;\n      actionsDiv.style.overflowY = 'auto';\n    }\n\n    this.videoContainerResizeObserver = new ResizeObserver((entries) => {\n      const [\n        {\n          contentBoxSize: [{ inlineSize: width, blockSize: height }],\n        },\n      ] = entries;\n\n      this.player.width = width;\n      this.player.height = height;\n    });\n    this.videoContainerResizeObserver.observe(this.videoContainer.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.videoContainerResizeObserver?.disconnect();\n  }\n\n  seekVideo(seconds: number, id: number) {\n    this.videoSectionSelected = id;\n\n    this.player.pauseVideo();\n    this.player.seekTo(seconds, true);\n    this.player.playVideo();\n\n    this.ga.event(GaAction.CLICK, GaCategory.HOME, `Jump to video section: ${VIDEO_ACTIONS[id].header}`);\n  }\n\n  openGithub() {\n    window.open('https://github.com/hubmapconsortium/ccf-asct-reporter', '_blank');\n    this.ga.event(GaAction.NAV, GaCategory.HOME, 'Open Github');\n  }\n\n  openDocs() {\n    this.router.navigate(['/docs']);\n    this.ga.event(GaAction.NAV, GaCategory.HOME, 'Open Docs');\n  }\n\n  openData() {\n    window.open(this.masterSheetLink, '_blank');\n    this.ga.event(GaAction.NAV, GaCategory.HOME, 'Open Master Tables');\n  }\n\n  openDataOld() {\n    window.open(\n      'https://docs.google.com/spreadsheets/d/1j_SLhFipRWUcRZrCDfNH15OWoiLf7cJks7NVppe3htI/edit#gid=1268820100',\n      '_blank',\n    );\n    this.ga.event(GaAction.NAV, GaCategory.HOME, 'Open Old Data Tables');\n  }\n\n  goToPlayground() {\n    this.router.navigate(['/vis'], {\n      queryParams: { playground: 'true', selectedOrgans: 'example' },\n      queryParamsHandling: 'merge',\n    });\n    this.ga.event(GaAction.NAV, GaCategory.HOME, 'Launch Playground Tool');\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n      \n      \n        Docs\n        GitHub\n        \n          Master Tables\n          expand_more\n        \n        \n        Old Tables\n      \n    \n  \n\n  \n  \n\n  \n  \n    \n      ASCT+B REPORTER\n      v2.8\n      \n        The CCF ASCT+B Reporter is a visualization tool for displaying anatomical structures, cell types, and biomarker\n        (ASCT+B) authored by domain experts for different human organs. The tables are used to develop a common\n        coordinate framework (CCF) of the healthy human body, see also\n        Hubmap Consortium website.\n      \n      \n        Go to Visualization\n        Launch Playground\n        \n          \n            {{ option.title }}\n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n    \n  \n\n  \n  \n    \n      \n      ABOUT\n      \n        The ASCT+B Reporter is a state-of-the-art visualization tool. The video gives an overview of the functionalities\n        listed below. Please use the selectors below to skip to any section you’d want to specifically know about.\n      \n    \n    \n    \n      \n        \n          \n            \n              {{ va.header }}\n              {{ va.desc }}\n            \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n\n  \n  \n\n  \n  \n    \n      CONTRIBUTORS\n      \n        Along with various members from the MC-IU Team as well as doctors, researchers and SMEs from various consortia,\n        below listed are the members of the core team working on building the ASCT+B Reporter\n      \n    \n    \n      \n        \n          \n            \n              \n            \n            \n              {{ con.name }}\n              \n                {{ con.desc }}\n              \n              \n                {{ con.mail }}\n              \n            \n            \n              \n                \n                  \n                    \n                  \n                \n                \n                  \n                    \n                  \n                \n                \n                  \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n      \n        AFFILIATIONS\n        \n          Various institutions that the CCF ASCT+B Reporter is affiliated with are listed below.\n        \n      \n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n          \n        \n      \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .example-spacer {\n  flex: 1 1 auto;\n}\n.home-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n.menu-button-item {\n  width: 100%;\n}\n.menu {\n  position: relative;\n  color: #fff !important;\n  cursor: pointer;\n  margin: 1.5rem !important;\n}\n.menu:hover {\n  text-decoration: underline;\n}\n\n.icon {\n  position: absolute;\n}\n.about-main-container {\n  position: relative;\n}\n.video-tutorial {\n  box-shadow: 0.3125rem 1.25rem 1.875rem #e1e1e1;\n  border-radius: 0.625rem;\n  outline: none;\n  overflow: hidden;\n}\n.affiliations-image-container {\n  width: 100%;\n  text-align: center;\n}\n.affiliation-img {\n  cursor: pointer;\n}\na {\n  cursor: pointer;\n}\n\np {\n  margin: 0;\n}\n\n.dark {\n  color: #262626 !important;\n}\n\n.a-nav {\n  // color: #444a65;\n  margin-left: 1.875rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-decoration: none !important;\n  font-size: 0.875rem;\n  color: white;\n}\n\n.a-nav:hover {\n  color: #377eb8;\n}\n\n.linker {\n  color: white;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.linker:hover {\n  text-decoration: underline;\n}\n\n.go-to-vis {\n  padding: 2.3rem 1rem;\n  font-size: 18pt;\n  border-radius: 0.625rem;\n  background-color: #7fd9da;\n  color: #262626;\n  font-weight: bold;\n  margin: 0.5rem 0.5rem;\n  letter-spacing: 0.02rem;\n}\n\n.title-desc {\n  text-align: justify;\n  text-justify: inter-word;\n  color: rgb(164, 164, 164);\n  font-size: 12pt;\n  hyphens: auto;\n}\n\n.title {\n  font-size: 4.375rem;\n  line-height: 4.6875rem;\n  font-weight: 400;\n  color: #444a65;\n  text-align: justify;\n  margin: 0 auto;\n}\n\n@media only screen and (max-width: 1000px) {\n  .title {\n    text-align: center;\n  }\n  .title-desc {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: center;\n    padding-left: 1.25rem;\n    padding-right: 1.25rem;\n  }\n  .title-btn {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n.title1 {\n  font-family: 'Poppins', sans-serif;\n  font-size: 5.5rem;\n  line-height: 5rem;\n  color: white;\n  font-weight: 600;\n  letter-spacing: 0.5rem;\n}\n\n.title2 {\n  font-family: 'Poppins', sans-serif;\n  font-size: 3.125rem;\n  line-height: 3.75rem;\n  color: #262626;\n  font-weight: 400;\n  hyphens: auto;\n  letter-spacing: 0.25rem;\n}\n\n.title3 {\n  font-family: 'Poppins', sans-serif;\n  font-size: 1.875rem;\n  line-height: 1.875rem;\n  color: #262626;\n  font-weight: 600;\n}\n\n.title4 {\n  font-family: 'Poppins', sans-serif;\n  font-size: 1.25rem;\n  line-height: 1.25rem;\n  color: #262626;\n  font-weight: 500;\n}\n\n.subtitle {\n  font-size: 1rem;\n  line-height: 0.9375rem;\n  color: #e3e3e3;\n  font-weight: 400;\n}\n\n.pro {\n  border-radius: 50%;\n  height: 7.5rem;\n  width: 7.5rem;\n  object-fit: cover;\n  border: 0.125rem solid rgb(218, 218, 218);\n}\n\n.desc {\n  font-size: 12pt;\n  font-weight: 400;\n  color: white;\n  line-height: 1.5625rem;\n}\n\n.logo1 {\n  margin-right: 0.625rem;\n  width: 5.625rem;\n  cursor: pointer;\n  color: white;\n}\n\n.logo2 {\n  margin-right: 0.625rem;\n  width: 6.25rem;\n  cursor: pointer;\n  color: white;\n}\n\n/* CARDS */\n\n.card {\n  border: none;\n  border-radius: 0.625rem;\n  box-shadow: 0.3125rem 1.75rem 1.5625rem rgba(128, 128, 128, 0.057);\n  transition: all 0.5s ease;\n}\n\n.card:hover {\n  transition: all 0.5s ease;\n  box-shadow: 0.3125rem 1.75rem 2.1875rem rgba(128, 128, 128, 0.226);\n}\n\n::ng-deep .organMenu {\n  width: 18.75rem !important;\n  height: 12.5rem !important;\n}\n\n#background {\n  position: absolute;\n  top: 0rem;\n  left: 0rem;\n  height: 75%;\n  width: 100%;\n  background-color: #262626;\n  z-index: -1;\n}\n\n.laptop {\n  position: relative;\n  width: 100%;\n  height: auto;\n}\n\n.laptop:after {\n  content: '';\n  display: block;\n}\n\n.l {\n  // position: absolute;\n  width: 100%;\n}\n\n.i {\n  position: absolute;\n  width: 80%;\n  left: 7.6875rem;\n  top: 1.75rem;\n  z-index: -1;\n}\n\n@media (min-width: 576px) {\n  .i {\n    position: absolute;\n    width: 80%;\n    left: 5.1875rem;\n    top: 1.125rem;\n    z-index: -1;\n  }\n}\n\n// Medium devices (tablets, 768px and up)\n@media (min-width: 768px) {\n  .i {\n    position: absolute;\n    width: 80%;\n    left: 6.4375rem;\n    top: 1.4375rem;\n    z-index: -1;\n  }\n}\n\n// Extra large devices (large desktops, 1200px and up)\n@media (min-width: 1200px) {\n  .i {\n    position: absolute;\n    width: 80%;\n    left: 7.6875rem;\n    top: 1.75rem;\n    z-index: -1;\n  }\n}\n\n.section-selector {\n  text-align: left;\n  outline: none;\n  border: 0.125rem solid #eaeaea;\n  border-radius: 0.5rem;\n  padding: 0.625rem 0.625rem 0.625rem 0.625rem;\n  border-left-width: 0.9375rem;\n  background-color: white;\n  transition: all 0.2s;\n}\n\n.section-selector:not(.active):hover {\n  border-color: #444a6590;\n}\n\n.section-selector:active {\n  transform: scale(0.99);\n}\n\n.section-selected {\n  border-color: #444a65 !important;\n}\n\n.ss-header {\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14pt;\n  padding-bottom: 0.3125rem;\n}\n\n.ss-desc {\n  color: grey;\n}\n\n.card-img-top {\n  max-height: 10vh;\n  /*not want to take all vertical space*/\n  object-fit: cover;\n  /*show all image, autosized, no cut, in available space*/\n}\n\n.contributors-img {\n  border-radius: 50%;\n  object-fit: cover;\n  border: 0.1875rem solid #eaeaea;\n}\n\n.con-card {\n  box-shadow: none !important;\n  border: 0.125rem solid #eaeaea;\n  border-top-width: 0.9375rem;\n  border-radius: 0.625rem;\n  padding: 0.625rem;\n  height: 30.375rem;\n}\n\n.icon-btn {\n  height: 3.125rem;\n  width: 3.125rem;\n  font-size: 1.5625rem;\n  line-height: 1.875rem;\n  color: #262626;\n}\n\n.text-info {\n  color: #444a65 !important;\n}\n\n#actionsHeight,\n.video-tutorial {\n  height: 450px;\n}\n\n.home-img {\n  position: absolute;\n  top: 0;\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 8s;\n  animation-name: anim;\n  -webkit-animation-name: anim;\n  -webkit-animation-timing-function: ease-in-out;\n  -webkit-animation-iteration-count: infinite;\n  -webkit-animation-duration: 8s;\n}\n\n.home-img:nth-child(1) {\n  animation-delay: 0s;\n  -webkit-animation-delay: 0s;\n}\n\n.home-img:nth-child(2) {\n  animation-delay: 4s;\n  -webkit-animation-delay: 4s;\n}\n\n.home-img:nth-child(3) {\n  animation-delay: 8s;\n  -webkit-animation-delay: 8s;\n}\n\n.home-img:nth-child(4) {\n  animation-delay: 12s;\n  -webkit-animation-delay: 12s;\n}\n\n.home-img:nth-child(5) {\n  animation-delay: 16s;\n  -webkit-animation-delay: 16s;\n}\n\n@keyframes anim {\n  0% {\n    opacity: 0;\n    z-index: 100;\n  }\n  15% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    z-index: 1;\n  }\n}\n\n.navbar-options {\n  a {\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n  .docs,\n  .github {\n    padding-left: 1rem;\n  }\n}\n\n.muted {\n  color: #6c757d;\n}\n\n.profile {\n  a {\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Docs        GitHub                  Master Tables          expand_more                        Old Tables                              ASCT+B REPORTER      v2.8              The CCF ASCT+B Reporter is a visualization tool for displaying anatomical structures, cell types, and biomarker        (ASCT+B) authored by domain experts for different human organs. The tables are used to develop a common        coordinate framework (CCF) of the healthy human body, see also        Hubmap Consortium website.                    Go to Visualization        Launch Playground                              {{ option.title }}                                                                      ABOUT              The ASCT+B Reporter is a state-of-the-art visualization tool. The video gives an overview of the functionalities        listed below. Please use the selectors below to skip to any section you’d want to specifically know about.                                                                    {{ va.header }}              {{ va.desc }}                                                                                                  CONTRIBUTORS              Along with various members from the MC-IU Team as well as doctors, researchers and SMEs from various consortia,        below listed are the members of the core team working on building the ASCT+B Reporter                                                                                                      {{ con.name }}                              {{ con.desc }}                                            {{ con.mail }}                                                                                                                                                                                                                                                                                                                                                                                                                AFFILIATIONS                  Various institutions that the CCF ASCT+B Reporter is affiliated with are listed below.                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_exports\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\nFooterModule\n\nFooterModule\n\nHomeModule -->\n\nFooterModule->HomeModule\n\n\n\n\n\nTableNestedMenuModule\n\nTableNestedMenuModule\n\nHomeModule -->\n\nTableNestedMenuModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FooterModule\n                        \n                        \n                            TableNestedMenuModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { RouterModule } from '@angular/router';\nimport { FooterModule } from '../footer/footer.module';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { TableNestedMenuModule } from '../table-nested-menu/table-nested-menu.module';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    FontAwesomeModule,\n    RouterModule,\n    FooterModule,\n    YouTubePlayerModule,\n    TableNestedMenuModule,\n  ],\n  exports: [HomeComponent],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ILNode.html":{"url":"classes/ILNode.html","title":"class - ILNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ILNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/indent.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                children\n                            \n                            \n                                color\n                            \n                            \n                                comparator\n                            \n                            \n                                name\n                            \n                            \n                                ontologyId\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, children: ILNode[], ontologyId: string, color: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/indent.model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        children\n                                                  \n                                                        \n                                                                        ILNode[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ontologyId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILNode[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comparator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ontologyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/models/indent.model.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ILNode {\n  name: string;\n  ontologyId: string;\n  children?: ILNode[];\n  color: string;\n  comparator: string;\n  type: string;\n\n  constructor(name: string, children: ILNode[], ontologyId: string, color = '#808080') {\n    this.name = name;\n    this.children = children;\n    this.ontologyId = ontologyId;\n    this.color = color;\n    this.comparator = '';\n    this.type = '';\n  }\n\n  public search(name: string) {\n    for (const child of this.children ?? []) {\n      if (child.name.toLowerCase() === name.toLowerCase()) {\n        return child;\n      }\n    }\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndentedListComponent.html":{"url":"components/IndentedListComponent.html","title":"component - IndentedListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndentedListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/indented-list/indented-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-indent\n            \n\n\n\n            \n                styleUrls\n                ./indented-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./indented-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                activateNode\n                            \n                            \n                                dataSource\n                            \n                            \n                                hasChild\n                            \n                            \n                                indentData\n                            \n                            \n                                    Public\n                                indentService\n                            \n                            \n                                    \n                                indentTree\n                            \n                            \n                                treeControl\n                            \n                            \n                                treeFlattener\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initializeTree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentSheet\n                            \n                            \n                                dataVersion\n                            \n                            \n                                sheetData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeIL\n                            \n                            \n                                openBottomSheet\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(indentService: IndentedListService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/indented-list/indented-list.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        indentService\n                                                  \n                                                        \n                                                                        IndentedListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentSheet\n                    \n                \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/indented-list/indented-list.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataVersion\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/indented-list/indented-list.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sheetData\n                    \n                \n                \n                    \n                        Type :         Row[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/indented-list/indented-list.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeIL\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/indented-list/indented-list.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openBottomSheet\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/indented-list/indented-list.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initializeTree\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeTree(data: ILNode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/indented-list/indented-list.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ILNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        activateNode\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTreeFlatDataSource(this.treeControl, this.treeFlattener)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasChild\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        indentData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        indentService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IndentedListService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        indentTree\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTree<>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('indentTree')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        treeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FlatTreeControl(\n    (node) => node.level,\n    (node) => node.expandable,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        treeFlattener\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTreeFlattener(\n    this.transformer,\n    (node) => node.level,\n    (node) => node.expandable,\n    (node) => node.children,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTree, MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { ILNode } from '../../models/indent.model';\nimport { Row, Sheet } from '../../models/sheet.model';\nimport { IndentedListService } from './indented-list.service';\n\ninterface Node {\n  name: string;\n  ontologyId: string;\n  children?: Node[];\n}\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  ontologyId: string;\n  level: number;\n}\n\n@Component({\n  selector: 'app-indent',\n  templateUrl: './indented-list.component.html',\n  styleUrls: ['./indented-list.component.scss'],\n})\nexport class IndentedListComponent implements OnInit, OnDestroy, AfterViewInit {\n  indentData = [];\n  activateNode?: unknown;\n  visible = false;\n\n  @Input() dataVersion?: unknown;\n  @Input() currentSheet!: Sheet;\n  @Input() sheetData: Row[] = [];\n  @Output() closeIL = new EventEmitter();\n  @Output() openBottomSheet = new EventEmitter();\n\n  @ViewChild('indentTree') indentTree!: MatTree;\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n\n  treeControl = new FlatTreeControl(\n    (node) => node.level,\n    (node) => node.expandable,\n  );\n\n  private readonly transformer = (node: Node, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      ontologyId: node.ontologyId,\n      level,\n    };\n  };\n\n  treeFlattener = new MatTreeFlattener(\n    this.transformer,\n    (node) => node.level,\n    (node) => node.expandable,\n    (node) => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor(public indentService: IndentedListService) {}\n\n  ngOnInit(): void {\n    this.indentService.indentData$.subscribe((data) => {\n      if (data.data) {\n        this.initializeTree(data.data);\n        this.visible = true;\n      } else {\n        this.visible = false;\n      }\n    });\n\n    this.indentService.makeIndentData(this.currentSheet, this.sheetData);\n  }\n\n  ngAfterViewInit(): void {\n    if (this.indentTree) {\n      this.indentTree.treeControl.expandAll();\n    }\n  }\n\n  ngOnDestroy() {\n    this.visible = false;\n  }\n\n  public initializeTree(data: ILNode) {\n    this.dataSource.data = [data];\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        \n        \n          {{ node.name }} {{ node.ontologyId }}\n        \n      \n      \n        \n          \n            {{ treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n          \n        \n\n        \n          {{ node.name }}  {{ node.ontologyId }}\n        \n      \n    \n  \n\n  \n    \n      Indent List not created yet.\n    \n  \n\n\n    \n\n    \n                \n                    ./indented-list.component.scss\n                \n                .mat-tree-node {\n  min-height: 2em !important;\n  cursor: pointer;\n}\n\n.mat-tree-node:hover {\n  color: #1976d2;\n}\n\n.background-highlight {\n  color: #1976d2;\n}\n.tree-container {\n  padding: 1.25rem !important;\n  width: fit-content !important;\n  background-color: transparent;\n}\n.node-name-id {\n  font-size: 8pt;\n  color: grey;\n  padding-left: 0.625rem;\n}\n.node-button {\n  background-color: rgb(215, 215, 215);\n  transform: scale(0.7);\n}\n.node-button-icon {\n  font-size: 20pt;\n  color: white;\n  height: 1.5rem !important;\n  width: 1.5rem !important;\n  font-size: 14pt !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ node.name }} {{ node.ontologyId }}                                                  {{ treeControl.isExpanded(node) ? \\'expand_more\\' : \\'chevron_right\\' }}                                    {{ node.name }}  {{ node.ontologyId }}                                Indent List not created yet.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndentedListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IndentedListModule.html":{"url":"modules/IndentedListModule.html","title":"module - IndentedListModule","body":"\n                   \n\n\n\n\n    Modules\n    IndentedListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IndentedListModule\n\n\n\ncluster_IndentedListModule_exports\n\n\n\ncluster_IndentedListModule_declarations\n\n\n\ncluster_IndentedListModule_imports\n\n\n\n\nIndentedListComponent\n\nIndentedListComponent\n\n\n\nIndentedListModule\n\nIndentedListModule\n\nIndentedListModule -->\n\nIndentedListComponent->IndentedListModule\n\n\n\n\n\nIndentedListComponent \n\nIndentedListComponent \n\nIndentedListComponent  -->\n\nIndentedListModule->IndentedListComponent \n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nIndentedListModule -->\n\nSidenavHeaderModule->IndentedListModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nIndentedListModule -->\n\nSidenavModule->IndentedListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/indented-list/indented-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IndentedListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SidenavHeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IndentedListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavModule } from '../sidenav/sidenav.module';\nimport { IndentedListComponent } from './indented-list.component';\nimport { SidenavHeaderModule } from '../sidenav-header/sidenav-header.module';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [IndentedListComponent],\n  imports: [CommonModule, SidenavModule, SidenavHeaderModule, MatTreeModule, MatButtonModule, MatIconModule],\n  exports: [IndentedListComponent],\n})\nexport class IndentedListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IndentedListService.html":{"url":"injectables/IndentedListService.html","title":"injectable - IndentedListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IndentedListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/indented-list/indented-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                indentData$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                makeIndentData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        makeIndentData\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeIndentData(currentSheet: Sheet, data: Row[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/indented-list/indented-list.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Row[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { data: any; sheet: any; } | { data: any; sheet?: undefined; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        indentData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.indentData.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ILNode } from '../../models/indent.model';\nimport { Row, Sheet } from '../../models/sheet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IndentedListService {\n  private readonly indentData = new Subject();\n  readonly indentData$ = this.indentData.asObservable();\n\n  public makeIndentData(currentSheet: Sheet, data: Row[]) {\n    let root = new ILNode(data[0].anatomical_structures[0].name ?? '', [], data[0].anatomical_structures[0].id ?? '');\n    root.comparator = root.name + root.ontologyId;\n    root.type = 'root';\n\n    let parent: ILNode;\n\n    try {\n      data.forEach((row) => {\n        parent = root;\n\n        row.anatomical_structures.forEach((structure) => {\n          const s =\n            parent.children?.findIndex(\n              (i) => i.type !== 'root' && i.comparator === parent.comparator + structure.name + structure.id,\n            ) ?? -1;\n          if (s === -1) {\n            const newNode = new ILNode(structure.name ?? '', [], structure.id ?? '');\n            newNode.comparator = parent.comparator + newNode.name + newNode.ontologyId;\n            parent.children?.push(newNode);\n            parent = newNode;\n          } else {\n            parent = parent.children?.[s] as ILNode;\n          }\n        });\n      });\n\n      root = root.children?.[0] as ILNode; // reassign to avoid duplicate parent\n      this.indentData.next({\n        data: root,\n        sheet: currentSheet.display,\n      });\n\n      return {\n        data: root,\n        sheet: currentSheet.display,\n      };\n    } catch {\n      this.indentData.next({\n        data: null,\n      });\n    }\n\n    return { data: null };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/info/info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info\n            \n\n\n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Readonly\n                                data\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                ga\n                            \n                            \n                                info\n                            \n                            \n                                loading\n                            \n                            \n                                noId\n                            \n                            \n                                    Public\n                                    Readonly\n                                sheetRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Observable, changeDetectorRef: ChangeDetectorRef, sheetRef: MatBottomSheetRef, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/info/info.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Observable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheetRef\n                                                  \n                                                        \n                                                                    MatBottomSheetRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/info/info.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_BOTTOM_SHEET_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Error\n\n                    \n                \n                \n                    \n                        Default value : { hasError: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SheetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        sheetRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatBottomSheetRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { Error } from '../../models/response.model';\nimport { SheetInfo } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss'],\n})\nexport class InfoComponent implements OnInit {\n  loading = true;\n  noId = false;\n  error: Error = { hasError: false };\n  info!: SheetInfo;\n\n  // @Output() close: EventEmitter = new EventEmitter();\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public readonly data: Observable,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    public readonly sheetRef: MatBottomSheetRef,\n    public readonly ga: GoogleAnalyticsService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.data.subscribe((info: SheetInfo) => {\n      this.info = info;\n      this.loading = false;\n\n      if (info.hasError) {\n        this.error = {\n          hasError: info.hasError,\n          msg: info.msg,\n          status: info.status,\n        };\n      } else {\n        this.error = { hasError: false };\n        this.info = info;\n      }\n\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  close() {\n    this.ga.event(GaAction.CLICK, GaCategory.GRAPH, 'Close Bottom Sheet Information', +false);\n    this.sheetRef.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ info.name }}\n    \n    \n      \n        close\n      \n    \n  \n\n  \n    \n      \n      Please wait while the data loads...\n    \n  \n\n  \n    \n      Could not fetch data {{ !info.notes ? 'and notes' : '' }} for\n      {{ info.name }}\n      {{\n        info.notes\n          ? 'but we have some\n      notes available'\n          : ''\n      }}. This could be because,\n      \n        Structure does not have an ontology ID.\n        Structure has an invalid ontology ID.\n        Broken network connection.\n      \n      \n        \n\n        Notes\n        \n          {{ info.notes }}\n        \n      \n      \n        \n        DOI\n        \n          \n            {{ refer.doi }}\n          \n        \n      \n    \n  \n\n  \n    \n      Description\n      \n        {{ info.desc ? info.desc : 'No description found.' }}\n      \n\n      \n\n      Ontology ID\n      \n        {{ info.ontologyId ? info.ontologyId : 'No ID found.' }}\n      \n\n      \n\n      {{ info.ontologyCode === 'HGNC' ? 'Link' : 'IRI' }}\n      \n        {{ info.iri ? info.iri : 'No IRI found.' }}\n      \n\n      \n        \n          \n          {{ item.key }}\n          \n            {{\n              item.value\n                ? item.value\n                : 'No ' +\n                  item.key +\n                  '\n              found.'\n            }}\n          \n        \n      \n\n      \n      \n      Notes\n       \n\n      \n\n      DOI\n      \n        \n          \n            {{ refer.doi }}\n          \n        \n      \n      No DOI references found\n    \n  \n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                .info {\n  max-height: 18.75rem;\n  overflow: auto;\n}\n.loading-wait {\n  width: 10%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ info.name }}                      close                              Please wait while the data loads...                  Could not fetch data {{ !info.notes ? \\'and notes\\' : \\'\\' }} for      {{ info.name }}      {{        info.notes          ? \\'but we have some      notes available\\'          : \\'\\'      }}. This could be because,              Structure does not have an ontology ID.        Structure has an invalid ontology ID.        Broken network connection.                            Notes                  {{ info.notes }}                                    DOI                              {{ refer.doi }}                                          Description              {{ info.desc ? info.desc : \\'No description found.\\' }}                  Ontology ID              {{ info.ontologyId ? info.ontologyId : \\'No ID found.\\' }}                  {{ info.ontologyCode === \\'HGNC\\' ? \\'Link\\' : \\'IRI\\' }}              {{ info.iri ? info.iri : \\'No IRI found.\\' }}                                        {{ item.key }}                      {{              item.value                ? item.value                : \\'No \\' +                  item.key +                  \\'              found.\\'            }}                                          Notes                   DOI                                    {{ refer.doi }}                              No DOI references found      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoModule.html":{"url":"modules/InfoModule.html","title":"module - InfoModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoModule\n\n\n\ncluster_InfoModule_exports\n\n\n\ncluster_InfoModule_declarations\n\n\n\n\nInfoComponent\n\nInfoComponent\n\n\n\nInfoModule\n\nInfoModule\n\nInfoModule -->\n\nInfoComponent->InfoModule\n\n\n\n\n\nInfoComponent \n\nInfoComponent \n\nInfoComponent  -->\n\nInfoModule->InfoComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/info/info.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoComponent } from './info.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MarkdownModule } from 'ngx-markdown';\n\n@NgModule({\n  declarations: [InfoComponent],\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatBottomSheetModule, MarkdownModule],\n  exports: [InfoComponent],\n})\nexport class InfoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Legend.html":{"url":"interfaces/Legend.html","title":"interface - Legend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Legend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/legend.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bmType\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            sortOrder\n                                        \n                                \n                                \n                                        \n                                            style\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bmType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortOrder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Legend {\n  name: string;\n  color: string;\n  style: string;\n  sortOrder: number;\n  bmType?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/legend/legend.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n\n\n            \n                styleUrls\n                ./legend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                legends\n                            \n                            \n                                    Public\n                                ls\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bimodalData\n                            \n                            \n                                compareData\n                            \n                            \n                                error\n                            \n                            \n                                treeData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ls: LegendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/legend/legend.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ls\n                                                  \n                                                        \n                                                                        LegendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bimodalData\n                    \n                \n                \n                    \n                        Type :         BimodalData\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/legend/legend.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        compareData\n                    \n                \n                \n                    \n                        Type :         CompareData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/legend/legend.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/legend/legend.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        treeData\n                    \n                \n                \n                    \n                        Type :         TNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/legend/legend.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        legends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Legend[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/legend/legend.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LegendService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/legend/legend.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { BimodalData } from '../../models/bimodal.model';\nimport { Legend } from '../../models/legend.model';\nimport { Error } from '../../models/response.model';\nimport { CompareData } from '../../models/sheet.model';\nimport { TNode } from '../../models/tree.model';\nimport { LegendService } from './legend.service';\nimport { delay } from 'rxjs';\n\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.scss'],\n})\nexport class LegendComponent implements OnInit, OnChanges {\n  legends: Legend[] = [];\n\n  @Input() treeData: TNode[] = [];\n  @Input() bimodalData!: BimodalData;\n  @Input() compareData: CompareData[] = [];\n  @Input() error!: Error;\n\n  constructor(public ls: LegendService) {}\n\n  ngOnInit(): void {\n    this.ls.legendData$.pipe(delay(0)).subscribe((data) => {\n      if (data.length) {\n        this.legends = data;\n      }\n    });\n  }\n\n  ngOnChanges() {\n    if (this.treeData && this.bimodalData) {\n      if (this.treeData.length && this.bimodalData.nodes.length) {\n        this.ls.makeLegendData(this.treeData, this.bimodalData.nodes, this.compareData);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Legend \n        \n      \n    \n    \n      \n        \n          \n          {{ l.name }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./legend.component.scss\n                \n                @import './../../../assets/stylesheets/_colors.scss';\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n  box-shadow: none;\n}\n\n.mat-expansion-panel-header:not(.compare) {\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header {\n  transition: all 0.3s;\n  background-color: $secondary !important;\n}\n\n.mat-expansion-panel-header:hover {\n  background-color: darken($color: $secondary, $amount: 8%) !important;\n}\n\n.circle {\n  height: 0.9375rem;\n  width: 0.9375rem;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.rect {\n  height: 0.125rem;\n  width: 0.9375rem;\n  display: inline-block;\n}\n\n.protein {\n  height: 1.063rem;\n  width: 1.063rem;\n  background-image: url(../../../assets/legends/diamondSymbol.svg);\n  background-repeat: no-repeat;\n  background-position: -0.438rem -0.438rem;\n  background-color: unset !important;\n}\n\n.lipids {\n  height: 1.063rem;\n  width: 1.063rem;\n  background-image: url(../../../assets/legends/squareSymbol.svg);\n  background-repeat: no-repeat;\n  background-color: unset !important;\n  background-position: -0.438rem -0.438rem;\n}\n\n.metabolites {\n  height: 1.063rem;\n  width: 1.063rem;\n  background-image: url(../../../assets/legends/triangleSymbol.svg);\n  background-color: unset !important;\n  background-repeat: no-repeat;\n  background-position: -0.438rem -0.438rem;\n}\n\n.proteoforms {\n  height: 1.063rem;\n  width: 1.063rem;\n  background-image: url(../../../assets/legends/crossSymbol.svg);\n  background-color: unset !important;\n  background-repeat: no-repeat;\n  background-position: -0.438rem -0.438rem;\n}\n\n.legend-div {\n  max-height: 11.25rem;\n  overflow-y: auto;\n\n  .legend-label {\n    padding-left: 0.5rem;\n    letter-spacing: 0.1px;\n    font-size: 14px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Legend                                                         {{ l.name }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LegendModule.html":{"url":"modules/LegendModule.html","title":"module - LegendModule","body":"\n                   \n\n\n\n\n    Modules\n    LegendModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LegendModule\n\n\n\ncluster_LegendModule_exports\n\n\n\ncluster_LegendModule_imports\n\n\n\ncluster_LegendModule_declarations\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nLegendModule\n\nLegendModule\n\nLegendModule -->\n\nLegendComponent->LegendModule\n\n\n\n\n\nLegendComponent \n\nLegendComponent \n\nLegendComponent  -->\n\nLegendModule->LegendComponent \n\n\n\n\n\nOrderByPipe\n\nOrderByPipe\n\nLegendModule -->\n\nOrderByPipe->LegendModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/legend/legend.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LegendComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OrderByPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LegendComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LegendComponent } from './legend.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { OrderByPipe } from '../../pipes/order-by/order-by.pipe';\n\n@NgModule({\n  declarations: [LegendComponent],\n  imports: [CommonModule, MatExpansionModule, OrderByPipe],\n  exports: [LegendComponent],\n})\nexport class LegendModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegendService.html":{"url":"injectables/LegendService.html","title":"injectable - LegendService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/legend/legend.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                legendData$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeLegendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        makeLegendData\n                        \n                    \n                \n            \n            \n                \nmakeLegendData(treeData: TNode[], bimodalData: BMNode[], compareData: CompareData[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/legend/legend.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                treeData\n                                            \n                                                            TNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                bimodalData\n                                            \n                                                            BMNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                compareData\n                                            \n                                                            CompareData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Legend[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        legendData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.legendData.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/legend/legend.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { BMNode } from '../../models/bimodal.model';\nimport { Legend } from '../../models/legend.model';\nimport { CompareData, PROTEIN_PRESENCE } from '../../models/sheet.model';\nimport { TNode } from '../../models/tree.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LegendService {\n  private readonly legendData = new Subject();\n  readonly legendData$ = this.legendData.asObservable();\n\n  makeLegendData(treeData: TNode[], bimodalData: BMNode[], compareData: CompareData[] = []): Legend[] {\n    const legends: Legend[] = [];\n    let addedBMBG = false;\n    let addedBMBP = false;\n    let addedBMBL = false;\n    let addedBMBM = false;\n    let addedBMBF = false;\n    let addedCT = false;\n    let addedBMProteinAbsencePath = false;\n    let addedBMProteinPresencePath = false;\n    let addedBMProteinIntermediatePath = false;\n    for (const i of treeData) {\n      if (legends.findIndex((l) => l.name === 'Anatomical Structures') === -1) {\n        legends.push({\n          name: 'Anatomical Structures',\n          color: '#E41A1C',\n          style: '',\n          sortOrder: 1,\n        });\n      }\n      if (i.isNew) {\n        if (legends.findIndex((l) => l.color === i.color) === -1) {\n          if (compareData.length) {\n            legends.push({\n              name: compareData.find((c) => c.color === i.color)?.title ?? '',\n              color: i.color,\n              style: '',\n              sortOrder: 10,\n            });\n\n            legends.push({\n              name: (compareData.find((c) => c.color === i.color)?.title ?? '') + ' - New Nodes',\n              color: i.color,\n              style: 'stroke',\n              sortOrder: 11,\n            });\n          }\n        }\n      }\n    }\n\n    for (const i of bimodalData) {\n      if (i.isNew) {\n        if (legends.findIndex((l) => l.color === i.color) === -1) {\n          if (compareData.length) {\n            legends.push({\n              name: compareData.find((c) => c.color === i.color)?.title ?? '',\n              color: i.color,\n              style: '',\n              sortOrder: 10,\n            });\n\n            legends.push({\n              name: (compareData.find((c) => c.color === i.color)?.title ?? '') + ' - New Nodes',\n              color: i.color,\n              style: 'stroke',\n              sortOrder: 11,\n            });\n          }\n        }\n      }\n      if (i.type === 'BM') {\n        if (!addedBMBG && i.bType === 'gene') {\n          legends.push({\n            name: 'Gene Biomarkers',\n            color: '#4DAF4A',\n            style: '',\n            bmType: 'biomarker',\n            sortOrder: 3,\n          });\n          addedBMBG = true;\n        }\n        if (!addedBMBP && i.bType === 'protein') {\n          legends.push({\n            name: 'Protein Biomarkers',\n            color: '#4DAF4A',\n            style: '',\n            bmType: 'biomarker',\n            sortOrder: 4,\n          });\n          addedBMBP = true;\n        }\n        if (!addedBMProteinPresencePath && i.proteinPresence === PROTEIN_PRESENCE.POS && i.bType === 'protein') {\n          legends.push({\n            name: 'Protein Presence',\n            color: '#00008B',\n            style: '',\n            sortOrder: 97,\n          });\n          addedBMProteinPresencePath = true;\n        }\n        if (!addedBMProteinAbsencePath && i.proteinPresence === PROTEIN_PRESENCE.NEG && i.bType === 'protein') {\n          legends.push({\n            name: 'Protein Absence',\n            color: '#E16156',\n            style: '',\n            sortOrder: 98,\n          });\n          addedBMProteinAbsencePath = true;\n        }\n        if (\n          !addedBMProteinIntermediatePath &&\n          i.proteinPresence === PROTEIN_PRESENCE.INTERMEDIATE &&\n          i.bType === 'protein'\n        ) {\n          legends.push({\n            name: 'Intermediate Protein',\n            color: '#4B2079',\n            style: '',\n            sortOrder: 99,\n          });\n          addedBMProteinIntermediatePath = true;\n        }\n        if (!addedBMBL && i.bType === 'lipids') {\n          legends.push({\n            name: 'Lipids Biomarkers',\n            color: '#4DAF4A',\n            style: '',\n            bmType: 'biomarker',\n            sortOrder: 5,\n          });\n          addedBMBL = true;\n        }\n        if (!addedBMBM && i.bType === 'metabolites') {\n          legends.push({\n            name: 'Metabolites Biomarkers',\n            color: '#4DAF4A',\n            style: '',\n            bmType: 'biomarker',\n            sortOrder: 6,\n          });\n          addedBMBM = true;\n        }\n        if (!addedBMBF && i.bType === 'proteoforms') {\n          legends.push({\n            name: 'Proteoforms Biomarkers',\n            color: '#4DAF4A',\n            style: '',\n            bmType: 'biomarker',\n            sortOrder: 7,\n          });\n          addedBMBF = true;\n        }\n      }\n      if (!addedCT && i.type === 'BM') {\n        legends.push({\n          name: 'Cell Types',\n          color: '#377EB8',\n          style: '',\n          sortOrder: 2,\n        });\n        addedCT = true;\n      }\n    }\n\n    for (const item of compareData) {\n      if (legends.findIndex((l) => l.color === item.color) === -1) {\n        legends.push({\n          name: item.title,\n          color: item.color,\n          style: '',\n          sortOrder: 10,\n        });\n      }\n    }\n    legends.push({\n      name: 'AS-AS, AS-CT, CT-BM Paths',\n      color: '#ccc',\n      style: '',\n      sortOrder: 99,\n    });\n    this.legendData.next(legends);\n    return legends;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Legends.html":{"url":"classes/Legends.html","title":"class - Legends","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Legends\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/legends.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                legends\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeBimodalLegend\n                            \n                            \n                                makeTreeLegend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/legends.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        legends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Legend[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/legends.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/legends.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Legend[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalLegend\n                        \n                    \n                \n            \n            \n                \nmakeBimodalLegend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/legends.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { type: string; orient: string; fill: string; title: string; offset: number; titlePadding: number; titleFontSize: number; labelFontSize: number; labelOffset: number; symbolSize: number; rowPadding: number; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeLegend\n                        \n                    \n                \n            \n            \n                \nmakeTreeLegend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/legends.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { type: string; orient: string; legendX: number; legendY: number; fill: string; labelFontSize: number; labelOffset: number; symbolSize: number; rowPadding: number; encode: { symbols: { update: { stroke: { ...; }; strokeWidth: { ...; }; }; }; }; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Legend } from 'vega';\n\nexport class Legends {\n  static create(): Legend[] {\n    return new Legends().legends;\n  }\n\n  legends: Legend[];\n\n  constructor() {\n    this.legends = [\n      // this.makeBimodalLegend(),\n      // this.makeTreeLegend()\n    ];\n  }\n\n  makeBimodalLegend() {\n    return {\n      type: 'symbol',\n      orient: 'top-left',\n      fill: 'bimodal',\n      title: 'Legend',\n      offset: -15,\n      titlePadding: 20,\n      titleFontSize: 16,\n      labelFontSize: 14,\n      labelOffset: 10,\n      symbolSize: 200,\n      rowPadding: 10,\n    };\n  }\n\n  makeTreeLegend() {\n    return {\n      type: 'symbol',\n      orient: 'none',\n      legendX: -15,\n      legendY: 98,\n      fill: 'treeLegend',\n      labelFontSize: 14,\n      labelOffset: 10,\n      symbolSize: 200,\n      rowPadding: 10,\n      encode: {\n        symbols: {\n          update: {\n            stroke: { value: 'black' },\n            strokeWidth: { value: 2 },\n          },\n        },\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Link.html":{"url":"interfaces/Link.html","title":"interface - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            s\n                                        \n                                \n                                \n                                        \n                                            t\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        s\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        s:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        t\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        t:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinksASCTBData.html":{"url":"interfaces/LinksASCTBData.html","title":"interface - LinksASCTBData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LinksASCTBData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AS_AS\n                                        \n                                \n                                \n                                        \n                                            AS_AS_organWise\n                                        \n                                \n                                \n                                        \n                                            AS_CT\n                                        \n                                \n                                \n                                        \n                                            AS_CT_organWise\n                                        \n                                \n                                \n                                        \n                                            CT_B\n                                        \n                                \n                                \n                                        \n                                            CT_B_organWise\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AS_AS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_AS:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AS_AS_organWise\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_AS_organWise:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AS_CT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_CT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AS_CT_organWise\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_CT_organWise:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CT_B\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CT_B:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CT_B_organWise\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CT_B_organWise:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Loading.html":{"url":"interfaces/Loading.html","title":"interface - Loading","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Loading\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ui.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            loadingText\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadingText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Log } from './logs.model';\nimport { SnackbarType } from './response.model';\nimport { Reference } from './sheet.model';\n\nexport interface Snackbar {\n  opened: boolean;\n  text: string;\n  type: SnackbarType;\n}\n\nexport interface Loading {\n  loading: boolean;\n  loadingText: string;\n}\n\nexport interface OpenBottomSheetData {\n  name: string;\n  ontologyId: string;\n  group: number;\n  references: Reference[];\n  notes: string;\n}\n\nexport interface Logs {\n  sheetLogs: Log;\n  allLogs: Log[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loading/loading.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n\n\n            \n                styleUrls\n                ./loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                loadingText$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loading/loading.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/loading/loading.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loadingText$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(UIState)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/loading/loading.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { UIState, UIStateModel } from '../../store/ui.state';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent implements OnInit {\n  @Select(UIState) loadingText$!: Observable;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) {}\n\n  ngOnInit(): void {\n    this.loadingText$.subscribe((l) => {\n      this.data = l.loadingText;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Please wait...\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./loading.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Please wait...          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoadingModule.html":{"url":"modules/LoadingModule.html","title":"module - LoadingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoadingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoadingModule\n\n\n\ncluster_LoadingModule_exports\n\n\n\ncluster_LoadingModule_declarations\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\n\n\nLoadingModule\n\nLoadingModule\n\nLoadingModule -->\n\nLoadingComponent->LoadingModule\n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nLoadingModule->LoadingComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/loading/loading.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoadingComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoadingComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingComponent } from './loading.component';\n\n@NgModule({\n  declarations: [LoadingComponent],\n  imports: [CommonModule],\n  exports: [LoadingComponent],\n})\nexport class LoadingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageSyncService.html":{"url":"injectables/LocalStorageSyncService.html","title":"injectable - LocalStorageSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage-sync.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, key: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-storage-sync.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Consent, ConsentService } from './consent.service';\n\nexport const LOCAL_STORAGE_CONSENT_KEY = new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY',\n});\n\n@Injectable()\nexport class LocalStorageSyncService implements OnDestroy {\n  private readonly storage?: typeof localStorage;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(LOCAL_STORAGE_CONSENT_KEY) private readonly key: string,\n  ) {\n    try {\n      this.storage = localStorage;\n    } catch (_error) {\n      /* Ignored */\n    }\n\n    consentService.setConsent(this.loadConsent());\n    this.subscriptions.add(consentService.consentChange.subscribe((consent) => this.saveConsent(consent)));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private loadConsent(): Consent {\n    const rawValue = this.storage?.getItem?.(this.key);\n    if (rawValue == null) {\n      return 'not-set';\n    }\n\n    const value = rawValue.trim().toLowerCase();\n    switch (value) {\n      case 'given': /* fallthrough */\n      case 'rescinded':\n        return value;\n      default:\n        return 'not-set';\n    }\n  }\n\n  private saveConsent(value: Consent): void {\n    this.storage?.setItem?.(this.key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Log.html":{"url":"interfaces/Log.html","title":"interface - Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/logs.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            MULTI_IN_LINKS\n                                        \n                                \n                                \n                                        \n                                            NO_IN_LINKS\n                                        \n                                \n                                \n                                        \n                                            NO_OUT_LINKS\n                                        \n                                \n                                \n                                        \n                                            SELF_LINKS\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     LogEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MULTI_IN_LINKS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MULTI_IN_LINKS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NO_IN_LINKS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NO_IN_LINKS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NO_OUT_LINKS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NO_OUT_LINKS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SELF_LINKS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SELF_LINKS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum LOG_TYPES {\n  MSG = 'MSG',\n  NO_OUT_LINKS = 'NO_OUT_LINKS',\n  NO_IN_LINKS = 'NO_IN_LINKS',\n  MULTI_IN_LINKS = 'MULTI_IN_LINKS',\n  SELF_LINKS = 'SELF_LINKS',\n}\n\nexport enum LOG_ICONS {\n  error = 'cancel',\n  warning = 'error',\n  success = 'check_circle',\n  file = 'next_plan',\n}\n\nexport interface Log {\n  id: number;\n  messages: LogEntry[];\n  NO_OUT_LINKS: string[];\n  NO_IN_LINKS: string[];\n  MULTI_IN_LINKS: string[];\n  SELF_LINKS: string[];\n}\n\nexport interface LogEntry {\n  icon: string;\n  text: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntry.html":{"url":"interfaces/LogEntry.html","title":"interface - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/logs.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum LOG_TYPES {\n  MSG = 'MSG',\n  NO_OUT_LINKS = 'NO_OUT_LINKS',\n  NO_IN_LINKS = 'NO_IN_LINKS',\n  MULTI_IN_LINKS = 'MULTI_IN_LINKS',\n  SELF_LINKS = 'SELF_LINKS',\n}\n\nexport enum LOG_ICONS {\n  error = 'cancel',\n  warning = 'error',\n  success = 'check_circle',\n  file = 'next_plan',\n}\n\nexport interface Log {\n  id: number;\n  messages: LogEntry[];\n  NO_OUT_LINKS: string[];\n  NO_IN_LINKS: string[];\n  MULTI_IN_LINKS: string[];\n  SELF_LINKS: string[];\n}\n\nexport interface LogEntry {\n  icon: string;\n  text: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logs.html":{"url":"interfaces/Logs.html","title":"interface - Logs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Logs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ui.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allLogs\n                                        \n                                \n                                \n                                        \n                                            sheetLogs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allLogs:         Log[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Log[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetLogs:         Log\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Log\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Log } from './logs.model';\nimport { SnackbarType } from './response.model';\nimport { Reference } from './sheet.model';\n\nexport interface Snackbar {\n  opened: boolean;\n  text: string;\n  type: SnackbarType;\n}\n\nexport interface Loading {\n  loading: boolean;\n  loadingText: string;\n}\n\nexport interface OpenBottomSheetData {\n  name: string;\n  ontologyId: string;\n  group: number;\n  references: Reference[];\n  notes: string;\n}\n\nexport interface Logs {\n  sheetLogs: Log;\n  allLogs: Log[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogsState.html":{"url":"injectables/LogsState.html","title":"injectable - LogsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/logs.state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                clearSheetLogs\n                            \n                            \n                                    \n                                    Static\n                                getLogs\n                            \n                            \n                                    \n                                reportLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clearSheetLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearSheetLogs(undefined: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearSheetLogs)\n                \n            \n\n                    \n                        \n                            Defined in src/app/store/logs.state.ts:110\n                        \n                    \n\n\n            \n                \n                        Action to clear the logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Static\n                        getLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogs(state: LogsStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n                    \n                        \n                            Defined in src/app/store/logs.state.ts:53\n                        \n                    \n\n\n            \n                \n                        Returns the sheet logs and all logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            LogsStateModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { sheetLogs: Log; allLogs: {}; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    reportLog(undefined: StateContext, undefined: ReportLog)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ReportLog)\n                \n            \n\n                    \n                        \n                            Defined in src/app/store/logs.state.ts:64\n                        \n                    \n\n\n            \n                \n                        Action to add a log\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            ReportLog\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Action, Selector, State, StateContext } from '@ngxs/store';\n\nimport { Injectable } from '@angular/core';\nimport { ClearSheetLogs, ReportLog } from '../actions/logs.actions';\nimport { Log, LogEntry } from '../models/logs.model';\n\n/** Class to keep track of the logs */\nexport interface LogsStateModel {\n  /**\n   * Id of the log\n   */\n  id: number;\n  /**\n   * Logs of the current sheet\n   */\n  sheetLogs: Log;\n  /**\n   * All logs of a session\n   */\n  allLogs: Log[];\n}\n\n@State({\n  name: 'logsState',\n  defaults: {\n    id: 0,\n    sheetLogs: {\n      id: 0,\n      messages: [],\n      NO_IN_LINKS: [],\n      NO_OUT_LINKS: [],\n      MULTI_IN_LINKS: [],\n      SELF_LINKS: [],\n    },\n    allLogs: [\n      {\n        id: 0,\n        messages: [],\n        NO_IN_LINKS: [],\n        NO_OUT_LINKS: [],\n        MULTI_IN_LINKS: [],\n        SELF_LINKS: [],\n      },\n    ],\n  },\n})\n@Injectable()\nexport class LogsState {\n  /**\n   * Returns the sheet logs and all logs\n   */\n  @Selector()\n  static getLogs(state: LogsStateModel) {\n    return {\n      sheetLogs: state.sheetLogs,\n      allLogs: state.allLogs,\n    };\n  }\n\n  /**\n   * Action to add a log\n   */\n  @Action(ReportLog)\n  reportLog({ getState }: StateContext, { type, message, icon, version }: ReportLog) {\n    const state = getState();\n    const allLogs = state.allLogs;\n    const sheetLogs = state.sheetLogs;\n    const id = state.id;\n\n    switch (type) {\n      case 'MSG': {\n        const newLog: LogEntry = { text: message, icon: icon ?? '', version };\n        sheetLogs.messages.push(newLog);\n\n        const foundLog = allLogs.find((l) => l.id === id);\n        foundLog?.messages.push(newLog);\n        break;\n      }\n      case 'NO_OUT_LINKS': {\n        sheetLogs.NO_OUT_LINKS.push(message);\n        const foundNOLLog = allLogs.find((l) => l.id === id);\n        foundNOLLog?.NO_OUT_LINKS.push(message);\n        break;\n      }\n      case 'NO_IN_LINKS': {\n        sheetLogs.NO_IN_LINKS.push(message);\n        const foundNILLog = allLogs.find((l) => l.id === id);\n        foundNILLog?.NO_IN_LINKS.push(message);\n        break;\n      }\n      case 'MULTI_IN_LINKS': {\n        sheetLogs.MULTI_IN_LINKS.push(message);\n        const foundMILLLog = allLogs.find((l) => l.id === id);\n        foundMILLLog?.MULTI_IN_LINKS.push(message);\n        break;\n      }\n      case 'SELF_LINKS': {\n        sheetLogs.SELF_LINKS.push(message);\n        const foundSLLog = allLogs.find((l) => l.id === id);\n        foundSLLog?.SELF_LINKS.push(message);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Action to clear the logs\n   */\n  @Action(ClearSheetLogs)\n  clearSheetLogs({ getState, setState }: StateContext) {\n    const state = getState();\n    const allLogs = state.allLogs;\n\n    const id = state.id + 1;\n    allLogs.push({\n      id,\n      messages: [],\n      NO_IN_LINKS: [],\n      NO_OUT_LINKS: [],\n      MULTI_IN_LINKS: [],\n      SELF_LINKS: [],\n    });\n    setState({\n      ...state,\n      id,\n      sheetLogs: {\n        id,\n        messages: [],\n        NO_IN_LINKS: [],\n        NO_OUT_LINKS: [],\n        MULTI_IN_LINKS: [],\n        SELF_LINKS: [],\n      },\n      allLogs,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogsStateModel.html":{"url":"interfaces/LogsStateModel.html","title":"interface - LogsStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogsStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/logs.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to keep track of the logs\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allLogs\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            sheetLogs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allLogs:         Log[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Log[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All logs of a session\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the log\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetLogs:         Log\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Log\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Logs of the current sheet\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Action, Selector, State, StateContext } from '@ngxs/store';\n\nimport { Injectable } from '@angular/core';\nimport { ClearSheetLogs, ReportLog } from '../actions/logs.actions';\nimport { Log, LogEntry } from '../models/logs.model';\n\n/** Class to keep track of the logs */\nexport interface LogsStateModel {\n  /**\n   * Id of the log\n   */\n  id: number;\n  /**\n   * Logs of the current sheet\n   */\n  sheetLogs: Log;\n  /**\n   * All logs of a session\n   */\n  allLogs: Log[];\n}\n\n@State({\n  name: 'logsState',\n  defaults: {\n    id: 0,\n    sheetLogs: {\n      id: 0,\n      messages: [],\n      NO_IN_LINKS: [],\n      NO_OUT_LINKS: [],\n      MULTI_IN_LINKS: [],\n      SELF_LINKS: [],\n    },\n    allLogs: [\n      {\n        id: 0,\n        messages: [],\n        NO_IN_LINKS: [],\n        NO_OUT_LINKS: [],\n        MULTI_IN_LINKS: [],\n        SELF_LINKS: [],\n      },\n    ],\n  },\n})\n@Injectable()\nexport class LogsState {\n  /**\n   * Returns the sheet logs and all logs\n   */\n  @Selector()\n  static getLogs(state: LogsStateModel) {\n    return {\n      sheetLogs: state.sheetLogs,\n      allLogs: state.allLogs,\n    };\n  }\n\n  /**\n   * Action to add a log\n   */\n  @Action(ReportLog)\n  reportLog({ getState }: StateContext, { type, message, icon, version }: ReportLog) {\n    const state = getState();\n    const allLogs = state.allLogs;\n    const sheetLogs = state.sheetLogs;\n    const id = state.id;\n\n    switch (type) {\n      case 'MSG': {\n        const newLog: LogEntry = { text: message, icon: icon ?? '', version };\n        sheetLogs.messages.push(newLog);\n\n        const foundLog = allLogs.find((l) => l.id === id);\n        foundLog?.messages.push(newLog);\n        break;\n      }\n      case 'NO_OUT_LINKS': {\n        sheetLogs.NO_OUT_LINKS.push(message);\n        const foundNOLLog = allLogs.find((l) => l.id === id);\n        foundNOLLog?.NO_OUT_LINKS.push(message);\n        break;\n      }\n      case 'NO_IN_LINKS': {\n        sheetLogs.NO_IN_LINKS.push(message);\n        const foundNILLog = allLogs.find((l) => l.id === id);\n        foundNILLog?.NO_IN_LINKS.push(message);\n        break;\n      }\n      case 'MULTI_IN_LINKS': {\n        sheetLogs.MULTI_IN_LINKS.push(message);\n        const foundMILLLog = allLogs.find((l) => l.id === id);\n        foundMILLLog?.MULTI_IN_LINKS.push(message);\n        break;\n      }\n      case 'SELF_LINKS': {\n        sheetLogs.SELF_LINKS.push(message);\n        const foundSLLog = allLogs.find((l) => l.id === id);\n        foundSLLog?.SELF_LINKS.push(message);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Action to clear the logs\n   */\n  @Action(ClearSheetLogs)\n  clearSheetLogs({ getState, setState }: StateContext) {\n    const state = getState();\n    const allLogs = state.allLogs;\n\n    const id = state.id + 1;\n    allLogs.push({\n      id,\n      messages: [],\n      NO_IN_LINKS: [],\n      NO_OUT_LINKS: [],\n      MULTI_IN_LINKS: [],\n      SELF_LINKS: [],\n    });\n    setState({\n      ...state,\n      id,\n      sheetLogs: {\n        id,\n        messages: [],\n        NO_IN_LINKS: [],\n        NO_OUT_LINKS: [],\n        MULTI_IN_LINKS: [],\n        SELF_LINKS: [],\n      },\n      allLogs,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Marker.html":{"url":"classes/Marker.html","title":"class - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                count\n                            \n                            \n                                isNew\n                            \n                            \n                                parents\n                            \n                            \n                                structure\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(structure: string, count: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tree.model.ts:146\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        structure\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        count\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:142\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Marks.html":{"url":"classes/Marks.html","title":"class - Marks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Marks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/marks.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                marks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeBimodalMarkGroup\n                            \n                            \n                                makeMultiParentMarkGroup\n                            \n                            \n                                makeTreeMarkGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/marks.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        marks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Mark[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/marks.ts:14\n                        \n                    \n\n            \n                \n                    List of vega marks\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/marks.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Mark[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeBimodalMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/marks.ts:37\n                        \n                    \n\n\n            \n                \n                        Creates mark group for bimodal network\n\n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeMultiParentMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeMultiParentMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/marks.ts:30\n                        \n                    \n\n\n            \n                \n                        Creates mark group for multiparent (depricated)\n\n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeTreeMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/marks.ts:23\n                        \n                    \n\n\n            \n                \n                        Creates mark group for the AS tree\n\n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GroupMark, Mark } from 'vega';\nimport { BimodalMarkGroup } from './groups/bimodal';\nimport { MultiParentMarkGroup } from './groups/multiparent';\nimport { TreeMarkGroup } from './groups/tree';\n\nexport class Marks {\n  static create(): Mark[] {\n    return new Marks().marks;\n  }\n\n  /**\n   * List of vega marks\n   */\n  marks: Mark[];\n\n  constructor() {\n    this.marks = [this.makeMultiParentMarkGroup(), this.makeTreeMarkGroup(), this.makeBimodalMarkGroup()];\n  }\n\n  /**\n   * Creates mark group for the AS tree\n   */\n  makeTreeMarkGroup(): GroupMark {\n    return TreeMarkGroup.create();\n  }\n\n  /**\n   * Creates mark group for multiparent (depricated)\n   */\n  makeMultiParentMarkGroup(): GroupMark {\n    return MultiParentMarkGroup.create();\n  }\n\n  /**\n   * Creates mark group for bimodal network\n   */\n  makeBimodalMarkGroup(): GroupMark {\n    return BimodalMarkGroup.create();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Metadata.html":{"url":"interfaces/Metadata.html","title":"interface - Metadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Metadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bmType\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                        \n                                            ontologyType\n                                        \n                                \n                                \n                                        \n                                            ontologyTypeId\n                                        \n                                \n                                \n                                        \n                                            references\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bmType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoreOption.html":{"url":"interfaces/MoreOption.html","title":"interface - MoreOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoreOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MousePositionTrackerModule.html":{"url":"modules/MousePositionTrackerModule.html","title":"module - MousePositionTrackerModule","body":"\n                   \n\n\n\n\n    Modules\n    MousePositionTrackerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/mouse-position-tracker.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent(el, 'mousemove').pipe(throttleTime(1000), map(formatData));\n\n  return events.subscribe((data) => ga.event('webpage', 'mousemove', data));\n}\n\n@NgModule()\nexport class MousePositionTrackerModule {\n  constructor(\n    // NOTE: Angular compiler fails when document is typed properly?!\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    @Inject(DOCUMENT) document: any,\n    ga: GoogleAnalyticsService,\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultiParentMarkGroup.html":{"url":"classes/MultiParentMarkGroup.html","title":"class - MultiParentMarkGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultiParentMarkGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/groups/multiparent.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeMultiParentMarkGroup\n                            \n                            \n                                makeMultiParentPathMarks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/groups/multiparent.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GroupMark\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/groups/multiparent.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/multiparent.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeMultiParentMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeMultiParentMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/multiparent.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeMultiParentPathMarks\n                        \n                    \n                \n            \n            \n                \nmakeMultiParentPathMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/multiparent.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { type: string; from: { data: string; }; encode: { update: { path: { field: string; }; stroke: { signal: string; }; strokeDash: { value: {}; }; opacity: {}; zIndex: { value: number; }; strokeWidth: { value: number; }; }; }; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GroupMark } from 'vega';\n\nexport class MultiParentMarkGroup {\n  static create(): GroupMark {\n    return new MultiParentMarkGroup().group;\n  }\n\n  group: GroupMark;\n\n  constructor() {\n    this.group = this.makeMultiParentMarkGroup();\n  }\n\n  makeMultiParentMarkGroup(): GroupMark {\n    return {\n      type: 'group',\n      name: 'multiParent',\n      marks: [\n        // this.makeMultiParentPathMarks()\n      ],\n    };\n  }\n\n  makeMultiParentPathMarks() {\n    return {\n      type: 'path',\n      from: { data: 'multi_parent_edges' },\n      encode: {\n        update: {\n          path: { field: 'path' },\n          stroke: { signal: 'datum.source.pathColor' },\n          strokeDash: { value: [5, 8] },\n          opacity: [\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            {\n              test: 'node__hover !== null && datum.source.id !== node__hover && node__click === null',\n              value: 0.25,\n            },\n            {\n              value: 0.4,\n            },\n          ],\n          zIndex: { value: -1 },\n          strokeWidth: { value: 2 },\n        },\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavItemComponent.html":{"url":"components/NavItemComponent.html","title":"component - NavItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/nav-item/nav-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-item\n            \n\n\n\n            \n                styleUrls\n                ./nav-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/nav-item/nav-item.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/nav-item/nav-item.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-item',\n  templateUrl: './nav-item.component.html',\n  styleUrls: ['./nav-item.component.scss'],\n})\nexport class NavItemComponent {\n  @Input() label = '';\n  @Input() disabled = false;\n}\n\n    \n\n    \n        \n  \n  {{ label }}\n\n\n    \n\n    \n                \n                    ./nav-item.component.scss\n                \n                .label {\n  padding-top: 10px;\n  font-size: 0.5625rem;\n}\n\n.nav-item {\n  // margin-top: 10px;\n  padding-top: 0.625rem;\n  cursor: pointer;\n  color: rgb(89, 89, 89);\n  transition: 0.2s all;\n}\n\n.nav-item:hover {\n  // background-color: #efefef;\n  color: black;\n}\n\n.nav-item:active {\n  // background-color: #d8d8d8;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavItemModule.html":{"url":"modules/NavItemModule.html","title":"module - NavItemModule","body":"\n                   \n\n\n\n\n    Modules\n    NavItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NavItemModule\n\n\n\ncluster_NavItemModule_exports\n\n\n\ncluster_NavItemModule_declarations\n\n\n\n\nNavItemComponent\n\nNavItemComponent\n\n\n\nNavItemModule\n\nNavItemModule\n\nNavItemModule -->\n\nNavItemComponent->NavItemModule\n\n\n\n\n\nNavItemComponent \n\nNavItemComponent \n\nNavItemComponent  -->\n\nNavItemModule->NavItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/nav-item/nav-item.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavItemComponent } from './nav-item.component';\n\n@NgModule({\n  declarations: [NavItemComponent],\n  imports: [CommonModule],\n  exports: [NavItemComponent],\n})\nexport class NavItemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavbarModule.html":{"url":"modules/NavbarModule.html","title":"module - NavbarModule","body":"\n                   \n\n\n\n\n    Modules\n    NavbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_NavbarModule_declarations\n\n\n\ncluster_NavbarModule_imports\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\n\n\nNavItemModule\n\nNavItemModule\n\nNavbarModule -->\n\nNavItemModule->NavbarModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nNavbarModule -->\n\nSearchModule->NavbarModule\n\n\n\n\n\nTableNestedMenuModule\n\nTableNestedMenuModule\n\nNavbarModule -->\n\nTableNestedMenuModule->NavbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/navbar/navbar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NavItemModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            TableNestedMenuModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NavItemModule } from '../../components/nav-item/nav-item.module';\nimport { SearchModule } from '../search/search.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TableNestedMenuModule } from '../../components/table-nested-menu/table-nested-menu.module';\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    NavItemModule,\n    SearchModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatMenuModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    TableNestedMenuModule,\n  ],\n  exports: [NavbarComponent],\n})\nexport class NavbarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoError.html":{"url":"classes/NoError.html","title":"class - NoError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[ERROR] No Error'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/indented-list/indented-list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         Node[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Node[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTree, MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { ILNode } from '../../models/indent.model';\nimport { Row, Sheet } from '../../models/sheet.model';\nimport { IndentedListService } from './indented-list.service';\n\ninterface Node {\n  name: string;\n  ontologyId: string;\n  children?: Node[];\n}\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  ontologyId: string;\n  level: number;\n}\n\n@Component({\n  selector: 'app-indent',\n  templateUrl: './indented-list.component.html',\n  styleUrls: ['./indented-list.component.scss'],\n})\nexport class IndentedListComponent implements OnInit, OnDestroy, AfterViewInit {\n  indentData = [];\n  activateNode?: unknown;\n  visible = false;\n\n  @Input() dataVersion?: unknown;\n  @Input() currentSheet!: Sheet;\n  @Input() sheetData: Row[] = [];\n  @Output() closeIL = new EventEmitter();\n  @Output() openBottomSheet = new EventEmitter();\n\n  @ViewChild('indentTree') indentTree!: MatTree;\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n\n  treeControl = new FlatTreeControl(\n    (node) => node.level,\n    (node) => node.expandable,\n  );\n\n  private readonly transformer = (node: Node, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      ontologyId: node.ontologyId,\n      level,\n    };\n  };\n\n  treeFlattener = new MatTreeFlattener(\n    this.transformer,\n    (node) => node.level,\n    (node) => node.expandable,\n    (node) => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor(public indentService: IndentedListService) {}\n\n  ngOnInit(): void {\n    this.indentService.indentData$.subscribe((data) => {\n      if (data.data) {\n        this.initializeTree(data.data);\n        this.visible = true;\n      } else {\n        this.visible = false;\n      }\n    });\n\n    this.indentService.makeIndentData(this.currentSheet, this.sheetData);\n  }\n\n  ngAfterViewInit(): void {\n    if (this.indentTree) {\n      this.indentTree.treeControl.expandAll();\n    }\n  }\n\n  ngOnDestroy() {\n    this.visible = false;\n  }\n\n  public initializeTree(data: ILNode) {\n    this.dataSource.data = [data];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OmapConfig.html":{"url":"interfaces/OmapConfig.html","title":"interface - OmapConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OmapConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/omap.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            organsOnly\n                                        \n                                \n                                \n                                        \n                                            proteinsOnly\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organsOnly\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organsOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proteinsOnly\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proteinsOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OmapConfig {\n  organsOnly: boolean;\n  proteinsOnly: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OmapControlsComponent.html":{"url":"components/OmapControlsComponent.html","title":"component - OmapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OmapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/omap-controls/omap-controls.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-omap-controls\n            \n\n\n\n            \n                styleUrls\n                ./omap-controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./omap-controls.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkBoxClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                omaps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateConfig\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/omap-controls/omap-controls.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        omaps\n                    \n                \n                \n                    \n                        Type :         OmapConfig\n\n                    \n                \n                \n                    \n                        Default value : { organsOnly: false, proteinsOnly: false }\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/omap-controls/omap-controls.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateConfig\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/omap-controls/omap-controls.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkBoxClicked\n                        \n                    \n                \n            \n            \n                \ncheckBoxClicked(event: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/omap-controls/omap-controls.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OmapConfig } from '../../models/omap.model';\nimport { Error } from '../../models/response.model';\n\n@Component({\n  selector: 'app-omap-controls',\n  templateUrl: './omap-controls.component.html',\n  styleUrls: ['./omap-controls.component.scss'],\n})\nexport class OmapControlsComponent {\n  @Input() omaps: OmapConfig = { organsOnly: false, proteinsOnly: false };\n  @Input() error!: Error;\n\n  @Output() updateConfig = new EventEmitter();\n\n  checkBoxClicked(event: Record) {\n    this.omaps.organsOnly = event['organsOnly'];\n    this.omaps.proteinsOnly = event['proteinsOnly'];\n    this.updateConfig.emit(this.omaps);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Organ Mapping Antibody Panels (OMAPs) \n        \n      \n    \n\n    \n      \n        OMAP Organs Only\n      \n    \n    \n      \n        OMAP Proteins Only\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./omap-controls.component.scss\n                \n                @import './../../../assets/stylesheets/_colors.scss';\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n  box-shadow: none;\n}\n\n.mat-expansion-panel-header:not(.compare) {\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header {\n  transition: all 0.3s;\n  background-color: $secondary !important;\n  padding-left: 0.9375rem !important;\n  padding-right: 0.9375rem !important;\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header:hover {\n  background-color: darken($color: $secondary, $amount: 8%) !important;\n}\n\n.checkbox-label {\n  font-size: 0.89rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Organ Mapping Antibody Panels (OMAPs)                                     OMAP Organs Only                            OMAP Proteins Only            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OmapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OmapControlsModule.html":{"url":"modules/OmapControlsModule.html","title":"module - OmapControlsModule","body":"\n                   \n\n\n\n\n    Modules\n    OmapControlsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OmapControlsModule\n\n\n\ncluster_OmapControlsModule_declarations\n\n\n\ncluster_OmapControlsModule_exports\n\n\n\n\nOmapControlsComponent\n\nOmapControlsComponent\n\n\n\nOmapControlsModule\n\nOmapControlsModule\n\nOmapControlsModule -->\n\nOmapControlsComponent->OmapControlsModule\n\n\n\n\n\nOmapControlsComponent \n\nOmapControlsComponent \n\nOmapControlsComponent  -->\n\nOmapControlsModule->OmapControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/omap-controls/omap-controls.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OmapControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OmapControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OmapControlsComponent } from './omap-controls.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n@NgModule({\n  declarations: [OmapControlsComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatTooltipModule,\n    FontAwesomeModule,\n    MatButtonModule,\n    MatCheckboxModule,\n  ],\n  exports: [OmapControlsComponent],\n})\nexport class OmapControlsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenBottomSheet.html":{"url":"classes/OpenBottomSheet.html","title":"class - OpenBottomSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenBottomSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: OpenBottomSheetData)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        OpenBottomSheetData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpenBottomSheetData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Bottom Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenBottomSheetDOI.html":{"url":"classes/OpenBottomSheetDOI.html","title":"class - OpenBottomSheetDOI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenBottomSheetDOI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DOI[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DOI[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DOI[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Bottom Sheet DOI'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenBottomSheetData.html":{"url":"interfaces/OpenBottomSheetData.html","title":"interface - OpenBottomSheetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenBottomSheetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ui.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                        \n                                            references\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Log } from './logs.model';\nimport { SnackbarType } from './response.model';\nimport { Reference } from './sheet.model';\n\nexport interface Snackbar {\n  opened: boolean;\n  text: string;\n  type: SnackbarType;\n}\n\nexport interface Loading {\n  loading: boolean;\n  loadingText: string;\n}\n\nexport interface OpenBottomSheetData {\n  name: string;\n  ontologyId: string;\n  group: number;\n  references: Reference[];\n  notes: string;\n}\n\nexport interface Logs {\n  sheetLogs: Log;\n  allLogs: Log[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenCompare.html":{"url":"classes/OpenCompare.html","title":"class - OpenCompare","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenCompare\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Compare'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenLoading.html":{"url":"classes/OpenLoading.html","title":"class - OpenLoading","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenLoading\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Loading'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenSearch.html":{"url":"classes/OpenSearch.html","title":"class - OpenSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Search'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:92\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenSnackbar.html":{"url":"classes/OpenSnackbar.html","title":"class - OpenSnackbar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenSnackbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string, type: SnackbarType)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        SnackbarType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Snackbar'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnackbarType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/OrderByPipe.html":{"url":"pipes/OrderByPipe.html","title":"pipe - OrderByPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  OrderByPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/order-by/order-by.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        orderBy\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(array: T[], key)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/order-by/order-by.pipe.ts:9\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                array\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderBy',\n  pure: true,\n  standalone: true,\n})\nexport class OrderByPipe implements PipeTransform {\n  transform(array: T[], key: keyof T): T[] {\n    return array.slice().sort((a, b) => {\n      const aProp = a[key];\n      const bProp = b[key];\n      return aProp === bProp ? 0 : aProp > bProp ? 1 : -1;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Organ.html":{"url":"interfaces/Organ.html","title":"interface - Organ","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Organ\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            cellType\n                                        \n                                \n                                \n                                        \n                                            markers\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            organRow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        markers:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organRow:         Organ[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Organ[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganTableOnClose.html":{"url":"interfaces/OrganTableOnClose.html","title":"interface - OrganTableOnClose","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganTableOnClose\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cache\n                                        \n                                \n                                \n                                        \n                                            organs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cache:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organs:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganTableSelect.html":{"url":"interfaces/OrganTableSelect.html","title":"interface - OrganTableSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganTableSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getFromCache\n                                        \n                                \n                                \n                                        \n                                            isIntilalSelect\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            omapOrgans\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getFromCache\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getFromCache:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isIntilalSelect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isIntilalSelect:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        omapOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        omapOrgans:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organs:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganTableSelectorComponent.html":{"url":"components/OrganTableSelectorComponent.html","title":"component - OrganTableSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrganTableSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/organ-table-selector/organ-table-selector.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-organ-table-selector\n            \n\n\n\n            \n                styleUrls\n                ./organ-table-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organ-table-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentActive\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    Public\n                                ga\n                            \n                            \n                                getFromCache\n                            \n                            \n                                omapdataSource\n                            \n                            \n                                omapdisplayedColumns\n                            \n                            \n                                omapOrgans\n                            \n                            \n                                omapselection\n                            \n                            \n                                omapSheetOptions\n                            \n                            \n                                onClose\n                            \n                            \n                                organs\n                            \n                            \n                                selectedSheetOption\n                            \n                            \n                                selection\n                            \n                            \n                                sheetOptions\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSheets\n                            \n                            \n                                changeTab\n                            \n                            \n                                changeVersion\n                            \n                            \n                                checkboxLabel\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                masterToggle\n                            \n                            \n                                selectByHraVersion\n                            \n                            \n                                selectRow\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasSomeOrgans\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, dialogRef: MatDialogRef, data: OrganTableSelect, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        OrganTableSelect\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSheets\n                        \n                    \n                \n            \n            \n                \naddSheets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTab\n                        \n                    \n                \n            \n            \n                \nchangeTab(tabIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tabIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeVersion\n                        \n                    \n                \n            \n            \n                \nchangeVersion(value: string, row: SheetDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                row\n                                            \n                                                            SheetDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkboxLabel\n                        \n                    \n                \n            \n            \n                \ncheckboxLabel(row?: SheetDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            SheetDetails\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterToggle\n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectByHraVersion\n                        \n                    \n                \n            \n            \n                \nselectByHraVersion(row: SheetDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            SheetDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectRow\n                        \n                    \n                \n            \n            \n                \nselectRow(row: SheetDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            SheetDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        componentActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganTableSelect\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['select', 'name', 'version']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFromCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapdataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapdisplayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'select',\n    'Organs',\n    'Multiplexed antibody-based imaging method',\n    'Tissue presevation method',\n    'OMAP-ID',\n    'Version',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapOrgans\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapselection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapSheetOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SheetDetails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:24\n                        \n                    \n\n            \n                \n                    Sheet configs of Omap config file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganTableOnClose\n\n                    \n                \n                \n                    \n                        Default value : {\n    organs: false,\n    cache: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:60\n                        \n                    \n\n            \n                \n                    Data to emit when dialog is closed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSheetOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:41\n                        \n                    \n\n            \n                \n                    Organ sheet selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SheetDetails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:19\n                        \n                    \n\n            \n                \n                    Sheet configs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                \n                    \n                        Default value : window\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:37\n                        \n                    \n\n            \n                \n                    Document window object\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasSomeOrgans\n                    \n                \n\n                \n                    \n                        gethasSomeOrgans()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:28\n                                \n                            \n                    \n                        \n                                Has some selected organs\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ConfigService } from '../../app-config.service';\nimport { GaAction, GaCategory, GaOrgansInfo } from '../../models/ga.model';\nimport { OrganTableOnClose, OrganTableSelect, SheetDetails } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-organ-table-selector',\n  templateUrl: './organ-table-selector.component.html',\n  styleUrls: ['./organ-table-selector.component.scss'],\n})\nexport class OrganTableSelectorComponent {\n  /**\n   * Sheet configs\n   */\n  sheetOptions: SheetDetails[] = [];\n\n  /**\n   * Sheet configs of Omap config file\n   */\n  omapSheetOptions: SheetDetails[] = [];\n  /**\n   * Has some selected organs\n   */\n  get hasSomeOrgans(): boolean {\n    if (!this.omapselection.isEmpty() || !this.selection.isEmpty()) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Document window object\n   */\n  window: Window = window;\n  /**\n   * Organ sheet selected\n   */\n  selectedSheetOption = '';\n  organs: string[] = [];\n  omapOrgans: string[] = [];\n  getFromCache: boolean;\n  displayedColumns: string[] = ['select', 'name', 'version'];\n  omapdisplayedColumns: string[] = [\n    'select',\n    'Organs',\n    'Multiplexed antibody-based imaging method',\n    'Tissue presevation method',\n    'OMAP-ID',\n    'Version',\n  ];\n  selection = new SelectionModel(true, []);\n  omapselection = new SelectionModel(true, []);\n  componentActive = 0;\n  /**\n   * Data to emit when dialog is closed\n   */\n  onClose: OrganTableOnClose = {\n    organs: false,\n    cache: true,\n  };\n\n  dataSource!: MatTableDataSource;\n  omapdataSource!: MatTableDataSource;\n\n  constructor(\n    public configService: ConfigService,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: OrganTableSelect,\n    public ga: GoogleAnalyticsService,\n  ) {\n    this.configService.omapsheetConfiguration$.subscribe((sheetOptions) => {\n      this.omapSheetOptions = sheetOptions.filter((o) => o.name !== 'some');\n      this.omapdataSource = new MatTableDataSource(this.omapSheetOptions);\n      this.omapdataSource.data?.forEach((de: SheetDetails) => {\n        de.version?.forEach((v) => {\n          de.symbol = v.value;\n        });\n      });\n    });\n\n    this.configService.sheetConfiguration$.subscribe((sheetOptions) => {\n      this.sheetOptions = sheetOptions.filter((o) => o.name !== 'some');\n      this.dataSource = new MatTableDataSource(this.sheetOptions);\n    });\n\n    this.getFromCache = data.getFromCache;\n    this.onClose.cache = data.getFromCache;\n    this.organs = data.organs ? data.organs : [];\n    this.omapOrgans = data.omapOrgans ? data.omapOrgans : [];\n    this.dataSource.data.forEach((dataElement) => {\n      dataElement.version?.forEach((v) => {\n        dataElement.symbol = v.value;\n      });\n    });\n\n    this.organs.forEach((item) => {\n      this.dataSource.data.forEach((dataElement) => {\n        dataElement?.version?.forEach((v) => {\n          if (v.value === item) {\n            dataElement.symbol = item;\n            this.selection.select(dataElement);\n          }\n        });\n      });\n    });\n    this.omapOrgans.forEach((item) => {\n      this.omapdataSource.data.forEach((dataElement) => {\n        dataElement?.version?.forEach((v) => {\n          if (v.value === item) {\n            dataElement.symbol = item;\n            this.omapselection.select(dataElement);\n          }\n        });\n      });\n    });\n  }\n\n  addSheets() {\n    const ga_details: GaOrgansInfo = {\n      selectedOrgans: [],\n      numOrgans: 0,\n    };\n    this.organs = [];\n    this.selection.selected.map((item) => {\n      if (item.name === 'all') {\n        return;\n      }\n      if (item.symbol) {\n        this.organs.push(item.symbol);\n        ga_details.selectedOrgans.push({\n          organ: item.display,\n          version: item.symbol.split('-').slice(1).join('-'),\n        });\n      }\n    });\n    ga_details.numOrgans = ga_details.selectedOrgans.length;\n    if (this.data.isIntilalSelect === true) {\n      this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, `SELECTED ORGANS INITIAL: ${JSON.stringify(ga_details)}`, 0);\n    } else {\n      this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, `SELECTED ORGANS EDIT: ${JSON.stringify(ga_details)}`, 0);\n    }\n    const omapOrgans: string[] = [];\n    this.omapselection.selected.forEach((element) => {\n      omapOrgans.push(element.symbol ?? '');\n    });\n    this.dialogRef.close({\n      organs: this.organs,\n      cache: this.getFromCache,\n      omapOrgans: omapOrgans,\n    });\n  }\n\n  isAllSelected() {\n    const selection = this.componentActive === 0 ? this.selection : this.omapselection;\n    const dataSource = this.componentActive === 0 ? this.dataSource : this.omapdataSource;\n    const numSelected = selection.selected.length;\n    const numRows = dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    const selection = this.componentActive === 0 ? this.selection : this.omapselection;\n    const dataSource = this.componentActive === 0 ? this.dataSource : this.omapdataSource;\n    if (this.isAllSelected()) {\n      selection.clear();\n      return;\n    }\n    selection.select(...dataSource.data);\n  }\n\n  checkboxLabel(row?: SheetDetails): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${(row.position ?? 0) + 1}`;\n  }\n\n  changeVersion(value: string, row: SheetDetails): void {\n    if (row.name === 'all') {\n      row.symbol = value;\n      this.selectByHraVersion(row);\n    } else {\n      row.symbol = value;\n    }\n  }\n\n  selectByHraVersion(row: SheetDetails): void {\n    const selectedVersion = row.symbol?.split('-')[1] ?? row.version?.slice(-1)[0].hraVersion;\n    this.dataSource.data.forEach((dataElement) => {\n      const version = dataElement.version?.find((v) => v.hraVersion?.includes(selectedVersion ?? ''));\n      if (version) {\n        dataElement.symbol = version.value;\n        this.selection.select(dataElement);\n      } else {\n        this.selection.deselect(dataElement);\n      }\n    });\n  }\n\n  selectRow(row: SheetDetails): void {\n    if (this.componentActive === 0) {\n      if (row.name === 'all') {\n        if (this.selection.isSelected(row)) {\n          this.selection.clear();\n        } else {\n          this.selectByHraVersion(row);\n        }\n      } else {\n        this.selection.toggle(row);\n      }\n    } else {\n      this.omapselection.toggle(row);\n    }\n  }\n\n  changeTab(tabIndex: number) {\n    this.componentActive = tabIndex;\n  }\n}\n\n    \n\n    \n        \n  Select one or more ASCT+B Tables\n  \n    \n      Cache\n    \n  \n\n\n\n  \n    \n      \n        \n          \n            Select one or more Organs\n          \n          \n          \n            \n              \n              \n            \n            \n              \n              \n            \n          \n          \n            Organs\n            \n              {{ element.display }}\n            \n          \n          \n            Version\n            \n               1\">\n                \n                  \n                    \n                      {{ option.viewValue }}\n                    \n                  \n                \n              \n              \n                {{ element.version[0].viewValue }} {{ changeVersion(element.version[0].value, element) }}\n              \n            \n          \n\n          \n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            Select one or more Organs\n          \n          \n          \n            \n              \n              \n            \n            \n              \n              \n            \n          \n          \n            Organs\n            \n              {{ element.name }}\n            \n          \n          \n            Multiplexed antibody-based imaging method\n            \n              {{ element.imagingMethod }}\n            \n          \n          \n            Tissue presevation method\n            \n              {{ element.tissuePreservationMethod }}\n            \n          \n          \n            OMAP-ID\n            \n              {{ element.omapId }}\n            \n          \n          \n            Version\n            \n               1\">\n                \n                  \n                    \n                      {{ option.viewValue }}\n                    \n                  \n                \n              \n              \n                {{ element.version[0].viewValue }}\n              \n            \n          \n\n          \n          \n        \n      \n    \n  \n\n\n\n  \n    Cancel\n    \n      Submit\n    \n  \n\n\n    \n\n    \n                \n                    ./organ-table-selector.component.scss\n                \n                .button-container {\n  width: 100%;\n  justify-content: space-between;\n  display: flex;\n  margin-top: 1rem;\n  height: 3.8rem;\n  padding: 0.5rem 1rem 0rem 1rem;\n}\n\n.version-dropdown {\n  position: relative;\n  top: 0.525rem;\n}\n\n.organ-name-label {\n  font-size: 0.9rem;\n  padding: unset;\n}\n.imaging-method {\n  padding-left: 0.5rem;\n}\n\n.select-deselect-all {\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 0.938rem;\n}\n\n.add-cancel-button {\n  border: 0.063rem solid rgb(196, 196, 196);\n  border-radius: 0.5rem !important;\n}\n\n.orgon-selection-box {\n  margin-bottom: 0;\n}\n\n.orgon-selection-button {\n  width: 100%;\n}\n\n::ng-deep .orgon-selection-box .mat-form-field-underline {\n  display: none;\n}\n\n.mat-table {\n  overflow-x: scroll;\n}\n\n.mat-cell,\n.mat-header-cell {\n  word-wrap: initial;\n  display: table-cell;\n  padding: 0rem 0.625rem;\n  line-break: auto;\n  width: fit-content;\n  white-space: normal;\n  overflow: hidden;\n  vertical-align: middle;\n}\n\n.mat-row,\n.mat-header-row {\n  display: table-row;\n}\n\n.table-container {\n  margin-top: 0.625rem;\n  max-height: 18.75rem;\n  overflow: auto;\n}\n\n.selector-title-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: 0.75rem;\n  padding: 0.5rem 1rem 0 1rem;\n}\n\n.title {\n  margin-bottom: 0rem !important;\n}\n\n.toggle-container {\n  display: flex;\n  align-items: center;\n}\n\n.cache-slider {\n  font-weight: 500;\n}\n\nmat-tab-group {\n  padding: 0rem 1rem 0rem 1rem;\n\n  ::ng-deep mat-tab-header {\n    border-style: solid;\n    border-width: 0px 0px 1px 0px;\n  }\n}\n\n.version-dropdown ::ng-deep .mat-mdc-form-field-flex .mat-mdc-form-field-infix {\n  padding-top: unset;\n  padding-bottom: unset;\n  // padding: 0.432rem 0;\n  min-height: 2.375rem;\n}\n\nth {\n  font-size: 0.8rem;\n  color: #7588a1;\n  font-weight: 400;\n}\n\n::ng-deep .mat-mdc-select-trigger .mat-mdc-select-value .mat-mdc-select-value-text {\n  padding: unset;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Select one or more ASCT+B Tables            Cache                                                Select one or more Organs                                                                                                                                                                      Organs                          {{ element.display }}                                            Version                           1\">                                                                            {{ option.viewValue }}                                                                                                  {{ element.version[0].viewValue }} {{ changeVersion(element.version[0].value, element) }}                                                                                                                      Select one or more Organs                                                                                                                                                                      Organs                          {{ element.name }}                                            Multiplexed antibody-based imaging method                          {{ element.imagingMethod }}                                            Tissue presevation method                          {{ element.tissuePreservationMethod }}                                            OMAP-ID                          {{ element.omapId }}                                            Version                           1\">                                                                            {{ option.viewValue }}                                                                                                  {{ element.version[0].viewValue }}                                                                                  Cancel          Submit      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganTableSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganTableSelectorModule.html":{"url":"modules/OrganTableSelectorModule.html","title":"module - OrganTableSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganTableSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganTableSelectorModule\n\n\n\ncluster_OrganTableSelectorModule_declarations\n\n\n\ncluster_OrganTableSelectorModule_exports\n\n\n\n\nOrganTableSelectorComponent\n\nOrganTableSelectorComponent\n\n\n\nOrganTableSelectorModule\n\nOrganTableSelectorModule\n\nOrganTableSelectorModule -->\n\nOrganTableSelectorComponent->OrganTableSelectorModule\n\n\n\n\n\nOrganTableSelectorComponent \n\nOrganTableSelectorComponent \n\nOrganTableSelectorComponent  -->\n\nOrganTableSelectorModule->OrganTableSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/organ-table-selector/organ-table-selector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganTableSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganTableSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrganTableSelectorComponent } from './organ-table-selector.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@NgModule({\n  declarations: [OrganTableSelectorComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatMenuModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n  ],\n  exports: [OrganTableSelectorComponent],\n})\nexport class OrganTableSelectorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaygroundComponent.html":{"url":"components/PlaygroundComponent.html","title":"component - PlaygroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaygroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/playground/playground.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-playground\n            \n\n\n\n            \n                styleUrls\n                ./playground.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./playground.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSheet\n                            \n                            \n                                    \n                                data$\n                            \n                            \n                                    Public\n                                    Readonly\n                                ga\n                            \n                            \n                                linkFormControl\n                            \n                            \n                                prevTab\n                            \n                            \n                                    \n                                sheet$\n                            \n                            \n                                    \n                                spreadsheet\n                            \n                            \n                                spreadSheetData\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                            \n                                tabIndex\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLinkFormat\n                            \n                            \n                                generateColumns\n                            \n                            \n                                initTable\n                            \n                            \n                                tabChange\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/playground/playground.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLinkFormat\n                        \n                    \n                \n            \n            \n                \ncheckLinkFormat(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/playground/playground.component.ts:280\n                        \n                    \n\n\n            \n                \n                        Link validation function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { sheetID: any; gid: any; csvUrl: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateColumns\n                        \n                    \n                \n            \n            \n                \ngenerateColumns(len: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/playground/playground.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Add colums\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                len\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     jexcel.Column[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initTable\n                        \n                    \n                \n            \n            \n                \ninitTable(data: string[][])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/playground/playground.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Initialize jexcel table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    table data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabChange\n                        \n                    \n                \n            \n            \n                \ntabChange(tab: MatTabChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/playground/playground.component.ts:249\n                        \n                    \n\n\n            \n                \n                        Change tabs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tab\n                                            \n                                                        MatTabChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    table change event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(data: UploadForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/playground/playground.component.ts:263\n                        \n                    \n\n\n            \n                \n                        Read the google sheet link and upload\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UploadForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:39\n                        \n                    \n\n            \n                \n                    Selected sheet\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getParsedData)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linkFormControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [\n    Validators.compose([\n      Validators.required,\n      Validators.pattern(/\\/([\\w-_]{15,})\\/(.*?gid=(\\d+))?|\\w*csv$/),\n    ]) as ValidatorFn,\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:48\n                        \n                    \n\n            \n                \n                    Controller for entering the link\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:35\n                        \n                    \n\n            \n                \n                    Keep track of previous tab. Default to 0\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sheet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getSheet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        spreadsheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('spreadsheet')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spreadSheetData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:27\n                        \n                    \n\n            \n                \n                    Data for the table view\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:43\n                        \n                    \n\n            \n                \n                    Keeps track of the tab index\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :     jexcel.JspreadsheetInstance\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:31\n                        \n                    \n\n            \n                \n                    Instance of jspreadsheet-ce(Earlier: jexcel) table\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { UntypedFormControl, ValidatorFn, Validators } from '@angular/forms';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { Select, Store } from '@ngxs/store';\nimport * as jexcel from 'jspreadsheet-ce';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { FetchSheetData, UpdatePlaygroundData } from '../../actions/sheet.actions';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { Sheet, UploadForm } from '../../models/sheet.model';\nimport { SheetState } from '../../store/sheet.state';\n\n@Component({\n  selector: 'app-playground',\n  templateUrl: './playground.component.html',\n  styleUrls: ['./playground.component.scss'],\n})\nexport class PlaygroundComponent implements AfterViewInit {\n  @ViewChild('spreadsheet') spreadsheet!: ElementRef;\n\n  @Select(SheetState.getParsedData) data$!: Observable;\n  @Select(SheetState.getSheet) sheet$!: Observable;\n\n  /**\n   * Data for the table view\n   */\n  spreadSheetData: string[][] = [];\n  /**\n   * Instance of jspreadsheet-ce(Earlier: jexcel) table\n   */\n  table!: jexcel.JspreadsheetInstance;\n  /**\n   * Keep track of previous tab. Default to 0\n   */\n  prevTab = 0;\n  /**\n   * Selected sheet\n   */\n  currentSheet!: Sheet;\n  /**\n   * Keeps track of the tab index\n   */\n  tabIndex!: number;\n\n  /**\n   * Controller for entering the link\n   */\n  linkFormControl = new UntypedFormControl('', [\n    Validators.compose([\n      Validators.required,\n      Validators.pattern(/\\/([\\w-_]{15,})\\/(.*?gid=(\\d+))?|\\w*csv$/),\n    ]) as ValidatorFn,\n  ]);\n\n  constructor(\n    public readonly store: Store,\n    public readonly ga: GoogleAnalyticsService,\n  ) {\n    this.sheet$.subscribe((sheet) => {\n      this.currentSheet = sheet;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.data$.subscribe((data) => {\n      if (data.length) {\n        this.spreadSheetData = data;\n        if (!this.table) {\n          this.initTable(data);\n        } else {\n          this.table.destroy();\n          this.initTable(data);\n        }\n      }\n    });\n  }\n\n  /**\n   * Add colums\n   */\n  generateColumns(len: number): jexcel.Column[] {\n    const columns = [];\n    for (let i = 0; i  {\n        this.spreadSheetData = data;\n      },\n      contextMenu(obj, x, y) {\n        const items = [];\n\n        if (y === null) {\n          // Insert a new column\n          if (obj.options.allowInsertColumn === true) {\n            items.push({\n              title: obj.options.text?.insertANewColumnBefore,\n              onclick() {\n                obj.insertColumn(1, parseInt(x ?? '', 10), true);\n              },\n            });\n          }\n\n          if (obj.options.allowInsertColumn === true) {\n            items.push({\n              title: obj.options.text?.insertANewColumnAfter,\n              onclick() {\n                obj.insertColumn(1, parseInt(x ?? '', 10), false);\n              },\n            });\n          }\n\n          // Delete a column\n          if (obj.options.allowDeleteColumn === true) {\n            items.push({\n              title: obj.options.text?.deleteSelectedColumns,\n              onclick() {\n                obj.deleteColumn(obj.getSelectedColumns().length ? undefined : parseInt(x ?? '', 10));\n              },\n            });\n          }\n\n          // Rename column\n          if (obj.options.allowRenameColumn === true) {\n            items.push({\n              title: obj.options.text?.renameThisColumn,\n              onclick() {\n                obj.setHeader(parseInt(x ?? '', 10));\n              },\n            });\n          }\n\n          // Sorting\n          if (obj.options.columnSorting === true) {\n            // Line\n            items.push({ type: 'line' });\n\n            items.push({\n              title: obj.options.text?.orderAscending,\n              onclick() {\n                obj.orderBy(parseInt(x ?? '', 10), 0);\n              },\n            });\n            items.push({\n              title: obj.options.text?.orderDescending,\n              onclick() {\n                obj.orderBy(parseInt(x ?? '', 10), 1);\n              },\n            });\n          }\n        } else {\n          // Insert new row\n          if (obj.options.allowInsertRow === true) {\n            items.push({\n              title: obj.options.text?.insertANewRowBefore,\n              onclick() {\n                obj.insertRow(1, parseInt(y, 10), 1);\n              },\n            });\n\n            items.push({\n              title: obj.options.text?.insertANewRowAfter,\n              onclick() {\n                obj.insertRow(1, parseInt(y, 10));\n              },\n            });\n          }\n\n          if (obj.options.allowDeleteRow === true) {\n            items.push({\n              title: obj.options.text?.deleteSelectedRows,\n              onclick() {\n                obj.deleteRow(obj.getSelectedRows().length ? undefined : parseInt(y, 10));\n              },\n            });\n          }\n\n          if (x) {\n            if (obj.options.allowComments === true) {\n              items.push({ type: 'line' });\n\n              const title = obj.records[+y][+x].getAttribute('title') || '';\n\n              items.push({\n                title: title ? obj.options.text?.editComments : obj.options.text?.addComments,\n                onclick() {\n                  obj.setComments(\n                    [parseInt(x, 10), parseInt(y, 10)],\n                    prompt(obj.options.text?.comments, title) ?? '',\n                    '',\n                  );\n                },\n              });\n\n              if (title) {\n                items.push({\n                  title: obj.options.text?.clearComments,\n                  onclick() {\n                    obj.setComments([parseInt(x, 10), parseInt(y, 10)], '', '');\n                  },\n                });\n              }\n            }\n          }\n        }\n\n        // Line\n        items.push({ type: 'line' });\n\n        // Save\n        if (obj.options.allowExport) {\n          items.push({\n            title: obj.options.text?.saveAs,\n            shortcut: 'Ctrl + S',\n            onclick() {\n              obj.download(true);\n            },\n          });\n        }\n\n        return items;\n      },\n      columns: [...this.generateColumns(data[0].length)],\n      style: {\n        A1: 'width: 100px;',\n      },\n    });\n  }\n\n  /**\n   * Change tabs\n   *\n   * @param tab table change event\n   */\n  tabChange(tab: MatTabChangeEvent) {\n    if (this.prevTab === 1 && tab.index === 0) {\n      this.spreadSheetData = this.spreadSheetData.filter((row) => {\n        return row.some((cell) => cell.length > 0 && cell !== '\\u0000');\n      });\n      this.store.dispatch(new UpdatePlaygroundData(this.spreadSheetData));\n    }\n    this.prevTab = tab.index;\n    this.ga.event(GaAction.NAV, GaCategory.PLAYGROUND, 'Change playground tab', tab.index);\n  }\n\n  /**\n   * Read the google sheet link and upload\n   */\n  upload(data: UploadForm) {\n    const sheet = JSON.parse(JSON.stringify(this.currentSheet));\n    sheet.gid = data.gid;\n    sheet.sheetId = data.sheetId;\n    sheet.csvUrl = data.csvUrl;\n    this.tabIndex = 0;\n    sheet.config.height = 1400;\n    if (data.formData) {\n      sheet.formData = data.formData;\n    }\n    this.store.dispatch(new FetchSheetData(sheet));\n    this.ga.event(GaAction.CLICK, GaCategory.PLAYGROUND, 'Upload Playground Sheet', sheet.sheetId);\n  }\n\n  /**\n   * Link validation function\n   */\n  checkLinkFormat(url: string) {\n    if (url.startsWith('https://docs.google.com/spreadsheets/d/')) {\n      const splitUrl = url.split('/');\n      if (splitUrl.length === 7) {\n        return {\n          sheetID: splitUrl[5],\n          gid: splitUrl[6].split('=')[1],\n          csvUrl: '',\n        };\n      }\n    }\n\n    return {\n      sheetID: '0',\n      gid: '0',\n      csvUrl: url,\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./playground.component.scss\n                \n                .jexcel_about {\n  visibility: none !important;\n}\n\n::ng-deep .jexcel tbody tr:nth-child(11) {\n  font-weight: bold;\n}\n\n.remove-border-bottom ::ng-deep .mat-tab-header {\n  // border-bottom: none;\n  border-bottom: 0.1875rem solid #444a6510;\n}\n\n::ng-deep .mat-tab-labels {\n  background-color: white !important;\n  border: 0rem !important;\n}\n\n::ng-deep .mat-mdc-tab.mdc-tab {\n  padding: 0rem 3.75rem;\n}\n\n::ng-deep .jexcel > tbody > tr > td:nth-child(2) {\n  border: 0.0625rem solid #e3e3e3;\n  overflow: visible;\n}\n\n::ng-deep .jexcel > thead > tr > td {\n  border: 0.0625rem solid #e3e3e3;\n  overflow: visible;\n}\n\n.upload {\n  margin-top: 1rem;\n  display: block;\n  width: 50rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaygroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlaygroundModule.html":{"url":"modules/PlaygroundModule.html","title":"module - PlaygroundModule","body":"\n                   \n\n\n\n\n    Modules\n    PlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlaygroundModule\n\n\n\ncluster_PlaygroundModule_exports\n\n\n\ncluster_PlaygroundModule_declarations\n\n\n\ncluster_PlaygroundModule_imports\n\n\n\n\nPlaygroundComponent\n\nPlaygroundComponent\n\n\n\nPlaygroundModule\n\nPlaygroundModule\n\nPlaygroundModule -->\n\nPlaygroundComponent->PlaygroundModule\n\n\n\n\n\nPlaygroundComponent \n\nPlaygroundComponent \n\nPlaygroundComponent  -->\n\nPlaygroundModule->PlaygroundComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nPlaygroundModule -->\n\nFileUploadModule->PlaygroundModule\n\n\n\n\n\nTreeModule\n\nTreeModule\n\nPlaygroundModule -->\n\nTreeModule->PlaygroundModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nPlaygroundModule -->\n\nUploadModule->PlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/playground/playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PlaygroundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileUploadModule\n                        \n                        \n                            TreeModule\n                        \n                        \n                            UploadModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlaygroundComponent } from './playground.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { TreeModule } from '../tree/tree.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { FileUploadModule } from '../../components/file-upload/file-upload.module';\nimport { UploadModule } from '../../components/upload/upload.module';\n\n@NgModule({\n  declarations: [PlaygroundComponent],\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    TreeModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    UploadModule,\n  ],\n  exports: [PlaygroundComponent],\n})\nexport class PlaygroundModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlaygroundSheetOptions.html":{"url":"interfaces/PlaygroundSheetOptions.html","title":"interface - PlaygroundSheetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlaygroundSheetOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sheet\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sheet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Reference.html":{"url":"interfaces/Reference.html","title":"interface - Reference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Reference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            doi\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshData.html":{"url":"classes/RefreshData.html","title":"class - RefreshData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Refresh'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Report.html":{"url":"interfaces/Report.html","title":"interface - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            ASWithNoCT\n                                        \n                                \n                                \n                                        \n                                            ASWithNoLink\n                                        \n                                \n                                \n                                        \n                                            biomarkers\n                                        \n                                \n                                \n                                        \n                                            BWithNoLink\n                                        \n                                \n                                \n                                        \n                                            cellTypes\n                                        \n                                \n                                \n                                        \n                                            CTWithNoB\n                                        \n                                \n                                \n                                        \n                                            CTWithNoLink\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:         AS[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AS[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ASWithNoCT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ASWithNoCT:         EntityWithNoOtherEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityWithNoOtherEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ASWithNoLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ASWithNoLink:         AS[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AS[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers:         B[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BWithNoLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BWithNoLink:         B[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTypes:         CT[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CT[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CTWithNoB\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CTWithNoB:         EntityWithNoOtherEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityWithNoOtherEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CTWithNoLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CTWithNoLink:         CT[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CT[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReportData.html":{"url":"interfaces/ReportData.html","title":"interface - ReportData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReportData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            sheet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Report\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Report\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheet:         Sheet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sheet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportLog.html":{"url":"classes/ReportLog.html","title":"class - ReportLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/logs.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                icon\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, message: string, icon?: string, version: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/logs.actions.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[REPORT] Log'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'latest'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ReportLog {\n  static readonly type = '[REPORT] Log';\n  constructor(\n    public type: string,\n    public message: string,\n    public icon?: string,\n    public version = 'latest',\n  ) {}\n}\n\nexport class ReportMultiLog {\n  static readonly type = '[REPORT] Milti Log';\n  constructor(\n    public message: string,\n    public icon: string,\n    public multiMessage = '',\n  ) {}\n}\n\nexport class ClearSheetLogs {\n  static readonly type = '[CLEAR] Sheet Logs';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReportModule.html":{"url":"modules/ReportModule.html","title":"module - ReportModule","body":"\n                   \n\n\n\n\n    Modules\n    ReportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_declarations\n\n\n\ncluster_ReportModule_exports\n\n\n\ncluster_ReportModule_imports\n\n\n\n\nReportComponent\n\nReportComponent\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nReportComponent->ReportModule\n\n\n\n\n\nReportComponent \n\nReportComponent \n\nReportComponent  -->\n\nReportModule->ReportComponent \n\n\n\n\n\nOrderByPipe\n\nOrderByPipe\n\nReportModule -->\n\nOrderByPipe->ReportModule\n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nReportModule -->\n\nSidenavHeaderModule->ReportModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nReportModule -->\n\nSidenavModule->ReportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/report/report.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReportComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OrderByPipe\n                        \n                        \n                            SidenavHeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReportComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavModule } from '../sidenav/sidenav.module';\nimport { ReportComponent } from './report.component';\nimport { SidenavHeaderModule } from '../sidenav-header/sidenav-header.module';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSortModule } from '@angular/material/sort';\nimport { OrderByPipe } from '../../pipes/order-by/order-by.pipe';\n\n@NgModule({\n  declarations: [ReportComponent],\n  imports: [\n    CommonModule,\n    SidenavModule,\n    SidenavHeaderModule,\n    MatTabsModule,\n    NgxChartsModule,\n    MatExpansionModule,\n    OrderByPipe,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  exports: [ReportComponent],\n})\nexport class ReportModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportMultiLog.html":{"url":"classes/ReportMultiLog.html","title":"class - ReportMultiLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportMultiLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/logs.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                multiMessage\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, icon: string, multiMessage: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/logs.actions.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        multiMessage\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        multiMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[REPORT] Milti Log'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ReportLog {\n  static readonly type = '[REPORT] Log';\n  constructor(\n    public type: string,\n    public message: string,\n    public icon?: string,\n    public version = 'latest',\n  ) {}\n}\n\nexport class ReportMultiLog {\n  static readonly type = '[REPORT] Milti Log';\n  constructor(\n    public message: string,\n    public icon: string,\n    public multiMessage = '',\n  ) {}\n}\n\nexport class ClearSheetLogs {\n  static readonly type = '[CLEAR] Sheet Logs';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/response.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: any;\n  msg: string;\n  status: number;\n}\n\nexport interface Error {\n  hasError?: boolean;\n  msg?: string;\n  status?: number;\n  hasGidError?: boolean;\n}\n\nexport enum SnackbarType {\n  success = 'success',\n  error = 'error',\n  warning = 'warning',\n}\n\nexport interface ExportVega {\n  option: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  spec?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseData.html":{"url":"interfaces/ResponseData.html","title":"interface - ResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            csv\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isOmap\n                                        \n                                \n                                \n                                        \n                                            parsed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        csv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csv:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Row[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Row[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOmap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOmap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parsed:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootModule.html":{"url":"modules/RootModule.html","title":"module - RootModule","body":"\n                   \n\n\n\n\n    Modules\n    RootModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_RootModule_exports\n\n\n\n\nRootComponent\n\nRootComponent\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\n\n\nRootComponent \n\nRootComponent \n\nRootComponent  -->\n\nRootModule->RootComponent \n\n\n\n\n\nCompareModule\n\nCompareModule\n\nRootModule -->\n\nCompareModule->RootModule\n\n\n\n\n\nControlPaneModule\n\nControlPaneModule\n\nRootModule -->\n\nControlPaneModule->RootModule\n\n\n\n\n\nDebugLogsModule\n\nDebugLogsModule\n\nRootModule -->\n\nDebugLogsModule->RootModule\n\n\n\n\n\nDoiModule\n\nDoiModule\n\nRootModule -->\n\nDoiModule->RootModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\nRootModule -->\n\nErrorModule->RootModule\n\n\n\n\n\nIndentedListModule\n\nIndentedListModule\n\nRootModule -->\n\nIndentedListModule->RootModule\n\n\n\n\n\nInfoModule\n\nInfoModule\n\nRootModule -->\n\nInfoModule->RootModule\n\n\n\n\n\nLegendModule\n\nLegendModule\n\nRootModule -->\n\nLegendModule->RootModule\n\n\n\n\n\nNavbarModule\n\nNavbarModule\n\nRootModule -->\n\nNavbarModule->RootModule\n\n\n\n\n\nPlaygroundModule\n\nPlaygroundModule\n\nRootModule -->\n\nPlaygroundModule->RootModule\n\n\n\n\n\nReportModule\n\nReportModule\n\nRootModule -->\n\nReportModule->RootModule\n\n\n\n\n\nTableNestedMenuModule\n\nTableNestedMenuModule\n\nRootModule -->\n\nTableNestedMenuModule->RootModule\n\n\n\n\n\nTreeModule\n\nTreeModule\n\nRootModule -->\n\nTreeModule->RootModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root/root.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RootComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CompareModule\n                        \n                        \n                            ControlPaneModule\n                        \n                        \n                            DebugLogsModule\n                        \n                        \n                            DoiModule\n                        \n                        \n                            ErrorModule\n                        \n                        \n                            IndentedListModule\n                        \n                        \n                            InfoModule\n                        \n                        \n                            LegendModule\n                        \n                        \n                            NavbarModule\n                        \n                        \n                            PlaygroundModule\n                        \n                        \n                            ReportModule\n                        \n                        \n                            TableNestedMenuModule\n                        \n                        \n                            TreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RootComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RootComponent } from './root.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { ControlPaneModule } from '../control-pane/control-pane.module';\nimport { ReportModule } from '../../components/report/report.module';\nimport { IndentedListModule } from '../../components/indented-list/indented-list.module';\nimport { DebugLogsModule } from '../../components/debug-logs/debug-logs.module';\nimport { CompareModule } from '../../components/compare/compare.module';\nimport { NavbarModule } from '../navbar/navbar.module';\nimport { ErrorModule } from '../../components/error/error.module';\nimport { LegendModule } from '../../components/legend/legend.module';\nimport { PlaygroundModule } from '../playground/playground.module';\nimport { TreeModule } from '../tree/tree.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { DoiModule } from '../../components/doi/doi.module';\nimport { InfoModule } from '../../components/info/info.module';\nimport { TableNestedMenuModule } from '../../components/table-nested-menu/table-nested-menu.module';\n\n@NgModule({\n  declarations: [RootComponent],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    ControlPaneModule,\n    ReportModule,\n    IndentedListModule,\n    DebugLogsModule,\n    CompareModule,\n    NavbarModule,\n    ErrorModule,\n    LegendModule,\n    PlaygroundModule,\n    TreeModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatBottomSheetModule,\n    DragDropModule,\n    DoiModule,\n    InfoModule,\n    TableNestedMenuModule,\n  ],\n  exports: [RootComponent],\n})\nexport class RootModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Row.html":{"url":"interfaces/Row.html","title":"interface - Row","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Row\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomical_structures\n                                        \n                                \n                                \n                                        \n                                            biomarkers\n                                        \n                                \n                                \n                                        \n                                            biomarkers_gene\n                                        \n                                \n                                \n                                        \n                                            biomarkers_lipids\n                                        \n                                \n                                \n                                        \n                                            biomarkers_meta\n                                        \n                                \n                                \n                                        \n                                            biomarkers_prot\n                                        \n                                \n                                \n                                        \n                                            biomarkers_protein\n                                        \n                                \n                                \n                                        \n                                            cell_types\n                                        \n                                \n                                \n                                        \n                                            organName\n                                        \n                                \n                                \n                                        \n                                            references\n                                        \n                                \n                                \n                                        \n                                            tableVersion\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomical_structures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomical_structures:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers_gene\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers_gene:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers_lipids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers_lipids:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers_meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers_meta:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers_prot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers_prot:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers_protein\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers_protein:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cell_types\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cell_types:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tableVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scales.html":{"url":"classes/Scales.html","title":"class - Scales","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scales\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/scales.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scales\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeBiomodalScale\n                            \n                            \n                                makeTreeLegendScale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/scales.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        scales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Scale[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/scales.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/scales.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Scale[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBiomodalScale\n                        \n                    \n                \n            \n            \n                \nmakeBiomodalScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/scales.ts:21\n                        \n                    \n\n\n            \n                \n                        Creates the color scaling that is used to form the\nbimodal and tree legend. Red, blue and gree are the\ncolors. It uses the properly 'groupName' to assign\ncolor.\n\n\n                        \n                            Returns :     Scale\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeLegendScale\n                        \n                    \n                \n            \n            \n                \nmakeTreeLegendScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/scales.ts:36\n                        \n                    \n\n\n            \n                \n                        Creates the color scaling that is used to form the\ntree legend. It is for the See Debug Log option in\nthe legend and only has the red color.\n\n\n                        \n                            Returns :     Scale\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Scale } from 'vega';\n\nexport class Scales {\n  static create(): Scale[] {\n    return new Scales().scales;\n  }\n\n  scales: Scale[];\n\n  constructor() {\n    this.scales = [this.makeBiomodalScale(), this.makeTreeLegendScale()];\n  }\n\n  /**\n   * Creates the color scaling that is used to form the\n   * bimodal and tree legend. Red, blue and gree are the\n   * colors. It uses the properly 'groupName' to assign\n   * color.\n   */\n\n  makeBiomodalScale(): Scale {\n    return {\n      name: 'bimodal',\n      type: 'ordinal',\n      domain: { data: 'nodes', field: 'groupName' },\n      range: ['#E41A1C', '#377EB8', '#4DAF4A'],\n    };\n  }\n\n  /**\n   * Creates the color scaling that is used to form the\n   * tree legend. It is for the See Debug Log option in\n   * the legend and only has the red color.\n   */\n\n  makeTreeLegendScale(): Scale {\n    return {\n      name: 'treeLegend',\n      type: 'ordinal',\n      domain: { data: 'tree', field: 'groupName' },\n      range: ['#E41A1C'],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\n\nSearchComponent\n\nSearchComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nSearchComponent->SearchModule\n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSearchModule->SearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/search/search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchComponent } from './search.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\n@NgModule({\n  declarations: [SearchComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatOptionModule,\n    NgxMatSelectSearchModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n  ],\n  exports: [SearchComponent],\n})\nexport class SearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchStructure.html":{"url":"interfaces/SearchStructure.html","title":"interface - SearchStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            groupName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedOrganBeforeFilter.html":{"url":"interfaces/SelectedOrganBeforeFilter.html","title":"interface - SelectedOrganBeforeFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectedOrganBeforeFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            filteredOut\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selector\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filteredOut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filteredOut:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selector:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sheet.html":{"url":"interfaces/Sheet.html","title":"interface - Sheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            csvUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            formData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gid\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sheetId\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         SheetConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SheetConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        csvUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csvUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formData:         FormData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SheetConfig.html":{"url":"interfaces/SheetConfig.html","title":"interface - SheetConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SheetConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bimodal_distance_x\n                                        \n                                \n                                \n                                        \n                                            bimodal_distance_y\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            discrepencyId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            discrepencyLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            duplicateId\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            show_all_AS\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            show_ontology\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bimodal_distance_x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bimodal_distance_x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bimodal_distance_y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bimodal_distance_y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discrepencyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discrepencyId:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discrepencyLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discrepencyLabel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duplicateId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duplicateId:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        show_all_AS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        show_all_AS:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        show_ontology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        show_ontology:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SheetDetails.html":{"url":"interfaces/SheetDetails.html","title":"interface - SheetDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SheetDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            csvUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            imagingMethod\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            omapId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sheetId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            symbol\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tissuePreservationMethod\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uberon_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        csvUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csvUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagingMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imagingMethod:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        omapId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        omapId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissuePreservationMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tissuePreservationMethod:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uberon_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uberon_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:     VersionDetail[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     VersionDetail[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SheetInfo.html":{"url":"interfaces/SheetInfo.html","title":"interface - SheetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SheetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extraLinks\n                                        \n                                \n                                \n                                        \n                                            hasError\n                                        \n                                \n                                \n                                        \n                                            iri\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                        \n                                            ontologyCode\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            references\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraLinks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraLinks:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SheetOptions.html":{"url":"interfaces/SheetOptions.html","title":"interface - SheetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SheetOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sheet\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            symbol\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sheet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SheetService.html":{"url":"injectables/SheetService.html","title":"injectable - SheetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SheetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sheet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchBottomSheetData\n                            \n                            \n                                fetchDataFromAssets\n                            \n                            \n                                fetchPlaygroundData\n                            \n                            \n                                fetchSheetData\n                            \n                            \n                                formURL\n                            \n                            \n                                getDataWithBody\n                            \n                            \n                                testCallback\n                            \n                            \n                                updatePlaygroundData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sheet.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchBottomSheetData\n                        \n                    \n                \n            \n            \n                \nfetchBottomSheetData(id: string, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Service to get the data about an entity for an exteral API\nby passing the UBERON, CL, or HNGC id. It determins which API to call and maps the\nresponse to a normalized BottomSheetInfo format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ontologyid\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : structure name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchDataFromAssets\n                        \n                    \n                \n            \n            \n                \nfetchDataFromAssets(dataVersion: string, currentSheet: Sheet)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Service to get data of a particular version\nNote: Currently depricated\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataVersion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    version of the data\n\n                                            \n                                        \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    current sheet\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchPlaygroundData\n                        \n                    \n                \n            \n            \n                \nfetchPlaygroundData(_data?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Fetching initial playground data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchSheetData\n                        \n                    \n                \n            \n            \n                \nfetchSheetData(sheetId: string, gid: string, csvFileUrl?: string, formData?: FormData, output?: string, cache)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Service to fetch the data for a sheet from CSV file or Google sheet using the api\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sheetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    id of the sheet\n\n                                            \n                                        \n                                        \n                                                gid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    gid of the sheet\n\n                                            \n                                        \n                                        \n                                                csvFileUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    is the optional parameter that contains the value to the csv file url of the sheet\n\n                                            \n                                        \n                                        \n                                                formData\n                                            \n                                                            FormData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                output\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                cache\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formURL\n                        \n                    \n                \n            \n            \n                \nformURL(sheetID: string, gID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:158\n                        \n                    \n\n\n            \n                \n                        Translate the sheet ID and GID to the google sheet URL\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sheetID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the sheet\n\n                                            \n                                        \n                                        \n                                                gID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    of the sheet\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataWithBody\n                        \n                    \n                \n            \n            \n                \ngetDataWithBody(data: Row[], organName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Service to add body for each AS to the data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Row[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    is the parsed ASCTB data from the csv file of the sheet\n\n                                            \n                                        \n                                        \n                                                organName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testCallback\n                        \n                    \n                \n            \n            \n                \ntestCallback(data: JSON)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        JSON\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     JSON\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePlaygroundData\n                        \n                    \n                \n            \n            \n                \nupdatePlaygroundData(data: string[][])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Send updated data to render on the playground\nafter editing on the table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    updated tabular data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Row, Sheet, SheetInfo, Structure } from '../models/sheet.model';\nimport { URL, getAssetsURL } from './../static/url';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SheetService {\n  constructor(private readonly http: HttpClient) {}\n\n  /**\n   * Service to fetch the data for a sheet from CSV file or Google sheet using the api\n   * @param sheetId id of the sheet\n   * @param gid gid of the sheet\n   * @param csvFileUrl is the optional parameter that contains the value to the csv file url of the sheet\n   */\n  fetchSheetData(\n    sheetId: string,\n    gid: string,\n    csvFileUrl?: string,\n    formData?: FormData,\n    output?: string,\n    cache = false,\n  ) {\n    if (csvFileUrl) {\n      return this.http.get(`${URL}/v2/csv`, {\n        responseType: output === 'owl' ? 'text' : (undefined as unknown as 'text'),\n        params: {\n          csvUrl: csvFileUrl,\n          output: output ? output : 'json',\n        },\n      });\n    } else if (formData) {\n      return this.http.post(`${URL}/v2/csv`, formData);\n    } else {\n      if (output === 'graph') {\n        return this.http.get(`${URL}/v2/${sheetId}/${gid}/graph`);\n      } else if (output === 'jsonld') {\n        return this.http.get(`${URL}/v2/csv`, {\n          params: {\n            csvUrl: `https://docs.google.com/spreadsheets/d/${sheetId}/export?format=csv&gid=${gid}`,\n            output: output ? output : 'jsonld',\n          },\n        });\n      }\n      return this.http.get(`${URL}/v2/${sheetId}/${gid}`, {\n        params: {\n          cache,\n        },\n      });\n    }\n  }\n\n  /**\n   * Service to get data of a particular version\n   *\n   * Note: Currently depricated\n   * @param dataVersion version of the data\n   * @param currentSheet current sheet\n   */\n  fetchDataFromAssets(dataVersion: string, currentSheet: Sheet) {\n    return this.http.get(getAssetsURL(dataVersion, currentSheet), {\n      responseType: 'text',\n    });\n  }\n\n  testCallback(data: JSON) {\n    console.log(data);\n    return data;\n  }\n\n  /**\n   * Service to get the data about an entity for an exteral API\n   * by passing the UBERON, CL, or HNGC id. It determins which API to call and maps the\n   * response to a normalized BottomSheetInfo format.\n   * @param id ontologyid\n   * @param name: structure name\n   */\n  fetchBottomSheetData(id: string, name: string): Observable {\n    // Normalize FMA ids. Takes care of the formats: fma12345, FMA:12456, FMAID:12345\n    if (id.toLowerCase().startsWith('fma')) {\n      id = id.substring(3);\n      if (id.includes(':')) {\n        id = id.split(':')[1];\n      }\n      id = 'FMA:' + id;\n    }\n\n    const ontologyCode = id.split(':')[0] ?? '';\n    const termId = id.split(':')[1] ?? '';\n\n    if (ontologyCode === '' || termId === '') {\n      return throwError('Invalid ID format');\n    }\n\n    return this.http.get(`${URL}/lookup/${ontologyCode}/${termId}`).pipe(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      map((res: any) => {\n        return {\n          name,\n          ontologyId: id,\n          ontologyCode,\n          desc: res.description,\n          iri: res.link,\n          extraLinks: res.extraLinks,\n          label: res.label,\n          hasError: false,\n          msg: '',\n          status: 0,\n        } as SheetInfo;\n      }),\n    );\n  }\n\n  /**\n   * Fetching initial playground data\n   */\n  fetchPlaygroundData(_data?: string) {\n    return this.http.get(`${URL}/v2/playground`);\n  }\n\n  /**\n   * Send updated data to render on the playground\n   * after editing on the table\n   *\n   * @param data updated tabular data\n   */\n  updatePlaygroundData(data: string[][]) {\n    return this.http.post(`${URL}/v2/playground`, { data });\n  }\n\n  /**\n   * Service to add body for each AS to the data\n   * @param data is the parsed ASCTB data from the csv file of the sheet\n   */\n  getDataWithBody(data: Row[], organName: string) {\n    const organ: Structure = {\n      name: 'Body',\n      id: 'UBERON:0013702',\n      rdfs_label: 'body proper',\n    };\n    data.forEach((row) => {\n      row.anatomical_structures.unshift(organ);\n      row.organName = organName;\n    });\n    return data;\n  }\n\n  /**\n   * Translate the sheet ID and GID to the google sheet URL\n   *\n   * @param sheetID id of the sheet\n   * @param gID of the sheet\n   */\n  formURL(sheetID: string, gID: string) {\n    return `https://docs.google.com/spreadsheets/d/${sheetID}/export?format=csv&gid=${gID}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidenav/sidenav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n\n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n})\nexport class SidenavComponent {}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                .br-top {\n  border-top: 0.0625rem solid #fcfcfc !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavHeaderComponent.html":{"url":"components/SidenavHeaderComponent.html","title":"component - SidenavHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidenav-header/sidenav-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav-header\n            \n\n\n\n            \n                styleUrls\n                ./sidenav-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                download\n                            \n                            \n                                title\n                            \n                            \n                                tooltipString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeSideNav\n                            \n                            \n                                downloadFn\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        download\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidenav-header/sidenav-header.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidenav-header/sidenav-header.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipString\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Hello'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidenav-header/sidenav-header.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeSideNav\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidenav-header/sidenav-header.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        downloadFn\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidenav-header/sidenav-header.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav-header',\n  templateUrl: './sidenav-header.component.html',\n  styleUrls: ['./sidenav-header.component.scss'],\n})\nexport class SidenavHeaderComponent {\n  @Input() title = '';\n  @Input() download = false;\n  @Input() tooltipString = 'Hello';\n  @Output() closeSideNav = new EventEmitter();\n  @Output() downloadFn = new EventEmitter();\n}\n\n    \n\n    \n        \n  {{ title }}\n  \n    \n      \n        get_app\n      \n    \n    \n      \n        help_outline\n      \n    \n    \n      \n        close\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./sidenav-header.component.scss\n                \n                .mw {\n  min-width: 15.625rem;\n}\n.display-option {\n  display: inline-block;\n}\n.help-icon {\n  color: grey;\n}\n\n.title {\n  font-weight: 600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}                    get_app                            help_outline                            close            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavHeaderModule.html":{"url":"modules/SidenavHeaderModule.html","title":"module - SidenavHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavHeaderModule\n\n\n\ncluster_SidenavHeaderModule_exports\n\n\n\ncluster_SidenavHeaderModule_declarations\n\n\n\n\nSidenavHeaderComponent\n\nSidenavHeaderComponent\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nSidenavHeaderModule -->\n\nSidenavHeaderComponent->SidenavHeaderModule\n\n\n\n\n\nSidenavHeaderComponent \n\nSidenavHeaderComponent \n\nSidenavHeaderComponent  -->\n\nSidenavHeaderModule->SidenavHeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/sidenav-header/sidenav-header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidenavHeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidenavHeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavHeaderComponent } from './sidenav-header.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [SidenavHeaderComponent],\n  imports: [CommonModule, MatIconModule, MatTooltipModule, MatButtonModule],\n  exports: [SidenavHeaderComponent],\n})\nexport class SidenavHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_SidenavModule_declarations\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nSidenavComponent->SidenavModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nSidenavModule->SidenavComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/sidenav/sidenav.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidenavComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidenavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavComponent } from './sidenav.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [SidenavComponent],\n  imports: [CommonModule, MatButtonModule],\n  exports: [SidenavComponent],\n})\nexport class SidenavModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Signals.html":{"url":"classes/Signals.html","title":"class - Signals","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Signals\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/signals.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                signals\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeASTreeHeightSignal\n                            \n                            \n                                makeASTreeWidthSignal\n                            \n                            \n                                makeBimodalNodeClickStateSignal\n                            \n                            \n                                makeBimodalNodeHoverStateSignal\n                            \n                            \n                                makeBimodalNodeSourcesHoverStateSignal\n                            \n                            \n                                makeBimodalNodeTargetsHoverStateSignal\n                            \n                            \n                                makeBimodalSourcesClickStateSignal\n                            \n                            \n                                makeBimodalTargetsClickStateSignal\n                            \n                            \n                                makeBimodalTextClickSignal\n                            \n                            \n                                makeBimodalTextHoverSignal\n                            \n                            \n                                makeBiomodalPathDOISignal\n                            \n                            \n                                makeDiscrepencySignal\n                            \n                            \n                                makeSearchSignal\n                            \n                            \n                                makeShowOntologyIDSignal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: SheetConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/signals.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SheetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        signals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/signals.ts:12\n                        \n                    \n\n            \n                \n                    List of signals\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeASTreeHeightSignal\n                        \n                    \n                \n            \n            \n                \nmakeASTreeHeightSignal(height: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:80\n                        \n                    \n\n\n            \n                \n                        Set the height of the AS tree\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    height of tree\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: string; value: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeASTreeWidthSignal\n                        \n                    \n                \n            \n            \n                \nmakeASTreeWidthSignal(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:69\n                        \n                    \n\n\n            \n                \n                        Set the width of the AS tree\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    width of tree\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: string; value: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalNodeClickStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalNodeClickStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:131\n                        \n                    \n\n\n            \n                \n                        Signal to trigger clicking action on a bimodal network signal. It updates the field (node__click)\nwith the id of the node being clicked on.\nOn clicking elsewhere, the field is updated with null.\n\n\n                        \n                            Returns :     { name: string; value: any; on: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalNodeHoverStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalNodeHoverStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:152\n                        \n                    \n\n\n            \n                \n                        Signal to trigger hovering action on a bimodal network signal. It updates the field (node__hover)\nwith the id of the node being hovered on.\nOn removing the mouse from the node, the field is updated with null.\n\n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalNodeSourcesHoverStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalNodeSourcesHoverStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:188\n                        \n                    \n\n\n            \n                \n                        Signal to trigger hovering action on a bimodal network signal. It updates the field (node_sources__hover)\nwith the sources array of the current node.\nOn removing the mouse from the node, the field is updated with null.\n\n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalNodeTargetsHoverStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalNodeTargetsHoverStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:170\n                        \n                    \n\n\n            \n                \n                        Signal to trigger hovering action on a bimodal network signal. It updates the field (node_targets__hover)\nwith the targets array of the current node.\nOn removing the mouse from the node, the field is updated with null.\n\n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalSourcesClickStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalSourcesClickStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:227\n                        \n                    \n\n\n            \n                \n                        Signal to trigger clicking action on a bimodal network signal. It updates the field (sources__click)\nwith the sources array of the current node.\nOn clicking elsewhere, the field is updated with null.\n\n\n                        \n                            Returns :     { name: string; value: {}; on: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTargetsClickStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTargetsClickStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:206\n                        \n                    \n\n\n            \n                \n                        Signal to trigger clicking action on a bimodal network signal. It updates the field (targets__click)\nwith the targets array of the current node.\nOn clicking elsewhere, the field is updated with null.\n\n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextClickSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextClickSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:92\n                        \n                    \n\n\n            \n                \n                        Signal to trigger an event when the name of a bimodal node\nis clicked\nUpdates the signal data with the data of the node\n\n\n                        \n                            Returns :     { name: string; value: any; on: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextHoverSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextHoverSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:110\n                        \n                    \n\n\n            \n                \n                        Signal that is triggered when the name of a node\nis hovered upon\n\n\n                        \n                            Returns :     { name: string; value: any; on: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBiomodalPathDOISignal\n                        \n                    \n                \n            \n            \n                \nmakeBiomodalPathDOISignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:38\n                        \n                    \n\n\n            \n                \n                        Signal to trigger an action when a path in the bimodal network\nis clicked.\nUpdtes the signal data with the references of the source or target\n\n\n                        \n                            Returns :     { name: string; value: any; on: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDiscrepencySignal\n                        \n                    \n                \n            \n            \n                \nmakeDiscrepencySignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:254\n                        \n                    \n\n\n            \n                \n                        Signal to update the discrepency field\n\n\n                        \n                            Returns :     { name: string; value: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSearchSignal\n                        \n                    \n                \n            \n            \n                \nmakeSearchSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:244\n                        \n                    \n\n\n            \n                \n                        Signal to update the search field\n\n\n                        \n                            Returns :     { name: string; value: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeShowOntologyIDSignal\n                        \n                    \n                \n            \n            \n                \nmakeShowOntologyIDSignal(value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:58\n                        \n                    \n\n\n            \n                \n                        Signal to denote of the ontology names in the visualization\nshould be visible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    show or hide boolean\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: string; value: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Signal } from 'vega';\nimport { SheetConfig } from '../../../models/sheet.model';\n\nexport class Signals {\n  static create(config: SheetConfig): Signal[] {\n    return new Signals(config).signals;\n  }\n\n  /**\n   * List of signals\n   */\n  signals: Signal[];\n\n  constructor(config: SheetConfig) {\n    this.signals = [\n      this.makeBimodalNodeClickStateSignal(),\n      this.makeBimodalNodeHoverStateSignal(),\n      this.makeBimodalNodeSourcesHoverStateSignal(),\n      this.makeBimodalNodeTargetsHoverStateSignal(),\n      this.makeBimodalTargetsClickStateSignal(),\n      this.makeBimodalSourcesClickStateSignal(),\n      this.makeSearchSignal(),\n      this.makeBimodalTextClickSignal(),\n      this.makeBimodalTextHoverSignal(),\n      this.makeASTreeWidthSignal(config.width),\n      this.makeASTreeHeightSignal(config.height),\n      this.makeShowOntologyIDSignal(config.show_ontology ?? false),\n      this.makeBiomodalPathDOISignal(),\n      this.makeDiscrepencySignal(),\n    ];\n  }\n\n  /**\n   * Signal to trigger an action when a path in the bimodal network\n   * is clicked.\n   * Updtes the signal data with the references of the source or target\n   */\n  makeBiomodalPathDOISignal() {\n    return {\n      name: 'path__click',\n      value: null,\n      on: [\n        {\n          events: '@bimodal-path:click',\n          update: 'datum.target.group === 2 ? datum.target.references : datum.source.references',\n        },\n        { events: 'click[!event.item]', update: 'null' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to denote of the ontology names in the visualization\n   * should be visible\n   *\n   * @param value show or hide boolean\n   */\n  makeShowOntologyIDSignal(value: boolean) {\n    return {\n      name: 'show_ontology',\n      value,\n    };\n  }\n\n  /**\n   * Set the width of the AS tree\n   * @param width width of tree\n   */\n  makeASTreeWidthSignal(width: number) {\n    return {\n      name: 'as_width',\n      value: width,\n    };\n  }\n\n  /**\n   * Set the height of the AS tree\n   * @param height height of tree\n   */\n  makeASTreeHeightSignal(height: number) {\n    return {\n      name: 'as_height',\n      value: height,\n    };\n  }\n\n  /**\n   * Signal to trigger an event when the name of a bimodal node\n   * is clicked\n   * Updates the signal data with the data of the node\n   */\n  makeBimodalTextClickSignal() {\n    return {\n      name: 'bimodal_text__click',\n      value: null,\n      on: [\n        {\n          events: '@textmark:click, @astextmark:click',\n          update: \"datum.type === 'AS' && datum.children ? datum : datum.type === 'BM' ? datum : null\",\n        },\n        { events: 'click[!event.item]', update: 'null' },\n      ],\n    };\n  }\n\n  /**\n   * Signal that is triggered when the name of a node\n   * is hovered upon\n   */\n  makeBimodalTextHoverSignal() {\n    return {\n      name: 'bimodal_text__hover',\n      value: null,\n      on: [\n        {\n          events: '@textmark:mouseover, @astextmark:mouseover',\n          update: 'datum',\n        },\n        { events: 'mouseover[!event.item]', update: 'null' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger clicking action on a bimodal network signal. It updates the field (node__click)\n   * with the id of the node being clicked on.\n   *\n   * On clicking elsewhere, the field is updated with null.\n   *\n   */\n  makeBimodalNodeClickStateSignal() {\n    return {\n      name: 'node__click',\n      value: null,\n      on: [\n        {\n          events: '@bimodal-symbol:click',\n          update: 'datum.id === node__click ? null : datum.id',\n        },\n        { events: 'click[!event.item]', update: 'null' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger hovering action on a bimodal network signal. It updates the field (node__hover)\n   * with the id of the node being hovered on.\n   *\n   * On removing the mouse from the node, the field is updated with null.\n   */\n\n  makeBimodalNodeHoverStateSignal(): Signal {\n    return {\n      name: 'node__hover',\n      value: null,\n      on: [\n        { events: '@bimodal-symbol:mouseover', update: 'datum.id' },\n        { events: 'mouseover[!event.item]', update: 'null' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger hovering action on a bimodal network signal. It updates the field (node_targets__hover)\n   * with the targets array of the current node.\n   *\n   * On removing the mouse from the node, the field is updated with null.\n   */\n\n  makeBimodalNodeTargetsHoverStateSignal(): Signal {\n    return {\n      name: 'node_targets__hover',\n      value: [],\n      on: [\n        { events: '@bimodal-symbol:mouseover', update: 'datum.targets' },\n        { events: 'mouseover[!event.item]', update: '[]' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger hovering action on a bimodal network signal. It updates the field (node_sources__hover)\n   * with the sources array of the current node.\n   *\n   * On removing the mouse from the node, the field is updated with null.\n   */\n\n  makeBimodalNodeSourcesHoverStateSignal(): Signal {\n    return {\n      name: 'node_sources__hover',\n      value: [],\n      on: [\n        { events: '@bimodal-symbol:mouseover', update: 'datum.sources' },\n        { events: 'mouseover[!event.item]', update: '[]' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger clicking action on a bimodal network signal. It updates the field (targets__click)\n   * with the targets array of the current node.\n   *\n   * On clicking elsewhere, the field is updated with null.\n   */\n\n  makeBimodalTargetsClickStateSignal(): Signal {\n    return {\n      name: 'targets__click',\n      value: [],\n      on: [\n        {\n          events: '@bimodal-symbol:click',\n          update: 'datum.targets === targets__click ? [] : datum.targets',\n        },\n        { events: 'click[!event.item]', update: '[]' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger clicking action on a bimodal network signal. It updates the field (sources__click)\n   * with the sources array of the current node.\n   *\n   * On clicking elsewhere, the field is updated with null.\n   */\n\n  makeBimodalSourcesClickStateSignal() {\n    return {\n      name: 'sources__click',\n      value: [],\n      on: [\n        {\n          events: '@bimodal-symbol:click',\n          update: 'datum.sources === sources__click ? [] : datum.sources',\n        },\n        { events: 'click[!event.item]', update: '[]' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to update the search field\n   */\n  makeSearchSignal() {\n    return {\n      name: 'search_signal',\n      value: [],\n    };\n  }\n\n  /**\n   * Signal to update the discrepency field\n   */\n  makeDiscrepencySignal() {\n    return {\n      name: 'discrepency_signal',\n      value: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Snackbar.html":{"url":"interfaces/Snackbar.html","title":"interface - Snackbar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Snackbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ui.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SnackbarType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnackbarType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Log } from './logs.model';\nimport { SnackbarType } from './response.model';\nimport { Reference } from './sheet.model';\n\nexport interface Snackbar {\n  opened: boolean;\n  text: string;\n  type: SnackbarType;\n}\n\nexport interface Loading {\n  loading: boolean;\n  loadingText: string;\n}\n\nexport interface OpenBottomSheetData {\n  name: string;\n  ontologyId: string;\n  group: number;\n  references: Reference[];\n  notes: string;\n}\n\nexport interface Logs {\n  sheetLogs: Log;\n  allLogs: Log[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Structure.html":{"url":"interfaces/Structure.html","title":"interface - Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Structure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            b_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isNew\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            proteinPresence\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rdfs_label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b_type:         BM_TYPE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BM_TYPE\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNew:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proteinPresence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proteinPresence:         PROTEIN_PRESENCE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PROTEIN_PRESENCE\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rdfs_label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rdfs_label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TNode.html":{"url":"classes/TNode.html","title":"class - TNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                color\n                            \n                            \n                                comparator\n                            \n                            \n                                comparatorId\n                            \n                            \n                                comparatorName\n                            \n                            \n                                found\n                            \n                            \n                                groupName\n                            \n                            \n                                id\n                            \n                            \n                                isNew\n                            \n                            \n                                label\n                            \n                            \n                                name\n                            \n                            \n                                notes\n                            \n                            \n                                ontologyId\n                            \n                            \n                                organName\n                            \n                            \n                                parent\n                            \n                            \n                                parents\n                            \n                            \n                                pathColor\n                            \n                            \n                                problem\n                            \n                            \n                                type\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, parent: number, uId: string, notes: string, organName: string, color: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tree.model.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notes\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        organName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comparator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comparatorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comparatorName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        found\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ontologyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pathColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        problem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableNestedMenuComponent.html":{"url":"components/TableNestedMenuComponent.html","title":"component - TableNestedMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableNestedMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table-nested-menu/table-nested-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table-nested-menu\n            \n\n\n\n            \n                styleUrls\n                ./table-nested-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table-nested-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                childMenu\n                            \n                            \n                                sheetURL\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sheetDetails\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sheetDetails\n                    \n                \n                \n                    \n                        Type :     SheetDetails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openURL\n                        \n                    \n                \n            \n            \n                \nopenURL(sheetId: string, gid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sheetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        childMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenu\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('childMenu', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://docs.google.com/spreadsheets/d/'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window\n                    \n                \n                    \n                        \n                                Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { MatMenu } from '@angular/material/menu';\nimport { SheetDetails } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-table-nested-menu',\n  templateUrl: './table-nested-menu.component.html',\n  styleUrls: ['./table-nested-menu.component.scss'],\n})\nexport class TableNestedMenuComponent {\n  @Input() sheetDetails: SheetDetails[] = [];\n  @Input() title = '';\n  window = window;\n  @ViewChild('childMenu', { static: true }) public childMenu!: MatMenu;\n  sheetURL = 'https://docs.google.com/spreadsheets/d/';\n\n  openURL(sheetId: string, gid: string) {\n    this.window.open(`${this.sheetURL}${sheetId}/edit#gid=${gid}`, '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        {{ sheet.display }}\n      \n    \n    \n      \n        \n        \n          \n            {{ version.viewValue }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./table-nested-menu.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ sheet.display }}                                                          {{ version.viewValue }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableNestedMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableNestedMenuModule.html":{"url":"modules/TableNestedMenuModule.html","title":"module - TableNestedMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    TableNestedMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableNestedMenuModule\n\n\n\ncluster_TableNestedMenuModule_exports\n\n\n\ncluster_TableNestedMenuModule_declarations\n\n\n\n\nTableNestedMenuComponent\n\nTableNestedMenuComponent\n\n\n\nTableNestedMenuModule\n\nTableNestedMenuModule\n\nTableNestedMenuModule -->\n\nTableNestedMenuComponent->TableNestedMenuModule\n\n\n\n\n\nTableNestedMenuComponent \n\nTableNestedMenuComponent \n\nTableNestedMenuComponent  -->\n\nTableNestedMenuModule->TableNestedMenuComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table-nested-menu/table-nested-menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TableNestedMenuComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TableNestedMenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableNestedMenuComponent } from './table-nested-menu.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [TableNestedMenuComponent],\n  imports: [CommonModule, MatIconModule, MatMenuModule, MatButtonModule],\n  exports: [TableNestedMenuComponent],\n})\nexport class TableNestedMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleBottomSheet.html":{"url":"classes/ToggleBottomSheet.html","title":"class - ToggleBottomSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleBottomSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[TOGGLE] Bottom Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleControlPane.html":{"url":"classes/ToggleControlPane.html","title":"class - ToggleControlPane","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleControlPane\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[TOGGLE] Control Pane'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleDebugLogs.html":{"url":"classes/ToggleDebugLogs.html","title":"class - ToggleDebugLogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleDebugLogs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[TOGGLE] Debug Logs'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleIndentList.html":{"url":"classes/ToggleIndentList.html","title":"class - ToggleIndentList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleIndentList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[TOGGLE] Indent List'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleReport.html":{"url":"classes/ToggleReport.html","title":"class - ToggleReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[TOGGLE] Report'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleShowAllAS.html":{"url":"classes/ToggleShowAllAS.html","title":"class - ToggleShowAllAS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleShowAllAS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SHOW ALL AS]'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackingPopupComponent.html":{"url":"components/TrackingPopupComponent.html","title":"component - TrackingPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TrackingPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tracking-popup/tracking-popup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracking-popup\n            \n\n\n\n            \n                styleUrls\n                ./tracking-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracking-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                container\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                showButton\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allowTelemetry\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, consentService: ConsentService, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tracking-popup/tracking-popup.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"app-tracking-popup\"\n\n                    \n                \n                \n                    \n                        Default value : 'app-tracking-popup'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tracking-popup/tracking-popup.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tracking-popup/tracking-popup.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showButton\n                        \n                    \n                \n            \n            \n                \nshowButton(button: \"opt-in\" | \"opt-out\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tracking-popup/tracking-popup.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        \"opt-in\" | \"opt-out\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(entry: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tracking-popup/tracking-popup.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entry\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app-tracking-popup'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/tracking-popup/tracking-popup.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tracking-popup/tracking-popup.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_SNACK_BAR_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/tracking-popup/tracking-popup.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allowTelemetry\n                    \n                \n\n                \n                    \n                        getallowTelemetry()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tracking-popup/tracking-popup.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { Consent, ConsentService } from '../../services/consent.service';\n\n@Component({\n  selector: 'app-tracking-popup',\n  templateUrl: './tracking-popup.component.html',\n  styleUrls: ['./tracking-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrackingPopupComponent {\n  @HostBinding('class') readonly clsName = 'app-tracking-popup';\n\n  get allowTelemetry(): Consent {\n    return this.consentService.consent;\n  }\n\n  container: HTMLElement;\n\n  constructor(\n    elementRef: ElementRef,\n    readonly consentService: ConsentService,\n    @Inject(MAT_SNACK_BAR_DATA) public data: { preClose: () => void },\n  ) {\n    this.container = elementRef.nativeElement;\n  }\n\n  dismiss(): void {\n    this.data.preClose();\n  }\n\n  submit(entry: boolean): void {\n    this.consentService.setConsent(entry ? 'given' : 'rescinded');\n    this.dismiss();\n  }\n\n  showButton(button: 'opt-in' | 'opt-out'): boolean {\n    const { allowTelemetry } = this;\n    if (allowTelemetry === 'not-set') {\n      return true;\n    } else {\n      return button === 'opt-in' ? allowTelemetry === 'rescinded' : allowTelemetry === 'given';\n    }\n  }\n}\n\n    \n\n    \n        We log usage to improve this service.\n\n  {{ allowTelemetry === 'not-set' ? 'I understand' : 'Opt in' }}\n\nOpt out\n\n    \n\n    \n                \n                    ./tracking-popup.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-width: 400px;\n  z-index: 9999;\n\n  p {\n    margin: 24px;\n  }\n\n  button {\n    margin: 1rem;\n    min-width: 6rem;\n    background-color: #007cbe;\n    display: flex;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'We log usage to improve this service.  {{ allowTelemetry === \\'not-set\\' ? \\'I understand\\' : \\'Opt in\\' }}Opt out'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrackingPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingPopupModule.html":{"url":"modules/TrackingPopupModule.html","title":"module - TrackingPopupModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingPopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tracking-popup/tracking-popup.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TrackingPopupComponent } from './tracking-popup.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule],\n  declarations: [TrackingPopupComponent],\n  exports: [TrackingPopupComponent],\n})\nexport class TrackingPopupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeComponent.html":{"url":"components/TreeComponent.html","title":"component - TreeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TreeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/tree/tree.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tree\n            \n\n\n\n            \n                styleUrls\n                ./tree.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                treeElementRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        treeElementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('graph')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss'],\n})\nexport class TreeComponent {\n  @ViewChild('graph') treeElementRef!: ElementRef;\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./tree.component.scss\n                \n                .title-wrapper {\n  white-space: nowrap;\n}\n\n.title {\n  font-weight: 600;\n  display: inline-block;\n}\n\n.scroll-bar-horizontal {\n  overflow: scroll;\n  height: calc(100vh - 4rem);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeMarkGroup.html":{"url":"classes/TreeMarkGroup.html","title":"class - TreeMarkGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeMarkGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/groups/tree.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeBimodalTextDiscrepencyIdMarks\n                            \n                            \n                                makeBimodalTextDiscrepencyLabelMarks\n                            \n                            \n                                makeBimodalTextDuplicateIdMarks\n                            \n                            \n                                makeBimodalTextSearchMarks\n                            \n                            \n                                makeTreeMarkGroup\n                            \n                            \n                                makeTreePathMarks\n                            \n                            \n                                makeTreeSymbolMarks\n                            \n                            \n                                makeTreeTextLinkMarks\n                            \n                            \n                                makeTreeTextMarks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/groups/tree.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GroupMark\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/groups/tree.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDiscrepencyIdMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDiscrepencyIdMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:182\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when discrepency Id toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDiscrepencyLabelMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDiscrepencyLabelMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:110\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when discrepency label toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDuplicateIdMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDuplicateIdMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:254\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when duplicate Id toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextSearchMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextSearchMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:38\n                        \n                    \n\n\n            \n                \n                        Mark for the blue rectangle for search\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeTreeMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:17\n                        \n                    \n\n\n            \n                \n                        Mark group for the AS tree\n\n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreePathMarks\n                        \n                    \n                \n            \n            \n                \nmakeTreePathMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:326\n                        \n                    \n\n\n            \n                \n                        AS Tree paths marks\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeSymbolMarks\n                        \n                    \n                \n            \n            \n                \nmakeTreeSymbolMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:358\n                        \n                    \n\n\n            \n                \n                        AS tree symbol marks\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeTextLinkMarks\n                        \n                    \n                \n            \n            \n                \nmakeTreeTextLinkMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:402\n                        \n                    \n\n\n            \n                \n                        AS tree link text marks (these are clikable to get info )\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeTextMarks\n                        \n                    \n                \n            \n            \n                \nmakeTreeTextMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:457\n                        \n                    \n\n\n            \n                \n                        AS Tree text marks\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GroupMark, Mark } from 'vega';\n\nexport class TreeMarkGroup {\n  static create(): GroupMark {\n    return new TreeMarkGroup().group;\n  }\n\n  group: GroupMark;\n\n  constructor() {\n    this.group = this.makeTreeMarkGroup();\n  }\n\n  /**\n   * Mark group for the AS tree\n   */\n  makeTreeMarkGroup(): GroupMark {\n    return {\n      type: 'group',\n      signals: [{ name: 'bgoffset', value: 6 }],\n      name: 'asTree',\n      marks: [\n        this.makeTreePathMarks(),\n        this.makeTreeSymbolMarks(),\n        this.makeTreeTextMarks(),\n        this.makeBimodalTextSearchMarks(),\n        this.makeTreeTextLinkMarks(),\n        this.makeBimodalTextDiscrepencyLabelMarks(),\n        this.makeBimodalTextDiscrepencyIdMarks(),\n        this.makeBimodalTextDuplicateIdMarks(),\n      ],\n    };\n  }\n\n  /**\n   * Mark for the blue rectangle for search\n   */\n  makeBimodalTextSearchMarks(): Mark {\n    return {\n      name: 'rectmark',\n      type: 'rect',\n      from: {\n        data: 'astextmark',\n      },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'aliceblue' },\n          stroke: { value: 'steelblue' },\n        },\n        update: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'aliceblue' },\n          stroke: { value: 'steelblue' },\n          opacity: [\n            {\n              test: \"node__click === null && indata('search', 'id', datum.datum.id)\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when discrepency label toggle is turned on\n   */\n  makeBimodalTextDiscrepencyLabelMarks(): Mark {\n    return {\n      name: 'rectmarkdiscrepencylabel',\n      type: 'rect',\n      from: { data: 'astextmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightblue' },\n          stroke: { value: 'darkblue' },\n          zindex: { value: -1 },\n        },\n        update: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightblue' },\n          stroke: { value: 'darkblue' },\n          zindex: { value: -1 },\n          opacity: [\n            {\n              test: \"node__click === null && indata('discrepencyLabel', 'id', datum.datum.id) && datum.datum.children !=0\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when discrepency Id toggle is turned on\n   */\n  makeBimodalTextDiscrepencyIdMarks(): Mark {\n    return {\n      name: 'rectmarkdiscrepencyid',\n      type: 'rect',\n      from: { data: 'astextmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'bisque' },\n          stroke: { value: 'burlywood' },\n          zindex: { value: -1 },\n        },\n        update: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightblue' },\n          stroke: { value: 'darkblue' },\n          zindex: { value: -1 },\n          opacity: [\n            {\n              test: \"node__click === null && indata('discrepencyId', 'id', datum.datum.id) && datum.datum.children !=0\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when duplicate Id toggle is turned on\n   */\n  makeBimodalTextDuplicateIdMarks(): Mark {\n    return {\n      name: 'rectmarkduplicateid',\n      type: 'rect',\n      from: { data: 'astextmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightyellow' },\n          stroke: { value: 'burlywood' },\n          zindex: { value: -1 },\n        },\n        update: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightblue' },\n          stroke: { value: 'darkblue' },\n          zindex: { value: -1 },\n          opacity: [\n            {\n              test: \"node__click === null && indata('duplicateId', 'id', datum.datum.id) && datum.datum.children !=0\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * AS Tree paths marks\n   */\n  makeTreePathMarks(): Mark {\n    return {\n      type: 'path',\n      from: { data: 'links' },\n      encode: {\n        update: {\n          path: { field: 'path' },\n          stroke: {\n            signal: 'datum.source.pathColor === datum.target.pathColor ? datum.source.pathColor : \"#ccc\"',\n          },\n          opacity: [\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            {\n              test: 'node__hover !== null && datum.source.id !== node__hover && node__click === null',\n              value: 0.25,\n            },\n            {\n              value: 0.4,\n            },\n          ],\n          strokeWidth: { value: 5 },\n        },\n      },\n    };\n  }\n\n  /**\n   * AS tree symbol marks\n   */\n  makeTreeSymbolMarks(): Mark {\n    return {\n      type: 'symbol',\n      from: { data: 'tree' },\n      encode: {\n        enter: {\n          size: { value: 300 },\n          stroke: {\n            signal: 'datum.problem ? \"#000\": datum.isNew ? datum.color :\"#fff\"',\n          },\n          strokeWidth: { signal: 'datum.problem ? 3: datum.isNew ? 3 : 0' },\n          strokeDash: { signal: 'datum.isNew ? [3, 3] : [0, 0]' },\n        },\n        update: {\n          x: { field: 'x' },\n          y: { field: 'y' },\n          tooltip: { signal: '{\"Ontology ID\": datum.ontologyId}' },\n          opacity: [\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && node__click === null',\n              value: 0.5,\n            },\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            {\n              value: 0,\n            },\n          ],\n          zIndex: { value: 1 },\n          fill: { signal: 'datum.isNew ? \"#fafafa\" : datum.color' },\n        },\n      },\n    };\n  }\n\n  /**\n   * AS tree link text marks (these are clikable to get info )\n   */\n  makeTreeTextLinkMarks(): Mark {\n    return {\n      type: 'text',\n      name: 'aslinktextmark',\n      from: { data: 'tree' },\n      zindex: 5,\n      encode: {\n        enter: {\n          text: { field: 'ontologyId' },\n          limit: { value: 180 },\n          fontSize: { value: 11 },\n          baseline: { value: 'middle' },\n          fontWeight: { value: 600 },\n        },\n        update: {\n          x: { field: 'x' },\n          y: { field: 'y' },\n          dy: { value: 8 },\n          dx: { signal: 'datum.children ? 15: -15' },\n          fill: [\n            {\n              value: 'grey',\n            },\n          ],\n          opacity: [\n            {\n              test: '!show_ontology',\n              value: 0,\n            },\n            {\n              test: '!datum.children',\n              value: 0,\n            },\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && node__click === null',\n              value: 0.5,\n            },\n          ],\n          align: { signal: \"datum.children ? 'left' : 'right'\" },\n        },\n      },\n    };\n  }\n\n  /**\n   * AS Tree text marks\n   */\n  makeTreeTextMarks(): Mark {\n    return {\n      type: 'text',\n      name: 'astextmark',\n      from: { data: 'tree' },\n      zindex: 5,\n      encode: {\n        enter: {\n          text: { field: 'name' },\n          limit: { value: 180 },\n          fontSize: { value: 14 },\n          baseline: { value: 'middle' },\n          fontWeight: { value: 400 },\n          cursor: { signal: 'datum.children ? \"pointer\" : \"null\"' },\n        },\n        update: {\n          x: { field: 'x' },\n          y: { field: 'y' },\n          dy: { signal: 'show_ontology ? -8 : 0' },\n          dx: { signal: 'datum.children ? 15: -15' },\n          fill: [\n            {\n              test: 'datum === bimodal_text__hover',\n              value: 'steelblue',\n            },\n            {\n              value: 'black',\n            },\n          ],\n          opacity: [\n            {\n              test: '!datum.children',\n              value: 0,\n            },\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && node__click === null',\n              value: 0.5,\n            },\n          ],\n          align: { signal: \"datum.children ? 'left' : 'right'\" },\n        },\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreeModule.html":{"url":"modules/TreeModule.html","title":"module - TreeModule","body":"\n                   \n\n\n\n\n    Modules\n    TreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreeModule\n\n\n\ncluster_TreeModule_exports\n\n\n\ncluster_TreeModule_declarations\n\n\n\n\nTreeComponent\n\nTreeComponent\n\n\n\nTreeModule\n\nTreeModule\n\nTreeModule -->\n\nTreeComponent->TreeModule\n\n\n\n\n\nTreeComponent \n\nTreeComponent \n\nTreeComponent  -->\n\nTreeModule->TreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/tree/tree.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeComponent } from './tree.component';\n\n@NgModule({\n  declarations: [TreeComponent],\n  imports: [CommonModule],\n  exports: [TreeComponent],\n})\nexport class TreeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TreeService.html":{"url":"injectables/TreeService.html","title":"injectable - TreeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TreeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/tree.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                bm\n                            \n                            \n                                controlPaneOpen\n                            \n                            \n                                height\n                            \n                            \n                                    \n                                sc$\n                            \n                            \n                                sheetConfig\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                            \n                                    \n                                tree$\n                            \n                            \n                                    \n                                uiState$\n                            \n                            \n                                    Public\n                                    Readonly\n                                vs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                makeTreeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, vs: VegaService, bm: BimodalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/tree.service.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vs\n                                                  \n                                                        \n                                                                        VegaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bm\n                                                  \n                                                        \n                                                                        BimodalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        makeTreeData\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeTreeData(currentSheet: Sheet, data: Row[], _compareData?, isReport)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/tree.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Function to create the vega tree that visualization the\nAnatomical structures and its substructures\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    current selected sheet\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Row[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    data from the miner of the sheet\n\n                                            \n                                        \n                                        \n                                                _compareData\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isReport\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        bm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlPaneOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:29\n                        \n                    \n\n            \n                \n                    Denotes if the left control pane is open\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:25\n                        \n                    \n\n            \n                \n                    Height of the tree\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sc$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getSheetConfig)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:48\n                        \n                    \n\n            \n                \n                    Sheet state - sheet config observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SheetConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:33\n                        \n                    \n\n            \n                \n                    Sheet configurations that has the different parameters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tree$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:38\n                        \n                    \n\n            \n                \n                    Tree State observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uiState$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(UIState)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:43\n                        \n                    \n\n            \n                \n                    UI State observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VegaService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:52\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { ValuesData } from 'vega';\nimport { ReportLog } from '../../actions/logs.actions';\nimport { UpdateLinksData, UpdateVegaSpec } from '../../actions/tree.actions';\nimport { HasError } from '../../actions/ui.actions';\nimport { LOG_ICONS, LOG_TYPES } from '../../models/logs.model';\nimport { Error } from '../../models/response.model';\nimport { Row, Sheet, SheetConfig } from '../../models/sheet.model';\nimport { SheetState } from '../../store/sheet.state';\nimport { TreeState, TreeStateModel } from '../../store/tree.state';\nimport { UIState, UIStateModel } from '../../store/ui.state';\nimport { AS_RED, NODE_TYPE, TNode } from './../../models/tree.model';\nimport { BimodalService } from './bimodal.service';\nimport { VegaService } from './vega.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TreeService {\n  /**\n   * Height of the tree\n   */\n  height!: number;\n  /**\n   * Denotes if the left control pane is open\n   */\n  controlPaneOpen!: boolean;\n  /**\n   * Sheet configurations that has the different parameters\n   */\n  sheetConfig!: SheetConfig;\n\n  /**\n   * Tree State observable\n   */\n  @Select(TreeState) tree$!: Observable;\n\n  /**\n   * UI State observable\n   */\n  @Select(UIState) uiState$!: Observable;\n\n  /**\n   * Sheet state - sheet config observable\n   */\n  @Select(SheetState.getSheetConfig) sc$!: Observable;\n\n  constructor(\n    public readonly store: Store,\n    public readonly vs: VegaService,\n    public readonly bm: BimodalService,\n  ) {\n    this.tree$.subscribe((state) => {\n      this.height = state.height;\n      const view = TreeState.getVegaView(state);\n\n      // if the vega view is valid, check for search data\n      // re-render the view\n      if (Object.keys(view).length) {\n        const search = state.search;\n        view.data('search', search);\n        view.runAsync();\n      }\n\n      // if the vega view is valid, check for discrepency Labels data\n      // re-render the view\n      if (Object.keys(view).length) {\n        const discrepency = state.discrepencyLabel;\n        view.data('discrepencyLabel', discrepency);\n        view.runAsync();\n      }\n\n      // if the vega view is valid, check for discrepency Ids data\n      // re-render the view\n      if (Object.keys(view).length) {\n        const discrepency = state.discrepencyId;\n        view.data('discrepencyId', discrepency);\n        view.runAsync();\n      }\n\n      // if the vega view is valid, check for duplicate Ids data\n      // re-render the view\n      if (Object.keys(view).length) {\n        const discrepency = state.duplicateId;\n        view.data('duplicateId', discrepency);\n        view.runAsync();\n      }\n    });\n    this.uiState$.subscribe((state) => {\n      this.controlPaneOpen = state.controlPaneOpen;\n    });\n\n    this.sc$.subscribe((config) => {\n      this.sheetConfig = config;\n    });\n  }\n\n  /**\n   * Function to create the vega tree that visualization the\n   * Anatomical structures and its substructures\n   *\n   * @param currentSheet current selected sheet\n   * @param data data from the miner of the sheet\n   * @param compareData compare data (depricated)\n   */\n  public makeTreeData(currentSheet: Sheet, data: Row[], _compareData?: unknown, isReport = false): void {\n    try {\n      if (data.length === 0) {\n        return;\n      }\n\n      const idNameSet: Record = {};\n      let id = 1;\n      let parent: TNode;\n      const nodes: TNode[] = [];\n      const allParentIds = new Set();\n      const root = new TNode(\n        id,\n        data[0].anatomical_structures[0].name ?? '',\n        0,\n        data[0].anatomical_structures[0].id ?? '',\n        data[0].anatomical_structures[0].notes ?? '',\n        'Body',\n        AS_RED,\n      );\n      root.label = '';\n      root.comparator = root.name + root.label + root.ontologyId;\n      root.type = NODE_TYPE.R;\n      delete (root as { parent?: unknown }).parent;\n      nodes.push(root);\n      let flag = 0;\n      const AsByAsOrganWise: Record = {};\n\n      data.forEach((row) => {\n        parent = root;\n        row.anatomical_structures.forEach((structure) => {\n          let s: number;\n          if (structure.id) {\n            s = nodes.findIndex((i: TNode) => {\n              if (!isReport) {\n                return i.type !== 'root' && i.comparatorId === parent.comparatorId + structure.id;\n              } else {\n                return (\n                  i.type !== 'root' &&\n                  i.comparatorId === parent.comparatorId + structure.id &&\n                  i.organName === row.organName\n                );\n              }\n            });\n          } else {\n            s = nodes.findIndex((i: TNode) => {\n              if (!isReport) {\n                return i.type !== 'root' && i.comparatorName === parent.comparatorName + structure.name;\n              } else {\n                return (\n                  i.type !== 'root' &&\n                  i.comparatorName === parent.comparatorName + structure.name &&\n                  i.organName === row.organName\n                );\n              }\n            });\n          }\n          if (s === -1) {\n            if (Object.prototype.hasOwnProperty.call(AsByAsOrganWise, row?.organName) && flag >= 2) {\n              AsByAsOrganWise[row?.organName] += 1;\n            } else {\n              flag += 1;\n              AsByAsOrganWise[row?.organName] = 1;\n            }\n            id += 1;\n            const newNode = new TNode(\n              id,\n              structure.id && idNameSet[structure.id] ? idNameSet[structure.id] : structure.name ?? '',\n              parent.id,\n              structure.id ?? '',\n              structure.notes ?? '',\n              row.organName,\n              AS_RED,\n            );\n            newNode.label = structure.rdfs_label ?? '';\n            newNode.comparator = parent.comparator + newNode.name + newNode.label + newNode.ontologyId;\n            newNode.comparatorId = parent.comparatorId + newNode.ontologyId;\n            newNode.comparatorName = parent.comparatorName + newNode.name;\n            if (idNameSet[newNode.ontologyId] === undefined) {\n              idNameSet[newNode.ontologyId] = newNode.name;\n            }\n            if ('isNew' in structure) {\n              newNode.isNew = true;\n              newNode.color = structure.color ?? '';\n              newNode.pathColor = structure.color ?? '';\n            }\n\n            nodes.push(newNode);\n            allParentIds.add(parent.id);\n            parent = newNode;\n          } else {\n            const node = nodes[s];\n            if ('isNew' in structure) {\n              node.color = structure.color ?? '';\n              node.pathColor = structure.color ?? '';\n            }\n            parent = node;\n          }\n        });\n      });\n\n      // delete duplicate organ element\n      nodes.shift();\n      delete (nodes[0] as { parent?: unknown }).parent;\n\n      const spec = this.vs.makeVegaConfig(currentSheet, nodes, this.sheetConfig);\n      allParentIds.delete(1);\n      const allParentIdsArray = [...allParentIds];\n      if (!isReport) {\n        this.store.dispatch(new UpdateLinksData(0, 0, {}, {}, 0, AsByAsOrganWise));\n        this.store.dispatch(new UpdateVegaSpec(spec));\n        this.vs.renderGraph(spec);\n      } else {\n        this.store.dispatch(new UpdateLinksData(0, 0, {}, {}, 0, AsByAsOrganWise));\n        this.bm.makeBimodalData(\n          data,\n          ((spec.data?.[0] as ValuesData).values as TNode[]).filter((x) => !allParentIdsArray.includes(x.id)),\n          this.store.selectSnapshot(TreeState.getBimodalConfig),\n          true,\n          this.store.selectSnapshot(SheetState.getSheetConfig),\n        );\n      }\n    } catch (error) {\n      console.log(error);\n      const error2 = error as { name: string; status: number };\n      const err: Error = {\n        msg: `${error2.name} (Status: ${error2.status})`,\n        status: error2.status,\n        hasError: true,\n      };\n      this.store.dispatch(new ReportLog(LOG_TYPES.MSG, 'Failed to create Tree', LOG_ICONS.error));\n      this.store.dispatch(new HasError(err));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeStateModel.html":{"url":"interfaces/TreeStateModel.html","title":"interface - TreeStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TreeStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/tree.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to keep track of all data and events related to the visualization\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bimodal\n                                        \n                                \n                                \n                                        \n                                            bottomSheetData\n                                        \n                                \n                                \n                                        \n                                            discrepencyId\n                                        \n                                \n                                \n                                        \n                                            discrepencyLabel\n                                        \n                                \n                                \n                                        \n                                            duplicateId\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            lastSearch\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            omapConfig\n                                        \n                                \n                                \n                                        \n                                            search\n                                        \n                                \n                                \n                                        \n                                            spec\n                                        \n                                \n                                \n                                        \n                                            treeData\n                                        \n                                \n                                \n                                        \n                                            view\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bimodal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bimodal:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store bimodal data - nodes, links and config (for sorting and sizing)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bottomSheetData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottomSheetData:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store data for the bottom sheet to display information\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discrepencyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discrepencyId:     DiscrepencyStructure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscrepencyStructure[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the discrepency id data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discrepencyLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discrepencyLabel:     DiscrepencyStructure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscrepencyStructure[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the discrepency label data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duplicateId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duplicateId:     DiscrepencyStructure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscrepencyStructure[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the discrepency id data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the height of the visualization\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastSearch:         SearchStructure\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SearchStructure\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the last clicked node in the search field\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store data of links between nodes to show in the report\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        omapConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        omapConfig:         OmapConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OmapConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the OMAP Config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:     SearchStructure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SearchStructure[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the search data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spec:     Spec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Spec\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Stores the Vega Specification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treeData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        treeData:         TNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TNode[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the data from the Tree\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        view:     View\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     View\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the Vega view object which enables us to use the Vega API\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the width of the visualization\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { Spec, View } from 'vega';\nimport {\n  DiscrepencyId,\n  DiscrepencyLabel,\n  DoSearch,\n  DuplicateId,\n  UpdateBimodal,\n  UpdateBimodalConfig,\n  UpdateBottomSheetData,\n  UpdateLinksData,\n  UpdateOmapConfig,\n  UpdateVegaSpec,\n  UpdateVegaView,\n} from '../actions/tree.actions';\nimport { BMNode, BimodalConfig, Link } from '../models/bimodal.model';\nimport { OmapConfig } from '../models/omap.model';\nimport { DiscrepencyStructure, SearchStructure, TNode } from '../models/tree.model';\n\n/** Class to keep track of all data and events related to the visualization */\nexport interface TreeStateModel {\n  /**\n   * Stores the Vega Specification\n   */\n  spec: Spec;\n  /**\n   * Store the data from the Tree\n   */\n  treeData: TNode[];\n  /**\n   * Store the Vega view object which enables us to use the Vega API\n   */\n  view: View;\n  /**\n   * Store the width of the visualization\n   */\n  width: number;\n  /**\n   * Store the height of the visualization\n   */\n  height: number;\n  /**\n   * Store bimodal data - nodes, links and config (for sorting and sizing)\n   */\n  bimodal: {\n    nodes: BMNode[];\n    links: Link[];\n    config: BimodalConfig;\n  };\n  /**\n   * Store the search data\n   */\n  search: SearchStructure[];\n  /**\n   * Store the last clicked node in the search field\n   */\n  lastSearch: SearchStructure;\n  /**\n   * Store data for the bottom sheet to display information\n   */\n  bottomSheetData: Record;\n  /**\n   * Store data of links between nodes to show in the report\n   */\n  links: {\n    AS_CT: number;\n    CT_B: number;\n    AS_AS: number;\n    AS_CT_organWise: Record;\n    CT_B_organWise: Record;\n    AS_AS_organWise: Record;\n  };\n  /**\n   * Store the discrepency label data\n   */\n  discrepencyLabel: DiscrepencyStructure[];\n  /**\n   * Store the discrepency id data\n   */\n  discrepencyId: DiscrepencyStructure[];\n  /**\n   * Store the discrepency id data\n   */\n  duplicateId: DiscrepencyStructure[];\n  /**\n   * Store the OMAP Config\n   */\n  omapConfig: OmapConfig;\n}\n\n@State({\n  name: 'treeState',\n  defaults: {\n    spec: {},\n    treeData: [],\n    view: {} as View,\n    width: 0,\n    height: document.getElementsByTagName('body')[0].clientHeight,\n    bimodal: {\n      nodes: [],\n      links: [],\n      config: {\n        BM: { sort: 'Alphabetically', size: 'None', type: 'All' },\n        CT: { sort: 'Alphabetically', size: 'None' },\n      },\n    },\n    search: [],\n    lastSearch: null as unknown as SearchStructure,\n    bottomSheetData: {},\n    links: {\n      AS_CT: 0,\n      CT_B: 0,\n      AS_AS: 0,\n      AS_CT_organWise: {},\n      CT_B_organWise: {},\n      AS_AS_organWise: {},\n    },\n    discrepencyLabel: [],\n    discrepencyId: [],\n    duplicateId: [],\n    omapConfig: { organsOnly: false, proteinsOnly: false },\n  },\n})\n@Injectable()\nexport class TreeState {\n  /**\n   * Select the bimodal config (for sorting and sizing)\n   */\n  @Selector()\n  static getBiomarkerType(state: TreeStateModel) {\n    return state.bimodal.config.BM.type;\n  }\n\n  /**\n   * Select the bimodal config (for sorting and sizing)\n   */\n  @Selector()\n  static getBimodalConfig(state: TreeStateModel) {\n    return state.bimodal.config;\n  }\n\n  /**\n   * Select the vega specification\n   */\n  @Selector()\n  static getVegaSpec(state: TreeStateModel) {\n    return state.spec;\n  }\n\n  /**\n   * Select the tree data (only anatomical structures)\n   */\n  @Selector()\n  static getTreeData(state: TreeStateModel) {\n    return state.treeData;\n  }\n\n  /**\n   * Select the Vega View to use the Vega View API\n   */\n  @Selector()\n  static getVegaView(state: TreeStateModel) {\n    return state.view;\n  }\n\n  /**\n   * Select the bimodal data. Contains the nodes, links and the bimodal config\n   */\n  @Selector()\n  static getBimodal(state: TreeStateModel) {\n    return state.bimodal;\n  }\n\n  /**\n   * Select the bottom sheet data\n   */\n  @Selector()\n  static getBottomSheetData(state: TreeStateModel) {\n    return state.bottomSheetData;\n  }\n\n  /**\n   * Select the links data to show in the report\n   */\n  @Selector()\n  static getLinksData(state: TreeStateModel) {\n    return state.links;\n  }\n\n  /**\n   * Select the most recently chosen search option\n   */\n  @Selector()\n  static getLatestSearchStructure(state: TreeStateModel) {\n    return state.lastSearch;\n  }\n\n  /**\n   * Select the config for OMAPS\n   */\n  @Selector()\n  static getOmapConfig(state: TreeStateModel) {\n    return state.omapConfig;\n  }\n\n  /**\n   * Updates the bimodal data\n   */\n  @Action(UpdateBimodal)\n  updateBimodal({ getState, setState }: StateContext, { nodes, links }: UpdateBimodal) {\n    const state = getState();\n    setState({\n      ...state,\n      bimodal: { nodes, links, config: state.bimodal.config },\n    });\n  }\n\n  /**\n   * Updates the vega view\n   * Updates the tree data with the anatomical structures\n   * Updates the width of the visualization\n   */\n  @Action(UpdateVegaView)\n  updateVegaView({ patchState }: StateContext, { view }: UpdateVegaView) {\n    patchState({\n      view,\n      treeData: view.data('tree'),\n      width: view._viewWidth,\n    });\n  }\n\n  /**\n   * Updates te vega spec\n   */\n  @Action(UpdateVegaSpec)\n  updateVegaSpec({ setState, getState }: StateContext, { spec }: UpdateVegaSpec) {\n    const state = getState();\n    setState({\n      ...state,\n      spec,\n    });\n  }\n\n  /**\n   * Updates the bimodal config\n   */\n  @Action(UpdateBimodalConfig)\n  updateBimodalConfig({ getState, setState }: StateContext, { config }: UpdateBimodalConfig) {\n    const state = getState();\n    const nodes = state.bimodal.nodes;\n    const links = state.bimodal.links;\n\n    setState({\n      ...state,\n      bimodal: {\n        nodes,\n        links,\n        config,\n      },\n    });\n  }\n\n  @Action(UpdateOmapConfig)\n  updateOmapConfig({ getState, setState }: StateContext, { config }: UpdateOmapConfig) {\n    setState({\n      ...getState(),\n      omapConfig: config,\n    });\n  }\n\n  /**\n   * Updates the search list\n   */\n  @Action(DoSearch)\n  doSearch(\n    { getState, setState }: StateContext,\n    { searchStructures, lastClickedOption: lastClickedStructure }: DoSearch,\n  ) {\n    const state = getState();\n    setState({\n      ...state,\n      search: searchStructures,\n      lastSearch: lastClickedStructure,\n    });\n  }\n\n  /**\n   * Updates the discrepency labels list\n   */\n  @Action(DiscrepencyLabel)\n  discrepencyLabel({ getState, setState }: StateContext, { discrepencyStructures }: DiscrepencyLabel) {\n    const state = getState();\n    setState({\n      ...state,\n      discrepencyLabel: discrepencyStructures,\n    });\n  }\n\n  /**\n   * Updates the discrepency ids list\n   */\n  @Action(DiscrepencyId)\n  discrepencyId({ getState, setState }: StateContext, { discrepencyStructures }: DiscrepencyLabel) {\n    const state = getState();\n    setState({\n      ...state,\n      discrepencyId: discrepencyStructures,\n    });\n  }\n\n  /**\n   * Updates the duplicate ids list\n   */\n  @Action(DuplicateId)\n  duplicateId({ getState, setState }: StateContext, { discrepencyStructures }: DiscrepencyLabel) {\n    const state = getState();\n    setState({\n      ...state,\n      duplicateId: discrepencyStructures,\n    });\n  }\n\n  /**\n   * Updates the bottom sheet data\n   */\n  @Action(UpdateBottomSheetData)\n  updateBottomSheetData({ getState, setState }: StateContext, { data }: UpdateBottomSheetData) {\n    const state = getState();\n    setState({\n      ...state,\n      bottomSheetData: data,\n    });\n  }\n\n  /**\n   * Updates the links data that is displayed in the report\n   */\n  @Action(UpdateLinksData)\n  updateLinksData(\n    { getState, setState }: StateContext,\n    { AS_CT, CT_B, AS_CT_organWise, CT_B_organWise, AS_AS, AS_AS_organWise, allOrgans }: UpdateLinksData,\n  ) {\n    const state = getState();\n    if (AS_AS) {\n      setState({\n        ...state,\n        links: { ...state.links, AS_AS },\n      });\n    } else if (AS_AS_organWise) {\n      setState({\n        ...state,\n        links: {\n          ...state.links,\n          AS_AS_organWise: {\n            ...state.links.AS_AS_organWise,\n            ...AS_AS_organWise,\n          },\n        },\n      });\n    } else {\n      setState({\n        ...state,\n        links: {\n          AS_CT: allOrgans ? state.links.AS_CT : AS_CT,\n          CT_B: allOrgans ? state.links.CT_B : CT_B,\n          CT_B_organWise: { ...state.links.CT_B_organWise, ...CT_B_organWise },\n          AS_CT_organWise: {\n            ...state.links.AS_CT_organWise,\n            ...AS_CT_organWise,\n          },\n          AS_AS: state.links.AS_AS,\n          AS_AS_organWise: state.links.AS_AS_organWise,\n        },\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UIStateModel.html":{"url":"interfaces/UIStateModel.html","title":"interface - UIStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UIStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/ui.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to keep track of all UI elements\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bottomSheetOpen\n                                        \n                                \n                                \n                                        \n                                            compareOpen\n                                        \n                                \n                                \n                                        \n                                            controlPaneOpen\n                                        \n                                \n                                \n                                        \n                                            debugLogOpen\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            indentListOpen\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            loadingText\n                                        \n                                \n                                \n                                        \n                                            reportOpen\n                                        \n                                \n                                \n                                        \n                                            rightSideNavOpen\n                                        \n                                \n                                \n                                        \n                                            searchOpen\n                                        \n                                \n                                \n                                        \n                                            snackbar\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottomSheetOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottomSheetOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the bottom sheet that shows info\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compareOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compareOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the compare sidebar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        controlPaneOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        controlPaneOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the control pane on the left\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugLogOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugLogOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the debug log sidebar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         Error\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Error\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store UI in error state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indentListOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        indentListOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the indented list sidebar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is the UI in loading state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadingText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the loading state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reportOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the report sidebar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightSideNavOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightSideNavOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the right sidebar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the search panel state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snackbar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snackbar:         Snackbar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Snackbar\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sotre snackbar state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, Select, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ReportLog } from '../actions/logs.actions';\nimport { UpdateBottomSheetDOI, UpdateBottomSheetInfo } from '../actions/sheet.actions';\nimport { UpdateBottomSheetData } from '../actions/tree.actions';\nimport {\n  CloseBottomSheet,\n  CloseBottomSheetDOI,\n  CloseCompare,\n  CloseLoading,\n  CloseRightSideNav,\n  CloseSearch,\n  CloseSnackbar,\n  HasError,\n  OpenBottomSheet,\n  OpenBottomSheetDOI,\n  OpenCompare,\n  OpenLoading,\n  OpenSearch,\n  OpenSnackbar,\n  ToggleControlPane,\n  ToggleDebugLogs,\n  ToggleIndentList,\n  ToggleReport,\n  UpdateLoadingText,\n} from '../actions/ui.actions';\nimport { GaAction, GaCategory } from '../models/ga.model';\nimport { LOG_ICONS, LOG_TYPES } from '../models/logs.model';\nimport { Error, SnackbarType } from '../models/response.model';\nimport { Snackbar } from '../models/ui.model';\nimport { TreeState } from './tree.state';\n\n/** Interface to keep track of all UI elements */\nexport interface UIStateModel {\n  /**\n   * Keep track of the right sidebar\n   */\n  rightSideNavOpen: boolean;\n  /**\n   * Keep track of the control pane on the left\n   */\n  controlPaneOpen: boolean;\n  /**\n   * Is the UI in loading state\n   */\n  loading: boolean;\n  /**\n   * Store the loading state\n   */\n  loadingText: string;\n  /**\n   * Store UI in error state\n   */\n  error: Error;\n  /**\n   * Sotre snackbar state\n   */\n  snackbar: Snackbar;\n  /**\n   * Keep track of the indented list sidebar\n   */\n  indentListOpen: boolean;\n  /**\n   * Keep track of the report sidebar\n   */\n  reportOpen: boolean;\n  /**\n   * Keep track of the debug log sidebar\n   */\n  debugLogOpen: boolean;\n  /**\n   * Keep track of the bottom sheet that shows info\n   */\n  bottomSheetOpen: boolean;\n  /**\n   * Keep track of the compare sidebar\n   */\n  compareOpen: boolean;\n  /**\n   * Keep track of the search panel state\n   */\n  searchOpen: boolean;\n}\n\n@State({\n  name: 'uiState',\n  defaults: {\n    rightSideNavOpen: false,\n    controlPaneOpen: true,\n    loading: true,\n    loadingText: '',\n    error: {},\n    snackbar: { opened: false, text: '', type: SnackbarType.success },\n    indentListOpen: false,\n    reportOpen: false,\n    debugLogOpen: false,\n    bottomSheetOpen: false,\n    compareOpen: false,\n    searchOpen: false,\n  },\n})\n@Injectable()\nexport class UIState {\n  constructor(\n    public store: Store,\n    public ga: GoogleAnalyticsService,\n  ) {}\n\n  /**\n   * Select the snackbar state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getSnackbar(state: UIStateModel) {\n    return state.snackbar;\n  }\n\n  /**\n   * Select the loading state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getLoading(state: UIStateModel) {\n    return state.loading;\n  }\n\n  /**\n   * Select the loading text\n   *\n   * @param state - UI State Model\n   */\n  @Select()\n  static getLoadingText(state: UIStateModel) {\n    return state.loadingText;\n  }\n\n  /**\n   * Select control pane state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getControlPaneState(state: UIStateModel) {\n    return state.controlPaneOpen;\n  }\n\n  /**\n   * Select the error state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getError(state: UIStateModel) {\n    return {\n      error: state.error,\n    };\n  }\n\n  /**\n   * Select indented list sidenav state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getIndentList(state: UIStateModel) {\n    return state.indentListOpen;\n  }\n\n  /**\n   * Select the report sidenav state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getReport(state: UIStateModel) {\n    return state.reportOpen;\n  }\n\n  /**\n   * Select the right sidenav state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getRightSideNav(state: UIStateModel) {\n    return state.rightSideNavOpen;\n  }\n\n  /**\n   * Select the debug sidenav state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getDebugLog(state: UIStateModel) {\n    return state.debugLogOpen;\n  }\n\n  /**\n   * Select the bottom sheet state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getBottomSheet(state: UIStateModel) {\n    return state.bottomSheetOpen;\n  }\n\n  /**\n   * Select the compare sidenav state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getCompareState(state: UIStateModel) {\n    return state.compareOpen;\n  }\n\n  /**\n   * Select the search panel state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getSearchState(state: UIStateModel) {\n    return state.searchOpen;\n  }\n\n  /**\n   * Action to open snackbar. Update the UI State by setting the\n   * snackbar state to true and text\n   */\n  @Action(OpenSnackbar)\n  openSnackbar({ getState, setState }: StateContext, { text, type }: OpenSnackbar) {\n    const state = getState();\n    setState({\n      ...state,\n      snackbar: { opened: true, text, type },\n    });\n  }\n\n  /**\n   * Action to close snackbar. Update the UI State by setting the\n   * snackbar state to false and success state\n   */\n  @Action(CloseSnackbar)\n  closeSnackbar({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      snackbar: {\n        opened: false,\n        text: '',\n        type: SnackbarType.success,\n      },\n    });\n  }\n\n  /**\n   * Action to toggle control pane by inverting the current state\n   */\n  @Action(ToggleControlPane)\n  toggleControlPane({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      controlPaneOpen: !state.controlPaneOpen,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.NAVBAR, 'Toggle Control Pane', undefined, getState().controlPaneOpen);\n  }\n\n  /**\n   * Action to open loading. Set loading to true and text to text\n   */\n  @Action(OpenLoading)\n  openLoading({ getState, setState }: StateContext, { text }: OpenLoading) {\n    const state = getState();\n    setState({\n      ...state,\n      loadingText: text,\n      loading: true,\n      error: {},\n    });\n  }\n\n  /**\n   * Action to update loading text\n   */\n  @Action(UpdateLoadingText)\n  UpdateLoadingText({ getState, setState }: StateContext, { text }: UpdateLoadingText) {\n    const state = getState();\n    setState({\n      ...state,\n      loadingText: text,\n    });\n  }\n\n  /**\n   * Action to close loading. Set loading to false and clear loading text\n   */\n  @Action(CloseLoading)\n  closeLoading({ getState, setState, dispatch }: StateContext, { text }: CloseLoading) {\n    const state = getState();\n    setState({\n      ...state,\n      loading: false,\n      loadingText: '',\n    });\n\n    dispatch(new OpenSnackbar(text ?? '', SnackbarType.success));\n  }\n\n  /**\n   * Action to update error state.\n   * Close loading and open snackbar with appropriate message and type\n   */\n  @Action(HasError)\n  hasError({ getState, setState, dispatch }: StateContext, { error }: HasError) {\n    dispatch(new ReportLog(LOG_TYPES.MSG, error.msg ?? '', LOG_ICONS.error));\n    const state = getState();\n    setState({\n      ...state,\n      error,\n      loading: false,\n      loadingText: '',\n      snackbar: {\n        opened: true,\n        text: error.msg ?? '',\n        type: SnackbarType.error,\n      },\n    });\n  }\n\n  /**\n   * Action to toggle Indent list sidebar\n   */\n  @Action(ToggleIndentList)\n  toggleIndentList({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      indentListOpen: !state.indentListOpen,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.NAVBAR, 'Toggle Indent List', undefined, getState().indentListOpen);\n  }\n\n  /**\n   * Action to toggle Report sidebar\n   */\n  @Action(ToggleReport)\n  toggleReport({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      reportOpen: !state.reportOpen,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.NAVBAR, 'Toggle Report', undefined, getState().reportOpen);\n  }\n\n  /**\n   * Action to close right side. Set Report, IL, Debug Log, Compare to false.\n   */\n  @Action(CloseRightSideNav)\n  closeRightSideNav({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      indentListOpen: false,\n      reportOpen: false,\n      debugLogOpen: false,\n      compareOpen: false,\n    });\n    this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, 'Close All Right-Sidenav Elements ', undefined, false);\n  }\n\n  /**\n   * Action to toggle debug logs sidebar\n   */\n  @Action(ToggleDebugLogs)\n  toggleDebugLogs({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      debugLogOpen: !state.debugLogOpen,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.NAVBAR, 'Toggle Debug Logs', undefined, getState().debugLogOpen);\n  }\n\n  /**\n   * Action to open bottom sheet. Accept the data (name of structure)\n   * First close the bottom sheet, incase it is open.\n   * Then dispatch new action to update bottom sheet data\n   */\n  @Action(OpenBottomSheet)\n  openBottomSheet({ getState, setState, dispatch }: StateContext, { data }: OpenBottomSheet) {\n    const state = getState();\n    dispatch(new CloseBottomSheet());\n    dispatch(new CloseBottomSheetDOI());\n    dispatch(new UpdateBottomSheetData(data)).subscribe((_unused) => {\n      setState({\n        ...state,\n        bottomSheetOpen: true,\n      });\n    });\n    dispatch(new UpdateBottomSheetInfo(data));\n  }\n\n  /**\n   * Action to open bottom sheet DOI. Accept the data (name of structure)\n   * First close the bottom sheet Info, incase it is open.\n   * Second close the bottom sheet DOI, incase it is open.\n   * Then dispatch new action to update bottom sheet data DOI\n   */\n  @Action(OpenBottomSheetDOI)\n  OpenBottomSheetDOI({ dispatch }: StateContext, { data }: OpenBottomSheetDOI) {\n    dispatch(new CloseBottomSheet());\n    dispatch(new CloseBottomSheetDOI());\n    dispatch(new UpdateBottomSheetDOI(data));\n  }\n\n  /**\n   * Action to close bottom sheet.\n   * Empty the bottom sheet data from the state\n   */\n  @Action(CloseBottomSheetDOI)\n  closeBottomSheetDOI({ dispatch }: StateContext) {\n    dispatch(new UpdateBottomSheetData({}));\n  }\n\n  /**\n   * Action to close bottom sheet.\n   * Empty the bottom sheet data from the state\n   * Set the bottom sheet open variable to false\n   */\n  @Action(CloseBottomSheet)\n  closeBottomSheet({ getState, setState, dispatch }: StateContext) {\n    dispatch(new UpdateBottomSheetData({}));\n\n    const view = this.store.selectSnapshot(TreeState.getVegaView);\n    if (Object.entries(view).length) {\n      view.signal('bimodal_text__click', {});\n    }\n\n    setState({\n      ...getState(),\n      bottomSheetOpen: false,\n    });\n  }\n\n  /**\n   * Action to open compare sidenav\n   */\n  @Action(OpenCompare)\n  openCompare({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      compareOpen: true,\n    });\n    this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, 'Open Compare', undefined, getState().compareOpen);\n  }\n\n  /**\n   * Action to close compare sidenav\n   */\n  @Action(CloseCompare)\n  closeCompare({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      compareOpen: false,\n    });\n    this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, 'Close Compare', undefined, getState().compareOpen);\n  }\n\n  @Action(OpenSearch)\n  openSearch({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      searchOpen: true,\n    });\n    this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, 'Open Search', undefined, getState().searchOpen);\n  }\n\n  @Action(CloseSearch)\n  closeSearch({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      searchOpen: false,\n    });\n    this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, 'Close Search', undefined, getState().searchOpen);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBimodal.html":{"url":"classes/UpdateBimodal.html","title":"class - UpdateBimodal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBimodal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                links\n                            \n                            \n                                    Public\n                                nodes\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodes: BMNode[], links: Link[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        BMNode[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        links\n                                                  \n                                                        \n                                                                        Link[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        links\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Link[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BMNode[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Bimodal Network'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBimodalConfig.html":{"url":"classes/UpdateBimodalConfig.html","title":"class - UpdateBimodalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBimodalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: BimodalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        BimodalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Bimodal config'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBottomSheetDOI.html":{"url":"classes/UpdateBottomSheetDOI.html","title":"class - UpdateBottomSheetDOI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBottomSheetDOI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DOI[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:97\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DOI[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DOI[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Bottom Sheet DOI'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:97\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBottomSheetData.html":{"url":"classes/UpdateBottomSheetData.html","title":"class - UpdateBottomSheetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBottomSheetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Bottom Sheet Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBottomSheetInfo.html":{"url":"classes/UpdateBottomSheetInfo.html","title":"class - UpdateBottomSheetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBottomSheetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: OpenBottomSheetData)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        OpenBottomSheetData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpenBottomSheetData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Bottom Sheet Info'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:92\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateConfig.html":{"url":"classes/UpdateConfig.html","title":"class - UpdateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: SheetConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SheetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SheetConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Sheet Config'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGetFromCache.html":{"url":"classes/UpdateGetFromCache.html","title":"class - UpdateGetFromCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGetFromCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cache\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:102\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Get From Cache'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:102\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGraphWidth.html":{"url":"classes/UpdateGraphWidth.html","title":"class - UpdateGraphWidth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGraphWidth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(width: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE WIDTH] Update Graph Width'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLinksData.html":{"url":"classes/UpdateLinksData.html","title":"class - UpdateLinksData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLinksData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                allOrgans\n                            \n                            \n                                    Public\n                                    Optional\n                                AS_AS\n                            \n                            \n                                    Public\n                                    Optional\n                                AS_AS_organWise\n                            \n                            \n                                    Public\n                                AS_CT\n                            \n                            \n                                    Public\n                                AS_CT_organWise\n                            \n                            \n                                    Public\n                                CT_B\n                            \n                            \n                                    Public\n                                CT_B_organWise\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(AS_CT: number, CT_B: number, AS_CT_organWise: Record, CT_B_organWise: Record, AS_AS?: number, AS_AS_organWise?: Record, allOrgans?: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        AS_CT\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CT_B\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        AS_CT_organWise\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CT_B_organWise\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        AS_AS\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        AS_AS_organWise\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        allOrgans\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        allOrgans\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        AS_AS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        AS_AS_organWise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        AS_CT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        AS_CT_organWise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        CT_B\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        CT_B_organWise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Links data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLoadingText.html":{"url":"classes/UpdateLoadingText.html","title":"class - UpdateLoadingText","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLoadingText\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Loading Text'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMode.html":{"url":"classes/UpdateMode.html","title":"class - UpdateMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mode\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mode: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Mode'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOmapConfig.html":{"url":"classes/UpdateOmapConfig.html","title":"class - UpdateOmapConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOmapConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OmapConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OmapConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OmapConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] OMAP Config'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlaygroundData.html":{"url":"classes/UpdatePlaygroundData.html","title":"class - UpdatePlaygroundData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlaygroundData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: string[][])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    string[][]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Playground Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:82\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePrevSheet.html":{"url":"classes/UpdatePrevSheet.html","title":"class - UpdatePrevSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePrevSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Previous Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReport.html":{"url":"classes/UpdateReport.html","title":"class - UpdateReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reportData\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reportData: Report)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reportData\n                                                  \n                                                        \n                                                                        Report\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reportData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Report\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Update] Report Statistics'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSelectedOrgansBeforeFilter.html":{"url":"classes/UpdateSelectedOrgansBeforeFilter.html","title":"class - UpdateSelectedOrgansBeforeFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSelectedOrgansBeforeFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                organsList\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organsList: SelectedOrganBeforeFilter[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:111\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organsList\n                                                  \n                                                        \n                                                                    SelectedOrganBeforeFilter[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        organsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SelectedOrganBeforeFilter[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Selected Organs before Filtering'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:111\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSheet.html":{"url":"classes/UpdateSheet.html","title":"class - UpdateSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: Sheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVegaSpec.html":{"url":"classes/UpdateVegaSpec.html","title":"class - UpdateVegaSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVegaSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                spec\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spec: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Vega Spec'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVegaView.html":{"url":"classes/UpdateVegaView.html","title":"class - UpdateVegaView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVegaView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Vega View'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/upload/upload.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upload\n            \n\n\n\n            \n                styleUrls\n                ./upload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                formGroup\n                            \n                            \n                                formValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                atLeastOnePhoneRequired\n                            \n                            \n                                checkLinkFormat\n                            \n                            \n                                submitData\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                uploadForm\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/upload/upload.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        uploadForm\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/upload/upload.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        atLeastOnePhoneRequired\n                        \n                    \n                \n            \n            \n                \natLeastOnePhoneRequired(group: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLinkFormat\n                        \n                    \n                \n            \n            \n                \ncheckLinkFormat(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { sheetID: any; gid: any; csvUrl: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitData\n                        \n                    \n                \n            \n            \n                \nsubmitData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(fileFormDataEvent: FormData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileFormDataEvent\n                                            \n                                                            FormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formValid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { UploadForm } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.scss'],\n})\nexport class UploadComponent implements OnInit {\n  @Output() uploadForm = new EventEmitter();\n\n  formGroup!: FormGroup;\n  formValid = true;\n\n  constructor(public fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.formGroup = new FormGroup(\n      {\n        link: new FormControl('', [\n          Validators.required,\n          Validators.compose([Validators.pattern(/\\/([\\w-_]{15,})\\/(.*?gid=(\\d+))?|\\w*csv$/)]) as ValidatorFn,\n        ]),\n        formData: new FormControl(''),\n        fileName: new FormControl(''),\n      },\n      { validators: [this.atLeastOnePhoneRequired as ValidatorFn] },\n    );\n\n    this.formGroup.valueChanges.subscribe((x) => {\n      if (!(x.fileName === null || x.fileName === '')) {\n        this.formGroup.get('link')?.clearValidators();\n        this.formGroup.get('link')?.updateValueAndValidity({ emitEvent: false });\n      }\n      this.formValid = this.formGroup.status === 'VALID';\n    });\n  }\n\n  atLeastOnePhoneRequired(group: FormGroup): { [s: string]: boolean } | null {\n    if (group) {\n      if (group.controls['link'].value || group.controls['fileName'].value) {\n        return null;\n      }\n    }\n    return { error: true };\n  }\n\n  upload(fileFormDataEvent: FormData) {\n    this.formGroup.patchValue({ formData: fileFormDataEvent });\n  }\n\n  submitData() {\n    this.formValid = this.formGroup.status === 'VALID';\n    if (this.formGroup.status !== 'VALID') {\n      return;\n    }\n    const sheet = this.formGroup.value;\n    const sheetId = this.checkLinkFormat(sheet.link)?.sheetID ?? '';\n\n    const data: UploadForm = {\n      link: sheet.link,\n      formData: sheet.formData,\n      fileName: sheet.fileName,\n      sheetId,\n      gid: this.checkLinkFormat(sheet.link)?.gid ?? '',\n      csvUrl: this.checkLinkFormat(sheet.link)?.csvUrl ?? '',\n    };\n    // ga call handled in the playground module component\n\n    this.uploadForm.emit(data);\n  }\n\n  checkLinkFormat(url: string) {\n    if (url.startsWith('https://docs.google.com/spreadsheets/d/')) {\n      const splitUrl = url.split('/');\n      if (splitUrl.length === 7) {\n        return {\n          sheetID: splitUrl[5],\n          gid: splitUrl[6].split('=')[1],\n          csvUrl: '',\n        };\n      }\n    }\n\n    return {\n      sheetID: '0',\n      gid: '0',\n      csvUrl: url,\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Instructions\n      \n    \n\n    \n      \n        \n          Through this feature, you can upload your own data (ASCT+B to ASCT+B, ASCT+B to experimental data, or ASCT+B\n          to OMAP) by pasting the Browser URL address for the Google sheet of your data in the fields mentioned below.\n        \n        \n          In order to successfully link your sheet, make sure the sheet has public access by selecting Share --> Get\n          link --> selecting \"Anyone with the link\" option and \"Viewer\" privileges, select \"Done\" to save.\n        \n\n        \n          Please make sure your data follows the appropriate data format:\n          \n            \n              ASCT+B Table template\n            \n            \n              OMAP compare template\n            \n          \n        \n      \n    \n    \n    \n      New\n      Organ Mapping Antibody Panel files (CSV) are now supported!\n    \n  \n\n\n\n  * required field\n\n  \n    \n      Data\n      * &nbsp;\n       (Add a link to data or upload a CSV/XLSX file)\n    \n\n    \n      \n        \n          \n            Google Sheet (or CSV) Link\n            \n            Enter Browser URL address for your public Google Sheet (or CSV)\n          \n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n    \n  \n\n\n\n  \n    \n      Submit\n    \n  \n\n\n    \n\n    \n                \n                    ./upload.component.scss\n                \n                :host {\n  border-style: solid;\n  border-width: 0.03rem;\n  border: #e4e4e4;\n  width: 100%;\n  background-color: white;\n  margin-left: 1rem;\n  font-size: 0.85rem;\n\n  a {\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  .link-input-field {\n    width: 100%;\n  }\n\n  input[type='color'] {\n    border: none;\n    outline: none;\n  }\n\n  ::ng-deep input[type='color']::-webkit-color-swatch-wrapper {\n    padding: 0;\n  }\n\n  input[type='color']::-webkit-color-swatch {\n    border: none;\n  }\n\n  .content {\n    flex: 1 1;\n    overflow: auto;\n  }\n\n  .mat-expansion-panel:not([class*='mat-elevation-z']) {\n    box-shadow: none;\n  }\n\n  .mat-expansion-panel-header:not(.compare) {\n    background: rgb(228, 228, 228) !important;\n  }\n\n  ::ng-deep mat-expansion-panel-header {\n    background: rgb(228, 228, 228);\n  }\n\n  .mat-expansion-panel-header:hover {\n    opacity: 0.85 !important;\n  }\n\n  .instruction-title {\n    font-weight: 600;\n    font-size: 10pt;\n  }\n\n  .required-field-disclaimer {\n    font-size: 0.625rem;\n    color: #f44336;\n    padding-left: 1.5rem;\n  }\n\n  .title-sheet-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .title-sheet-sub-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex: 0.5;\n    font-size: medium;\n  }\n\n  .flex-container {\n    flex: 0.5;\n    background-color: white;\n    mat-hint {\n      color: #757575;\n      margin-left: -0.8rem;\n    }\n\n    ::ng-deep .mdc-text-field--filled {\n      background-color: white;\n    }\n  }\n\n  .file-upload {\n    color: #757575;\n  }\n\n  .sheet-link-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-left: 1rem;\n  }\n\n  .button-container {\n    margin-left: 1.4rem;\n  }\n\n  .submit-button {\n    border-radius: 0.5rem !important;\n  }\n\n  .submit-button-color {\n    background-color: #f44336 !important;\n  }\n\n  .required {\n    color: red;\n    display: inline;\n  }\n\n  .data-upload-title {\n    margin-top: 1.5rem !important;\n    color: #444a65;\n    padding-left: 1rem;\n\n    .data-disclaimer-text {\n      font-size: 0.625rem;\n      color: #757575;\n    }\n  }\n\n  .optional-info {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    grid-gap: 0.625rem;\n  }\n\n  .rounded-blob {\n    align-items: center;\n    height: 1.5rem;\n    width: 2.5rem;\n    background-color: #c2cae5;\n    border-radius: 6.25rem;\n    text-align: center;\n  }\n\n  .footer {\n    height: 3rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Instructions                                      Through this feature, you can upload your own data (ASCT+B to ASCT+B, ASCT+B to experimental data, or ASCT+B          to OMAP) by pasting the Browser URL address for the Google sheet of your data in the fields mentioned below.                          In order to successfully link your sheet, make sure the sheet has public access by selecting Share --> Get          link --> selecting \"Anyone with the link\" option and \"Viewer\" privileges, select \"Done\" to save.                          Please make sure your data follows the appropriate data format:                                    ASCT+B Table template                                      OMAP compare template                                                      New      Organ Mapping Antibody Panel files (CSV) are now supported!        * required field            Data      *         (Add a link to data or upload a CSV/XLSX file)                                            Google Sheet (or CSV) Link                        Enter Browser URL address for your public Google Sheet (or CSV)                                                                                                          Submit      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadForm.html":{"url":"interfaces/UploadForm.html","title":"interface - UploadForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            csvUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            formData\n                                        \n                                \n                                \n                                        \n                                            gid\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            sheetId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        csvUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csvUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formData:         FormData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadModule.html":{"url":"modules/UploadModule.html","title":"module - UploadModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_imports\n\n\n\ncluster_UploadModule_exports\n\n\n\ncluster_UploadModule_declarations\n\n\n\n\nUploadComponent\n\nUploadComponent\n\n\n\nUploadModule\n\nUploadModule\n\nUploadModule -->\n\nUploadComponent->UploadModule\n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nUploadModule->UploadComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nUploadModule -->\n\nFileUploadModule->UploadModule\n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nUploadModule -->\n\nSidenavHeaderModule->UploadModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nUploadModule -->\n\nSidenavModule->UploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/upload/upload.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UploadComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileUploadModule\n                        \n                        \n                            SidenavHeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UploadComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadComponent } from './upload.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SidenavModule } from '../sidenav/sidenav.module';\nimport { SidenavHeaderModule } from '../sidenav-header/sidenav-header.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FileUploadModule } from '../file-upload/file-upload.module';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [UploadComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SidenavModule,\n    SidenavHeaderModule,\n    MatButtonModule,\n    FileUploadModule,\n    MatCardModule,\n  ],\n  exports: [UploadComponent],\n})\nexport class UploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VegaService.html":{"url":"injectables/VegaService.html","title":"injectable - VegaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VegaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/vega.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                bm\n                            \n                            \n                                    Public\n                                    Readonly\n                                ga\n                            \n                            \n                                sheetConfig\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSignalListeners\n                            \n                            \n                                makeBimodal\n                            \n                            \n                                    Public\n                                makeNodeInfoString\n                            \n                            \n                                makeVegaConfig\n                            \n                            \n                                    Async\n                                renderGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, bm: BimodalService, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/vega.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bm\n                                                  \n                                                        \n                                                                        BimodalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSignalListeners\n                        \n                    \n                \n            \n            \n                \naddSignalListeners(view: View)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/vega.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Function to add various event listeners to the visualization\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        View\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega view\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodal\n                        \n                    \n                \n            \n            \n                \nmakeBimodal(view: View)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/vega.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Function to create the biomodal network\nUses the data, tree data and the various configurations\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        View\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega view\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        makeNodeInfoString\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeNodeInfoString(node: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/vega.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                node\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeVegaConfig\n                        \n                    \n                \n            \n            \n                \nmakeVegaConfig(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig, _multiParentLinksData?: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/vega.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Function to creat the vega spec\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    selected organ sheet\n\n                                            \n                                        \n                                        \n                                                treeData\n                                            \n                                                            TNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    partonomy/vega tree data\n\n                                            \n                                        \n                                        \n                                                sheetConfig\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    sheet configurations\n\n                                            \n                                        \n                                        \n                                                _multiParentLinksData\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Spec\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        renderGraph\n                        \n                    \n                \n            \n            \n                \n                        \n                    renderGraph(config: Spec)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/vega.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Function to create the partonomy tree\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Spec\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega spec\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        bm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/vega.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/vega.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SheetConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/vega.service.ts:30\n                        \n                    \n\n            \n                \n                    Sheet configuration to be applied while building\nthe tree and the bimodal network\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/vega.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Spec, View, parse } from 'vega';\nimport vegaTooltip from 'vega-tooltip';\nimport { ReportLog } from '../../actions/logs.actions';\nimport { UpdateLinksData, UpdateVegaView } from '../../actions/tree.actions';\nimport { CloseLoading, HasError, OpenBottomSheet, OpenBottomSheetDOI } from '../../actions/ui.actions';\nimport { GaAction, GaCategory, GaNodeInfo } from '../../models/ga.model';\nimport { LOG_ICONS, LOG_TYPES } from '../../models/logs.model';\nimport { Error } from '../../models/response.model';\nimport { DOI, Sheet, SheetConfig } from '../../models/sheet.model';\nimport { TNode } from '../../models/tree.model';\nimport { OpenBottomSheetData } from '../../models/ui.model';\nimport { BimodalService } from './bimodal.service';\nimport { Data } from './spec/data';\nimport { Legends } from './spec/legends';\nimport { Marks } from './spec/marks';\nimport { Scales } from './spec/scales';\nimport { Signals } from './spec/signals';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VegaService {\n  /**\n   * Sheet configuration to be applied while building\n   * the tree and the bimodal network\n   */\n  sheetConfig!: SheetConfig;\n\n  constructor(\n    public readonly store: Store,\n    public readonly bm: BimodalService,\n    public readonly ga: GoogleAnalyticsService,\n  ) {}\n\n  /**\n   * Function to create the partonomy tree\n   *\n   * @param config vega spec\n   */\n  async renderGraph(config: Spec) {\n    try {\n      const runtime = parse(config, {});\n      const treeView = new View(runtime).renderer('svg').initialize('#vis').hover();\n\n      vegaTooltip(treeView, { theme: 'custom' });\n      treeView.runAsync();\n\n      this.addSignalListeners(treeView);\n      this.store.dispatch(new CloseLoading('Visualization Rendered'));\n      this.store.dispatch(new UpdateLinksData(0, 0, {}, {}, treeView.data('links').length, {}));\n      this.makeBimodal(treeView);\n    } catch (error) {\n      console.log(error);\n      const error2 = error as { name: string; status: number };\n      const err: Error = {\n        msg: `${error2.name} (Status: ${error2.status})`,\n        status: error2.status,\n        hasError: true,\n      };\n      this.store.dispatch(new ReportLog(LOG_TYPES.MSG, 'Failed to create Tree', LOG_ICONS.error));\n      this.store.dispatch(new HasError(err));\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public makeNodeInfoString(node: any) {\n    const nodeInfo: GaNodeInfo = {\n      name: node.name,\n      groupName: node.groupName,\n      oid: node.ontologyId,\n      type: node.type,\n      x: node.x,\n      y: node.y,\n    };\n    return JSON.stringify(nodeInfo);\n  }\n\n  /**\n   * Function to add various event listeners to the visualization\n   *\n   * @param view vega view\n   */\n  addSignalListeners(view: View) {\n    // node name click event to open bottom sheet\n    view.addSignalListener('bimodal_text__click', (_signal: unknown, node: OpenBottomSheetData) => {\n      if (node && Object.entries(node).length) {\n        this.store.dispatch(new OpenBottomSheet(node));\n        this.ga.event(GaAction.CLICK, GaCategory.GRAPH, `Clicked a node label: ${this.makeNodeInfoString(node)}`);\n      }\n    });\n\n    // node click listener to emit ga event\n    view.addSignalListener('node__click', (_signal: string, nodeId: unknown) => {\n      if (nodeId != null) {\n        this.ga.event(GaAction.CLICK, GaCategory.GRAPH, 'Selected (clicked) a node', 0);\n      } else {\n        this.ga.event(GaAction.CLICK, GaCategory.GRAPH, 'Deselected a node');\n      }\n    });\n\n    // path click event to show doi/references\n    view.addSignalListener('path__click', (_signal: string, text: DOI[]) => {\n      if (text.length) {\n        this.store.dispatch(new OpenBottomSheetDOI(text));\n      }\n    });\n  }\n\n  /**\n   * Function to create the biomodal network\n   * Uses the data, tree data and the various configurations\n   *\n   * @param view vega view\n   */\n  makeBimodal(view: View) {\n    this.store.dispatch(new UpdateVegaView(view)).subscribe((states) => {\n      const data = states.sheetState.data;\n      const treeData = states.treeState.treeData;\n      const bimodalConfig = states.treeState.bimodal.config;\n      const sheetConfig = states.sheetState.sheetConfig;\n      const omapConfig = states.treeState.omapConfig;\n      const filteredProtiens = states.sheetState.filteredProtiens;\n\n      if (data.length) {\n        this.bm.makeBimodalData(data, treeData, bimodalConfig, false, sheetConfig, omapConfig, filteredProtiens);\n      }\n    });\n  }\n\n  /**\n   * Function to creat the vega spec\n   *\n   * @param currentSheet selected organ sheet\n   * @param treeData partonomy/vega tree data\n   * @param sheetConfig sheet configurations\n   * @param multiParentLinksData depricated\n   */\n  makeVegaConfig(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig, _multiParentLinksData?: []) {\n    const config: Spec = {\n      $schema: 'https://vega.github.io/schema/vega/v5.json',\n      autosize: 'pad',\n      padding: {\n        right: 0,\n        top: 20,\n        bottom: 20,\n        left: 30,\n      },\n      signals: Signals.create(sheetConfig),\n      data: Data.create(currentSheet, treeData, sheetConfig),\n      scales: Scales.create(),\n      legends: Legends.create(),\n      marks: Marks.create(),\n    };\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Version.html":{"url":"interfaces/Version.html","title":"interface - Version","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Version\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                        \n                                            folder\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        folder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        folder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VersionDetail.html":{"url":"interfaces/VersionDetail.html","title":"interface - VersionDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VersionDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            as\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            csvUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ct\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hraVersion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sheetId\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                                \n                                        \n                                            viewValue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            xlsx\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        as\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        as:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        csvUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csvUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ct\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ct:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hraVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hraVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xlsx\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xlsx:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisControlsComponent.html":{"url":"components/VisControlsComponent.html","title":"component - VisControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/controls/vis-controls.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-vis-controls\n            \n\n\n\n            \n                styleUrls\n                ./vis-controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./vis-controls.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ga\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeBimodalDistanceX\n                            \n                            \n                                changeBimodalDistanceY\n                            \n                            \n                                changeHeight\n                            \n                            \n                                changeShowAS\n                            \n                            \n                                changeShowOntology\n                            \n                            \n                                changeWidth\n                            \n                            \n                                exportControls\n                            \n                            \n                                showDiscrepencyId\n                            \n                            \n                                showDiscrepencyLabel\n                            \n                            \n                                showDuplicateId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                currentSheet\n                            \n                            \n                                error\n                            \n                            \n                                selectedOrgans\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updatedConfig\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/controls/vis-controls.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         SheetConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/vis-controls.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentSheet\n                    \n                \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/vis-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/vis-controls.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedOrgans\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/vis-controls.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updatedConfig\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/vis-controls.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeBimodalDistanceX\n                        \n                    \n                \n            \n            \n                \nchangeBimodalDistanceX()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeBimodalDistanceY\n                        \n                    \n                \n            \n            \n                \nchangeBimodalDistanceY()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeHeight\n                        \n                    \n                \n            \n            \n                \nchangeHeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeShowAS\n                        \n                    \n                \n            \n            \n                \nchangeShowAS()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeShowOntology\n                        \n                    \n                \n            \n            \n                \nchangeShowOntology()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeWidth\n                        \n                    \n                \n            \n            \n                \nchangeWidth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportControls\n                        \n                    \n                \n            \n            \n                \nexportControls(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDiscrepencyId\n                        \n                    \n                \n            \n            \n                \nshowDiscrepencyId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDiscrepencyLabel\n                        \n                    \n                \n            \n            \n                \nshowDiscrepencyLabel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDuplicateId\n                        \n                    \n                \n            \n            \n                \nshowDuplicateId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/controls/vis-controls.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { Error } from '../../models/response.model';\nimport { Sheet, SheetConfig } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-vis-controls',\n  templateUrl: './vis-controls.component.html',\n  styleUrls: ['./vis-controls.component.scss'],\n})\nexport class VisControlsComponent {\n  @Input() config!: SheetConfig;\n  @Input() error!: Error;\n  @Input() currentSheet!: Sheet;\n  @Input() selectedOrgans!: string[];\n\n  @Output() updatedConfig = new EventEmitter();\n  constructor(public ga: GoogleAnalyticsService) {}\n\n  changeWidth() {\n    this.updatedConfig.emit({\n      property: 'width',\n      config: this.config,\n    });\n    this.ga.event(GaAction.SLIDE, GaCategory.CONTROLS, 'Width Slider', this.config.width);\n  }\n\n  changeHeight() {\n    this.updatedConfig.emit({\n      property: 'height',\n      config: this.config,\n    });\n    this.ga.event(GaAction.SLIDE, GaCategory.CONTROLS, 'Height Slider', this.config.height);\n  }\n\n  changeShowOntology() {\n    this.config.show_ontology = !this.config.show_ontology;\n    this.updatedConfig.emit({\n      property: 'show-ontology',\n      config: this.config,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.CONTROLS, 'Toggle Ontology', +this.config.show_ontology);\n  }\n\n  showDiscrepencyLabel() {\n    this.config.discrepencyLabel = !this.config.discrepencyLabel;\n    this.config.discrepencyId = false;\n    this.config.duplicateId = false;\n    this.updatedConfig.emit({\n      property: 'show-discrepency-label',\n      config: this.config,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.CONTROLS, 'Toggle Discrepency Label', +this.config.discrepencyLabel);\n  }\n\n  showDiscrepencyId() {\n    this.config.discrepencyId = !this.config.discrepencyId;\n    this.config.discrepencyLabel = false;\n    this.config.duplicateId = false;\n    this.updatedConfig.emit({\n      property: 'show-discrepency-id',\n      config: this.config,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.CONTROLS, 'Toggle Discrepency ID', +this.config.discrepencyLabel);\n  }\n\n  showDuplicateId() {\n    this.config.duplicateId = !this.config.duplicateId;\n    this.config.discrepencyLabel = false;\n    this.config.discrepencyId = false;\n    this.updatedConfig.emit({\n      property: 'show-duplicate-id',\n      config: this.config,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.CONTROLS, 'Toggle Duplicate ID', +this.config.duplicateId);\n  }\n\n  changeBimodalDistanceX() {\n    this.updatedConfig.emit({\n      property: 'bm-x',\n      config: this.config,\n    });\n    this.ga.event(GaAction.SLIDE, GaCategory.CONTROLS, 'Bimodal Distance X Slider', this.config.bimodal_distance_x);\n  }\n\n  changeBimodalDistanceY() {\n    this.updatedConfig.emit({\n      property: 'bm-y',\n      config: this.config,\n    });\n    this.ga.event(GaAction.SLIDE, GaCategory.CONTROLS, 'Bimodal Distance Y Slider', this.config.bimodal_distance_y);\n  }\n\n  changeShowAS() {\n    this.updatedConfig.emit({\n      property: 'show-as',\n      config: this.config,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.CONTROLS, 'Toggle AS Visibility', +(this.config.show_all_AS ?? false));\n  }\n\n  exportControls(event: Event) {\n    event.stopPropagation();\n    const sJson = JSON.stringify(this.config);\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/json;charset=UTF-8,' + encodeURIComponent(sJson));\n    element.setAttribute('download', 'asct-b-graph-config.json');\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n\n    this.ga.event(GaAction.CLICK, GaCategory.CONTROLS, 'Export Vis Controls', undefined);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n         Controls \n      \n    \n    \n      \n        get_app\n      \n    \n  \n\n   8)\"\n  >\n    \n      Show all AS\n    \n  \n\n  \n    \n      Ontology IDs\n    \n  \n\n  \n    \n      \n        Tree Width\n      \n      \n        \n      \n      \n    \n    \n      \n        \n      \n    \n  \n\n  \n    \n      \n        Tree Height\n      \n      \n        \n          \n      \n      \n    \n    \n      \n        \n    \n  \n\n  \n    \n      \n        Bimodal Distance X\n      \n      \n        \n          \n        \n      \n      \n    \n    \n      \n        \n    \n  \n\n  \n    \n      \n        Bimodal Distance Y\n      \n      \n        \n          \n        \n      \n      \n    \n    \n      \n        \n      \n    \n  \n\n  \n    \n      Label mismatch\n    \n  \n\n  \n    \n      ID Missing\n    \n  \n\n  \n    \n      ID Duplicates\n    \n  \n\n\n    \n\n    \n                \n                    ./vis-controls.component.scss\n                \n                @import './../../../assets/stylesheets/_colors.scss';\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n  box-shadow: none;\n}\n\n.mat-expansion-panel-header:not(.compare) {\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header {\n  transition: all 0.3s;\n  background-color: $secondary !important;\n  padding-left: 0.9375rem !important;\n  padding-right: 0.9375rem !important;\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header:hover {\n  background-color: darken($color: $secondary, $amount: 8%) !important;\n}\n\n.numberInput {\n  background-color: #fafafa !important;\n  border-radius: 0.25rem !important;\n  font: inherit;\n  background: transparent;\n  color: currentColor;\n  border: none;\n  outline: none;\n  padding: 0;\n  margin: 0;\n  width: 500%;\n  max-width: 100%;\n  vertical-align: bottom;\n  text-align: inherit;\n}\n\n.controls .mat-expansion-panel-header-description {\n  justify-content: flex-end !important;\n  align-items: center;\n  margin-right: 0 !important;\n}\n\n.controls .mat-expansion-panel-header-description {\n  flex-basis: 0;\n}\n\n.controls .mat-expansion-panel-header-title {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n::ng-deep .mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon {\n  fill: none !important;\n}\n\n::ng-deep .mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon {\n  fill: none !important;\n}\n\n.mat-mdc-slider .mdc-slider__track--active {\n  height: 0.125rem;\n}\n.mat-mdc-slider .mdc-slider__track--active {\n  height: 0.125rem;\n}\n\nmat-slider {\n  --mdc-slider-inactive-track-height: 0.18rem;\n  --mdc-slider-active-track-height: 0.18rem;\n  ::ng-deep .mdc-slider__thumb-knob {\n    border-width: 0.438rem;\n    height: 0.813rem;\n    width: 0.813rem;\n  }\n}\n\n::ng-deep .mat-mdc-slide-toggle {\n  --mdc-switch-unselected-handle-color: #ffffff;\n  --mdc-switch-unselected-focus-handle-color: #ffffff;\n  --mdc-switch-unselected-hover-handle-color: #ffffff;\n  --mdc-switch-unselected-track-color: #989898;\n  --mdc-switch-unselected-hover-track-color: #989898;\n  --mdc-switch-unselected-focus-track-color: #989898;\n}\n\n.vis-controls {\n  font-size: 0.9rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Controls                             get_app               8)\"  >          Show all AS                  Ontology IDs                          Tree Width                                                                                      Tree Height                                                                                          Bimodal Distance X                                                                                                  Bimodal Distance Y                                                                                                Label mismatch                  ID Missing                  ID Duplicates      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BM_TYPE   (src/.../sheet.model.ts)\n                        \n                        \n                            GaAction   (src/.../ga.model.ts)\n                        \n                        \n                            GaCategory   (src/.../ga.model.ts)\n                        \n                        \n                            LOG_ICONS   (src/.../logs.model.ts)\n                        \n                        \n                            LOG_TYPES   (src/.../logs.model.ts)\n                        \n                        \n                            NODE_TYPE   (src/.../tree.model.ts)\n                        \n                        \n                            PROTEIN_PRESENCE   (src/.../sheet.model.ts)\n                        \n                        \n                            SnackbarType   (src/.../response.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/sheet.model.ts\n    \n        \n            \n                \n                    \n                        \n                        BM_TYPE\n                    \n                \n                        \n                            \n                                 G\n                            \n                        \n                        \n                            \n                                Value : gene\n                            \n                        \n                        \n                            \n                                 P\n                            \n                        \n                        \n                            \n                                Value : protein\n                            \n                        \n                        \n                            \n                                 BL\n                            \n                        \n                        \n                            \n                                Value : lipids\n                            \n                        \n                        \n                            \n                                 BM\n                            \n                        \n                        \n                            \n                                Value : metabolites\n                            \n                        \n                        \n                            \n                                 BF\n                            \n                        \n                        \n                            \n                                Value : proteoforms\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PROTEIN_PRESENCE\n                    \n                \n                        \n                            \n                                 POS\n                            \n                        \n                        \n                            \n                                Value : Positive\n                            \n                        \n                        \n                            \n                                 NEG\n                            \n                        \n                        \n                            \n                                Value : Negative\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : Unknown\n                            \n                        \n                        \n                            \n                                 INTERMEDIATE\n                            \n                        \n                        \n                            \n                                Value : Intermediate\n                            \n                        \n            \n        \n\n    src/app/models/ga.model.ts\n    \n        \n            \n                \n                    \n                        \n                        GaAction\n                    \n                \n                        \n                            \n                                 INPUT\n                            \n                        \n                        \n                            \n                                Value : input\n                            \n                        \n                        \n                            \n                                 TOGGLE\n                            \n                        \n                        \n                            \n                                Value : toggle\n                            \n                        \n                        \n                            \n                                 SLIDE\n                            \n                        \n                        \n                            \n                                Value : slide\n                            \n                        \n                        \n                            \n                                 CLICK\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n                        \n                            \n                                 NAV\n                            \n                        \n                        \n                            \n                                Value : nav\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GaCategory\n                    \n                \n                        \n                            \n                                 HOME\n                            \n                        \n                        \n                            \n                                Value : home\n                            \n                        \n                        \n                            \n                                 FOOTER\n                            \n                        \n                        \n                            \n                                Value : footer\n                            \n                        \n                        \n                            \n                                 DOCS\n                            \n                        \n                        \n                            \n                                Value : docs\n                            \n                        \n                        \n                            \n                                 REPORT\n                            \n                        \n                        \n                            \n                                Value : report\n                            \n                        \n                        \n                            \n                                 NAVBAR\n                            \n                        \n                        \n                            \n                                Value : navbar\n                            \n                        \n                        \n                            \n                                 PLAYGROUND\n                            \n                        \n                        \n                            \n                                Value : playground\n                            \n                        \n                        \n                            \n                                 GRAPH\n                            \n                        \n                        \n                            \n                                Value : graph\n                            \n                        \n                        \n                            \n                                 COMPARE\n                            \n                        \n                        \n                            \n                                Value : compare\n                            \n                        \n                        \n                            \n                                 CONTROLS\n                            \n                        \n                        \n                            \n                                Value : controls\n                            \n                        \n                        \n                            \n                                 COMPARISON\n                            \n                        \n                        \n                            \n                                Value : comparison\n                            \n                        \n            \n        \n\n    src/app/models/logs.model.ts\n    \n        \n            \n                \n                    \n                        \n                        LOG_ICONS\n                    \n                \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : cancel\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : check_circle\n                            \n                        \n                        \n                            \n                                 file\n                            \n                        \n                        \n                            \n                                Value : next_plan\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LOG_TYPES\n                    \n                \n                        \n                            \n                                 MSG\n                            \n                        \n                        \n                            \n                                Value : MSG\n                            \n                        \n                        \n                            \n                                 NO_OUT_LINKS\n                            \n                        \n                        \n                            \n                                Value : NO_OUT_LINKS\n                            \n                        \n                        \n                            \n                                 NO_IN_LINKS\n                            \n                        \n                        \n                            \n                                Value : NO_IN_LINKS\n                            \n                        \n                        \n                            \n                                 MULTI_IN_LINKS\n                            \n                        \n                        \n                            \n                                Value : MULTI_IN_LINKS\n                            \n                        \n                        \n                            \n                                 SELF_LINKS\n                            \n                        \n                        \n                            \n                                Value : SELF_LINKS\n                            \n                        \n            \n        \n\n    src/app/models/tree.model.ts\n    \n        \n            \n                \n                    \n                        \n                        NODE_TYPE\n                    \n                \n                        \n                            \n                                 AS\n                            \n                        \n                        \n                            \n                                Value : AS\n                            \n                        \n                        \n                            \n                                 BM\n                            \n                        \n                        \n                            \n                                Value : BM\n                            \n                        \n                        \n                            \n                                 R\n                            \n                        \n                        \n                            \n                                Value : root\n                            \n                        \n            \n        \n\n    src/app/models/response.model.ts\n    \n        \n            \n                \n                    \n                        \n                        SnackbarType\n                    \n                \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getAssetsURL   (src/.../url.ts)\n                        \n                        \n                            getFoundIndex   (src/.../tree.functions.ts)\n                        \n                        \n                            initCommands   (src/.../analytics.module.ts)\n                        \n                        \n                            initializeApp   (src/.../app.module.ts)\n                        \n                        \n                            makeAS   (src/.../tree.functions.ts)\n                        \n                        \n                            makeBioMarkers   (src/.../tree.functions.ts)\n                        \n                        \n                            makeCellTypes   (src/.../tree.functions.ts)\n                        \n                        \n                            toAttributes   (src/.../analytics.module.ts)\n                        \n                        \n                            trackMousePosition   (src/.../mouse-position-tracker.module.ts)\n                        \n                        \n                            validateWidth   (src/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/static/url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAssetsURL\n                        \n                    \n                \n            \n            \n                \ngetAssetsURL(dataVersion: string, currentSheet: Sheet)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataVersion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/modules/tree/tree.functions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getFoundIndex\n                        \n                    \n                \n            \n            \n                \ngetFoundIndex(str: Structure, typeData, isForReport: boolean, row: Row, isBiomarker, isReportNotOrganWise)\n                \n            \n\n\n\n\n            \n                \n                        Function to compute or find the index of the given object in the given array.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            Structure\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nStructure of the object\n\n\n                                            \n                                        \n                                        \n                                                typeData\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nArray of structures to search in Anatomical Structures or Cell Types or Biomarkers\n\n\n                                            \n                                        \n                                        \n                                                isForReport\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nFlag to indicate if the object is for report or not\n\n\n                                            \n                                        \n                                        \n                                                row\n                                            \n                                                            Row\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nRow of the sheet\n\n\n                                            \n                                        \n                                        \n                                                isBiomarker\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isReportNotOrganWise\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \nIndex of the object in the array\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeAS\n                        \n                    \n                \n            \n            \n                \nmakeAS(data, isForReport, isReportNotOrganWise)\n                \n            \n\n\n\n\n            \n                \n                        Function to compute the Anatomical Structures from the given Data Table.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSheet data\n\n\n                                            \n                                        \n                                        \n                                                isForReport\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isReportNotOrganWise\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AS[]\n\n                        \n                            \n                                \nArray of anatomical structures\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBioMarkers\n                        \n                    \n                \n            \n            \n                \nmakeBioMarkers(data, type?: string, isForReport, isReportNotOrganWise)\n                \n            \n\n\n\n\n            \n                \n                        Function to compute the Cell Types from the given Data Table.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSheet data\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isForReport\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isReportNotOrganWise\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         B[]\n\n                        \n                            \n                                \nArray of biomarkers\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeCellTypes\n                        \n                    \n                \n            \n            \n                \nmakeCellTypes(data, isForReport, isReportNotOrganWise)\n                \n            \n\n\n\n\n            \n                \n                        Function to compute the Cell Types from the given Data Table.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSheet data\n\n\n                                            \n                                        \n                                        \n                                                isForReport\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isReportNotOrganWise\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CT[]\n\n                        \n                            \n                                \nArray of cell types\n\n\n                            \n                \n            \n        \n    \n    src/app/services/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initCommands\n                        \n                    \n                \n            \n            \n                \ninitCommands(options: AnalyticsOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AnalyticsOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     IGoogleAnalyticsCommand[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAttributes\n                        \n                    \n                \n            \n            \n                \ntoAttributes(obj: Record)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeApp\n                        \n                    \n                \n            \n            \n                \ninitializeApp(configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                configService\n                                            \n                                                            ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/services/mouse-position-tracker.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        trackMousePosition\n                        \n                    \n                \n            \n            \n                \ntrackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                el\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ga\n                                            \n                                                        GoogleAnalyticsService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Subscription\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/static/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateWidth\n                        \n                    \n                \n            \n            \n                \nvalidateWidth(width: number, paneOpen, paneWidth: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                paneOpen\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                        \n                                                paneWidth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    250\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CompareModule\n\n\n\ncluster_CompareModule_declarations\n\n\n\ncluster_CompareModule_imports\n\n\n\ncluster_CompareModule_exports\n\n\n\ncluster_ControlPaneModule\n\n\n\ncluster_ControlPaneModule_declarations\n\n\n\ncluster_ControlPaneModule_imports\n\n\n\ncluster_ControlPaneModule_exports\n\n\n\ncluster_ControlsModule\n\n\n\ncluster_ControlsModule_declarations\n\n\n\ncluster_ControlsModule_exports\n\n\n\ncluster_DebugLogsModule\n\n\n\ncluster_DebugLogsModule_declarations\n\n\n\ncluster_DebugLogsModule_exports\n\n\n\ncluster_DocsModule\n\n\n\ncluster_DocsModule_declarations\n\n\n\ncluster_DocsModule_imports\n\n\n\ncluster_DocsModule_exports\n\n\n\ncluster_DocsNavModule\n\n\n\ncluster_DocsNavModule_declarations\n\n\n\ncluster_DocsNavModule_exports\n\n\n\ncluster_DoiModule\n\n\n\ncluster_DoiModule_declarations\n\n\n\ncluster_DoiModule_exports\n\n\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_exports\n\n\n\ncluster_FileUploadModule\n\n\n\ncluster_FileUploadModule_declarations\n\n\n\ncluster_FileUploadModule_FileUploadComponent_providers\n\n\n\ncluster_FileUploadModule_exports\n\n\n\ncluster_FooterModule\n\n\n\ncluster_FooterModule_declarations\n\n\n\ncluster_FooterModule_exports\n\n\n\ncluster_FunctionsModule\n\n\n\ncluster_FunctionsModule_declarations\n\n\n\ncluster_FunctionsModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_exports\n\n\n\ncluster_IndentedListModule\n\n\n\ncluster_IndentedListModule_declarations\n\n\n\ncluster_IndentedListModule_exports\n\n\n\ncluster_InfoModule\n\n\n\ncluster_InfoModule_declarations\n\n\n\ncluster_InfoModule_exports\n\n\n\ncluster_LegendModule\n\n\n\ncluster_LegendModule_declarations\n\n\n\ncluster_LegendModule_imports\n\n\n\ncluster_LegendModule_exports\n\n\n\ncluster_LoadingModule\n\n\n\ncluster_LoadingModule_declarations\n\n\n\ncluster_LoadingModule_exports\n\n\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_declarations\n\n\n\ncluster_NavbarModule_imports\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_NavItemModule\n\n\n\ncluster_NavItemModule_declarations\n\n\n\ncluster_NavItemModule_exports\n\n\n\ncluster_OmapControlsModule\n\n\n\ncluster_OmapControlsModule_declarations\n\n\n\ncluster_OmapControlsModule_exports\n\n\n\ncluster_OrganTableSelectorModule\n\n\n\ncluster_OrganTableSelectorModule_declarations\n\n\n\ncluster_OrganTableSelectorModule_exports\n\n\n\ncluster_PlaygroundModule\n\n\n\ncluster_PlaygroundModule_declarations\n\n\n\ncluster_PlaygroundModule_imports\n\n\n\ncluster_PlaygroundModule_exports\n\n\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_declarations\n\n\n\ncluster_ReportModule_exports\n\n\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_exports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\ncluster_SidenavHeaderModule\n\n\n\ncluster_SidenavHeaderModule_declarations\n\n\n\ncluster_SidenavHeaderModule_exports\n\n\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_declarations\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_TableNestedMenuModule\n\n\n\ncluster_TableNestedMenuModule_declarations\n\n\n\ncluster_TableNestedMenuModule_exports\n\n\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\ncluster_TreeModule\n\n\n\ncluster_TreeModule_declarations\n\n\n\ncluster_TreeModule_exports\n\n\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_declarations\n\n\n\ncluster_UploadModule_exports\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnalyticsModule->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDocsModule\n\nDocsModule\n\nAppModule -->\n\nDocsModule->AppModule\n\n\n\n\n\nDocsComponent \n\nDocsComponent \n\nDocsComponent  -->\n\nDocsModule->DocsComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nAppModule -->\n\nFileUploadModule->AppModule\n\n\n\n\n\nCompareModule\n\nCompareModule\n\nCompareModule -->\n\nFileUploadModule->CompareModule\n\n\n\n\n\nFileUploadComponent \n\nFileUploadComponent \n\nFileUploadComponent  -->\n\nFileUploadModule->FileUploadComponent \n\n\n\n\n\nPlaygroundModule\n\nPlaygroundModule\n\nPlaygroundModule -->\n\nFileUploadModule->PlaygroundModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nUploadModule -->\n\nFileUploadModule->UploadModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nAppModule -->\n\nFooterModule->AppModule\n\n\n\nDocsModule -->\n\nFooterModule->DocsModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nFooterModule->HomeModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nFooterModule->FooterComponent \n\n\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\nMousePositionTrackerModule\n\nMousePositionTrackerModule\n\nAppModule -->\n\nMousePositionTrackerModule->AppModule\n\n\n\n\n\nOrganTableSelectorModule\n\nOrganTableSelectorModule\n\nAppModule -->\n\nOrganTableSelectorModule->AppModule\n\n\n\n\n\nOrganTableSelectorComponent \n\nOrganTableSelectorComponent \n\nOrganTableSelectorComponent  -->\n\nOrganTableSelectorModule->OrganTableSelectorComponent \n\n\n\n\n\nRootModule\n\nRootModule\n\nAppModule -->\n\nRootModule->AppModule\n\n\n\n\n\nRootComponent \n\nRootComponent \n\nRootComponent  -->\n\nRootModule->RootComponent \n\n\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nAppModule -->\n\nTrackingPopupModule->AppModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\nConfigService\n\nConfigService\n\nAppModule -->\n\nConfigService->AppModule\n\n\n\n\n\nCompareComponent\n\nCompareComponent\n\nCompareModule -->\n\nCompareComponent->CompareModule\n\n\n\nRootModule -->\n\nCompareModule->RootModule\n\n\n\n\n\nCompareComponent \n\nCompareComponent \n\nCompareComponent  -->\n\nCompareModule->CompareComponent \n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nCompareModule -->\n\nSidenavHeaderModule->CompareModule\n\n\n\n\n\nDebugLogsModule\n\nDebugLogsModule\n\nDebugLogsModule -->\n\nSidenavHeaderModule->DebugLogsModule\n\n\n\n\n\nIndentedListModule\n\nIndentedListModule\n\nIndentedListModule -->\n\nSidenavHeaderModule->IndentedListModule\n\n\n\nUploadModule -->\n\nSidenavHeaderModule->UploadModule\n\n\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nSidenavHeaderModule->ReportModule\n\n\n\n\n\nSidenavHeaderComponent \n\nSidenavHeaderComponent \n\nSidenavHeaderComponent  -->\n\nSidenavHeaderModule->SidenavHeaderComponent \n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nCompareModule -->\n\nSidenavModule->CompareModule\n\n\n\n\n\nControlPaneModule\n\nControlPaneModule\n\nControlPaneModule -->\n\nSidenavModule->ControlPaneModule\n\n\n\nDebugLogsModule -->\n\nSidenavModule->DebugLogsModule\n\n\n\nIndentedListModule -->\n\nSidenavModule->IndentedListModule\n\n\n\nUploadModule -->\n\nSidenavModule->UploadModule\n\n\n\nReportModule -->\n\nSidenavModule->ReportModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nSidenavModule->SidenavComponent \n\n\n\n\n\nControlPaneComponent\n\nControlPaneComponent\n\nControlPaneModule -->\n\nControlPaneComponent->ControlPaneModule\n\n\n\nRootModule -->\n\nControlPaneModule->RootModule\n\n\n\n\n\nControlPaneComponent \n\nControlPaneComponent \n\nControlPaneComponent  -->\n\nControlPaneModule->ControlPaneComponent \n\n\n\n\n\nControlsModule\n\nControlsModule\n\nControlPaneModule -->\n\nControlsModule->ControlPaneModule\n\n\n\n\n\nVisControlsComponent \n\nVisControlsComponent \n\nVisControlsComponent  -->\n\nControlsModule->VisControlsComponent \n\n\n\n\n\nFunctionsModule\n\nFunctionsModule\n\nControlPaneModule -->\n\nFunctionsModule->ControlPaneModule\n\n\n\n\n\nFunctionsComponent \n\nFunctionsComponent \n\nFunctionsComponent  -->\n\nFunctionsModule->FunctionsComponent \n\n\n\n\n\nLegendModule\n\nLegendModule\n\nRootModule -->\n\nLegendModule->RootModule\n\n\n\nControlPaneModule -->\n\nLegendModule->ControlPaneModule\n\n\n\n\n\nLegendComponent \n\nLegendComponent \n\nLegendComponent  -->\n\nLegendModule->LegendComponent \n\n\n\n\n\nOmapControlsModule\n\nOmapControlsModule\n\nControlPaneModule -->\n\nOmapControlsModule->ControlPaneModule\n\n\n\n\n\nOmapControlsComponent \n\nOmapControlsComponent \n\nOmapControlsComponent  -->\n\nOmapControlsModule->OmapControlsComponent \n\n\n\n\n\nVisControlsComponent\n\nVisControlsComponent\n\nControlsModule -->\n\nVisControlsComponent->ControlsModule\n\n\n\n\n\nDebugLogsComponent\n\nDebugLogsComponent\n\nDebugLogsModule -->\n\nDebugLogsComponent->DebugLogsModule\n\n\n\nRootModule -->\n\nDebugLogsModule->RootModule\n\n\n\n\n\nDebugLogsComponent \n\nDebugLogsComponent \n\nDebugLogsComponent  -->\n\nDebugLogsModule->DebugLogsComponent \n\n\n\n\n\nDocsComponent\n\nDocsComponent\n\nDocsModule -->\n\nDocsComponent->DocsModule\n\n\n\n\n\nDocsNavModule\n\nDocsNavModule\n\nDocsModule -->\n\nDocsNavModule->DocsModule\n\n\n\n\n\nDocsNavComponent \n\nDocsNavComponent \n\nDocsNavComponent  -->\n\nDocsNavModule->DocsNavComponent \n\n\n\n\n\nDocsNavComponent\n\nDocsNavComponent\n\nDocsNavModule -->\n\nDocsNavComponent->DocsNavModule\n\n\n\n\n\nDoiComponent\n\nDoiComponent\n\n\n\nDoiModule\n\nDoiModule\n\nDoiModule -->\n\nDoiComponent->DoiModule\n\n\n\nRootModule -->\n\nDoiModule->RootModule\n\n\n\n\n\nDoiComponent \n\nDoiComponent \n\nDoiComponent  -->\n\nDoiModule->DoiComponent \n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nErrorComponent->ErrorModule\n\n\n\nRootModule -->\n\nErrorModule->RootModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nErrorModule->ErrorComponent \n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nFileUploadModule -->\n\nFileUploadComponent->FileUploadModule\n\n\n\n\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}\n\nFileUploadComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}->FileUploadComponent\n\n\n\n\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}\n\nFileUploadComponent -->\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}->FileUploadComponent\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nFooterModule -->\n\nFooterComponent->FooterModule\n\n\n\n\n\nFunctionsComponent\n\nFunctionsComponent\n\nFunctionsModule -->\n\nFunctionsComponent->FunctionsModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nTableNestedMenuModule\n\nTableNestedMenuModule\n\nHomeModule -->\n\nTableNestedMenuModule->HomeModule\n\n\n\nRootModule -->\n\nTableNestedMenuModule->RootModule\n\n\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nTableNestedMenuModule->NavbarModule\n\n\n\n\n\nTableNestedMenuComponent \n\nTableNestedMenuComponent \n\nTableNestedMenuComponent  -->\n\nTableNestedMenuModule->TableNestedMenuComponent \n\n\n\n\n\nIndentedListComponent\n\nIndentedListComponent\n\nIndentedListModule -->\n\nIndentedListComponent->IndentedListModule\n\n\n\nRootModule -->\n\nIndentedListModule->RootModule\n\n\n\n\n\nIndentedListComponent \n\nIndentedListComponent \n\nIndentedListComponent  -->\n\nIndentedListModule->IndentedListComponent \n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\n\n\nInfoModule\n\nInfoModule\n\nInfoModule -->\n\nInfoComponent->InfoModule\n\n\n\nRootModule -->\n\nInfoModule->RootModule\n\n\n\n\n\nInfoComponent \n\nInfoComponent \n\nInfoComponent  -->\n\nInfoModule->InfoComponent \n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nLegendModule -->\n\nLegendComponent->LegendModule\n\n\n\n\n\nOrderByPipe\n\nOrderByPipe\n\nLegendModule -->\n\nOrderByPipe->LegendModule\n\n\n\nReportModule -->\n\nOrderByPipe->ReportModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\n\n\nLoadingModule\n\nLoadingModule\n\nLoadingModule -->\n\nLoadingComponent->LoadingModule\n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nLoadingModule->LoadingComponent \n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\nRootModule -->\n\nNavbarModule->RootModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\n\n\nNavItemModule\n\nNavItemModule\n\nNavbarModule -->\n\nNavItemModule->NavbarModule\n\n\n\n\n\nNavItemComponent \n\nNavItemComponent \n\nNavItemComponent  -->\n\nNavItemModule->NavItemComponent \n\n\n\n\n\nSearchModule\n\nSearchModule\n\nNavbarModule -->\n\nSearchModule->NavbarModule\n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSearchModule->SearchComponent \n\n\n\n\n\nNavItemComponent\n\nNavItemComponent\n\nNavItemModule -->\n\nNavItemComponent->NavItemModule\n\n\n\n\n\nOmapControlsComponent\n\nOmapControlsComponent\n\nOmapControlsModule -->\n\nOmapControlsComponent->OmapControlsModule\n\n\n\n\n\nOrganTableSelectorComponent\n\nOrganTableSelectorComponent\n\nOrganTableSelectorModule -->\n\nOrganTableSelectorComponent->OrganTableSelectorModule\n\n\n\n\n\nPlaygroundComponent\n\nPlaygroundComponent\n\nPlaygroundModule -->\n\nPlaygroundComponent->PlaygroundModule\n\n\n\nRootModule -->\n\nPlaygroundModule->RootModule\n\n\n\n\n\nPlaygroundComponent \n\nPlaygroundComponent \n\nPlaygroundComponent  -->\n\nPlaygroundModule->PlaygroundComponent \n\n\n\n\n\nTreeModule\n\nTreeModule\n\nRootModule -->\n\nTreeModule->RootModule\n\n\n\nPlaygroundModule -->\n\nTreeModule->PlaygroundModule\n\n\n\n\n\nTreeComponent \n\nTreeComponent \n\nTreeComponent  -->\n\nTreeModule->TreeComponent \n\n\n\nPlaygroundModule -->\n\nUploadModule->PlaygroundModule\n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nUploadModule->UploadComponent \n\n\n\n\n\nReportComponent\n\nReportComponent\n\nReportModule -->\n\nReportComponent->ReportModule\n\n\n\nRootModule -->\n\nReportModule->RootModule\n\n\n\n\n\nReportComponent \n\nReportComponent \n\nReportComponent  -->\n\nReportModule->ReportComponent \n\n\n\n\n\nRootComponent\n\nRootComponent\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nSearchModule -->\n\nSearchComponent->SearchModule\n\n\n\n\n\nSidenavHeaderComponent\n\nSidenavHeaderComponent\n\nSidenavHeaderModule -->\n\nSidenavHeaderComponent->SidenavHeaderModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nSidenavModule -->\n\nSidenavComponent->SidenavModule\n\n\n\n\n\nTableNestedMenuComponent\n\nTableNestedMenuComponent\n\nTableNestedMenuModule -->\n\nTableNestedMenuComponent->TableNestedMenuModule\n\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nTreeModule -->\n\nTreeComponent->TreeModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nUploadModule -->\n\nUploadComponent->UploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        34 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    70 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    71 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompareModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ControlPaneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ControlsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DebugLogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocsNavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileUploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FooterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FunctionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IndentedListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LegendModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoadingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MousePositionTrackerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OmapControlsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganTableSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableNestedMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingPopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consent   (src/.../consent.service.ts)\n                        \n                        \n                            TypeStructure   (src/.../tree.functions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/consent.service.ts\n    \n    \n        \n            \n                \n                    \n                    Consent\n                \n            \n            \n                \n                        \"not-set\" | \"given\" | \"rescinded\"\n\n                \n            \n        \n    \n    src/app/modules/tree/tree.functions.ts\n    \n    \n        \n            \n                \n                    \n                    TypeStructure\n                \n            \n            \n                \n                        AS | CT | B\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AS_RED   (src/.../tree.model.ts)\n                        \n                        \n                            B_GREEN   (src/.../tree.model.ts)\n                        \n                        \n                            bimodalBSizeOptions   (src/.../bimodal.model.ts)\n                        \n                        \n                            bimodalBTypeOptions   (src/.../bimodal.model.ts)\n                        \n                        \n                            bimodalCTSizeOptions   (src/.../bimodal.model.ts)\n                        \n                        \n                            bimodalSortOptions   (src/.../bimodal.model.ts)\n                        \n                        \n                            CONTIRBUTORS   (src/.../home.ts)\n                        \n                        \n                            CT_BLUE   (src/.../tree.model.ts)\n                        \n                        \n                            EAGERLY_LOADED_SERVICES   (src/.../analytics.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.stage.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            FETCHING_TEXT   (src/.../sheet.state.ts)\n                        \n                        \n                            groupNameMapper   (src/.../bimodal.model.ts)\n                        \n                        \n                            gtag   (src/.../app.component.ts)\n                        \n                        \n                            IMAGES   (src/.../home.ts)\n                        \n                        \n                            LOCAL_STORAGE_CONSENT_KEY   (src/.../local-storage-sync.service.ts)\n                        \n                        \n                            PLAYGROUND   (src/.../url.ts)\n                        \n                        \n                            REGISTRY   (src/.../docs.ts)\n                        \n                        \n                            ST_ID   (src/.../tree.model.ts)\n                        \n                        \n                            URL   (src/.../url.ts)\n                        \n                        \n                            VIDEO_ACTIONS   (src/.../home.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/tree.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AS_RED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#E41A1C'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        B_GREEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#4DAF4A'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CT_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#377EB8'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ST_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n\n\n        \n    \n\n    src/app/models/bimodal.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bimodalBSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['None', 'Degree']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bimodalBTypeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bimodalCTSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['None', 'Degree', 'Indegree', 'Outdegree']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bimodalSortOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Alphabetically', 'Degree']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupNameMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/static/home.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONTIRBUTORS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    img: 'assets/contributors/paul.jpg',\n    name: 'Hrishikesh Paul',\n    desc: 'Software Engineer Team Lead',\n    mail: 'hrpaul@iu.edu',\n    link: 'https://hrishikeshpaul.github.io',\n    linkedin: 'https://www.linkedin.com/in/hrishikeshpaul/',\n    github: 'https://github.com/hrishikeshpaul',\n  },\n  {\n    img: 'assets/contributors/katy.png',\n    name: 'Katy Börner',\n    desc: 'Director & Researcher',\n    mail: 'katy@indiana.edu',\n    link: 'https://info.sice.indiana.edu/~katy/',\n    linkedin: 'https://www.linkedin.com/in/katy-borner-a03837/',\n    github: '',\n  },\n  {\n    img: 'assets/contributors/bruce.jpg',\n    name: 'Bruce W Herr II',\n    desc: 'Senior System Architect',\n    mail: 'bherr@indiana.edu',\n    link: 'https://cns.iu.edu/current_team/bio/bruce-herr.html',\n    linkedin: 'https://www.linkedin.com/in/bruceherr/',\n    github: 'https://github.com/bherr2',\n  },\n  {\n    img: 'assets/contributors/ellen.jpeg',\n    name: 'Ellen M Quardokus',\n    desc: 'Senior Research Analyst',\n    mail: 'ellenmq@indiana.edu',\n    link: 'https://cns.iu.edu/current_team/bio/ellen-quardokus.html',\n    linkedin: '',\n    github: '',\n  },\n  {\n    img: 'assets/contributors/ajay.jpeg',\n    name: 'Sai Ajay Vutukuri',\n    desc: 'Software Developer',\n    mail: 'svutuku@iu.edu',\n    link: 'https://github.com/vutukuriajay2241',\n    linkedin: 'https://in.linkedin.com/in/ajay-vutukuri-38824ba8',\n    github: '',\n  },\n  {\n    img: 'assets/contributors/mac.jpeg',\n    name: 'Mac Vogelsang',\n    desc: 'Software Developer',\n    mail: 'madvogel@iu.edu',\n    link: 'https://github.com/macvogelsang',\n    linkedin: 'https://www.linkedin.com/in/mac-vogelsang',\n    github: '',\n  },\n  {\n    img: 'assets/contributors/nikhil.jpeg',\n    name: 'Nikhil Mahadevaswamy',\n    desc: 'Angular Developer',\n    mail: 'nmahade@iu.edu',\n    link: 'https://github.com/Nikhil-lab',\n    linkedin: 'https://www.linkedin.com/in/nikhilm2395',\n    github: '',\n  },\n  {\n    img: 'assets/contributors/pramod.png',\n    name: 'Pramod Bhakta',\n    desc: 'Angular Developer',\n    mail: 'pnbhakta@iu.edu',\n    link: 'https://github.com/pbrm4',\n    github: '',\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IMAGES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: 'assets/homepage/laptop-images/vis.svg',\n    alt: 'Visualization',\n  },\n  {\n    path: 'assets/homepage/laptop-images/report.svg',\n    alt: 'Report Generator',\n  },\n  {\n    path: 'assets/homepage/laptop-images/compare.svg',\n    alt: 'Compare Results',\n  },\n  {\n    path: 'assets/homepage/laptop-images/il.svg',\n    alt: 'Indented List',\n  },\n  {\n    path: 'assets/homepage/laptop-images/link.svg',\n    alt: 'Playground Link',\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VIDEO_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    header: 'Introduction',\n    desc: 'Know about the Reporter, what it is, why was it built and by who.',\n    sec: 3,\n  },\n  {\n    header: 'Getting Started',\n    desc: 'Know more about what how to use the buttons on the toolbar.',\n    sec: 33,\n  },\n  {\n    header: 'Search',\n    desc: 'Search entities by typing their names.',\n    sec: 117,\n  },\n  {\n    header: 'Indented List',\n    desc: 'View the data in a hierarchical format.',\n    sec: 207,\n  },\n  {\n    header: 'Report Generator',\n    desc: 'The Reporter computes various statistics from the data - which is downloadable.',\n    sec: 232,\n  },\n  {\n    header: 'Debug Log',\n    desc: 'The Log lists warnings and errors that occurred during data parsing and visualization creation',\n    sec: 247,\n  },\n  {\n    header: 'Export',\n    desc: 'The menu lists the formats that can be exported through the reporter.',\n    sec: 270,\n  },\n  {\n    header: 'Tree Visualization',\n    desc: 'See how to explore the tree visualization.',\n    sec: 304,\n  },\n  {\n    header: 'Graph Functions',\n    desc: 'See how you can sort, size and filter different nodes.',\n    sec: 400,\n  },\n  {\n    header: 'Graph Controls',\n    desc: 'Constomize the visualization on the fly.',\n    sec: 480,\n  },\n  {\n    header: 'Compare',\n    desc: 'Compare your data to that of the master tables.',\n    sec: 540,\n  },\n  {\n    header: 'Playground',\n    desc: 'Play with the visualization and upload your own data.',\n    sec: 669,\n  },\n  {\n    header: 'Docs',\n    desc: 'Take a look at the Reporter Documentation.',\n    sec: 796,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/services/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EAGERLY_LOADED_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [ConsentService, GoogleAnalyticsSyncService, LocalStorageSyncService]\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  tag: '',\n  googleAnalyticsId: 'G-WYFW84S56B',\n  asctbApiUrl: 'https://apps.humanatlas.io/asctb-api',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.stage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  tag: 'Staging',\n  googleAnalyticsId: 'G-58FWLW86SD',\n  asctbApiUrl: 'https://apps.humanatlas.io/asctb-api--staging',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  tag: 'Development',\n  googleAnalyticsId: 'G-77K2VNZRJ2',\n  asctbApiUrl: 'https://apps.humanatlas.io/asctb-api',\n  // use the following url when developing against in-staging-only features\n  // asctbApiUrl: 'https://apps.humanatlas.io/asctb-api--staging'\n  // use the following url for localhost API development\n  // asctbApiUrl: 'http://localhost:5000'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/store/sheet.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FETCHING_TEXT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Fetching data...'\n                    \n                \n\n\n        \n    \n\n    src/app/app.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gtag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         void\n\n                    \n                \n\n\n        \n    \n\n    src/app/services/local-storage-sync.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_CONSENT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY',\n})\n                    \n                \n\n\n        \n    \n\n    src/app/static/url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PLAYGROUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/playground/sheet.csv'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.asctbApiUrl\n                    \n                \n\n\n        \n    \n\n    src/app/static/docs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REGISTRY\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 1,\n    title: 'Introduction',\n    urlTitle: 'introduction',\n    path: 'assets/docs/intro/README.md',\n  },\n  {\n    id: 2,\n    title: 'About',\n    urlTitle: 'about',\n    path: 'assets/docs/about/README.md',\n  },\n  {\n    id: 3,\n    title: 'FAQ',\n    urlTitle: 'faq',\n    path: 'assets/docs/faq/README.md',\n  },\n  {\n    id: 4,\n    title: 'Data Format',\n    urlTitle: 'data-format',\n    path: 'assets/docs/data-format/README.md',\n  },\n  {\n    id: 5,\n    title: 'Visualization',\n    urlTitle: 'visualization',\n    path: 'assets/docs/visualization/README.md',\n  },\n  {\n    id: 6,\n    title: 'Visualization Functions',\n    urlTitle: 'visualization-functions',\n    path: 'assets/docs/vis-functions/README.md',\n  },\n  {\n    id: 7,\n    title: 'Visualization Controls',\n    urlTitle: 'visualization-controls',\n    path: 'assets/docs/vis-controls/README.md',\n  },\n  {\n    id: 8,\n    title: 'Compare',\n    urlTitle: 'compare',\n    path: 'assets/docs/compare/README.md',\n  },\n  {\n    id: 9,\n    title: 'Playground',\n    urlTitle: 'playground',\n    path: 'assets/docs/playground/README.md',\n  },\n  {\n    id: 10,\n    title: 'Report',\n    urlTitle: 'report',\n    path: 'assets/docs/report/README.md',\n  },\n  {\n    id: 11,\n    title: 'Indented List',\n    urlTitle: 'indented-list',\n    path: 'assets/docs/indented-list/README.md',\n  },\n  {\n    id: 12,\n    title: 'Search',\n    urlTitle: 'search',\n    path: 'assets/docs/search/README.md',\n  },\n  {\n    id: 13,\n    title: 'Debug Log',\n    urlTitle: 'debug-log',\n    path: 'assets/docs/log/README.md',\n  },\n  {\n    id: 14,\n    title: 'Export',\n    urlTitle: 'export',\n    path: 'assets/docs/export/README.md',\n  },\n  {\n    id: 14,\n    title: 'ASCT+B API',\n    urlTitle: 'api',\n    path: 'assets/docs/asct+b-api/README.md',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
