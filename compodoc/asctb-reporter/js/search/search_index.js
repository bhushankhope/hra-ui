var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AS.html",[0,0.515]],["body/interfaces/AS.html",[0,0.794,1,1.016,2,0.031,3,0.031,4,0.027,5,2.331,6,4.403,7,4.431,8,0.181,9,0.351,10,1.405,11,2.096,12,3.977,13,2.881,14,1.864,15,2.695,16,2.66,17,3.977,18,2.733,19,4.295,20,0.713,21,0.366,22,0.005,23,3.751,24,1.427,25,0.226,26,2.194,27,1.837,28,1.78,29,0.061,30,2.389,31,2.331,32,1.976,33,2.331,34,2.181,35,2.331,36,2.228,37,2.387,38,1.81,39,1.328,40,2.053,41,1.743,42,2.387,43,1.976,44,0.088,45,2.014,46,1.848,47,1.247,48,0.619,49,4.099,50,1.678,51,2.136,52,2.331,53,2.628,54,3.095,55,2.014,56,3.945,57,2.181,58,2.317,59,2.803,60,2.803,61,3.391,62,3.476,63,3.476,64,0.594,65,3.476,66,2.387,67,2.447,68,2.093,69,2.447,70,2.093,71,3.46,72,2.447,73,2.093,74,2.093,75,1.054,76,3.53,77,2.136,78,3.328,79,4.044,80,2.093,81,2.447,82,2.387,83,2.447,84,2.447,85,2.136,86,2.136,87,1.976,88,1.965,89,2.387,90,2.447,91,2.447,92,2.447,93,2.447,94,1.151,95,1.729,96,2.974,97,1.259,98,1.873,99,2.136,100,1.81,101,3.476,102,1.595,103,3.476,104,2.447,105,2.387,106,3.945,107,2.447,108,1.679,109,1.421,110,2.447,111,2.387,112,2.447,113,1.841,114,1.81,115,2.387,116,1.841,117,1.873,118,1.873,119,1.873,120,1.878,121,1.873,122,1.873,123,2.387,124,2.447,125,2.447,126,2.447,127,2.447,128,2.447,129,2.447,130,0.003,131,0.003]],["title/interfaces/ASCTBConfig.html",[0,0.41,89,2.669]],["body/interfaces/ASCTBConfig.html",[0,0.8,1,1.054,2,0.032,3,0.032,4,0.028,5,2.418,6,4.125,7,4.263,8,0.187,9,0.361,10,1.345,11,2.027,12,3.395,13,2.726,14,1.591,15,2.55,16,2.517,17,3.395,18,2.62,19,2.476,20,0.712,21,0.329,22,0.005,23,3.5,24,1.387,25,0.235,26,2.239,27,1.885,28,1.846,29,0.061,30,2.429,31,2.418,32,2.05,33,2.418,34,2.262,35,2.418,36,2.311,37,2.476,38,1.877,39,1.377,40,2.129,41,1.789,42,2.476,43,2.05,44,0.09,45,2.089,46,1.867,47,1.27,48,0.627,49,4.167,50,1.722,51,2.216,52,2.418,53,2.665,54,3.158,55,2.089,56,4.024,57,2.262,58,2.363,59,2.859,60,2.859,61,3.48,62,3.567,63,3.567,64,0.616,65,3.567,66,2.476,67,2.538,68,2.171,69,2.538,70,2.171,71,3.53,72,2.538,73,2.171,74,2.171,75,1.094,76,3.602,77,2.216,78,3.395,79,4.125,80,2.171,81,2.538,82,2.476,83,2.538,84,2.538,85,2.216,86,2.216,87,2.05,88,2.016,89,3.48,90,4.475,91,4.475,92,4.475,93,4.475,94,1.194,95,1.753,96,3.052,97,1.306,98,1.943,99,2.216,100,1.877,101,3.567,102,1.654,103,3.567,104,2.538,105,2.476,106,4.024,107,2.538,108,1.713,109,1.474,110,2.538,111,2.476,112,2.538,113,1.909,114,1.877,115,2.476,116,1.909,117,1.943,118,1.943,119,1.943,120,1.916,121,1.943,122,1.943,123,2.476,124,2.538,125,2.538,126,2.538,127,2.538,128,2.538,129,2.538,130,0.003,131,0.003]],["title/interfaces/ASCTD.html",[0,0.41,132,3.397]],["body/interfaces/ASCTD.html",[0,0.751,1,1.254,2,0.038,3,0.038,4,0.033,8,0.223,9,0.406,10,1.263,11,1.785,12,3.307,13,1.683,14,1.165,15,2.355,16,2.324,17,3.307,20,0.691,21,0.36,22,0.005,23,2.875,24,0.834,25,0.371,26,2.18,27,2.123,28,2.196,29,0.059,30,2.72,32,2.439,38,2.233,40,2.533,41,1.514,44,0.066,46,1.123,47,1.253,48,0.617,50,2.179,51,2.636,53,2.27,54,2.311,55,2.485,58,2.302,59,3.13,60,3.13,64,0.733,68,2.583,70,2.583,71,2.583,73,2.583,75,2.16,76,2.636,77,2.636,78,2.485,80,2.583,85,2.636,86,2.636,87,4.049,88,2.552,94,1.42,95,1.863,96,4.119,97,1.554,99,2.636,100,2.233,102,2.619,130,0.003,131,0.003,132,4.988,133,3.749,134,6.229,135,3.836,136,6.229,137,5.977,138,4.125,139,3.184,140,4.988,141,2.395,142,3.098,143,3.098,144,3.184,145,3.276,146,1.778,147,4.112,148,5.399,149,3.376,150,3.376,151,3.61,152,3.907,153,3.487,154,3.907,155,3.907,156,3.907,157,3.907,158,3.487,159,3.907,160,3.907,161,3.907,162,3.749,163,3.749,164,3.907,165,3.907,166,3.907,167,3.098,168,3.487,169,3.61,170,3.487,171,3.61,172,3.61,173,3.61,174,1.939,175,1.91,176,1.91,177,1.91,178,1.91,179,3.245,180,4.804,181,3.186,182,3.487,183,1.179]],["title/modules/AnalyticsModule.html",[184,1.108,185,3.541]],["body/modules/AnalyticsModule.html",[0,0.504,2,0.042,3,0.042,4,0.037,10,0.882,20,0.576,21,0.235,22,0.005,23,2.406,24,0.929,25,0.48,29,0.047,30,2.582,44,0.073,48,0.431,74,2.877,120,2.002,130,0.004,131,0.004,184,1.362,185,7.25,186,2.191,187,2.331,188,1.504,189,2.331,190,2.331,191,3.486,192,2.294,193,5.529,194,5.529,195,5.936,196,6.869,197,6.869,198,2.988,199,2.294,200,2.191,201,4.804,202,2.191,203,1.768,204,6.158,205,7.087,206,7.413,207,0.86,208,6.158,209,1.235,210,5.578,211,2.127,212,7.823,213,6.556,214,3.196,215,1.25,216,6.556,217,7.087,218,2.997,219,3.926,220,4.205,221,4.804,222,7.087,223,5.529,224,4.804,225,5.114,226,7.236,227,7.823,228,7.823,229,7.236,230,4.31,231,5.114,232,3.27,233,5.529,234,4.557,235,0.913,236,3.131,237,5.529,238,5.529,239,6.556,240,5.529,241,5.114,242,5.114,243,2.294,244,4.351,245,2.487,246,5.114,247,3.545,248,5.114,249,5.529]],["title/interfaces/AnalyticsOptions.html",[0,0.41,206,3.909]],["body/interfaces/AnalyticsOptions.html",[0,0.515,1,1.426,2,0.043,3,0.043,4,0.037,8,0.254,9,0.442,10,1.401,20,0.672,21,0.353,22,0.005,23,2.458,24,1.327,25,0.483,29,0.048,30,2.608,44,0.075,74,2.939,120,2.03,130,0.004,131,0.004,185,5.654,191,3.228,195,4.886,196,5.654,197,5.654,201,4.907,203,1.409,205,5.647,206,7.226,210,4.445,212,7.184,213,6.645,214,3.228,215,1.277,216,6.645,217,7.184,218,3.062,219,3.979,220,4.262,221,4.907,222,7.184,223,5.647,224,4.907,225,7.692,226,8.118,227,8.776,228,8.776,229,7.308,230,4.369,231,5.224,232,3.296,233,5.647,234,4.655,235,0.922,236,3.198,237,5.647,238,5.647,239,6.645,240,5.647,241,5.224,242,5.224,243,2.343,244,4.445,245,2.541,246,5.224,247,3.621,248,5.224,249,5.647]],["title/components/AppComponent.html",[250,1.355,251,1.99]],["body/components/AppComponent.html",[2,0.034,3,0.034,4,0.04,8,0.274,9,0.375,10,0.705,21,0.259,22,0.005,23,1.924,25,0.481,29,0.029,30,1.459,44,0.059,48,0.545,64,0.901,108,1.116,130,0.003,131,0.003,188,1.203,195,5.569,207,0.95,209,0.987,215,0.999,250,2.106,251,3.338,252,2.794,253,2.058,254,2.058,255,2.058,256,1.752,257,4.42,258,3.31,259,4.486,260,1.348,261,2.757,262,4.21,263,5.979,264,2.747,265,7.792,266,2.747,267,6.801,268,1.543,269,1.945,270,7.635,271,4.089,272,3.452,273,8.404,274,9.347,275,9.347,276,4.923,277,4.923,278,2.396,279,4.089,280,3.643,281,4.42,282,3.643,283,6.801,284,3.105,285,4.089,286,4.42,287,2.701,288,4.42,289,3.841,290,4.42,291,4.42,292,4.923,293,4.42,294,4.923,295,2.732,296,4.923,297,4.923,298,2.658,299,3.915,300,3.338,301,4.923,302,4.805,303,6.106,304,7.792,305,4.914,306,4.805,307,6.106,308,0.873,309,9.12,310,1.962,311,4.923,312,1.218,313,4.923,314,4.923,315,4.923,316,1.402,317,4.923,318,1.863,319,4.923,320,4.42,321,4.923,322,4.923,323,2.688,324,4.923,325,4.923,326,4.42,327,4.923,328,4.923,329,2.834,330,4.923,331,0.546,332,4.42,333,4.923,334,4.42,335,4.42,336,4.923,337,4.923,338,4.923,339,3.006,340,4.923,341,2.842,342,2.747,343,2.058,344,3.512,345,2.058,346,2.058,347,1.956,348,2.058,349,1.956,350,1.421,351,2.058,352,1.956,353,2.058,354,1.924,355,2.058,356,1.956,357,1.752,358,2.058,359,1.956,360,2.058,361,1.956,362,2.058,363,1.956,364,2.842,365,1.956,366,2.058,367,1.956,368,2.058,369,1.924,370,2.058,371,1.893,372,2.058,373,1.956,374,2.058,375,1.956,376,2.058,377,1.956,378,2.058,379,1.988,380,2.058,381,1.956,382,1.384,383,2.058,384,1.956,385,1.249,386,2.058,387,1.956,388,2.574,389,2.058,390,1.956,391,2.058,392,1.988,393,2.058,394,1.956,395,2.058,396,1.988,397,2.058,398,1.956,399,2.058,400,1.956,401,1.834,402,2.058,403,1.956,404,1.924,405,2.058,406,2.022,407,2.058,408,1.956,409,2.058,410,1.956,411,1.956,412,1.988,413,1.863,414,2.058,415,2.058]],["title/modules/AppModule.html",[184,1.108,416,3.909]],["body/modules/AppModule.html",[2,0.036,3,0.036,4,0.031,22,0.005,25,0.534,29,0.042,44,0.063,74,2.468,130,0.003,131,0.003,184,1.169,185,6.387,186,1.88,187,1.999,188,1.291,189,3.059,190,3.059,191,2.965,192,1.968,198,2.701,199,2.659,200,1.88,213,5.927,214,2.618,215,1.073,218,2.572,225,4.388,226,4.388,230,2.885,232,1.88,243,2.659,244,3.733,245,2.134,246,4.388,248,4.388,251,4.006,262,2.835,263,3.582,281,6.407,282,3.91,285,4.388,286,4.743,288,4.743,289,4.122,326,4.743,388,2.701,416,8.269,417,4.743,418,4.743,419,4.743,420,4.743,421,4.743,422,6.894,423,6.894,424,6.082,425,6.315,426,6.894,427,6.894,428,6.894,429,6.894,430,6.894,431,5.914,432,4.743,433,7.137,434,4.122,435,7.137,436,7.137,437,5.284,438,5.284,439,5.284,440,8.082,441,5.284,442,5.284,443,5.284,444,3.042,445,6.407,446,4.743,447,4.743,448,4.388,449,4.122,450,5.284,451,5.284,452,3.733,453,5.284,454,5.284,455,4.743,456,3.733,457,4.122,458,4.743,459,5.284,460,5.284,461,4.388,462,5.284,463,5.284,464,5.284,465,5.284,466,5.284,467,5.284,468,1.938,469,5.284,470,5.568,471,5.284,472,4.122,473,4.122,474,4.838,475,3.91,476,5.568,477,4.388,478,4.743,479,4.743,480,5.284,481,5.284,482,5.284,483,5.284,484,5.284,485,5.284,486,4.388,487,5.284,488,5.284,489,5.284,490,4.743]],["title/modules/AppRoutingModule.html",[184,1.108,422,3.708]],["body/modules/AppRoutingModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.504,29,0.043,30,2.158,44,0.087,130,0.004,131,0.004,186,2.592,192,2.713,214,3.214,215,1.478,243,2.713,250,2.739,284,4.593,318,2.756,354,3.672,357,2.592,369,3.424,394,3.873,412,2.941,422,6.484,491,6.538,492,7.283,493,7.332,494,6.484,495,7.283,496,7.283,497,7.283,498,6.87,499,7.283,500,7.283,501,7.283,502,7.283,503,7.283]],["title/interfaces/B.html",[0,0.41,98,2.094]],["body/interfaces/B.html",[0,0.792,1,1.002,2,0.03,3,0.03,4,0.026,5,2.3,6,4.376,7,4.408,8,0.178,9,0.348,10,1.401,11,2.09,12,3.959,13,2.872,14,1.548,15,2.687,16,2.652,17,3.959,18,2.725,19,2.355,20,0.713,21,0.373,22,0.005,23,3.74,24,1.423,25,0.223,26,2.511,27,1.82,28,1.756,29,0.061,30,2.375,31,2.3,32,1.95,33,2.3,34,2.152,35,2.3,36,2.198,37,2.355,38,1.786,39,1.31,40,2.025,41,1.727,42,2.355,43,1.95,44,0.088,45,1.987,46,1.841,47,1.252,48,0.616,49,4.075,50,1.662,51,2.108,52,2.3,53,2.615,54,3.072,55,1.987,56,3.916,57,2.152,58,2.3,59,2.782,60,2.782,61,3.359,62,3.443,63,3.443,64,0.586,65,3.443,66,2.355,67,2.414,68,2.066,69,2.414,70,2.066,71,3.434,72,2.414,73,2.066,74,2.066,75,1.04,76,3.504,77,2.108,78,3.303,79,4.014,80,2.066,81,2.414,82,2.355,83,2.414,84,2.414,85,2.108,86,2.108,87,1.95,88,2.615,89,2.355,90,2.414,91,2.414,92,2.414,93,2.414,94,1.136,95,1.882,96,3.959,97,1.243,98,2.636,99,3.821,100,1.786,101,3.443,102,1.573,103,3.443,104,2.414,105,2.355,106,3.916,107,2.414,108,1.667,109,1.402,110,2.414,111,2.355,112,2.414,113,1.816,114,1.786,115,2.355,116,1.816,117,1.848,118,1.848,119,1.848,120,1.865,121,1.848,122,1.848,123,2.355,124,2.414,125,2.414,126,2.414,127,2.414,128,2.414,129,2.414,130,0.003,131,0.003]],["title/classes/BMNode.html",[44,0.06,138,2.252]],["body/classes/BMNode.html",[0,0.697,2,0.031,3,0.031,4,0.027,8,0.181,9,0.352,10,1.417,11,1.965,12,3.625,13,2.255,14,1.56,15,2.593,16,2.559,17,3.625,20,0.701,21,0.399,22,0.005,23,3.152,24,0.961,25,0.322,26,2.195,27,2.138,28,1.781,29,0.057,30,2.525,32,1.978,38,1.811,40,2.054,41,1.228,44,0.053,46,1.504,47,1.272,48,0.651,50,2.399,51,3.532,53,2.286,54,3.097,55,3.33,58,2.318,59,3.446,60,3.446,64,0.844,68,2.095,70,2.095,71,2.095,73,2.095,75,1.499,76,2.138,77,2.138,78,2.015,80,2.095,85,2.138,86,2.138,87,4.016,88,2.81,94,1.152,95,1.504,96,4.347,97,2.082,99,3.532,100,1.811,102,2.267,130,0.003,131,0.003,132,3.04,133,3.04,134,3.169,135,2.663,136,3.169,137,4.319,138,3.625,139,2.582,140,4.319,141,1.942,142,2.513,143,2.513,144,2.582,145,2.657,146,1.442,147,4.528,148,5.945,149,4.524,150,4.524,151,2.928,152,3.169,153,2.828,154,3.169,155,3.169,156,3.169,157,3.169,158,2.828,159,3.169,160,3.169,161,3.169,162,3.04,163,3.04,164,3.169,165,3.169,166,3.169,167,2.513,168,2.828,169,2.928,170,2.828,171,2.928,172,2.928,173,2.928,174,1.572,175,1.549,176,1.549,177,1.549,178,1.549,179,2.81,180,4.159,181,2.759,182,2.828,183,0.956,207,1.454,209,0.899,235,0.668,308,1.13,504,1.017,505,4.026,506,6.371,507,4.485,508,4.485,509,4.485,510,4.485,511,4.485,512,4.485,513,4.485,514,4.485,515,4.485,516,4.485,517,4.485,518,4.485,519,4.485,520,4.485,521,4.485,522,4.485,523,4.485,524,4.485,525,4.485,526,4.485,527,4.485,528,4.485,529,4.485,530,4.485]],["title/interfaces/Base.html",[0,0.41,7,2.607]],["body/interfaces/Base.html",[0,0.8,1,1.054,2,0.032,3,0.032,4,0.028,5,2.418,6,4.125,7,4.492,8,0.187,9,0.361,10,1.345,11,2.027,12,3.395,13,2.726,14,1.591,15,2.55,16,2.517,17,3.395,18,2.62,19,2.476,20,0.713,21,0.329,22,0.005,23,3.5,24,1.387,25,0.235,26,2.239,27,1.885,28,1.846,29,0.061,30,2.429,31,2.418,32,2.05,33,2.418,34,2.262,35,2.418,36,2.311,37,2.476,38,1.877,39,1.377,40,2.129,41,1.789,42,2.476,43,2.05,44,0.09,45,2.089,46,1.964,47,1.257,48,0.627,49,4.167,50,1.722,51,2.216,52,2.418,53,2.665,54,3.158,55,2.089,56,4.024,57,2.262,58,2.363,59,2.859,60,2.859,61,4.6,62,4.715,63,4.715,64,0.616,65,3.567,66,2.476,67,2.538,68,2.171,69,2.538,70,2.171,71,3.53,72,2.538,73,2.171,74,2.171,75,1.094,76,3.602,77,2.216,78,3.395,79,4.125,80,2.171,81,2.538,82,2.476,83,2.538,84,2.538,85,2.216,86,2.216,87,2.05,88,2.016,89,2.476,90,2.538,91,2.538,92,2.538,93,2.538,94,1.194,95,1.753,96,3.052,97,1.306,98,1.943,99,2.216,100,1.877,101,3.567,102,1.654,103,3.567,104,2.538,105,2.476,106,4.024,107,2.538,108,1.713,109,1.474,110,2.538,111,2.476,112,2.538,113,1.909,114,1.877,115,2.476,116,1.909,117,1.943,118,1.943,119,1.943,120,1.916,121,1.943,122,1.943,123,2.476,124,2.538,125,2.538,126,2.538,127,2.538,128,2.538,129,2.538,130,0.003,131,0.003]],["title/interfaces/BimodalConfig.html",[0,0.41,179,2.21]],["body/interfaces/BimodalConfig.html",[0,0.755,1,1.273,2,0.039,3,0.039,4,0.033,8,0.226,9,0.41,11,1.799,12,3.341,13,1.71,14,1.183,15,2.373,16,2.342,17,3.341,20,0.693,21,0.374,22,0.005,23,2.905,24,0.847,25,0.375,26,2.203,27,2.145,28,2.231,29,0.06,30,2.734,32,2.477,38,2.269,40,2.573,41,2.429,44,0.067,46,1.14,47,1.247,48,0.621,50,2.196,51,2.678,53,2.294,54,2.347,55,2.524,58,2.326,59,3.154,60,3.154,64,0.744,68,2.624,70,2.624,71,2.624,73,2.624,75,1.749,76,2.678,77,2.678,78,2.524,80,2.624,85,2.678,86,2.678,87,4.07,88,2.572,94,2.279,95,1.692,96,4.144,97,1.579,99,2.678,100,2.269,102,2.646,130,0.003,131,0.003,132,3.808,133,3.808,134,3.969,135,3.107,136,3.969,137,5.041,138,3.745,139,3.234,140,5.041,141,2.432,142,3.147,143,3.147,144,3.234,145,3.327,146,1.807,147,4.144,148,5.441,149,3.43,150,3.43,151,3.667,152,3.969,153,3.542,154,3.969,155,3.969,156,3.969,157,3.969,158,3.542,159,3.969,160,3.969,161,3.969,162,3.808,163,3.808,164,3.969,165,3.969,166,3.969,167,3.147,168,3.542,169,3.667,170,3.542,171,3.667,172,3.667,173,3.667,174,1.969,175,1.94,176,1.94,177,1.94,178,1.94,179,3.676,180,4.854,181,3.22,182,3.542,183,1.198,531,5.792]],["title/interfaces/BimodalData.html",[0,0.41,182,3.16]],["body/interfaces/BimodalData.html",[0,0.754,1,1.269,2,0.038,3,0.038,4,0.033,8,0.226,9,0.409,11,1.796,12,3.334,13,1.704,14,1.179,15,2.369,16,2.338,17,3.334,20,0.692,21,0.351,22,0.005,23,2.899,24,0.844,25,0.375,26,2.198,27,2.14,28,2.224,29,0.06,30,2.731,32,2.469,38,2.261,40,2.564,41,1.533,44,0.067,46,1.136,47,1.246,48,0.62,50,2.192,51,2.669,53,2.289,54,2.34,55,2.516,58,2.321,59,3.149,60,3.149,64,0.742,68,2.615,70,2.615,71,2.615,73,2.615,75,2.169,76,2.669,77,2.669,78,2.516,80,2.615,85,2.669,86,2.669,87,4.065,88,2.567,94,1.438,95,1.871,96,4.139,97,1.573,99,2.669,100,2.261,102,2.64,130,0.003,131,0.003,132,3.795,133,3.795,134,3.955,135,3.852,136,3.955,137,5.029,138,4.142,139,3.223,140,5.029,141,2.424,142,3.137,143,3.137,144,3.223,145,3.316,146,1.8,147,4.137,148,5.432,149,3.418,150,3.418,151,3.655,152,3.955,153,3.53,154,3.955,155,3.955,156,3.955,157,3.955,158,3.53,159,3.955,160,3.955,161,3.955,162,3.795,163,3.795,164,3.955,165,3.955,166,3.955,167,3.137,168,3.53,169,3.655,170,3.53,171,3.655,172,3.655,173,3.655,174,1.963,175,1.934,176,1.934,177,1.934,178,1.934,179,3.907,180,4.843,181,3.213,182,4.678,183,1.889]],["title/classes/BimodalMarkGroup.html",[44,0.06,532,4.161]],["body/classes/BimodalMarkGroup.html",[2,0.013,3,0.013,4,0.011,8,0.076,9,0.178,12,0.847,14,0.678,17,0.847,21,0.283,22,0.005,25,0.095,29,0.011,32,2.466,34,3.166,36,2.094,38,3.721,44,0.022,46,1.954,48,0.548,50,0.497,55,2.238,58,2.452,59,2.891,60,2.891,64,0.558,75,0.991,78,2.238,87,0.832,94,0.827,95,0.653,96,0.881,97,1.4,98,1.345,130,0.001,131,0.001,141,3.934,145,4.926,147,2.476,148,2.75,149,4.786,150,4.786,153,1.189,174,0.661,175,0.651,176,0.651,177,0.651,178,0.651,181,0.817,200,1.146,202,1.146,203,0.943,207,1.094,211,2.561,230,1.758,232,2.638,235,1.097,236,4.836,245,3.411,331,0.761,498,3.376,504,0.428,532,2.673,533,1.886,534,3.608,535,4.471,536,4.98,537,4.98,538,4.471,539,4.471,540,4.471,541,4.471,542,4.98,543,4.98,544,3.219,545,5.075,546,1.886,547,1.886,548,7.275,549,3.219,550,4.017,551,1.968,552,1.886,553,4.136,554,1.886,555,2.89,556,1.886,557,6.154,558,6.154,559,2.629,560,2.374,561,2.269,562,5.468,563,1.886,564,1.886,565,1.535,566,1.886,567,1.886,568,3.219,569,1.886,570,2.976,571,0.832,572,0.671,573,1.886,574,1.693,575,1.332,576,7.686,577,2.102,578,1.886,579,1.886,580,1.886,581,1.693,582,1.886,583,1.693,584,1.693,585,1.693,586,1.693,587,4.136,588,5.592,589,5.348,590,4.752,591,5.194,592,4.471,593,7.581,594,7.279,595,6.938,596,4.471,597,4.471,598,4.471,599,4.471,600,4.471,601,5.075,602,1.693,603,5.073,604,2.89,605,5.402,606,1.761,607,4.647,608,8.489,609,7.068,610,1.693,611,4.471,612,1.693,613,1.693,614,1.693,615,1.693,616,1.693,617,1.693,618,2.89,619,1.693,620,1.693,621,1.693,622,1.693,623,0.749,624,3.885,625,1.886,626,4.596,627,2.673,628,6.655,629,1.886,630,4.475,631,2.275,632,1.075,633,1.886,634,1.886,635,1.471,636,1.886,637,1.566,638,7.013,639,6.861,640,7.154,641,4.814,642,7.413,643,8.174,644,3.219,645,2.89,646,1.715,647,2.89,648,3.219,649,5.592,650,3.219,651,4.98,652,2.673,653,1.693,654,5.075,655,4.98,656,6.505,657,1.886,658,3.885,659,1.886,660,1.886,661,2.75,662,2.75,663,1.279,664,1.693,665,5.592,666,2.89,667,1.886,668,1.886,669,1.886,670,1.886,671,4.471,672,1.566,673,2.89,674,1.886,675,8.668,676,4.212,677,4.212,678,1.332,679,1.693,680,1.886,681,1.886,682,5.592,683,8.279,684,6.505,685,6.505,686,5.592,687,5.592,688,1.693,689,1.693,690,1.566,691,1.566,692,1.566,693,1.886,694,2.89,695,2.673,696,2.89,697,1.278,698,1.853,699,1.601,700,2.89,701,2.673,702,1.471,703,1.231,704,2.89,705,5.486,706,1.279,707,2.89,708,3.219,709,1.566,710,1.566,711,1.395]],["title/injectables/BimodalService.html",[712,2.094,713,3.541]],["body/injectables/BimodalService.html",[2,0.016,3,0.027,4,0.014,8,0.095,10,0.823,12,2.228,14,0.819,17,2.228,20,0.38,21,0.242,22,0.005,25,0.44,26,0.7,29,0.014,30,2.869,33,2.023,35,2.023,38,2.002,43,1.042,44,0.028,45,2.582,46,1.467,47,0.871,48,0.402,52,2.579,53,1.2,55,3.071,58,2.949,59,1.876,60,1.472,64,0.313,75,2.187,87,2.534,94,1.856,95,1.587,98,3.019,100,0.954,102,1.384,111,1.259,116,2.037,120,0.987,130,0.002,131,0.002,135,3.695,138,3.973,141,4.083,145,2.937,146,2.427,147,1.934,149,2.375,150,2.375,158,1.49,167,4.048,168,3.127,170,2.453,174,1.364,175,1.344,176,1.344,177,1.344,178,1.344,179,3.329,199,1.449,202,1.384,207,0.802,209,1.152,211,1.713,215,0.48,230,3.731,232,3.103,235,0.248,236,1.201,245,1.571,247,1.36,256,1.764,269,0.492,298,1.52,300,4.307,302,6.324,306,6.324,308,0.419,331,0.868,444,1.36,474,1.602,475,1.749,534,4.048,550,3.973,551,3.762,571,3.449,572,1.764,575,2.748,606,0.999,623,0.939,626,1.67,705,1.749,712,1.626,713,2.748,714,1.324,715,2.363,716,4.451,717,4.958,718,3.89,719,3.89,720,1.67,721,4.462,722,2.363,723,2.363,724,1.956,725,3.752,726,5.704,727,2.04,728,3.444,729,4.483,730,2.363,731,4.451,732,7.224,733,3.868,734,1.664,735,3.868,736,2.637,737,0.712,738,3.89,739,5.159,740,3.89,741,2.854,742,1.217,743,1.012,744,3.89,745,3.839,746,4.558,747,2.363,748,3.127,749,3.89,750,2.363,751,4.451,752,1.443,753,1.67,754,1.201,755,1.201,756,1.229,757,1.602,758,1.023,759,1.025,760,1.749,761,1.175,762,1.602,763,1.602,764,1.67,765,1.229,766,2.072,767,0.894,768,0.57,769,1.126,770,2.121,771,2.121,772,2.121,773,2.363,774,1.49,775,1.843,776,5.389,777,1.67,778,2.363,779,2.363,780,2.363,781,2.363,782,6.834,783,6.834,784,3.89,785,5.747,786,4.958,787,5.159,788,2.363,789,5.747,790,2.363,791,2.363,792,2.363,793,2.363,794,2.363,795,5.747,796,2.363,797,2.363,798,3.89,799,2.363,800,3.868,801,2.363,802,2.363,803,6.834,804,2.363,805,2.363,806,2.363,807,2.363,808,2.363,809,2.363,810,2.363,811,2.363,812,2.363,813,2.363,814,2.363,815,3.89,816,6.834,817,4.958,818,3.89,819,3.89,820,4.958,821,2.363,822,2.363,823,2.363,824,1.817,825,3.89,826,1.602,827,3.89,828,2.363,829,2.363,830,3.89,831,5.747,832,5.747,833,3.89,834,4.958,835,2.363,836,3.89,837,2.363,838,4.958,839,4.958,840,3.89,841,3.89,842,5.747,843,2.363,844,3.23,845,2.363,846,2.363,847,2.363,848,2.363,849,2.363,850,3.89,851,3.492,852,2.363,853,3.492,854,3.89,855,3.492,856,3.89,857,2.363,858,3.89,859,2.363,860,2.121,861,2.363,862,2.363,863,2.363,864,3.492,865,2.363,866,2.363,867,2.363,868,2.363,869,2.363,870,3.89,871,2.363,872,2.363,873,3.89,874,2.363,875,6.353,876,6.353,877,2.363,878,2.363,879,2.363,880,2.363,881,2.363,882,2.363,883,2.363,884,2.363,885,2.363,886,3.89,887,2.363,888,2.363,889,2.363,890,2.363,891,3.89,892,4.451,893,2.363,894,3.89,895,6.834,896,7.548,897,3.89,898,5.159,899,3.89,900,3.89,901,5.747,902,5.747,903,3.89,904,5.159,905,5.747,906,2.363,907,3.89,908,5.159,909,3.89,910,3.89,911,2.363,912,2.363,913,2.363,914,1.67,915,4.958,916,2.121,917,2.121,918,2.121,919,2.121,920,2.121,921,2.121,922,2.363,923,3.89,924,6.268,925,5.747,926,3.23,927,3.89,928,3.89,929,3.035,930,2.363,931,2.363,932,3.23,933,2.363,934,3.89,935,3.89,936,3.89,937,2.363,938,3.89,939,3.89,940,2.363,941,2.121,942,2.363,943,2.363,944,2.363,945,2.363,946,3.89,947,2.363,948,5.333,949,3.89,950,2.363,951,2.363,952,1.543,953,2.363,954,2.121,955,3.89,956,2.121,957,3.89,958,2.121,959,2.121,960,2.363,961,1.67,962,1.962,963,2.65,964,1.843,965,0.805,966,3.035,967,1.962,968,1.843,969,1.962,970,1.126,971,1.104,972,1.023,973,1.126,974,1.126,975,1.126,976,2.363,977,2.363,978,3.492,979,2.879,980,2.363,981,2.363,982,2.363,983,2.363,984,2.363,985,2.363,986,2.363,987,2.121,988,3.23,989,1.962,990,2.363,991,2.363,992,2.363,993,3.89,994,2.363,995,2.363,996,2.363,997,2.121]],["title/interfaces/BiomarkersCounts.html",[0,0.41,998,3.397]],["body/interfaces/BiomarkersCounts.html",[0,0.824,1,1.611,2,0.049,3,0.049,4,0.042,8,0.286,9,0.476,14,1.497,16,2.426,18,2.024,20,0.69,21,0.354,22,0.005,25,0.436,28,2.823,29,0.06,47,1.215,48,0.693,94,2.388,95,1.443,98,3.886,130,0.004,131,0.004,139,4.091,146,2.776,235,1.013,312,2.135,331,0.789,737,1.152,826,5.852,998,5.852,999,5.021,1000,5.021,1001,5.021,1002,5.021,1003,6.1,1004,5.021,1005,6.304,1006,5.021,1007,2.919,1008,4.818,1009,4.818]],["title/interfaces/BiomarkersNamesInReport.html",[0,0.41,1009,3.397]],["body/interfaces/BiomarkersNamesInReport.html",[0,0.824,1,1.611,2,0.049,3,0.049,4,0.042,8,0.286,9,0.476,14,1.497,16,2.426,18,2.024,20,0.696,21,0.384,22,0.005,25,0.436,28,2.823,29,0.06,47,1.167,48,0.693,94,2.388,95,1.443,98,3.886,130,0.004,131,0.004,139,4.091,146,2.776,235,0.745,312,2.135,331,0.789,737,1.152,826,5.852,998,4.818,999,5.021,1000,5.021,1001,5.021,1002,5.021,1003,6.1,1004,5.021,1005,6.304,1006,5.021,1007,2.919,1008,4.818,1009,5.852]],["title/interfaces/BmCtPairings.html",[0,0.41,123,2.669]],["body/interfaces/BmCtPairings.html",[0,0.799,1,1.048,2,0.032,3,0.032,4,0.027,5,2.404,6,4.113,7,4.253,8,0.186,9,0.359,11,2.024,12,3.385,13,2.721,14,1.586,15,2.546,16,2.513,17,3.385,18,2.616,19,2.462,20,0.714,21,0.35,22,0.005,23,3.493,24,1.385,25,0.233,26,2.232,27,1.878,28,1.836,29,0.061,30,2.423,31,2.404,32,2.039,33,2.404,34,2.25,35,2.404,36,2.298,37,2.462,38,1.867,39,1.37,40,2.117,41,1.782,42,2.462,43,2.039,44,0.09,45,2.077,46,1.865,47,1.251,48,0.625,49,4.157,50,1.715,51,2.203,52,2.404,53,2.659,54,3.148,55,2.077,56,4.012,57,2.25,58,2.356,59,2.851,60,2.851,61,3.467,62,3.553,63,3.553,64,0.612,65,3.553,66,2.462,67,2.524,68,2.159,69,2.524,70,2.159,71,3.519,72,2.524,73,2.159,74,2.159,75,1.088,76,3.591,77,2.203,78,3.385,79,4.113,80,2.159,81,2.524,82,2.462,83,2.524,84,2.524,85,2.203,86,2.203,87,2.039,88,2.008,89,2.462,90,2.524,91,2.524,92,2.524,93,2.524,94,1.187,95,1.749,96,3.04,97,1.299,98,1.932,99,2.203,100,1.867,101,3.553,102,1.645,103,3.553,104,2.524,105,2.462,106,4.012,107,2.524,108,1.708,109,1.466,110,2.524,111,2.462,112,2.524,113,1.899,114,1.867,115,2.462,116,1.899,117,1.932,118,1.932,119,1.932,120,1.911,121,1.932,122,1.932,123,3.467,124,4.464,125,4.464,126,4.464,127,4.464,128,4.464,129,4.464,130,0.003,131,0.003]],["title/interfaces/CByOrgan.html",[0,0.41,1008,3.397]],["body/interfaces/CByOrgan.html",[0,0.818,1,1.562,2,0.047,3,0.047,4,0.041,8,0.278,9,0.467,10,1.466,14,1.451,16,2.761,18,1.962,20,0.687,21,0.374,22,0.005,25,0.428,28,2.737,29,0.059,47,1.252,48,0.593,94,2.356,95,1.399,98,3.834,130,0.004,131,0.004,139,3.967,146,3.159,235,0.722,312,2.095,331,0.765,737,1.137,826,6.66,998,4.671,999,4.868,1000,4.868,1001,4.868,1002,4.868,1003,6.941,1004,4.868,1005,6.219,1006,4.868,1007,2.83,1008,5.743,1009,4.671]],["title/interfaces/CT.html",[0,0.41,94,1.287]],["body/interfaces/CT.html",[0,0.792,1,1.002,2,0.03,3,0.03,4,0.026,5,2.3,6,4.376,7,4.408,8,0.178,9,0.348,10,1.401,11,2.09,12,3.959,13,2.872,14,1.856,15,2.687,16,2.652,17,3.959,18,2.725,19,2.355,20,0.713,21,0.373,22,0.005,23,3.74,24,1.423,25,0.223,26,2.178,27,2.313,28,1.756,29,0.061,30,2.375,31,2.3,32,1.95,33,2.3,34,2.152,35,2.3,36,2.198,37,2.355,38,1.786,39,1.31,40,2.025,41,1.727,42,2.355,43,1.95,44,0.088,45,1.987,46,1.841,47,1.252,48,0.616,49,4.075,50,1.662,51,2.108,52,2.3,53,2.615,54,3.072,55,1.987,56,3.916,57,2.152,58,2.3,59,2.782,60,2.782,61,3.359,62,3.443,63,3.443,64,0.586,65,3.443,66,2.355,67,2.414,68,2.066,69,2.414,70,2.066,71,3.434,72,2.414,73,2.066,74,2.066,75,1.04,76,3.504,77,2.108,78,3.303,79,4.014,80,2.066,81,2.414,82,2.355,83,2.414,84,2.414,85,2.108,86,2.108,87,1.95,88,1.946,89,2.355,90,2.414,91,2.414,92,2.414,93,2.414,94,1.62,95,1.882,96,3.959,97,2.253,98,1.848,99,2.108,100,1.786,101,3.443,102,1.573,103,3.443,104,2.414,105,2.355,106,3.916,107,2.414,108,1.667,109,1.402,110,2.414,111,2.355,112,2.414,113,1.816,114,1.786,115,2.355,116,1.816,117,1.848,118,1.848,119,1.848,120,1.865,121,1.848,122,1.848,123,2.355,124,2.414,125,2.414,126,2.414,127,2.414,128,2.414,129,2.414,130,0.003,131,0.003]],["title/classes/Cell.html",[44,0.06,100,2.024]],["body/classes/Cell.html",[0,0.798,2,0.032,3,0.032,4,0.027,5,2.384,6,4.094,7,4.237,8,0.185,9,0.357,10,0.657,11,2.082,12,3.37,13,2.849,14,1.579,15,2.539,16,2.506,17,3.37,18,2.747,19,2.442,20,0.713,21,0.349,22,0.005,23,3.484,24,1.411,25,0.231,26,2.222,27,1.867,28,1.821,29,0.061,30,2.414,31,2.384,32,2.022,33,2.384,34,2.231,35,2.384,36,2.279,37,2.442,38,1.851,39,1.358,40,2.1,41,1.772,42,2.442,43,2.022,44,0.089,45,2.06,46,1.86,47,1.25,48,0.641,49,4.141,50,1.705,51,2.185,52,2.384,53,2.651,54,3.134,55,2.06,56,4.576,57,2.231,58,2.346,59,2.838,60,2.838,61,3.446,62,3.533,63,3.533,64,0.857,65,3.533,66,2.442,67,2.503,68,2.142,69,2.503,70,2.142,71,3.503,72,2.503,73,2.142,74,2.142,75,1.079,76,3.575,77,2.185,78,3.37,79,4.094,80,2.142,81,2.503,82,2.442,83,2.503,84,2.503,85,2.185,86,2.185,87,2.022,88,1.996,89,2.442,90,2.503,91,2.503,92,2.503,93,2.503,94,1.177,95,1.932,96,3.023,97,1.288,98,1.916,99,2.185,100,2.613,101,4.094,102,1.631,103,3.533,104,2.503,105,2.442,106,3.994,107,2.503,108,1.7,109,1.454,110,2.503,111,2.442,112,2.503,113,1.883,114,1.851,115,2.442,116,1.883,117,1.916,118,1.916,119,1.916,120,1.902,121,1.916,122,1.916,123,2.442,124,2.503,125,2.503,126,2.503,127,2.503,128,2.503,129,2.503,130,0.003,131,0.003,207,1.245,209,0.919,504,1.039,1010,6.47,1011,4.584,1012,4.584,1013,4.584,1014,4.584]],["title/classes/ClearSheetLogs.html",[44,0.06,1015,3.541]],["body/classes/ClearSheetLogs.html",[2,0.05,3,0.05,4,0.043,8,0.291,9,0.481,20,0.669,21,0.39,22,0.005,29,0.056,44,0.111,64,1.318,130,0.004,131,0.004,203,2.228,207,1.216,235,0.755,268,2.026,269,2.07,308,1.279,312,2.154,504,1.634,737,1.079,752,4.402,1015,6.153,1016,5.987,1017,8.708,1018,6.153,1019,3.295,1020,4.427,1021,6.153,1022,4.53,1023,1.783,1024,5.335,1025,5.624,1026,5.987,1027,5.987]],["title/classes/CloseBottomSheet.html",[44,0.06,1028,2.252]],["body/classes/CloseBottomSheet.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.124,64,1.364,130,0.003,131,0.003,203,2.351,207,0.996,235,0.553,268,1.413,269,2.184,272,2.93,308,0.936,310,1.523,312,1.305,316,2.031,331,0.791,350,1.523,382,1.483,504,1.197,559,2.906,561,3.367,606,1.356,632,1.867,737,1.154,758,2.286,759,1.391,766,3.105,767,1.997,768,1.273,1019,1.997,1028,3.205,1029,2.466,1030,7.132,1031,4.193,1032,2.303,1033,2.833,1034,2.171,1035,1.674,1036,2.372,1037,3.892,1038,3.209,1039,2.423,1040,2.372,1041,2.418,1042,2.328,1043,2.328,1044,2.372,1045,2.372,1046,2.372,1047,2.286,1048,1.674,1049,2.372,1050,2.372,1051,2.372,1052,2.096,1053,2.418,1054,2.418,1055,2.206,1056,2.328,1057,2.372,1058,2.372,1059,2.328,1060,2.372,1061,2.326,1062,2.372]],["title/classes/CloseBottomSheetDOI.html",[44,0.06,1057,2.252]],["body/classes/CloseBottomSheetDOI.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.393,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.124,64,1.364,130,0.003,131,0.003,203,2.351,207,0.995,235,0.553,268,1.412,269,2.184,272,2.928,308,0.935,310,1.521,312,1.304,316,2.029,331,0.791,350,1.521,382,1.482,504,1.195,559,2.905,561,3.365,606,1.354,632,1.95,737,1.154,758,2.283,759,1.389,766,3.105,767,1.995,768,1.272,1019,1.995,1028,2.369,1029,2.463,1031,4.192,1032,2.303,1033,2.831,1034,2.169,1035,1.672,1036,2.369,1037,3.891,1038,3.207,1039,2.422,1040,2.369,1041,2.415,1042,2.325,1043,2.325,1044,2.369,1045,2.369,1046,2.369,1047,2.283,1048,1.672,1049,2.369,1050,2.369,1051,2.369,1052,2.094,1053,2.415,1054,2.415,1055,2.203,1056,2.325,1057,3.203,1058,2.369,1059,2.325,1060,2.369,1061,2.325,1062,2.369,1063,7.127]],["title/classes/CloseCompare.html",[44,0.06,1059,2.21]],["body/classes/CloseCompare.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.125,64,1.364,130,0.003,131,0.003,203,2.352,207,0.996,235,0.554,268,1.414,269,2.184,272,2.932,308,0.937,310,1.524,312,1.307,316,2.301,331,0.792,350,1.524,382,1.485,504,1.198,559,2.907,561,3.368,606,1.357,632,1.868,737,1.12,758,2.288,759,1.392,766,3.106,767,1.999,768,1.275,1019,1.999,1028,2.374,1029,2.468,1031,4.194,1032,2.236,1033,2.835,1034,2.172,1035,1.676,1036,2.374,1037,3.893,1038,3.21,1039,2.424,1040,2.374,1041,2.42,1042,2.33,1043,2.33,1044,2.374,1045,2.374,1046,2.374,1047,2.288,1048,1.676,1049,2.374,1050,2.374,1051,2.374,1052,2.099,1053,2.42,1054,2.42,1055,2.208,1056,2.33,1057,2.374,1058,2.374,1059,3.148,1060,2.374,1061,2.328,1062,2.374,1064,7.137]],["title/classes/CloseLoading.html",[44,0.06,758,2.17]],["body/classes/CloseLoading.html",[2,0.036,3,0.036,4,0.031,8,0.209,9,0.388,10,1.146,20,0.638,21,0.402,22,0.005,25,0.404,29,0.062,44,0.124,48,0.362,64,1.355,130,0.003,131,0.003,203,2.347,207,1.116,209,1.037,235,0.542,268,1.7,269,2.18,272,2.89,308,0.918,310,1.493,312,1.28,316,2.004,331,0.781,350,1.493,382,1.454,504,1.173,559,3.1,561,3.344,606,1.329,632,1.852,737,1.112,741,2.979,758,3.047,759,1.363,766,3.089,767,1.958,768,1.248,1019,1.958,1028,2.325,1029,2.417,1031,4.174,1032,2.22,1033,2.795,1034,2.142,1035,1.641,1036,2.325,1037,3.869,1038,3.408,1039,2.409,1040,2.325,1041,2.37,1042,2.282,1043,2.282,1044,2.325,1045,2.325,1046,2.325,1047,2.24,1048,1.641,1049,2.325,1050,2.325,1051,2.325,1052,2.055,1053,2.37,1054,2.37,1055,2.162,1056,2.282,1057,2.325,1058,2.325,1059,2.282,1060,2.325,1061,2.295,1062,2.325,1065,4.036,1066,7.036,1067,5.174]],["title/classes/CloseRightSideNav.html",[44,0.06,1051,2.252]],["body/classes/CloseRightSideNav.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.393,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.124,64,1.364,130,0.003,131,0.003,203,2.351,207,0.995,235,0.553,268,1.412,269,2.184,272,2.928,308,0.935,310,1.521,312,1.304,316,2.029,331,0.791,350,1.521,382,2.003,504,1.195,559,2.905,561,3.365,606,1.354,632,1.866,737,1.12,758,2.283,759,1.389,766,3.105,767,1.995,768,1.272,1019,1.995,1028,2.369,1029,2.463,1031,4.192,1032,2.234,1033,2.831,1034,2.169,1035,1.672,1036,2.369,1037,3.891,1038,3.207,1039,2.422,1040,2.369,1041,2.415,1042,2.325,1043,2.325,1044,2.369,1045,2.369,1046,2.369,1047,2.283,1048,1.672,1049,2.369,1050,2.369,1051,3.203,1052,2.831,1053,3.265,1054,2.415,1055,2.203,1056,2.325,1057,2.369,1058,2.369,1059,2.325,1060,2.369,1061,2.325,1062,2.369,1068,7.127]],["title/classes/CloseSearch.html",[44,0.06,1062,2.252]],["body/classes/CloseSearch.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.125,64,1.364,130,0.003,131,0.003,203,2.352,207,0.996,235,0.554,268,1.414,269,2.184,272,2.932,308,0.937,310,1.524,312,1.307,316,2.032,331,0.792,350,1.524,382,1.485,504,1.198,559,2.907,561,3.368,606,1.357,632,1.868,737,1.12,758,2.288,759,1.392,766,3.106,767,1.999,768,1.275,1019,1.999,1028,2.374,1029,2.468,1031,4.194,1032,2.236,1033,2.835,1034,2.172,1035,1.676,1036,2.374,1037,3.893,1038,3.21,1039,2.424,1040,2.374,1041,2.42,1042,2.33,1043,2.33,1044,2.374,1045,2.374,1046,2.374,1047,2.288,1048,1.676,1049,2.374,1050,2.374,1051,2.374,1052,2.099,1053,2.42,1054,2.42,1055,2.208,1056,2.33,1057,2.374,1058,2.374,1059,2.33,1060,2.374,1061,2.636,1062,3.207,1069,7.137]],["title/classes/CloseSnackbar.html",[44,0.06,1045,2.252]],["body/classes/CloseSnackbar.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.125,64,1.364,130,0.003,131,0.003,203,2.352,207,0.996,235,0.554,268,1.414,269,2.184,272,3.32,308,0.937,310,1.524,312,1.307,316,2.032,331,0.792,350,1.524,382,1.485,504,1.198,559,2.907,561,3.368,606,1.357,632,1.868,737,1.12,758,2.288,759,1.392,766,3.106,767,1.999,768,1.275,1019,1.999,1028,2.374,1029,2.468,1031,4.194,1032,2.236,1033,2.835,1034,2.172,1035,1.676,1036,2.374,1037,3.893,1038,3.21,1039,2.424,1040,2.374,1041,2.42,1042,2.33,1043,2.33,1044,2.374,1045,3.207,1046,2.374,1047,2.288,1048,1.676,1049,2.374,1050,2.374,1051,2.374,1052,2.099,1053,2.42,1054,2.42,1055,2.208,1056,2.33,1057,2.374,1058,2.374,1059,2.33,1060,2.374,1061,2.328,1062,2.374,1070,7.137]],["title/components/CompareComponent.html",[250,1.355,347,1.99]],["body/components/CompareComponent.html",[2,0.028,3,0.028,4,0.042,8,0.101,9,0.226,10,1.108,11,2.1,20,0.613,21,0.342,22,0.005,24,0.617,25,0.355,29,0.015,30,2.586,44,0.03,47,0.624,48,0.559,53,0.775,58,1.865,64,0.542,95,1.879,102,2.336,108,1.173,130,0.002,131,0.002,141,2.241,147,2.034,167,1.408,181,2.582,188,0.614,202,1.456,207,1.313,209,1.487,211,2.84,215,0.51,218,1.223,219,3.689,220,1.339,232,2.752,235,0.429,236,3.032,245,2.09,247,1.447,250,1.399,251,0.998,252,1.681,253,2.743,254,1.05,255,1.05,256,0.894,258,1.991,259,2.979,260,0.688,261,2.595,262,3.962,264,1.652,266,1.652,268,1.628,282,4.413,287,0.998,298,2.749,305,5.184,308,0.726,310,0.725,316,2.556,329,1.447,331,1.018,339,1.535,341,1.71,342,1.652,343,1.05,344,2.492,345,1.05,346,1.05,347,2.369,348,1.05,349,0.998,350,2.14,351,1.05,352,0.998,353,1.05,354,0.982,355,1.05,356,0.998,357,0.894,358,1.05,359,0.998,360,1.05,361,0.998,362,1.05,363,0.998,364,1.71,365,0.998,366,1.05,367,0.998,368,1.05,369,0.982,370,1.05,371,0.966,372,1.05,373,0.998,374,1.05,375,0.998,376,1.05,377,0.998,378,1.05,379,1.015,380,1.05,381,0.998,382,0.706,383,1.05,384,0.998,385,1.665,386,1.05,387,0.998,388,2.257,389,1.05,390,0.998,391,1.05,392,1.015,393,1.05,394,0.998,395,1.05,396,1.015,397,1.05,398,0.998,399,1.05,400,0.998,401,0.936,402,1.05,403,0.998,404,0.982,405,1.05,406,1.032,407,1.05,408,0.998,409,1.05,410,0.998,411,0.998,412,1.015,413,1.548,414,1.05,415,1.05,531,1.641,548,1.961,559,1.316,572,2.504,590,3.192,591,3.256,607,1.704,635,3.192,654,3.192,698,3.779,703,2.671,724,1.762,734,2.683,737,1.181,741,2.979,742,1.28,743,1.551,766,0.82,768,0.606,924,3.397,932,4.952,989,3.397,1032,0.622,1059,2.282,1071,2.513,1072,5.174,1073,4.091,1074,5.354,1075,5.354,1076,5.174,1077,4.645,1078,3.584,1079,5.963,1080,3.673,1081,3.397,1082,5.174,1083,5.174,1084,5.963,1085,4.091,1086,4.091,1087,3.289,1088,2.08,1089,5.174,1090,2.58,1091,1.845,1092,3.397,1093,5.174,1094,2.256,1095,6.564,1096,3.678,1097,4.091,1098,3.378,1099,2.513,1100,3.779,1101,2.513,1102,2.513,1103,2.513,1104,3.673,1105,8.859,1106,2.513,1107,3.397,1108,2.513,1109,2.663,1110,2.293,1111,2.293,1112,2.33,1113,2.513,1114,2.513,1115,2.847,1116,3.287,1117,2.607,1118,2.513,1119,2.513,1120,2.513,1121,4.091,1122,2.513,1123,4.091,1124,2.513,1125,3.673,1126,5.354,1127,2.513,1128,2.087,1129,2.513,1130,2.513,1131,7.036,1132,2.513,1133,2.513,1134,2.513,1135,2.513,1136,2.37,1137,2.899,1138,3.397,1139,1.408,1140,1.307,1141,1.307,1142,1.307,1143,2.891,1144,1.489,1145,2.256,1146,4.091,1147,3.673,1148,2.513,1149,2.513,1150,4.091,1151,2.513,1152,2.513,1153,2.513,1154,4.091,1155,2.513,1156,2.513,1157,2.513,1158,2.513,1159,2.513,1160,2.513,1161,2.513,1162,2.513,1163,2.513,1164,2.513,1165,2.513,1166,2.513,1167,2.513,1168,2.513,1169,2.513,1170,2.513,1171,2.256,1172,2.513,1173,2.513,1174,1.641,1175,2.513,1176,2.513,1177,2.513,1178,2.513,1179,2.256,1180,4.645,1181,2.282,1182,2.513,1183,5.174,1184,2.513,1185,2.256,1186,2.256,1187,2.256,1188,0.982,1189,0.908,1190,2.513,1191,2.256,1192,2.513,1193,3.378,1194,5.174,1195,4.843,1196,2.513,1197,2.513,1198,2.087,1199,2.087,1200,2.087,1201,2.087,1202,1.86,1203,2.087,1204,2.087,1205,2.513,1206,2.513,1207,2.256,1208,2.087,1209,2.256,1210,2.256,1211,2.256,1212,2.513,1213,2.513,1214,2.513,1215,2.513,1216,2.513,1217,2.513,1218,2.282,1219,3.673,1220,3.397,1221,3.192,1222,3.673,1223,3.673,1224,4.952,1225,3.397,1226,3.397,1227,3.027,1228,3.673,1229,5.354,1230,3.673,1231,5.354,1232,3.397,1233,3.673,1234,2.58,1235,3.673,1236,3.673,1237,2.424,1238,3.673,1239,3.397,1240,2.891,1241,3.673,1242,3.397,1243,3.027,1244,3.397,1245,3.192,1246,3.893,1247,3.673,1248,3.021,1249,3.673,1250,3.673,1251,4.645,1252,4.091,1253,6.564,1254,2.256,1255,2.513,1256,4.05,1257,3.533,1258,2.513,1259,2.58,1260,2.671,1261,4.091,1262,2.513,1263,2.513,1264,2.256,1265,2.671,1266,4.645,1267,4.297,1268,2.513,1269,1.961,1270,1.585,1271,1.585,1272,3.673,1273,1.961,1274,1.307,1275,4.437,1276,5.137,1277,1.535,1278,1.489,1279,2.979,1280,3.508,1281,1.776,1282,1.776,1283,1.776,1284,2.691,1285,2.256,1286,3.673,1287,4.222,1288,1.776,1289,2.256,1290,2.256,1291,3.264,1292,1.535,1293,1.776,1294,2.087,1295,3.673,1296,3.508,1297,3.673,1298,4.594,1299,2.361,1300,3.641,1301,4.008,1302,4.285,1303,4.043,1304,4.043,1305,2.256,1306,3.397,1307,2.256,1308,3.533,1309,2.63,1310,3.192,1311,2.513,1312,2.256,1313,1.961,1314,3.341,1315,2.498,1316,2.256,1317,1.447,1318,2.256,1319,3.673,1320,3.027,1321,1.961,1322,1.86,1323,2.087,1324,2.087,1325,2.256,1326,2.087,1327,2.256,1328,2.256,1329,2.256,1330,2.256,1331,2.256,1332,2.256]],["title/interfaces/CompareData.html",[0,0.41,1091,1.408]],["body/interfaces/CompareData.html",[0,0.849,1,0.953,2,0.029,3,0.042,4,0.025,8,0.169,9,0.335,10,1.31,11,1.869,13,1.279,14,1.28,15,2.229,16,2.008,18,2.654,20,0.718,21,0.369,22,0.005,24,1.506,26,1.801,27,2.259,29,0.062,39,1.801,41,1.15,46,1.589,47,1.204,48,0.625,50,1.602,75,0.989,88,1.296,94,1.079,95,1.686,97,2.008,109,1.333,120,1.066,130,0.003,131,0.003,146,1.351,174,1.473,175,1.451,176,1.451,177,1.451,178,1.451,183,1.296,235,0.637,260,1.956,261,1.093,295,2.131,331,0.922,468,1.541,623,1.669,632,1.542,663,2.415,706,1.669,724,2.432,727,1.643,734,2.788,737,0.885,742,1.902,743,1.582,759,1.107,963,1.541,965,1.43,1023,2.142,1091,1.709,1109,1.59,1110,3.583,1111,3.516,1112,3.574,1115,2.956,1116,3.745,1117,3.3,1188,1.642,1189,1.518,1248,1.642,1299,2.397,1333,1.726,1334,3.472,1335,2.497,1336,1.697,1337,1.642,1338,1.726,1339,1.726,1340,1.726,1341,1.726,1342,1.726,1343,1.726,1344,2.455,1345,1.697,1346,1.687,1347,1.726,1348,1.756,1349,1.726,1350,1.697,1351,1.245,1352,1.726,1353,1.756,1354,1.756,1355,1.756,1356,1.756,1357,1.756,1358,1.756,1359,1.756,1360,1.756,1361,1.756,1362,1.726,1363,1.726,1364,2.541,1365,2.541,1366,1.756,1367,1.37,1368,1.37,1369,1.37,1370,1.726,1371,1.697,1372,1.726,1373,2.497,1374,2.541,1375,2.541,1376,1.726,1377,1.756,1378,1.615,1379,1.756,1380,1.756,1381,1.756,1382,1.756,1383,1.756,1384,1.669,1385,2.935,1386,1.726,1387,1.756,1388,1.756,1389,1.669,1390,1.756,1391,1.756,1392,2.497,1393,1.756,1394,2.497,1395,1.697,1396,2.497,1397,1.756,1398,1.756,1399,1.697,1400,1.801,1401,1.726,1402,2.497,1403,1.756,1404,1.756,1405,1.756,1406,1.756,1407,1.756,1408,1.756,1409,1.756,1410,1.726,1411,1.669,1412,1.262,1413,1.756]],["title/modules/CompareModule.html",[184,1.108,1414,3.708]],["body/modules/CompareModule.html",[2,0.046,3,0.046,4,0.049,22,0.005,25,0.527,29,0.04,44,0.08,130,0.004,131,0.004,184,1.479,186,2.38,187,2.531,188,1.633,189,3.425,190,2.531,191,2.453,192,3.372,198,3.147,199,2.491,200,2.38,214,3.051,215,1.357,243,3.098,278,3.255,347,4.144,401,2.491,424,6.482,456,4.725,457,5.217,1139,3.747,1414,7.751,1415,6.003,1416,6.003,1417,6.003,1418,6.003,1419,6.261,1420,6.062,1421,6.687,1422,3.303,1423,2.613,1424,6.687,1425,5.429,1426,4.366,1427,4.135,1428,5.429,1429,4.366,1430,5.429,1431,5.244,1432,4.948,1433,4.533,1434,4.948,1435,3.885,1436,3.124,1437,7.466,1438,6.003]],["title/interfaces/CompareReport.html",[0,0.41,1402,2.058]],["body/interfaces/CompareReport.html",[0,0.849,1,0.959,2,0.029,3,0.042,4,0.025,8,0.17,9,0.337,11,1.873,13,1.288,14,1.287,15,2.236,16,2.016,18,2.658,20,0.718,21,0.37,22,0.005,24,1.488,26,1.81,27,2.266,29,0.062,39,1.81,41,1.158,46,1.594,47,1.206,48,0.626,50,1.61,75,0.995,88,1.305,94,1.087,95,1.24,97,2.016,109,1.342,120,1.073,130,0.003,131,0.003,146,1.36,174,1.483,175,1.461,176,1.461,177,1.461,178,1.461,183,1.302,235,0.64,260,1.964,261,1.1,295,2.142,331,0.924,468,1.552,623,1.68,632,1.548,663,2.427,706,1.68,724,2.836,727,1.652,734,2.795,737,0.889,742,1.911,743,1.589,759,1.115,963,1.552,965,1.44,1023,2.147,1091,1.189,1109,1.601,1110,3.338,1111,3.203,1112,3.255,1115,2.961,1116,3.392,1117,2.427,1188,1.653,1189,1.528,1248,1.653,1299,2.407,1333,1.738,1334,2.553,1335,2.51,1336,1.708,1337,1.653,1338,1.738,1339,1.738,1340,1.738,1341,1.738,1342,1.738,1343,1.738,1344,2.467,1345,1.708,1346,1.695,1347,1.738,1348,1.768,1349,1.738,1350,1.708,1351,1.253,1352,1.738,1353,1.768,1354,1.768,1355,1.768,1356,1.768,1357,1.768,1358,1.768,1359,1.768,1360,1.768,1361,1.768,1362,1.738,1363,1.738,1364,2.553,1365,2.553,1366,1.768,1367,1.38,1368,1.38,1369,1.38,1370,1.738,1371,1.708,1372,1.738,1373,2.51,1374,2.553,1375,2.553,1376,1.738,1377,1.768,1378,1.626,1379,1.768,1380,1.768,1381,1.768,1382,1.768,1383,1.768,1384,1.68,1385,2.946,1386,1.738,1387,1.768,1388,1.768,1389,1.68,1390,1.768,1391,1.768,1392,2.51,1393,1.768,1394,2.51,1395,1.708,1396,2.51,1397,1.768,1398,1.768,1399,1.708,1400,1.81,1401,1.738,1402,2.946,1403,3.282,1404,3.282,1405,3.282,1406,3.282,1407,3.282,1408,3.282,1409,3.282,1410,1.738,1411,1.68,1412,1.27,1413,1.768]],["title/interfaces/CompareReportData.html",[0,0.41,1410,2.058]],["body/interfaces/CompareReportData.html",[0,0.853,1,1.013,2,0.031,3,0.044,4,0.027,8,0.18,9,0.351,11,1.596,13,1.36,14,1.338,15,2.293,16,2.078,18,2.694,20,0.717,21,0.282,22,0.005,24,1.501,26,1.883,27,2.324,29,0.062,39,1.883,41,1.224,46,1.635,47,1.215,48,0.636,50,1.674,75,1.052,88,1.379,94,1.148,95,1.29,97,2.078,109,1.417,120,1.133,130,0.003,131,0.003,146,1.437,174,1.567,175,1.544,176,1.544,177,1.544,178,1.544,183,1.355,235,0.666,260,2.025,261,1.163,295,2.228,331,1.032,468,1.639,623,1.775,632,1.596,663,2.524,706,1.775,724,2.518,727,1.718,734,2.132,737,0.917,742,1.988,743,1.653,759,1.177,963,1.639,965,1.521,1023,2.187,1091,1.256,1109,1.691,1110,3.4,1111,3.272,1112,3.325,1115,2.804,1116,3.455,1117,2.524,1188,1.746,1189,1.614,1248,1.746,1299,2.482,1333,1.836,1334,2.656,1335,2.61,1336,1.805,1337,1.746,1338,1.836,1339,1.836,1340,1.836,1341,1.836,1342,1.836,1343,1.836,1344,2.566,1345,1.805,1346,1.763,1347,1.836,1348,1.868,1349,1.836,1350,1.805,1351,1.324,1352,1.836,1353,1.868,1354,1.868,1355,1.868,1356,1.868,1357,1.868,1358,1.868,1359,1.868,1360,1.868,1361,1.868,1362,1.836,1363,1.836,1364,2.656,1365,2.656,1366,1.868,1367,1.458,1368,1.458,1369,1.458,1370,1.836,1371,1.805,1372,1.836,1373,2.61,1374,2.656,1375,2.656,1376,1.836,1377,1.868,1378,1.718,1379,1.868,1380,1.868,1381,1.868,1382,1.868,1383,1.868,1384,1.775,1385,3.038,1386,1.836,1387,1.868,1388,1.868,1389,1.775,1390,1.868,1391,1.868,1392,2.61,1393,1.868,1394,2.61,1395,1.805,1396,2.61,1397,1.868,1398,1.868,1399,1.805,1400,1.883,1401,1.836,1402,3.308,1403,1.868,1404,1.868,1405,1.868,1406,1.868,1407,1.868,1408,1.868,1409,1.868,1410,2.61,1411,1.775,1412,1.342,1413,1.868]],["title/injectables/ConfigService.html",[431,3.06,712,2.094]],["body/injectables/ConfigService.html",[2,0.042,3,0.042,4,0.036,8,0.246,9,0.433,10,0.874,21,0.232,22,0.005,25,0.462,29,0.036,44,0.073,48,0.427,58,2.864,64,0.808,130,0.004,131,0.004,183,1.849,207,1.354,209,1.223,215,1.238,235,0.993,269,1.269,308,1.68,331,1.016,342,3.698,431,4.79,434,4.757,491,8.854,712,3.279,714,3.417,737,0.972,768,1.471,775,4.757,929,4.757,1023,2.265,1378,2.345,1439,6.098,1440,8.673,1441,8.673,1442,8.673,1443,8.673,1444,5.064,1445,7.604,1446,7.845,1447,6.515,1448,7.845,1449,7.845,1450,7.043,1451,7.845,1452,9.696,1453,6.098,1454,7.845,1455,7.845,1456,6.098,1457,7.845,1458,7.845,1459,9.156,1460,9.156,1461,9.156,1462,9.156,1463,9.156,1464,7.845,1465,6.098,1466,7.845,1467,7.043,1468,7.845,1469,6.098,1470,6.098,1471,5.064,1472,5.064]],["title/interfaces/ConfigurationOptions.html",[0,0.41,1386,2.058]],["body/interfaces/ConfigurationOptions.html",[0,0.85,1,0.971,2,0.029,3,0.042,4,0.025,8,0.173,9,0.34,11,1.558,13,1.303,14,1.298,15,2.249,16,2.029,18,2.666,20,0.718,21,0.362,22,0.005,24,1.491,26,1.826,27,2.279,29,0.062,39,1.826,41,1.172,46,1.603,47,1.208,48,0.628,50,1.624,75,1.007,88,1.321,94,1.1,95,1.251,97,2.029,109,1.358,120,1.086,130,0.003,131,0.003,146,1.377,174,1.501,175,1.479,176,1.479,177,1.479,178,1.479,183,1.314,235,0.646,260,1.977,261,1.114,295,2.16,331,0.929,468,1.57,623,1.7,632,1.558,663,2.448,706,1.7,724,2.458,727,1.666,734,2.068,737,0.895,742,1.928,743,1.603,759,1.128,963,1.57,965,1.457,1023,2.38,1091,1.203,1109,1.62,1110,3.6,1111,3.218,1112,3.27,1115,2.764,1116,3.406,1117,2.448,1188,1.673,1189,1.547,1248,1.673,1299,2.423,1333,1.758,1334,2.575,1335,2.531,1336,1.729,1337,1.673,1338,1.758,1339,1.758,1340,1.758,1341,1.758,1342,1.758,1343,1.758,1344,2.489,1345,1.729,1346,1.709,1347,1.758,1348,1.789,1349,1.758,1350,1.729,1351,1.268,1352,1.758,1353,1.789,1354,1.789,1355,1.789,1356,1.789,1357,1.789,1358,1.789,1359,1.789,1360,1.789,1361,1.789,1362,1.758,1363,1.758,1364,2.575,1365,2.575,1366,1.789,1367,1.396,1368,1.396,1369,1.396,1370,1.758,1371,1.729,1372,1.758,1373,2.531,1374,2.575,1375,2.575,1376,1.758,1377,1.789,1378,1.646,1379,1.789,1380,1.789,1381,1.789,1382,1.789,1383,1.789,1384,1.7,1385,3.776,1386,2.531,1387,3.301,1388,3.301,1389,3.137,1390,3.301,1391,3.301,1392,3.244,1393,1.789,1394,2.531,1395,1.729,1396,2.531,1397,1.789,1398,1.789,1399,1.729,1400,1.826,1401,1.758,1402,2.531,1403,1.789,1404,1.789,1405,1.789,1406,1.789,1407,1.789,1408,1.789,1409,1.789,1410,1.758,1411,1.7,1412,1.286,1413,1.789]],["title/injectables/ConsentService.html",[195,3.06,712,2.094]],["body/injectables/ConsentService.html",[2,0.047,3,0.047,4,0.041,8,0.278,9,0.468,10,0.989,21,0.35,22,0.005,23,3.741,25,0.428,29,0.05,44,0.082,48,0.483,64,1.216,130,0.004,131,0.004,195,5.177,202,3.017,207,1.372,209,1.384,211,2.929,215,1.401,235,1.03,258,3.358,269,1.909,298,3.84,308,1.504,572,3.017,712,3.543,714,3.866,1140,3.589,1473,6.195,1474,7.632,1475,9.179,1476,8.479,1477,9.574,1478,8.479,1479,8.479,1480,6.9,1481,6.9,1482,6.9,1483,8.479,1484,5.748,1485,6.9,1486,5.106,1487,5.106,1488,6.9,1489,4.678,1490,6.9,1491,8.479,1492,6.9,1493,6.9]],["title/components/ControlPaneComponent.html",[250,1.355,349,1.99]],["body/components/ControlPaneComponent.html",[2,0.017,3,0.017,4,0.024,8,0.101,9,0.226,10,1.063,11,1.117,14,0.53,20,0.271,21,0.374,22,0.005,23,2.022,25,0.458,29,0.015,30,2.907,38,1.653,41,2.251,44,0.03,45,2.326,46,1.57,48,0.628,50,1.854,53,1.263,54,3.342,58,1.866,59,2.808,60,2.808,64,0.542,73,2.418,75,1.218,108,0.57,109,1.298,114,2.409,120,0.638,130,0.002,131,0.002,138,2.326,141,1.772,142,2.293,143,2.293,179,2.631,183,1.705,188,0.614,202,1.456,207,1.375,209,1.488,211,2.763,215,0.51,232,0.895,235,0.542,250,1.399,251,0.999,252,1.681,253,1.71,254,1.051,255,1.051,256,2.123,258,1.992,259,2.98,260,0.689,261,2.595,262,3.973,263,2.775,264,1.653,266,1.653,268,1.7,287,0.999,298,3.213,300,1.705,302,5.651,305,1.586,306,5.651,308,0.918,310,0.725,312,1.012,323,1.373,329,1.448,331,0.574,341,1.71,342,1.653,343,1.051,344,2.493,345,1.051,346,1.051,347,0.999,348,1.051,349,2.369,350,2.231,351,1.051,352,0.999,353,1.051,354,0.983,355,1.051,356,0.999,357,0.895,358,1.051,359,0.999,360,1.051,361,0.999,362,1.051,363,0.999,364,1.71,365,0.999,366,1.051,367,0.999,368,1.051,369,0.983,370,1.051,371,0.967,372,1.051,373,0.999,374,1.051,375,0.999,376,1.051,377,0.999,378,1.051,379,1.016,380,1.051,381,0.999,382,0.707,383,1.051,384,0.999,385,0.638,386,1.051,387,0.999,388,1.549,389,1.051,390,0.999,391,1.051,392,1.016,393,1.051,394,0.999,395,1.051,396,1.016,397,1.051,398,0.999,399,1.051,400,0.999,401,0.937,402,1.051,403,0.999,404,0.983,405,1.051,406,1.033,407,1.051,408,0.999,409,1.051,410,0.999,411,0.999,412,1.016,413,0.952,414,1.051,415,1.051,431,5.02,444,1.448,452,1.777,472,1.962,473,1.962,474,1.705,475,1.861,531,2.672,560,1.951,565,1.199,572,2.123,646,3.749,678,1.777,699,2.035,703,1.642,705,1.861,711,1.861,713,4.639,720,1.777,721,5.221,725,4.844,727,2.455,728,4.011,729,4.654,737,0.814,742,0.787,743,0.654,745,3.355,754,2.081,757,1.705,760,1.861,761,1.25,765,1.308,766,2.296,767,0.952,768,0.607,769,1.199,777,1.777,824,2.418,892,5.355,908,6.319,914,5.464,948,6.482,961,1.777,964,1.962,970,2.467,971,2.418,972,2.241,973,2.467,974,2.467,975,2.467,1022,1.308,1042,1.805,1043,1.805,1048,0.797,1088,2.081,1091,0.707,1098,6.185,1136,1.875,1140,1.308,1221,1.962,1227,1.861,1237,1.49,1256,2.826,1257,2.425,1278,1.49,1284,1.308,1287,1.373,1291,1.25,1292,1.535,1314,1.409,1315,2.499,1317,1.448,1367,1.688,1368,1.688,1369,2.42,1494,8.873,1495,8.207,1496,2.514,1497,5.176,1498,4.093,1499,5.176,1500,5.176,1501,2.652,1502,4.647,1503,5.894,1504,4.093,1505,4.093,1506,4.093,1507,5.965,1508,5.965,1509,5.965,1510,4.093,1511,2.757,1512,5.122,1513,4.093,1514,2.514,1515,4.093,1516,2.514,1517,4.093,1518,2.514,1519,4.093,1520,2.514,1521,2.514,1522,2.514,1523,2.514,1524,4.093,1525,2.514,1526,4.093,1527,2.514,1528,2.514,1529,4.093,1530,2.514,1531,2.514,1532,4.489,1533,4.093,1534,2.514,1535,3.674,1536,2.514,1537,2.514,1538,4.093,1539,2.514,1540,4.093,1541,2.514,1542,2.514,1543,4.093,1544,2.514,1545,4.093,1546,2.514,1547,3.674,1548,2.514,1549,2.514,1550,4.093,1551,2.514,1552,3.674,1553,2.514,1554,2.514,1555,2.514,1556,4.093,1557,2.514,1558,2.514,1559,1.839,1560,1.13,1561,1.109,1562,2.088,1563,1.962,1564,2.514,1565,2.514,1566,2.514,1567,5.355,1568,2.514,1569,5.965,1570,2.514,1571,2.514,1572,2.514,1573,2.514,1574,2.257,1575,2.257,1576,2.514,1577,2.514,1578,2.892,1579,3.674,1580,2.514,1581,2.514,1582,2.088,1583,2.514,1584,2.514,1585,2.514,1586,2.514,1587,2.514,1588,2.697,1589,2.514,1590,2.514,1591,4.093,1592,2.514,1593,2.514,1594,2.514,1595,2.514,1596,2.514,1597,4.093,1598,4.093,1599,1.875,1600,4.093,1601,2.514,1602,5.176,1603,5.176,1604,2.514,1605,5.965,1606,4.038,1607,4.093,1608,5.965,1609,6.351,1610,6.319,1611,6.319,1612,4.647,1613,2.514,1614,5.176,1615,2.514,1616,2.514,1617,2.514,1618,4.093,1619,4.093,1620,3.674,1621,4.093,1622,2.514,1623,2.514,1624,4.093,1625,2.514,1626,5.176,1627,4.093,1628,2.514,1629,2.514,1630,2.514,1631,2.514,1632,2.088,1633,2.088,1634,2.088,1635,2.088,1636,2.088,1637,2.514,1638,2.088,1639,2.257,1640,2.514,1641,1.962,1642,2.514,1643,2.514,1644,2.514,1645,4.647,1646,2.514,1647,2.514,1648,2.514,1649,2.514,1650,2.514,1651,2.514,1652,2.514,1653,2.514,1654,2.514,1655,2.514,1656,2.514,1657,4.093,1658,2.514,1659,2.514,1660,2.514,1661,2.514,1662,2.514,1663,1.962,1664,2.514,1665,4.093,1666,4.093,1667,1.535,1668,1.777,1669,2.514,1670,2.514,1671,3.674]],["title/modules/ControlPaneModule.html",[184,1.108,1672,3.708]],["body/modules/ControlPaneModule.html",[2,0.046,3,0.046,4,0.04,22,0.005,25,0.521,29,0.04,44,0.08,130,0.004,131,0.004,184,1.477,186,2.376,187,2.527,188,1.631,189,3.423,190,2.527,191,2.45,192,3.37,198,3.144,199,2.488,200,2.376,214,3.048,215,1.356,243,3.095,284,4.211,349,4.144,350,1.927,494,6.149,1420,6.06,1422,3.3,1423,2.609,1435,3.882,1436,3.12,1494,5.995,1495,5.546,1672,7.837,1673,5.995,1674,5.995,1675,5.995,1676,5.995,1677,7.344,1678,7.344,1679,7.013,1680,7.344,1681,6.678,1682,6.678,1683,5.995,1684,6.678,1685,5.546,1686,6.678,1687,6.678,1688,6.678,1689,6.678]],["title/modules/ControlsModule.html",[184,1.108,1677,3.708]],["body/modules/ControlsModule.html",[2,0.048,3,0.048,4,0.041,22,0.005,25,0.527,29,0.041,44,0.083,130,0.004,131,0.004,184,1.543,186,2.483,187,2.64,188,1.704,189,3.491,190,2.64,191,2.559,192,3.436,198,3.231,199,2.599,200,2.483,214,3.132,215,1.416,243,2.599,278,3.396,411,4.167,412,2.818,561,2.599,1139,3.909,1422,3.391,1423,2.726,1425,5.573,1426,4.555,1427,4.245,1428,5.573,1429,4.555,1430,5.573,1431,5.383,1435,3.988,1436,3.26,1677,7.517,1690,6.264,1691,6.264,1692,6.264,1693,6.977,1694,6.264,1695,8.537,1696,6.977,1697,5.573,1698,4.555,1699,7.664,1700,6.264]],["title/interfaces/DD.html",[0,0.41,137,3.397]],["body/interfaces/DD.html",[0,0.758,1,1.289,2,0.039,3,0.039,4,0.034,8,0.229,9,0.414,11,1.81,12,3.369,13,1.731,14,1.198,15,2.388,16,2.357,17,3.369,20,0.696,21,0.32,22,0.005,23,2.929,24,0.858,25,0.378,26,2.221,27,2.163,28,2.259,29,0.06,30,2.745,32,2.508,38,2.297,40,2.605,41,1.557,44,0.068,46,1.155,47,1.248,48,0.679,50,2.21,51,2.711,53,2.313,54,2.377,55,2.556,58,2.345,59,3.174,60,3.174,64,0.754,68,2.657,70,2.657,71,2.657,73,2.657,75,1.764,76,2.711,77,2.711,78,2.556,80,2.657,85,2.711,86,2.711,87,4.086,88,2.588,94,1.461,95,1.702,96,4.165,97,1.598,99,2.711,100,2.297,102,2.668,130,0.003,131,0.003,132,3.856,133,3.856,134,4.019,135,3.133,136,4.019,137,5.685,138,3.768,139,3.274,140,5.082,141,2.463,142,3.187,143,3.187,144,3.274,145,3.369,146,1.829,147,4.17,148,5.475,149,3.473,150,3.473,151,3.713,152,4.019,153,3.587,154,4.019,155,4.019,156,4.019,157,4.019,158,3.587,159,4.019,160,4.019,161,4.019,162,3.856,163,3.856,164,4.019,165,4.019,166,4.019,167,3.187,168,3.587,169,3.713,170,3.587,171,3.713,172,3.713,173,3.713,174,1.994,175,1.965,176,1.965,177,1.965,178,1.965,179,3.306,180,4.894,181,3.246,182,3.587,183,1.213]],["title/interfaces/DOI.html",[0,0.41,632,1.082]],["body/interfaces/DOI.html",[0,0.852,1,1.001,2,0.03,3,0.043,4,0.026,8,0.178,9,0.348,11,1.585,13,1.343,14,1.326,15,2.581,16,2.064,18,2.686,20,0.718,21,0.323,22,0.005,24,1.498,26,1.866,27,2.311,29,0.062,39,1.866,41,1.209,46,1.84,47,1.213,48,0.634,50,1.66,75,1.038,88,1.362,94,1.134,95,1.279,97,2.064,109,1.4,120,1.119,130,0.003,131,0.003,146,1.419,174,1.547,175,1.525,176,1.525,177,1.525,178,1.525,183,1.343,235,0.66,260,2.011,261,1.148,295,2.208,331,0.94,468,1.619,623,1.753,632,1.956,663,2.502,706,1.753,724,2.5,727,1.703,734,2.114,737,0.91,742,1.97,743,1.639,759,1.163,963,1.619,965,1.503,1023,2.178,1091,1.24,1109,1.67,1110,3.386,1111,3.256,1112,3.309,1115,2.793,1116,3.441,1117,2.502,1188,1.725,1189,1.594,1248,1.725,1299,2.464,1333,1.813,1334,2.632,1335,2.587,1336,1.782,1337,1.725,1338,1.813,1339,1.813,1340,1.813,1341,1.813,1342,1.813,1343,1.813,1344,2.544,1345,1.782,1346,1.747,1347,1.813,1348,1.844,1349,1.813,1350,1.782,1351,1.308,1352,1.813,1353,1.844,1354,1.844,1355,1.844,1356,1.844,1357,1.844,1358,1.844,1359,1.844,1360,1.844,1361,1.844,1362,1.813,1363,1.813,1364,2.632,1365,2.632,1366,1.844,1367,1.439,1368,1.439,1369,1.439,1370,1.813,1371,1.782,1372,1.813,1373,2.587,1374,2.632,1375,2.632,1376,1.813,1377,1.844,1378,1.697,1379,1.844,1380,1.844,1381,1.844,1382,1.844,1383,1.844,1384,1.753,1385,3.017,1386,1.813,1387,1.844,1388,1.844,1389,1.753,1390,1.844,1391,1.844,1392,2.587,1393,1.844,1394,2.587,1395,1.782,1396,2.587,1397,1.844,1398,1.844,1399,1.782,1400,1.866,1401,1.813,1402,2.587,1403,1.844,1404,1.844,1405,1.844,1406,1.844,1407,1.844,1408,1.844,1409,1.844,1410,1.813,1411,1.753,1412,1.325,1413,1.844]],["title/classes/Data.html",[44,0.06,331,0.556]],["body/classes/Data.html",[2,0.02,3,0.063,4,0.017,8,0.117,9,0.254,10,0.93,21,0.38,22,0.005,25,0.288,29,0.017,44,0.035,45,3.867,46,1.782,48,0.686,49,2.902,53,0.898,55,1.308,56,2.452,57,1.417,59,1.102,60,1.102,64,0.386,74,3.032,75,2.271,130,0.002,131,0.002,135,2.954,141,3.534,149,5.602,150,5.602,167,2.579,168,2.903,181,1.261,183,0.981,202,1.638,203,1.279,207,1.363,209,1.301,211,3.335,230,3.543,232,3.435,234,4.225,241,6.777,256,3.177,295,1.021,331,1.018,504,0.66,534,4.452,550,2.916,551,3.032,560,3.093,565,2.194,571,3.117,572,1.036,595,3.406,607,4.399,609,2.154,623,2.808,639,2.154,646,5.142,664,5.126,683,7.619,725,5.914,727,2.555,733,6.367,734,1.545,737,1.066,768,0.702,769,1.388,776,3.005,926,7.146,979,6.367,1048,2.729,1061,1.862,1221,5.863,1225,6.241,1304,3.12,1367,0.949,1368,0.949,1369,0.949,1395,1.859,1400,2.418,1588,3.352,1701,2.911,1702,4.603,1703,4.603,1704,6.489,1705,6.489,1706,6.489,1707,6.489,1708,6.489,1709,6.489,1710,6.489,1711,6.489,1712,6.489,1713,6.489,1714,6.489,1715,6.489,1716,6.489,1717,6.489,1718,6.489,1719,6.489,1720,6.489,1721,4.603,1722,4.603,1723,2.65,1724,10.327,1725,3.406,1726,4.603,1727,2.911,1728,4.603,1729,2.911,1730,4.802,1731,5.126,1732,4.603,1733,5.709,1734,2.911,1735,2.911,1736,3.822,1737,2.911,1738,3.822,1739,2.911,1740,9.082,1741,2.911,1742,2.911,1743,5.561,1744,2.911,1745,5.062,1746,2.911,1747,2.911,1748,2.911,1749,2.911,1750,7.725,1751,2.911,1752,2.911,1753,2.911,1754,2.911,1755,2.911,1756,2.911,1757,2.911,1758,6.489,1759,6.489,1760,6.489,1761,2.911,1762,2.911,1763,2.911,1764,2.417,1765,2.911,1766,2.911,1767,2.911,1768,2.911,1769,2.911,1770,2.911,1771,2.911,1772,2.911,1773,2.911,1774,2.911,1775,2.911,1776,2.911,1777,2.911,1778,2.911,1779,2.911,1780,2.911,1781,2.911,1782,2.911,1783,6.789,1784,2.911,1785,2.911,1786,2.613,1787,2.911,1788,2.613,1789,2.613,1790,2.911,1791,2.911,1792,2.911,1793,5.709,1794,5.126,1795,5.126,1796,4.603,1797,2.613,1798,4.603,1799,4.603,1800,4.603,1801,4.603,1802,4.603,1803,4.603,1804,4.603,1805,4.603,1806,4.603,1807,2.911,1808,2.911,1809,2.911,1810,8.604,1811,4.603,1812,2.911,1813,4.603,1814,2.911,1815,4.603,1816,2.911,1817,4.603,1818,2.911,1819,6.489,1820,2.911,1821,2.911,1822,2.911,1823,2.911,1824,2.911,1825,2.911,1826,2.911,1827,2.911,1828,2.911]],["title/components/DebugLogsComponent.html",[250,1.355,352,1.99]],["body/components/DebugLogsComponent.html",[2,0.033,3,0.033,4,0.04,7,2.492,8,0.193,11,1.793,21,0.293,22,0.005,25,0.388,29,0.028,44,0.057,48,0.467,58,2.402,102,1.705,108,1.086,130,0.003,131,0.003,151,3.128,181,2.075,188,1.17,207,1.072,215,0.973,250,2.076,251,1.903,252,2.741,253,2.002,254,2.002,255,2.002,256,1.705,260,1.312,261,2.752,262,4.202,264,2.695,266,2.695,287,1.903,310,2.773,341,2.789,342,2.695,343,2.002,344,3.471,345,2.002,346,2.002,347,1.903,348,2.002,349,1.903,350,1.382,351,2.002,352,3.299,353,2.002,354,1.872,355,2.002,356,1.903,357,1.705,358,2.002,359,1.903,360,2.002,361,1.903,362,2.002,363,1.903,364,2.789,365,1.903,366,2.002,367,1.903,368,2.002,369,1.872,370,2.002,371,1.842,372,2.002,373,1.903,374,2.002,375,1.903,376,2.002,377,1.903,378,2.002,379,1.935,380,2.002,381,1.903,382,1.346,383,2.002,384,1.903,385,1.215,386,2.002,387,1.903,388,2.526,389,2.002,390,1.903,391,2.002,392,1.935,393,2.002,394,1.903,395,2.002,396,1.935,397,2.002,398,1.903,399,2.002,400,1.903,401,1.785,402,2.002,403,1.903,404,1.872,405,2.002,406,1.968,407,2.002,408,1.903,409,2.002,410,1.903,411,1.903,412,1.935,413,1.813,414,2.002,415,2.002,559,1.541,572,1.705,698,3.842,699,2.382,703,3.128,737,0.952,742,2.088,743,2.272,766,3.357,768,1.156,1019,3.581,1020,2.436,1022,2.492,1032,1.185,1035,1.52,1048,3.087,1088,3.393,1090,4.209,1100,4.421,1136,3.518,1137,3.739,1246,5.014,1259,3.021,1260,3.128,1265,5.014,1270,4.209,1271,4.209,1274,3.995,1275,5.238,1276,4.075,1277,2.925,1278,3.953,1279,5.206,1280,5.206,1287,4.937,1291,3.319,1292,2.925,1298,5.014,1299,1.608,1300,2.925,1302,3.128,1303,3.248,1304,3.248,1308,3.953,1309,2.436,1324,5.542,1723,4.421,1829,7.457,1830,6.897,1831,4.791,1832,7.68,1833,6.674,1834,7.68,1835,4.791,1836,4.791,1837,4.791,1838,8.306,1839,3.385,1840,4.791,1841,4.791,1842,5.904,1843,3.738,1844,4.791,1845,4.301,1846,5.991,1847,3.738,1848,4.791,1849,4.791,1850,3.545,1851,4.791,1852,4.301,1853,4.301,1854,2.838,1855,4.301,1856,3.128,1857,3.545]],["title/modules/DebugLogsModule.html",[184,1.108,1858,3.708]],["body/modules/DebugLogsModule.html",[2,0.047,3,0.047,4,0.04,22,0.005,25,0.526,29,0.04,44,0.081,130,0.004,131,0.004,184,1.503,186,2.419,187,2.572,188,1.66,189,3.45,190,2.572,191,2.493,192,3.397,198,3.179,199,2.532,200,2.419,214,3.081,215,1.38,243,3.129,278,3.308,310,1.961,352,4.153,401,2.532,1139,3.808,1419,6.286,1420,6.086,1422,3.337,1423,2.656,1425,5.484,1426,4.437,1427,4.177,1428,5.484,1429,4.437,1430,5.484,1431,5.297,1432,5.029,1433,4.607,1434,5.029,1829,6.102,1830,5.644,1858,7.703,1859,6.102,1860,6.796,1861,6.102,1862,6.102,1863,6.796,1864,6.796,1865,7.541,1866,6.102,1867,6.553,1868,5.029]],["title/interfaces/Degree.html",[0,0.41,87,2.21]],["body/interfaces/Degree.html",[0,0.802,1,1.067,2,0.032,3,0.032,4,0.028,5,2.447,6,4.153,7,4.286,8,0.19,9,0.364,10,0.944,11,2.033,12,3.418,13,2.737,14,1.602,15,2.56,16,2.527,17,3.418,18,2.629,19,2.506,20,0.713,21,0.314,22,0.005,23,3.513,24,1.392,25,0.238,26,2.57,27,1.901,28,1.869,29,0.061,30,2.442,31,2.447,32,2.075,33,2.447,34,2.29,35,2.447,36,2.34,37,2.506,38,1.9,39,1.394,40,2.155,41,1.805,42,2.506,43,2.075,44,0.091,45,2.114,46,1.969,47,1.253,48,0.67,49,4.189,50,1.736,51,2.243,52,2.447,53,2.677,54,3.179,55,2.114,56,4.051,57,2.29,58,2.379,59,2.878,60,2.878,61,3.51,62,3.598,63,3.598,64,0.623,65,3.598,66,2.506,67,2.569,68,2.198,69,2.569,70,2.198,71,3.553,72,2.569,73,2.198,74,2.198,75,1.107,76,3.626,77,2.243,78,3.418,79,4.153,80,2.198,81,2.569,82,2.506,83,2.569,84,2.569,85,2.243,86,2.243,87,2.906,88,2.677,89,2.506,90,2.569,91,2.569,92,2.569,93,2.569,94,1.209,95,1.761,96,3.079,97,1.322,98,1.966,99,2.243,100,1.9,101,3.598,102,1.674,103,3.598,104,2.569,105,2.506,106,4.051,107,2.569,108,1.724,109,1.492,110,2.569,111,2.506,112,2.569,113,1.933,114,1.9,115,2.506,116,1.933,117,1.966,118,1.966,119,1.966,120,1.929,121,1.966,122,1.966,123,2.506,124,2.569,125,2.569,126,2.569,127,2.569,128,2.569,129,2.569,130,0.003,131,0.003]],["title/classes/DeleteCompareSheet.html",[44,0.06,1869,2.295]],["body/classes/DeleteCompareSheet.html",[2,0.047,3,0.034,4,0.029,8,0.2,9,0.377,10,0.71,20,0.631,21,0.4,22,0.005,24,0.747,25,0.395,29,0.062,44,0.124,47,1.016,48,0.347,64,1.211,108,1.123,130,0.003,131,0.003,183,1.456,203,2.338,207,1.091,209,0.993,235,0.519,268,1.89,269,2.172,308,0.878,312,1.933,316,2.226,318,2.958,331,1.115,385,1.256,504,1.123,606,2.517,632,1.687,727,1.846,737,1.291,768,1.195,1007,2.035,1023,1.225,1032,1.689,1034,2.079,1035,1.571,1039,2.657,1087,2.107,1091,2.368,1181,2.184,1218,3.012,1346,1.894,1351,2.023,1412,2.051,1501,2,1559,2.226,1560,2.226,1561,2.184,1588,2.035,1599,2.269,1869,3.128,1870,2.314,1871,4.953,1872,6.829,1873,4.953,1874,2.314,1875,2.184,1876,4.351,1877,2.269,1878,2.314,1879,2.226,1880,2.314,1881,2.269,1882,2.805,1883,2.314,1884,2.269,1885,2.269,1886,2.269,1887,2.269,1888,3.19,1889,2.269,1890,2.226,1891,2.269,1892,2.269,1893,2.226,1894,2.184,1895,2.269,1896,2.226,1897,2.226,1898,2.269,1899,2.269,1900,2.314,1901,2.269,1902,2.314,1903,2.314,1904,2.314]],["title/classes/DiscrepencyId.html",[44,0.06,1368,1.634]],["body/classes/DiscrepencyId.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,10,0.78,14,1.147,20,0.36,21,0.395,22,0.005,24,0.821,25,0.414,29,0.06,44,0.121,46,1.666,47,1.057,48,0.381,64,1.161,75,1.281,95,1.478,113,3.371,114,3.876,116,2.237,117,2.276,118,2.276,119,2.276,120,2.081,121,2.276,122,2.276,130,0.003,131,0.003,135,3.044,138,3.273,179,3.212,183,1.868,203,2.295,207,1.146,209,1.092,235,0.571,268,2.019,269,2.132,308,0.966,331,0.911,385,1.381,504,1.235,550,3.273,551,2.544,560,4.575,565,2.596,571,3.212,606,2.632,728,3.472,737,0.675,743,2.135,745,3.472,746,3.545,754,2.768,755,2.768,756,2.832,761,2.708,765,2.832,769,2.596,824,3.834,970,3.912,971,3.834,972,3.554,973,3.912,974,3.912,975,3.912,1032,1.347,1039,2.569,1048,2.897,1061,2.375,1367,1.776,1368,2.375,1369,1.776,1400,1.613,1511,2.9,1905,3.135,1906,5.266,1907,4.522,1908,7.283,1909,5.445,1910,3.051,1911,2.9,1912,2.9,1913,2.973,1914,3.051,1915,3.051,1916,2.9,1917,3.051]],["title/classes/DiscrepencyLabel.html",[44,0.06,1367,1.634]],["body/classes/DiscrepencyLabel.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,10,0.78,14,1.534,20,0.36,21,0.395,22,0.005,24,0.821,25,0.414,29,0.06,44,0.121,46,1.478,47,1.057,48,0.381,64,1.161,75,1.281,95,1.478,113,3.371,114,3.876,116,2.237,117,2.276,118,2.276,119,2.276,120,2.081,121,2.276,122,2.276,130,0.003,131,0.003,135,3.044,138,3.273,179,3.212,183,1.868,203,2.295,207,1.146,209,1.092,235,0.571,268,2.019,269,2.132,308,0.966,331,0.911,385,1.381,504,1.235,550,3.273,551,2.544,560,4.575,565,2.596,571,3.212,606,2.632,728,3.472,737,0.675,743,2.135,745,3.472,746,3.545,754,2.768,755,2.768,756,2.832,761,2.708,765,2.832,769,2.596,824,3.834,970,3.912,971,3.834,972,3.554,973,3.912,974,3.912,975,3.912,1032,1.347,1039,2.569,1048,2.897,1061,2.375,1367,2.375,1368,1.776,1369,1.776,1400,1.613,1511,2.9,1905,3.135,1906,5.266,1907,4.522,1910,3.051,1911,2.9,1912,2.9,1913,2.973,1914,3.051,1915,3.051,1916,2.9,1917,3.051,1918,7.283,1919,5.445]],["title/interfaces/DiscrepencyStructure.html",[0,0.41,114,2.024]],["body/interfaces/DiscrepencyStructure.html",[0,0.799,1,1.048,2,0.032,3,0.032,4,0.027,5,2.404,6,4.113,7,4.253,8,0.186,9,0.359,11,2.024,12,3.385,13,2.721,14,1.586,15,2.546,16,2.513,17,3.385,18,2.616,19,2.462,20,0.713,21,0.35,22,0.005,23,3.493,24,1.385,25,0.233,26,2.232,27,1.878,28,1.836,29,0.061,30,2.423,31,2.404,32,2.039,33,2.404,34,2.25,35,2.404,36,2.298,37,2.462,38,1.867,39,1.37,40,2.117,41,1.782,42,2.462,43,2.039,44,0.09,45,2.077,46,1.961,47,1.266,48,0.667,49,4.157,50,2.271,51,2.203,52,2.404,53,2.659,54,3.736,55,2.077,56,4.012,57,2.25,58,2.356,59,3.383,60,3.383,61,3.467,62,3.553,63,3.553,64,0.612,65,3.553,66,2.462,67,2.524,68,2.159,69,2.524,70,2.159,71,3.519,72,2.524,73,2.159,74,2.159,75,1.088,76,3.591,77,2.203,78,3.385,79,4.113,80,2.159,81,2.524,82,2.462,83,2.524,84,2.524,85,2.203,86,2.203,87,2.039,88,2.008,89,2.462,90,2.524,91,2.524,92,2.524,93,2.524,94,1.187,95,1.749,96,3.04,97,1.299,98,1.932,99,2.203,100,1.867,101,3.553,102,1.645,103,3.553,104,2.524,105,2.462,106,4.012,107,2.524,108,1.708,109,1.466,110,2.524,111,2.462,112,2.524,113,1.899,114,2.628,115,2.462,116,1.899,117,1.932,118,1.932,119,1.932,120,1.911,121,1.932,122,1.932,123,2.462,124,2.524,125,2.524,126,2.524,127,2.524,128,2.524,129,2.524,130,0.003,131,0.003]],["title/classes/DoSearch.html",[44,0.06,1913,2.736]],["body/classes/DoSearch.html",[2,0.037,3,0.037,4,0.032,8,0.217,9,0.398,10,0.77,14,1.132,20,0.356,21,0.396,22,0.005,24,0.81,25,0.412,29,0.06,44,0.12,46,1.466,47,1.051,48,0.376,64,1.155,75,1.265,95,1.466,113,4.046,114,3.52,116,2.208,117,2.246,118,2.246,119,2.246,120,2.068,121,2.246,122,2.246,130,0.003,131,0.003,135,3.017,138,3.244,179,3.184,183,1.858,203,2.291,207,1.217,209,1.078,235,0.563,268,2.036,269,2.128,308,0.953,331,0.905,385,1.363,504,1.219,550,3.244,551,2.511,560,4.335,565,2.562,571,3.184,606,2.628,728,3.442,737,0.666,743,2.121,745,3.442,746,3.514,754,2.732,755,2.732,756,2.796,761,2.673,765,2.796,769,2.562,824,3.809,970,3.887,971,3.809,972,3.53,973,3.887,974,3.887,975,3.887,1032,1.329,1039,2.562,1048,2.884,1061,2.843,1367,1.753,1368,1.753,1369,1.753,1400,1.593,1511,2.863,1905,3.094,1906,4.568,1910,3.011,1911,2.863,1912,2.863,1913,3.942,1914,4.884,1915,5.095,1916,2.863,1917,3.011,1920,5.375,1921,7.22,1922,5.375,1923,5.375]],["title/components/DocsComponent.html",[250,1.355,354,1.958]],["body/components/DocsComponent.html",[2,0.024,3,0.024,4,0.038,8,0.215,9,0.294,10,0.764,11,1.92,20,0.511,21,0.339,22,0.005,25,0.439,29,0.021,30,1.043,44,0.042,47,0.931,48,0.502,58,1.101,64,0.706,102,1.897,108,0.798,130,0.002,131,0.002,181,2.309,188,0.86,202,1.897,207,1.388,209,1.069,210,2.486,211,2.666,215,0.714,218,1.713,219,2.651,220,2.84,235,0.884,245,2.153,250,1.74,251,1.398,252,2.19,253,1.471,254,1.471,255,1.471,256,1.252,258,2.595,259,3.706,260,0.964,261,2.687,262,4.11,263,5.231,264,2.153,266,2.153,268,1.85,269,0.732,270,6.777,284,2.219,287,1.398,298,3.173,299,2.026,305,4.528,308,1.496,310,1.015,329,2.026,331,0.797,339,2.149,341,2.228,342,2.153,343,1.471,344,3.001,345,1.471,346,1.471,347,1.398,348,1.471,349,1.398,350,1.015,351,1.471,352,1.398,353,1.471,354,2.806,355,1.471,356,1.398,357,2.746,358,1.471,359,1.398,360,1.471,361,1.398,362,1.471,363,1.398,364,2.228,365,1.398,366,1.471,367,1.398,368,1.471,369,1.375,370,1.471,371,1.353,372,1.471,373,1.398,374,1.471,375,1.398,376,1.471,377,1.398,378,1.471,379,1.421,380,1.471,381,1.398,382,1.498,383,1.471,384,1.398,385,0.893,386,1.471,387,1.398,388,2.018,389,1.471,390,1.398,391,1.471,392,1.421,393,1.471,394,1.398,395,1.471,396,1.421,397,1.471,398,1.398,399,1.471,400,1.398,401,1.311,402,1.471,403,1.398,404,1.375,405,1.471,406,1.446,407,1.471,408,1.398,409,1.471,410,1.398,411,1.398,412,1.421,413,1.332,414,1.471,415,1.471,431,5.431,452,2.486,468,1.291,559,2.309,572,1.897,631,2.486,641,2.604,661,3.481,662,3.481,699,2.651,742,2.014,743,0.916,924,4.428,972,2.309,1022,1.83,1024,4.763,1037,2.69,1052,2.557,1078,4.213,1096,4.323,1115,2.042,1141,1.83,1142,1.83,1144,2.085,1189,1.271,1265,2.298,1270,2.219,1271,2.219,1274,4.387,1278,2.085,1284,4.014,1287,3.514,1291,4.194,1292,3.93,1309,3.272,1313,2.745,1317,2.026,1320,3.945,1321,4.159,1389,2.557,1667,3.255,1668,4.548,1783,2.604,1842,2.298,1882,2.644,1924,3.519,1925,6.437,1926,5.332,1927,9.068,1928,5.345,1929,5.779,1930,7.53,1931,8.12,1932,6.743,1933,6.743,1934,6.334,1935,6.437,1936,5.71,1937,4.787,1938,7.181,1939,5.963,1940,6.447,1941,6.447,1942,2.745,1943,5.332,1944,5.332,1945,3.519,1946,3.519,1947,3.519,1948,3.519,1949,3.519,1950,3.519,1951,3.519,1952,4.428,1953,3.519,1954,3.519,1955,3.519,1956,3.519,1957,3.519,1958,3.519,1959,3.519,1960,3.519,1961,3.519,1962,3.519,1963,3.519,1964,2.604,1965,2.486,1966,2.604,1967,3.519,1968,2.922,1969,2.922,1970,2.922,1971,2.922,1972,3.519,1973,5.332,1974,5.332,1975,3.519,1976,4.428,1977,3.159,1978,3.519,1979,3.519,1980,3.519,1981,2.604,1982,3.519,1983,3.519,1984,2.298,1985,3.519,1986,3.519,1987,5.602,1988,7.181,1989,3.519,1990,6.437,1991,3.159,1992,2.922,1993,5.022,1994,5.963,1995,2.922,1996,5.737,1997,3.159,1998,3.159,1999,5.779,2000,3.945,2001,4.787,2002,5.332,2003,4.428,2004,3.159,2005,2.922,2006,4.059,2007,3.614,2008,3.159,2009,3.159,2010,4.787,2011,4.787,2012,4.787,2013,4.787,2014,2.922,2015,3.519,2016,3.159,2017,3.159,2018,2.745,2019,2.745,2020,2.922,2021,2.604,2022,2.922,2023,3.519,2024,3.519,2025,3.519,2026,3.519,2027,3.519,2028,2.745,2029,3.519,2030,5.332,2031,3.519,2032,3.519,2033,3.159,2034,3.519,2035,3.519,2036,2.922,2037,3.519,2038,3.519,2039,5.602,2040,4.428,2041,4.159,2042,2.386,2043,3.519,2044,3.159]],["title/modules/DocsModule.html",[184,1.108,423,3.708]],["body/modules/DocsModule.html",[2,0.048,3,0.048,4,0.041,22,0.005,25,0.521,29,0.041,44,0.083,130,0.004,131,0.004,184,1.535,186,2.469,187,2.626,188,1.695,189,3.482,190,2.626,191,2.545,192,3.428,198,3.22,199,2.585,200,2.469,214,3.121,215,1.408,218,3.377,243,3.169,284,4.375,354,4.096,357,2.469,423,7.725,425,6.791,448,7.065,449,5.413,458,6.229,494,6.296,1422,3.379,1423,2.711,2045,6.229,2046,6.229,2047,6.229,2048,6.229,2049,7.413,2050,6.938,2051,6.938,2052,7.638,2053,6.229,2054,5.767,2055,4.704,2056,4.704,2057,5.762,2058,6.938]],["title/components/DocsNavComponent.html",[250,1.355,356,1.99]],["body/components/DocsNavComponent.html",[2,0.034,3,0.034,4,0.041,8,0.201,9,0.379,11,1.483,21,0.322,22,0.005,25,0.396,29,0.03,44,0.06,47,1.02,48,0.481,58,2.15,108,1.133,130,0.003,131,0.003,181,2.164,188,1.221,207,1.31,215,1.014,235,0.929,236,4.86,250,2.123,251,1.985,252,2.823,253,2.089,254,2.089,255,2.089,256,1.778,260,1.369,261,2.76,262,4.214,264,2.775,266,2.775,287,1.985,308,1.573,310,1.442,341,2.872,342,2.775,343,2.089,344,3.534,345,2.089,346,2.089,347,1.985,348,2.089,349,1.985,350,1.442,351,2.089,352,1.985,353,2.089,354,1.953,355,2.089,356,3.359,357,3.402,358,2.089,359,1.985,360,2.089,361,1.985,362,2.089,363,1.985,364,2.872,365,1.985,366,2.089,367,1.985,368,2.089,369,1.953,370,2.089,371,1.922,372,2.089,373,1.985,374,2.089,375,1.985,376,2.089,377,1.985,378,2.089,379,2.018,380,2.089,381,1.985,382,2.207,383,2.089,384,1.985,385,1.268,386,2.089,387,1.985,388,2.6,389,2.089,390,1.985,391,2.089,392,2.018,393,2.089,394,1.985,395,2.089,396,2.018,397,2.089,398,1.985,399,2.089,400,1.985,401,1.862,402,2.089,403,1.985,404,1.953,405,2.089,406,2.053,407,2.089,408,1.985,409,2.089,410,1.985,411,1.985,412,2.018,413,1.891,414,2.089,415,2.089,572,2.445,641,3.698,661,3.263,662,3.263,824,4.142,1088,3.493,1090,4.333,1100,5.104,1136,3.597,1137,4.4,1256,4.288,1257,2.96,1264,4.487,1284,2.599,1291,2.485,1294,4.15,1315,3.051,1317,3.956,1667,4.196,1842,3.263,1890,3.088,1934,7.148,1964,3.698,1965,3.531,1966,3.698,1968,4.15,2036,4.15,2057,7.939,2059,8.583,2060,4.997,2061,7.853,2062,6.871,2063,9.162,2064,9.162,2065,7.853,2066,7.853,2067,7.853,2068,4.997,2069,4.997,2070,4.997,2071,4.997,2072,4.997,2073,4.997,2074,4.997,2075,6.871,2076,6.871,2077,6.871,2078,4.997,2079,4.997,2080,5.361,2081,4.997,2082,4.997]],["title/modules/DocsNavModule.html",[184,1.108,2049,3.708]],["body/modules/DocsNavModule.html",[2,0.051,3,0.051,4,0.044,22,0.005,25,0.496,29,0.044,44,0.089,130,0.004,131,0.004,184,1.645,186,2.646,187,2.814,188,1.816,189,3.588,190,2.814,191,2.727,192,3.532,198,3.357,199,2.77,200,2.646,214,3.254,215,1.509,243,2.77,356,4.199,357,2.646,1422,3.524,1423,2.905,2049,7.615,2054,6.014,2055,5.04,2056,5.04,2057,6.174,2059,6.675,2083,6.675,2084,6.675,2085,6.675,2086,7.435,2087,7.435]],["title/injectables/DocsService.html",[712,2.094,1930,4.161]],["body/injectables/DocsService.html",[2,0.044,3,0.044,4,0.038,8,0.327,9,0.448,10,1.338,20,0.65,21,0.356,22,0.005,25,0.471,29,0.038,30,1.905,43,2.835,44,0.077,46,1.305,47,1.072,48,0.653,64,0.852,130,0.004,131,0.004,202,2.887,207,1.372,209,1.872,211,3.071,215,1.305,232,3.322,235,0.85,269,1.337,298,2.512,308,1.439,357,2.887,434,5.015,449,6.329,559,2.067,572,2.887,712,3.391,714,3.602,774,4.054,775,5.015,1048,2.573,1115,2.573,1140,3.344,1444,5.338,1445,7.753,1447,6.737,1641,6.329,1929,7.981,1930,6.737,1934,7.669,1968,5.338,2088,6.428,2089,8.113,2090,8.113,2091,8.113,2092,8.113,2093,8.113,2094,6.428,2095,8.113,2096,6.428,2097,8.113,2098,6.428,2099,8.889,2100,8.113,2101,6.428,2102,8.113,2103,8.113,2104,8.113,2105,6.428,2106,5.771,2107,6.428,2108,6.428,2109,6.428]],["title/components/DoiComponent.html",[250,1.355,359,1.99]],["body/components/DoiComponent.html",[2,0.034,3,0.034,4,0.041,8,0.2,9,0.377,10,0.71,15,1.946,21,0.321,22,0.005,25,0.426,29,0.029,44,0.059,46,1.387,48,0.547,53,2.728,58,1.551,64,0.905,108,1.124,130,0.003,131,0.003,188,1.211,202,2.432,207,1.307,209,0.994,211,1.713,215,1.006,232,1.764,235,0.819,245,2.76,250,2.114,251,1.969,252,2.807,253,2.072,254,2.072,255,2.072,256,1.764,258,3.326,259,4.502,260,1.358,261,2.758,262,4.212,264,2.76,266,2.76,268,1.81,287,1.969,298,2.67,308,1.387,310,1.43,329,2.854,331,0.935,341,2.856,342,2.76,343,2.072,344,3.522,345,2.072,346,2.072,347,1.969,348,2.072,349,1.969,350,1.43,351,2.072,352,1.969,353,2.072,354,1.937,355,2.072,356,1.969,357,1.764,358,2.072,359,3.348,360,2.072,361,1.969,362,2.072,363,1.969,364,2.856,365,1.969,366,2.072,367,1.969,368,2.072,369,1.937,370,2.072,371,1.906,372,2.072,373,1.969,374,2.072,375,1.969,376,2.072,377,1.969,378,2.072,379,2.002,380,2.072,381,1.969,382,1.393,383,2.072,384,1.969,385,1.257,386,2.072,387,1.969,388,2.586,389,2.072,390,1.969,391,2.072,392,2.002,393,2.072,394,1.969,395,2.072,396,2.002,397,2.072,398,1.969,399,2.072,400,1.969,401,1.847,402,2.072,403,1.969,404,1.937,405,2.072,406,2.037,407,2.072,408,1.969,409,2.072,410,1.969,411,1.969,412,2.002,413,1.876,414,2.072,415,2.072,632,2.183,697,3.361,737,0.614,742,1.551,743,1.29,759,1.801,766,2.981,767,1.876,768,1.196,1031,3.958,1038,3.348,1277,3.027,1278,2.937,1532,2.707,1582,5.675,1764,4.117,1842,3.237,1856,3.237,1857,3.669,2110,4.958,2111,7.82,2112,6.834,2113,7.021,2114,7.937,2115,3.027,2116,7.937,2117,6.834,2118,4.958,2119,6.135,2120,4.958,2121,4.958,2122,4.958,2123,4.958,2124,3.237,2125,4.451,2126,3.669,2127,4.451,2128,4.958,2129,4.958,2130,4.958,2131,4.958,2132,4.958,2133,4.958,2134,4.958,2135,7.82,2136,4.958,2137,4.451,2138,6.834,2139,6.834,2140,6.834,2141,4.117]],["title/modules/DoiModule.html",[184,1.108,2142,3.708]],["body/modules/DoiModule.html",[2,0.05,3,0.05,4,0.044,22,0.005,25,0.512,29,0.044,44,0.087,130,0.004,131,0.004,184,1.623,186,2.611,187,2.776,188,1.792,189,3.568,190,2.776,191,2.691,192,3.512,198,3.33,199,2.733,200,2.611,214,3.228,215,1.489,243,2.733,278,3.571,359,4.193,737,0.909,1422,3.496,1423,2.867,1427,4.376,1435,4.111,1436,3.428,2126,5.429,2142,7.595,2143,6.587,2144,6.587,2145,6.587,2146,7.337,2147,7.337,2148,7.308]],["title/classes/DuplicateId.html",[44,0.06,1369,1.634]],["body/classes/DuplicateId.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,10,0.78,14,1.147,20,0.36,21,0.395,22,0.005,24,0.821,25,0.414,29,0.06,44,0.121,46,1.666,47,1.057,48,0.381,64,1.161,75,1.281,95,1.478,113,3.371,114,3.876,116,2.237,117,2.276,118,2.276,119,2.276,120,2.081,121,2.276,122,2.276,130,0.003,131,0.003,135,3.044,138,3.273,179,3.212,183,1.868,203,2.295,207,1.146,209,1.092,235,0.571,268,2.019,269,2.132,308,0.966,331,0.911,385,1.381,504,1.235,550,3.273,551,2.544,560,4.48,565,3.472,571,3.212,606,2.632,728,3.472,737,0.675,743,2.135,745,3.472,746,3.545,754,2.768,755,2.768,756,2.832,761,2.708,765,2.832,769,2.596,824,3.834,970,3.912,971,3.834,972,3.554,973,3.912,974,3.912,975,3.912,1032,1.347,1039,2.569,1048,2.897,1061,2.375,1367,1.776,1368,1.776,1369,2.375,1400,1.613,1511,2.9,1905,3.135,1906,5.266,1907,4.522,1910,3.051,1911,2.9,1912,2.9,1913,2.973,1914,3.051,1915,3.051,1916,2.9,1917,3.051,2149,7.283,2150,5.445]],["title/interfaces/EntityWithNoOtherEntity.html",[0,0.41,1005,3.397]],["body/interfaces/EntityWithNoOtherEntity.html",[0,0.82,1,1.58,2,0.048,3,0.048,4,0.041,8,0.281,9,0.471,14,2.023,16,2.77,18,2.735,20,0.702,21,0.376,22,0.005,25,0.431,28,2.768,29,0.06,47,1.159,48,0.597,94,2.368,95,1.95,98,3.853,130,0.004,131,0.004,139,4.011,146,2.743,235,0.73,312,2.11,331,0.773,737,1.143,826,5.782,998,4.723,999,4.923,1000,4.923,1001,4.923,1002,4.923,1003,6.027,1004,4.923,1005,6.512,1006,4.923,1007,2.862,1008,4.723,1009,4.723]],["title/interfaces/Error.html",[0,0.41,766,1.634]],["body/interfaces/Error.html",[0,0.761,1,1.611,2,0.049,3,0.049,4,0.042,8,0.286,9,0.476,10,1.474,20,0.656,21,0.369,22,0.005,24,1.519,29,0.058,39,2.106,47,1.167,130,0.004,131,0.004,331,0.789,746,3.459,759,2.548,766,3.154,824,4.033,963,3.635,965,3.374,970,4.115,971,4.033,972,3.738,973,4.115,974,4.115,975,4.115,1033,2.823,1234,4.482,2151,5.544,2152,8.031,2153,5.259,2154,5.852,2155,6.1,2156,5.544]],["title/components/ErrorComponent.html",[250,1.355,361,1.99]],["body/components/ErrorComponent.html",[2,0.036,3,0.036,4,0.042,8,0.211,11,1.13,21,0.199,22,0.005,25,0.358,29,0.031,44,0.062,48,0.496,95,1.633,108,1.187,130,0.003,131,0.003,188,1.278,200,2.524,207,0.731,215,1.062,219,3.526,250,2.174,251,2.079,252,2.913,253,2.187,254,2.187,255,2.187,256,1.862,260,1.433,261,2.768,262,4.226,264,2.864,266,2.864,280,5.248,287,2.079,310,1.51,312,1.754,331,0.957,341,2.964,342,2.864,343,2.187,344,3.603,345,2.187,346,2.187,347,2.079,348,2.187,349,2.079,350,1.51,351,2.187,352,2.079,353,2.187,354,2.045,355,2.187,356,2.079,357,1.862,358,2.187,359,2.079,360,2.187,361,3.425,362,2.187,363,2.079,364,2.964,365,2.079,366,2.187,367,2.079,368,2.187,369,2.045,370,2.187,371,2.012,372,2.187,373,2.079,374,2.187,375,2.079,376,2.187,377,2.079,378,2.187,379,2.114,380,2.187,381,2.079,382,1.471,383,2.187,384,2.079,385,1.327,386,2.187,387,2.079,388,2.684,389,2.187,390,2.079,391,2.187,392,2.114,393,2.187,394,2.079,395,2.187,396,2.114,397,2.187,398,2.079,399,2.187,400,2.079,401,1.95,402,2.187,403,2.079,404,2.045,405,2.187,406,2.15,407,2.187,408,2.079,409,2.187,410,2.079,411,2.079,412,2.114,413,1.981,414,2.187,415,2.187,551,3.313,630,4.63,631,5.011,698,3.013,737,1.069,742,1.637,748,4.472,766,3.26,767,1.981,972,2.266,988,5.889,1023,1.754,1048,2.249,1088,3.605,1109,3.263,1136,3.248,1147,7.74,1224,5.889,1226,5.889,1227,5.248,1232,5.889,1240,6.092,1243,6.38,1275,3.3,1276,3.196,1298,3.417,1299,1.756,1300,3.196,1301,4.33,1302,3.417,1620,6.366,1639,6.366,1645,4.699,1882,2.913,1996,5.011,2000,5.248,2022,4.346,2157,5.234,2158,8.043,2159,7.091,2160,5.234,2161,7.091,2162,6.366,2163,7.091,2164,7.091,2165,6.366,2166,7.091,2167,6.726,2168,7.091,2169,6.366,2170,7.091,2171,7.091,2172,7.091,2173,8.622,2174,5.234,2175,7.091,2176,7.091,2177,7.091,2178,6.366,2179,5.234,2180,5.234,2181,5.234,2182,5.234,2183,5.234]],["title/modules/ErrorModule.html",[184,1.108,2184,3.708]],["body/modules/ErrorModule.html",[2,0.052,3,0.052,4,0.045,22,0.005,25,0.482,29,0.045,44,0.09,130,0.004,131,0.004,184,1.67,186,2.686,187,2.856,188,1.844,189,3.611,190,2.856,191,2.769,192,3.555,198,3.387,199,2.812,200,2.686,214,3.283,215,1.532,243,2.812,361,4.207,1422,3.555,1423,2.949,2184,7.637,2185,6.776,2186,6.776,2187,6.776,2188,7.548,2189,7.548]],["title/interfaces/ExportVega.html",[0,0.41,2156,3.909]],["body/interfaces/ExportVega.html",[0,0.771,1,1.663,2,0.05,3,0.05,4,0.044,8,0.296,9,0.486,10,1.261,20,0.661,21,0.335,22,0.005,24,1.327,29,0.058,39,2.174,47,1.061,130,0.004,131,0.004,331,0.814,746,4.758,759,1.933,766,3.075,824,4.111,963,3.228,965,2.996,970,4.195,971,4.111,972,3.811,973,4.195,974,4.195,975,4.195,1033,2.914,1234,6.165,2151,5.724,2152,6.093,2153,5.429,2154,5.966,2155,6.218,2156,6.866]],["title/classes/FetchAllOrganData.html",[44,0.06,1881,2.295]],["body/classes/FetchAllOrganData.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.707,20,0.631,21,0.4,22,0.005,24,0.745,25,0.394,29,0.062,44,0.124,47,0.596,48,0.345,64,1.209,108,1.545,130,0.003,131,0.003,183,1.453,203,2.337,207,1.089,209,0.99,235,0.517,268,1.888,269,2.171,308,0.876,312,1.93,316,1.941,318,2.953,331,1.122,385,1.253,504,1.12,606,2.516,632,1.684,727,1.842,737,1.303,768,1.191,1007,2.028,1023,1.221,1032,1.686,1034,2.074,1035,1.566,1039,2.656,1087,2.1,1091,2.365,1181,2.178,1218,2.178,1346,1.891,1351,2.019,1412,2.047,1501,1.994,1559,2.219,1560,2.219,1561,2.178,1588,2.028,1599,2.262,1869,2.262,1870,2.307,1874,2.307,1875,2.178,1876,4.401,1877,2.262,1878,2.307,1879,2.219,1880,2.307,1881,3.122,1882,2.8,1883,2.307,1884,2.262,1885,2.262,1886,2.262,1887,2.262,1888,3.184,1889,2.262,1890,2.219,1891,2.262,1892,2.262,1893,2.219,1894,2.178,1895,2.262,1896,2.219,1897,2.219,1898,2.262,1899,2.262,1900,2.307,1901,2.262,1902,2.307,1903,2.307,1904,2.307,2190,3.489,2191,6.815,2192,4.938]],["title/classes/FetchCompareData.html",[44,0.06,1884,2.295]],["body/classes/FetchCompareData.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.707,20,0.631,21,0.4,22,0.005,24,0.745,25,0.394,29,0.062,44,0.124,47,0.596,48,0.345,64,1.209,108,1.12,130,0.003,131,0.003,183,1.453,203,2.337,207,1.089,209,0.99,235,0.517,268,1.888,269,2.171,308,0.876,312,1.93,316,2.222,318,2.953,331,1.122,385,1.253,504,1.12,606,2.516,632,1.684,727,1.842,737,1.287,768,1.191,1007,2.028,1023,1.221,1032,1.686,1034,2.074,1035,1.566,1039,2.656,1087,2.1,1091,2.752,1181,2.178,1218,2.178,1346,1.891,1351,2.019,1412,2.047,1501,1.994,1559,2.219,1560,2.219,1561,2.178,1588,2.028,1599,2.262,1869,2.262,1870,2.307,1874,2.307,1875,2.178,1876,4.401,1877,2.262,1878,2.307,1879,2.219,1880,2.307,1881,2.262,1882,2.8,1883,2.307,1884,3.122,1885,2.262,1886,2.262,1887,2.262,1888,3.184,1889,2.262,1890,2.219,1891,2.262,1892,2.262,1893,2.219,1894,2.178,1895,2.262,1896,2.219,1897,2.219,1898,2.262,1899,2.262,1900,2.307,1901,2.262,1902,2.307,1903,2.307,1904,2.307,2193,4.938,2194,6.815,2195,4.938]],["title/classes/FetchDataFromAssets.html",[44,0.06,1879,2.252]],["body/classes/FetchDataFromAssets.html",[2,0.046,3,0.034,4,0.029,8,0.197,9,0.373,10,0.698,20,0.653,21,0.4,22,0.005,24,0.735,25,0.391,29,0.062,44,0.124,47,0.588,48,0.341,64,1.205,108,1.105,130,0.003,131,0.003,183,1.44,203,2.335,207,1.168,209,0.978,235,0.511,268,1.935,269,2.169,308,0.865,312,1.917,316,1.924,318,2.933,331,1.12,385,1.237,504,1.105,606,2.509,632,1.673,727,1.826,737,1.304,768,1.176,1007,2.003,1023,2.07,1032,1.671,1034,2.056,1035,1.546,1039,2.652,1087,2.074,1091,2.352,1181,2.15,1218,2.15,1346,1.874,1351,2.002,1412,2.029,1501,1.969,1559,2.191,1560,2.191,1561,2.15,1588,2.003,1599,2.233,1869,2.233,1870,2.278,1874,2.278,1875,2.15,1876,4.39,1877,2.233,1878,2.278,1879,3.036,1880,3.156,1881,2.233,1882,2.775,1883,2.278,1884,2.233,1885,2.233,1886,2.233,1887,2.233,1888,3.156,1889,2.233,1890,2.191,1891,2.233,1892,2.233,1893,2.191,1894,2.15,1895,2.233,1896,2.191,1897,2.191,1898,2.233,1899,2.233,1900,2.278,1901,2.233,1902,2.278,1903,2.278,1904,2.278,2196,4.875,2197,6.755,2198,4.875,2199,4.875]],["title/classes/FetchInitialPlaygroundData.html",[44,0.06,1892,2.295]],["body/classes/FetchInitialPlaygroundData.html",[2,0.047,3,0.034,4,0.029,8,0.198,9,0.375,10,1.116,20,0.63,21,0.4,22,0.005,24,0.742,25,0.393,29,0.062,44,0.124,47,0.593,48,0.344,64,1.208,108,1.115,130,0.003,131,0.003,183,1.449,203,2.337,207,1.087,209,0.986,235,0.515,268,1.886,269,2.171,308,0.872,312,1.926,316,1.935,318,3.179,331,1.121,385,1.248,504,1.115,606,2.514,632,1.681,727,1.837,737,1.303,741,2.832,768,1.187,1007,2.02,1023,1.217,1032,1.681,1034,2.069,1035,1.56,1039,2.655,1087,2.092,1091,2.361,1181,2.169,1218,2.169,1346,1.885,1351,2.014,1412,2.041,1501,1.987,1559,2.21,1560,2.21,1561,2.169,1588,2.02,1599,2.253,1869,2.253,1870,2.298,1874,2.298,1875,2.169,1876,4.397,1877,2.253,1878,2.298,1879,2.21,1880,2.298,1881,2.253,1882,2.792,1883,2.298,1884,2.253,1885,2.253,1886,2.253,1887,2.253,1888,3.175,1889,2.253,1890,2.21,1891,2.253,1892,3.113,1893,3.054,1894,2.169,1895,2.253,1896,2.21,1897,2.21,1898,2.253,1899,2.253,1900,2.298,1901,2.253,1902,2.298,1903,2.298,1904,2.298,2190,3.475,2200,6.796,2201,4.919]],["title/classes/FetchPlaygroundUploadData.html",[44,0.06,1895,2.295]],["body/classes/FetchPlaygroundUploadData.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.707,20,0.654,21,0.4,22,0.005,24,0.744,25,0.394,29,0.062,44,0.124,47,0.595,48,0.345,64,1.209,108,1.118,130,0.003,131,0.003,183,1.452,203,2.337,207,1.089,209,0.989,235,0.517,268,1.888,269,2.171,308,0.875,312,1.929,316,1.939,318,3.183,331,1.138,385,1.251,504,1.118,606,2.515,632,1.683,727,1.841,737,1.287,768,1.19,1007,2.026,1023,1.22,1032,1.684,1034,2.073,1035,1.565,1039,2.656,1087,2.897,1091,2.364,1181,2.176,1218,2.176,1346,1.889,1351,2.018,1412,2.045,1501,1.992,1559,2.217,1560,2.217,1561,2.176,1588,2.026,1599,2.26,1869,2.26,1870,2.305,1874,2.305,1875,2.176,1876,4.4,1877,2.26,1878,2.305,1879,2.217,1880,2.305,1881,2.26,1882,2.798,1883,2.305,1884,2.26,1885,2.26,1886,2.26,1887,2.26,1888,3.182,1889,2.26,1890,2.217,1891,2.26,1892,2.26,1893,2.217,1894,2.176,1895,3.12,1896,2.217,1897,2.217,1898,2.26,1899,2.26,1900,2.305,1901,2.26,1902,2.305,1903,2.305,1904,2.305,2115,3.012,2202,6.81,2203,4.933]],["title/classes/FetchSelectedOrganData.html",[44,0.06,1559,2.252]],["body/classes/FetchSelectedOrganData.html",[2,0.046,3,0.033,4,0.028,8,0.191,9,0.365,10,1.093,20,0.665,21,0.401,22,0.005,24,0.714,25,0.385,29,0.062,44,0.123,47,0.571,48,0.331,64,1.194,108,1.074,130,0.003,131,0.003,183,1.411,203,2.328,207,1.258,209,0.95,235,0.496,268,1.99,269,2.163,308,0.84,312,1.888,316,1.885,318,2.888,331,1.115,385,1.201,504,1.074,606,2.494,632,1.647,727,1.79,737,1.299,741,2.727,768,1.143,1007,1.946,1023,1.171,1032,1.637,1034,2.015,1035,1.502,1039,2.642,1087,2.015,1091,2.599,1181,2.089,1218,2.089,1346,2.117,1351,1.962,1412,1.988,1501,3.512,1559,2.975,1560,2.128,1561,2.089,1588,1.946,1599,3.984,1869,2.17,1870,2.213,1874,2.213,1875,2.089,1876,4.364,1877,2.17,1878,2.213,1879,2.128,1880,2.213,1881,2.17,1882,3.135,1883,4.063,1884,2.17,1885,2.17,1886,2.17,1887,2.17,1888,3.093,1889,2.17,1890,2.128,1891,2.17,1892,2.17,1893,2.128,1894,2.089,1895,2.17,1896,2.128,1897,2.128,1898,2.17,1899,2.17,1900,2.213,1901,2.17,1902,2.213,1903,2.213,1904,2.213,2190,3.347,2204,6.62,2205,4.736,2206,4.736,2207,4.736,2208,4.736]],["title/classes/FetchSheetData.html",[44,0.06,1875,2.21]],["body/classes/FetchSheetData.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.707,20,0.631,21,0.4,22,0.005,24,0.745,25,0.394,29,0.062,44,0.124,47,0.596,48,0.345,64,1.209,108,1.12,130,0.003,131,0.003,183,1.453,203,2.337,207,1.089,209,0.99,235,0.517,268,1.888,269,2.171,308,0.876,312,1.93,316,1.941,318,2.953,331,1.122,385,1.253,504,1.12,606,2.516,632,1.684,727,1.842,737,1.305,768,1.191,1007,2.028,1023,1.221,1032,1.686,1034,2.074,1035,1.566,1039,2.656,1087,2.1,1091,2.365,1181,2.178,1218,2.178,1346,1.891,1351,2.019,1412,2.047,1501,1.994,1559,2.219,1560,2.219,1561,2.178,1588,2.028,1599,2.262,1869,2.262,1870,2.307,1874,2.307,1875,3.006,1876,4.401,1877,2.262,1878,2.307,1879,2.219,1880,2.307,1881,2.262,1882,2.8,1883,2.307,1884,2.262,1885,2.262,1886,2.262,1887,2.262,1888,3.184,1889,2.262,1890,2.219,1891,2.262,1892,2.262,1893,2.219,1894,2.178,1895,2.262,1896,2.219,1897,2.219,1898,2.262,1899,2.262,1900,2.307,1901,2.262,1902,2.307,1903,2.307,1904,2.307,2190,3.489,2209,6.815,2210,4.938]],["title/classes/FetchValidOmapProtiens.html",[44,0.06,1899,2.295]],["body/classes/FetchValidOmapProtiens.html",[2,0.047,3,0.034,4,0.03,8,0.202,9,0.38,20,0.633,21,0.399,22,0.005,24,0.756,25,0.397,29,0.062,44,0.124,47,0.605,64,1.244,108,1.136,130,0.003,131,0.003,183,1.468,203,2.341,207,0.961,235,0.525,268,1.816,269,2.174,308,0.889,312,1.945,316,1.961,318,2.977,331,1.124,385,1.746,504,1.136,606,2.523,632,1.698,727,1.861,737,1.289,768,1.209,1007,2.059,1023,1.24,1032,1.703,1034,2.096,1035,1.59,1039,2.662,1087,2.132,1091,2.38,1181,3.037,1218,2.211,1346,1.91,1351,2.04,1412,2.068,1501,2.024,1559,2.253,1560,2.253,1561,2.211,1588,2.059,1599,2.296,1869,2.296,1870,2.342,1874,2.342,1875,2.211,1876,4.414,1877,2.296,1878,2.342,1879,2.253,1880,2.342,1881,2.296,1882,2.829,1883,2.342,1884,2.296,1885,2.296,1886,2.296,1887,2.296,1888,3.217,1889,2.296,1890,2.253,1891,2.296,1892,2.296,1893,2.253,1894,2.211,1895,2.296,1896,2.253,1897,2.253,1898,2.296,1899,3.154,1900,3.217,1901,2.296,1902,2.342,1903,2.342,1904,2.342,2211,6.886]],["title/components/FileUploadComponent.html",[250,1.355,363,1.99]],["body/components/FileUploadComponent.html",[2,0.027,3,0.027,4,0.06,8,0.16,9,0.322,10,1.258,11,1.495,20,0.581,21,0.35,22,0.005,25,0.295,29,0.024,30,1.732,44,0.047,48,0.654,53,1.803,74,3.565,102,1.416,108,0.902,130,0.003,131,0.003,188,0.972,191,2.144,202,2.08,207,1.352,209,1.761,211,3.034,215,0.808,230,3.781,232,1.416,235,0.963,236,3.521,244,5.392,245,3.082,250,1.872,251,1.581,252,2.401,253,1.663,254,1.663,255,1.663,256,1.416,258,2.845,260,1.09,261,2.715,262,4.146,264,2.36,266,2.36,287,1.581,298,3.746,308,1.442,310,1.148,320,5.247,323,4.167,341,2.442,342,2.36,343,1.663,344,3.189,345,1.663,346,1.663,347,1.581,348,1.663,349,1.581,350,1.148,351,1.663,352,1.581,353,1.663,354,1.555,355,1.663,356,1.581,357,1.416,358,1.663,359,1.581,360,1.663,361,1.581,362,1.663,363,3.579,364,2.442,365,1.581,366,1.663,367,1.581,368,1.663,369,1.555,370,1.663,371,1.53,372,1.663,373,1.581,374,1.663,375,1.581,376,1.663,377,1.581,378,1.663,379,1.607,380,1.663,381,1.581,382,1.119,383,1.663,384,1.581,385,1.009,386,1.663,387,1.581,388,2.212,389,1.663,390,1.581,391,1.663,392,1.607,393,1.663,394,1.581,395,1.663,396,1.607,397,1.663,398,1.581,399,1.663,400,1.581,401,1.483,402,1.663,403,1.581,404,1.555,405,1.663,406,1.635,407,1.663,408,1.581,409,1.663,410,1.581,411,1.581,412,1.607,413,1.506,414,1.663,415,1.663,456,6.899,572,2.08,698,2.291,742,1.828,743,1.52,1022,2.07,1087,3.458,1090,3.686,1100,3.987,1116,2.284,1117,3.229,1126,6.851,1128,5.751,1136,1.823,1137,3.275,1139,2.23,1248,2.284,1256,3.781,1257,2.358,1274,2.07,1276,2.43,1279,2.291,1284,2.07,1299,2.324,1300,2.43,1301,2.43,1306,3.305,1308,2.358,1309,2.971,1314,2.23,1317,2.291,1376,2.401,1843,3.105,1937,7.298,2006,2.51,2014,3.305,2212,8.767,2213,3.98,2214,6.926,2215,6.926,2216,5.751,2217,6.338,2218,5.751,2219,6.218,2220,5.247,2221,6.926,2222,8.129,2223,8.129,2224,5.247,2225,5.844,2226,5.844,2227,5.844,2228,5.844,2229,5.844,2230,5.844,2231,3.98,2232,5.844,2233,7.632,2234,3.98,2235,3.98,2236,5.844,2237,3.98,2238,5.844,2239,3.98,2240,5.844,2241,3.98,2242,5.844,2243,3.98,2244,5.844,2245,3.98,2246,3.98,2247,6.926,2248,5.844,2249,3.98,2250,3.98,2251,3.98,2252,3.98,2253,3.98,2254,3.98,2255,3.98,2256,3.98,2257,5.844,2258,3.98,2259,3.98,2260,3.98,2261,3.98,2262,3.98,2263,5.844,2264,3.98,2265,3.98,2266,3.98,2267,5.844,2268,2.812,2269,3.98,2270,3.305,2271,3.573,2272,3.98,2273,3.98,2274,5.844,2275,2.698,2276,3.98]],["title/modules/FileUploadModule.html",[184,1.108,424,3.272]],["body/modules/FileUploadModule.html",[2,0.045,3,0.045,4,0.049,22,0.005,25,0.517,29,0.039,44,0.078,74,4.621,130,0.004,131,0.004,184,1.458,186,2.345,187,2.494,188,1.61,189,3.402,190,2.494,191,2.417,192,3.35,198,3.118,199,2.455,200,2.345,214,3.023,215,1.338,243,2.455,244,6.989,245,3.995,278,3.207,363,4.238,424,6.552,456,4.656,1139,3.692,1422,3.273,1423,2.575,1427,4.098,1428,5.38,1429,4.302,1431,5.197,1435,3.85,1436,3.079,2054,5.586,2055,4.467,2056,4.467,2212,5.916,2216,7.466,2217,8.215,2218,7.466,2277,5.916,2278,5.916,2279,5.916,2280,6.59,2281,5.822,2282,4.467,2283,5.916]],["title/interfaces/FlatNode.html",[0,0.41,2284,3.909]],["body/interfaces/FlatNode.html",[0,0.62,1,1.312,2,0.04,3,0.04,4,0.034,8,0.233,9,0.418,20,0.654,21,0.342,22,0.005,24,1.275,25,0.483,29,0.034,44,0.069,47,1.124,48,0.669,50,2.519,53,2.609,57,2.816,58,1.81,130,0.003,131,0.003,215,1.175,232,2.059,245,2.337,250,2.05,258,2.816,259,4.365,261,1.505,262,2.298,264,2.337,266,2.337,268,1.146,269,1.204,295,2.658,298,2.963,299,3.331,329,3.331,331,0.642,371,2.225,572,3.316,646,5.373,724,2.581,735,4.514,737,0.94,768,1.396,914,4.089,1039,1.505,1047,2.506,1055,2.418,1100,4.869,1136,4.111,1137,4.739,1484,5.14,1489,3.923,1606,5.915,1609,4.282,1723,3.331,2284,6.598,2285,4.282,2286,4.089,2287,4.805,2288,7.737,2289,7.939,2290,6.297,2291,4.805,2292,5.611,2293,3.923,2294,6.297,2295,4.805,2296,6.297,2297,4.514,2298,5.357,2299,4.514,2300,5.611,2301,5.975,2302,4.805,2303,4.805,2304,4.805,2305,4.514,2306,4.805,2307,4.282,2308,4.089,2309,4.805,2310,4.805,2311,4.805,2312,4.805,2313,4.805,2314,7.023,2315,4.805,2316,6.297,2317,4.805,2318,4.805,2319,4.805,2320,4.805,2321,4.514,2322,4.805,2323,4.805,2324,4.805,2325,4.805,2326,4.805,2327,4.805,2328,7.023,2329,4.805,2330,4.805,2331,4.282,2332,4.805,2333,4.805,2334,4.805,2335,4.805]],["title/components/FooterComponent.html",[250,1.355,365,1.99]],["body/components/FooterComponent.html",[2,0.027,3,0.027,4,0.034,8,0.158,9,0.318,10,0.56,11,1.885,20,0.382,21,0.308,22,0.005,25,0.453,29,0.023,44,0.047,48,0.48,64,0.764,102,2.44,108,0.887,130,0.003,131,0.003,135,2.865,181,2.499,188,0.955,202,2.053,207,1.359,209,0.784,211,2.368,215,0.794,218,1.904,219,1.945,220,2.083,235,0.939,250,1.853,251,1.554,252,2.37,253,1.635,254,1.635,255,1.635,256,1.392,260,1.071,261,2.711,262,4.146,263,3.912,264,2.33,266,2.33,268,1.673,269,0.814,270,6.814,284,2.467,287,1.554,298,2.679,299,2.252,305,3.639,308,1.59,310,1.129,331,0.64,341,2.411,342,2.33,343,1.635,344,3.163,345,1.635,346,1.635,347,1.554,348,1.635,349,1.554,350,1.129,351,1.635,352,1.554,353,1.635,354,1.528,355,1.635,356,1.554,357,2.053,358,1.635,359,1.554,360,1.635,361,1.554,362,1.635,363,1.554,364,2.411,365,3.006,366,1.635,367,1.554,368,1.635,369,1.528,370,1.635,371,1.504,372,1.635,373,1.554,374,1.635,375,1.554,376,1.635,377,1.554,378,1.635,379,1.58,380,1.635,381,1.554,382,1.099,383,1.635,384,1.554,385,0.992,386,1.635,387,1.554,388,2.184,389,1.635,390,1.554,391,1.635,392,1.58,393,1.635,394,1.554,395,1.635,396,1.58,397,1.635,398,1.554,399,1.635,400,1.554,401,1.457,402,1.635,403,1.554,404,1.528,405,1.635,406,1.607,407,1.635,408,1.554,409,1.635,410,1.554,411,1.554,412,1.58,413,1.48,414,1.635,415,1.635,431,5.588,452,2.764,551,2.696,559,1.856,572,2.053,641,4.27,658,3.051,661,2.554,662,2.554,699,1.945,748,3.639,952,3.767,1022,2.034,1037,2.865,1048,1.241,1078,4.407,1096,4.522,1141,2.034,1142,2.034,1144,2.317,1256,2.136,1274,2.034,1284,2.034,1291,2.869,1301,3.523,1309,1.988,1310,3.051,1317,3.322,1337,1.528,1389,2.723,1663,3.051,1667,3.523,1928,6.702,1932,7.013,1933,7.013,1939,6.285,1942,3.051,1952,4.791,1964,5.073,1965,4.844,1966,5.073,1969,3.248,1970,3.248,1971,3.248,1976,3.248,1987,5.348,1993,3.051,1995,3.248,1996,4.844,2000,5.073,2003,4.791,2005,3.248,2006,3.639,2016,5.18,2039,4.501,2080,4.501,2271,3.511,2275,2.652,2336,3.911,2337,4.648,2338,6.856,2339,5.77,2340,8.445,2341,7.582,2342,7.582,2343,8.445,2344,6.794,2345,7.568,2346,5.77,2347,3.911,2348,3.911,2349,3.911,2350,3.911,2351,3.911,2352,3.911,2353,3.911,2354,3.911,2355,3.911,2356,3.911,2357,3.911,2358,3.911,2359,3.511,2360,3.511,2361,6.856,2362,3.911,2363,6.155,2364,5.18,2365,5.18,2366,5.77,2367,5.18,2368,5.77,2369,5.77,2370,5.77,2371,7.568,2372,7.568,2373,6.155,2374,5.77,2375,5.77,2376,5.18,2377,5.18,2378,5.77,2379,5.77,2380,5.77,2381,6.856,2382,5.77,2383,5.77,2384,5.77,2385,5.77,2386,5.77,2387,5.77,2388,5.77,2389,5.77,2390,5.77,2391,5.77,2392,5.77,2393,5.77,2394,3.911,2395,5.77,2396,5.77,2397,5.77,2398,5.77,2399,3.911,2400,3.911,2401,5.77,2402,3.911,2403,3.911,2404,3.911,2405,5.77,2406,3.911,2407,3.911,2408,5.77,2409,3.911,2410,3.511,2411,3.911,2412,3.911]],["title/modules/FooterModule.html",[184,1.108,425,3.397]],["body/modules/FooterModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.517,29,0.043,44,0.087,130,0.004,131,0.004,184,1.609,186,2.588,187,2.752,188,1.776,189,3.554,190,2.752,191,2.668,192,3.499,198,3.313,199,2.709,200,2.588,214,3.211,215,1.476,243,2.709,278,3.54,365,4.188,425,6.945,1422,3.477,1423,2.842,1427,4.353,1435,4.09,1436,3.398,2054,5.935,2055,4.93,2056,4.93,2281,6.185,2282,4.93,2413,6.529,2414,6.529,2415,6.529,2416,7.272,2417,7.272]],["title/components/FunctionsComponent.html",[250,1.355,367,1.99]],["body/components/FunctionsComponent.html",[2,0.025,3,0.025,4,0.033,8,0.148,9,0.303,10,0.787,11,1.423,20,0.545,21,0.354,22,0.005,25,0.481,29,0.022,30,2.442,41,1.003,44,0.044,48,0.513,53,1.13,58,1.718,64,0.728,94,0.94,100,2.959,102,1.303,108,0.83,130,0.002,131,0.002,144,3.795,146,1.767,169,4.304,171,4.304,172,4.304,173,5.381,179,3.878,181,2.379,183,1.562,188,0.894,202,1.955,207,1.343,209,1.102,210,2.587,211,1.898,215,0.743,218,1.782,219,1.821,220,1.95,230,1.999,235,0.921,250,1.782,251,1.454,252,2.257,253,1.53,254,1.53,255,1.53,256,1.303,260,1.003,261,2.696,262,4.117,264,2.219,266,2.219,268,1.781,287,1.454,295,1.284,298,2.146,308,1.392,310,1.056,323,3.6,331,0.406,339,2.236,341,2.296,342,2.219,343,1.53,344,3.062,345,1.53,346,1.53,347,1.454,348,1.53,349,1.454,350,1.585,351,1.53,352,1.454,353,1.53,354,1.431,355,1.53,356,1.454,357,1.303,358,1.53,359,1.454,360,1.53,361,1.454,362,1.53,363,1.454,364,2.296,365,1.454,366,1.53,367,2.91,368,1.53,369,1.431,370,1.53,371,1.408,372,1.53,373,1.454,374,1.53,375,1.454,376,1.53,377,1.454,378,1.53,379,1.479,380,1.53,381,1.454,382,1.029,383,1.53,384,1.454,385,0.929,386,1.53,387,1.454,388,2.079,389,1.53,390,1.454,391,1.53,392,1.479,393,1.53,394,1.454,395,1.53,396,1.479,397,1.53,398,1.454,399,1.53,400,1.454,401,1.364,402,1.53,403,1.454,404,1.431,405,1.53,406,1.504,407,1.53,408,1.454,409,1.53,410,1.454,411,1.454,412,1.479,413,1.386,414,1.53,415,1.53,444,2.108,468,1.343,474,2.482,475,2.709,559,1.178,577,2.39,591,4,698,2.108,699,3.903,713,5.546,720,2.587,721,5.871,725,3.586,727,1.485,728,2.619,729,4.286,743,2.144,754,3.724,757,2.482,761,1.821,766,2.688,767,1.386,948,2.587,1022,1.904,1052,2.619,1078,4.286,1088,2.793,1096,4.398,1098,4.304,1115,1.161,1136,2.516,1140,1.904,1141,1.904,1142,1.904,1144,2.169,1174,2.39,1234,5.776,1237,5.064,1246,4.783,1256,4,1257,4.34,1259,2.309,1260,2.39,1265,3.586,1270,4.158,1271,4.158,1273,2.856,1274,3.811,1276,2.236,1278,3.254,1279,5.354,1280,4.966,1281,2.587,1282,2.587,1283,2.587,1284,3.429,1287,5.201,1288,2.587,1291,2.732,1296,3.724,1300,2.236,1301,2.236,1308,2.169,1309,3.724,1310,2.856,1314,2.051,1315,4.473,1317,2.108,1326,3.041,1532,1.999,1578,2.587,1632,3.041,1633,3.041,1634,3.041,1635,3.041,1636,3.041,1667,2.236,1668,2.587,1671,3.287,1725,4.065,1854,2.169,1856,2.39,1912,1.95,1964,2.709,1965,2.587,1966,2.709,2008,3.287,2018,2.856,2019,2.856,2042,3.724,2418,3.661,2419,6.593,2420,5.493,2421,7.85,2422,6.593,2423,6.593,2424,8.243,2425,6.593,2426,5.493,2427,5.493,2428,3.661,2429,5.493,2430,7.326,2431,3.661,2432,3.661,2433,3.661,2434,3.661,2435,3.661,2436,3.661,2437,5.493,2438,3.661,2439,3.661,2440,3.661,2441,3.661,2442,3.661,2443,2.709,2444,3.661,2445,3.661,2446,5.493,2447,3.661,2448,3.661,2449,3.661,2450,3.661,2451,3.661,2452,3.287,2453,2.587,2454,4.562,2455,3.661,2456,3.661,2457,3.287,2458,3.661,2459,7.326,2460,7.326,2461,2.856,2462,4.286,2463,4.065,2464,2.856,2465,2.856,2466,3.661,2467,3.661,2468,3.287,2469,4.932,2470,3.661,2471,3.661,2472,5.421,2473,3.041,2474,3.661]],["title/modules/FunctionsModule.html",[184,1.108,1678,3.708]],["body/modules/FunctionsModule.html",[2,0.049,3,0.049,4,0.042,22,0.005,25,0.523,29,0.042,44,0.085,130,0.004,131,0.004,184,1.576,186,2.536,187,2.697,188,1.741,189,3.523,190,2.697,191,2.614,192,3.468,198,3.273,199,2.655,200,2.536,214,3.172,215,1.447,243,2.655,278,3.469,367,4.178,1422,3.435,1423,2.785,1425,5.646,1426,4.653,1427,4.3,1435,4.04,1436,3.33,1678,7.55,1697,5.646,1698,4.653,2054,5.863,2055,4.831,2056,4.831,2443,5.274,2475,6.398,2476,6.398,2477,6.398,2478,7.127,2479,7.127,2480,6.747]],["title/interfaces/GEdge.html",[0,0.41,1394,2.058]],["body/interfaces/GEdge.html",[0,0.853,1,1.007,2,0.031,3,0.058,4,0.026,8,0.179,9,0.349,11,1.59,13,1.352,14,1.332,15,2.287,16,2.071,18,2.69,20,0.717,21,0.306,22,0.005,24,1.5,26,1.875,27,2.317,29,0.062,39,1.875,41,1.216,46,1.63,47,1.235,48,0.635,50,1.667,75,1.045,88,1.37,94,1.141,95,1.284,97,2.071,109,1.409,120,1.126,130,0.003,131,0.003,146,1.428,174,1.557,175,1.534,176,1.534,177,1.534,178,1.534,183,1.349,235,0.663,260,2.018,261,1.155,295,2.218,331,0.942,468,1.629,623,1.764,632,1.59,663,2.513,706,1.764,724,2.509,727,1.71,734,2.123,737,0.913,742,1.979,743,1.646,759,1.17,963,1.629,965,1.512,1023,2.182,1091,1.248,1109,1.681,1110,3.393,1111,3.264,1112,3.317,1115,2.799,1116,3.448,1117,2.513,1188,1.735,1189,1.604,1248,1.735,1299,2.473,1333,1.824,1334,2.644,1335,2.599,1336,1.794,1337,1.735,1338,1.824,1339,1.824,1340,1.824,1341,1.824,1342,1.824,1343,1.824,1344,2.555,1345,1.794,1346,1.755,1347,1.824,1348,1.856,1349,1.824,1350,1.794,1351,1.316,1352,1.824,1353,1.856,1354,1.856,1355,1.856,1356,1.856,1357,1.856,1358,1.856,1359,1.856,1360,1.856,1361,1.856,1362,1.824,1363,1.824,1364,2.644,1365,2.644,1366,1.856,1367,1.448,1368,1.448,1369,1.448,1370,1.824,1371,1.794,1372,1.824,1373,2.599,1374,2.644,1375,2.644,1376,1.824,1377,1.856,1378,1.708,1379,1.856,1380,1.856,1381,1.856,1382,1.856,1383,1.856,1384,1.764,1385,3.027,1386,1.824,1387,1.856,1388,1.856,1389,1.764,1390,1.856,1391,1.856,1392,2.599,1393,1.856,1394,3.027,1395,3.244,1396,2.599,1397,1.856,1398,1.856,1399,1.794,1400,1.875,1401,1.824,1402,2.599,1403,1.856,1404,1.856,1405,1.856,1406,1.856,1407,1.856,1408,1.856,1409,1.856,1410,1.824,1411,1.764,1412,1.334,1413,1.856]],["title/interfaces/GNode.html",[0,0.41,1396,2.058]],["body/interfaces/GNode.html",[0,0.852,1,0.994,2,0.03,3,0.043,4,0.026,8,0.177,9,0.346,11,1.58,13,1.335,14,1.321,15,2.274,16,2.057,18,2.682,20,0.717,21,0.359,22,0.005,24,1.497,26,1.858,27,2.304,29,0.062,39,1.858,41,1.201,46,1.836,47,1.224,48,0.668,50,1.652,75,1.032,88,1.353,94,1.127,95,1.273,97,2.057,109,1.391,120,1.113,130,0.003,131,0.003,146,1.411,174,1.538,175,1.515,176,1.515,177,1.515,178,1.515,183,1.337,235,0.657,260,2.533,261,1.141,295,2.198,331,0.938,468,1.609,623,1.742,632,1.58,663,2.491,706,1.742,724,2.492,727,1.695,734,2.104,737,0.907,742,1.962,743,1.631,759,1.156,963,1.609,965,1.493,1023,2.174,1091,1.233,1109,1.66,1110,3.379,1111,3.248,1112,3.301,1115,2.787,1116,3.434,1117,2.491,1188,1.714,1189,1.585,1248,1.714,1299,2.456,1333,1.802,1334,2.621,1335,2.576,1336,1.772,1337,1.714,1338,1.802,1339,1.802,1340,1.802,1341,1.802,1342,1.802,1343,1.802,1344,2.533,1345,1.772,1346,1.74,1347,1.802,1348,1.833,1349,1.802,1350,1.772,1351,1.3,1352,1.802,1353,1.833,1354,1.833,1355,1.833,1356,1.833,1357,1.833,1358,1.833,1359,1.833,1360,1.833,1361,1.833,1362,1.802,1363,1.802,1364,2.621,1365,2.621,1366,1.833,1367,1.431,1368,1.431,1369,1.431,1370,1.802,1371,1.772,1372,1.802,1373,2.576,1374,2.621,1375,2.621,1376,1.802,1377,1.833,1378,1.686,1379,1.833,1380,1.833,1381,1.833,1382,1.833,1383,1.833,1384,1.742,1385,3.006,1386,1.802,1387,1.833,1388,1.833,1389,1.742,1390,1.833,1391,1.833,1392,2.576,1393,1.833,1394,2.576,1395,1.772,1396,3.006,1397,1.833,1398,1.833,1399,1.772,1400,1.858,1401,1.802,1402,2.576,1403,1.833,1404,1.833,1405,1.833,1406,1.833,1407,1.833,1408,1.833,1409,1.833,1410,1.802,1411,1.742,1412,1.317,1413,1.833]],["title/interfaces/GaCompareInfo.html",[0,0.41,1143,3.541]],["body/interfaces/GaCompareInfo.html",[0,0.76,1,1.435,2,0.044,3,0.044,4,0.038,8,0.255,9,0.443,11,2.004,20,0.699,21,0.365,22,0.005,29,0.058,39,2.381,47,1.065,48,0.443,54,2.646,59,2.396,60,2.396,95,1.885,108,1.435,130,0.004,131,0.004,135,2.646,184,1.4,312,1.987,316,2.288,318,3.041,323,4.819,357,2.859,382,2.258,413,3.041,561,3.288,630,5.763,646,3.372,1023,1.566,1088,3.218,1115,2.945,1136,3.68,1141,3.293,1142,3.293,1143,5.677,1174,4.133,1189,3.354,1314,3.547,1346,2.229,1400,2.615,1501,2.557,1981,4.684,1984,4.133,2007,5.447,2337,5.447,2453,4.473,2481,4.684,2482,6.043,2483,4.473,2484,4.684,2485,4.473,2486,4.939,2487,5.677,2488,6.268,2489,4.939,2490,4.292,2491,4.939,2492,5.677,2493,6.532,2494,6.56,2495,6.886,2496,5.945,2497,4.473,2498,4.684,2499,4.684,2500,4.473,2501,5.945,2502,4.684]],["title/interfaces/GaNodeInfo.html",[0,0.41,2497,3.541]],["body/interfaces/GaNodeInfo.html",[0,0.755,1,1.41,2,0.043,3,0.043,4,0.037,8,0.251,9,0.438,11,1.342,20,0.698,21,0.389,22,0.005,29,0.058,39,2.354,47,1.195,48,0.645,54,3.855,59,3.491,60,3.491,95,1.263,108,1.41,130,0.004,131,0.004,135,2.599,184,1.376,312,1.965,316,2.262,318,3.007,323,4.78,357,2.827,382,2.233,413,3.007,561,3.261,630,5.715,646,3.313,1023,1.538,1088,3.162,1115,1.973,1136,3.639,1141,3.235,1142,3.235,1143,4.395,1174,4.061,1189,2.247,1314,3.485,1346,2.204,1400,2.594,1501,2.512,1981,4.603,1984,4.061,2007,5.386,2337,5.386,2453,4.395,2481,4.603,2482,6.01,2483,4.395,2484,4.603,2485,4.395,2486,4.852,2487,5.613,2488,6.198,2489,4.852,2490,4.217,2491,4.852,2492,5.613,2493,6.478,2494,6.517,2495,6.83,2496,5.879,2497,5.613,2498,6.826,2499,4.603,2500,4.395,2501,5.879,2502,4.603]],["title/interfaces/GaOrganInfo.html",[0,0.41,2501,3.708]],["body/interfaces/GaOrganInfo.html",[0,0.765,1,1.461,2,0.044,3,0.044,4,0.038,8,0.26,9,0.448,11,1.391,20,0.692,21,0.339,22,0.005,29,0.058,39,2.408,47,1.074,48,0.451,54,2.694,59,2.439,60,2.439,95,1.308,108,2.119,130,0.004,131,0.004,135,2.694,184,1.426,312,2.01,316,2.314,318,3.075,323,4.859,357,2.892,382,2.284,413,3.075,561,3.316,630,5.811,646,3.433,1023,2.311,1088,3.276,1115,2.044,1136,3.722,1141,3.352,1142,3.352,1143,4.554,1174,4.208,1189,2.328,1314,3.611,1346,2.254,1400,2.637,1501,2.603,1981,4.769,1984,4.208,2007,5.509,2337,5.509,2453,4.554,2481,4.769,2482,6.075,2483,4.554,2484,4.769,2485,4.554,2486,5.028,2487,5.742,2488,6.34,2489,5.028,2490,4.369,2491,5.028,2492,5.742,2493,6.586,2494,6.603,2495,6.943,2496,6.013,2497,4.554,2498,4.769,2499,4.769,2500,4.554,2501,6.586,2502,4.769]],["title/interfaces/GaOrgansInfo.html",[0,0.41,2500,3.541]],["body/interfaces/GaOrgansInfo.html",[0,0.765,1,1.461,2,0.044,3,0.044,4,0.038,8,0.26,9,0.448,11,1.391,20,0.679,21,0.339,22,0.005,29,0.058,39,2.408,47,1.162,48,0.451,54,2.694,59,2.439,60,2.439,95,1.308,108,1.461,130,0.004,131,0.004,135,2.694,184,1.426,312,2.01,316,2.314,318,3.075,323,4.859,357,2.892,382,2.284,413,3.075,561,3.316,630,5.811,646,3.433,1023,1.594,1088,3.276,1115,2.044,1136,3.722,1141,3.352,1142,3.352,1143,4.554,1174,4.208,1189,2.328,1314,3.611,1346,2.254,1400,2.637,1501,3.774,1981,4.769,1984,4.208,2007,5.509,2337,5.509,2453,4.554,2481,4.769,2482,6.075,2483,4.554,2484,4.769,2485,4.554,2486,5.028,2487,5.742,2488,6.34,2489,5.028,2490,4.369,2491,5.028,2492,5.742,2493,6.586,2494,6.603,2495,6.943,2496,6.013,2497,4.554,2498,4.769,2499,4.769,2500,5.742,2501,6.915,2502,6.915]],["title/injectables/GoogleAnalyticsSyncService.html",[196,3.541,712,2.094]],["body/injectables/GoogleAnalyticsSyncService.html",[2,0.048,3,0.048,4,0.041,10,0.993,20,0.458,21,0.264,22,0.005,24,1.045,25,0.484,29,0.041,44,0.083,48,0.485,64,1.126,120,2.332,130,0.004,131,0.004,195,6.115,196,6.006,207,0.967,209,1.389,215,1.406,218,3.372,219,3.445,220,4.898,221,5.405,236,4.675,247,3.989,258,3.372,269,1.913,271,5.754,298,3.322,299,5.52,486,5.754,572,2.466,712,3.553,714,3.882,971,3.237,1140,3.604,1484,5.763,1487,5.127,1489,4.697,1936,6.805,2124,4.524,2503,8.5,2504,5.754,2505,9.588,2506,6.929,2507,6.929,2508,6.929,2509,6.631,2510,6.929,2511,6.22,2512,6.929,2513,6.929,2514,8.5,2515,8.5,2516,6.929,2517,6.929,2518,6.929,2519,6.22,2520,6.929,2521,6.929,2522,6.929]],["title/interfaces/Graph.html",[0,0.41,1400,1.485]],["body/interfaces/Graph.html",[0,0.853,1,1.007,2,0.031,3,0.044,4,0.026,8,0.179,9,0.349,11,1.59,13,1.352,14,1.332,15,2.287,16,2.071,18,2.69,20,0.717,21,0.306,22,0.005,24,1.5,26,1.875,27,2.317,29,0.062,39,1.875,41,1.216,46,1.63,47,1.214,48,0.635,50,1.667,75,1.89,88,1.37,94,1.141,95,1.284,97,2.071,109,1.409,120,1.126,130,0.003,131,0.003,146,1.428,174,1.557,175,1.534,176,1.534,177,1.534,178,1.534,183,1.349,235,0.663,260,2.018,261,1.155,295,2.218,331,0.942,468,1.629,623,3.19,632,1.59,663,2.513,706,1.764,724,2.509,727,1.71,734,2.123,737,0.913,742,1.979,743,1.646,759,1.17,963,1.629,965,1.512,1023,2.182,1091,1.248,1109,1.681,1110,3.393,1111,3.264,1112,3.317,1115,2.799,1116,3.448,1117,2.513,1188,1.735,1189,1.604,1248,1.735,1299,2.473,1333,1.824,1334,2.644,1335,2.599,1336,1.794,1337,1.735,1338,1.824,1339,1.824,1340,1.824,1341,1.824,1342,1.824,1343,1.824,1344,2.555,1345,1.794,1346,1.755,1347,1.824,1348,1.856,1349,1.824,1350,1.794,1351,1.316,1352,1.824,1353,1.856,1354,1.856,1355,1.856,1356,1.856,1357,1.856,1358,1.856,1359,1.856,1360,1.856,1361,1.856,1362,1.824,1363,1.824,1364,2.644,1365,2.644,1366,1.856,1367,1.448,1368,1.448,1369,1.448,1370,1.824,1371,1.794,1372,1.824,1373,2.599,1374,2.644,1375,2.644,1376,1.824,1377,1.856,1378,1.708,1379,1.856,1380,1.856,1381,1.856,1382,1.856,1383,1.856,1384,1.764,1385,3.027,1386,1.824,1387,1.856,1388,1.856,1389,1.764,1390,1.856,1391,1.856,1392,2.599,1393,1.856,1394,3.299,1395,1.794,1396,3.299,1397,1.856,1398,1.856,1399,1.794,1400,2.184,1401,1.824,1402,2.599,1403,1.856,1404,1.856,1405,1.856,1406,1.856,1407,1.856,1408,1.856,1409,1.856,1410,1.824,1411,1.764,1412,1.334,1413,1.856]],["title/interfaces/GraphData.html",[0,0.41,1401,2.058]],["body/interfaces/GraphData.html",[0,0.853,1,1.013,2,0.031,3,0.044,4,0.027,8,0.18,9,0.351,11,1.596,13,1.36,14,1.338,15,2.293,16,2.078,18,2.694,20,0.717,21,0.282,22,0.005,24,1.501,26,1.883,27,2.324,29,0.062,39,1.883,41,1.224,46,1.635,47,1.215,48,0.636,50,1.674,75,1.052,88,1.379,94,1.148,95,1.29,97,2.078,109,1.417,120,1.133,130,0.003,131,0.003,146,1.437,174,1.567,175,1.544,176,1.544,177,1.544,178,1.544,183,1.355,235,0.666,260,2.025,261,1.163,295,2.228,331,1.032,468,1.639,623,1.775,632,1.596,663,2.524,706,1.775,724,2.518,727,1.718,734,2.132,737,0.917,742,1.988,743,1.653,759,1.177,963,1.639,965,1.521,1023,2.187,1091,1.256,1109,1.691,1110,3.4,1111,3.272,1112,3.325,1115,2.804,1116,3.455,1117,2.524,1188,1.746,1189,1.614,1248,1.746,1299,2.482,1333,1.836,1334,2.656,1335,2.61,1336,1.805,1337,1.746,1338,1.836,1339,1.836,1340,1.836,1341,1.836,1342,1.836,1343,1.836,1344,2.566,1345,1.805,1346,1.763,1347,1.836,1348,1.868,1349,1.836,1350,1.805,1351,1.324,1352,1.836,1353,1.868,1354,1.868,1355,1.868,1356,1.868,1357,1.868,1358,1.868,1359,1.868,1360,1.868,1361,1.868,1362,1.836,1363,1.836,1364,2.656,1365,2.656,1366,1.868,1367,1.458,1368,1.458,1369,1.458,1370,1.836,1371,1.805,1372,1.836,1373,2.61,1374,2.656,1375,2.656,1376,1.836,1377,1.868,1378,1.718,1379,1.868,1380,1.868,1381,1.868,1382,1.868,1383,1.868,1384,1.775,1385,3.038,1386,1.836,1387,1.868,1388,1.868,1389,1.775,1390,1.868,1391,1.868,1392,2.61,1393,1.868,1394,2.61,1395,1.805,1396,2.61,1397,1.868,1398,1.868,1399,1.805,1400,2.386,1401,2.61,1402,2.61,1403,1.868,1404,1.868,1405,1.868,1406,1.868,1407,1.868,1408,1.868,1409,1.868,1410,1.836,1411,1.775,1412,1.342,1413,1.868]],["title/classes/HasError.html",[44,0.06,759,1.32]],["body/classes/HasError.html",[2,0.036,3,0.036,4,0.031,8,0.209,9,0.389,10,0.744,20,0.594,21,0.402,22,0.005,25,0.404,29,0.062,44,0.124,48,0.363,64,1.356,130,0.003,131,0.003,203,2.348,207,1.118,209,1.041,235,0.544,268,1.702,269,2.181,272,2.897,308,0.921,310,1.497,312,1.284,316,2.008,331,0.783,350,1.497,382,1.459,504,1.177,559,2.89,561,3.347,606,1.333,632,1.854,737,1.114,758,2.247,759,1.858,766,3.337,767,1.964,768,1.252,1019,1.964,1028,2.332,1029,2.425,1031,4.105,1032,2.222,1033,2.801,1034,2.146,1035,1.646,1036,2.332,1037,3.873,1038,3.181,1039,2.411,1040,2.332,1041,2.377,1042,2.289,1043,2.289,1044,2.332,1045,2.332,1046,2.332,1047,2.247,1048,1.646,1049,2.332,1050,2.332,1051,2.332,1052,2.062,1053,2.377,1054,2.377,1055,2.169,1056,2.289,1057,2.332,1058,2.332,1059,2.289,1060,2.332,1061,2.3,1062,2.332,2523,5.19,2524,7.051,2525,5.19]],["title/components/HomeComponent.html",[250,1.355,369,1.958]],["body/components/HomeComponent.html",[2,0.023,3,0.014,4,0.02,8,0.284,9,0.187,10,0.485,11,2.023,20,0.291,21,0.289,22,0.005,25,0.394,29,0.012,30,1.002,34,0.973,44,0.024,46,1.05,47,0.807,48,0.439,58,2.201,64,0.448,100,1.366,102,2.381,106,1.801,108,0.453,109,1.073,130,0.002,131,0.002,141,3.283,142,1.895,143,1.895,144,1.947,158,2.773,181,3.462,188,0.488,200,1.203,202,1.203,207,1.301,209,0.678,210,1.412,211,2.17,215,0.406,218,0.973,219,0.994,220,1.064,230,1.847,235,0.872,245,1.366,250,1.189,251,0.794,252,1.389,253,0.835,254,0.835,255,0.835,256,0.711,258,1.646,260,0.547,261,2.526,262,3.856,263,5.289,264,1.366,266,1.366,268,1.244,269,0.416,270,5.22,284,1.26,287,0.794,298,2.749,299,1.947,305,5.042,308,1.475,310,0.577,318,1.957,331,0.222,334,3.036,339,4.085,341,1.413,342,1.366,343,0.835,344,2.162,345,0.835,346,0.835,347,0.794,348,0.835,349,0.794,350,0.577,351,0.835,352,0.794,353,0.835,354,0.781,355,0.835,356,0.794,357,2.059,358,0.835,359,0.794,360,0.835,361,0.794,362,0.835,363,0.794,364,1.413,365,0.794,366,0.835,367,0.794,368,0.835,369,2.021,370,0.835,371,0.768,372,0.835,373,0.794,374,0.835,375,0.794,376,0.835,377,0.794,378,0.835,379,0.807,380,0.835,381,0.794,382,0.95,383,0.835,384,0.794,385,0.507,386,0.835,387,0.794,388,1.28,389,0.835,390,0.794,391,0.835,392,0.807,393,0.835,394,0.794,395,0.835,396,0.807,397,0.835,398,0.794,399,0.835,400,0.794,401,0.744,402,0.835,403,0.794,404,0.781,405,0.835,406,0.821,407,0.835,408,0.794,409,0.835,410,0.794,411,0.794,412,1.366,413,0.756,414,0.835,415,0.835,431,4.475,452,1.412,468,2.933,559,2.676,572,1.565,607,3.507,631,2.39,661,4.368,662,4.368,690,1.659,698,3.331,699,3.77,703,1.305,705,1.479,733,2.638,742,2.78,743,2.424,748,3.961,768,0.482,904,1.794,941,3.036,952,2.208,972,3.046,1022,1.759,1024,2.503,1032,0.494,1037,2.162,1052,1.746,1078,3.159,1096,3.242,1115,1.835,1141,1.039,1142,1.039,1144,1.184,1189,1.869,1193,1.305,1227,5.206,1240,2.39,1256,4.685,1257,3.964,1259,3.262,1260,3.377,1265,5.093,1267,6.086,1269,2.638,1270,1.26,1271,1.26,1274,3.48,1275,2.773,1276,3.158,1277,1.22,1278,3.721,1284,2.691,1287,4.001,1291,4.686,1292,4.629,1293,2.39,1296,5.289,1298,2.87,1299,1.475,1301,3.158,1302,3.777,1303,2.293,1308,3.964,1309,3.577,1310,1.559,1312,5.194,1313,1.559,1314,1.12,1315,3.158,1317,3.331,1320,1.479,1321,4.035,1323,1.659,1337,0.781,1346,0.938,1378,1.69,1384,2.055,1389,1.746,1471,1.659,1484,2.981,1489,1.355,1501,0.807,1532,1.847,1588,0.821,1667,3.158,1783,1.479,1839,3.106,1842,1.305,1845,3.036,1846,4.644,1853,6.007,1854,1.184,1856,2.208,1857,1.479,1882,0.821,1928,3.651,1932,5.216,1933,5.216,1936,4.281,1939,4.296,1940,4.644,1941,4.644,1942,1.559,1952,2.808,1964,3.253,1965,3.106,1966,3.253,1969,1.659,1970,1.659,1971,1.659,1976,1.659,1987,4.513,1991,1.794,1992,1.659,1993,3.43,1994,4.296,1995,1.659,1996,4.971,1997,1.794,1998,1.794,1999,3.947,2000,3.253,2004,1.794,2005,5.556,2006,4.219,2007,1.355,2009,1.794,2010,5.194,2011,5.194,2012,5.194,2013,5.194,2014,3.651,2017,3.036,2018,3.43,2019,3.43,2020,1.659,2021,3.828,2022,3.651,2028,2.638,2033,1.794,2039,5.22,2040,2.808,2041,4.035,2042,2.981,2080,2.638,2167,2.638,2169,3.036,2268,1.412,2270,1.659,2292,3.253,2293,1.355,2308,3.106,2331,1.479,2341,5.639,2342,5.639,2344,4.644,2359,1.794,2360,1.794,2364,3.036,2365,5.194,2367,3.036,2376,3.036,2377,3.036,2410,4.644,2454,2.808,2463,3.253,2490,4.258,2492,5.178,2526,1.998,2527,4.397,2528,3.382,2529,5.639,2530,6.281,2531,5.639,2532,4.644,2533,5.639,2534,4.397,2535,4.397,2536,5.173,2537,3.382,2538,1.998,2539,1.998,2540,1.998,2541,1.998,2542,1.998,2543,1.998,2544,3.382,2545,1.998,2546,1.998,2547,1.998,2548,1.998,2549,1.998,2550,1.998,2551,1.998,2552,1.998,2553,1.998,2554,1.998,2555,1.998,2556,1.998,2557,1.998,2558,1.998,2559,4.397,2560,3.382,2561,1.998,2562,1.998,2563,1.998,2564,3.43,2565,3.382,2566,1.998,2567,1.998,2568,1.998,2569,1.794,2570,1.998,2571,1.998,2572,1.998,2573,1.794,2574,1.794,2575,3.382,2576,1.998,2577,1.998,2578,3.382,2579,1.998,2580,1.998,2581,1.998,2582,1.998,2583,1.998,2584,1.998,2585,1.998,2586,1.998,2587,1.998,2588,1.998,2589,1.998,2590,1.998,2591,1.998,2592,1.998,2593,1.998,2594,6.281,2595,1.998,2596,5.785,2597,1.998,2598,1.998,2599,1.998,2600,1.998,2601,1.998,2602,4.397,2603,3.036,2604,3.382,2605,6.281,2606,3.382,2607,3.382,2608,3.036,2609,3.382,2610,2.808,2611,5.173,2612,3.382,2613,3.382,2614,3.382,2615,3.382,2616,3.382,2617,3.382,2618,4.397,2619,3.382,2620,3.382,2621,2.808,2622,3.382,2623,6.281,2624,3.382,2625,3.382,2626,3.382,2627,4.397,2628,3.382,2629,3.036,2630,3.382,2631,3.382,2632,4.397,2633,3.382,2634,5.173,2635,3.382,2636,3.382,2637,4.644,2638,3.382,2639,3.382,2640,3.382,2641,3.382,2642,3.382,2643,3.382,2644,3.382,2645,3.036,2646,3.382,2647,3.382,2648,3.382,2649,4.397,2650,3.382,2651,3.382,2652,1.998,2653,4.644,2654,1.998,2655,7.035,2656,1.998,2657,3.382,2658,5.194,2659,1.794,2660,3.036,2661,1.998,2662,4.644,2663,1.998,2664,1.998,2665,1.998,2666,3.651,2667,1.998,2668,1.998,2669,1.998,2670,1.998,2671,1.998,2672,1.998,2673,1.794,2674,1.998,2675,3.382,2676,1.998,2677,1.998,2678,1.998,2679,1.998,2680,1.794,2681,3.382,2682,1.998,2683,1.998,2684,1.998,2685,1.794,2686,1.998,2687,1.998,2688,1.998,2689,1.794,2690,1.998,2691,3.382,2692,3.253,2693,3.651,2694,4.397,2695,3.651,2696,1.998,2697,3.382,2698,1.998,2699,1.998,2700,1.998,2701,1.998,2702,4.397,2703,5.173,2704,3.382,2705,5.173,2706,1.998,2707,3.382,2708,5.173,2709,1.998,2710,1.998,2711,1.998,2712,1.998,2713,1.998,2714,2.808,2715,1.998,2716,1.998,2717,1.998,2718,5.173,2719,3.382,2720,1.998,2721,1.998,2722,1.794,2723,3.382,2724,1.998,2725,3.382,2726,3.382,2727,1.998,2728,1.998,2729,1.998,2730,1.998,2731,3.382,2732,4.397,2733,1.998,2734,1.998,2735,1.998,2736,1.998,2737,1.998,2738,1.659,2739,1.998,2740,1.998,2741,1.659,2742,1.794,2743,1.998,2744,1.998,2745,1.998,2746,1.998,2747,8.794,2748,3.382,2749,3.382,2750,3.382,2751,5.173,2752,4.397,2753,5.785,2754,1.998,2755,6.806,2756,3.382,2757,1.794,2758,3.382,2759,1.998,2760,1.998,2761,3.382,2762,1.998,2763,3.382,2764,1.998,2765,1.659,2766,1.998,2767,1.998,2768,1.998]],["title/modules/HomeModule.html",[184,1.108,426,3.708]],["body/modules/HomeModule.html",[2,0.047,3,0.047,4,0.04,22,0.005,25,0.526,29,0.04,44,0.081,130,0.004,131,0.004,184,1.505,186,2.422,187,2.576,188,1.662,189,3.452,190,2.576,191,2.497,192,3.399,198,3.182,199,2.535,200,2.422,214,3.084,215,1.382,243,3.132,278,3.312,284,4.292,369,4.086,388,2.576,404,3.285,425,6.76,426,7.704,494,6.221,1422,3.339,1423,2.659,1427,4.18,1435,3.928,1436,3.18,2054,5.699,2055,4.614,2056,4.614,2281,5.94,2282,4.614,2532,6.11,2569,6.11,2769,6.11,2770,6.11,2771,6.11,2772,6.11,2773,6.76,2774,6.806,2775,6.806,2776,6.806,2777,8.407,2778,5.036,2779,5.652]],["title/classes/ILNode.html",[44,0.06,2298,3.541]],["body/classes/ILNode.html",[2,0.045,3,0.045,4,0.039,8,0.265,9,0.454,10,1.348,11,2.165,20,0.705,21,0.395,22,0.005,29,0.039,30,1.947,44,0.078,48,0.71,50,2.643,57,4.882,61,4.783,64,0.871,66,3.501,68,3.07,70,3.07,71,3.07,80,3.07,82,3.501,130,0.004,131,0.004,202,2.928,207,1.416,209,1.65,211,2.271,232,2.928,268,1.779,504,1.49,505,7.386,1061,2.683,2298,7.087,2780,6.572,2781,8.227,2782,6.572,2783,6.572,2784,6.572,2785,6.572,2786,6.572,2787,8.227,2788,6.572,2789,8.227,2790,8.227,2791,6.572,2792,6.572]],["title/components/IndentedListComponent.html",[250,1.355,371,1.927]],["body/components/IndentedListComponent.html",[0,0.453,2,0.025,3,0.025,4,0.033,8,0.149,9,0.306,10,1.056,11,1.787,20,0.488,21,0.344,22,0.005,24,0.559,25,0.418,29,0.022,44,0.044,46,0.752,47,0.801,48,0.617,50,1.749,53,2.274,57,1.803,58,1.159,64,0.491,108,0.84,130,0.003,131,0.003,181,2.875,188,0.905,202,1.972,207,1.367,209,1.111,211,1.28,215,0.752,232,1.318,235,0.899,245,1.496,250,1.795,251,1.472,252,2.277,253,1.548,254,1.548,255,1.548,256,2.622,258,2.697,259,3.822,260,1.015,261,2.699,262,4.121,264,2.238,266,2.238,268,1.563,269,0.771,287,1.472,295,1.943,298,2.594,299,2.133,308,1.522,310,1.069,329,2.133,331,0.615,341,2.316,342,2.238,343,1.548,344,3.08,345,1.548,346,1.548,347,1.472,348,1.548,349,1.472,350,1.069,351,1.548,352,1.472,353,1.548,354,1.448,355,1.548,356,1.472,357,1.318,358,1.548,359,1.472,360,1.548,361,1.472,362,1.548,363,1.472,364,2.316,365,1.472,366,1.548,367,1.472,368,1.548,369,1.448,370,1.548,371,2.833,372,1.548,373,1.472,374,1.548,375,1.472,376,1.548,377,1.472,378,1.548,379,1.496,380,1.548,381,1.472,382,1.041,383,1.548,384,1.472,385,0.94,386,1.548,387,1.472,388,2.097,389,1.548,390,1.472,391,1.548,392,1.496,393,1.548,394,1.472,395,1.548,396,1.496,397,1.548,398,1.472,399,1.548,400,1.472,401,1.38,402,1.548,403,1.472,404,1.448,405,1.548,406,1.522,407,1.548,408,1.472,409,1.548,410,1.472,411,1.472,412,1.496,413,1.402,414,1.548,415,1.548,572,3.14,646,5.307,661,2.419,662,2.419,699,1.842,703,2.419,724,2.261,735,5.18,737,0.823,742,1.734,743,1.442,768,0.894,914,5.574,1022,1.927,1039,0.964,1047,3.191,1048,1.758,1055,2.775,1088,2.817,1090,3.495,1100,4.542,1136,3.376,1137,3.72,1274,2.883,1275,2.336,1279,3.191,1284,3.454,1287,4.52,1291,3.302,1296,2.512,1298,2.419,1314,3.105,1320,4.101,1484,4.501,1489,2.512,1532,2.023,1606,5.18,1609,5.838,1723,3.822,1783,2.742,1839,2.618,2006,2.336,2020,3.077,2284,4.324,2285,7.292,2286,6.962,2287,3.077,2288,4.602,2289,5.514,2290,5.514,2291,3.077,2292,4.913,2293,2.512,2294,5.514,2295,3.077,2296,5.514,2297,2.89,2298,5.207,2299,2.89,2300,5.838,2301,5.85,2302,3.077,2303,4.602,2304,5.514,2305,5.18,2306,5.514,2307,4.913,2308,4.691,2309,5.514,2310,4.602,2311,5.514,2312,5.514,2313,3.077,2314,6.552,2315,5.514,2316,6.12,2317,3.077,2318,3.077,2319,5.514,2320,4.602,2321,5.18,2322,4.602,2323,4.602,2324,6.12,2325,3.077,2326,3.077,2327,3.077,2328,5.514,2329,3.077,2330,3.077,2331,2.742,2332,3.077,2333,3.077,2334,4.602,2335,3.077,2603,4.976,2658,3.326,2693,3.077,2793,5.542,2794,3.705,2795,5.542,2796,3.705,2797,3.705,2798,3.705,2799,3.705,2800,3.705,2801,3.705,2802,3.705,2803,3.705,2804,3.705,2805,3.705,2806,3.705,2807,3.705,2808,3.705,2809,3.705,2810,5.542,2811,5.542,2812,5.542,2813,3.705,2814,3.705,2815,5.542,2816,3.705,2817,3.326,2818,3.705,2819,3.705,2820,5.542,2821,3.705,2822,3.705]],["title/modules/IndentedListModule.html",[184,1.108,2823,3.708]],["body/modules/IndentedListModule.html",[2,0.048,3,0.048,4,0.042,22,0.005,25,0.518,29,0.042,44,0.083,130,0.004,131,0.004,184,1.55,186,2.493,187,2.652,188,1.711,189,3.497,190,2.652,191,2.57,192,3.443,198,3.239,199,2.61,200,2.493,214,3.14,215,1.422,243,3.189,278,3.41,371,4.036,401,2.61,1419,6.332,1420,6.131,1422,3.4,1423,2.738,1427,4.256,1432,5.185,1433,4.75,1434,5.185,1435,3.998,1436,3.273,2285,5.185,2286,4.951,2297,5.466,2301,4.951,2823,7.735,2824,6.29,2825,6.29,2826,6.29,2827,7.007,2828,7.007,2829,7.007,2830,8.559]],["title/injectables/IndentedListService.html",[712,2.094,2300,3.708]],["body/injectables/IndentedListService.html",[2,0.042,3,0.042,4,0.036,8,0.245,9,0.432,10,0.87,21,0.232,22,0.005,25,0.462,29,0.036,30,2.319,43,4.403,44,0.072,48,0.425,49,4.81,130,0.004,131,0.004,141,3.389,167,4.385,202,2.785,207,1.093,209,1.218,211,2.099,215,1.233,232,2.785,235,0.637,236,3.979,247,3.498,268,1.715,269,1.902,299,3.498,308,1.078,331,1.119,565,2.896,572,3.081,712,3.271,714,3.404,724,3.113,737,1.237,768,1.466,774,3.831,777,4.293,844,6.499,961,4.293,1140,3.16,1641,6.106,1723,3.498,2285,6.407,2286,6.117,2298,6.46,2299,4.74,2300,5.791,2305,7.133,2831,6.076,2832,7.826,2833,7.826,2834,6.076,2835,7.826,2836,6.076,2837,6.076,2838,5.455,2839,5.455,2840,5.455,2841,5.455,2842,5.455,2843,5.045,2844,5.455,2845,6.076,2846,5.045,2847,6.076,2848,7.026,2849,5.455,2850,7.026,2851,6.076,2852,5.455,2853,5.455,2854,5.455,2855,6.076,2856,6.076,2857,6.076,2858,6.076,2859,6.076,2860,7.826,2861,7.826]],["title/components/InfoComponent.html",[250,1.355,373,1.99]],["body/components/InfoComponent.html",[2,0.063,3,0.027,4,0.034,8,0.159,9,0.32,10,0.563,15,2.557,18,2.161,21,0.323,22,0.005,25,0.442,29,0.023,44,0.047,46,1.823,48,0.481,52,4.848,53,2.7,64,0.768,95,1.176,97,1.628,108,0.892,130,0.003,131,0.003,188,0.961,202,2.062,207,1.28,209,0.789,211,1.359,215,0.798,218,1.914,219,1.956,220,2.095,235,0.721,245,2.778,250,1.859,251,1.562,252,2.38,253,1.644,254,1.644,255,1.644,256,1.4,258,2.82,259,3.96,260,1.077,261,2.712,262,4.142,264,2.34,266,2.34,268,1.816,269,1.939,287,1.562,298,2.264,299,2.264,308,1.22,310,1.135,329,2.264,331,0.996,341,2.421,342,2.34,343,1.644,344,3.171,345,1.644,346,1.644,347,1.562,348,1.644,349,1.562,350,1.135,351,1.644,352,1.562,353,1.644,354,1.537,355,1.644,356,1.562,357,1.4,358,1.644,359,1.562,360,1.644,361,1.562,362,1.644,363,1.562,364,2.421,365,1.562,366,1.644,367,1.562,368,1.644,369,1.537,370,1.644,371,1.512,372,1.644,373,3.014,374,1.644,375,1.562,376,1.644,377,1.562,378,1.644,379,1.588,380,1.644,381,1.562,382,1.105,383,1.644,384,1.562,385,0.998,386,1.644,387,1.562,388,2.192,389,1.644,390,1.562,391,1.644,392,1.588,393,1.644,394,1.562,395,1.644,396,1.588,397,1.644,398,1.562,399,1.644,400,1.562,401,1.465,402,1.644,403,1.562,404,1.537,405,1.644,406,1.616,407,1.644,408,1.562,409,1.644,410,1.562,411,1.562,412,1.588,413,1.488,414,1.644,415,1.644,551,2.707,572,1.4,632,1.826,678,5.979,697,2.666,734,2.546,737,0.718,742,1.23,743,1.023,759,1.999,766,2.76,767,1.488,768,0.949,963,1.443,965,1.339,1031,3.888,1032,0.973,1038,3.014,1078,4.417,1096,4.532,1098,5.281,1100,3.335,1137,2.204,1140,2.046,1141,2.046,1142,2.046,1144,2.33,1188,2.965,1193,2.568,1240,4.093,1277,2.401,1278,2.33,1371,3.065,1532,2.147,1856,2.568,1857,2.91,1876,2.603,2113,6.175,2114,7.262,2115,2.401,2116,7.262,2119,5.201,2124,2.568,2125,3.531,2126,2.91,2127,5.201,2137,3.531,2141,5.712,2494,2.779,2741,4.811,2862,3.933,2863,6.878,2864,5.793,2865,8.75,2866,5.793,2867,3.933,2868,3.933,2869,3.933,2870,3.933,2871,3.933,2872,3.933,2873,3.933,2874,3.933,2875,5.793,2876,5.793,2877,5.793,2878,3.933,2879,3.933,2880,3.933,2881,3.531,2882,7.588,2883,5.793,2884,8.462,2885,5.793,2886,5.793,2887,5.793,2888,7.588,2889,7.588,2890,7.588,2891,5.793,2892,5.793,2893,7.588,2894,7.588,2895,7.588]],["title/modules/InfoModule.html",[184,1.108,2896,3.708]],["body/modules/InfoModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.517,29,0.043,44,0.086,130,0.004,131,0.004,184,1.606,186,2.584,187,2.748,188,1.774,189,3.552,190,2.748,191,2.664,192,3.497,198,3.31,199,2.705,200,2.584,214,3.208,215,1.474,218,3.534,243,2.705,278,3.534,373,4.188,448,7.263,449,5.665,737,0.9,1422,3.474,1423,2.838,1427,4.349,1435,4.086,1436,3.393,2126,5.374,2148,7.263,2896,7.579,2897,6.519,2898,6.519,2899,6.519,2900,7.262,2901,7.262]],["title/interfaces/Legend.html",[0,0.41,188,1.224]],["body/interfaces/Legend.html",[0,0.621,1,1.722,2,0.052,3,0.052,4,0.045,8,0.306,9,0.496,10,1.287,11,2.134,20,0.701,21,0.385,22,0.005,29,0.045,47,1.154,48,0.692,130,0.004,131,0.004,188,2.194,1399,3.993,2275,6.703,2902,7.594,2903,8.876]],["title/components/LegendComponent.html",[250,1.355,375,1.99]],["body/components/LegendComponent.html",[2,0.03,3,0.03,4,0.037,8,0.173,9,0.341,10,0.616,11,1.884,14,0.905,21,0.343,22,0.005,25,0.473,29,0.026,44,0.051,45,3.252,48,0.506,60,1.627,64,0.57,102,1.53,108,0.975,130,0.003,131,0.003,158,2.711,175,1.485,176,1.485,177,1.485,178,1.485,181,1.862,182,5.504,188,2.324,207,1.256,209,0.862,215,0.873,235,0.758,250,1.956,251,1.708,252,2.539,253,1.797,254,1.797,255,1.797,256,1.53,258,3.009,259,4.167,260,1.177,261,2.731,262,4.17,264,2.496,266,2.496,268,1.224,287,1.708,298,1.68,308,1.284,310,1.24,329,2.475,331,0.477,339,2.625,341,2.583,342,2.496,343,1.797,344,3.307,345,1.797,346,1.797,347,1.708,348,1.797,349,1.708,350,1.24,351,1.797,352,1.708,353,1.797,354,1.68,355,1.797,356,1.708,357,1.53,358,1.797,359,1.708,360,1.797,361,1.708,362,1.797,363,1.708,364,2.583,365,1.708,366,1.797,367,1.708,368,1.797,369,1.68,370,1.797,371,1.653,372,1.797,373,1.708,374,1.797,375,3.143,376,1.797,377,1.708,378,1.797,379,1.736,380,1.797,381,1.708,382,1.208,383,1.797,384,1.708,385,1.09,386,1.797,387,1.708,388,2.339,389,1.797,390,1.708,391,1.797,392,1.736,393,1.797,394,1.708,395,1.797,396,1.736,397,1.797,398,1.708,399,1.797,400,1.708,401,1.602,402,1.797,403,1.708,404,1.68,405,1.797,406,1.766,407,1.797,408,1.708,409,1.797,410,1.708,411,1.708,412,1.736,413,1.627,414,1.797,415,1.797,468,2.903,577,2.807,587,3.57,666,3.86,699,3.074,725,4.725,742,2.813,743,2.271,761,2.138,766,2.847,767,1.627,768,1.037,769,2.049,1039,1.118,1052,1.708,1088,3.142,1091,2.453,1136,3.84,1140,2.236,1246,4.725,1256,3.952,1257,4.287,1259,2.711,1260,2.807,1274,2.236,1277,2.625,1278,2.547,1279,4.556,1280,5.365,1281,3.038,1282,3.038,1283,3.038,1284,5.263,1287,5.025,1288,3.038,1291,2.138,1299,2.074,1309,3.142,1315,4.419,1322,4.574,1567,3.86,1578,3.038,1667,2.625,1668,3.038,1854,2.547,1856,2.807,2018,3.354,2019,3.354,2268,4.367,2461,3.354,2462,4.822,2463,5.356,2464,3.354,2465,3.354,2468,3.86,2469,3.86,2660,7.104,2695,3.57,2755,3.86,2904,4.299,2905,7.237,2906,7.237,2907,6.181,2908,5.356,2909,7.913,2910,4.299,2911,6.962,2912,6.181,2913,4.299,2914,4.299,2915,4.299,2916,4.299,2917,4.299,2918,3.86,2919,4.299,2920,4.299,2921,3.86,2922,4.299,2923,4.299,2924,4.299,2925,4.299,2926,4.299,2927,4.299,2928,4.299,2929,5.549,2930,9.203,2931,4.299,2932,9.203,2933,8.262,2934,7.104,2935,4.299,2936,4.299,2937,4.299,2938,4.299,2939,4.299]],["title/modules/LegendModule.html",[184,1.108,1679,3.541]],["body/modules/LegendModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.504,29,0.043,44,0.087,130,0.004,131,0.004,184,1.613,186,2.596,187,2.76,188,1.782,189,3.559,190,2.76,191,2.676,192,3.503,198,3.319,199,2.717,200,2.596,214,3.217,215,1.481,243,3.267,375,4.19,1422,3.483,1423,2.85,1425,5.725,1426,4.762,1679,7.353,2940,6.548,2941,6.548,2942,6.548,2943,6.548,2944,7.501,2945,7.294,2946,7.294,2947,6.548,2948,6.057,2949,6.548]],["title/injectables/LegendService.html",[712,2.094,2911,4.161]],["body/injectables/LegendService.html",[2,0.03,3,0.03,4,0.026,8,0.179,9,0.348,10,0.635,11,2.172,21,0.169,22,0.005,25,0.445,26,1.312,29,0.026,30,2.377,32,1.953,34,2.156,36,4.217,38,1.789,41,2.015,43,1.953,44,0.053,45,3.605,48,0.707,53,2.913,75,1.486,78,1.99,94,1.622,100,1.789,130,0.003,131,0.003,138,3.605,141,3.672,142,3.538,143,3.538,144,2.55,145,2.624,146,2.727,174,2.214,175,3.204,176,2.181,177,2.181,178,2.181,182,5.059,188,1.959,202,2.247,207,0.882,209,0.888,211,1.53,215,0.899,232,1.576,235,0.662,245,3.812,269,1.669,299,2.55,308,1.12,553,3.678,572,2.619,603,4.673,626,3.129,691,3.678,697,4.988,702,4.926,712,2.639,714,2.482,725,4.123,761,2.202,768,1.068,769,2.111,774,2.793,916,3.976,917,3.976,918,3.976,919,3.976,920,3.976,921,3.976,1091,2.607,1140,2.304,1202,3.278,1344,1.789,1399,3.425,1641,4.926,1842,2.892,1855,5.669,2001,3.976,2275,6.821,2454,7.042,2846,5.244,2903,9.033,2908,4.673,2911,5.244,2918,3.976,2929,3.976,2950,4.429,2951,8.021,2952,6.314,2953,6.314,2954,4.429,2955,6.314,2956,4.429,2957,7.358,2958,7.358,2959,7.358,2960,7.358,2961,7.358,2962,7.358,2963,7.358,2964,7.358,2965,7.358,2966,8.021,2967,10.062,2968,6.314,2969,7.358,2970,8.816,2971,6.314,2972,8.021,2973,8.021,2974,8.021,2975,9.275,2976,7.358,2977,4.429,2978,4.429,2979,4.429,2980,3.976,2981,3.455,2982,6.314,2983,4.429]],["title/classes/Legends.html",[44,0.06,2908,3.708]],["body/classes/Legends.html",[2,0.043,3,0.043,4,0.037,8,0.249,9,0.437,20,0.655,21,0.363,22,0.005,25,0.312,29,0.037,38,2.5,44,0.074,47,1.251,64,1.157,102,2.202,130,0.004,131,0.004,188,2.378,202,2.818,203,1.956,207,1.329,211,3.017,232,3.108,235,0.83,504,1.403,534,5.454,550,2.781,555,7.11,571,2.73,572,2.202,589,6.178,594,6.577,601,7.183,603,5.86,606,2.034,624,6.178,663,3.146,695,5.139,697,6.242,699,3.077,711,4.58,800,6.178,1115,2.512,1309,3.146,1794,8.266,2765,6.577,2908,7.042,2921,5.556,2980,5.556,2984,6.189,2985,9.207,2986,9.207,2987,7.919,2988,6.189,2989,6.189,2990,7.919,2991,7.919,2992,9.207,2993,9.207,2994,9.207,2995,9.207,2996,6.189,2997,7.919,2998,7.919,2999,6.189,3000,6.189,3001,6.189,3002,5.556,3003,7.919,3004,5.556]],["title/interfaces/Link.html",[0,0.41,95,1.017]],["body/interfaces/Link.html",[0,0.756,1,1.279,2,0.039,3,0.039,4,0.034,8,0.227,9,0.411,11,1.803,12,3.351,13,1.717,14,1.188,15,2.379,16,2.348,17,3.351,20,0.693,21,0.339,22,0.005,23,2.914,24,0.851,25,0.376,26,2.21,27,2.152,28,2.241,29,0.06,30,2.738,32,2.489,38,2.279,40,2.585,41,1.545,44,0.067,46,1.145,47,1.263,48,0.622,50,2.201,51,2.69,53,2.301,54,2.358,55,2.536,58,2.333,59,3.161,60,3.161,64,0.748,68,2.636,70,2.636,71,2.636,73,2.636,75,1.755,76,2.69,77,2.69,78,2.536,80,2.636,85,2.69,86,2.69,87,4.076,88,2.577,94,1.449,95,1.804,96,4.152,97,1.586,99,2.69,100,2.279,102,2.654,130,0.003,131,0.003,132,3.825,133,3.825,134,3.987,135,3.117,136,3.987,137,5.056,138,3.754,139,3.248,140,5.056,141,2.443,142,3.161,143,3.161,144,3.248,145,3.343,146,1.815,147,4.154,148,5.454,149,3.445,150,3.445,151,3.684,152,3.987,153,3.558,154,3.987,155,3.987,156,3.987,157,3.987,158,3.558,159,3.987,160,3.987,161,3.987,162,3.825,163,3.825,164,3.987,165,3.987,166,3.987,167,4.979,168,5.604,169,3.684,170,3.558,171,3.684,172,3.684,173,3.684,174,1.978,175,1.949,176,1.949,177,1.949,178,1.949,179,3.289,180,4.869,181,3.229,182,3.558,183,1.203]],["title/interfaces/LinksASCTBData.html",[0,0.41,115,2.669]],["body/interfaces/LinksASCTBData.html",[0,0.799,1,1.048,2,0.032,3,0.032,4,0.027,5,2.404,6,4.113,7,4.253,8,0.186,9,0.359,11,2.024,12,3.385,13,2.721,14,1.586,15,2.546,16,2.513,17,3.385,18,2.616,19,2.462,20,0.712,21,0.35,22,0.005,23,3.493,24,1.385,25,0.233,26,2.232,27,1.878,28,1.836,29,0.061,30,2.423,31,2.404,32,2.039,33,2.404,34,2.25,35,2.404,36,2.298,37,2.462,38,1.867,39,1.37,40,2.117,41,1.782,42,2.462,43,2.039,44,0.09,45,2.077,46,1.865,47,1.266,48,0.625,49,4.157,50,1.715,51,2.203,52,2.404,53,2.659,54,3.148,55,2.077,56,4.012,57,2.25,58,2.356,59,2.851,60,2.851,61,3.467,62,3.553,63,3.553,64,0.612,65,3.553,66,2.462,67,2.524,68,2.159,69,2.524,70,2.159,71,3.519,72,2.524,73,2.159,74,2.159,75,1.088,76,3.591,77,2.203,78,3.385,79,4.113,80,2.159,81,2.524,82,2.462,83,2.524,84,2.524,85,2.203,86,2.203,87,2.039,88,2.008,89,2.462,90,2.524,91,2.524,92,2.524,93,2.524,94,1.187,95,1.749,96,3.04,97,1.299,98,1.932,99,2.203,100,1.867,101,3.553,102,1.645,103,3.553,104,2.524,105,2.462,106,4.012,107,2.524,108,1.708,109,1.466,110,2.524,111,2.462,112,2.524,113,1.899,114,1.867,115,3.467,116,3.359,117,3.417,118,3.417,119,3.417,120,2.418,121,3.417,122,3.417,123,2.462,124,2.524,125,2.524,126,2.524,127,2.524,128,2.524,129,2.524,130,0.003,131,0.003]],["title/interfaces/Loading.html",[0,0.41,1038,1.99]],["body/interfaces/Loading.html",[0,0.801,1,1.668,2,0.051,3,0.051,4,0.044,8,0.297,9,0.486,15,2.095,20,0.679,21,0.36,22,0.005,24,1.475,25,0.477,27,2.544,28,2.923,29,0.058,47,0.888,48,0.515,50,1.939,97,2.068,130,0.004,131,0.004,147,3.659,272,3.023,559,2.367,1019,2.785,1020,4.799,1033,3.502,1034,2.24,1038,4.035,3005,5.741,3006,6.914,3007,5.741,3008,5.741,3009,5.445,3010,5.199,3011,5.199]],["title/components/LoadingComponent.html",[250,1.355,377,1.99]],["body/components/LoadingComponent.html",[2,0.039,3,0.039,4,0.044,8,0.228,9,0.412,10,0.809,20,0.588,21,0.319,22,0.005,25,0.467,29,0.034,44,0.067,48,0.585,64,0.748,108,1.281,130,0.003,131,0.003,188,1.38,207,1.167,209,1.133,215,1.147,250,2.259,251,2.244,252,3.066,253,2.361,254,2.361,255,2.361,256,2.01,258,3.632,259,4.812,260,1.547,261,2.78,262,4.245,264,3.014,266,3.014,268,1.656,287,2.244,298,2.207,310,1.63,329,3.252,331,0.987,341,3.119,342,3.014,343,2.361,344,3.716,345,2.361,346,2.361,347,2.244,348,2.361,349,2.244,350,1.63,351,2.361,352,2.244,353,2.361,354,2.207,355,2.361,356,2.244,357,2.01,358,2.361,359,2.244,360,2.361,361,2.244,362,2.361,363,2.244,364,3.119,365,2.244,366,2.361,367,2.244,368,2.361,369,2.207,370,2.361,371,2.172,372,2.361,373,2.244,374,2.361,375,2.244,376,2.361,377,3.531,378,2.361,379,2.281,380,2.361,381,2.244,382,1.588,383,2.361,384,2.244,385,1.433,386,2.361,387,2.244,388,2.824,389,2.361,390,2.244,391,2.361,392,2.281,393,2.361,394,2.244,395,2.361,396,2.281,397,2.361,398,2.244,399,2.361,400,2.244,401,2.104,402,2.361,403,2.244,404,2.207,405,2.361,406,2.32,407,2.361,408,2.244,409,2.361,410,2.244,411,2.244,412,2.281,413,2.138,414,2.361,415,2.361,444,3.252,476,4.407,477,4.691,1038,2.964,1098,5.457,1140,2.938,1237,3.346,1240,5.273,1532,4.075,1764,4.691,2115,3.449,2124,3.688,2141,6.198,3006,5.905,3012,5.649,3013,8.358,3014,7.463,3015,7.463,3016,5.071,3017,5.649,3018,6.7,3019,5.071,3020,4.407,3021,4.407,3022,5.649,3023,5.649,3024,5.649]],["title/modules/LoadingModule.html",[184,1.108,3025,3.909]],["body/modules/LoadingModule.html",[2,0.052,3,0.052,4,0.045,22,0.005,25,0.482,29,0.045,44,0.09,130,0.004,131,0.004,184,1.67,186,2.686,187,2.856,188,1.844,189,3.611,190,2.856,191,2.769,192,3.555,198,3.387,199,2.812,200,2.686,214,3.283,215,1.532,243,2.812,377,4.207,1422,3.555,1423,2.949,3025,8.052,3026,6.776,3027,6.776,3028,6.776,3029,7.548,3030,7.548]],["title/injectables/LocalStorageSyncService.html",[197,3.541,712,2.094]],["body/injectables/LocalStorageSyncService.html",[2,0.046,3,0.046,4,0.039,10,0.948,20,0.596,21,0.252,22,0.005,23,3.228,25,0.455,29,0.049,30,2.669,43,2.918,44,0.079,48,0.463,64,1.094,130,0.004,131,0.004,163,4.485,195,6.046,197,5.837,207,0.924,209,1.327,215,1.343,221,5.161,224,7.027,232,3.205,234,6.665,235,0.989,236,3.363,258,3.22,269,1.874,271,5.494,298,3.228,299,5.59,300,4.485,302,5.837,308,1.173,572,2.94,712,3.452,714,3.707,774,4.172,777,4.675,961,4.675,1140,3.441,1474,6.981,1484,5.6,1486,4.896,1487,4.896,1489,4.485,2124,4.319,2504,5.494,2509,6.445,2511,5.94,2519,5.94,3031,7.416,3032,6.616,3033,6.616,3034,5.94,3035,5.94,3036,5.94,3037,5.94,3038,5.94,3039,5.94,3040,8.261,3041,6.616,3042,6.616,3043,6.616,3044,6.616,3045,6.616,3046,6.616,3047,6.616,3048,6.616,3049,8.261,3050,6.616,3051,6.616,3052,6.616,3053,6.616,3054,6.616]],["title/interfaces/Log.html",[0,0.41,1020,2.548]],["body/interfaces/Log.html",[0,0.7,1,1.589,2,0.048,3,0.048,4,0.051,8,0.282,9,0.472,20,0.701,21,0.383,22,0.005,29,0.057,39,2.536,46,1.954,47,1.115,130,0.004,131,0.004,559,2.253,762,4.75,763,4.75,766,2.792,965,2.914,1020,4.351,1022,3.644,1023,1.733,1847,5.466,1850,5.185,2154,4.75,2155,4.951,3055,5.819,3056,7.509,3057,7.431,3058,7.431,3059,7.431,3060,7.431,3061,7.122,3062,5.819]],["title/interfaces/LogEntry.html",[0,0.41,3061,3.708]],["body/interfaces/LogEntry.html",[0,0.713,1,1.637,2,0.05,3,0.05,4,0.052,8,0.291,9,0.481,20,0.699,21,0.357,22,0.005,29,0.058,39,2.583,46,1.466,47,0.871,130,0.004,131,0.004,559,3.127,762,4.894,763,4.894,766,2.843,965,2.967,1020,3.67,1022,5.058,1023,2.405,1847,5.632,1850,5.343,2154,4.894,2155,5.101,3055,5.996,3056,5.632,3057,6.928,3058,6.928,3059,6.928,3060,6.928,3061,6.928,3062,5.996]],["title/interfaces/Logs.html",[0,0.41,1019,1.896]],["body/interfaces/Logs.html",[0,0.801,1,1.668,2,0.051,3,0.051,4,0.044,8,0.297,9,0.486,15,2.095,20,0.662,21,0.36,22,0.005,24,1.329,25,0.477,27,2.544,28,2.923,29,0.058,47,0.888,48,0.515,50,1.939,97,2.068,130,0.004,131,0.004,147,3.659,272,3.023,559,2.367,1019,3.336,1020,5.221,1033,3.502,1034,2.24,1038,3.502,3005,5.741,3006,5.199,3007,5.741,3008,5.741,3009,5.445,3010,6.914,3011,6.914]],["title/injectables/LogsState.html",[470,3.909,712,2.094]],["body/injectables/LogsState.html",[0,0.411,2,0.035,3,0.035,4,0.03,8,0.202,10,1.128,21,0.339,22,0.005,25,0.428,29,0.041,30,2.985,44,0.082,46,2.068,47,0.606,48,0.593,58,2.463,130,0.003,131,0.003,141,2.175,202,2.454,203,1.763,207,1.099,209,1.579,211,3.068,215,1.02,232,1.787,247,2.892,261,2.048,298,2.694,300,3.405,302,6.276,306,6.276,444,2.892,470,6.143,559,1.615,712,2.882,714,2.814,736,3.405,737,0.976,752,5.738,753,3.549,764,3.549,952,5.991,965,1.71,1015,5.988,1018,4.872,1019,3.675,1020,4.778,1021,4.872,1022,4.096,1023,1.705,1195,4.502,1532,4.299,2482,5.601,3010,6.483,3011,6.64,3056,6.612,3057,6.573,3058,6.573,3059,6.573,3060,6.573,3061,5.102,3063,4.509,3064,6.895,3065,5.023,3066,7.332,3067,6.19,3068,5.023,3069,6.19,3070,7.038,3071,5.023,3072,5.023,3073,6.19,3074,5.023,3075,3.717,3076,3.549,3077,4.509,3078,3.918,3079,6.19,3080,7.069,3081,6.612,3082,6.19,3083,4.509,3084,4.509,3085,4.509,3086,7.974,3087,7.974,3088,4.509,3089,4.509,3090,4.509,3091,4.509,3092,4.509,3093,4.509,3094,4.509,3095,4.509,3096,4.509,3097,4.509,3098,4.509,3099,4.509,3100,4.509,3101,5.379,3102,4.509]],["title/interfaces/LogsStateModel.html",[0,0.41,3070,4.161]],["body/interfaces/LogsStateModel.html",[0,0.429,1,1.189,2,0.036,3,0.036,4,0.031,8,0.211,9,0.392,21,0.344,22,0.005,25,0.436,29,0.042,30,3.004,44,0.096,46,2.11,47,0.971,48,0.367,58,2.519,130,0.003,131,0.003,141,2.271,203,1.174,211,1.812,215,1.065,232,1.866,261,1.847,300,3.555,302,6.371,306,6.371,444,3.019,470,5.54,559,1.687,712,2.968,734,1.76,736,4.814,737,0.998,752,4.916,753,3.706,764,3.706,952,5.887,965,1.786,1015,5.018,1018,3.706,1019,3.709,1020,5.037,1021,5.018,1022,4.188,1023,1.756,1195,3.424,2482,5.078,3010,6.832,3011,6.925,3056,6.732,3057,6.673,3058,6.673,3059,6.673,3060,6.673,3061,5.255,3063,4.708,3066,6.282,3067,4.708,3069,4.708,3070,6.687,3073,4.708,3075,5.255,3076,5.018,3077,6.376,3078,4.092,3079,6.376,3080,7.229,3081,6.732,3082,6.376,3083,4.708,3084,4.708,3085,4.708,3086,8.095,3087,8.095,3088,4.708,3089,4.708,3090,4.708,3091,4.708,3092,4.708,3093,4.708,3094,4.708,3095,4.708,3096,4.708,3097,4.708,3098,4.708,3099,4.708,3100,4.708,3101,5.54,3102,4.708]],["title/classes/Marker.html",[44,0.06,105,2.669]],["body/classes/Marker.html",[0,0.798,2,0.032,3,0.032,4,0.027,5,2.384,6,4.094,7,4.237,8,0.185,9,0.357,10,0.657,11,2.082,12,3.37,13,2.849,14,1.579,15,2.539,16,2.506,17,3.37,18,2.747,19,2.442,20,0.713,21,0.349,22,0.005,23,3.484,24,1.411,25,0.231,26,2.222,27,1.867,28,1.821,29,0.061,30,2.414,31,2.384,32,2.022,33,2.384,34,2.231,35,2.384,36,2.279,37,2.442,38,1.851,39,1.358,40,2.1,41,1.772,42,2.442,43,2.022,44,0.089,45,2.06,46,1.86,47,1.258,48,0.641,49,4.141,50,1.705,51,2.185,52,2.384,53,2.651,54,3.134,55,2.06,56,4.576,57,2.231,58,2.346,59,2.838,60,2.838,61,3.446,62,3.533,63,3.533,64,0.857,65,3.533,66,2.442,67,2.503,68,2.142,69,2.503,70,2.142,71,3.503,72,2.503,73,2.142,74,2.142,75,1.079,76,3.575,77,2.185,78,3.37,79,4.094,80,2.142,81,2.503,82,2.442,83,2.503,84,2.503,85,2.185,86,2.185,87,2.022,88,1.996,89,2.442,90,2.503,91,2.503,92,2.503,93,2.503,94,1.177,95,1.744,96,3.023,97,1.288,98,1.916,99,2.185,100,1.851,101,4.094,102,1.631,103,3.533,104,2.503,105,3.446,106,4.881,107,2.503,108,1.7,109,1.454,110,2.503,111,2.442,112,2.503,113,1.883,114,1.851,115,2.442,116,1.883,117,1.916,118,1.916,119,1.916,120,1.902,121,1.916,122,1.916,123,2.442,124,2.503,125,2.503,126,2.503,127,2.503,128,2.503,129,2.503,130,0.003,131,0.003,207,1.245,209,0.919,504,1.039,3103,6.47,3104,4.584,3105,4.584,3106,4.584,3107,4.584]],["title/classes/Marks.html",[44,0.06,570,3.541]],["body/classes/Marks.html",[2,0.045,3,0.045,4,0.039,8,0.265,9,0.454,21,0.25,22,0.005,25,0.475,29,0.039,44,0.078,64,1.189,130,0.004,131,0.004,147,4.914,202,2.925,203,2.01,207,1.38,211,3.25,232,3.347,256,2.925,504,1.488,532,5.451,534,5.572,535,8.445,545,7.823,548,8.081,550,3.694,551,3.84,570,7.085,571,3.958,572,2.336,574,5.893,1048,2.607,1730,6.083,1738,8.207,3108,6.564,3109,8.445,3110,8.445,3111,8.22,3112,6.564,3113,6.564,3114,6.564,3115,7.38,3116,6.564,3117,6.564,3118,5.451,3119,6.564,3120,5.451,3121,6.564,3122,6.564,3123,6.564,3124,5.893,3125,5.893,3126,6.564,3127,6.564,3128,6.564]],["title/interfaces/Metadata.html",[0,0.41,260,1.372]],["body/interfaces/Metadata.html",[0,0.85,1,0.975,2,0.03,3,0.043,4,0.026,8,0.173,9,0.341,10,0.886,11,1.562,13,1.309,14,1.765,15,2.253,16,2.034,18,2.669,20,0.718,21,0.357,22,0.005,24,1.492,26,1.832,27,2.518,29,0.062,39,1.832,41,1.177,46,1.606,47,1.208,48,0.666,50,2.209,75,1.012,88,1.327,94,1.104,95,1.255,97,2.453,109,1.364,120,1.09,130,0.003,131,0.003,146,1.383,174,1.507,175,1.485,176,1.485,177,1.485,178,1.485,183,1.318,235,0.648,260,2.167,261,1.118,295,2.167,331,0.93,468,1.577,623,1.708,632,1.562,663,2.455,706,1.708,724,2.464,727,1.671,734,2.074,737,0.897,742,1.934,743,1.608,759,1.133,963,1.577,965,1.464,1023,2.159,1091,1.208,1109,1.627,1110,3.356,1111,3.223,1112,3.276,1115,2.768,1116,3.411,1117,2.455,1188,1.68,1189,1.553,1248,1.68,1299,2.429,1333,1.766,1334,2.583,1335,2.539,1336,1.736,1337,1.68,1338,1.766,1339,1.766,1340,1.766,1341,1.766,1342,1.766,1343,1.766,1344,2.496,1345,1.736,1346,1.715,1347,1.766,1348,1.797,1349,1.766,1350,1.736,1351,1.274,1352,1.766,1353,1.797,1354,1.797,1355,1.797,1356,1.797,1357,1.797,1358,1.797,1359,1.797,1360,1.797,1361,1.797,1362,1.766,1363,1.766,1364,2.583,1365,2.583,1366,1.797,1367,1.402,1368,1.402,1369,1.402,1370,1.766,1371,1.736,1372,1.766,1373,2.539,1374,2.583,1375,2.583,1376,1.766,1377,1.797,1378,1.653,1379,1.797,1380,1.797,1381,1.797,1382,1.797,1383,1.797,1384,1.708,1385,2.973,1386,1.766,1387,1.797,1388,1.797,1389,1.708,1390,1.797,1391,1.797,1392,2.539,1393,1.797,1394,2.539,1395,1.736,1396,2.539,1397,3.307,1398,3.307,1399,3.196,1400,1.832,1401,1.766,1402,2.539,1403,1.797,1404,1.797,1405,1.797,1406,1.797,1407,1.797,1408,1.797,1409,1.797,1410,1.766,1411,1.708,1412,1.291,1413,1.797]],["title/interfaces/MoreOption.html",[0,0.41,1392,2.058]],["body/interfaces/MoreOption.html",[0,0.852,1,1.001,2,0.03,3,0.043,4,0.026,8,0.178,9,0.348,11,1.585,13,1.343,14,1.326,15,2.281,16,2.064,18,2.686,20,0.718,21,0.353,22,0.005,24,1.498,26,1.866,27,2.311,29,0.062,39,1.866,41,1.209,46,1.626,47,1.213,48,0.669,50,1.66,75,1.038,88,1.362,94,1.134,95,1.279,97,2.064,109,1.4,120,1.119,130,0.003,131,0.003,146,1.419,174,1.547,175,1.525,176,1.525,177,1.525,178,1.525,183,1.343,235,0.66,260,2.011,261,1.148,295,2.208,331,0.94,468,1.619,623,1.753,632,1.585,663,2.502,706,1.753,724,2.5,727,1.703,734,2.114,737,0.91,742,1.97,743,1.639,759,1.163,963,1.619,965,1.503,1023,2.178,1091,1.24,1109,3.031,1110,3.386,1111,3.256,1112,3.309,1115,2.793,1116,3.441,1117,2.502,1188,1.725,1189,1.594,1248,1.725,1299,2.464,1333,1.813,1334,2.632,1335,2.587,1336,1.782,1337,1.725,1338,1.813,1339,1.813,1340,1.813,1341,1.813,1342,1.813,1343,1.813,1344,2.544,1345,1.782,1346,1.747,1347,1.813,1348,1.844,1349,1.813,1350,1.782,1351,1.308,1352,1.813,1353,1.844,1354,1.844,1355,1.844,1356,1.844,1357,1.844,1358,1.844,1359,1.844,1360,1.844,1361,1.844,1362,1.813,1363,1.813,1364,2.632,1365,2.632,1366,1.844,1367,1.439,1368,1.439,1369,1.439,1370,1.813,1371,1.782,1372,1.813,1373,2.587,1374,2.632,1375,2.632,1376,1.813,1377,1.844,1378,1.697,1379,1.844,1380,1.844,1381,1.844,1382,1.844,1383,1.844,1384,1.753,1385,3.017,1386,1.813,1387,1.844,1388,1.844,1389,1.753,1390,1.844,1391,1.844,1392,3.017,1393,1.844,1394,2.587,1395,1.782,1396,2.587,1397,1.844,1398,1.844,1399,1.782,1400,1.866,1401,1.813,1402,2.587,1403,1.844,1404,1.844,1405,1.844,1406,1.844,1407,1.844,1408,1.844,1409,1.844,1410,1.813,1411,1.753,1412,1.325,1413,1.844]],["title/modules/MousePositionTrackerModule.html",[184,1.108,427,3.708]],["body/modules/MousePositionTrackerModule.html",[2,0.047,3,0.047,4,0.041,22,0.005,25,0.495,29,0.05,30,2.907,44,0.082,64,0.909,130,0.004,131,0.004,144,3.95,184,1.518,186,2.442,214,3.1,215,1.393,218,3.34,219,3.412,220,3.655,230,3.747,232,3.007,323,4.614,331,0.761,427,6.253,468,2.517,824,3.206,929,5.353,970,3.271,971,3.206,972,2.971,973,4.028,974,3.271,975,3.271,1078,4.999,1096,5.13,1140,3.569,1423,2.681,1472,5.698,1984,4.48,2124,4.48,2509,6.592,3129,6.16,3130,6.16,3131,8.579,3132,6.862,3133,6.862,3134,6.16,3135,5.698,3136,6.862,3137,6.862,3138,8.45,3139,8.45,3140,6.16,3141,8.45,3142,8.45,3143,6.862,3144,6.862,3145,6.862,3146,6.862,3147,6.862,3148,6.862,3149,6.862,3150,6.862,3151,6.16,3152,6.16,3153,6.862,3154,6.862,3155,6.862,3156,6.16,3157,6.862,3158,6.862,3159,6.862,3160,6.862,3161,6.862]],["title/classes/MultiParentMarkGroup.html",[44,0.06,3118,4.161]],["body/classes/MultiParentMarkGroup.html",[2,0.043,3,0.043,4,0.037,8,0.251,9,0.439,20,0.611,21,0.352,22,0.005,25,0.314,29,0.037,38,2.515,44,0.074,47,0.959,48,0.436,64,1.161,130,0.004,131,0.004,141,2.697,147,4.589,153,3.927,202,2.83,203,1.962,207,1.331,211,3.026,232,3.117,235,1.062,236,4.453,331,0.882,498,6.256,504,1.412,534,5.467,545,7.732,570,4.4,571,2.747,572,2.216,577,4.066,589,6.203,591,4.341,595,5.884,603,5.884,605,6.603,606,2.042,607,5.39,608,6.603,609,5.884,624,6.203,626,4.4,638,5.172,639,5.884,652,5.172,658,4.858,692,6.603,1797,5.591,3109,8.285,3115,5.591,3118,6.603,3124,5.591,3162,6.227,3163,9.228,3164,7.951,3165,6.227,3166,6.227,3167,6.227,3168,6.227,3169,6.227,3170,5.591,3171,5.591]],["title/components/NavItemComponent.html",[250,1.355,381,1.99]],["body/components/NavItemComponent.html",[2,0.038,3,0.038,4,0.044,8,0.225,11,1.91,14,1.993,20,0.369,21,0.282,22,0.005,24,0.841,25,0.282,29,0.033,44,0.066,48,0.518,53,2.284,108,1.265,130,0.003,131,0.003,181,2.416,188,1.363,207,1.033,215,1.133,235,0.776,250,2.246,251,2.216,252,3.041,253,2.332,254,2.332,255,2.332,256,1.985,260,1.528,261,2.778,262,4.242,264,2.99,266,2.99,287,2.216,308,1.313,310,1.61,341,3.094,342,2.99,343,2.332,344,3.698,345,2.332,346,2.332,347,2.216,348,2.332,349,2.216,350,1.61,351,2.332,352,2.216,353,2.332,354,2.18,355,2.332,356,2.216,357,1.985,358,2.332,359,2.216,360,2.332,361,2.216,362,2.332,363,2.216,364,3.094,365,2.216,366,2.332,367,2.216,368,2.332,369,2.18,370,2.332,371,2.145,372,2.332,373,2.216,374,2.332,375,2.216,376,2.332,377,2.216,378,2.332,379,2.253,380,2.332,381,3.514,382,2.839,383,2.332,384,2.216,385,1.415,386,2.332,387,2.216,388,2.801,389,2.332,390,2.216,391,2.332,392,2.253,393,2.332,394,2.216,395,2.332,396,2.253,397,2.332,398,2.216,399,2.332,400,2.216,401,2.079,402,2.332,403,2.216,404,2.18,405,2.332,406,2.292,407,2.332,408,2.216,409,2.332,410,2.216,411,2.216,412,2.253,413,2.111,414,2.332,415,2.332,486,6.898,661,3.643,662,3.643,711,4.129,1088,3.763,1136,3.805,1274,3.85,1284,3.85,1291,2.774,1296,3.782,1308,3.305,1309,4.223,1327,6.645,1667,3.407,1842,5.423,2080,4.353,3172,7.458,3173,6.898,3174,5.579,3175,8.307,3176,7.402,3177,5.579,3178,5.579,3179,5.579,3180,5.579,3181,7.402,3182,5.579,3183,5.579,3184,5.579,3185,5.579]],["title/modules/NavItemModule.html",[184,1.108,3186,3.708]],["body/modules/NavItemModule.html",[2,0.052,3,0.052,4,0.045,22,0.005,25,0.481,29,0.045,44,0.089,130,0.004,131,0.004,184,1.662,186,2.674,187,2.843,188,1.835,189,3.604,190,2.843,191,2.756,192,3.548,198,3.378,199,2.799,200,2.674,214,3.275,215,1.525,243,2.799,381,4.205,382,2.112,1422,3.546,1423,2.936,3172,6.745,3173,6.24,3186,7.631,3187,6.745,3188,6.745,3189,6.745,3190,7.513,3191,7.513]],["title/modules/NavbarModule.html",[184,1.108,3192,3.708]],["body/modules/NavbarModule.html",[2,0.045,3,0.045,4,0.039,22,0.005,25,0.531,29,0.039,44,0.077,130,0.004,131,0.004,184,1.439,186,2.314,187,2.461,188,1.589,189,3.382,190,2.461,191,2.386,192,3.33,198,3.093,199,2.423,200,2.314,214,2.998,215,1.32,243,3.045,278,3.166,284,4.101,379,4.199,404,3.194,494,6.048,591,3.551,1139,3.644,1422,3.246,1423,2.541,1427,4.064,1430,5.336,1431,5.154,1435,3.818,1436,3.038,1697,5.336,1698,4.246,2281,5.775,2282,4.409,2443,4.813,2480,6.376,2773,6.684,2778,4.813,2779,5.401,3173,5.401,3186,7.296,3192,7.725,3193,5.839,3194,5.839,3195,5.839,3196,5.839,3197,7.296,3198,6.504,3199,6.504,3200,8.173,3201,6.504,3202,6.504,3203,6.504,3204,6.504,3205,6.376,3206,5.074,3207,5.839]],["title/classes/NoError.html",[44,0.06,1041,2.295]],["body/classes/NoError.html",[2,0.036,3,0.036,4,0.032,8,0.214,9,0.395,20,0.599,21,0.402,22,0.005,25,0.409,29,0.062,44,0.125,64,1.353,130,0.003,131,0.003,203,2.352,207,0.741,235,0.556,268,1.418,269,2.185,272,2.94,308,0.941,310,1.531,312,1.312,316,2.038,331,0.794,350,1.531,382,1.491,504,1.203,559,2.912,561,3.373,606,1.363,632,1.871,737,1.122,758,2.298,759,1.398,766,3.204,767,2.008,768,1.28,1019,2.008,1028,2.384,1029,2.479,1031,4.129,1032,2.239,1033,2.843,1034,2.179,1035,1.683,1036,2.384,1037,3.898,1038,3.217,1039,2.427,1040,2.384,1041,3.279,1042,2.34,1043,2.34,1044,2.384,1045,2.384,1046,2.384,1047,2.298,1048,1.683,1049,2.384,1050,2.384,1051,2.384,1052,2.108,1053,2.431,1054,2.431,1055,2.218,1056,2.34,1057,2.384,1058,2.384,1059,2.34,1060,2.384,1061,2.335,1062,2.384,3208,5.306]],["title/interfaces/Node.html",[0,0.41,646,2.669]],["body/interfaces/Node.html",[0,0.623,1,1.32,2,0.04,3,0.04,4,0.035,8,0.235,9,0.42,10,1.09,20,0.655,21,0.323,22,0.005,24,0.878,25,0.483,29,0.035,44,0.069,47,1.023,48,0.67,50,2.523,53,2.617,57,4.378,58,1.821,130,0.003,131,0.003,215,1.181,232,2.071,245,2.351,250,2.058,258,2.833,259,4.382,261,1.514,262,2.312,264,2.351,266,2.351,268,1.153,269,1.211,295,2.668,298,2.974,299,3.351,329,3.351,331,0.646,371,2.238,572,3.322,646,5.481,724,2.591,735,4.541,737,0.943,768,1.404,914,4.112,1039,1.514,1047,2.52,1055,2.432,1100,4.883,1136,4.12,1137,4.752,1484,5.16,1489,3.946,1606,5.938,1609,4.307,1723,3.351,2284,5.938,2285,4.307,2286,4.112,2287,4.833,2288,6.321,2289,7.043,2290,6.321,2291,4.833,2292,5.632,2293,3.946,2294,6.321,2295,4.833,2296,6.321,2297,4.541,2298,5.378,2299,4.541,2300,5.632,2301,5.992,2302,4.833,2303,4.833,2304,4.833,2305,4.541,2306,4.833,2307,4.307,2308,4.112,2309,4.833,2310,4.833,2311,4.833,2312,4.833,2313,4.833,2314,7.043,2315,4.833,2316,6.321,2317,4.833,2318,4.833,2319,4.833,2320,4.833,2321,4.541,2322,4.833,2323,4.833,2324,4.833,2325,4.833,2326,4.833,2327,4.833,2328,7.043,2329,4.833,2330,4.833,2331,4.307,2332,4.833,2333,4.833,2334,4.833,2335,4.833]],["title/interfaces/OmapConfig.html",[0,0.41,728,2.389]],["body/interfaces/OmapConfig.html",[0,0.65,1,1.801,2,0.055,3,0.055,4,0.047,8,0.32,9,0.509,21,0.352,22,0.005,24,1.558,29,0.047,130,0.004,131,0.004,728,4.397,3209,7.945,3210,8.33,3211,8.33]],["title/components/OmapControlsComponent.html",[250,1.355,384,1.99]],["body/components/OmapControlsComponent.html",[2,0.034,3,0.034,4,0.041,8,0.199,10,0.709,11,1.473,14,1.042,21,0.321,22,0.005,25,0.425,29,0.029,44,0.059,48,0.547,53,2.598,102,1.761,108,1.771,120,1.981,130,0.003,131,0.003,181,2.143,188,1.209,202,2.429,207,1.176,209,0.992,211,1.709,215,1.004,235,0.518,250,2.112,251,1.965,252,2.803,253,2.068,254,2.068,255,2.068,256,1.761,260,1.355,261,2.758,262,4.211,264,2.756,266,2.756,287,1.965,298,1.933,308,0.878,310,1.428,323,2.702,339,3.021,341,2.852,342,2.756,343,2.068,344,3.52,345,2.068,346,2.068,347,1.965,348,2.068,349,1.965,350,1.428,351,2.068,352,1.965,353,2.068,354,1.933,355,2.068,356,1.965,357,1.761,358,2.068,359,1.965,360,2.068,361,1.965,362,2.068,363,1.965,364,2.852,365,1.965,366,2.068,367,1.965,368,2.068,369,1.933,370,2.068,371,1.902,372,2.068,373,1.965,374,2.068,375,1.965,376,2.068,377,1.965,378,2.068,379,1.998,380,2.068,381,1.965,382,1.391,383,2.068,384,3.345,385,2.531,386,2.068,387,1.965,388,2.583,389,2.068,390,1.965,391,2.068,392,1.998,393,2.068,394,1.965,395,2.068,396,1.998,397,2.068,398,1.965,399,2.068,400,1.965,401,1.843,402,2.068,403,1.965,404,1.933,405,2.068,406,2.032,407,2.068,408,1.965,409,2.068,410,1.965,411,1.965,412,1.998,413,2.956,414,2.068,415,2.068,572,1.761,577,3.23,699,3.885,728,3.724,765,2.574,766,2.979,767,1.872,1052,3.103,1088,3.469,1090,4.304,1100,4.497,1136,3.579,1137,3.824,1244,5.667,1245,5.324,1246,5.1,1256,4.598,1257,4.989,1259,3.12,1260,3.23,1274,3.55,1279,4.848,1280,5.709,1281,3.496,1282,3.496,1283,3.496,1284,3.55,1287,5.207,1288,3.496,1291,2.46,1309,4.281,1315,5.142,1346,1.893,1561,3.445,1667,3.021,1668,3.496,1685,7.337,1854,2.931,2461,3.86,2462,5.324,2463,5.05,2464,3.86,2465,3.86,3210,5.667,3211,5.667,3212,7.932,3213,4.442,3214,7.013,3215,6.127,3216,6.824,3217,7.932,3218,4.948,3219,4.948,3220,4.442,3221,6.824,3222,4.442,3223,4.948,3224,4.948,3225,4.948,3226,4.948,3227,4.948,3228,6.824,3229,6.824,3230,4.948,3231,4.948]],["title/modules/OmapControlsModule.html",[184,1.108,1680,3.708]],["body/modules/OmapControlsModule.html",[2,0.048,3,0.048,4,0.042,22,0.005,25,0.525,29,0.042,44,0.084,130,0.004,131,0.004,184,1.556,186,2.504,187,2.663,188,1.719,189,3.504,190,2.663,191,2.581,192,3.449,198,3.247,199,2.621,200,2.504,214,3.148,215,1.428,243,2.621,278,3.425,384,4.171,385,1.785,1422,3.408,1423,2.749,1425,5.602,1426,4.594,1427,4.267,1435,4.009,1436,3.287,1680,7.53,1685,5.843,1694,6.317,1697,5.602,1698,4.594,2054,5.817,2055,4.77,2056,4.77,2443,5.207,2480,6.694,3212,6.317,3232,6.317,3233,6.317,3234,6.317,3235,7.036,3236,7.704,3237,6.317]],["title/classes/OpenBottomSheet.html",[44,0.06,1055,2.094]],["body/classes/OpenBottomSheet.html",[2,0.036,3,0.036,4,0.031,8,0.209,9,0.389,10,0.743,20,0.594,21,0.402,22,0.005,25,0.404,29,0.062,44,0.124,48,0.363,64,1.355,130,0.003,131,0.003,203,2.348,207,1.117,209,1.04,235,0.543,268,1.701,269,2.181,272,2.894,308,0.92,310,1.496,312,1.282,316,2.006,331,0.997,350,1.496,382,1.457,504,1.175,559,2.889,561,3.346,606,1.332,632,1.854,737,1.148,758,2.245,759,1.366,766,3.091,767,1.962,768,1.251,1019,1.962,1028,2.33,1029,2.422,1031,4.104,1032,2.291,1033,2.799,1034,2.734,1035,1.644,1036,2.33,1037,3.961,1038,3.179,1039,2.41,1040,2.33,1041,2.375,1042,2.287,1043,2.287,1044,2.33,1045,2.33,1046,2.33,1047,2.245,1048,1.644,1049,2.33,1050,2.33,1051,2.33,1052,2.059,1053,2.375,1054,2.375,1055,2.945,1056,2.287,1057,2.33,1058,2.33,1059,2.287,1060,2.33,1061,2.298,1062,2.33,2115,3.166,3238,7.046,3239,5.185]],["title/classes/OpenBottomSheetDOI.html",[44,0.06,1056,2.21]],["body/classes/OpenBottomSheetDOI.html",[2,0.036,3,0.036,4,0.031,8,0.209,9,0.389,10,0.742,20,0.594,21,0.402,22,0.005,25,0.404,29,0.062,44,0.124,48,0.362,64,1.355,130,0.003,131,0.003,203,2.347,207,1.117,209,1.039,235,0.543,268,1.7,269,2.181,272,2.892,308,0.919,310,1.494,312,1.281,316,2.005,331,0.996,350,1.494,382,1.456,504,1.174,559,2.887,561,3.345,606,1.33,632,2.081,737,1.148,758,2.243,759,1.365,766,3.09,767,1.96,768,1.249,1019,1.96,1028,2.327,1029,2.42,1031,4.103,1032,2.291,1033,2.797,1034,2.143,1035,1.643,1036,2.327,1037,3.96,1038,3.178,1039,2.409,1040,2.327,1041,2.373,1042,2.284,1043,2.284,1044,2.327,1045,2.327,1046,2.327,1047,2.243,1048,1.643,1049,2.327,1050,2.327,1051,2.327,1052,2.057,1053,2.373,1054,2.373,1055,2.165,1056,3.106,1057,2.327,1058,2.327,1059,2.284,1060,2.327,1061,2.297,1062,2.327,2115,3.162,3240,7.041,3241,5.179]],["title/interfaces/OpenBottomSheetData.html",[0,0.41,1034,1.525]],["body/interfaces/OpenBottomSheetData.html",[0,0.792,1,1.618,2,0.049,3,0.049,4,0.042,8,0.288,9,0.478,15,2.758,20,0.693,21,0.384,22,0.005,24,1.305,25,0.47,27,2.795,28,2.835,29,0.058,47,1.124,48,0.678,50,2.552,97,2.722,130,0.004,131,0.004,147,4.816,272,2.932,559,2.295,1019,2.701,1020,4.736,1033,3.438,1034,2.635,1038,3.438,3005,5.568,3006,5.043,3007,5.568,3008,5.568,3009,5.281,3010,5.043,3011,5.043]],["title/classes/OpenCompare.html",[44,0.06,1058,2.252]],["body/classes/OpenCompare.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.125,64,1.364,130,0.003,131,0.003,203,2.352,207,0.996,235,0.554,268,1.414,269,2.184,272,2.932,308,0.937,310,1.524,312,1.307,316,2.301,331,0.792,350,1.524,382,1.485,504,1.198,559,2.907,561,3.368,606,1.357,632,1.868,737,1.12,758,2.288,759,1.392,766,3.106,767,1.999,768,1.275,1019,1.999,1028,2.374,1029,2.468,1031,4.124,1032,2.236,1033,2.835,1034,2.172,1035,1.676,1036,2.374,1037,3.98,1038,3.21,1039,2.424,1040,2.374,1041,2.42,1042,2.33,1043,2.33,1044,2.374,1045,2.374,1046,2.374,1047,2.288,1048,1.676,1049,2.374,1050,2.374,1051,2.374,1052,2.099,1053,2.42,1054,2.42,1055,2.208,1056,2.33,1057,2.374,1058,3.207,1059,2.33,1060,2.374,1061,2.328,1062,2.374,3242,7.137]],["title/classes/OpenLoading.html",[44,0.06,1036,2.252]],["body/classes/OpenLoading.html",[2,0.036,3,0.036,4,0.031,8,0.209,9,0.389,10,0.744,20,0.638,21,0.402,22,0.005,25,0.404,29,0.062,44,0.124,48,0.363,64,1.356,130,0.003,131,0.003,203,2.348,207,1.118,209,1.041,235,0.544,268,1.702,269,2.181,272,2.897,308,0.921,310,1.497,312,1.284,316,2.008,331,0.783,350,1.497,382,1.459,504,1.177,559,3.102,561,3.347,606,1.333,632,1.854,737,1.114,758,2.247,759,1.367,766,3.092,767,1.964,768,1.252,1019,1.964,1028,2.332,1029,2.425,1031,4.105,1032,2.222,1033,2.801,1034,2.146,1035,1.646,1036,3.169,1037,3.962,1038,3.413,1039,2.411,1040,2.332,1041,2.377,1042,2.289,1043,2.289,1044,2.332,1045,2.332,1046,2.332,1047,2.247,1048,1.646,1049,2.332,1050,2.332,1051,2.332,1052,2.062,1053,2.377,1054,2.377,1055,2.169,1056,2.289,1057,2.332,1058,2.332,1059,2.289,1060,2.332,1061,2.3,1062,2.332,1065,4.049,3243,7.051,3244,5.19]],["title/classes/OpenSearch.html",[44,0.06,1060,2.252]],["body/classes/OpenSearch.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.125,64,1.364,130,0.003,131,0.003,203,2.352,207,0.996,235,0.554,268,1.414,269,2.184,272,2.932,308,0.937,310,1.524,312,1.307,316,2.032,331,0.792,350,1.524,382,1.485,504,1.198,559,2.907,561,3.368,606,1.357,632,1.868,737,1.12,758,2.288,759,1.392,766,3.106,767,1.999,768,1.275,1019,1.999,1028,2.374,1029,2.468,1031,4.124,1032,2.236,1033,2.835,1034,2.172,1035,1.676,1036,2.374,1037,3.98,1038,3.21,1039,2.424,1040,2.374,1041,2.42,1042,2.33,1043,2.33,1044,2.374,1045,2.374,1046,2.374,1047,2.288,1048,1.676,1049,2.374,1050,2.374,1051,2.374,1052,2.099,1053,2.42,1054,2.42,1055,2.208,1056,2.33,1057,2.374,1058,2.374,1059,2.33,1060,3.207,1061,2.636,1062,2.374,3245,7.137]],["title/classes/OpenSnackbar.html",[44,0.06,1044,2.252]],["body/classes/OpenSnackbar.html",[2,0.035,3,0.035,4,0.03,8,0.206,9,0.386,10,0.734,20,0.636,21,0.405,22,0.005,25,0.402,29,0.062,44,0.124,48,0.358,64,1.353,130,0.003,131,0.003,203,2.345,207,1.193,209,1.027,235,0.537,268,1.828,269,2.178,272,3.267,308,0.908,310,1.477,312,1.267,316,1.99,331,0.775,350,1.477,382,1.439,504,1.161,559,3.092,561,3.332,606,1.315,632,1.844,737,1.108,758,2.217,759,1.349,766,3.081,767,1.938,768,1.235,1019,1.938,1028,2.301,1029,2.392,1031,4.091,1032,2.212,1033,3.552,1034,2.127,1035,1.624,1036,2.301,1037,3.948,1038,3.159,1039,2.401,1040,2.301,1041,2.346,1042,2.258,1043,2.258,1044,3.14,1045,2.301,1046,2.301,1047,2.217,1048,1.624,1049,2.301,1050,2.301,1051,2.301,1052,2.034,1053,2.346,1054,2.346,1055,2.14,1056,2.258,1057,2.301,1058,2.301,1059,2.258,1060,2.301,1061,2.279,1062,2.301,1065,3.995,3246,6.987,3247,5.121,3248,5.121]],["title/pipes/OrderByPipe.html",[2944,3.708,3249,4.161]],["body/pipes/OrderByPipe.html",[2,0.05,3,0.05,4,0.043,10,1.033,21,0.332,22,0.005,25,0.364,29,0.043,30,2.58,44,0.086,48,0.655,58,2.255,98,3.013,130,0.004,131,0.004,141,3.771,162,4.887,168,6.449,202,2.566,207,1.006,209,1.746,211,2.491,215,1.463,232,3.099,234,6.924,245,3.925,258,3.509,260,1.974,1783,5.335,2944,6.444,2948,7.232,3249,7.232,3250,7.209,3251,8.708,3252,7.209,3253,8.708,3254,8.708,3255,8.708,3256,8.708,3257,7.209,3258,5.987,3259,8.708,3260,7.209,3261,9.357,3262,7.209,3263,9.357,3264,7.209]],["title/interfaces/Organ.html",[0,0.41,108,1.136]],["body/interfaces/Organ.html",[0,0.8,1,1.055,2,0.032,3,0.032,4,0.028,5,2.42,6,4.127,7,4.265,8,0.188,9,0.361,11,2.027,12,3.397,13,2.727,14,1.592,15,2.551,16,2.518,17,3.397,18,2.62,19,2.478,20,0.713,21,0.341,22,0.005,23,3.501,24,1.387,25,0.235,26,2.24,27,1.886,28,1.848,29,0.061,30,2.43,31,2.42,32,2.052,33,2.42,34,2.264,35,2.42,36,2.313,37,2.478,38,1.879,39,1.379,40,2.131,41,1.79,42,2.478,43,2.052,44,0.09,45,2.091,46,1.868,47,1.252,48,0.627,49,4.169,50,1.723,51,2.218,52,2.42,53,2.666,54,3.159,55,2.091,56,4.027,57,2.264,58,2.365,59,2.861,60,2.861,61,3.483,62,3.57,63,3.57,64,0.616,65,3.57,66,2.478,67,2.54,68,2.173,69,2.54,70,2.173,71,3.532,72,2.54,73,2.173,74,2.173,75,1.095,76,3.604,77,2.218,78,3.397,79,4.127,80,2.173,81,2.54,82,2.478,83,2.54,84,2.54,85,2.218,86,2.218,87,2.052,88,2.017,89,2.478,90,2.54,91,2.54,92,2.54,93,2.54,94,1.195,95,1.754,96,3.054,97,1.308,98,1.944,99,2.218,100,1.879,101,3.57,102,1.656,103,3.57,104,2.54,105,2.478,106,4.027,107,2.54,108,2.165,109,2.601,110,4.477,111,4.368,112,4.477,113,1.911,114,1.879,115,2.478,116,1.911,117,1.944,118,1.944,119,1.944,120,1.917,121,1.944,122,1.944,123,2.478,124,2.54,125,2.54,126,2.54,127,2.54,128,2.54,129,2.54,130,0.003,131,0.003]],["title/interfaces/OrganTableOnClose.html",[0,0.41,1350,2.024]],["body/interfaces/OrganTableOnClose.html",[0,0.853,1,1.007,2,0.031,3,0.044,4,0.026,8,0.179,9,0.349,11,1.59,13,1.352,14,1.332,15,2.287,16,2.071,18,2.69,20,0.717,21,0.306,22,0.005,24,1.532,26,1.875,27,2.317,29,0.062,39,1.875,41,1.216,46,1.63,47,1.214,48,0.635,50,1.667,75,1.045,88,1.37,94,1.141,95,1.284,97,2.071,109,1.409,120,1.126,130,0.003,131,0.003,146,1.428,174,1.557,175,1.534,176,1.534,177,1.534,178,1.534,183,1.349,235,0.663,260,2.018,261,1.155,295,2.218,331,0.942,468,1.629,623,1.764,632,1.59,663,2.513,706,1.764,724,2.509,727,1.71,734,2.123,737,0.913,742,1.979,743,1.646,759,1.17,963,1.629,965,1.512,1023,2.182,1091,1.248,1109,1.681,1110,3.393,1111,3.264,1112,3.317,1115,2.799,1116,3.448,1117,2.513,1188,1.735,1189,1.604,1248,1.735,1299,2.473,1333,1.824,1334,2.644,1335,2.599,1336,1.794,1337,1.735,1338,1.824,1339,1.824,1340,1.824,1341,1.824,1342,1.824,1343,1.824,1344,2.555,1345,1.794,1346,2.355,1347,1.824,1348,1.856,1349,1.824,1350,2.555,1351,2.38,1352,1.824,1353,1.856,1354,1.856,1355,1.856,1356,1.856,1357,1.856,1358,1.856,1359,1.856,1360,1.856,1361,1.856,1362,1.824,1363,1.824,1364,2.644,1365,2.644,1366,1.856,1367,1.448,1368,1.448,1369,1.448,1370,1.824,1371,1.794,1372,1.824,1373,2.599,1374,2.644,1375,2.644,1376,1.824,1377,1.856,1378,1.708,1379,1.856,1380,1.856,1381,1.856,1382,1.856,1383,1.856,1384,1.764,1385,3.027,1386,1.824,1387,1.856,1388,1.856,1389,1.764,1390,1.856,1391,1.856,1392,2.599,1393,1.856,1394,2.599,1395,1.794,1396,2.599,1397,1.856,1398,1.856,1399,1.794,1400,1.875,1401,1.824,1402,2.599,1403,1.856,1404,1.856,1405,1.856,1406,1.856,1407,1.856,1408,1.856,1409,1.856,1410,1.824,1411,1.764,1412,1.334,1413,1.856]],["title/interfaces/OrganTableSelect.html",[0,0.41,1345,2.024]],["body/interfaces/OrganTableSelect.html",[0,0.852,1,0.991,2,0.03,3,0.043,4,0.026,8,0.176,9,0.345,10,1.142,11,1.577,13,1.33,14,1.317,15,2.27,16,2.053,18,2.679,20,0.717,21,0.335,22,0.005,24,1.529,26,1.853,27,2.301,29,0.062,39,1.853,41,1.197,46,1.619,47,1.211,48,0.632,50,1.648,75,1.028,88,1.349,94,1.123,95,1.27,97,2.053,109,1.386,120,1.109,130,0.003,131,0.003,146,1.406,174,1.532,175,1.51,176,1.51,177,1.51,178,1.51,183,1.334,235,0.655,260,2,261,1.137,295,2.193,331,0.936,468,1.603,623,1.736,632,1.577,663,2.485,706,1.736,724,2.487,727,1.691,734,2.099,737,0.905,742,1.957,743,1.627,759,1.152,963,1.603,965,1.488,1023,2.171,1091,1.228,1109,1.654,1110,3.375,1111,3.244,1112,3.297,1115,2.784,1116,3.43,1117,2.485,1188,1.708,1189,1.579,1248,1.708,1299,2.451,1333,1.795,1334,2.614,1335,2.569,1336,1.765,1337,1.708,1338,1.795,1339,1.795,1340,1.795,1341,1.795,1342,1.795,1343,1.795,1344,2.526,1345,2.526,1346,2.341,1347,3.275,1348,3.332,1349,3.275,1350,1.765,1351,1.295,1352,1.795,1353,1.827,1354,1.827,1355,1.827,1356,1.827,1357,1.827,1358,1.827,1359,1.827,1360,1.827,1361,1.827,1362,1.795,1363,1.795,1364,2.614,1365,2.614,1366,1.827,1367,1.426,1368,1.426,1369,1.426,1370,1.795,1371,1.765,1372,1.795,1373,2.569,1374,2.614,1375,2.614,1376,1.795,1377,1.827,1378,1.681,1379,1.827,1380,1.827,1381,1.827,1382,1.827,1383,1.827,1384,1.736,1385,3.001,1386,1.795,1387,1.827,1388,1.827,1389,1.736,1390,1.827,1391,1.827,1392,2.569,1393,1.827,1394,2.569,1395,1.765,1396,2.569,1397,1.827,1398,1.827,1399,1.765,1400,1.853,1401,1.795,1402,2.569,1403,1.827,1404,1.827,1405,1.827,1406,1.827,1407,1.827,1408,1.827,1409,1.827,1410,1.795,1411,1.736,1412,1.313,1413,1.827]],["title/components/OrganTableSelectorComponent.html",[250,1.355,387,1.99]],["body/components/OrganTableSelectorComponent.html",[2,0.015,3,0.015,4,0.033,8,0.088,9,0.201,10,0.941,11,0.471,14,0.46,20,0.573,21,0.356,22,0.005,24,0.917,25,0.369,29,0.013,30,2.32,44,0.026,46,1.111,47,0.66,48,0.563,53,1.446,58,2.669,59,0.826,64,0.482,100,1.893,102,0.776,108,1.865,130,0.002,131,0.002,141,2.846,147,1.085,181,1.577,183,0.776,188,0.533,202,1.296,207,1.347,209,1.318,211,2.622,215,0.443,218,1.062,219,1.085,220,1.162,232,2.481,235,0.931,245,2.209,250,1.267,251,0.867,252,1.496,253,0.912,254,0.912,255,0.912,256,0.776,260,0.598,261,2.572,262,3.903,264,1.471,266,1.471,268,1.629,287,0.867,298,2.965,305,2.296,306,1.542,308,1.459,310,0.63,331,0.774,341,1.522,342,2.209,343,0.912,344,2.286,345,0.912,346,0.912,347,0.867,348,0.912,349,0.867,350,0.63,351,0.912,352,0.867,353,0.912,354,0.853,355,0.912,356,0.867,357,0.776,358,0.912,359,0.867,360,0.912,361,0.867,362,0.912,363,0.867,364,1.522,365,0.867,366,0.912,367,0.867,368,0.912,369,0.853,370,0.912,371,0.839,372,0.912,373,0.867,374,0.912,375,0.867,376,0.912,377,0.867,378,0.912,379,0.881,380,0.912,381,0.867,382,0.613,383,0.912,384,0.867,385,1.768,386,0.912,387,2.173,388,3.942,389,0.912,390,0.867,391,0.912,392,0.881,393,0.912,394,0.867,395,0.912,396,0.881,397,0.912,398,0.867,399,0.912,400,0.867,401,0.813,402,0.912,403,0.867,404,0.853,405,0.912,406,0.896,407,0.912,408,0.867,409,0.912,410,0.867,411,0.867,412,0.881,413,0.826,414,0.912,415,0.912,431,4.634,452,1.542,461,8.047,468,0.8,559,0.702,561,0.813,572,2.338,591,2.559,698,2.096,699,1.085,701,1.812,724,2.738,737,0.814,741,1.256,742,1.466,743,1.423,768,0.526,972,0.945,1023,2.075,1032,1.504,1078,3.321,1092,3.024,1096,3.408,1115,1.155,1141,1.135,1142,1.135,1144,1.293,1174,3.059,1193,2.377,1195,1.425,1237,5.2,1245,4.268,1256,2.987,1257,1.293,1259,2.296,1265,2.377,1270,3.45,1271,3.45,1274,4.183,1275,3.45,1276,4.012,1277,2.861,1278,2.157,1279,4.829,1287,1.988,1291,2.72,1292,2.223,1296,2.469,1298,3.572,1299,2.34,1300,1.332,1301,1.332,1302,3.059,1303,3.709,1304,3.177,1308,3.603,1309,2.781,1314,2.626,1315,3.34,1316,1.959,1317,2.096,1318,1.959,1319,3.269,1345,2.456,1346,2.537,1347,2.699,1349,1.925,1350,1.893,1351,1.947,1378,3.453,1384,1.861,1467,3.269,1501,0.881,1532,1.191,1786,6.813,1839,1.542,1842,3.572,1850,3.468,1854,2.776,1856,1.425,1857,1.615,1882,2.699,1893,1.636,1936,5.616,1942,1.702,1996,2.573,2006,1.376,2021,1.615,2041,1.702,2042,4.726,2124,1.425,2275,1.479,2321,4.745,2472,4.5,2473,1.812,2485,1.542,2499,5.406,2500,2.573,2502,1.615,2573,1.959,2574,1.959,2653,1.959,2659,1.959,2666,1.812,2673,1.959,2692,2.695,2693,1.812,2714,5.051,2738,1.812,2934,4.911,3016,3.269,3019,1.959,3020,1.702,3131,3.269,3265,8.699,3266,2.182,3267,4.686,3268,3.641,3269,4.686,3270,6.082,3271,4.686,3272,4.686,3273,4.686,3274,4.686,3275,4.686,3276,4.686,3277,4.686,3278,5.471,3279,3.641,3280,3.641,3281,3.641,3282,5.471,3283,5.471,3284,3.641,3285,3.641,3286,4.686,3287,6.082,3288,3.641,3289,2.182,3290,3.641,3291,2.182,3292,3.269,3293,3.641,3294,2.182,3295,3.641,3296,2.182,3297,2.182,3298,2.182,3299,3.641,3300,2.182,3301,3.641,3302,2.182,3303,2.182,3304,2.182,3305,2.182,3306,6.082,3307,2.182,3308,2.182,3309,2.182,3310,2.182,3311,2.182,3312,5.471,3313,5.471,3314,6.082,3315,5.471,3316,5.471,3317,2.182,3318,2.182,3319,5.471,3320,2.182,3321,2.182,3322,5.471,3323,2.182,3324,3.269,3325,3.641,3326,3.641,3327,2.182,3328,2.182,3329,2.182,3330,2.182,3331,2.182,3332,2.182,3333,2.182,3334,2.182,3335,2.182,3336,1.812,3337,2.182,3338,2.182,3339,2.182,3340,2.182,3341,3.641,3342,3.641,3343,4.686,3344,2.182,3345,2.182,3346,2.182,3347,2.182,3348,5.471,3349,4.686,3350,2.182,3351,3.641,3352,3.641,3353,2.182,3354,4.686,3355,3.641,3356,2.182,3357,3.641,3358,4.686,3359,2.182,3360,5.471,3361,2.182,3362,3.641,3363,3.641,3364,2.182,3365,2.182,3366,2.182,3367,2.182,3368,2.182,3369,2.182,3370,2.182,3371,2.182,3372,2.182,3373,2.182,3374,2.182,3375,2.182,3376,2.182,3377,2.182,3378,2.182,3379,3.269,3380,3.641,3381,2.182,3382,2.182,3383,2.182,3384,2.182,3385,6.571,3386,3.641,3387,3.641,3388,3.641,3389,2.182,3390,3.641,3391,2.182,3392,3.641,3393,2.182,3394,2.182,3395,4.686,3396,3.641,3397,2.182,3398,3.641,3399,3.641,3400,3.641,3401,2.182,3402,2.182,3403,2.182,3404,2.182,3405,2.182,3406,2.182,3407,2.182,3408,2.182,3409,2.182,3410,2.182,3411,2.182,3412,6.571,3413,5.899,3414,3.641,3415,5.471,3416,5.471,3417,3.641,3418,3.641,3419,3.641,3420,3.641,3421,3.024,3422,2.182,3423,3.641,3424,2.182,3425,1.959,3426,2.182,3427,4.686,3428,1.959,3429,4.686,3430,2.182,3431,2.182,3432,3.269,3433,4.686,3434,2.182,3435,2.182,3436,2.182,3437,2.182,3438,2.182,3439,1.959,3440,2.182]],["title/modules/OrganTableSelectorModule.html",[184,1.108,428,3.708]],["body/modules/OrganTableSelectorModule.html",[2,0.046,3,0.046,4,0.039,22,0.005,25,0.533,29,0.039,44,0.079,108,1.5,130,0.004,131,0.004,184,1.463,186,2.354,187,2.504,188,1.616,189,3.409,190,2.504,191,2.427,192,3.356,198,3.126,199,2.465,200,2.354,214,3.03,215,1.343,243,2.465,278,3.22,387,4.139,388,3.409,428,7.433,461,5.494,561,2.465,591,3.612,1139,3.707,1422,3.281,1423,2.585,1427,4.108,1428,5.393,1429,4.319,1430,5.881,1431,5.68,1435,4.208,1436,3.091,1697,5.393,1698,4.319,1699,7.416,1700,5.94,1867,6.445,1868,4.896,2281,5.837,2282,4.485,2443,4.896,2480,6.445,3020,5.161,3205,6.445,3206,5.161,3236,7.416,3237,5.94,3265,5.94,3336,5.494,3441,5.94,3442,5.94,3443,5.94,3444,6.616,3445,6.616,3446,7.416,3447,7.416]],["title/components/PlaygroundComponent.html",[250,1.355,390,1.99]],["body/components/PlaygroundComponent.html",[2,0.019,3,0.019,4,0.027,8,0.225,9,0.247,10,1.06,11,0.606,20,0.533,21,0.363,22,0.005,25,0.439,29,0.017,30,2.058,44,0.033,47,0.892,48,0.564,53,0.866,58,2.718,59,1.693,60,1.693,64,0.593,95,1.502,100,1.134,102,1.592,108,0.637,130,0.002,131,0.002,141,2.414,167,1.573,188,0.686,202,1.592,207,1.31,209,1.484,211,2.399,215,0.57,218,1.366,219,2.772,220,1.495,230,2.442,232,2.263,235,0.584,236,1.427,245,3.354,247,2.575,250,1.507,251,1.115,252,1.837,253,1.173,254,1.173,255,1.173,256,0.999,258,2.177,260,0.769,261,2.628,262,4.012,264,1.806,266,1.806,268,1.466,269,1.539,287,1.115,298,2.179,308,1.232,310,0.81,318,2.406,323,2.442,331,0.945,341,1.869,342,1.806,343,1.173,344,2.657,345,1.173,346,1.173,347,1.115,348,1.173,349,1.115,350,0.81,351,1.173,352,1.115,353,1.173,354,1.097,355,1.173,356,1.115,357,0.999,358,1.173,359,1.115,360,1.173,361,1.115,362,1.173,363,1.115,364,1.869,365,1.115,366,1.173,367,1.115,368,1.173,369,1.097,370,1.173,371,1.079,372,1.173,373,1.115,374,1.173,375,1.115,376,1.173,377,1.115,378,1.173,379,1.134,380,1.173,381,1.115,382,0.789,383,1.173,384,1.115,385,0.712,386,1.173,387,1.115,388,3.398,389,1.173,390,2.526,391,1.173,392,1.134,393,1.173,394,1.115,395,1.173,396,1.134,397,1.173,398,1.115,399,1.173,400,1.115,401,1.046,402,1.173,403,1.115,404,1.097,405,1.173,406,1.153,407,1.173,408,1.115,409,1.173,410,1.115,411,1.115,412,1.134,413,1.062,414,1.173,415,1.173,444,1.616,472,2.19,473,2.19,572,2.263,697,6.088,705,2.078,720,1.984,721,5.421,724,0.956,734,1.501,737,1.113,743,1.164,745,2.132,768,0.677,776,1.833,948,3.16,972,3.007,1032,1.379,1078,3.792,1081,3.714,1087,3.147,1096,3.891,1098,4.534,1107,3.714,1109,1.693,1110,2.144,1111,2.144,1112,2.179,1115,2.949,1138,2.331,1139,1.573,1140,1.46,1141,1.46,1142,1.46,1144,1.663,1193,1.833,1195,2.92,1198,2.331,1199,2.331,1200,2.331,1201,2.331,1202,2.078,1203,2.331,1204,2.331,1207,4.016,1208,3.714,1218,1.238,1237,1.663,1239,2.331,1256,4.04,1270,4.666,1271,4.666,1274,1.46,1277,2.731,1279,3.21,1284,1.46,1287,3.044,1291,1.396,1292,1.714,1299,0.942,1300,2.731,1308,1.663,1309,1.427,1317,3.21,1332,2.521,1411,2.526,1502,2.521,1532,3.044,1547,4.016,1562,2.331,1578,1.984,1663,3.489,1723,3.21,1745,2.19,1854,1.663,1868,2.078,1875,1.238,1882,1.837,1890,2.01,1894,1.238,1987,2.19,2006,1.771,2042,1.903,2224,7.941,2268,1.984,2275,1.903,2292,4.126,2293,1.903,2307,3.31,2331,2.078,2453,4.907,2472,2.078,2564,4.349,2680,5.005,2685,2.521,2689,4.016,2714,3.714,2742,2.521,2757,2.521,3075,3.31,3076,4.493,3292,5.005,3432,7.642,3448,2.808,3449,5.575,3450,4.473,3451,5.575,3452,5.575,3453,5.575,3454,5.575,3455,4.473,3456,4.473,3457,4.473,3458,2.808,3459,2.808,3460,4.473,3461,4.473,3462,2.808,3463,4.473,3464,2.808,3465,4.473,3466,2.808,3467,2.808,3468,2.808,3469,7.761,3470,4.473,3471,6.359,3472,2.808,3473,4.473,3474,4.473,3475,2.808,3476,4.473,3477,2.808,3478,4.473,3479,2.808,3480,2.808,3481,5.575,3482,4.473,3483,4.016,3484,5.005,3485,2.808,3486,4.473,3487,4.473,3488,2.808,3489,2.808,3490,4.473,3491,2.808,3492,2.808,3493,2.808,3494,2.808,3495,4.473,3496,4.473,3497,2.808,3498,4.473,3499,5.575,3500,4.473,3501,2.808,3502,2.808,3503,2.808,3504,2.808,3505,5.575,3506,2.808,3507,4.473,3508,2.808,3509,4.473,3510,2.808,3511,4.473,3512,4.473,3513,9.205,3514,2.808,3515,4.473,3516,6.359,3517,2.808,3518,2.808,3519,2.808,3520,2.808,3521,2.808,3522,2.808,3523,2.808,3524,2.808,3525,2.521,3526,2.808,3527,2.808,3528,4.473,3529,2.808,3530,2.808,3531,2.808,3532,4.473,3533,6.944,3534,2.808,3535,2.808,3536,2.808,3537,2.808,3538,2.808,3539,2.808,3540,2.808,3541,2.808,3542,2.808,3543,2.808,3544,2.808,3545,2.808,3546,2.808,3547,2.808,3548,2.808,3549,2.808,3550,2.808,3551,2.808,3552,2.808,3553,4.473,3554,5.575,3555,2.808,3556,2.808,3557,2.808,3558,2.808,3559,2.808,3560,4.473,3561,2.808,3562,2.808,3563,2.808,3564,4.473,3565,2.808,3566,2.808,3567,2.808,3568,2.808,3569,2.808,3570,2.808,3571,4.473,3572,2.521,3573,2.808,3574,2.808,3575,2.521,3576,4.473,3577,2.808,3578,2.808,3579,2.808,3580,2.808,3581,2.808,3582,4.473,3583,2.808,3584,2.808,3585,2.808]],["title/modules/PlaygroundModule.html",[184,1.108,3586,3.708]],["body/modules/PlaygroundModule.html",[2,0.046,3,0.046,4,0.04,22,0.005,25,0.525,29,0.04,44,0.08,130,0.004,131,0.004,184,1.493,186,2.402,187,2.555,188,1.649,189,3.44,190,2.555,191,2.476,192,3.386,198,3.166,199,2.515,200,2.402,214,3.068,215,1.37,243,3.116,390,4.15,424,6.497,455,6.06,456,4.77,457,5.266,591,3.686,1139,3.782,1422,3.323,1423,2.638,1428,5.461,1429,4.407,1430,5.461,1431,5.275,1435,3.908,1436,3.154,1867,6.526,1868,4.995,3205,6.526,3206,5.266,3586,7.76,3587,6.06,3588,6.06,3589,6.06,3590,6.06,3591,7.031,3592,7.364,3593,6.75,3594,6.75,3595,6.06,3596,6.75]],["title/interfaces/PlaygroundSheetOptions.html",[0,0.41,1385,2.058]],["body/interfaces/PlaygroundSheetOptions.html",[0,0.853,1,1.007,2,0.031,3,0.044,4,0.026,8,0.179,9,0.349,11,1.59,13,1.352,14,1.332,15,2.287,16,2.071,18,2.69,20,0.718,21,0.306,22,0.005,24,1.5,26,1.875,27,2.317,29,0.062,39,1.875,41,1.216,46,1.63,47,1.214,48,0.635,50,1.667,75,1.045,88,1.37,94,1.141,95,1.284,97,2.071,109,1.409,120,1.126,130,0.003,131,0.003,146,1.428,174,1.557,175,1.534,176,1.534,177,1.534,178,1.534,183,1.349,235,0.663,260,2.018,261,1.155,295,2.218,331,0.942,468,1.629,623,1.764,632,1.59,663,2.513,706,1.764,724,2.509,727,1.71,734,2.123,737,1.094,742,1.979,743,1.646,759,1.17,963,1.629,965,1.512,1023,2.182,1091,1.248,1109,1.681,1110,3.393,1111,3.264,1112,3.317,1115,2.996,1116,3.448,1117,2.513,1188,1.735,1189,1.604,1248,1.735,1299,2.473,1333,1.824,1334,2.644,1335,2.599,1336,1.794,1337,1.735,1338,1.824,1339,1.824,1340,1.824,1341,1.824,1342,1.824,1343,1.824,1344,2.555,1345,1.794,1346,1.755,1347,1.824,1348,1.856,1349,1.824,1350,1.794,1351,1.316,1352,1.824,1353,1.856,1354,1.856,1355,1.856,1356,1.856,1357,1.856,1358,1.856,1359,1.856,1360,1.856,1361,1.856,1362,1.824,1363,1.824,1364,2.644,1365,2.644,1366,1.856,1367,1.448,1368,1.448,1369,1.448,1370,1.824,1371,1.794,1372,1.824,1373,2.599,1374,2.644,1375,2.644,1376,1.824,1377,1.856,1378,1.708,1379,1.856,1380,1.856,1381,1.856,1382,1.856,1383,1.856,1384,1.764,1385,3.299,1386,1.824,1387,1.856,1388,1.856,1389,1.764,1390,1.856,1391,1.856,1392,2.599,1393,1.856,1394,2.599,1395,1.794,1396,2.599,1397,1.856,1398,1.856,1399,1.794,1400,1.875,1401,1.824,1402,2.599,1403,1.856,1404,1.856,1405,1.856,1406,1.856,1407,1.856,1408,1.856,1409,1.856,1410,1.824,1411,1.764,1412,1.334,1413,1.856]],["title/interfaces/Reference.html",[0,0.41,27,1.446]],["body/interfaces/Reference.html",[0,0.852,1,0.995,2,0.03,3,0.043,4,0.026,8,0.177,9,0.346,10,1.259,11,1.58,13,1.336,14,1.321,15,2.577,16,2.058,18,2.682,20,0.718,21,0.322,22,0.005,24,1.497,26,1.859,27,2.438,29,0.062,39,1.859,41,1.202,46,1.837,47,1.212,48,0.633,50,1.653,75,1.033,88,1.355,94,1.128,95,1.274,97,2.058,109,1.392,120,1.114,130,0.003,131,0.003,146,1.412,174,1.539,175,1.517,176,1.517,177,1.517,178,1.517,183,1.338,235,0.658,260,2.005,261,1.142,295,2.2,331,0.938,468,1.61,623,1.744,632,1.897,663,2.492,706,1.744,724,2.493,727,1.696,734,2.106,737,0.908,742,1.963,743,1.632,759,1.157,963,1.61,965,1.495,1023,2.174,1091,1.234,1109,1.661,1110,3.38,1111,3.25,1112,3.302,1115,2.788,1116,3.435,1117,2.492,1188,1.715,1189,1.586,1248,1.715,1299,2.457,1333,1.803,1334,2.622,1335,2.577,1336,1.773,1337,1.715,1338,1.803,1339,1.803,1340,1.803,1341,1.803,1342,1.803,1343,1.803,1344,2.534,1345,1.773,1346,1.741,1347,1.803,1348,1.835,1349,1.803,1350,1.773,1351,1.301,1352,1.803,1353,1.835,1354,1.835,1355,1.835,1356,1.835,1357,1.835,1358,1.835,1359,1.835,1360,1.835,1361,1.835,1362,1.803,1363,1.803,1364,2.622,1365,2.622,1366,1.835,1367,1.432,1368,1.432,1369,1.432,1370,1.803,1371,1.773,1372,1.803,1373,2.577,1374,2.622,1375,2.622,1376,1.803,1377,1.835,1378,1.688,1379,1.835,1380,1.835,1381,1.835,1382,1.835,1383,1.835,1384,1.744,1385,3.008,1386,1.803,1387,1.835,1388,1.835,1389,1.744,1390,1.835,1391,1.835,1392,2.577,1393,1.835,1394,2.577,1395,1.773,1396,2.577,1397,1.835,1398,1.835,1399,1.773,1400,1.859,1401,1.803,1402,2.577,1403,1.835,1404,1.835,1405,1.835,1406,1.835,1407,1.835,1408,1.835,1409,1.835,1410,1.803,1411,1.744,1412,1.318,1413,1.835]],["title/classes/RefreshData.html",[44,0.06,1877,2.295]],["body/classes/RefreshData.html",[2,0.047,3,0.035,4,0.03,8,0.203,9,0.381,20,0.633,21,0.399,22,0.005,24,0.758,25,0.398,29,0.062,44,0.124,47,0.606,64,1.245,108,1.14,130,0.003,131,0.003,183,1.471,203,2.341,207,0.963,235,0.527,268,1.818,269,2.175,308,0.892,312,1.948,316,1.965,318,2.981,331,1.118,385,1.275,504,1.14,606,2.524,632,1.7,727,1.865,737,1.29,768,1.213,1007,2.065,1023,1.244,1032,1.707,1034,2.1,1035,1.595,1039,2.663,1087,2.139,1091,2.383,1181,2.217,1218,2.217,1346,1.914,1351,2.044,1412,2.072,1501,2.031,1559,2.259,1560,2.259,1561,2.217,1588,2.065,1599,2.303,1869,2.303,1870,2.349,1874,2.349,1875,2.217,1876,4.416,1877,3.161,1878,3.224,1879,2.259,1880,2.349,1881,2.303,1882,2.834,1883,2.349,1884,2.303,1885,2.303,1886,2.303,1887,2.303,1888,3.224,1889,2.303,1890,2.259,1891,2.303,1892,2.303,1893,2.259,1894,2.217,1895,2.303,1896,2.259,1897,2.259,1898,2.303,1899,2.303,1900,2.349,1901,2.303,1902,2.349,1903,2.349,1904,2.349,3597,6.9]],["title/interfaces/Report.html",[0,0.41,312,1.239]],["body/interfaces/Report.html",[0,0.814,1,1.528,2,0.046,3,0.046,4,0.04,8,0.272,9,0.461,14,1.42,16,2.349,18,1.92,20,0.674,21,0.392,22,0.005,25,0.422,28,2.678,29,0.059,47,1.145,48,0.585,94,2.591,95,1.368,98,4.215,130,0.004,131,0.004,139,3.881,146,3.14,235,0.706,312,2.247,331,0.748,737,1.126,826,6.618,998,4.57,999,4.763,1000,6.71,1001,6.71,1002,6.71,1003,6.898,1004,6.71,1005,6.837,1006,6.71,1007,2.769,1008,4.57,1009,4.57]],["title/interfaces/ReportData.html",[0,0.41,1007,2.058]],["body/interfaces/ReportData.html",[0,0.824,1,1.611,2,0.049,3,0.049,4,0.042,8,0.286,9,0.476,14,1.497,16,2.426,18,2.024,20,0.681,21,0.354,22,0.005,25,0.436,28,2.823,29,0.06,47,1.167,48,0.604,94,2.388,95,1.443,98,3.886,130,0.004,131,0.004,139,4.091,146,2.776,235,0.745,312,2.392,331,1.073,737,1.275,826,5.852,998,4.818,999,5.021,1000,5.021,1001,5.021,1002,5.021,1003,6.1,1004,5.021,1005,6.304,1006,5.021,1007,3.546,1008,4.818,1009,4.818]],["title/classes/ReportLog.html",[44,0.06,752,3.06]],["body/classes/ReportLog.html",[2,0.046,3,0.046,4,0.039,8,0.267,9,0.456,10,1.29,20,0.702,21,0.401,22,0.005,29,0.054,44,0.107,48,0.463,64,1.25,130,0.004,131,0.004,203,2.174,207,1.382,209,1.327,235,0.866,268,2.086,269,2.02,308,1.465,312,2.228,504,1.5,737,0.82,741,3.809,752,5.044,1015,4.675,1016,5.494,1018,4.675,1019,2.504,1020,4.579,1021,6.996,1022,5.15,1023,2.401,1024,6.113,1025,5.161,1026,5.494,1027,5.494,3598,6.616,3599,8.261,3600,6.616,3601,6.616,3602,6.616,3603,6.616]],["title/modules/ReportModule.html",[184,1.108,3604,3.708]],["body/modules/ReportModule.html",[2,0.045,3,0.045,4,0.039,22,0.005,25,0.53,29,0.039,44,0.078,130,0.004,131,0.004,184,1.458,186,2.345,187,2.494,188,1.61,189,3.402,190,2.494,191,2.417,192,3.35,198,3.118,199,2.455,200,2.345,214,3.023,215,1.338,243,3.07,278,3.207,392,4.206,401,2.455,445,7.398,446,5.916,447,5.916,1419,6.238,1420,6.04,1422,3.273,1423,2.575,1425,5.38,1426,4.302,1427,4.098,1432,4.876,1433,4.467,1434,4.876,1435,3.85,1436,3.079,1697,5.38,1698,4.302,1867,6.429,1868,4.876,2944,7.32,2947,5.916,2948,5.472,2949,5.916,3336,5.472,3447,7.398,3604,7.738,3605,5.916,3606,5.916,3607,5.916,3608,6.59,3609,6.59,3610,6.59,3611,8.24,3612,6.59]],["title/classes/ReportMultiLog.html",[44,0.06,1025,3.909]],["body/classes/ReportMultiLog.html",[2,0.046,3,0.046,4,0.04,8,0.272,9,0.462,10,0.967,20,0.698,21,0.396,22,0.005,29,0.054,44,0.108,48,0.472,64,1.259,130,0.004,131,0.004,203,2.187,207,1.363,209,1.354,235,0.877,268,2.077,269,2.032,308,1.484,312,2.248,504,1.53,737,0.837,752,4.122,1015,4.77,1016,5.606,1018,4.77,1019,2.555,1020,4.621,1021,6.9,1022,5.176,1023,1.67,1024,4.995,1025,6.526,1026,6.946,1027,8.11,3613,6.75,3614,8.365,3615,6.75,3616,6.75,3617,6.75]],["title/interfaces/Response.html",[0,0.41,2153,3.708]],["body/interfaces/Response.html",[0,0.769,1,1.651,2,0.05,3,0.05,4,0.043,8,0.294,9,0.483,20,0.66,21,0.358,22,0.005,24,1.321,29,0.058,39,2.158,47,1.176,130,0.004,131,0.004,331,1.082,746,3.545,759,1.919,766,3.065,824,4.093,963,3.66,965,3.397,970,4.177,971,4.093,972,3.794,973,4.177,974,4.177,975,4.177,1033,2.893,1234,4.593,2151,5.682,2152,6.048,2153,6.484,2154,5.94,2155,6.191,2156,5.682]],["title/interfaces/ResponseData.html",[0,0.41,1362,2.058]],["body/interfaces/ResponseData.html",[0,0.852,1,0.993,2,0.03,3,0.043,4,0.026,8,0.176,9,0.346,10,0.897,11,1.578,13,1.333,14,1.319,15,2.272,16,2.055,18,2.681,20,0.717,21,0.335,22,0.005,24,1.515,26,1.856,27,2.302,29,0.062,39,1.856,41,1.199,46,1.62,47,1.212,48,0.633,50,1.65,75,1.03,88,1.351,94,1.125,95,1.271,97,2.055,109,1.389,120,1.111,130,0.003,131,0.003,146,1.408,174,1.535,175,1.513,176,1.513,177,1.513,178,1.513,183,1.335,235,0.656,260,2.002,261,1.139,295,2.196,331,1.026,468,1.606,623,1.739,632,1.578,663,2.488,706,1.739,724,2.874,727,1.693,734,2.102,737,0.906,742,1.959,743,1.629,759,1.154,963,1.606,965,1.491,1023,2.172,1091,1.231,1109,1.657,1110,3.377,1111,3.246,1112,3.299,1115,2.785,1116,3.432,1117,2.488,1188,1.711,1189,1.582,1248,3.118,1299,2.454,1333,1.799,1334,3.528,1335,2.573,1336,1.768,1337,1.711,1338,1.799,1339,1.799,1340,1.799,1341,1.799,1342,1.799,1343,1.799,1344,2.529,1345,1.768,1346,1.737,1347,1.799,1348,1.83,1349,1.799,1350,1.768,1351,1.297,1352,1.799,1353,1.83,1354,1.83,1355,1.83,1356,1.83,1357,1.83,1358,1.83,1359,1.83,1360,1.83,1361,1.83,1362,2.573,1363,3.278,1364,2.617,1365,2.617,1366,1.83,1367,1.428,1368,1.428,1369,1.428,1370,1.799,1371,1.768,1372,1.799,1373,2.573,1374,2.617,1375,2.617,1376,1.799,1377,1.83,1378,1.684,1379,1.83,1380,1.83,1381,1.83,1382,1.83,1383,1.83,1384,1.739,1385,3.003,1386,1.799,1387,1.83,1388,1.83,1389,1.739,1390,1.83,1391,1.83,1392,2.573,1393,1.83,1394,2.573,1395,1.768,1396,2.573,1397,1.83,1398,1.83,1399,1.768,1400,1.856,1401,1.799,1402,2.573,1403,1.83,1404,1.83,1405,1.83,1406,1.83,1407,1.83,1408,1.83,1409,1.83,1410,1.799,1411,1.739,1412,1.315,1413,1.83]],["title/modules/RootModule.html",[184,1.108,429,3.708]],["body/modules/RootModule.html",[2,0.039,3,0.039,4,0.034,22,0.005,25,0.531,29,0.034,44,0.068,130,0.003,131,0.003,184,1.258,186,2.024,187,2.152,188,1.389,189,3.174,190,2.152,191,2.086,192,3.124,198,2.837,199,2.119,200,2.024,214,2.75,215,1.155,243,2.793,279,4.723,280,4.209,350,1.641,394,4.052,404,2.929,429,7.912,737,0.705,1414,7.041,1422,2.978,1423,2.222,1495,4.723,1672,7.041,1679,6.723,1683,5.106,1830,4.723,1858,7.041,2052,6.73,2053,5.106,2126,4.209,2142,7.041,2148,6.226,2184,7.041,2286,4.019,2773,6.45,2778,4.209,2779,4.723,2823,7.041,2896,7.041,3020,4.437,3192,7.041,3207,5.106,3446,6.73,3586,7.041,3591,6.723,3595,5.106,3604,7.041,3618,5.106,3619,5.106,3620,5.687,3621,5.106,3622,5.687,3623,5.687,3624,5.687,3625,5.687,3626,5.687,3627,5.687,3628,5.687,3629,5.687,3630,5.687,3631,5.687,3632,5.687,3633,5.687,3634,7.497,3635,7.497,3636,5.687,3637,5.687,3638,5.687,3639,5.687]],["title/interfaces/Row.html",[0,0.41,724,1.706]],["body/interfaces/Row.html",[0,0.849,1,0.953,2,0.029,3,0.042,4,0.025,8,0.169,9,0.336,11,1.543,13,1.28,14,1.281,15,2.23,16,2.435,18,2.941,20,0.717,21,0.373,22,0.005,24,1.486,26,1.802,27,2.5,29,0.062,39,1.802,41,1.151,46,1.59,47,1.205,48,0.625,50,1.603,75,0.989,88,1.297,94,1.08,95,1.235,97,2.435,109,1.334,120,1.067,130,0.003,131,0.003,146,2.519,174,1.474,175,1.453,176,1.453,177,1.453,178,1.453,183,1.297,235,0.637,260,1.957,261,1.094,295,2.133,331,0.922,468,1.542,623,1.67,632,1.543,663,2.416,706,1.67,724,2.667,727,1.644,734,2.041,737,0.886,742,1.903,743,1.583,759,1.108,963,1.542,965,1.432,1023,2.143,1091,1.182,1109,1.591,1110,3.331,1111,3.195,1112,3.247,1115,2.748,1116,3.385,1117,2.416,1188,1.643,1189,1.519,1248,1.643,1299,2.399,1333,1.727,1334,2.542,1335,2.499,1336,1.698,1337,1.643,1338,1.727,1339,1.727,1340,1.727,1341,1.727,1342,1.727,1343,1.727,1344,2.457,1345,1.698,1346,1.688,1347,1.727,1348,1.757,1349,1.727,1350,1.698,1351,1.246,1352,1.727,1353,1.757,1354,3.273,1355,3.273,1356,3.273,1357,3.273,1358,3.273,1359,3.273,1360,3.273,1361,3.273,1362,1.727,1363,1.727,1364,2.542,1365,2.542,1366,1.757,1367,1.371,1368,1.371,1369,1.371,1370,1.727,1371,1.698,1372,1.727,1373,2.499,1374,2.542,1375,2.542,1376,1.727,1377,1.757,1378,1.617,1379,1.757,1380,1.757,1381,1.757,1382,1.757,1383,1.757,1384,1.67,1385,2.936,1386,1.727,1387,1.757,1388,1.757,1389,1.67,1390,1.757,1391,1.757,1392,2.499,1393,1.757,1394,2.499,1395,1.698,1396,2.499,1397,1.757,1398,1.757,1399,1.698,1400,1.802,1401,1.727,1402,2.499,1403,1.757,1404,1.757,1405,1.757,1406,1.757,1407,1.757,1408,1.757,1409,1.757,1410,1.727,1411,1.67,1412,1.263,1413,1.757]],["title/classes/Scales.html",[44,0.06,3640,4.161]],["body/classes/Scales.html",[2,0.044,3,0.044,4,0.038,8,0.256,9,0.444,11,2.174,21,0.337,22,0.005,25,0.32,29,0.038,32,3.549,34,3.089,36,3.156,44,0.076,48,0.563,54,3.884,64,1.171,75,1.493,130,0.004,131,0.004,188,2.393,202,2.864,203,1.979,207,1.339,211,3.053,232,3.145,256,3.413,310,2.322,331,0.893,504,1.439,534,5.505,550,3.971,571,2.799,572,2.258,591,4.394,631,5.686,635,7.25,637,6.683,733,7.25,1020,4.091,1174,6.067,1234,5.075,1738,7.717,2608,7.225,3004,5.698,3156,7.225,3640,7.963,3641,6.346,3642,9.293,3643,9.293,3644,8.047,3645,10.167,3646,6.346,3647,6.346,3648,9.293,3649,8.047,3650,8.047,3651,7.225,3652,8.047,3653,6.346,3654,6.346,3655,6.346,3656,6.346,3657,6.346,3658,8.047,3659,8.047]],["title/modules/SearchModule.html",[184,1.108,3197,3.708]],["body/modules/SearchModule.html",[2,0.047,3,0.047,4,0.041,22,0.005,25,0.53,29,0.041,44,0.081,130,0.004,131,0.004,184,1.512,186,2.432,187,2.586,188,1.669,189,3.459,190,2.586,191,2.507,192,3.405,198,3.19,199,2.546,200,2.432,214,3.092,215,1.387,218,3.326,243,2.546,278,3.326,396,4.226,561,2.546,591,3.731,1061,2.229,1139,3.829,1237,4.048,1279,3.934,1422,3.348,1423,2.67,1427,4.191,1428,5.503,1429,4.462,1430,5.503,1431,5.315,1435,3.938,1436,3.938,1697,5.503,1698,4.462,1865,7.567,1866,6.135,3197,7.485,3205,6.575,3206,5.331,3660,6.135,3661,6.135,3662,6.135,3663,6.834,3664,6.834,3665,8.428,3666,8.428,3667,6.834,3668,8.428]],["title/interfaces/SearchStructure.html",[0,0.41,113,2.058]],["body/interfaces/SearchStructure.html",[0,0.8,1,1.055,2,0.032,3,0.032,4,0.028,5,2.42,6,4.127,7,4.265,8,0.188,9,0.361,11,2.027,12,3.397,13,2.727,14,1.592,15,2.551,16,2.518,17,3.397,18,2.62,19,2.478,20,0.713,21,0.341,22,0.005,23,3.501,24,1.387,25,0.235,26,2.24,27,1.886,28,1.848,29,0.061,30,2.43,31,2.42,32,2.052,33,2.42,34,2.264,35,2.42,36,2.313,37,2.478,38,1.879,39,1.379,40,2.131,41,1.79,42,2.478,43,2.052,44,0.09,45,2.091,46,1.964,47,1.267,48,0.668,49,4.169,50,1.723,51,2.218,52,2.42,53,2.666,54,3.744,55,2.091,56,4.027,57,2.264,58,2.365,59,3.39,60,3.39,61,3.483,62,3.57,63,3.57,64,0.616,65,3.57,66,2.478,67,2.54,68,2.173,69,2.54,70,2.173,71,3.532,72,2.54,73,2.173,74,2.173,75,1.095,76,3.604,77,2.218,78,3.397,79,4.127,80,2.173,81,2.54,82,2.478,83,2.54,84,2.54,85,2.218,86,2.218,87,2.052,88,2.017,89,2.478,90,2.54,91,2.54,92,2.54,93,2.54,94,1.195,95,1.754,96,3.054,97,1.308,98,1.944,99,2.218,100,1.879,101,3.57,102,1.656,103,3.57,104,2.54,105,2.478,106,4.027,107,2.54,108,1.714,109,1.476,110,2.54,111,2.478,112,2.54,113,2.686,114,1.879,115,2.478,116,1.911,117,1.944,118,1.944,119,1.944,120,1.917,121,1.944,122,1.944,123,2.478,124,2.54,125,2.54,126,2.54,127,2.54,128,2.54,129,2.54,130,0.003,131,0.003]],["title/interfaces/SelectedOrganBeforeFilter.html",[0,0.41,1412,1.505]],["body/interfaces/SelectedOrganBeforeFilter.html",[0,0.851,1,0.987,2,0.03,3,0.043,4,0.026,8,0.176,9,0.344,10,1.323,11,1.573,13,1.326,14,1.314,15,2.267,16,2.464,18,2.677,20,0.717,21,0.334,22,0.005,24,1.514,26,1.849,27,2.297,29,0.062,39,1.849,41,1.193,46,1.616,47,1.211,48,0.632,50,1.644,75,1.025,88,1.344,94,1.119,95,1.267,97,2.049,109,1.381,120,1.105,130,0.003,131,0.003,146,1.401,174,1.527,175,1.505,176,1.505,177,1.505,178,1.505,183,1.33,235,0.654,260,1.996,261,2.071,295,2.187,331,0.935,468,1.598,623,1.73,632,1.573,663,2.478,706,1.73,724,2.482,727,1.687,734,2.094,737,0.904,742,1.952,743,1.623,759,1.148,963,1.598,965,1.483,1023,2.325,1091,1.224,1109,1.648,1110,3.371,1111,3.24,1112,3.292,1115,2.781,1116,3.426,1117,2.478,1188,1.702,1189,1.574,1248,1.702,1299,2.446,1333,1.789,1334,2.608,1335,2.563,1336,1.759,1337,1.702,1338,1.789,1339,1.789,1340,1.789,1341,1.789,1342,1.789,1343,1.789,1344,2.52,1345,1.759,1346,1.731,1347,1.789,1348,1.82,1349,1.789,1350,1.759,1351,1.291,1352,1.789,1353,1.82,1354,1.82,1355,1.82,1356,1.82,1357,1.82,1358,1.82,1359,1.82,1360,1.82,1361,1.82,1362,1.789,1363,1.789,1364,2.608,1365,2.608,1366,1.82,1367,1.421,1368,1.421,1369,1.421,1370,1.789,1371,1.759,1372,1.789,1373,2.563,1374,2.608,1375,2.608,1376,1.789,1377,1.82,1378,1.675,1379,1.82,1380,1.82,1381,1.82,1382,1.82,1383,1.82,1384,1.73,1385,2.995,1386,1.789,1387,1.82,1388,1.82,1389,1.73,1390,1.82,1391,1.82,1392,2.563,1393,1.82,1394,2.563,1395,1.759,1396,2.563,1397,1.82,1398,1.82,1399,1.759,1400,1.849,1401,1.789,1402,2.563,1403,1.82,1404,1.82,1405,1.82,1406,1.82,1407,1.82,1408,1.82,1409,1.82,1410,1.789,1411,1.73,1412,1.874,1413,3.327]],["title/interfaces/Sheet.html",[0,0.41,737,0.621]],["body/interfaces/Sheet.html",[0,0.849,1,0.957,2,0.029,3,0.042,4,0.025,8,0.17,9,0.336,10,1.357,11,1.546,13,1.284,14,1.284,15,2.234,16,2.013,18,2.657,20,0.718,21,0.366,22,0.005,24,1.487,26,1.807,27,2.263,29,0.062,39,1.807,41,1.155,46,1.592,47,1.205,48,0.663,50,1.607,75,0.993,88,1.302,94,1.084,95,1.238,97,2.013,109,1.338,120,1.07,130,0.003,131,0.003,146,1.357,174,1.479,175,1.458,176,1.458,177,1.458,178,1.458,183,1.774,235,0.639,260,1.961,261,1.098,295,2.138,331,1.016,468,1.548,623,1.676,632,1.546,663,2.422,706,1.676,724,2.438,727,2.121,734,2.046,737,0.972,742,1.908,743,1.586,759,1.112,963,1.548,965,1.436,1023,2.145,1091,1.186,1109,1.597,1110,3.587,1111,3.521,1112,3.578,1115,2.959,1116,3.749,1117,2.422,1188,1.649,1189,1.524,1248,1.649,1299,2.91,1333,1.733,1334,2.549,1335,2.505,1336,1.704,1337,1.649,1338,1.733,1339,1.733,1340,1.733,1341,1.733,1342,1.733,1343,1.733,1344,2.463,1345,1.704,1346,1.692,1347,1.733,1348,1.763,1349,1.733,1350,1.704,1351,1.25,1352,1.733,1353,1.763,1354,1.763,1355,1.763,1356,1.763,1357,1.763,1358,1.763,1359,1.763,1360,1.763,1361,1.763,1362,1.733,1363,1.733,1364,2.549,1365,2.549,1366,1.763,1367,1.376,1368,1.376,1369,1.376,1370,1.733,1371,1.704,1372,1.733,1373,2.505,1374,2.549,1375,2.549,1376,1.733,1377,1.763,1378,1.622,1379,1.763,1380,1.763,1381,1.763,1382,1.763,1383,1.763,1384,1.676,1385,2.942,1386,1.733,1387,1.763,1388,1.763,1389,1.676,1390,1.763,1391,1.763,1392,2.505,1393,1.763,1394,2.505,1395,1.704,1396,2.505,1397,1.763,1398,1.763,1399,1.704,1400,1.807,1401,1.733,1402,2.505,1403,1.763,1404,1.763,1405,1.763,1406,1.763,1407,1.763,1408,1.763,1409,1.763,1410,1.733,1411,1.676,1412,1.267,1413,1.763]],["title/interfaces/SheetConfig.html",[0,0.41,727,1.355]],["body/interfaces/SheetConfig.html",[0,0.849,1,0.957,2,0.029,3,0.042,4,0.025,8,0.17,9,0.336,10,1.357,11,1.546,13,1.284,14,1.284,15,2.234,16,2.013,18,2.657,20,0.716,21,0.366,22,0.005,24,1.554,26,1.807,27,2.263,29,0.062,39,1.807,41,1.155,46,1.592,47,1.243,48,0.626,50,1.607,75,0.993,88,1.302,94,1.084,95,1.238,97,2.013,109,1.338,120,1.07,130,0.003,131,0.003,146,1.357,174,1.479,175,1.458,176,1.458,177,1.458,178,1.458,183,1.3,235,0.639,260,1.961,261,1.098,295,2.138,331,0.923,468,1.548,623,1.676,632,1.546,663,2.422,706,3.116,724,2.438,727,1.936,734,2.046,737,0.888,742,2.603,743,2.165,759,1.112,963,1.548,965,1.436,1023,2.145,1091,1.186,1109,1.597,1110,3.335,1111,3.2,1112,3.252,1115,2.751,1116,3.389,1117,2.422,1188,1.649,1189,1.524,1248,1.649,1299,2.403,1333,1.733,1334,2.549,1335,2.505,1336,1.704,1337,1.649,1338,1.733,1339,1.733,1340,1.733,1341,1.733,1342,1.733,1343,1.733,1344,2.463,1345,1.704,1346,1.692,1347,1.733,1348,1.763,1349,1.733,1350,1.704,1351,1.25,1352,1.733,1353,1.763,1354,1.763,1355,1.763,1356,1.763,1357,1.763,1358,1.763,1359,1.763,1360,1.763,1361,1.763,1362,1.733,1363,1.733,1364,3.478,1365,3.478,1366,3.279,1367,2.559,1368,2.559,1369,2.559,1370,1.733,1371,1.704,1372,1.733,1373,2.505,1374,2.549,1375,2.549,1376,1.733,1377,1.763,1378,1.622,1379,1.763,1380,1.763,1381,1.763,1382,1.763,1383,1.763,1384,1.676,1385,2.942,1386,1.733,1387,1.763,1388,1.763,1389,1.676,1390,1.763,1391,1.763,1392,2.505,1393,1.763,1394,2.505,1395,1.704,1396,2.505,1397,1.763,1398,1.763,1399,1.704,1400,1.807,1401,1.733,1402,2.505,1403,1.763,1404,1.763,1405,1.763,1406,1.763,1407,1.763,1408,1.763,1409,1.763,1410,1.733,1411,1.676,1412,1.267,1413,1.763]],["title/interfaces/SheetDetails.html",[0,0.41,1378,1.927]],["body/interfaces/SheetDetails.html",[0,0.844,1,0.9,2,0.027,3,0.04,4,0.024,8,0.16,9,0.322,10,1.475,11,1.493,13,1.209,14,1.229,15,2.171,16,1.944,18,2.616,20,0.718,21,0.386,22,0.005,24,1.472,26,1.729,27,2.199,29,0.061,39,1.729,41,1.087,46,1.547,47,1.207,48,0.654,50,1.537,75,0.934,88,1.225,94,1.02,95,1.184,97,1.944,109,2.418,120,1.007,130,0.003,131,0.003,146,1.277,174,1.392,175,1.372,176,1.372,177,1.372,178,1.372,183,1.731,235,0.611,260,1.894,261,1.033,295,2.045,331,0.999,468,2.796,531,3.809,623,1.577,632,1.493,663,3.226,706,1.577,724,2.355,727,1.577,734,1.958,737,0.857,742,1.825,743,1.518,759,1.046,963,1.456,965,1.352,1023,2.273,1091,1.116,1109,1.503,1110,3.533,1111,3.462,1112,3.518,1115,2.914,1116,3.318,1117,2.317,1188,1.551,1189,1.434,1248,1.551,1299,2.849,1333,1.631,1334,2.438,1335,2.396,1336,1.604,1337,1.551,1338,1.631,1339,1.631,1340,1.631,1341,1.631,1342,1.631,1343,1.631,1344,2.356,1345,1.604,1346,1.618,1347,1.631,1348,1.659,1349,1.631,1350,1.604,1351,1.176,1352,1.631,1353,1.659,1354,1.659,1355,1.659,1356,1.659,1357,1.659,1358,1.659,1359,1.659,1360,1.659,1361,1.659,1362,1.631,1363,1.631,1364,2.438,1365,2.438,1366,1.659,1367,1.295,1368,1.295,1369,1.295,1370,1.631,1371,1.604,1372,1.631,1373,3.131,1374,2.438,1375,2.438,1376,1.631,1377,1.659,1378,2.243,1379,3.186,1380,3.186,1381,3.186,1382,3.186,1383,3.186,1384,1.577,1385,2.841,1386,1.631,1387,1.659,1388,1.659,1389,1.577,1390,1.659,1391,1.659,1392,2.396,1393,1.659,1394,2.396,1395,1.604,1396,2.396,1397,1.659,1398,1.659,1399,1.604,1400,1.729,1401,1.631,1402,2.396,1403,1.659,1404,1.659,1405,1.659,1406,1.659,1407,1.659,1408,1.659,1409,1.659,1410,1.631,1411,1.577,1412,1.192,1413,1.659]],["title/interfaces/SheetInfo.html",[0,0.41,1188,1.958]],["body/interfaces/SheetInfo.html",[0,0.848,1,0.945,2,0.029,3,0.042,4,0.025,8,0.168,9,0.333,10,1.117,11,1.535,13,1.268,14,1.744,15,2.537,16,1.998,18,2.648,20,0.718,21,0.375,22,0.005,24,1.504,26,1.79,27,2.492,29,0.062,39,1.79,41,1.141,46,1.583,47,1.215,48,0.661,50,2.182,75,0.98,88,1.286,94,1.07,95,1.227,97,2.427,109,1.321,120,1.803,130,0.003,131,0.003,146,1.34,174,1.461,175,1.439,176,1.439,177,1.439,178,1.439,183,1.288,235,0.633,260,1.947,261,1.084,295,2.119,331,0.919,468,1.528,623,1.655,632,1.535,663,2.4,706,1.655,724,2.421,727,1.633,734,2.028,737,0.881,742,1.89,743,1.572,759,2.055,963,2.861,965,2.655,1023,2.136,1091,1.171,1109,1.577,1110,3.32,1111,3.184,1112,3.235,1115,2.739,1116,3.374,1117,2.4,1188,2.361,1189,2.817,1248,1.628,1299,2.386,1333,1.711,1334,2.525,1335,2.482,1336,1.683,1337,1.628,1338,1.711,1339,1.711,1340,1.711,1341,1.711,1342,1.711,1343,1.711,1344,2.44,1345,1.683,1346,1.676,1347,1.711,1348,1.741,1349,1.711,1350,1.683,1351,1.234,1352,1.711,1353,1.741,1354,1.741,1355,1.741,1356,1.741,1357,1.741,1358,1.741,1359,1.741,1360,1.741,1361,1.741,1362,1.711,1363,1.711,1364,2.525,1365,2.525,1366,1.741,1367,1.359,1368,1.359,1369,1.359,1370,3.204,1371,3.15,1372,3.204,1373,2.482,1374,2.525,1375,2.525,1376,1.711,1377,1.741,1378,1.602,1379,1.741,1380,1.741,1381,1.741,1382,1.741,1383,1.741,1384,1.655,1385,2.921,1386,1.711,1387,1.741,1388,1.741,1389,1.655,1390,1.741,1391,1.741,1392,2.482,1393,1.741,1394,2.482,1395,1.683,1396,2.482,1397,1.741,1398,1.741,1399,1.683,1400,1.79,1401,1.711,1402,2.482,1403,1.741,1404,1.741,1405,1.741,1406,1.741,1407,1.741,1408,1.741,1409,1.741,1410,1.711,1411,1.655,1412,1.251,1413,1.741]],["title/interfaces/SheetOptions.html",[0,0.41,1384,1.99]],["body/interfaces/SheetOptions.html",[0,0.852,1,0.989,2,0.03,3,0.043,4,0.026,8,0.176,9,0.345,10,1.141,11,1.575,13,1.328,14,1.316,15,2.269,16,2.051,18,2.678,20,0.717,21,0.352,22,0.005,24,1.495,26,1.851,27,2.299,29,0.062,39,1.851,41,1.195,46,1.617,47,1.211,48,0.632,50,1.646,75,1.027,88,1.346,94,1.121,95,1.268,97,2.051,109,1.384,120,1.107,130,0.003,131,0.003,146,1.403,174,1.53,175,1.507,176,1.507,177,1.507,178,1.507,183,1.332,235,0.655,260,1.998,261,1.135,295,2.19,331,0.936,468,1.601,531,4.079,623,1.733,632,1.575,663,3.349,706,1.733,724,2.484,727,1.689,734,2.096,737,1.087,742,1.954,743,1.625,759,1.15,963,1.601,965,1.486,1023,2.326,1091,1.226,1109,1.651,1110,3.373,1111,3.242,1112,3.295,1115,2.983,1116,3.428,1117,2.481,1188,1.705,1189,1.576,1248,1.705,1299,2.449,1333,1.792,1334,2.611,1335,2.566,1336,1.762,1337,1.705,1338,1.792,1339,1.792,1340,1.792,1341,1.792,1342,1.792,1343,1.792,1344,2.523,1345,1.762,1346,1.733,1347,1.792,1348,1.824,1349,1.792,1350,1.762,1351,1.293,1352,1.792,1353,1.824,1354,1.824,1355,1.824,1356,1.824,1357,1.824,1358,1.824,1359,1.824,1360,1.824,1361,1.824,1362,1.792,1363,1.792,1364,2.611,1365,2.611,1366,1.824,1367,1.423,1368,1.423,1369,1.423,1370,1.792,1371,1.762,1372,1.792,1373,2.566,1374,2.611,1375,2.611,1376,1.792,1377,1.824,1378,1.678,1379,1.824,1380,1.824,1381,1.824,1382,1.824,1383,1.824,1384,2.481,1385,2.998,1386,1.792,1387,1.824,1388,1.824,1389,1.733,1390,1.824,1391,1.824,1392,2.566,1393,1.824,1394,2.566,1395,1.762,1396,2.566,1397,1.824,1398,1.824,1399,1.762,1400,1.851,1401,1.792,1402,2.566,1403,1.824,1404,1.824,1405,1.824,1406,1.824,1407,1.824,1408,1.824,1409,1.824,1410,1.792,1411,1.733,1412,1.31,1413,1.824]],["title/injectables/SheetService.html",[712,2.094,3669,4.499]],["body/injectables/SheetService.html",[2,0.026,3,0.026,4,0.051,8,0.151,10,1.339,14,0.788,16,2.081,18,2.109,19,2.974,20,0.691,21,0.345,22,0.005,25,0.419,29,0.022,30,1.979,43,1.65,44,0.045,46,2.003,48,0.69,50,1.76,53,2.061,58,1.17,64,0.496,108,0.848,109,2.349,130,0.003,131,0.003,202,1.987,207,1.263,209,1.814,211,3.057,215,0.759,219,3.682,232,3.436,235,0.7,247,2.154,269,0.778,295,1.312,308,0.664,318,2.802,331,1.135,388,2.113,434,2.919,559,2.148,712,2.333,714,2.096,724,2.521,734,2.788,736,3.784,737,1.268,741,4.263,759,0.986,768,0.902,774,2.359,775,2.919,776,6.102,824,1.748,929,2.919,963,1.372,965,1.274,970,1.783,971,1.748,972,1.62,973,1.783,974,1.783,975,1.783,1023,1.832,1098,4.36,1109,2.998,1110,3.046,1111,3.639,1112,2.181,1116,3.458,1137,5.303,1140,1.946,1188,2.181,1189,1.352,1195,3.645,1243,4.942,1248,3.247,1351,2.194,1352,1.537,1363,2.293,1370,2.743,1371,1.511,1372,1.537,1400,1.108,1444,3.107,1445,6.149,1447,4.636,1472,3.107,1638,4.636,1723,4.561,1730,4.131,1736,7.349,1743,2.768,1875,2.945,1876,2.509,1879,2.509,1893,2.509,1894,2.462,2106,5.012,2153,4.131,2308,3.944,2496,4.131,2843,3.107,3151,5.012,3669,5.012,3670,3.741,3671,5.582,3672,5.582,3673,5.582,3674,5.582,3675,5.582,3676,3.741,3677,5.582,3678,3.741,3679,5.582,3680,5.582,3681,6.9,3682,5.582,3683,5.582,3684,5.582,3685,5.582,3686,5.582,3687,5.582,3688,5.582,3689,5.582,3690,3.741,3691,5.582,3692,5.582,3693,5.582,3694,3.741,3695,5.012,3696,3.741,3697,3.741,3698,8.309,3699,3.741,3700,5.582,3701,5.582,3702,5.012,3703,5.582,3704,3.741,3705,5.582,3706,5.582,3707,3.741,3708,5.582,3709,5.582,3710,7.922,3711,3.741,3712,5.582,3713,3.741,3714,5.582,3715,6.648,3716,5.012,3717,5.582,3718,5.582,3719,3.741,3720,3.359,3721,3.741,3722,5.582,3723,3.741,3724,6.678,3725,3.741,3726,3.741,3727,5.582,3728,5.582,3729,3.741,3730,3.741,3731,3.741,3732,3.741,3733,5.582,3734,3.741,3735,3.741,3736,3.359,3737,3.741,3738,3.741,3739,3.741,3740,3.741,3741,3.741,3742,3.741,3743,5.582,3744,3.741,3745,5.582,3746,3.741,3747,3.741,3748,3.741,3749,3.741,3750,3.741,3751,3.741,3752,3.741,3753,3.741,3754,3.741,3755,3.741,3756,3.741,3757,3.741,3758,3.359]],["title/components/SidenavComponent.html",[250,1.355,398,1.99]],["body/components/SidenavComponent.html",[2,0.043,3,0.043,4,0.047,22,0.005,25,0.313,29,0.037,44,0.074,48,0.555,108,1.405,130,0.004,131,0.004,188,1.514,215,1.258,250,2.362,251,2.461,252,3.256,253,2.59,254,2.59,255,2.59,256,2.205,260,1.697,261,2.795,262,4.267,264,3.201,266,3.201,287,2.461,310,1.788,341,3.312,342,3.201,343,2.59,344,3.85,345,2.59,346,2.59,347,2.461,348,2.59,349,2.461,350,1.788,351,2.59,352,2.461,353,2.59,354,2.421,355,2.59,356,2.461,357,2.205,358,2.59,359,2.461,360,2.59,361,2.461,362,2.59,363,2.461,364,3.312,365,2.461,366,2.59,367,2.461,368,2.59,369,2.421,370,2.59,371,2.383,372,2.59,373,2.461,374,2.59,375,2.461,376,2.59,377,2.461,378,2.59,379,2.503,380,2.59,381,2.461,382,1.742,383,2.59,384,2.461,385,1.572,386,2.59,387,2.461,388,2.999,389,2.59,390,2.461,391,2.59,392,2.503,393,2.59,394,2.461,395,2.59,396,2.503,397,2.59,398,3.659,399,2.59,400,2.461,401,3.256,402,2.59,403,2.461,404,2.421,405,2.59,406,2.545,407,2.59,408,2.461,409,2.59,410,2.461,411,2.461,412,2.503,413,2.345,414,2.59,415,2.59,1256,3.383,1287,3.383,1309,4.029,1317,3.567,1663,4.834,3759,6.196,3760,8.739,3761,7.926,3762,6.196,3763,6.196]],["title/components/SidenavHeaderComponent.html",[250,1.355,400,1.99]],["body/components/SidenavHeaderComponent.html",[2,0.037,3,0.037,4,0.043,8,0.216,11,1.159,20,0.477,21,0.346,22,0.005,24,0.81,25,0.271,29,0.032,44,0.064,48,0.505,53,2.226,108,1.217,130,0.003,131,0.003,188,1.311,207,1.269,215,1.09,235,0.854,250,2.203,251,2.133,252,2.964,253,2.244,254,2.244,255,2.244,256,1.911,260,1.47,261,2.772,262,4.233,264,2.914,266,2.914,287,2.133,308,1.445,310,1.549,341,3.015,342,2.914,343,2.244,344,3.641,345,2.244,346,2.244,347,2.133,348,2.244,349,2.133,350,1.549,351,2.244,352,2.133,353,2.244,354,2.098,355,2.244,356,2.133,357,1.911,358,2.244,359,2.133,360,2.244,361,2.133,362,2.244,363,2.133,364,3.015,365,2.133,366,2.244,367,2.133,368,2.244,369,2.098,370,2.244,371,2.064,372,2.244,373,2.133,374,2.244,375,2.133,376,2.244,377,2.133,378,2.244,379,2.168,380,2.244,381,2.133,382,1.509,383,2.244,384,2.133,385,1.362,386,2.244,387,2.133,388,2.73,389,2.244,390,2.133,391,2.244,392,2.168,393,2.244,394,2.133,395,2.244,396,2.168,397,2.244,398,2.133,399,2.244,400,3.46,401,3.621,402,2.244,403,2.133,404,2.098,405,2.244,406,2.205,407,2.244,408,2.133,409,2.244,410,2.133,411,2.133,412,2.168,413,2.032,414,2.244,415,2.244,572,2.567,703,3.505,743,1.397,1022,2.793,1031,3.124,1088,3.668,1090,4.55,1100,5.233,1115,2.969,1136,3.991,1137,4.566,1234,3.386,1291,2.67,1292,3.278,1293,3.793,1299,2.421,1322,3.973,1433,6.345,1839,3.793,1854,4.274,2268,3.793,2373,4.82,3764,8.403,3765,5.369,3766,8.148,3767,7.215,3768,8.148,3769,8.148,3770,8.148,3771,8.148,3772,5.369,3773,5.369,3774,7.215,3775,5.369,3776,5.369,3777,5.369,3778,6.477,3779,7.215,3780,5.369,3781,5.369]],["title/modules/SidenavHeaderModule.html",[184,1.108,1419,3.16]],["body/modules/SidenavHeaderModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.512,29,0.043,44,0.087,130,0.004,131,0.004,184,1.618,186,2.603,187,2.768,188,1.787,189,3.563,190,2.768,191,2.683,192,3.508,198,3.325,199,2.725,200,2.603,214,3.223,215,1.485,243,2.725,278,3.56,400,4.191,401,2.725,1419,6.468,1422,3.489,1423,2.858,1427,4.368,1433,4.959,1435,4.104,1436,3.417,1697,5.736,1698,4.776,3764,6.567,3782,6.567,3783,6.567,3784,6.567,3785,7.315,3786,7.315]],["title/modules/SidenavModule.html",[184,1.108,1420,3.06]],["body/modules/SidenavModule.html",[2,0.051,3,0.051,4,0.044,22,0.005,25,0.497,29,0.044,44,0.089,130,0.004,131,0.004,184,1.655,186,2.662,187,2.831,188,1.827,189,3.597,190,2.831,191,2.744,192,3.541,198,3.369,199,2.787,200,2.662,214,3.266,215,1.518,243,2.787,398,4.202,1420,6.291,1422,3.536,1423,2.923,1435,4.159,1436,3.494,3787,6.715,3788,6.715,3789,6.715,3790,7.48,3791,7.48]],["title/classes/Signals.html",[44,0.06,575,3.541]],["body/classes/Signals.html",[2,0.021,3,0.04,4,0.018,8,0.123,9,0.263,10,1.035,20,0.577,21,0.292,22,0.005,23,2.601,24,1.156,25,0.241,29,0.018,38,1.231,41,0.835,44,0.036,46,1.351,47,1,48,0.713,53,0.94,64,0.404,97,1.341,130,0.002,131,0.002,149,4.064,150,4.064,183,1.018,202,1.698,203,1.317,207,1.331,209,1.449,211,3.236,232,3.333,235,1.047,236,5.041,256,2.951,323,2.606,331,0.85,498,3.236,504,0.691,534,2.827,550,4.437,551,4.33,560,2.275,571,1.344,572,1.085,575,5.66,591,5.491,595,7.754,606,2.525,609,4.925,628,2.736,639,4.353,645,8.108,646,5.282,678,3.372,683,4.885,706,1.211,709,4.885,710,2.531,727,2.165,734,1.974,736,5.621,742,2.506,743,2.084,748,3.01,768,0.735,776,3.84,978,6.88,979,5.671,1048,1.514,1061,1.557,1395,1.928,1588,1.961,1750,5.975,1788,2.736,1789,2.736,1984,6.27,2307,3.532,2473,7.851,2482,5.845,3258,6.886,3715,8.108,3792,3.048,3793,4.773,3794,4.773,3795,6.656,3796,6.656,3797,6.656,3798,6.656,3799,6.656,3800,6.656,3801,6.656,3802,6.656,3803,6.656,3804,6.656,3805,6.656,3806,4.773,3807,3.723,3808,4.773,3809,4.773,3810,3.048,3811,4.773,3812,3.048,3813,4.773,3814,3.048,3815,3.048,3816,8.321,3817,6.656,3818,7.664,3819,3.048,3820,7.664,3821,7.664,3822,3.048,3823,5.882,3824,3.048,3825,5.882,3826,3.048,3827,6.656,3828,3.048,3829,6.656,3830,3.048,3831,3.048,3832,4.773,3833,4.773,3834,3.048,3835,4.773,3836,3.048,3837,3.048,3838,4.773,3839,3.048,3840,4.773,3841,4.285,3842,4.773,3843,3.048,3844,3.048,3845,3.048,3846,3.048,3847,3.048,3848,3.048,3849,3.048,3850,3.048,3851,3.048,3852,3.048,3853,3.048,3854,3.048,3855,3.048,3856,3.048,3857,3.048,3858,3.048,3859,3.048,3860,3.048,3861,3.048,3862,3.048,3863,7.226,3864,3.048,3865,3.048,3866,3.048,3867,4.773,3868,2.736,3869,3.048,3870,3.048,3871,6.656,3872,5.882,3873,5.882,3874,5.882,3875,5.882,3876,3.048,3877,3.048]],["title/interfaces/Snackbar.html",[0,0.41,272,2.058]],["body/interfaces/Snackbar.html",[0,0.798,1,1.651,2,0.05,3,0.05,4,0.043,8,0.294,9,0.483,15,2.074,20,0.678,21,0.391,22,0.005,24,1.47,25,0.474,27,2.528,28,2.893,29,0.058,47,0.878,48,0.51,50,1.919,97,2.047,130,0.004,131,0.004,147,3.622,272,3.599,559,3.136,1019,2.756,1020,4.778,1033,3.873,1034,2.217,1038,3.48,3005,5.682,3006,5.146,3007,5.682,3008,5.682,3009,7.216,3010,5.146,3011,5.146]],["title/interfaces/Structure.html",[0,0.41,18,1.427]],["body/interfaces/Structure.html",[0,0.848,1,0.95,2,0.029,3,0.042,4,0.025,8,0.169,9,0.335,10,1.445,11,1.868,13,2.38,14,1.278,15,2.541,16,2.432,18,2.693,20,0.717,21,0.365,22,0.005,24,1.505,26,2.317,27,2.256,29,0.062,39,1.798,41,1.148,46,1.812,47,1.204,48,0.662,50,1.599,75,0.986,88,2.413,94,1.076,95,1.232,97,2.005,109,1.329,120,1.063,130,0.003,131,0.003,146,1.348,174,1.469,175,1.448,176,1.448,177,1.448,178,1.448,183,1.294,235,0.636,260,1.953,261,1.09,295,2.128,331,0.921,468,1.537,623,1.665,632,1.54,663,2.41,706,1.665,724,2.429,727,1.64,734,2.036,737,0.884,742,1.898,743,1.579,759,1.104,963,1.537,965,1.427,1023,2.14,1091,1.178,1109,1.586,1110,3.327,1111,3.191,1112,3.243,1115,2.744,1116,3.381,1117,2.41,1188,1.638,1189,1.514,1248,1.638,1299,2.394,1333,1.721,1334,2.536,1335,3.212,1336,1.693,1337,1.638,1338,1.721,1339,1.721,1340,1.721,1341,1.721,1342,1.721,1343,1.721,1344,2.451,1345,1.693,1346,1.683,1347,1.721,1348,1.751,1349,1.721,1350,1.693,1351,1.242,1352,3.212,1353,3.268,1354,1.751,1355,1.751,1356,1.751,1357,1.751,1358,1.751,1359,1.751,1360,1.751,1361,1.751,1362,1.721,1363,1.721,1364,2.536,1365,2.536,1366,1.751,1367,1.367,1368,1.367,1369,1.367,1370,1.721,1371,1.693,1372,1.721,1373,2.493,1374,2.536,1375,2.536,1376,1.721,1377,1.751,1378,1.611,1379,1.751,1380,1.751,1381,1.751,1382,1.751,1383,1.751,1384,1.665,1385,2.93,1386,1.721,1387,1.751,1388,1.751,1389,1.665,1390,1.751,1391,1.751,1392,2.493,1393,1.751,1394,2.493,1395,1.693,1396,2.493,1397,1.751,1398,1.751,1399,1.693,1400,1.798,1401,1.721,1402,2.493,1403,1.751,1404,1.751,1405,1.751,1406,1.751,1407,1.751,1408,1.751,1409,1.751,1410,1.721,1411,1.665,1412,1.259,1413,1.751]],["title/classes/TNode.html",[44,0.06,45,2.252]],["body/classes/TNode.html",[0,0.777,2,0.028,3,0.028,4,0.024,5,2.097,6,3.81,7,3.994,8,0.162,9,0.326,10,0.578,11,2.074,12,3.135,13,2.752,14,1.721,15,2.67,16,2.635,17,3.135,18,2.511,19,2.147,20,0.713,21,0.391,22,0.005,23,3.336,24,1.391,25,0.204,26,2.067,27,1.702,28,1.601,29,0.06,30,2.275,31,2.097,32,1.778,33,2.097,34,1.962,35,2.097,36,2.005,37,2.147,38,1.628,39,1.195,40,1.847,41,1.616,42,2.147,43,1.778,44,0.083,45,2.651,46,1.903,47,1.26,48,0.665,49,4.597,50,2.023,51,3.326,52,3.629,53,2.634,54,3.415,55,3.135,56,4.353,57,3.396,58,2.67,59,3.092,60,3.092,61,4.09,62,4.193,63,4.193,64,0.782,65,4.193,66,2.147,67,2.201,68,1.883,69,2.201,70,1.883,71,3.26,72,2.201,73,1.883,74,1.883,75,0.949,76,3.326,77,1.922,78,3.135,79,3.81,80,1.883,81,2.201,82,2.147,83,2.201,84,2.201,85,1.922,86,1.922,87,1.778,88,1.82,89,2.147,90,2.201,91,2.201,92,2.201,93,2.201,94,1.036,95,1.659,96,2.756,97,1.133,98,1.685,99,1.922,100,1.628,101,3.221,102,1.435,103,3.221,104,2.201,105,2.147,106,3.717,107,2.201,108,1.582,109,1.279,110,2.201,111,2.147,112,2.201,113,1.656,114,1.628,115,2.147,116,1.656,117,1.685,118,1.685,119,1.685,120,1.77,121,1.685,122,1.685,123,2.147,124,2.201,125,2.201,126,2.201,127,2.201,128,2.201,129,2.201,130,0.003,131,0.003,207,1.423,209,0.808,235,0.856,308,1.449,504,0.914,3878,4.031,3879,5.9,3880,4.031,3881,4.031,3882,4.031,3883,4.031,3884,4.031,3885,4.031,3886,4.031,3887,4.031,3888,4.031,3889,4.031,3890,4.031,3891,4.031,3892,4.031,3893,4.031,3894,4.031,3895,4.031,3896,4.031,3897,4.031,3898,4.031,3899,4.031]],["title/components/TableNestedMenuComponent.html",[250,1.355,403,1.99]],["body/components/TableNestedMenuComponent.html",[2,0.035,3,0.035,4,0.042,8,0.206,9,0.385,10,0.733,20,0.636,21,0.341,22,0.005,25,0.401,29,0.03,44,0.061,48,0.556,108,1.16,130,0.003,131,0.003,188,1.25,202,2.485,203,1.564,207,1.288,209,1.026,211,1.767,215,1.038,235,0.895,245,2.82,250,2.149,251,2.032,252,2.868,253,2.138,254,2.138,255,2.138,256,1.82,260,1.401,261,2.764,262,4.22,264,2.82,266,2.82,268,1.575,287,2.032,298,1.999,308,1.515,310,1.476,341,2.918,342,2.82,343,2.138,344,3.569,345,2.138,346,2.138,347,2.032,348,2.138,349,2.032,350,1.476,351,2.138,352,2.032,353,2.138,354,1.999,355,2.138,356,2.032,357,1.82,358,2.138,359,2.032,360,2.138,361,2.032,362,2.138,363,2.032,364,2.918,365,2.032,366,2.138,367,2.032,368,2.138,369,1.999,370,2.138,371,1.967,372,2.138,373,2.032,374,2.138,375,2.032,376,2.138,377,2.032,378,2.138,379,2.066,380,2.138,381,2.032,382,1.438,383,2.138,384,2.032,385,1.297,386,2.138,387,2.032,388,3.689,389,2.138,390,2.032,391,2.138,392,2.066,393,2.138,394,2.032,395,2.138,396,2.066,397,2.138,398,2.032,399,2.138,400,2.032,401,1.906,402,2.138,403,3.392,404,4.083,405,2.138,406,2.101,407,2.138,408,2.032,409,2.138,410,2.032,411,2.032,412,2.066,413,1.936,414,2.138,415,2.138,768,1.234,1088,3.55,1110,1.967,1111,3.056,1115,2.521,1136,3.641,1378,3.548,1532,2.793,1936,6.615,1993,3.991,2028,5.447,2282,3.468,2293,3.468,2778,6.988,3900,8.478,3901,5.115,3902,7.949,3903,6.982,3904,7.949,3905,7.949,3906,6.982,3907,5.115,3908,5.115,3909,6.982,3910,5.115,3911,7.949,3912,6.982,3913,5.115,3914,6.982,3915,5.115,3916,5.115,3917,5.115,3918,6.982,3919,6.982]],["title/modules/TableNestedMenuModule.html",[184,1.108,2773,3.397]],["body/modules/TableNestedMenuModule.html",[2,0.05,3,0.05,4,0.043,22,0.005,25,0.512,29,0.043,44,0.087,130,0.004,131,0.004,184,1.611,186,2.592,187,2.756,188,1.779,189,3.556,190,2.756,191,2.672,192,3.501,198,3.316,199,2.713,200,2.592,214,3.214,215,1.478,243,2.713,278,3.545,388,2.756,403,4.189,404,3.672,1422,3.48,1423,2.846,1427,4.357,1435,4.093,1436,3.402,2281,6.191,2282,4.937,2773,6.947,2778,5.389,3900,6.538,3920,6.538,3921,6.538,3922,6.538,3923,7.283,3924,7.283]],["title/classes/ToggleBottomSheet.html",[44,0.06,1054,2.295]],["body/classes/ToggleBottomSheet.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.124,64,1.364,130,0.003,131,0.003,203,2.351,207,0.996,235,0.553,268,1.413,269,2.184,272,2.93,308,0.936,310,1.523,312,1.305,316,2.031,331,0.791,350,1.523,382,1.483,504,1.197,559,2.906,561,3.47,606,1.356,632,1.867,737,1.154,758,2.286,759,1.391,766,3.105,767,1.997,768,1.273,1019,1.997,1028,2.372,1029,2.466,1031,4.123,1032,2.303,1033,2.833,1034,2.171,1035,1.674,1036,2.372,1037,3.892,1038,3.209,1039,2.423,1040,2.372,1041,2.418,1042,2.328,1043,2.328,1044,2.372,1045,2.372,1046,2.372,1047,2.286,1048,1.674,1049,2.372,1050,2.372,1051,2.372,1052,2.096,1053,2.418,1054,3.267,1055,2.206,1056,2.328,1057,2.372,1058,2.372,1059,2.328,1060,2.372,1061,2.326,1062,2.372,3925,7.132]],["title/classes/ToggleControlPane.html",[44,0.06,1042,2.21]],["body/classes/ToggleControlPane.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.124,64,1.364,130,0.003,131,0.003,203,2.351,207,0.996,235,0.553,268,1.413,269,2.184,272,2.93,308,0.936,310,1.523,312,1.305,316,2.031,331,0.791,350,2.058,382,1.483,504,1.197,559,2.906,561,3.47,606,1.356,632,1.867,737,1.12,758,2.286,759,1.391,766,3.105,767,1.997,768,1.273,1019,1.997,1028,2.372,1029,2.466,1031,4.123,1032,2.235,1033,2.833,1034,2.171,1035,1.674,1036,2.372,1037,3.892,1038,3.209,1039,2.423,1040,2.372,1041,2.418,1042,3.146,1043,3.146,1044,2.372,1045,2.372,1046,2.372,1047,2.286,1048,1.674,1049,2.372,1050,2.372,1051,2.372,1052,2.096,1053,2.418,1054,2.418,1055,2.206,1056,2.328,1057,2.372,1058,2.372,1059,2.328,1060,2.372,1061,2.326,1062,2.372,3926,7.132]],["title/classes/ToggleDebugLogs.html",[44,0.06,1050,2.252]],["body/classes/ToggleDebugLogs.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.124,64,1.364,130,0.003,131,0.003,203,2.351,207,0.996,235,0.553,268,1.413,269,2.184,272,2.93,308,0.936,310,2.058,312,1.305,316,2.031,331,0.791,350,1.523,382,1.483,504,1.197,559,2.906,561,3.47,606,1.356,632,1.867,737,1.12,758,2.286,759,1.391,766,3.105,767,1.997,768,1.273,1019,2.699,1028,2.372,1029,2.466,1031,4.123,1032,2.235,1033,2.833,1034,2.171,1035,1.674,1036,2.372,1037,3.892,1038,3.209,1039,2.423,1040,2.372,1041,2.418,1042,2.328,1043,2.328,1044,2.372,1045,2.372,1046,2.372,1047,2.286,1048,1.674,1049,2.372,1050,3.205,1051,2.372,1052,2.096,1053,2.418,1054,2.418,1055,2.206,1056,2.328,1057,2.372,1058,2.372,1059,2.328,1060,2.372,1061,2.326,1062,2.372,3927,7.132]],["title/classes/ToggleIndentList.html",[44,0.06,1046,2.252]],["body/classes/ToggleIndentList.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.124,64,1.364,130,0.003,131,0.003,203,2.351,207,0.996,235,0.553,268,1.413,269,2.184,272,2.93,308,0.936,310,1.523,312,1.305,316,2.031,331,0.791,350,1.523,382,1.483,504,1.197,559,2.906,561,3.47,606,1.356,632,1.867,737,1.12,758,2.286,759,1.391,766,3.105,767,1.997,768,1.273,1019,1.997,1028,2.372,1029,2.466,1031,4.123,1032,2.235,1033,2.833,1034,2.171,1035,1.674,1036,2.372,1037,3.892,1038,3.209,1039,2.423,1040,2.372,1041,2.418,1042,2.328,1043,2.328,1044,2.372,1045,2.372,1046,3.205,1047,3.088,1048,2.262,1049,2.372,1050,2.372,1051,2.372,1052,2.096,1053,2.418,1054,2.418,1055,2.206,1056,2.328,1057,2.372,1058,2.372,1059,2.328,1060,2.372,1061,2.326,1062,2.372,3928,7.132]],["title/classes/ToggleReport.html",[44,0.06,1049,2.252]],["body/classes/ToggleReport.html",[2,0.036,3,0.036,4,0.031,8,0.213,9,0.394,20,0.598,21,0.402,22,0.005,25,0.408,29,0.062,44,0.125,64,1.364,130,0.003,131,0.003,203,2.352,207,0.996,235,0.554,268,1.414,269,2.184,272,2.932,308,0.937,310,1.524,312,1.765,316,2.032,331,0.792,350,1.524,382,1.485,504,1.198,559,2.907,561,3.471,606,1.357,632,1.868,737,1.12,758,2.288,759,1.392,766,3.106,767,1.999,768,1.275,1019,1.999,1028,2.374,1029,2.468,1031,4.124,1032,2.236,1033,2.835,1034,2.172,1035,1.676,1036,2.374,1037,3.893,1038,3.21,1039,2.424,1040,2.374,1041,2.42,1042,2.33,1043,2.33,1044,2.374,1045,2.374,1046,2.374,1047,2.288,1048,1.676,1049,3.207,1050,2.374,1051,2.374,1052,2.099,1053,2.42,1054,2.42,1055,2.208,1056,2.33,1057,2.374,1058,2.374,1059,2.33,1060,2.374,1061,2.328,1062,2.374,3929,7.137]],["title/classes/ToggleShowAllAS.html",[44,0.06,1560,2.252]],["body/classes/ToggleShowAllAS.html",[2,0.047,3,0.035,4,0.03,8,0.203,9,0.381,20,0.634,21,0.399,22,0.005,24,0.759,25,0.398,29,0.062,44,0.124,47,0.607,64,1.246,108,1.141,130,0.003,131,0.003,183,1.472,203,2.341,207,0.964,235,0.527,268,1.819,269,2.175,308,0.893,312,1.95,316,1.966,318,2.983,331,1.118,385,1.277,504,1.141,606,2.525,632,1.701,727,1.867,737,1.29,768,1.214,1007,2.067,1023,1.245,1032,1.708,1034,2.102,1035,1.596,1039,2.663,1087,2.141,1091,2.384,1181,2.22,1218,2.22,1346,1.915,1351,2.046,1412,2.074,1501,2.033,1559,2.262,1560,3.103,1561,2.22,1588,2.836,1599,2.305,1869,2.305,1870,2.351,1874,2.351,1875,2.22,1876,4.366,1877,2.305,1878,2.351,1879,2.262,1880,2.351,1881,2.305,1882,2.836,1883,2.351,1884,2.305,1885,2.305,1886,2.305,1887,2.305,1888,3.226,1889,2.305,1890,2.262,1891,2.305,1892,2.305,1893,2.262,1894,2.22,1895,2.305,1896,2.262,1897,2.262,1898,2.305,1899,2.305,1900,2.351,1901,2.305,1902,2.351,1903,2.351,1904,2.351,3930,6.905]],["title/components/TrackingPopupComponent.html",[250,1.355,287,1.99]],["body/components/TrackingPopupComponent.html",[2,0.03,3,0.03,4,0.038,8,0.255,9,0.348,10,1.054,11,0.956,20,0.293,21,0.365,22,0.005,23,2.875,24,1.279,25,0.371,29,0.026,30,1.312,44,0.088,48,0.593,64,0.837,108,1.004,130,0.003,131,0.003,188,1.082,195,5.54,200,3.018,202,2.247,207,1.318,209,1.476,211,2.542,215,0.899,232,2.619,235,0.662,245,1.789,250,1.989,251,1.759,252,2.594,253,1.851,254,1.851,255,1.851,256,1.576,260,1.213,261,2.737,262,4.199,264,2.55,266,2.55,268,1.458,269,1.669,279,3.678,280,3.278,287,3.186,289,7.47,291,3.976,298,3.314,308,1.12,310,1.278,331,0.941,332,3.976,335,3.976,339,2.704,341,2.639,342,2.55,343,1.851,344,3.352,345,1.851,346,1.851,347,1.759,348,1.851,349,1.759,350,1.278,351,1.851,352,1.759,353,1.851,354,1.731,355,1.851,356,1.759,357,1.576,358,1.851,359,1.759,360,1.851,361,1.759,362,1.851,363,1.759,364,2.639,365,1.759,366,1.851,367,1.759,368,1.851,369,1.731,370,1.851,371,1.703,372,1.851,373,1.759,374,1.851,375,1.759,376,1.851,377,1.759,378,1.851,379,1.789,380,1.851,381,1.759,382,1.245,383,1.851,384,1.759,385,1.123,386,1.851,387,1.759,388,2.39,389,1.851,390,1.759,391,1.851,392,1.789,393,1.851,394,1.759,395,1.851,396,1.789,397,1.851,398,1.759,399,1.851,400,1.759,401,1.65,402,1.851,403,1.759,404,1.731,405,1.851,406,4.02,407,1.851,408,1.759,409,1.851,410,1.759,411,1.759,412,1.789,413,1.676,414,1.851,415,1.851,531,4.804,698,2.55,743,1.643,1020,3.21,1092,5.244,1275,2.793,1276,3.856,1284,2.304,1298,4.804,1299,2.119,1300,2.704,1301,3.856,1302,2.892,1308,3.741,1314,4.123,1337,1.731,1474,4.673,1486,4.673,1487,4.673,1532,3.448,1736,5.244,1839,4.461,1843,3.455,2042,3.003,2124,2.892,2564,6.878,3135,5.244,3421,5.244,3931,8.596,3932,4.429,3933,6.314,3934,6.314,3935,8.816,3936,7.358,3937,6.314,3938,7.358,3939,8.021,3940,6.314,3941,6.314,3942,9.439,3943,4.429,3944,6.314,3945,6.314,3946,4.429,3947,6.314,3948,9.688,3949,4.429,3950,6.314,3951,4.429,3952,4.429,3953,6.314,3954,6.314,3955,4.429,3956,4.429,3957,4.429,3958,4.429,3959,4.429,3960,4.429,3961,4.429,3962,4.429,3963,4.429,3964,4.429,3965,4.429,3966,6.314,3967,6.314,3968,6.314,3969,4.429,3970,4.429,3971,4.429,3972,4.429,3973,4.429]],["title/modules/TrackingPopupModule.html",[184,1.108,430,3.708]],["body/modules/TrackingPopupModule.html",[2,0.051,3,0.051,4,0.044,22,0.005,25,0.496,29,0.044,44,0.089,130,0.004,131,0.004,184,1.647,186,2.65,187,2.818,188,1.819,189,3.59,190,2.818,191,2.731,192,3.534,198,3.36,199,2.774,200,2.65,214,3.257,215,1.512,243,2.774,287,4.2,289,5.809,290,6.685,406,3.059,430,7.617,1422,3.527,1423,2.91,1435,4.148,1436,3.479,3931,6.685,3974,6.685,3975,6.685,3976,6.685,3977,7.446]],["title/components/TreeComponent.html",[250,1.355,408,1.99]],["body/components/TreeComponent.html",[2,0.041,3,0.041,4,0.046,8,0.24,9,0.426,21,0.227,22,0.005,25,0.3,29,0.035,44,0.071,48,0.54,108,1.348,130,0.003,131,0.003,188,1.452,207,0.83,215,1.207,250,2.316,251,2.362,252,3.17,253,2.485,254,2.485,255,2.485,256,3.049,260,1.628,261,2.788,262,4.257,264,3.117,266,3.117,280,4.399,287,2.362,310,1.715,341,3.225,342,3.117,343,2.485,344,3.79,345,2.485,346,2.485,347,2.362,348,2.485,349,2.362,350,1.715,351,2.485,352,2.362,353,2.485,354,2.323,355,2.485,356,2.362,357,2.116,358,2.485,359,2.362,360,2.485,361,2.362,362,2.485,363,2.362,364,3.225,365,2.362,366,2.485,367,2.362,368,2.485,369,2.323,370,2.485,371,2.286,372,2.485,373,2.362,374,2.485,375,2.362,376,2.485,377,2.362,378,2.485,379,2.401,380,2.485,381,2.362,382,1.671,383,2.485,384,2.362,385,1.508,386,2.485,387,2.362,388,2.92,389,2.485,390,2.362,391,2.485,392,2.401,393,2.485,394,2.362,395,2.485,396,2.401,397,2.485,398,2.362,399,2.485,400,2.362,401,2.215,402,2.485,403,2.362,404,2.323,405,2.485,406,2.442,407,2.485,408,3.602,409,2.485,410,2.362,411,2.362,412,2.401,413,2.25,414,2.485,415,2.485,742,1.86,1115,2.448,1273,4.638,1277,3.63,1291,2.956,1292,3.63,1293,4.201,1299,1.995,1303,4.03,1307,5.337,1322,4.399,1532,3.246,1795,5.337,2006,3.749,2268,4.201,2293,4.03,2564,6.685,3428,6.928,3978,5.945,3979,8.568,3980,7.717,3981,8.568,3982,7.717,3983,5.945,3984,5.945,3985,5.945]],["title/classes/TreeMarkGroup.html",[44,0.06,3120,4.161]],["body/classes/TreeMarkGroup.html",[2,0.035,3,0.017,4,0.014,8,0.097,9,0.218,14,0.834,21,0.309,22,0.005,25,0.122,29,0.014,44,0.029,46,1.6,48,0.551,50,0.636,58,2.78,59,3.318,60,3.318,64,0.667,78,1.085,95,0.804,130,0.002,131,0.002,135,1.009,141,3.797,145,3.449,147,3.433,148,2.585,151,1.576,153,1.523,181,1.046,202,1.409,203,1.127,207,1.184,211,2.802,232,2.887,235,1.09,236,4.841,245,3.996,256,3.073,331,0.845,498,3.412,504,0.547,534,3.449,538,5.227,539,5.227,540,5.227,541,5.227,545,5.689,548,7.579,550,3.103,553,3.288,557,6.834,558,6.199,559,2.82,560,2.775,561,2.572,562,6.199,565,1.888,570,5.569,571,1.065,572,0.859,575,1.706,576,8.911,577,2.585,581,2.168,583,2.168,584,2.168,585,2.168,586,2.168,587,4.835,589,5.939,590,5.689,591,5.524,592,6.834,593,8.884,594,8.217,595,7.528,596,6.834,597,6.834,598,6.834,599,6.834,600,6.834,601,6.483,602,3.555,603,6.003,604,4.518,605,6.546,606,1.955,607,5.161,608,7.691,609,6.577,610,2.168,611,5.227,612,2.168,613,5.227,614,5.227,615,2.168,616,2.168,617,2.168,618,3.555,619,2.168,620,2.168,621,2.168,622,2.168,624,3.089,626,3.556,627,2.005,637,3.288,638,2.005,639,5.633,652,3.288,653,2.168,654,3.926,658,4.542,661,1.576,662,1.576,663,1.999,671,5.227,672,2.005,673,3.555,678,1.706,679,2.168,688,3.555,689,2.168,690,2.005,692,2.005,694,3.555,696,3.555,698,2.279,699,1.969,700,3.555,701,3.288,702,1.884,703,1.576,704,3.555,706,1.573,707,3.555,709,2.005,710,2.005,711,1.787,800,1.884,1052,1.573,1061,1.291,1293,1.706,2021,1.787,2765,4.835,2981,1.884,3110,5.227,3120,3.288,3125,2.168,3170,2.168,3171,2.168,3868,6.547,3986,2.414,3987,5.822,3988,5.822,3989,5.822,3990,5.822,3991,3.959,3992,2.414,3993,2.414,3994,2.414,3995,2.414,3996,2.414,3997,2.414,3998,2.414,3999,2.414,4000,2.414,4001,3.959,4002,2.414,4003,2.414,4004,2.414,4005,2.414,4006,2.414,4007,2.414,4008,2.414,4009,6.427,4010,5.033,4011,2.414,4012,3.959]],["title/modules/TreeModule.html",[184,1.108,3591,3.541]],["body/modules/TreeModule.html",[2,0.052,3,0.052,4,0.045,22,0.005,25,0.482,29,0.045,44,0.09,130,0.004,131,0.004,184,1.67,186,2.686,187,2.856,188,1.844,189,3.611,190,2.856,191,2.769,192,3.555,198,3.387,199,2.812,200,2.686,214,3.283,215,1.532,243,2.812,408,4.207,1422,3.555,1423,2.949,3591,7.292,4013,6.776,4014,6.776,4015,6.776,4016,7.548,4017,7.548]],["title/injectables/TreeService.html",[712,2.094,4018,4.499]],["body/injectables/TreeService.html",[2,0.023,3,0.023,4,0.02,8,0.134,9,0.282,10,0.733,13,1.558,18,1.457,20,0.221,21,0.347,22,0.005,23,1.303,24,0.772,25,0.485,29,0.02,30,2.849,31,3.239,38,1.347,40,1.528,41,2.063,43,3.767,44,0.04,45,3.72,46,1.418,47,0.842,48,0.436,49,4.343,53,1.579,58,2.59,64,0.678,75,1.204,108,0.756,109,1.058,120,1.298,130,0.002,131,0.002,141,3.443,142,2.868,143,2.868,167,3.914,183,1.328,202,1.821,207,1.27,209,1.401,211,1.152,215,0.677,230,2.795,232,2.681,235,0.35,245,2.515,247,1.92,256,3.182,268,1.828,269,1.822,295,2.183,298,2,308,0.592,316,0.95,331,1.024,342,1.347,350,1.477,444,1.92,472,2.602,473,2.602,474,2.261,475,2.468,476,5.449,477,2.77,534,3.689,560,4.072,565,2.44,571,3.651,572,2.216,646,2.726,699,2.545,712,2.139,713,5.323,714,1.869,720,2.357,721,5.719,724,2.378,726,7.138,727,2.149,734,1.119,736,3.47,737,1.171,741,1.92,742,2.357,745,4.176,746,1.623,748,3.228,751,2.994,752,2.037,753,2.357,755,1.696,756,1.735,757,2.261,759,1.349,760,2.468,762,2.261,763,2.261,764,2.357,766,2.278,767,1.262,768,0.805,769,1.59,774,2.103,776,4.066,777,2.357,844,4.25,851,2.994,853,2.994,855,2.994,860,4.595,864,2.994,898,4.595,948,5.323,952,5.191,954,2.994,961,2.357,962,2.77,963,2.284,964,2.602,965,1.136,966,2.602,967,2.77,968,2.602,969,2.77,997,2.994,1037,2.139,1043,2.257,1061,2.031,1091,0.937,1098,6.1,1140,1.735,1181,3.081,1218,2.747,1237,1.976,1503,6.764,1512,5.878,1532,3.4,1535,4.595,1552,4.595,1563,2.602,1574,2.994,1575,2.994,1578,2.357,1723,2.947,1730,2.468,1743,3.787,1745,2.602,1882,2.102,2483,3.616,2610,4.25,2838,2.994,2839,2.994,2840,2.994,2841,2.994,2842,2.994,2843,2.77,2844,2.994,2846,5.8,2848,2.994,2849,5.591,2850,6.764,2852,2.994,2853,5.591,2854,4.595,3018,4.595,3021,2.602,3716,6.271,3758,5.591,4018,4.595,4019,3.335,4020,5.591,4021,6.228,4022,5.118,4023,5.118,4024,5.118,4025,6.228,4026,3.335,4027,5.118,4028,5.118,4029,3.335,4030,3.335,4031,5.118,4032,3.335,4033,3.335,4034,4.595,4035,3.335,4036,3.335,4037,3.335,4038,3.335,4039,2.994,4040,3.335,4041,3.335,4042,3.335,4043,3.335,4044,6.985,4045,6.985,4046,6.985,4047,3.335,4048,3.335,4049,6.985,4050,3.335,4051,3.335,4052,3.335,4053,3.335,4054,3.335,4055,3.335,4056,3.335,4057,3.335,4058,2.994,4059,3.335,4060,5.118,4061,3.335,4062,5.118,4063,3.335,4064,3.335,4065,5.118,4066,3.335,4067,3.335,4068,5.591,4069,6.228,4070,5.118,4071,6.228,4072,5.118,4073,5.118,4074,6.228,4075,3.335,4076,3.335,4077,5.118,4078,5.118,4079,3.335,4080,3.335,4081,3.335,4082,3.335,4083,3.335,4084,5.118,4085,6.985,4086,3.335,4087,3.335,4088,3.335,4089,3.335,4090,3.335,4091,3.335,4092,3.335,4093,3.335,4094,3.335,4095,4.595,4096,3.335,4097,3.335,4098,3.335,4099,3.335,4100,3.335,4101,3.335,4102,2.994,4103,2.994,4104,4.595]],["title/interfaces/TreeStateModel.html",[0,0.41,1563,3.909]],["body/interfaces/TreeStateModel.html",[0,0.25,1,0.692,2,0.021,3,0.021,4,0.018,8,0.123,9,0.264,14,1.006,21,0.369,22,0.005,25,0.405,29,0.028,30,2.634,41,0.836,44,0.07,45,2.993,46,1.352,47,1.029,48,0.213,53,1.474,58,2.083,75,2.092,94,0.784,95,0.97,102,1.7,113,3.408,114,3.523,116,2.97,117,3.022,118,3.205,119,3.022,120,1.945,121,3.022,122,3.349,130,0.002,131,0.002,135,4.088,138,2.147,142,2.677,143,2.677,170,3.013,179,2.107,180,3.119,181,2.069,183,2.016,203,1.954,215,0.619,232,3.104,236,1.551,256,2.37,261,2.313,295,1.07,312,1.647,331,1.116,385,1.212,444,1.757,474,3.239,531,4.348,550,4.21,560,3.954,565,1.455,571,3.985,591,2.608,646,2.545,712,1.997,721,6.525,725,5.006,728,4.159,731,4.289,734,1.024,737,0.825,742,2.507,743,2.219,745,4.545,746,4.397,748,5.054,754,2.993,755,2.993,756,3.062,757,2.069,761,1.517,765,1.587,769,1.455,952,6.418,956,2.74,958,2.74,959,2.74,979,3.535,1032,1.647,1048,2.112,1061,2.947,1234,1.924,1237,5.168,1299,1.603,1304,3.239,1367,2.9,1368,2.706,1369,2.706,1511,3.136,1563,7.048,1588,2.418,1740,4.289,1743,3.535,1745,2.381,1906,4.296,1911,3.136,1912,3.136,1913,3.214,1914,2.677,1915,1.71,1916,3.136,1917,3.298,1984,3.119,2167,4.593,2482,1.924,2494,3.375,2692,3.535,3066,7.048,3075,3.535,3076,3.375,3078,2.381,3081,7.589,3101,7.67,3210,2.534,3211,2.534,3217,2.74,3525,5.979,3681,4.889,3702,2.74,3816,8.111,4105,3.052,4106,4.777,4107,7.668,4108,7.668,4109,6.66,4110,5.887,4111,4.777,4112,3.052,4113,3.052,4114,3.052,4115,3.052,4116,4.777,4117,3.052,4118,3.052,4119,3.052,4120,3.052,4121,3.052,4122,3.052,4123,3.052,4124,3.052,4125,3.052,4126,3.052,4127,5.887,4128,3.052,4129,3.052,4130,3.052,4131,3.052,4132,3.052,4133,3.052,4134,3.052,4135,3.052,4136,4.777,4137,3.052,4138,3.052,4139,3.052,4140,3.052,4141,3.052,4142,3.052,4143,3.052,4144,4.777,4145,3.052,4146,3.052,4147,3.052,4148,3.052,4149,3.052,4150,3.052,4151,4.777,4152,3.052,4153,3.052,4154,3.052,4155,3.052,4156,3.052]],["title/interfaces/UIStateModel.html",[0,0.41,3021,3.909]],["body/interfaces/UIStateModel.html",[0,0.424,1,0.571,2,0.041,3,0.017,4,0.015,8,0.102,9,0.226,18,1.167,20,0.343,21,0.353,22,0.005,23,2.334,24,1.474,25,0.434,29,0.024,30,2.719,44,0.03,48,0.363,53,2.959,64,0.334,130,0.002,131,0.002,203,1.923,215,0.511,218,1.226,219,1.253,220,1.342,232,3.056,245,3.323,247,4.607,261,2.234,268,0.812,272,3.866,310,2.033,312,1.742,316,2.204,331,0.859,350,1.896,401,2.883,444,1.45,474,1.708,476,3.198,559,2.922,561,2.883,572,1.459,606,1.81,632,1.119,699,2.038,712,1.713,721,4.848,734,0.845,736,1.708,737,1.113,745,1.201,752,1.538,753,1.78,757,1.708,758,2.244,759,1.366,760,1.864,762,1.708,763,1.708,764,1.78,766,2.994,767,0.953,776,5.606,952,6.913,966,1.966,968,1.966,1018,1.78,1019,1.551,1020,2.635,1021,1.78,1028,2.684,1031,3.782,1032,2.221,1033,1.001,1035,0.799,1036,2.329,1037,3.589,1038,3.764,1040,2.329,1042,1.808,1043,2.899,1044,2.329,1045,1.842,1046,1.842,1047,1.775,1048,2.085,1049,1.842,1050,1.842,1051,1.842,1052,2.611,1053,1.154,1055,2.166,1056,2.286,1057,2.684,1058,1.842,1059,1.808,1060,1.842,1061,2.144,1062,1.842,1078,1.376,1096,2.297,1141,1.311,1142,1.311,1144,1.493,1193,4.291,1237,5.251,1242,2.092,1246,3.384,1562,2.092,1852,3.68,1896,1.132,1897,1.132,1916,2.761,2154,1.708,2178,3.68,2301,3.662,2482,5.935,2483,6.65,2484,3.835,3006,5.655,3009,4.419,3021,6.915,3066,7.342,3075,6.855,3076,6.545,3078,1.966,3081,7.805,3101,7.805,3379,7.185,4020,6.325,4058,3.68,4157,2.519,4158,7.426,4159,7.74,4160,7.426,4161,7.426,4162,7.426,4163,6.572,4164,7.426,4165,4.099,4166,8.734,4167,4.099,4168,2.519,4169,5.183,4170,8.587,4171,2.519,4172,2.519,4173,2.519,4174,2.519,4175,2.519,4176,2.519,4177,2.519,4178,2.519,4179,2.519,4180,2.519,4181,4.099,4182,2.519,4183,4.099,4184,2.519,4185,2.519,4186,2.519,4187,4.099,4188,2.519,4189,2.519,4190,2.519,4191,2.519,4192,2.519,4193,2.519,4194,4.099,4195,2.519,4196,2.519,4197,2.519,4198,2.519,4199,5.362,4200,2.519,4201,2.519,4202,2.519,4203,2.519,4204,7.74,4205,8.419,4206,2.519,4207,2.519,4208,2.519,4209,2.519,4210,2.519,4211,2.519,4212,2.519,4213,2.519,4214,2.519,4215,2.519,4216,2.519,4217,4.099,4218,5.183,4219,2.519,4220,2.519,4221,2.519,4222,2.519,4223,2.519,4224,2.519,4225,4.099,4226,2.519,4227,2.519,4228,2.519,4229,2.519,4230,2.519,4231,2.519,4232,2.519,4233,4.099,4234,2.519,4235,2.519,4236,4.099,4237,2.519]],["title/classes/UpdateBimodal.html",[44,0.06,754,2.548]],["body/classes/UpdateBimodal.html",[2,0.037,3,0.037,4,0.032,8,0.217,9,0.399,10,0.771,14,1.133,20,0.356,21,0.396,22,0.005,24,0.811,25,0.412,29,0.06,44,0.12,46,1.467,47,1.052,48,0.376,64,1.155,75,2.052,95,1.846,113,3.351,114,3.522,116,2.21,117,2.249,118,2.249,119,2.249,120,2.069,121,2.249,122,2.249,130,0.003,131,0.003,135,3.914,138,4.088,179,3.187,183,1.859,203,2.291,207,1.217,209,1.079,235,0.564,268,2.036,269,2.128,308,0.954,331,0.905,385,1.365,504,1.22,550,3.666,551,3.375,560,4.336,565,2.565,571,3.187,606,2.628,728,3.444,737,0.667,743,2.122,745,3.444,746,3.517,754,3.673,755,2.735,756,2.799,761,2.675,765,2.799,769,2.565,824,3.811,970,3.889,971,3.811,972,3.532,973,3.889,974,3.889,975,3.889,1032,1.331,1039,2.563,1048,2.766,1061,2.357,1367,1.755,1368,1.755,1369,1.755,1400,1.594,1511,2.866,1905,3.098,1906,4.571,1910,3.015,1911,2.866,1912,2.866,1913,2.938,1914,3.015,1915,3.015,1916,2.866,1917,3.015,4238,5.38,4239,7.225,4240,5.38,4241,5.38]],["title/classes/UpdateBimodalConfig.html",[44,0.06,1912,2.669]],["body/classes/UpdateBimodalConfig.html",[2,0.038,3,0.038,4,0.032,8,0.22,9,0.402,10,0.782,14,1.149,20,0.361,21,0.395,22,0.005,24,0.823,25,0.415,29,0.06,44,0.121,46,1.481,47,1.058,48,0.382,64,1.162,75,1.284,95,1.481,113,3.375,114,3.542,116,2.242,117,2.281,118,2.281,119,2.281,120,2.084,121,2.281,122,2.281,130,0.003,131,0.003,135,3.048,138,3.278,179,4.031,183,2.08,203,2.296,207,1.147,209,1.094,235,0.572,268,2.02,269,2.133,308,0.968,331,0.912,385,1.384,504,1.237,550,3.692,551,2.549,560,4.357,565,2.601,571,3.217,606,2.633,728,3.477,737,0.676,743,2.137,745,3.477,746,3.55,754,2.774,755,2.774,756,2.839,761,2.714,765,2.839,769,2.601,824,3.838,970,3.916,971,3.838,972,3.558,973,3.916,974,3.916,975,3.916,1032,1.35,1039,2.57,1048,2.781,1061,2.379,1367,1.78,1368,1.78,1369,1.78,1400,1.617,1511,2.907,1905,3.142,1906,4.603,1910,3.058,1911,2.907,1912,3.885,1913,2.98,1914,3.058,1915,3.058,1916,2.907,1917,3.058,3807,4.257,4242,7.294,4243,5.457]],["title/classes/UpdateBottomSheetDOI.html",[44,0.06,1897,2.252]],["body/classes/UpdateBottomSheetDOI.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.707,20,0.631,21,0.4,22,0.005,24,0.744,25,0.394,29,0.062,44,0.124,47,0.595,48,0.345,64,1.209,108,1.118,130,0.003,131,0.003,183,1.452,203,2.337,207,1.089,209,0.989,235,0.517,268,1.888,269,2.171,308,0.875,312,1.929,316,1.939,318,2.952,331,1.133,385,1.251,504,1.118,606,2.54,632,2.019,727,1.841,737,1.291,768,1.19,1007,2.026,1023,1.22,1032,1.929,1034,2.073,1035,1.565,1039,2.656,1087,2.098,1091,2.364,1181,2.176,1218,2.176,1346,1.889,1351,2.018,1412,2.045,1501,1.992,1559,2.217,1560,2.217,1561,2.176,1588,2.026,1599,2.26,1869,2.26,1870,2.305,1874,2.305,1875,2.176,1876,4.347,1877,2.26,1878,2.305,1879,2.217,1880,2.305,1881,2.26,1882,2.798,1883,2.305,1884,2.26,1885,2.26,1886,2.26,1887,2.26,1888,3.182,1889,2.26,1890,2.217,1891,2.26,1892,2.26,1893,2.217,1894,2.176,1895,2.26,1896,2.217,1897,3.06,1898,2.26,1899,2.26,1900,2.305,1901,2.26,1902,2.305,1903,2.305,1904,2.305,2115,3.012,4244,6.81,4245,4.933]],["title/classes/UpdateBottomSheetData.html",[44,0.06,1916,2.669]],["body/classes/UpdateBottomSheetData.html",[2,0.038,3,0.038,4,0.033,8,0.22,9,0.403,10,0.784,14,1.152,20,0.362,21,0.396,22,0.005,24,0.825,25,0.415,29,0.06,44,0.121,46,1.483,47,1.059,48,0.383,64,1.163,75,1.287,95,1.483,113,3.378,114,3.545,116,2.247,117,2.286,118,2.286,119,2.286,120,2.086,121,2.286,122,2.286,130,0.003,131,0.003,135,3.053,138,3.282,179,3.222,183,1.871,203,2.296,207,1.148,209,1.097,235,0.573,268,2.021,269,2.133,308,0.97,331,1.066,385,1.387,504,1.24,550,3.282,551,2.555,560,4.36,565,2.607,571,3.222,606,2.634,728,3.482,737,0.905,743,2.14,745,3.482,746,3.555,754,2.78,755,2.78,756,2.845,761,2.72,765,2.845,769,2.607,824,3.842,970,3.921,971,3.842,972,3.562,973,3.921,974,3.921,975,3.921,1032,1.807,1039,2.571,1048,2.784,1061,2.382,1367,1.784,1368,1.784,1369,1.784,1400,1.621,1511,2.913,1905,3.149,1906,4.608,1910,3.064,1911,2.913,1912,2.913,1913,2.986,1914,3.064,1915,3.064,1916,3.891,1917,3.064,2115,3.339,4246,7.304,4247,5.469]],["title/classes/UpdateBottomSheetInfo.html",[44,0.06,1896,2.252]],["body/classes/UpdateBottomSheetInfo.html",[2,0.054,3,0.034,4,0.029,8,0.199,9,0.376,10,0.707,20,0.631,21,0.4,22,0.005,24,0.744,25,0.394,29,0.062,44,0.124,47,0.595,48,0.345,64,1.209,108,1.118,130,0.003,131,0.003,183,1.452,203,2.337,207,1.089,209,0.989,235,0.517,268,1.888,269,2.171,308,0.875,312,1.929,316,1.939,318,2.952,331,1.133,385,1.251,504,1.118,606,2.54,632,1.683,727,1.841,737,1.291,768,1.19,1007,2.026,1023,1.22,1032,1.929,1034,2.686,1035,1.565,1039,2.656,1087,2.098,1091,2.364,1181,2.176,1218,2.176,1346,1.889,1351,2.018,1412,2.045,1501,1.992,1559,2.217,1560,2.217,1561,2.176,1588,2.026,1599,2.26,1869,2.26,1870,2.305,1874,2.305,1875,2.176,1876,4.347,1877,2.26,1878,2.305,1879,2.217,1880,2.305,1881,2.26,1882,2.798,1883,2.305,1884,2.26,1885,2.26,1886,2.26,1887,2.26,1888,3.182,1889,2.26,1890,2.217,1891,2.26,1892,2.26,1893,2.217,1894,2.176,1895,2.26,1896,3.06,1897,2.217,1898,2.26,1899,2.26,1900,2.305,1901,2.26,1902,2.305,1903,2.305,1904,2.305,2115,3.012,4248,6.81,4249,4.933]],["title/classes/UpdateConfig.html",[44,0.06,1561,2.21]],["body/classes/UpdateConfig.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.707,20,0.631,21,0.4,22,0.005,24,0.745,25,0.394,29,0.062,44,0.124,47,0.596,48,0.345,64,1.209,108,1.12,130,0.003,131,0.003,183,1.946,203,2.337,207,1.089,209,0.99,235,0.517,268,1.888,269,2.171,308,0.876,312,1.93,316,1.941,318,2.953,331,1.115,385,1.253,504,1.12,606,2.541,632,1.684,727,2.387,737,1.291,768,1.191,1007,2.028,1023,1.221,1032,1.686,1034,2.074,1035,1.566,1039,2.656,1087,2.1,1091,2.365,1181,2.178,1218,2.178,1346,1.891,1351,2.019,1412,2.047,1501,1.994,1559,2.219,1560,2.219,1561,3.006,1588,2.028,1599,2.262,1869,2.262,1870,2.307,1874,2.307,1875,2.178,1876,4.348,1877,2.262,1878,2.307,1879,2.219,1880,2.307,1881,2.262,1882,2.8,1883,2.307,1884,2.262,1885,2.262,1886,2.262,1887,2.262,1888,3.184,1889,2.262,1890,2.219,1891,2.262,1892,2.262,1893,2.219,1894,2.178,1895,2.262,1896,2.219,1897,2.219,1898,2.262,1899,2.262,1900,2.307,1901,2.262,1902,2.307,1903,2.307,1904,2.307,3807,3.852,4250,6.815,4251,4.938]],["title/classes/UpdateGetFromCache.html",[44,0.06,1898,2.295]],["body/classes/UpdateGetFromCache.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.708,20,0.631,21,0.4,22,0.005,24,1.269,25,0.394,29,0.062,44,0.124,47,0.596,48,0.346,64,1.21,108,1.121,130,0.003,131,0.003,183,1.454,203,2.338,207,1.09,209,0.991,235,0.518,268,1.889,269,2.171,308,0.877,312,1.931,316,1.942,318,2.955,331,1.115,385,1.254,504,1.121,606,2.541,632,1.685,727,1.844,737,1.288,768,1.192,1007,2.03,1023,1.223,1032,1.687,1034,2.076,1035,1.568,1039,2.657,1087,2.102,1091,2.366,1181,2.18,1218,2.18,1346,1.892,1351,2.706,1412,2.048,1501,1.996,1559,2.221,1560,2.221,1561,2.18,1588,2.03,1599,2.264,1869,2.264,1870,2.309,1874,2.309,1875,2.18,1876,4.349,1877,2.264,1878,2.309,1879,2.221,1880,2.309,1881,2.264,1882,2.801,1883,2.309,1884,2.264,1885,2.264,1886,2.264,1887,2.264,1888,3.186,1889,2.264,1890,2.221,1891,2.264,1892,2.264,1893,2.221,1894,2.18,1895,2.264,1896,2.221,1897,2.221,1898,3.124,1899,2.264,1900,2.309,1901,2.264,1902,2.309,1903,2.309,1904,2.309,4252,4.943,4253,6.82,4254,4.943]],["title/classes/UpdateGraphWidth.html",[44,0.06,1910,2.808]],["body/classes/UpdateGraphWidth.html",[2,0.037,3,0.037,4,0.032,8,0.219,9,0.402,10,0.78,14,1.147,20,0.36,21,0.395,22,0.005,24,0.821,25,0.414,29,0.06,44,0.121,46,1.478,47,1.158,48,0.381,64,1.161,75,1.281,95,1.478,113,3.371,114,3.539,116,2.237,117,2.276,118,2.276,119,2.276,120,2.081,121,2.276,122,2.276,130,0.003,131,0.003,135,3.044,138,3.273,179,3.212,183,1.868,203,2.295,207,1.146,209,1.092,235,0.571,268,2.019,269,2.132,308,0.966,331,0.911,385,1.381,504,1.235,550,3.273,551,2.544,560,4.354,565,2.596,571,3.212,606,2.644,728,3.472,737,0.675,743,2.537,745,3.472,746,3.545,754,2.768,755,2.768,756,2.832,761,2.708,765,2.832,769,2.596,824,3.834,970,3.912,971,3.834,972,3.554,973,3.912,974,3.912,975,3.912,1032,1.347,1039,2.569,1048,2.779,1061,2.375,1367,1.776,1368,1.776,1369,1.776,1400,2.158,1511,2.9,1905,3.135,1906,4.598,1910,4.081,1911,2.9,1912,2.9,1913,2.973,1914,3.051,1915,3.051,1916,2.9,1917,3.051,4255,5.445,4256,7.283,4257,5.445]],["title/classes/UpdateLinksData.html",[44,0.06,755,2.548]],["body/classes/UpdateLinksData.html",[2,0.034,3,0.034,4,0.03,8,0.201,9,0.378,10,1.343,14,1.049,20,0.33,21,0.398,22,0.005,24,1.274,25,0.396,29,0.059,44,0.119,46,1.392,47,1.213,48,0.349,64,1.119,75,1.172,95,1.392,113,3.221,114,3.411,116,3.47,117,3.702,118,3.702,119,3.702,120,2.534,121,3.702,122,3.702,130,0.003,131,0.003,135,3.277,138,3.082,179,3.024,183,1.801,203,2.267,207,1.353,209,0.999,235,0.522,268,2.077,269,2.106,308,0.884,331,0.937,385,1.264,504,1.13,550,3.082,551,2.328,560,4.222,565,2.375,571,3.024,606,2.6,728,3.269,737,0.618,741,4.514,743,2.04,745,3.269,746,3.338,754,2.533,755,3.486,756,2.592,761,2.478,765,2.592,769,2.375,824,3.663,970,3.738,971,3.663,972,3.395,973,3.738,974,3.738,975,3.738,1032,1.232,1039,2.522,1048,2.679,1061,2.237,1367,1.625,1368,1.625,1369,1.625,1400,1.476,1511,2.654,1905,2.868,1906,4.393,1910,2.792,1911,2.654,1912,2.654,1913,2.72,1914,2.792,1915,2.792,1916,2.654,1917,4.963,4258,4.982,4259,6.857,4260,4.982,4261,4.982,4262,4.982,4263,4.982,4264,4.982,4265,4.982,4266,4.982]],["title/classes/UpdateLoadingText.html",[44,0.06,1040,2.252]],["body/classes/UpdateLoadingText.html",[2,0.036,3,0.036,4,0.031,8,0.209,9,0.389,10,0.743,20,0.638,21,0.402,22,0.005,25,0.404,29,0.062,44,0.124,48,0.363,64,1.355,130,0.003,131,0.003,203,2.348,207,1.117,209,1.04,235,0.543,268,1.701,269,2.181,272,2.894,308,0.92,310,1.496,312,1.282,316,2.006,331,0.782,350,1.496,382,1.457,504,1.175,559,3.144,561,3.346,606,1.81,632,1.854,737,1.113,758,2.245,759,1.366,766,3.091,767,1.962,768,1.251,1019,1.962,1028,2.33,1029,2.422,1031,4.104,1032,2.221,1033,2.799,1034,2.145,1035,1.644,1036,2.33,1037,3.872,1038,3.411,1039,2.41,1040,3.166,1041,2.375,1042,2.287,1043,2.287,1044,2.33,1045,2.33,1046,2.33,1047,2.245,1048,1.644,1049,2.33,1050,2.33,1051,2.33,1052,2.059,1053,2.375,1054,2.375,1055,2.167,1056,2.287,1057,2.33,1058,2.33,1059,2.287,1060,2.33,1061,2.298,1062,2.33,1065,4.045,4267,7.046,4268,5.185]],["title/classes/UpdateMode.html",[44,0.06,1887,2.295]],["body/classes/UpdateMode.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.708,20,0.655,21,0.4,22,0.005,24,0.745,25,0.394,29,0.062,44,0.124,47,0.596,48,0.346,64,1.21,108,1.121,130,0.003,131,0.003,183,1.454,203,2.338,207,1.09,209,0.991,235,0.518,268,1.889,269,2.171,308,0.877,312,1.931,316,1.942,318,2.955,331,1.115,385,1.254,504,1.121,606,2.541,632,1.685,727,1.844,737,1.288,768,1.192,1007,2.03,1023,1.223,1032,1.687,1034,2.076,1035,1.568,1039,2.657,1087,2.102,1091,2.366,1181,2.18,1218,2.18,1346,1.892,1351,2.021,1412,2.048,1501,1.996,1559,2.221,1560,2.221,1561,2.18,1588,2.03,1599,2.264,1869,2.264,1870,2.309,1874,2.309,1875,2.18,1876,4.349,1877,2.264,1878,2.309,1879,2.221,1880,2.309,1881,2.264,1882,2.801,1883,2.309,1884,2.264,1885,2.264,1886,2.264,1887,3.124,1888,4.266,1889,2.264,1890,2.221,1891,2.264,1892,2.264,1893,2.221,1894,2.18,1895,2.264,1896,2.221,1897,2.221,1898,2.264,1899,2.264,1900,2.309,1901,2.264,1902,2.309,1903,2.309,1904,2.309,4269,4.943,4270,6.82,4271,4.943]],["title/classes/UpdateOmapConfig.html",[44,0.06,1511,2.669]],["body/classes/UpdateOmapConfig.html",[2,0.038,3,0.038,4,0.032,8,0.22,9,0.402,10,0.782,14,1.149,20,0.361,21,0.395,22,0.005,24,0.823,25,0.415,29,0.06,44,0.121,46,1.481,47,1.058,48,0.382,64,1.162,75,1.284,95,1.481,113,3.375,114,3.542,116,2.242,117,2.281,118,2.281,119,2.281,120,2.084,121,2.281,122,2.281,130,0.003,131,0.003,135,3.048,138,3.278,179,3.217,183,2.08,203,2.296,207,1.147,209,1.094,235,0.572,268,2.02,269,2.133,308,0.968,331,0.912,385,1.85,504,1.237,550,3.278,551,2.549,560,4.357,565,2.601,571,3.217,606,2.633,728,4.357,737,0.676,743,2.137,745,3.477,746,3.55,754,2.774,755,2.774,756,2.839,761,2.714,765,2.839,769,2.601,824,3.838,970,3.916,971,3.838,972,3.558,973,3.916,974,3.916,975,3.916,1032,1.35,1039,2.57,1048,2.781,1061,2.379,1367,1.78,1368,1.78,1369,1.78,1400,1.617,1511,3.885,1905,3.142,1906,4.603,1910,3.058,1911,2.907,1912,2.907,1913,2.98,1914,3.058,1915,3.058,1916,2.907,1917,3.058,3807,4.257,4272,7.294,4273,5.457]],["title/classes/UpdatePlaygroundData.html",[44,0.06,1894,2.21]],["body/classes/UpdatePlaygroundData.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.707,20,0.654,21,0.4,22,0.005,24,0.745,25,0.394,29,0.062,44,0.124,47,0.596,48,0.345,64,1.209,108,1.12,130,0.003,131,0.003,183,1.453,203,2.337,207,1.089,209,0.99,235,0.517,268,1.888,269,2.171,308,0.876,312,1.93,316,1.941,318,3.184,331,1.138,385,1.253,504,1.12,606,2.541,632,1.684,727,1.842,737,1.287,768,1.191,1007,2.028,1023,1.221,1032,1.686,1034,2.074,1035,1.566,1039,2.656,1087,2.1,1091,2.365,1181,2.178,1218,2.178,1346,1.891,1351,2.019,1412,2.047,1501,1.994,1559,2.219,1560,2.219,1561,2.178,1588,2.028,1599,2.262,1869,2.262,1870,2.307,1874,2.307,1875,2.178,1876,4.348,1877,2.262,1878,2.307,1879,2.219,1880,2.307,1881,2.262,1882,2.8,1883,2.307,1884,2.262,1885,2.262,1886,2.262,1887,2.262,1888,3.184,1889,2.262,1890,2.219,1891,2.262,1892,2.262,1893,2.219,1894,3.006,1895,2.262,1896,2.219,1897,2.219,1898,2.262,1899,2.262,1900,2.307,1901,2.262,1902,2.307,1903,2.307,1904,2.307,2115,3.015,4274,6.815,4275,4.938]],["title/classes/UpdatePrevSheet.html",[44,0.06,1889,2.295]],["body/classes/UpdatePrevSheet.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.707,20,0.654,21,0.4,22,0.005,24,0.745,25,0.394,29,0.062,44,0.124,47,0.596,48,0.345,64,1.209,108,1.12,130,0.003,131,0.003,183,1.453,203,2.337,207,1.089,209,0.99,235,0.517,268,1.888,269,2.171,308,0.876,312,1.93,316,1.941,318,2.953,331,1.115,385,1.253,504,1.12,606,2.541,632,1.684,727,1.842,737,1.299,768,1.191,1007,2.028,1023,1.221,1032,1.686,1034,2.074,1035,1.566,1039,2.656,1087,2.1,1091,2.365,1181,2.178,1218,2.178,1346,1.891,1351,2.019,1412,2.047,1501,1.994,1559,2.219,1560,2.219,1561,2.178,1588,2.028,1599,2.262,1869,2.262,1870,2.307,1874,2.307,1875,2.178,1876,4.348,1877,2.262,1878,2.307,1879,2.219,1880,2.307,1881,2.262,1882,2.8,1883,2.307,1884,2.262,1885,2.262,1886,2.262,1887,2.262,1888,3.184,1889,3.122,1890,3.063,1891,2.262,1892,2.262,1893,2.219,1894,2.178,1895,2.262,1896,2.219,1897,2.219,1898,2.262,1899,2.262,1900,2.307,1901,2.262,1902,2.307,1903,2.307,1904,2.307,2190,3.489,4276,6.815,4277,4.938]],["title/classes/UpdateReport.html",[44,0.06,1885,2.295]],["body/classes/UpdateReport.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.707,20,0.631,21,0.4,22,0.005,24,0.745,25,0.394,29,0.062,44,0.124,47,0.596,48,0.345,64,1.209,108,1.12,130,0.003,131,0.003,183,1.453,203,2.337,207,1.089,209,0.99,235,0.517,268,1.888,269,2.171,308,0.876,312,2.314,316,1.941,318,2.953,331,1.115,385,1.253,504,1.12,606,2.541,632,1.684,727,1.842,737,1.287,768,1.191,1007,3.456,1023,1.221,1032,1.686,1034,2.074,1035,1.566,1039,2.656,1087,2.1,1091,2.365,1181,2.178,1218,2.178,1346,1.891,1351,2.019,1412,2.047,1501,1.994,1559,2.219,1560,2.219,1561,2.178,1588,2.028,1599,2.262,1869,2.262,1870,2.307,1874,2.307,1875,2.178,1876,4.348,1877,2.262,1878,2.307,1879,2.219,1880,2.307,1881,2.262,1882,2.8,1883,2.307,1884,2.262,1885,3.122,1886,3.122,1887,2.262,1888,3.184,1889,2.262,1890,2.219,1891,2.262,1892,2.262,1893,2.219,1894,2.178,1895,2.262,1896,2.219,1897,2.219,1898,2.262,1899,2.262,1900,2.307,1901,2.262,1902,2.307,1903,2.307,1904,2.307,4278,4.938,4279,6.815,4280,4.938]],["title/classes/UpdateSelectedOrgansBeforeFilter.html",[44,0.06,1901,2.295]],["body/classes/UpdateSelectedOrgansBeforeFilter.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.706,20,0.63,21,0.4,22,0.005,24,0.743,25,0.394,29,0.062,44,0.124,47,0.594,48,0.345,64,1.209,108,1.117,130,0.003,131,0.003,183,1.451,203,2.337,207,1.088,209,0.988,235,0.516,268,1.887,269,2.171,308,0.874,312,1.928,316,1.938,318,2.95,331,1.115,385,1.25,504,1.117,606,2.54,632,1.683,727,1.84,737,1.287,768,1.189,1007,2.024,1023,1.219,1032,1.683,1034,2.072,1035,1.563,1039,2.656,1087,2.096,1091,2.363,1181,2.174,1218,2.174,1346,2.163,1351,2.017,1412,2.649,1501,1.99,1559,2.215,1560,2.215,1561,2.174,1588,2.024,1599,2.258,1869,2.258,1870,2.302,1874,2.302,1875,2.174,1876,4.346,1877,2.258,1878,2.302,1879,2.215,1880,2.302,1881,2.258,1882,3.202,1883,2.302,1884,2.258,1885,2.258,1886,2.258,1887,2.258,1888,3.18,1889,2.258,1890,2.215,1891,2.258,1892,2.258,1893,2.215,1894,2.174,1895,2.258,1896,2.215,1897,2.215,1898,2.258,1899,2.258,1900,2.302,1901,3.118,1902,3.18,1903,3.18,1904,3.928,4281,4.928,4282,6.806,4283,4.928]],["title/classes/UpdateSheet.html",[44,0.06,1891,2.295]],["body/classes/UpdateSheet.html",[2,0.047,3,0.034,4,0.029,8,0.199,9,0.376,10,0.708,20,0.631,21,0.4,22,0.005,24,0.745,25,0.394,29,0.062,44,0.124,47,0.596,48,0.346,64,1.21,108,1.121,130,0.003,131,0.003,183,1.454,203,2.338,207,1.09,209,0.991,235,0.518,268,1.889,269,2.171,308,0.877,312,1.931,316,1.942,318,2.955,331,1.115,385,1.254,504,1.121,606,2.541,632,1.685,727,1.844,737,1.306,768,1.192,1007,2.03,1023,1.223,1032,1.687,1034,2.076,1035,1.568,1039,2.657,1087,2.102,1091,2.366,1181,2.18,1218,2.18,1346,1.892,1351,2.021,1412,2.048,1501,1.996,1559,2.221,1560,2.221,1561,2.18,1588,2.03,1599,2.264,1869,2.264,1870,2.309,1874,2.309,1875,2.18,1876,4.349,1877,2.264,1878,2.309,1879,2.221,1880,2.309,1881,2.264,1882,2.801,1883,2.309,1884,2.264,1885,2.264,1886,2.264,1887,2.264,1888,3.186,1889,2.264,1890,2.221,1891,3.124,1892,2.264,1893,2.221,1894,2.18,1895,2.264,1896,2.221,1897,2.221,1898,2.264,1899,2.264,1900,2.309,1901,2.264,1902,2.309,1903,2.309,1904,2.309,2190,3.493,4284,6.82,4285,4.943]],["title/classes/UpdateVegaSpec.html",[44,0.06,756,2.607]],["body/classes/UpdateVegaSpec.html",[2,0.038,3,0.038,4,0.033,8,0.221,9,0.403,10,0.784,14,1.153,20,0.362,21,0.396,22,0.005,24,0.826,25,0.415,29,0.06,44,0.121,46,1.484,47,1.059,48,0.383,64,1.163,75,1.288,95,1.484,113,3.38,114,3.547,116,2.249,117,2.288,118,2.288,119,2.288,120,2.087,121,2.288,122,2.288,130,0.003,131,0.003,135,3.055,138,3.285,179,3.224,183,1.872,203,2.297,207,1.149,209,1.098,235,0.574,268,2.021,269,2.133,308,0.971,331,0.913,385,1.389,504,1.241,550,3.285,551,2.558,560,4.362,565,2.61,571,3.629,606,2.634,728,3.485,737,0.679,743,2.141,745,3.485,746,4.581,754,2.783,755,2.783,756,3.802,761,2.723,765,2.848,769,2.61,824,3.844,970,3.923,971,3.844,972,3.563,973,3.923,974,3.923,975,3.923,1032,1.354,1039,2.572,1048,2.785,1061,2.384,1367,1.786,1368,1.786,1369,1.786,1400,1.622,1511,2.916,1905,3.152,1906,4.611,1910,3.068,1911,2.916,1912,2.916,1913,2.989,1914,3.068,1915,3.068,1916,2.916,1917,3.068,4286,5.475,4287,7.31,4288,5.475]],["title/classes/UpdateVegaView.html",[44,0.06,1911,2.669]],["body/classes/UpdateVegaView.html",[2,0.038,3,0.038,4,0.033,8,0.221,9,0.403,10,0.784,14,1.153,20,0.362,21,0.396,22,0.005,24,0.826,25,0.415,29,0.06,44,0.121,46,1.484,47,1.059,48,0.383,64,1.163,75,1.288,95,1.484,113,3.38,114,3.547,116,2.249,117,2.288,118,2.288,119,2.288,120,2.087,121,2.288,122,2.288,130,0.003,131,0.003,135,3.055,138,3.285,179,3.224,183,1.872,203,2.297,207,1.149,209,1.098,235,0.574,268,2.021,269,2.133,308,0.971,331,0.913,385,1.389,504,1.241,550,3.285,551,2.558,560,4.362,565,2.61,571,3.629,606,2.634,728,3.485,737,0.679,743,2.141,745,4.487,746,3.558,754,2.783,755,2.783,756,2.848,761,2.723,765,2.848,769,2.61,824,3.844,970,3.923,971,3.844,972,3.563,973,3.923,974,3.923,975,3.923,1032,1.354,1039,2.572,1048,2.785,1061,2.384,1367,1.786,1368,1.786,1369,1.786,1400,1.622,1511,2.916,1905,3.152,1906,4.611,1910,3.068,1911,3.894,1912,2.916,1913,2.989,1914,3.068,1915,3.068,1916,2.916,1917,3.068,4289,5.475,4290,7.31,4291,5.475]],["title/components/UploadComponent.html",[250,1.355,410,1.99]],["body/components/UploadComponent.html",[2,0.033,3,0.021,4,0.043,8,0.124,9,0.265,10,1.038,11,2.003,20,0.479,21,0.317,22,0.005,24,0.462,25,0.298,29,0.018,30,1.979,44,0.037,48,0.538,53,0.946,58,1.847,64,0.406,95,1.884,102,2.579,108,1.339,130,0.002,131,0.002,141,2.077,147,2.385,167,1.718,181,3.138,184,0.678,188,0.749,202,1.707,207,1.192,209,1.339,211,2.307,215,0.623,219,3.821,232,2.579,235,0.321,236,3.395,245,2.385,250,1.805,251,1.218,252,1.97,253,3.029,254,1.282,255,1.282,256,1.091,258,2.334,259,3.4,260,0.84,261,2.652,262,4.05,264,1.937,266,1.937,268,1.522,282,4.942,287,1.218,298,2.308,305,5.509,308,0.544,310,0.885,316,1.366,318,1.161,329,1.765,331,1.059,339,1.872,341,2.004,342,1.937,343,1.282,344,2.791,345,1.282,346,1.282,347,1.218,348,1.282,349,1.218,350,0.885,351,1.282,352,1.218,353,1.282,354,1.198,355,1.282,356,1.218,357,1.091,358,1.282,359,1.218,360,1.282,361,1.218,362,1.282,363,1.218,364,2.004,365,1.218,366,1.282,367,1.218,368,1.282,369,1.198,370,1.282,371,1.179,372,1.282,373,1.218,374,1.282,375,1.218,376,1.282,377,1.218,378,1.282,379,1.239,380,1.282,381,1.218,382,0.862,383,1.282,384,1.218,385,1.838,386,1.282,387,1.218,388,2.527,389,1.282,390,1.218,391,1.282,392,1.239,393,1.282,394,1.218,395,1.282,396,1.239,397,1.282,398,1.218,399,1.282,400,1.218,401,1.142,402,1.282,403,1.218,404,1.198,405,1.282,406,1.26,407,1.282,408,1.218,409,1.282,410,2.653,411,1.218,412,1.239,413,1.161,414,1.282,415,1.282,531,2.002,559,2.331,572,2.857,590,3.741,591,3.957,607,2.079,635,2.392,654,3.741,698,4.172,699,3.821,724,1.044,737,1.15,742,1.5,743,1.737,766,1,768,0.74,932,5.546,989,3.982,1039,0.798,1074,5.995,1075,7.843,1077,5.302,1078,1.674,1080,4.305,1081,3.982,1087,3.716,1090,3.024,1094,2.753,1100,3.4,1104,4.305,1107,3.982,1109,2.908,1110,2.787,1111,2.568,1112,2.61,1115,2.118,1116,3.002,1117,1.905,1125,4.305,1128,3.982,1136,1.405,1137,2.687,1138,3.982,1139,1.718,1145,2.753,1171,2.753,1179,4.305,1180,5.302,1181,2.605,1185,2.753,1186,2.753,1187,2.753,1191,2.753,1195,3.131,1198,2.547,1199,2.547,1200,2.547,1201,2.547,1202,2.269,1203,2.547,1204,2.547,1208,2.547,1209,2.753,1210,2.753,1211,2.753,1219,4.305,1220,3.982,1221,3.741,1222,4.305,1223,4.305,1224,5.546,1225,3.982,1226,3.982,1227,3.549,1228,4.305,1229,5.995,1230,4.305,1231,5.995,1232,3.982,1233,4.305,1234,3.024,1235,4.305,1236,4.305,1237,2.841,1238,4.305,1239,3.982,1240,3.388,1241,4.305,1242,3.982,1243,3.549,1244,3.982,1245,3.741,1246,4.732,1247,4.305,1248,3.002,1249,4.305,1250,4.305,1251,5.995,1254,2.753,1256,4.384,1257,2.841,1259,1.934,1260,2.002,1265,3.131,1266,5.302,1267,3.982,1269,2.392,1270,3.724,1271,3.724,1272,4.305,1273,2.392,1274,3.474,1275,4.57,1276,5.334,1277,1.872,1278,1.817,1279,4.172,1280,4.527,1281,2.167,1282,2.167,1283,2.167,1284,4.176,1285,4.305,1286,5.995,1287,3.957,1288,2.167,1289,2.753,1290,2.753,1291,3.821,1292,1.872,1293,2.167,1294,2.547,1295,4.305,1296,4.003,1297,4.305,1298,4.732,1299,2.432,1300,4.078,1301,4.425,1302,4.36,1303,4.003,1304,4.003,1305,2.753,1306,4.904,1308,3.956,1309,1.559,1314,3.309,1315,1.872,1317,1.765,1320,4.37,1321,2.392,1322,2.269,1323,2.547,1324,2.547,1325,2.753,1326,2.547,1328,2.753,1329,2.753,1330,2.753,1331,2.753,1411,2.879,1638,2.547,1843,2.392,1854,1.817,2006,3.724,2039,3.741,2040,2.547,2041,2.392,2042,4.003,2044,2.753,2219,5.302,2220,4.305,2270,2.547,2275,2.079,2337,2.079,2472,2.269,2722,2.753,3421,5.546,3439,2.753,3483,2.753,3484,5.302,3572,2.753,4292,3.067,4293,6.678,4294,7.247,4295,4.796,4296,3.067,4297,3.067,4298,3.067,4299,3.067,4300,3.067,4301,3.067,4302,3.067,4303,6.678,4304,3.067,4305,3.067,4306,4.796,4307,3.067,4308,3.067,4309,3.067,4310,3.067,4311,3.067,4312,3.067,4313,3.067,4314,4.796,4315,3.067,4316,3.067,4317,3.067,4318,3.067,4319,3.067,4320,3.067]],["title/interfaces/UploadForm.html",[0,0.41,1411,1.99]],["body/interfaces/UploadForm.html",[0,0.851,1,0.977,2,0.03,3,0.043,4,0.026,8,0.174,9,0.342,10,1.252,11,1.564,13,1.312,14,1.304,15,2.256,16,2.037,18,2.67,20,0.718,21,0.351,22,0.005,24,1.492,26,1.835,27,2.286,29,0.062,39,1.835,41,1.18,46,1.608,47,1.209,48,0.63,50,1.632,75,1.014,88,1.33,94,1.107,95,1.703,97,2.037,109,1.367,120,1.093,130,0.003,131,0.003,146,1.386,174,1.511,175,1.489,176,1.489,177,1.489,178,1.489,183,1.32,235,0.649,260,1.985,261,1.121,295,2.171,331,0.931,468,1.581,623,1.712,632,1.564,663,2.46,706,1.712,724,2.468,727,1.674,734,2.078,737,0.898,742,1.937,743,1.611,759,1.136,963,1.581,965,1.468,1023,2.161,1091,1.211,1109,1.631,1110,3.606,1111,3.541,1112,3.598,1115,2.771,1116,3.765,1117,3.333,1188,1.684,1189,1.557,1248,1.684,1299,2.432,1333,1.771,1334,2.588,1335,2.544,1336,1.741,1337,1.684,1338,1.771,1339,1.771,1340,1.771,1341,1.771,1342,1.771,1343,1.771,1344,2.501,1345,1.741,1346,1.718,1347,1.771,1348,1.801,1349,1.771,1350,1.741,1351,1.277,1352,1.771,1353,1.801,1354,1.801,1355,1.801,1356,1.801,1357,1.801,1358,1.801,1359,1.801,1360,1.801,1361,1.801,1362,1.771,1363,1.771,1364,2.588,1365,2.588,1366,1.801,1367,1.406,1368,1.406,1369,1.406,1370,1.771,1371,1.741,1372,1.771,1373,2.544,1374,2.588,1375,2.588,1376,1.771,1377,1.801,1378,1.657,1379,1.801,1380,1.801,1381,1.801,1382,1.801,1383,1.801,1384,1.712,1385,2.977,1386,1.771,1387,1.801,1388,1.801,1389,1.712,1390,1.801,1391,1.801,1392,2.544,1393,1.801,1394,2.544,1395,1.741,1396,2.544,1397,1.801,1398,1.801,1399,1.741,1400,1.835,1401,1.771,1402,2.544,1403,1.801,1404,1.801,1405,1.801,1406,1.801,1407,1.801,1408,1.801,1409,1.801,1410,1.771,1411,2.46,1412,1.294,1413,1.801]],["title/modules/UploadModule.html",[184,1.108,3592,3.708]],["body/modules/UploadModule.html",[2,0.046,3,0.046,4,0.049,22,0.005,25,0.527,29,0.04,44,0.08,130,0.004,131,0.004,184,1.479,186,2.38,187,2.531,188,1.633,189,3.425,190,2.531,191,2.453,192,3.372,198,3.147,199,2.491,200,2.38,214,3.051,215,1.357,243,3.098,278,3.255,401,2.491,410,4.144,424,6.482,456,4.725,457,5.217,1139,3.747,1419,6.261,1420,6.062,1422,3.303,1423,2.613,1425,5.429,1426,4.366,1427,4.135,1428,5.429,1429,4.366,1430,5.429,1431,5.244,1432,4.948,1433,4.533,1434,4.948,1435,3.885,1436,3.124,1437,7.466,1438,6.003,2283,6.003,3592,7.751,4321,6.003,4322,6.687,4323,6.003,4324,6.003,4325,6.687]],["title/injectables/VegaService.html",[712,2.094,1512,3.909]],["body/injectables/VegaService.html",[2,0.026,3,0.026,4,0.023,8,0.153,9,0.312,10,1.197,14,0.8,20,0.446,21,0.358,22,0.005,25,0.507,29,0.023,30,2.814,41,2.184,43,1.676,44,0.045,45,3.354,47,0.458,48,0.636,53,1.173,54,1.589,58,2.109,59,1.438,60,1.438,64,0.748,108,1.281,130,0.003,131,0.003,179,2.491,183,1.591,202,2.01,207,1.291,209,1.676,211,2.755,215,0.772,218,1.85,219,1.89,220,2.025,230,4.854,232,2.01,236,1.932,245,1.535,256,3.233,268,1.881,269,1.89,295,1.98,298,2.207,323,4.355,331,1.008,444,2.188,498,2.577,534,4.725,550,2.538,551,3.487,559,1.222,570,3.991,571,4.077,572,1.353,575,3.991,627,3.156,630,4.401,632,1.219,646,4.736,695,4.691,699,1.89,712,2.361,713,5.635,714,2.13,716,6.052,720,2.686,721,5.931,725,5.65,727,2.658,728,2.693,729,4.407,734,2.504,737,1.163,739,5.071,741,2.188,745,4.654,746,4.499,748,3.562,752,2.321,753,2.686,755,1.932,757,2.577,758,1.646,759,1.488,760,2.813,762,2.577,763,2.577,764,2.686,766,2.434,767,1.438,768,0.917,769,1.812,774,2.397,776,5.65,777,2.686,824,1.776,914,2.686,948,6.115,961,2.686,962,3.156,963,2.473,964,2.965,965,1.294,966,2.965,967,3.156,968,2.965,969,3.156,970,1.812,971,1.776,972,1.646,973,1.812,974,1.812,975,1.812,979,4.18,987,3.412,988,3.156,1032,1.397,1034,1.719,1035,1.206,1037,1.589,1052,1.51,1055,1.589,1056,1.676,1078,4.563,1096,4.469,1141,1.977,1142,1.977,1144,2.252,1193,4.401,1195,3.688,1274,1.977,1309,1.932,1512,4.407,1578,2.686,1579,3.412,1588,1.561,1609,2.813,1610,3.412,1611,3.412,1612,3.412,1632,3.156,1633,3.156,1634,3.156,1635,3.156,1636,3.156,1723,3.252,1730,2.813,1731,3.412,1882,2.769,1911,2.025,2457,3.412,2490,5.059,2497,3.991,2498,2.813,2645,5.071,2881,6.052,2908,4.18,3324,3.412,3640,4.691,3651,5.071,4034,6.7,4039,3.412,4095,3.412,4102,3.412,4103,3.412,4104,5.071,4326,3.801,4327,5.649,4328,5.649,4329,5.649,4330,5.649,4331,5.649,4332,5.649,4333,5.649,4334,3.801,4335,5.649,4336,5.649,4337,3.801,4338,5.649,4339,5.649,4340,3.801,4341,5.649,4342,6.741,4343,3.801,4344,5.649,4345,5.649,4346,5.649,4347,3.801,4348,5.649,4349,3.801,4350,3.801,4351,5.649,4352,3.801,4353,3.801,4354,3.801,4355,3.801,4356,3.801,4357,3.801,4358,3.801,4359,3.801,4360,3.801,4361,3.801,4362,3.801,4363,3.801,4364,3.801,4365,3.801,4366,3.801,4367,3.801,4368,3.801,4369,3.801,4370,3.801,4371,3.801,4372,3.801,4373,3.801,4374,3.801,4375,6.741,4376,3.801,4377,3.801,4378,3.801,4379,3.801,4380,3.801,4381,5.649,4382,3.801,4383,3.801,4384,3.801,4385,3.801,4386,3.801,4387,3.801,4388,3.801,4389,3.801,4390,3.801,4391,3.801,4392,3.801,4393,3.801,4394,3.801,4395,3.801,4396,3.801,4397,3.801]],["title/interfaces/Version.html",[0,0.41,1023,1.239]],["body/interfaces/Version.html",[0,0.853,1,1.007,2,0.031,3,0.044,4,0.026,8,0.179,9,0.349,11,1.59,13,1.352,14,1.332,15,2.287,16,2.071,18,2.69,20,0.718,21,0.306,22,0.005,24,1.5,26,1.875,27,2.317,29,0.062,39,1.875,41,1.216,46,1.63,47,1.214,48,0.635,50,1.667,75,1.045,88,1.37,94,1.141,95,1.284,97,2.071,109,1.409,120,1.126,130,0.003,131,0.003,146,1.428,174,1.557,175,1.534,176,1.534,177,1.534,178,1.534,183,1.349,235,0.663,260,2.018,261,1.155,295,2.218,331,0.942,468,1.629,623,1.764,632,1.59,663,2.513,706,1.764,724,2.509,727,1.71,734,2.123,737,0.913,742,1.979,743,1.646,759,1.17,963,1.629,965,1.512,1023,2.246,1091,1.248,1109,1.681,1110,3.393,1111,3.264,1112,3.317,1115,2.799,1116,3.448,1117,2.513,1188,1.735,1189,1.604,1248,1.735,1299,2.961,1333,1.824,1334,2.644,1335,2.599,1336,1.794,1337,1.735,1338,1.824,1339,1.824,1340,1.824,1341,1.824,1342,1.824,1343,1.824,1344,2.555,1345,1.794,1346,1.755,1347,1.824,1348,1.856,1349,1.824,1350,1.794,1351,1.316,1352,1.824,1353,1.856,1354,1.856,1355,1.856,1356,1.856,1357,1.856,1358,1.856,1359,1.856,1360,1.856,1361,1.856,1362,1.824,1363,1.824,1364,2.644,1365,2.644,1366,1.856,1367,1.448,1368,1.448,1369,1.448,1370,1.824,1371,1.794,1372,1.824,1373,2.599,1374,2.644,1375,2.644,1376,1.824,1377,1.856,1378,1.708,1379,1.856,1380,1.856,1381,1.856,1382,1.856,1383,1.856,1384,1.764,1385,3.027,1386,1.824,1387,1.856,1388,1.856,1389,1.764,1390,1.856,1391,1.856,1392,2.599,1393,3.356,1394,2.599,1395,1.794,1396,2.599,1397,1.856,1398,1.856,1399,1.794,1400,1.875,1401,1.824,1402,2.599,1403,1.856,1404,1.856,1405,1.856,1406,1.856,1407,1.856,1408,1.856,1409,1.856,1410,1.824,1411,1.764,1412,1.334,1413,1.856]],["title/interfaces/VersionDetail.html",[0,0.41,1373,2.058]],["body/interfaces/VersionDetail.html",[0,0.848,1,0.949,2,0.029,3,0.042,4,0.025,8,0.169,9,0.334,10,1.43,11,1.538,13,1.273,14,1.276,15,2.225,16,2.003,18,2.651,20,0.717,21,0.369,22,0.005,24,1.485,26,1.796,27,2.255,29,0.062,39,1.796,41,1.146,46,1.586,47,1.235,48,0.624,50,1.597,75,0.984,88,1.291,94,2.007,95,1.23,97,2.003,109,1.327,120,1.061,130,0.003,131,0.003,146,1.346,174,1.467,175,1.445,176,1.445,177,1.445,178,1.445,183,1.292,235,0.869,260,1.952,261,1.088,295,2.125,331,0.92,468,1.535,623,1.662,632,1.538,663,2.407,706,1.662,724,2.426,727,1.638,734,2.034,737,0.883,742,1.896,743,1.577,759,1.102,963,1.535,965,1.424,1023,2.139,1091,1.176,1109,1.583,1110,3.58,1111,3.512,1112,3.57,1115,2.743,1116,3.379,1117,2.407,1188,1.635,1189,1.511,1248,1.635,1299,2.392,1333,1.719,1334,2.533,1335,2.49,1336,1.69,1337,1.635,1338,1.719,1339,1.719,1340,1.719,1341,1.719,1342,1.719,1343,1.719,1344,2.448,1345,1.69,1346,1.681,1347,1.719,1348,1.749,1349,1.719,1350,1.69,1351,1.24,1352,1.719,1353,1.749,1354,1.749,1355,1.749,1356,1.749,1357,1.749,1358,1.749,1359,1.749,1360,1.749,1361,1.749,1362,1.719,1363,1.719,1364,2.533,1365,2.533,1366,1.749,1367,1.365,1368,1.365,1369,1.365,1370,1.719,1371,1.69,1372,1.719,1373,2.928,1374,3.466,1375,3.466,1376,3.21,1377,3.266,1378,1.609,1379,1.749,1380,1.749,1381,1.749,1382,1.749,1383,1.749,1384,1.662,1385,2.928,1386,1.719,1387,1.749,1388,1.749,1389,1.662,1390,1.749,1391,1.749,1392,2.49,1393,1.749,1394,2.49,1395,1.69,1396,2.49,1397,1.749,1398,1.749,1399,1.69,1400,1.796,1401,1.719,1402,2.49,1403,1.749,1404,1.749,1405,1.749,1406,1.749,1407,1.749,1408,1.749,1409,1.749,1410,1.719,1411,1.662,1412,1.256,1413,1.749]],["title/components/VisControlsComponent.html",[250,1.355,411,1.99]],["body/components/VisControlsComponent.html",[2,0.022,3,0.022,4,0.029,8,0.128,9,0.271,10,0.704,11,1.902,14,1.431,20,0.325,21,0.32,22,0.005,25,0.393,29,0.029,30,1.457,41,1.346,44,0.038,46,1.705,48,0.475,53,2.507,58,2.125,59,2.571,60,2.571,64,0.419,98,1.323,102,2.771,108,0.718,130,0.002,131,0.002,181,1.371,183,1.943,188,0.773,202,1.749,207,1.34,209,0.986,211,3.045,215,0.643,218,1.541,219,1.574,220,1.686,247,1.823,250,1.629,251,1.258,252,2.019,253,1.323,254,1.323,255,1.323,256,2.618,260,0.867,261,2.661,262,4.063,264,1.986,266,1.986,268,0.974,287,1.258,298,3.444,300,5.693,310,0.913,323,3.71,339,1.933,341,2.055,342,2.434,343,1.323,344,2.839,345,1.323,346,1.323,347,1.258,348,1.323,349,1.258,350,0.913,351,1.323,352,1.258,353,1.323,354,1.237,355,1.323,356,1.258,357,1.127,358,1.323,359,1.258,360,1.323,361,1.258,362,1.323,363,1.258,364,2.055,365,1.258,366,1.323,367,1.258,368,1.323,369,1.237,370,1.323,371,1.217,372,1.323,373,1.258,374,1.323,375,1.258,376,1.323,377,1.258,378,1.323,379,1.279,380,1.323,381,1.258,382,0.89,383,1.323,384,1.258,385,0.803,386,1.323,387,1.258,388,1.86,389,1.323,390,1.258,391,1.323,392,1.279,393,1.323,394,1.258,395,1.323,396,1.279,397,1.323,398,1.258,399,1.323,400,1.258,401,1.179,402,1.323,403,1.258,404,1.237,405,1.323,406,1.301,407,1.323,408,1.258,409,1.323,410,1.258,411,2.699,412,3.56,413,3.336,414,1.323,415,1.323,550,3.499,559,1.018,560,3.239,561,3.129,565,2.344,572,1.127,577,4.436,601,3.835,641,3.638,672,2.629,678,4.801,698,3.911,699,2.997,727,1.629,734,1.65,737,0.747,742,2.698,743,2.185,766,2.539,767,1.198,768,0.764,787,6.99,1032,0.783,1039,0.824,1052,2.699,1078,3.71,1088,2.499,1090,3.1,1096,4.122,1100,3.47,1115,1.004,1136,3.37,1137,2.755,1141,1.647,1142,1.647,1144,1.875,1193,2.067,1246,5.083,1256,4.436,1257,4.358,1259,1.997,1260,2.067,1265,2.067,1269,2.47,1270,4.285,1271,4.285,1274,3.135,1275,3.1,1276,3.68,1279,5.318,1280,5.508,1281,2.237,1282,2.237,1283,2.237,1284,3.534,1287,5.102,1288,2.237,1291,2.445,1299,1.062,1300,3.002,1301,3.002,1302,3.21,1303,2.146,1304,2.146,1308,2.912,1309,3.454,1313,2.47,1315,4.149,1400,0.938,1450,2.842,1501,2.434,1582,7.162,1588,3.337,1667,1.933,1668,2.237,1723,3.47,1743,3.638,1854,4.025,1856,2.067,1992,2.629,2036,5.005,2452,7.913,2461,2.47,2462,3.835,2463,3.638,2464,2.47,2465,2.47,2472,7.24,2485,6.094,2487,4.258,2666,2.629,2695,4.083,2738,2.629,2817,2.842,2933,2.842,3076,5.198,3213,2.842,3214,5.411,3215,4.414,3220,2.842,3222,2.842,3425,2.842,3575,2.842,3778,4.414,4199,6.604,4398,9.666,4399,6.794,4400,6.794,4401,6.794,4402,6.794,4403,6.794,4404,6.794,4405,4.916,4406,6.794,4407,6.794,4408,6.794,4409,6.027,4410,3.166,4411,3.166,4412,3.166,4413,3.166,4414,3.166,4415,3.166,4416,3.166,4417,3.166,4418,3.166,4419,3.166,4420,3.166,4421,4.916,4422,3.166,4423,3.166,4424,3.166,4425,3.166,4426,3.166,4427,8.624,4428,8.624,4429,6.794,4430,3.166,4431,3.166,4432,6.027,4433,7.786,4434,6.794,4435,7.356,4436,3.166,4437,3.166,4438,3.166,4439,3.166,4440,3.166,4441,3.166,4442,3.166,4443,3.166,4444,3.166,4445,3.166,4446,3.166,4447,3.166,4448,3.166,4449,3.166,4450,3.166,4451,4.916,4452,4.916,4453,4.916,4454,3.166,4455,4.916,4456,3.166,4457,3.166,4458,3.166,4459,4.916,4460,3.166,4461,4.916,4462,3.166,4463,4.916,4464,3.166,4465,4.916,4466,3.166,4467,3.166,4468,4.916,4469,7.786,4470,6.027,4471,6.027,4472,4.916,4473,6.027]],["title/miscellaneous/enumerations.html",[4474,2.718,4475,5.422]],["body/miscellaneous/enumerations.html",[4,0.038,5,3.318,8,0.257,22,0.005,26,2.392,40,3.698,41,2.426,42,3.398,43,2.813,130,0.004,131,0.004,174,2.236,175,2.204,176,2.204,177,2.204,178,2.204,235,1.131,295,2.831,312,1.997,316,2.299,318,3.055,357,2.873,382,2.269,413,3.055,561,3.008,630,5.271,762,5.473,763,5.473,766,3.037,965,2.749,1033,3.207,1136,3.698,1141,4.199,1142,4.199,1333,2.62,1335,3.316,1336,2.576,1337,2.493,1338,2.62,1339,2.62,1340,2.62,1341,2.62,1342,2.62,1343,2.62,1344,3.261,1400,2.392,1847,4.977,1850,4.72,2007,5.473,2151,4.977,2154,6.005,2155,6.259,2337,5.473,2481,4.72,2487,5.704,2492,5.704,2493,5.974,3055,5.297,3057,5.974,3058,5.974,3059,5.974,3060,5.974,3062,5.297,4474,4.165,4475,5.727,4476,8.073,4477,8.073,4478,8.073,4479,5.727,4480,6.379]],["title/miscellaneous/functions.html",[1725,4.469,4474,2.718]],["body/miscellaneous/functions.html",[8,0.338,10,1.441,18,2.391,20,0.59,21,0.383,22,0.005,24,1.132,47,1.118,48,0.704,53,3.039,94,1.464,98,2.382,100,3.604,120,2.129,130,0.003,131,0.003,142,4.704,143,4.999,144,5.137,146,2.415,201,4.447,206,5.857,209,2.017,210,4.028,211,3.403,216,4.734,230,4.872,231,4.734,235,0.972,239,4.734,242,6.235,245,2.302,308,1.645,312,1.41,331,1.106,388,3.177,431,5.126,432,5.118,468,2.754,478,5.118,479,5.118,490,6.74,724,3.157,734,2.994,737,1.18,741,3.282,743,1.483,770,6.74,771,6.74,772,6.74,1061,1.859,1078,4.099,1096,4.207,1486,6.861,1723,4.322,1725,4.218,2308,4.028,2509,4.447,2692,6.603,3129,5.118,3130,6.74,3134,5.118,3135,6.235,3140,5.118,3258,7.906,3720,6.74,4068,5.118,4474,3.722,4481,5.118,4482,7.508,4483,8.01,4484,7.508,4485,6.74,4486,5.7,4487,7.508,4488,5.7,4489,7.508,4490,5.7,4491,5.118,4492,5.7,4493,5.118,4494,5.7,4495,7.508,4496,9.85,4497,7.508,4498,9.85,4499,8.923,4500,5.7,4501,5.7,4502,5.7,4503,5.7,4504,5.7,4505,5.7,4506,5.7,4507,5.7,4508,5.7,4509,7.508,4510,7.508,4511,5.7]],["title/index.html",[8,0.202,2621,4.161]],["body/index.html",[1,0.777,22,0.005,74,3.755,130,0.002,131,0.002,141,1.484,184,0.758,185,6.238,186,1.22,187,1.297,188,0.837,189,1.297,190,1.297,191,1.257,192,1.277,193,3.077,194,3.077,195,3.867,196,4.475,197,4.475,198,1.977,199,1.277,200,1.22,244,5.678,245,3.246,251,3.32,252,1.408,287,3.32,347,3.32,349,3.32,352,3.32,354,3.266,356,3.32,359,3.32,361,3.32,363,3.865,365,3.32,367,3.32,369,3.266,371,3.214,373,3.32,375,3.32,377,3.32,379,3.376,381,3.32,384,3.32,387,3.32,390,3.32,392,3.376,394,3.32,396,3.376,398,3.32,400,3.32,403,3.32,408,3.32,410,3.32,411,3.32,416,7.929,417,3.077,418,3.077,419,3.077,420,3.077,421,3.077,422,4.686,423,6.664,424,5.764,425,5.841,426,6.664,427,4.686,428,5.947,429,7.61,430,5.947,431,3.867,493,2.674,504,0.777,714,1.92,1414,6.871,1415,3.077,1416,3.077,1417,3.077,1418,3.077,1419,5.679,1420,5.591,1672,7.149,1673,3.077,1674,3.077,1675,3.077,1676,3.077,1677,5.947,1678,5.947,1679,6.238,1680,5.947,1690,3.077,1691,3.077,1692,3.077,1858,6.664,1859,3.077,1861,3.077,1862,3.077,2045,3.077,2046,3.077,2047,3.077,2048,3.077,2049,5.947,2083,3.077,2084,3.077,2085,3.077,2142,5.947,2143,3.077,2144,3.077,2145,3.077,2184,5.947,2185,3.077,2186,3.077,2187,3.077,2216,5.259,2217,6.674,2218,5.259,2277,3.077,2278,3.077,2279,3.077,2413,3.077,2414,3.077,2415,3.077,2475,3.077,2476,3.077,2477,3.077,2621,2.846,2769,3.077,2770,3.077,2771,3.077,2772,3.077,2773,5.841,2823,6.664,2824,3.077,2825,3.077,2826,3.077,2896,5.947,2897,3.077,2898,3.077,2899,3.077,2940,3.077,2941,3.077,2942,3.077,2943,3.077,2944,5.242,2981,2.674,3002,3.077,3025,5.95,3026,3.077,3027,3.077,3028,3.077,3186,5.947,3187,3.077,3188,3.077,3189,3.077,3192,6.871,3193,3.077,3194,3.077,3195,3.077,3196,3.077,3197,5.947,3232,3.077,3233,3.077,3234,3.077,3249,2.846,3441,3.077,3442,3.077,3443,3.077,3586,6.871,3587,3.077,3588,3.077,3589,3.077,3590,3.077,3591,5.905,3592,6.871,3604,6.871,3605,3.077,3606,3.077,3607,3.077,3618,3.077,3619,3.077,3621,3.077,3660,3.077,3661,3.077,3662,3.077,3782,3.077,3783,3.077,3784,3.077,3787,3.077,3788,3.077,3789,3.077,3920,3.077,3921,3.077,3922,3.077,3974,3.077,3975,3.077,3976,3.077,4013,3.077,4014,3.077,4015,3.077,4321,3.077,4323,3.077,4324,3.077,4512,3.427,4513,3.427,4514,3.427,4515,3.427,4516,3.427]],["title/modules.html",[186,2.45]],["body/modules.html",[22,0.004,130,0.004,131,0.004,185,4.607,186,2.321,282,7.965,416,5.087,422,4.825,423,4.825,424,4.257,425,4.421,426,4.825,427,4.825,428,4.825,429,4.825,430,4.825,1400,2.426,1414,4.825,1419,4.112,1420,3.982,1672,4.825,1677,4.825,1678,4.825,1679,4.607,1680,4.825,1858,4.825,1965,7.605,2049,4.825,2142,4.825,2184,4.825,2741,6.798,2773,4.421,2823,4.825,2896,4.825,3025,5.087,3186,4.825,3192,4.825,3197,4.825,3586,4.825,3591,4.607,3592,4.825,3604,4.825,4517,10.763,4518,10.776]],["title/routes.html",[493,5.371]],["body/routes.html",[22,0.004,130,0.004,131,0.004,493,6.52]],["title/miscellaneous/typealiases.html",[4474,2.718,4519,6.039]],["body/miscellaneous/typealiases.html",[8,0.326,21,0.308,22,0.005,23,3.16,94,2.077,98,3.38,130,0.004,131,0.004,1473,7.26,1474,6.896,1486,5.984,1487,5.984,4474,5.279,4483,7.26,4493,7.26,4520,8.086,4521,8.086,4522,9.319]],["title/miscellaneous/variables.html",[4474,2.718,4523,5.422]],["body/miscellaneous/variables.html",[5,1.799,8,0.139,12,1.554,17,1.554,20,0.507,21,0.378,22,0.005,29,0.038,31,2.737,32,1.525,33,2.737,34,1.683,35,2.737,36,1.72,37,2.802,38,2.572,43,1.525,46,1.949,47,0.417,48,0.605,53,1.067,75,0.814,87,2.809,95,1.797,100,1.397,102,1.872,130,0.003,131,0.002,133,2.344,140,3.567,141,2.278,142,1.938,143,1.938,144,1.991,145,3.772,146,1.112,169,3.435,170,2.181,171,3.435,172,3.435,173,3.435,174,1.212,175,1.195,176,1.195,177,1.195,178,1.195,180,2.258,181,1.497,195,2.112,196,2.443,197,2.443,201,2.698,224,4.105,229,4.369,235,1.044,245,2.125,256,1.872,257,3.105,263,4.825,285,6.697,293,4.723,298,1.351,303,6.389,305,2.181,307,4.723,308,1.767,310,1.837,312,1.76,316,2.18,318,3.052,331,0.959,357,1.231,413,2.41,498,6.721,572,1.231,577,2.258,626,2.443,631,3.717,647,3.105,691,2.872,697,2.344,702,2.698,745,1.649,748,5.868,774,2.181,800,4.105,926,2.872,1020,3.618,1048,2.257,1061,2.321,1087,1.471,1109,2.693,1115,3.045,1189,3.598,1202,2.559,1220,2.872,1243,4.712,1336,2.572,1400,1.559,1471,2.872,1474,2.559,1725,4.712,1854,5.578,1886,1.584,1934,4.105,1977,5.717,1994,7.175,1996,2.443,2000,2.559,2003,2.872,2021,2.559,2028,2.698,2162,3.105,2165,3.105,2167,4.968,2301,5.028,2363,4.723,2490,2.344,2504,4.369,2529,4.723,2531,4.723,2533,4.723,2610,2.872,2629,4.723,2637,3.105,2662,7.757,2692,5.266,2981,2.698,3031,3.105,3034,4.723,3035,3.105,3036,3.105,3037,3.105,3038,3.105,3039,3.105,3152,4.723,3413,3.105,3681,6.962,3695,3.105,3736,3.105,3841,3.105,4474,2.258,4479,6.389,4481,4.723,4485,3.105,4491,3.105,4523,3.105,4524,7.657,4525,6.368,4526,3.458,4527,3.458,4528,3.458,4529,5.261,4530,3.458,4531,3.458,4532,3.458,4533,3.458,4534,3.458,4535,3.458,4536,3.458,4537,3.458,4538,6.368,4539,3.458,4540,3.458,4541,8.64,4542,3.458,4543,3.458,4544,8.384,4545,3.458,4546,3.458,4547,3.458,4548,3.458,4549,3.458,4550,3.458,4551,3.458,4552,3.458,4553,3.458,4554,3.458,4555,3.458,4556,3.458,4557,3.458,4558,3.458,4559,3.458,4560,3.458,4561,3.458,4562,5.261,4563,3.458,4564,3.458,4565,3.458,4566,3.458,4567,3.458,4568,3.458,4569,3.458,4570,3.458,4571,3.458,4572,3.458,4573,3.458,4574,3.458,4575,3.458,4576,3.458,4577,3.458,4578,3.458,4579,3.458,4580,3.458,4581,3.458,4582,5.261,4583,7.117,4584,3.458,4585,3.458,4586,3.458,4587,3.458,4588,3.458,4589,3.458,4590,5.261,4591,3.458,4592,3.458,4593,3.458,4594,3.458,4595,3.458,4596,3.458,4597,3.458,4598,3.458,4599,3.458,4600,3.458,4601,3.458,4602,3.458,4603,3.458,4604,3.458,4605,3.458,4606,7.657,4607,3.458,4608,7.657,4609,3.458,4610,5.261,4611,3.458,4612,3.458,4613,3.458,4614,3.458,4615,9.416,4616,3.458,4617,3.458,4618,3.458,4619,3.458,4620,3.458,4621,3.458,4622,3.458,4623,3.458,4624,3.458,4625,3.458,4626,3.458,4627,3.458,4628,5.261,4629,3.458,4630,3.458,4631,3.458,4632,3.458,4633,3.458,4634,3.458,4635,3.458,4636,3.458,4637,3.458,4638,3.458,4639,3.458,4640,3.458,4641,3.458,4642,3.458,4643,3.458,4644,3.458,4645,3.458,4646,3.458,4647,6.368,4648,6.368,4649,6.368,4650,3.458,4651,7.657,4652,7.117,4653,3.458,4654,3.458,4655,3.458,4656,3.458,4657,5.261,4658,3.458,4659,3.458,4660,3.458,4661,3.458,4662,3.458,4663,3.458,4664,3.458,4665,3.458,4666,3.458,4667,9.599,4668,3.458,4669,3.458,4670,3.458,4671,3.458,4672,3.458,4673,3.458,4674,5.261,4675,3.458,4676,3.458,4677,3.458,4678,3.458,4679,3.458,4680,3.458,4681,3.458,4682,3.458,4683,3.458,4684,3.458,4685,3.458,4686,3.458,4687,3.458,4688,3.458,4689,3.458]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":58,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"interfaces/FlatNode.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"interfaces/Node.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["0.02rem",{"_index":2671,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.03rem",{"_index":4315,"title":{},"body":{"components/UploadComponent.html":{}}}],["0.057",{"_index":2706,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.0625rem",{"_index":1663,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FooterComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{}}}],["0.063rem",{"_index":1316,"title":{},"body":{"components/CompareComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["0.1",{"_index":658,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/FooterComponent.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["0.125rem",{"_index":2695,"title":{},"body":{"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.15",{"_index":657,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["0.1875rem",{"_index":2742,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["0.18rem",{"_index":4465,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["0.1px",{"_index":2468,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{}}}],["0.226",{"_index":2711,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.25",{"_index":3170,"title":{},"body":{"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["0.25rem",{"_index":1313,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.2rem",{"_index":2411,"title":{},"body":{"components/FooterComponent.html":{}}}],["0.2s",{"_index":2080,"title":{},"body":{"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NavItemComponent.html":{}}}],["0.3",{"_index":655,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["0.3125rem",{"_index":1846,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{}}}],["0.3rem",{"_index":2273,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["0.3s",{"_index":1668,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.4",{"_index":3171,"title":{},"body":{"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["0.432rem",{"_index":3436,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["0.438rem",{"_index":2933,"title":{},"body":{"components/LegendComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.5",{"_index":654,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{}}}],["0.525rem",{"_index":3424,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["0.5625rem",{"_index":3179,"title":{},"body":{"components/NavItemComponent.html":{}}}],["0.5rem",{"_index":1315,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsNavComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.5s",{"_index":2707,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.625rem",{"_index":1296,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/NavItemComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{}}}],["0.75rem",{"_index":3431,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["0.7rem",{"_index":2276,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["0.813rem",{"_index":4468,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["0.85",{"_index":1289,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["0.85rem",{"_index":4317,"title":{},"body":{"components/UploadComponent.html":{}}}],["0.875rem",{"_index":2663,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.89rem",{"_index":3231,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["0.8rem",{"_index":3439,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{}}}],["0.9375rem",{"_index":2463,"title":{},"body":{"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["0.938rem",{"_index":3426,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["0.9rem",{"_index":3425,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/VisControlsComponent.html":{}}}],["000",{"_index":689,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["00008b",{"_index":917,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["007cbe",{"_index":3973,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0d%0a%0d%0a1",{"_index":1649,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["0px",{"_index":3433,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["0rem",{"_index":2714,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{}}}],["0s",{"_index":2756,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":141,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"components/HomeComponent.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/MultiParentMarkGroup.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1)[0].hraversion",{"_index":3404,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["1.063rem",{"_index":2930,"title":{},"body":{"components/LegendComponent.html":{}}}],["1.125rem",{"_index":1310,"title":{},"body":{"components/CompareComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{}}}],["1.25rem",{"_index":2658,"title":{},"body":{"components/HomeComponent.html":{},"components/IndentedListComponent.html":{}}}],["1.4375rem",{"_index":2728,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.4rem",{"_index":4320,"title":{},"body":{"components/UploadComponent.html":{}}}],["1.5",{"_index":625,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["1.5625rem",{"_index":2022,"title":{},"body":{"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{}}}],["1.5rem",{"_index":1320,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/UploadComponent.html":{}}}],["1.75rem",{"_index":2703,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.875rem",{"_index":1312,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{}}}],["10",{"_index":697,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/DoiComponent.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"components/PlaygroundComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1265,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["1000",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["1000px",{"_index":2679,"title":{},"body":{"components/HomeComponent.html":{}}}],["100px",{"_index":1332,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{}}}],["10pt",{"_index":1294,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsNavComponent.html":{},"components/UploadComponent.html":{}}}],["10px",{"_index":1327,"title":{},"body":{"components/CompareComponent.html":{},"components/NavItemComponent.html":{}}}],["10vh",{"_index":2737,"title":{},"body":{"components/HomeComponent.html":{}}}],["11",{"_index":702,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/LegendService.html":{},"classes/TreeMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["11.25rem",{"_index":2939,"title":{},"body":{"components/LegendComponent.html":{}}}],["117",{"_index":4622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":4683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.5rem",{"_index":2713,"title":{},"body":{"components/HomeComponent.html":{}}}],["1200px",{"_index":2731,"title":{},"body":{"components/HomeComponent.html":{}}}],["128",{"_index":2705,"title":{},"body":{"components/HomeComponent.html":{}}}],["12pt",{"_index":1845,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{}}}],["12s",{"_index":2761,"title":{},"body":{"components/HomeComponent.html":{}}}],["13",{"_index":4685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["132",{"_index":2181,"title":{},"body":{"components/ErrorComponent.html":{}}}],["14",{"_index":800,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Legends.html":{},"classes/TreeMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["14.688rem",{"_index":2272,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["1400",{"_index":3570,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["140px",{"_index":2471,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["14pt",{"_index":2020,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{}}}],["14px",{"_index":2469,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{}}}],["15",{"_index":2765,"title":{},"body":{"components/HomeComponent.html":{},"classes/Legends.html":{},"classes/TreeMarkGroup.html":{}}}],["15.625rem",{"_index":3781,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["150",{"_index":708,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["159",{"_index":1665,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["16",{"_index":3002,"title":{},"body":{"classes/Legends.html":{},"index.html":{}}}],["164",{"_index":2675,"title":{},"body":{"components/HomeComponent.html":{}}}],["16s",{"_index":2763,"title":{},"body":{"components/HomeComponent.html":{}}}],["18.75rem",{"_index":1857,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/DoiComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["180",{"_index":4012,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["18pt",{"_index":2669,"title":{},"body":{"components/HomeComponent.html":{}}}],["18rem",{"_index":2025,"title":{},"body":{"components/DocsComponent.html":{}}}],["196",{"_index":1319,"title":{},"body":{"components/CompareComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["1976d2",{"_index":2815,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["1px",{"_index":3434,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["1rem",{"_index":2042,"title":{},"body":{"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{}}}],["2",{"_index":38,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"classes/MultiParentMarkGroup.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"miscellaneous/variables.html":{}}}],["2.1875rem",{"_index":2710,"title":{},"body":{"components/HomeComponent.html":{}}}],["2.375rem",{"_index":3437,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["2.3rem",{"_index":2668,"title":{},"body":{"components/HomeComponent.html":{}}}],["2.5rem",{"_index":1330,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["2.75rem",{"_index":2015,"title":{},"body":{"components/DocsComponent.html":{}}}],["20",{"_index":695,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{},"injectables/VegaService.html":{}}}],["200",{"_index":3003,"title":{},"body":{"classes/Legends.html":{}}}],["201",{"_index":2182,"title":{},"body":{"components/ErrorComponent.html":{}}}],["207",{"_index":4624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20pt",{"_index":2822,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["215",{"_index":2820,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["218",{"_index":2697,"title":{},"body":{"components/HomeComponent.html":{}}}],["228",{"_index":1286,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["232",{"_index":4627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["247",{"_index":4633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["249",{"_index":2405,"title":{},"body":{"components/FooterComponent.html":{}}}],["24px",{"_index":3971,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["25",{"_index":842,"title":{},"body":{"injectables/BimodalService.html":{}}}],["250",{"_index":4511,"title":{},"body":{"miscellaneous/functions.html":{}}}],["255",{"_index":2408,"title":{},"body":{"components/FooterComponent.html":{}}}],["25rem",{"_index":2269,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["262626",{"_index":2005,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["270",{"_index":4635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2e3243",{"_index":2037,"title":{},"body":{"components/DocsComponent.html":{}}}],["2em",{"_index":2813,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["2px",{"_index":2079,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["2rem",{"_index":2271,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FooterComponent.html":{}}}],["3",{"_index":145,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"classes/TreeMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["3.125rem",{"_index":2014,"title":{},"body":{"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{}}}],["3.5",{"_index":659,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["3.75rem",{"_index":2685,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["3.8rem",{"_index":3422,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["30",{"_index":4392,"title":{},"body":{"injectables/VegaService.html":{}}}],["30.375rem",{"_index":2744,"title":{},"body":{"components/HomeComponent.html":{}}}],["300",{"_index":151,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/DebugLogsComponent.html":{},"interfaces/Link.html":{},"classes/TreeMarkGroup.html":{}}}],["3000",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["304",{"_index":4637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30px",{"_index":1263,"title":{},"body":{"components/CompareComponent.html":{}}}],["31",{"_index":4514,"title":{},"body":{"index.html":{}}}],["31.25rem",{"_index":1840,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["33",{"_index":4619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":4513,"title":{},"body":{"index.html":{}}}],["3456789bc'.split",{"_index":1213,"title":{},"body":{"components/CompareComponent.html":{}}}],["377eb8",{"_index":34,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["38824ba8",{"_index":4587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":1261,"title":{},"body":{"components/CompareComponent.html":{}}}],["3rem",{"_index":2044,"title":{},"body":{"components/DocsComponent.html":{},"components/UploadComponent.html":{}}}],["4",{"_index":691,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/LegendService.html":{},"miscellaneous/variables.html":{}}}],["4.375rem",{"_index":2676,"title":{},"body":{"components/HomeComponent.html":{}}}],["4.6875rem",{"_index":2677,"title":{},"body":{"components/HomeComponent.html":{}}}],["400",{"_index":2021,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"classes/TreeMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["400px",{"_index":3969,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["4018",{"_index":2388,"title":{},"body":{"components/FooterComponent.html":{}}}],["40px",{"_index":1262,"title":{},"body":{"components/CompareComponent.html":{}}}],["4180cb",{"_index":2401,"title":{},"body":{"components/FooterComponent.html":{}}}],["444a65",{"_index":1321,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["444a6510",{"_index":3580,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["444a6590",{"_index":2734,"title":{},"body":{"components/HomeComponent.html":{}}}],["450px",{"_index":2746,"title":{},"body":{"components/HomeComponent.html":{}}}],["47408",{"_index":2390,"title":{},"body":{"components/FooterComponent.html":{}}}],["480",{"_index":4640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4b2079",{"_index":921,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["4daf4a",{"_index":36,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/LegendService.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["4rem",{"_index":1307,"title":{},"body":{"components/CompareComponent.html":{},"components/TreeComponent.html":{}}}],["4s",{"_index":2758,"title":{},"body":{"components/HomeComponent.html":{}}}],["5",{"_index":626,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"injectables/LegendService.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["5.1875rem",{"_index":2721,"title":{},"body":{"components/HomeComponent.html":{}}}],["5.5rem",{"_index":2683,"title":{},"body":{"components/HomeComponent.html":{}}}],["5.625rem",{"_index":2699,"title":{},"body":{"components/HomeComponent.html":{}}}],["50",{"_index":158,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"interfaces/Link.html":{}}}],["500",{"_index":2666,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/VisControlsComponent.html":{}}}],["50rem",{"_index":3585,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["50}px",{"_index":2579,"title":{},"body":{"components/HomeComponent.html":{}}}],["540",{"_index":4641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["576px",{"_index":2720,"title":{},"body":{"components/HomeComponent.html":{}}}],["58fwlw86sd",{"_index":4654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5rem",{"_index":2684,"title":{},"body":{"components/HomeComponent.html":{}}}],["6",{"_index":2981,"title":{},"body":{"injectables/LegendService.html":{},"classes/TreeMarkGroup.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["6.25rem",{"_index":2270,"title":{},"body":{"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["6.4375rem",{"_index":2727,"title":{},"body":{"components/HomeComponent.html":{}}}],["600",{"_index":1293,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{}}}],["61",{"_index":1666,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["62px",{"_index":2034,"title":{},"body":{"components/DocsComponent.html":{}}}],["669",{"_index":4643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66bb6a",{"_index":1848,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["6c6a63",{"_index":660,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["6c757d",{"_index":2767,"title":{},"body":{"components/HomeComponent.html":{}}}],["6rem",{"_index":3972,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["7",{"_index":1202,"title":{},"body":{"components/CompareComponent.html":{},"injectables/LegendService.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["7.5rem",{"_index":2691,"title":{},"body":{"components/HomeComponent.html":{}}}],["7.6875rem",{"_index":2719,"title":{},"body":{"components/HomeComponent.html":{}}}],["70",{"_index":4515,"title":{},"body":{"index.html":{}}}],["700",{"_index":2016,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{}}}],["7034",{"_index":2393,"title":{},"body":{"components/FooterComponent.html":{}}}],["71",{"_index":4516,"title":{},"body":{"index.html":{}}}],["74px",{"_index":2470,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["75",{"_index":2715,"title":{},"body":{"components/HomeComponent.html":{}}}],["757575",{"_index":1306,"title":{},"body":{"components/CompareComponent.html":{},"components/FileUploadComponent.html":{},"components/UploadComponent.html":{}}}],["7588a1",{"_index":3440,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["768px",{"_index":2725,"title":{},"body":{"components/HomeComponent.html":{}}}],["77k2vnzrj2",{"_index":4656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["796",{"_index":4645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7fd9da",{"_index":2670,"title":{},"body":{"components/HomeComponent.html":{}}}],["7rem",{"_index":2474,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["8",{"_index":577,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"classes/MultiParentMarkGroup.html":{},"components/OmapControlsComponent.html":{},"classes/TreeMarkGroup.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["80",{"_index":2718,"title":{},"body":{"components/HomeComponent.html":{}}}],["800",{"_index":2027,"title":{},"body":{"components/DocsComponent.html":{}}}],["808080",{"_index":66,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["812",{"_index":2391,"title":{},"body":{"components/FooterComponent.html":{}}}],["856",{"_index":2392,"title":{},"body":{"components/FooterComponent.html":{}}}],["89",{"_index":3181,"title":{},"body":{"components/NavItemComponent.html":{}}}],["8pt",{"_index":2818,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["8px",{"_index":1258,"title":{},"body":{"components/CompareComponent.html":{}}}],["8rem",{"_index":2023,"title":{},"body":{"components/DocsComponent.html":{}}}],["8s",{"_index":2751,"title":{},"body":{"components/HomeComponent.html":{}}}],["9",{"_index":4678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97",{"_index":2978,"title":{},"body":{"injectables/LegendService.html":{}}}],["98",{"_index":2980,"title":{},"body":{"injectables/LegendService.html":{},"classes/Legends.html":{}}}],["989898",{"_index":4473,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["99",{"_index":1855,"title":{},"body":{"components/DebugLogsComponent.html":{},"injectables/LegendService.html":{}}}],["9999",{"_index":3970,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["9d9e9a",{"_index":2274,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["_",{"_index":2313,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["_]{15,})\\/(.*?gid=(\\d+))?|\\w*csv",{"_index":1208,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["_blank",{"_index":1993,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/TableNestedMenuComponent.html":{}}}],["_comparedata",{"_index":4025,"title":{},"body":{"injectables/TreeService.html":{}}}],["_config",{"_index":1733,"title":{},"body":{"classes/Data.html":{}}}],["_control",{"_index":2246,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["_currentsheet",{"_index":1735,"title":{},"body":{"classes/Data.html":{}}}],["_data",{"_index":3696,"title":{},"body":{"injectables/SheetService.html":{}}}],["_error",{"_index":3043,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["_filename",{"_index":2262,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["_multiparentlinksdata",{"_index":4342,"title":{},"body":{"injectables/VegaService.html":{}}}],["_signal",{"_index":4375,"title":{},"body":{"injectables/VegaService.html":{}}}],["a.comparatorid",{"_index":817,"title":{},"body":{"injectables/BimodalService.html":{}}}],["a.comparatorname",{"_index":820,"title":{},"body":{"injectables/BimodalService.html":{}}}],["a.indegree?.size",{"_index":836,"title":{},"body":{"injectables/BimodalService.html":{}}}],["a.outdegree?.size",{"_index":835,"title":{},"body":{"injectables/BimodalService.html":{}}}],["a.structure.tolowercase",{"_index":831,"title":{},"body":{"injectables/BimodalService.html":{}}}],["a03837",{"_index":4556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a1",{"_index":3552,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["a:hover",{"_index":2040,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["a[key",{"_index":3262,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["above",{"_index":2168,"title":{},"body":{"components/ErrorComponent.html":{}}}],["absence",{"_index":2979,"title":{},"body":{"injectables/LegendService.html":{}}}],["absolute",{"_index":2655,"title":{},"body":{"components/HomeComponent.html":{}}}],["abstractcontrol",{"_index":1126,"title":{},"body":{"components/CompareComponent.html":{},"components/FileUploadComponent.html":{}}}],["acc",{"_index":1624,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["acc[e.ontologyid",{"_index":1626,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["accept",{"_index":4217,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["access",{"_index":1230,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["accessors",{"_index":1092,"title":{},"body":{"components/CompareComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["action",{"_index":2482,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Signals.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["action(clearsheetlogs",{"_index":3067,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["action(closebottomsheet",{"_index":4228,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closebottomsheetdoi",{"_index":4226,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closecompare",{"_index":4234,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closeloading",{"_index":4203,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closerightsidenav",{"_index":4214,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closesearch",{"_index":4237,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(closesnackbar",{"_index":4196,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(discrepencyid",{"_index":4146,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(discrepencylabel",{"_index":4145,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(dosearch",{"_index":4143,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(duplicateid",{"_index":4147,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(haserror",{"_index":4207,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(openbottomsheet",{"_index":4219,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(openbottomsheetdoi",{"_index":4223,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(opencompare",{"_index":4232,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(openloading",{"_index":4201,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(opensearch",{"_index":4235,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(opensnackbar",{"_index":4195,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(reportlog",{"_index":3073,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["action(togglecontrolpane",{"_index":4198,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(toggledebuglogs",{"_index":4215,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(toggleindentlist",{"_index":4209,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(togglereport",{"_index":4211,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(updatebimodal",{"_index":4134,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updatebimodalconfig",{"_index":4141,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updatebottomsheetdata",{"_index":4148,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updatelinksdata",{"_index":4150,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updateloadingtext",{"_index":4202,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["action(updateomapconfig",{"_index":4142,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updatevegaspec",{"_index":4140,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["action(updatevegaview",{"_index":4135,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["actions/logs.actions",{"_index":753,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["actions/sheet.actions",{"_index":1562,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{}}}],["actions/tree.actions",{"_index":757,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["actions/ui.actions",{"_index":760,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["actionsdiv",{"_index":2575,"title":{},"body":{"components/HomeComponent.html":{}}}],["actionsdiv.style.maxheight",{"_index":2577,"title":{},"body":{"components/HomeComponent.html":{}}}],["actionsdiv.style.overflowy",{"_index":2580,"title":{},"body":{"components/HomeComponent.html":{}}}],["actionsheight",{"_index":2745,"title":{},"body":{"components/HomeComponent.html":{}}}],["activatedroute",{"_index":1927,"title":{},"body":{"components/DocsComponent.html":{}}}],["activatenode",{"_index":2306,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["active",{"_index":2036,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/VisControlsComponent.html":{}}}],["actual_component",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["add",{"_index":1195,"title":{},"body":{"components/CompareComponent.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{}}}],["addcomparesheetrow",{"_index":1079,"title":{},"body":{"components/CompareComponent.html":{}}}],["addedbmbf",{"_index":2961,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmbg",{"_index":2957,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmbl",{"_index":2959,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmbm",{"_index":2960,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmbp",{"_index":2958,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmproteinabsencepath",{"_index":2963,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmproteinintermediatepath",{"_index":2965,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedbmproteinpresencepath",{"_index":2964,"title":{},"body":{"injectables/LegendService.html":{}}}],["addedct",{"_index":2962,"title":{},"body":{"injectables/LegendService.html":{}}}],["adding",{"_index":822,"title":{},"body":{"injectables/BimodalService.html":{}}}],["address",{"_index":1224,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"components/UploadComponent.html":{}}}],["addsheets",{"_index":3278,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["addsignallisteners",{"_index":4327,"title":{},"body":{"injectables/VegaService.html":{}}}],["addsignallisteners(view",{"_index":4333,"title":{},"body":{"injectables/VegaService.html":{}}}],["affiliated",{"_index":2651,"title":{},"body":{"components/HomeComponent.html":{}}}],["affiliation",{"_index":2661,"title":{},"body":{"components/HomeComponent.html":{}}}],["affiliations",{"_index":2649,"title":{},"body":{"components/HomeComponent.html":{}}}],["afterviewinit",{"_index":2292,"title":{},"body":{"interfaces/FlatNode.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"components/PlaygroundComponent.html":{}}}],["against",{"_index":4659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ajay",{"_index":4581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":4520,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliceblue",{"_index":602,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["align",{"_index":698,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["alllogs",{"_index":3011,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{}}}],["alllogs.find((l",{"_index":3086,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["alllogs.push",{"_index":3102,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["allomapsheetconfigurations",{"_index":1440,"title":{},"body":{"injectables/ConfigService.html":{}}}],["allorgans",{"_index":1917,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["allow_telemetry",{"_index":3039,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["allowtelemetry",{"_index":3942,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["allparentids",{"_index":4062,"title":{},"body":{"injectables/TreeService.html":{}}}],["allparentids.add(parent.id",{"_index":4086,"title":{},"body":{"injectables/TreeService.html":{}}}],["allparentids.delete(1",{"_index":4093,"title":{},"body":{"injectables/TreeService.html":{}}}],["allparentidsarray",{"_index":4094,"title":{},"body":{"injectables/TreeService.html":{}}}],["allparentidsarray.includes(x.id",{"_index":4101,"title":{},"body":{"injectables/TreeService.html":{}}}],["allsheetconfigurations",{"_index":1441,"title":{},"body":{"injectables/ConfigService.html":{}}}],["along",{"_index":2633,"title":{},"body":{"components/HomeComponent.html":{}}}],["alphabetically",{"_index":170,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":1982,"title":{},"body":{"components/DocsComponent.html":{}}}],["alt",{"_index":4608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amount",{"_index":2465,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["analyst",{"_index":4575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analytics",{"_index":220,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["analyticsmodule",{"_index":185,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["analyticsmodule.forroot",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["analyticsoptions",{"_index":206,"title":{"interfaces/AnalyticsOptions.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["anatomical",{"_index":142,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["anatomical_structures",{"_index":1354,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["anatomicalstructures",{"_index":1003,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["anatomicalstructuresdata",{"_index":780,"title":{},"body":{"injectables/BimodalService.html":{}}}],["anatomicalstructuresdata.find((a",{"_index":816,"title":{},"body":{"injectables/BimodalService.html":{}}}],["angular",{"_index":3152,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk/collections",{"_index":3335,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["angular/cdk/drag",{"_index":3636,"title":{},"body":{"modules/RootModule.html":{}}}],["angular/cdk/tree",{"_index":2291,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["angular/common",{"_index":1423,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{}}}],["angular/common/http",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["angular/core",{"_index":215,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"modules/MousePositionTrackerModule.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["angular/forms",{"_index":1139,"title":{},"body":{"components/CompareComponent.html":{},"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{}}}],["angular/material/bottom",{"_index":2126,"title":{},"body":{"components/DoiComponent.html":{},"modules/DoiModule.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"modules/RootModule.html":{}}}],["angular/material/button",{"_index":1436,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DoiModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/UploadModule.html":{}}}],["angular/material/card",{"_index":1438,"title":{},"body":{"modules/CompareModule.html":{},"modules/UploadModule.html":{}}}],["angular/material/checkbox",{"_index":3237,"title":{},"body":{"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["angular/material/core",{"_index":3667,"title":{},"body":{"modules/SearchModule.html":{}}}],["angular/material/dialog",{"_index":3020,"title":{},"body":{"components/LoadingComponent.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"modules/RootModule.html":{}}}],["angular/material/expansion",{"_index":1426,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/FunctionsModule.html":{},"modules/LegendModule.html":{},"modules/OmapControlsModule.html":{},"modules/ReportModule.html":{},"modules/UploadModule.html":{}}}],["angular/material/form",{"_index":3206,"title":{},"body":{"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{}}}],["angular/material/icon",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DoiModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/UploadModule.html":{}}}],["angular/material/input",{"_index":1429,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/FileUploadModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{},"modules/UploadModule.html":{}}}],["angular/material/list",{"_index":1866,"title":{},"body":{"modules/DebugLogsModule.html":{},"modules/SearchModule.html":{}}}],["angular/material/menu",{"_index":2282,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/HomeModule.html":{},"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{}}}],["angular/material/select",{"_index":2443,"title":{},"body":{"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["angular/material/sidenav",{"_index":2053,"title":{},"body":{"modules/DocsModule.html":{},"modules/RootModule.html":{}}}],["angular/material/slide",{"_index":1700,"title":{},"body":{"modules/ControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["angular/material/slider",{"_index":1696,"title":{},"body":{"modules/ControlsModule.html":{}}}],["angular/material/snack",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"modules/RootModule.html":{},"components/TrackingPopupComponent.html":{}}}],["angular/material/sort",{"_index":3612,"title":{},"body":{"modules/ReportModule.html":{}}}],["angular/material/table",{"_index":3336,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{}}}],["angular/material/tabs",{"_index":1868,"title":{},"body":{"modules/DebugLogsModule.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{}}}],["angular/material/toolbar",{"_index":3201,"title":{},"body":{"modules/NavbarModule.html":{}}}],["angular/material/tooltip",{"_index":1698,"title":{},"body":{"modules/ControlsModule.html":{},"modules/FunctionsModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{}}}],["angular/material/tree",{"_index":2297,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"interfaces/Node.html":{}}}],["angular/platform",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/router",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/ControlPaneModule.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/NavbarModule.html":{}}}],["angular/youtube",{"_index":2569,"title":{},"body":{"components/HomeComponent.html":{},"modules/HomeModule.html":{}}}],["anim",{"_index":2752,"title":{},"body":{"components/HomeComponent.html":{}}}],["animation",{"_index":2747,"title":{},"body":{"components/HomeComponent.html":{}}}],["antibody",{"_index":1245,"title":{},"body":{"components/CompareComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{}}}],["anyone",{"_index":1233,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["anyview",{"_index":976,"title":{},"body":{"injectables/BimodalService.html":{}}}],["anyview._runtime.signals.node__click.value",{"_index":977,"title":{},"body":{"injectables/BimodalService.html":{}}}],["anyview._runtime.signals.sources__click.value",{"_index":981,"title":{},"body":{"injectables/BimodalService.html":{}}}],["anyview._runtime.signals.targets__click.value",{"_index":982,"title":{},"body":{"injectables/BimodalService.html":{}}}],["api",{"_index":3681,"title":{},"body":{"injectables/SheetService.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/variables.html":{}}}],["api/readme.md",{"_index":4689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["app.component",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.ts",{"_index":1985,"title":{},"body":{"components/DocsComponent.html":{}}}],["app_initializer",{"_index":213,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{}}}],["appcomponent",{"_index":251,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["appearance",{"_index":1268,"title":{},"body":{"components/CompareComponent.html":{}}}],["applied",{"_index":4351,"title":{},"body":{"injectables/VegaService.html":{}}}],["appmodule",{"_index":416,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":226,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{}}}],["appropriate",{"_index":1242,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{}}}],["approutingmodule",{"_index":422,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["aprop",{"_index":3261,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["architect",{"_index":4564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arg1",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["arg2",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["arg3",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["around",{"_index":558,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["array",{"_index":3258,"title":{},"body":{"pipes/OrderByPipe.html":{},"classes/Signals.html":{},"miscellaneous/functions.html":{}}}],["array.slice().sort((a",{"_index":3260,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["arrow",{"_index":1671,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{}}}],["art",{"_index":2364,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["as_as",{"_index":118,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["as_as_organwise",{"_index":122,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["as_ct",{"_index":116,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["as_ct[node.organname",{"_index":946,"title":{},"body":{"injectables/BimodalService.html":{}}}],["as_ct_links",{"_index":784,"title":{},"body":{"injectables/BimodalService.html":{}}}],["as_ct_organwise",{"_index":119,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["as_height",{"_index":1788,"title":{},"body":{"classes/Data.html":{},"classes/Signals.html":{}}}],["as_id",{"_index":129,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["as_name",{"_index":128,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["as_red",{"_index":31,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"miscellaneous/variables.html":{}}}],["as_width",{"_index":1789,"title":{},"body":{"classes/Data.html":{},"classes/Signals.html":{}}}],["asbyasorganwise",{"_index":4069,"title":{},"body":{"injectables/TreeService.html":{}}}],["asbyasorganwise[row?.organname",{"_index":4077,"title":{},"body":{"injectables/TreeService.html":{}}}],["asct",{"_index":1992,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/VisControlsComponent.html":{}}}],["asct+b",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["asctb",{"_index":3708,"title":{},"body":{"injectables/SheetService.html":{}}}],["asctbapiurl",{"_index":4651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asctbconfig",{"_index":89,"title":{"interfaces/ASCTBConfig.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["asctd",{"_index":132,"title":{"interfaces/ASCTD.html":{}},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["aslinktextmark",{"_index":4011,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["assets",{"_index":1880,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["assets/contributors/ajay.jpeg",{"_index":4579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/bruce.jpg",{"_index":4557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/ellen.jpeg",{"_index":4570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/katy.png",{"_index":4547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/mac.jpeg",{"_index":4588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/nikhil.jpeg",{"_index":4594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/paul.jpg",{"_index":4535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/contributors/pramod.png",{"_index":4601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/about/readme.md",{"_index":4669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/asct+b",{"_index":4688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/compare/readme.md",{"_index":4677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/data",{"_index":4671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/export/readme.md",{"_index":4687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/faq/readme.md",{"_index":4670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/indented",{"_index":4681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/intro/readme.md",{"_index":4668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/log/readme.md",{"_index":4686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/playground/readme.md",{"_index":4679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/report/readme.md",{"_index":4680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/search/readme.md",{"_index":4684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/vis",{"_index":4674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/docs/visualization/readme.md",{"_index":4673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/homepage/laptop",{"_index":4606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/playground/sheet.csv",{"_index":4664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/stylesheets/_colors.scss",{"_index":2461,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["assign",{"_index":3652,"title":{},"body":{"classes/Scales.html":{}}}],["astextmark",{"_index":4009,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["astextmark:click",{"_index":3866,"title":{},"body":{"classes/Signals.html":{}}}],["astextmark:mouseover",{"_index":3870,"title":{},"body":{"classes/Signals.html":{}}}],["astree",{"_index":4004,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["aswithnoct",{"_index":1004,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["aswithnolink",{"_index":1000,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["async",{"_index":716,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/VegaService.html":{}}}],["atleastonephonerequired",{"_index":1080,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["atleastonephonerequired(group",{"_index":1104,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["attrs",{"_index":238,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["attrs[key",{"_index":237,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["authored",{"_index":2607,"title":{},"body":{"components/HomeComponent.html":{}}}],["auto",{"_index":1278,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{}}}],["autosize",{"_index":4390,"title":{},"body":{"injectables/VegaService.html":{}}}],["autosized",{"_index":2739,"title":{},"body":{"components/HomeComponent.html":{}}}],["available",{"_index":2741,"title":{},"body":{"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules.html":{}}}],["ave",{"_index":2384,"title":{},"body":{"components/FooterComponent.html":{}}}],["avoid",{"_index":2859,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["await",{"_index":827,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b",{"_index":98,"title":{"interfaces/B.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["b.btype",{"_index":876,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b.indegree?.size",{"_index":834,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b.nodesize",{"_index":873,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b.outdegree?.size",{"_index":833,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b.structure.tolowercase",{"_index":832,"title":{},"body":{"injectables/BimodalService.html":{}}}],["b[key",{"_index":3264,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["b_green",{"_index":35,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["b_type",{"_index":1353,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["back",{"_index":1989,"title":{},"body":{"components/DocsComponent.html":{}}}],["background",{"_index":1284,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/PlaygroundComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["bar",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorComponent.html":{},"modules/RootModule.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{}}}],["base",{"_index":7,"title":{"interfaces/Base.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["based",{"_index":3313,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["baseline",{"_index":700,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["basis",{"_index":4458,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["before",{"_index":1902,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["behavior",{"_index":2100,"title":{},"body":{"injectables/DocsService.html":{}}}],["behaviorsubject",{"_index":2099,"title":{},"body":{"injectables/DocsService.html":{}}}],["being",{"_index":3817,"title":{},"body":{"classes/Signals.html":{}}}],["below",{"_index":1227,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["between",{"_index":1304,"title":{},"body":{"components/CompareComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["bf",{"_index":1339,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["bfbfbf",{"_index":2081,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["bg",{"_index":2032,"title":{},"body":{"components/DocsComponent.html":{}}}],["bgoffset",{"_index":576,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["bhakta",{"_index":4603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bherr@indiana.edu",{"_index":4565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bimodal",{"_index":550,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/Legends.html":{},"classes/Marks.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["bimodal.service",{"_index":4039,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["bimodal_distance_x",{"_index":1365,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["bimodal_distance_y",{"_index":1364,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["bimodal_text__click",{"_index":3864,"title":{},"body":{"classes/Signals.html":{}}}],["bimodal_text__hover",{"_index":710,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["bimodalbsizeoptions",{"_index":171,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/FunctionsComponent.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["bimodalbtypeoptions",{"_index":173,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/FunctionsComponent.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["bimodalconfig",{"_index":179,"title":{"interfaces/BimodalConfig.html":{}},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FunctionsComponent.html":{},"interfaces/Link.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["bimodalconfig.bm.size",{"_index":871,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bimodalconfig.bm.sort",{"_index":869,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bimodalconfig.bm.type",{"_index":874,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bimodalconfig.ct.size",{"_index":837,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bimodalconfig.ct.sort",{"_index":829,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bimodalctsizeoptions",{"_index":172,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/FunctionsComponent.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["bimodaldata",{"_index":182,"title":{"interfaces/BimodalData.html":{}},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{}}}],["bimodalmarkgroup",{"_index":532,"title":{"classes/BimodalMarkGroup.html":{}},"body":{"classes/BimodalMarkGroup.html":{},"classes/Marks.html":{}}}],["bimodalmarkgroup().group",{"_index":573,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["bimodalmarkgroup.create",{"_index":3128,"title":{},"body":{"classes/Marks.html":{}}}],["bimodalservice",{"_index":713,"title":{"injectables/BimodalService.html":{}},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["bimodalsortoptions",{"_index":169,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/FunctionsComponent.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["bio",{"_index":877,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarker",{"_index":2454,"title":{},"body":{"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{}}}],["biomarkers",{"_index":146,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["biomarkers.filter((b",{"_index":875,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarkers.filter((elem",{"_index":867,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarkers.foreach((b",{"_index":872,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarkers.foreach((marker",{"_index":878,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarkers.sort((a",{"_index":870,"title":{},"body":{"injectables/BimodalService.html":{}}}],["biomarkers_gene",{"_index":1356,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["biomarkers_lipids",{"_index":1358,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["biomarkers_meta",{"_index":1359,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["biomarkers_prot",{"_index":1360,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["biomarkers_protein",{"_index":1357,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["biomarkerscounts",{"_index":998,"title":{"interfaces/BiomarkersCounts.html":{}},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["biomarkersnamesinreport",{"_index":1009,"title":{"interfaces/BiomarkersNamesInReport.html":{}},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["biomodal",{"_index":4338,"title":{},"body":{"injectables/VegaService.html":{}}}],["bip",{"_index":2078,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["bisque",{"_index":617,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["bl",{"_index":1338,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["black",{"_index":711,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"classes/Legends.html":{},"components/NavItemComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["blob",{"_index":1329,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["block",{"_index":2268,"title":{},"body":{"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TreeComponent.html":{}}}],["blocksize",{"_index":2585,"title":{},"body":{"components/HomeComponent.html":{}}}],["bloomington",{"_index":2389,"title":{},"body":{"components/FooterComponent.html":{}}}],["blue",{"_index":637,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Scales.html":{},"classes/TreeMarkGroup.html":{}}}],["bm",{"_index":41,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bm_id",{"_index":125,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["bm_name",{"_index":124,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["bm_type",{"_index":1335,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["bmctpairings",{"_index":123,"title":{"interfaces/BmCtPairings.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["bmnode",{"_index":138,"title":{"classes/BMNode.html":{}},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["bmnode(leaf",{"_index":797,"title":{},"body":{"injectables/BimodalService.html":{}}}],["bms",{"_index":2421,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["bmsizeoptions",{"_index":2422,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["bmtype",{"_index":1399,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Legend.html":{},"injectables/LegendService.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["body",{"_index":109,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["bold",{"_index":705,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["boolean",{"_index":24,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/IndentedListComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":190,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["border",{"_index":1256,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["borner",{"_index":4555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":1032,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["bottomsheetdata",{"_index":4107,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["bottomsheetinfo",{"_index":3688,"title":{},"body":{"injectables/SheetService.html":{}}}],["bottomsheetopen",{"_index":4158,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["boundary",{"_index":3158,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["bounds.x1",{"_index":592,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["bounds.x2",{"_index":597,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["bounds.y1",{"_index":598,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["bounds.y2",{"_index":600,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["box",{"_index":1259,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["bp",{"_index":1377,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["bprop",{"_index":3263,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["br",{"_index":3762,"title":{},"body":{"components/SidenavComponent.html":{}}}],["brands",{"_index":2359,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["break",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/OrganTableSelectorComponent.html":{}}}],["broken",{"_index":2886,"title":{},"body":{"components/InfoComponent.html":{}}}],["browse",{"_index":4518,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"components/UploadComponent.html":{},"modules.html":{}}}],["browser/animations",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["bruce",{"_index":4558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":2681,"title":{},"body":{"components/HomeComponent.html":{}}}],["btype",{"_index":99,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["bubble_chart",{"_index":2460,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["build",{"_index":823,"title":{},"body":{"injectables/BimodalService.html":{}}}],["building",{"_index":2645,"title":{},"body":{"components/HomeComponent.html":{},"injectables/VegaService.html":{}}}],["built",{"_index":4614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["burlywood",{"_index":618,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["button",{"_index":1314,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{}}}],["buttons",{"_index":4617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bwithnolink",{"_index":1002,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["by.pipe",{"_index":2949,"title":{},"body":{"modules/LegendModule.html":{},"modules/ReportModule.html":{}}}],["by.pipe.ts",{"_index":3252,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["by.pipe.ts:9",{"_index":3257,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["by/order",{"_index":2948,"title":{},"body":{"modules/LegendModule.html":{},"pipes/OrderByPipe.html":{},"modules/ReportModule.html":{}}}],["börner",{"_index":4549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":1808,"title":{},"body":{"classes/Data.html":{}}}],["c.color",{"_index":2973,"title":{},"body":{"injectables/LegendService.html":{}}}],["c.indegree?.size",{"_index":840,"title":{},"body":{"injectables/BimodalService.html":{}}}],["c.nodesize",{"_index":839,"title":{},"body":{"injectables/BimodalService.html":{}}}],["c.outdegree?.size",{"_index":841,"title":{},"body":{"injectables/BimodalService.html":{}}}],["c2cae5",{"_index":1331,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["cache",{"_index":1351,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["calc(100vh",{"_index":3985,"title":{},"body":{"components/TreeComponent.html":{}}}],["call",{"_index":1638,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/SheetService.html":{},"components/UploadComponent.html":{}}}],["cancel",{"_index":1850,"title":{},"body":{"components/DebugLogsComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"components/OrganTableSelectorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["card",{"_index":2702,"title":{},"body":{"components/HomeComponent.html":{}}}],["card:hover",{"_index":2709,"title":{},"body":{"components/HomeComponent.html":{}}}],["cards",{"_index":2701,"title":{},"body":{"components/HomeComponent.html":{}}}],["care",{"_index":3735,"title":{},"body":{"injectables/SheetService.html":{}}}],["case",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["catch",{"_index":961,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/IndentedListService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["categories",{"_index":2491,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["cbyorgan",{"_index":1008,"title":{"interfaces/CByOrgan.html":{}},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["cc",{"_index":1255,"title":{},"body":{"components/CompareComponent.html":{}}}],["ccc",{"_index":78,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{}}}],["ccf",{"_index":2605,"title":{},"body":{"components/HomeComponent.html":{}}}],["ce",{"_index":3501,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["ce(earlier",{"_index":3500,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["cell",{"_index":100,"title":{"classes/Cell.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["cell.color",{"_index":854,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.indegree",{"_index":857,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.isnew",{"_index":852,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.label",{"_index":861,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.length",{"_index":3557,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["cell.link",{"_index":848,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.nodesize",{"_index":849,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.notes",{"_index":846,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.organname",{"_index":847,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.outdegree",{"_index":859,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.references",{"_index":863,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell.structure",{"_index":845,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cell_col",{"_index":91,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["cell_types",{"_index":1355,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["cellout.name",{"_index":913,"title":{},"body":{"injectables/BimodalService.html":{}}}],["cellout.proteinpresence",{"_index":915,"title":{},"body":{"injectables/BimodalService.html":{}}}],["celltype",{"_index":110,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["celltypes",{"_index":826,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["celltypes.foreach((c",{"_index":838,"title":{},"body":{"injectables/BimodalService.html":{}}}],["celltypes.foreach((cell",{"_index":843,"title":{},"body":{"injectables/BimodalService.html":{}}}],["celltypes.sort((a",{"_index":830,"title":{},"body":{"injectables/BimodalService.html":{}}}],["center",{"_index":1301,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["change",{"_index":2453,"title":{},"body":{"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/PlaygroundComponent.html":{}}}],["changebimodaldistancex",{"_index":4399,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["changebimodaldistancey",{"_index":4400,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["changedetection",{"_index":3933,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy",{"_index":3958,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":3934,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["changedetectorref",{"_index":2865,"title":{},"body":{"components/InfoComponent.html":{}}}],["changeheight",{"_index":4401,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["changeoptions",{"_index":2426,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["changeoptions(type",{"_index":2429,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["changeshowas",{"_index":4402,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["changeshowontology",{"_index":4403,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["changetab",{"_index":3279,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["changetab(tabindex",{"_index":3290,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["changeversion",{"_index":3280,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["changeversion(element.version[0].value",{"_index":3417,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["changeversion(value",{"_index":3293,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["changewidth",{"_index":4404,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["charts",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/ReportModule.html":{}}}],["check",{"_index":4044,"title":{},"body":{"injectables/TreeService.html":{}}}],["check_circle",{"_index":1847,"title":{},"body":{"components/DebugLogsComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"miscellaneous/enumerations.html":{}}}],["checkbox",{"_index":3230,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["checkboxclicked",{"_index":3216,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["checkboxclicked(event",{"_index":3221,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["checkboxlabel",{"_index":3281,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["checkboxlabel(row",{"_index":3295,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["checklinkformat",{"_index":1081,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["checklinkformat(url",{"_index":1107,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["chevron_right",{"_index":2811,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["child",{"_index":2790,"title":{},"body":{"classes/ILNode.html":{}}}],["child(1",{"_index":2754,"title":{},"body":{"components/HomeComponent.html":{}}}],["child(11",{"_index":3578,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["child(2",{"_index":2757,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["child(3",{"_index":2759,"title":{},"body":{"components/HomeComponent.html":{}}}],["child(4",{"_index":2760,"title":{},"body":{"components/HomeComponent.html":{}}}],["child(5",{"_index":2762,"title":{},"body":{"components/HomeComponent.html":{}}}],["child.name.tolowercase",{"_index":2791,"title":{},"body":{"classes/ILNode.html":{}}}],["childmenu",{"_index":3904,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["children",{"_index":57,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/FlatNode.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Node.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["chosen",{"_index":4129,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["ci",{"_index":2374,"title":{},"body":{"components/FooterComponent.html":{}}}],["circle",{"_index":666,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/LegendComponent.html":{}}}],["cl",{"_index":3683,"title":{},"body":{"injectables/SheetService.html":{}}}],["class",{"_index":44,"title":{"classes/BMNode.html":{},"classes/BimodalMarkGroup.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"classes/ILNode.html":{},"classes/Legends.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/TreeMarkGroup.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"modules/RootModule.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["classes",{"_index":504,"title":{},"body":{"classes/BMNode.html":{},"classes/BimodalMarkGroup.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"classes/ILNode.html":{},"classes/Legends.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/TreeMarkGroup.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"index.html":{}}}],["clear",{"_index":1018,"title":{},"body":{"classes/ClearSheetLogs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/UIStateModel.html":{}}}],["clearsheetlogs",{"_index":1015,"title":{"classes/ClearSheetLogs.html":{}},"body":{"classes/ClearSheetLogs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["clearsheetlogs(undefined",{"_index":3065,"title":{},"body":{"injectables/LogsState.html":{}}}],["click",{"_index":630,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ErrorComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/VegaService.html":{},"miscellaneous/enumerations.html":{}}}],["click)=\"prevclick.emit",{"_index":2075,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["click[!event.item",{"_index":3863,"title":{},"body":{"classes/Signals.html":{}}}],["clicked",{"_index":979,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Data.html":{},"classes/Signals.html":{},"interfaces/TreeStateModel.html":{},"injectables/VegaService.html":{}}}],["clicking",{"_index":645,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Signals.html":{}}}],["clicks",{"_index":2488,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["clientheight",{"_index":3139,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientwidth",{"_index":3138,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientx",{"_index":3141,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clienty",{"_index":3142,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clikable",{"_index":4001,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["close",{"_index":1031,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DoiComponent.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/SidenavHeaderComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closebottomsheet",{"_index":1028,"title":{"classes/CloseBottomSheet.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closebottomsheetdoi",{"_index":1057,"title":{"classes/CloseBottomSheetDOI.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closecompare",{"_index":1059,"title":{"classes/CloseCompare.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closed",{"_index":3326,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["closedebug",{"_index":1834,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["closeil",{"_index":2309,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["closeloading",{"_index":758,"title":{"classes/CloseLoading.html":{}},"body":{"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{}}}],["closeloading('visualization",{"_index":987,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/VegaService.html":{}}}],["closerightsidenav",{"_index":1051,"title":{"classes/CloseRightSideNav.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closesearch",{"_index":1062,"title":{"classes/CloseSearch.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["closesidenav",{"_index":3770,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["closesnackbar",{"_index":1045,"title":{"classes/CloseSnackbar.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["clsname",{"_index":3938,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["cluster",{"_index":1787,"title":{},"body":{"classes/Data.html":{}}}],["cluster_analyticsmodule",{"_index":193,"title":{},"body":{"modules/AnalyticsModule.html":{},"index.html":{}}}],["cluster_analyticsmodule_providers",{"_index":194,"title":{},"body":{"modules/AnalyticsModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_comparemodule",{"_index":1415,"title":{},"body":{"modules/CompareModule.html":{},"index.html":{}}}],["cluster_comparemodule_declarations",{"_index":1416,"title":{},"body":{"modules/CompareModule.html":{},"index.html":{}}}],["cluster_comparemodule_exports",{"_index":1418,"title":{},"body":{"modules/CompareModule.html":{},"index.html":{}}}],["cluster_comparemodule_imports",{"_index":1417,"title":{},"body":{"modules/CompareModule.html":{},"index.html":{}}}],["cluster_controlpanemodule",{"_index":1673,"title":{},"body":{"modules/ControlPaneModule.html":{},"index.html":{}}}],["cluster_controlpanemodule_declarations",{"_index":1674,"title":{},"body":{"modules/ControlPaneModule.html":{},"index.html":{}}}],["cluster_controlpanemodule_exports",{"_index":1676,"title":{},"body":{"modules/ControlPaneModule.html":{},"index.html":{}}}],["cluster_controlpanemodule_imports",{"_index":1675,"title":{},"body":{"modules/ControlPaneModule.html":{},"index.html":{}}}],["cluster_controlsmodule",{"_index":1690,"title":{},"body":{"modules/ControlsModule.html":{},"index.html":{}}}],["cluster_controlsmodule_declarations",{"_index":1691,"title":{},"body":{"modules/ControlsModule.html":{},"index.html":{}}}],["cluster_controlsmodule_exports",{"_index":1692,"title":{},"body":{"modules/ControlsModule.html":{},"index.html":{}}}],["cluster_debuglogsmodule",{"_index":1859,"title":{},"body":{"modules/DebugLogsModule.html":{},"index.html":{}}}],["cluster_debuglogsmodule_declarations",{"_index":1861,"title":{},"body":{"modules/DebugLogsModule.html":{},"index.html":{}}}],["cluster_debuglogsmodule_exports",{"_index":1862,"title":{},"body":{"modules/DebugLogsModule.html":{},"index.html":{}}}],["cluster_debuglogsmodule_imports",{"_index":1860,"title":{},"body":{"modules/DebugLogsModule.html":{}}}],["cluster_docsmodule",{"_index":2045,"title":{},"body":{"modules/DocsModule.html":{},"index.html":{}}}],["cluster_docsmodule_declarations",{"_index":2047,"title":{},"body":{"modules/DocsModule.html":{},"index.html":{}}}],["cluster_docsmodule_exports",{"_index":2048,"title":{},"body":{"modules/DocsModule.html":{},"index.html":{}}}],["cluster_docsmodule_imports",{"_index":2046,"title":{},"body":{"modules/DocsModule.html":{},"index.html":{}}}],["cluster_docsnavmodule",{"_index":2083,"title":{},"body":{"modules/DocsNavModule.html":{},"index.html":{}}}],["cluster_docsnavmodule_declarations",{"_index":2084,"title":{},"body":{"modules/DocsNavModule.html":{},"index.html":{}}}],["cluster_docsnavmodule_exports",{"_index":2085,"title":{},"body":{"modules/DocsNavModule.html":{},"index.html":{}}}],["cluster_doimodule",{"_index":2143,"title":{},"body":{"modules/DoiModule.html":{},"index.html":{}}}],["cluster_doimodule_declarations",{"_index":2145,"title":{},"body":{"modules/DoiModule.html":{},"index.html":{}}}],["cluster_doimodule_exports",{"_index":2144,"title":{},"body":{"modules/DoiModule.html":{},"index.html":{}}}],["cluster_errormodule",{"_index":2185,"title":{},"body":{"modules/ErrorModule.html":{},"index.html":{}}}],["cluster_errormodule_declarations",{"_index":2186,"title":{},"body":{"modules/ErrorModule.html":{},"index.html":{}}}],["cluster_errormodule_exports",{"_index":2187,"title":{},"body":{"modules/ErrorModule.html":{},"index.html":{}}}],["cluster_fileuploadmodule",{"_index":2277,"title":{},"body":{"modules/FileUploadModule.html":{},"index.html":{}}}],["cluster_fileuploadmodule_declarations",{"_index":4512,"title":{},"body":{"index.html":{}}}],["cluster_fileuploadmodule_exports",{"_index":2278,"title":{},"body":{"modules/FileUploadModule.html":{},"index.html":{}}}],["cluster_fileuploadmodule_fileuploadcomponent_providers",{"_index":2279,"title":{},"body":{"modules/FileUploadModule.html":{},"index.html":{}}}],["cluster_footermodule",{"_index":2413,"title":{},"body":{"modules/FooterModule.html":{},"index.html":{}}}],["cluster_footermodule_declarations",{"_index":2414,"title":{},"body":{"modules/FooterModule.html":{},"index.html":{}}}],["cluster_footermodule_exports",{"_index":2415,"title":{},"body":{"modules/FooterModule.html":{},"index.html":{}}}],["cluster_functionsmodule",{"_index":2475,"title":{},"body":{"modules/FunctionsModule.html":{},"index.html":{}}}],["cluster_functionsmodule_declarations",{"_index":2477,"title":{},"body":{"modules/FunctionsModule.html":{},"index.html":{}}}],["cluster_functionsmodule_exports",{"_index":2476,"title":{},"body":{"modules/FunctionsModule.html":{},"index.html":{}}}],["cluster_homemodule",{"_index":2769,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_homemodule_declarations",{"_index":2770,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_homemodule_exports",{"_index":2772,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_homemodule_imports",{"_index":2771,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_indentedlistmodule",{"_index":2824,"title":{},"body":{"modules/IndentedListModule.html":{},"index.html":{}}}],["cluster_indentedlistmodule_declarations",{"_index":2826,"title":{},"body":{"modules/IndentedListModule.html":{},"index.html":{}}}],["cluster_indentedlistmodule_exports",{"_index":2825,"title":{},"body":{"modules/IndentedListModule.html":{},"index.html":{}}}],["cluster_indentedlistmodule_imports",{"_index":2827,"title":{},"body":{"modules/IndentedListModule.html":{}}}],["cluster_infomodule",{"_index":2897,"title":{},"body":{"modules/InfoModule.html":{},"index.html":{}}}],["cluster_infomodule_declarations",{"_index":2899,"title":{},"body":{"modules/InfoModule.html":{},"index.html":{}}}],["cluster_infomodule_exports",{"_index":2898,"title":{},"body":{"modules/InfoModule.html":{},"index.html":{}}}],["cluster_legendmodule",{"_index":2940,"title":{},"body":{"modules/LegendModule.html":{},"index.html":{}}}],["cluster_legendmodule_declarations",{"_index":2942,"title":{},"body":{"modules/LegendModule.html":{},"index.html":{}}}],["cluster_legendmodule_exports",{"_index":2941,"title":{},"body":{"modules/LegendModule.html":{},"index.html":{}}}],["cluster_legendmodule_imports",{"_index":2943,"title":{},"body":{"modules/LegendModule.html":{},"index.html":{}}}],["cluster_loadingmodule",{"_index":3026,"title":{},"body":{"modules/LoadingModule.html":{},"index.html":{}}}],["cluster_loadingmodule_declarations",{"_index":3028,"title":{},"body":{"modules/LoadingModule.html":{},"index.html":{}}}],["cluster_loadingmodule_exports",{"_index":3027,"title":{},"body":{"modules/LoadingModule.html":{},"index.html":{}}}],["cluster_navbarmodule",{"_index":3193,"title":{},"body":{"modules/NavbarModule.html":{},"index.html":{}}}],["cluster_navbarmodule_declarations",{"_index":3195,"title":{},"body":{"modules/NavbarModule.html":{},"index.html":{}}}],["cluster_navbarmodule_exports",{"_index":3194,"title":{},"body":{"modules/NavbarModule.html":{},"index.html":{}}}],["cluster_navbarmodule_imports",{"_index":3196,"title":{},"body":{"modules/NavbarModule.html":{},"index.html":{}}}],["cluster_navitemmodule",{"_index":3187,"title":{},"body":{"modules/NavItemModule.html":{},"index.html":{}}}],["cluster_navitemmodule_declarations",{"_index":3189,"title":{},"body":{"modules/NavItemModule.html":{},"index.html":{}}}],["cluster_navitemmodule_exports",{"_index":3188,"title":{},"body":{"modules/NavItemModule.html":{},"index.html":{}}}],["cluster_omapcontrolsmodule",{"_index":3232,"title":{},"body":{"modules/OmapControlsModule.html":{},"index.html":{}}}],["cluster_omapcontrolsmodule_declarations",{"_index":3234,"title":{},"body":{"modules/OmapControlsModule.html":{},"index.html":{}}}],["cluster_omapcontrolsmodule_exports",{"_index":3233,"title":{},"body":{"modules/OmapControlsModule.html":{},"index.html":{}}}],["cluster_organtableselectormodule",{"_index":3441,"title":{},"body":{"modules/OrganTableSelectorModule.html":{},"index.html":{}}}],["cluster_organtableselectormodule_declarations",{"_index":3443,"title":{},"body":{"modules/OrganTableSelectorModule.html":{},"index.html":{}}}],["cluster_organtableselectormodule_exports",{"_index":3442,"title":{},"body":{"modules/OrganTableSelectorModule.html":{},"index.html":{}}}],["cluster_playgroundmodule",{"_index":3587,"title":{},"body":{"modules/PlaygroundModule.html":{},"index.html":{}}}],["cluster_playgroundmodule_declarations",{"_index":3588,"title":{},"body":{"modules/PlaygroundModule.html":{},"index.html":{}}}],["cluster_playgroundmodule_exports",{"_index":3589,"title":{},"body":{"modules/PlaygroundModule.html":{},"index.html":{}}}],["cluster_playgroundmodule_imports",{"_index":3590,"title":{},"body":{"modules/PlaygroundModule.html":{},"index.html":{}}}],["cluster_reportmodule",{"_index":3605,"title":{},"body":{"modules/ReportModule.html":{},"index.html":{}}}],["cluster_reportmodule_declarations",{"_index":3606,"title":{},"body":{"modules/ReportModule.html":{},"index.html":{}}}],["cluster_reportmodule_exports",{"_index":3607,"title":{},"body":{"modules/ReportModule.html":{},"index.html":{}}}],["cluster_reportmodule_imports",{"_index":3608,"title":{},"body":{"modules/ReportModule.html":{}}}],["cluster_rootmodule",{"_index":3618,"title":{},"body":{"modules/RootModule.html":{},"index.html":{}}}],["cluster_rootmodule_declarations",{"_index":3621,"title":{},"body":{"modules/RootModule.html":{},"index.html":{}}}],["cluster_rootmodule_exports",{"_index":3619,"title":{},"body":{"modules/RootModule.html":{},"index.html":{}}}],["cluster_rootmodule_imports",{"_index":3620,"title":{},"body":{"modules/RootModule.html":{}}}],["cluster_searchmodule",{"_index":3660,"title":{},"body":{"modules/SearchModule.html":{},"index.html":{}}}],["cluster_searchmodule_declarations",{"_index":3661,"title":{},"body":{"modules/SearchModule.html":{},"index.html":{}}}],["cluster_searchmodule_exports",{"_index":3662,"title":{},"body":{"modules/SearchModule.html":{},"index.html":{}}}],["cluster_sidenavheadermodule",{"_index":3782,"title":{},"body":{"modules/SidenavHeaderModule.html":{},"index.html":{}}}],["cluster_sidenavheadermodule_declarations",{"_index":3783,"title":{},"body":{"modules/SidenavHeaderModule.html":{},"index.html":{}}}],["cluster_sidenavheadermodule_exports",{"_index":3784,"title":{},"body":{"modules/SidenavHeaderModule.html":{},"index.html":{}}}],["cluster_sidenavmodule",{"_index":3787,"title":{},"body":{"modules/SidenavModule.html":{},"index.html":{}}}],["cluster_sidenavmodule_declarations",{"_index":3788,"title":{},"body":{"modules/SidenavModule.html":{},"index.html":{}}}],["cluster_sidenavmodule_exports",{"_index":3789,"title":{},"body":{"modules/SidenavModule.html":{},"index.html":{}}}],["cluster_tablenestedmenumodule",{"_index":3920,"title":{},"body":{"modules/TableNestedMenuModule.html":{},"index.html":{}}}],["cluster_tablenestedmenumodule_declarations",{"_index":3921,"title":{},"body":{"modules/TableNestedMenuModule.html":{},"index.html":{}}}],["cluster_tablenestedmenumodule_exports",{"_index":3922,"title":{},"body":{"modules/TableNestedMenuModule.html":{},"index.html":{}}}],["cluster_trackingpopupmodule",{"_index":3974,"title":{},"body":{"modules/TrackingPopupModule.html":{},"index.html":{}}}],["cluster_trackingpopupmodule_declarations",{"_index":3975,"title":{},"body":{"modules/TrackingPopupModule.html":{},"index.html":{}}}],["cluster_trackingpopupmodule_exports",{"_index":3976,"title":{},"body":{"modules/TrackingPopupModule.html":{},"index.html":{}}}],["cluster_treemodule",{"_index":4013,"title":{},"body":{"modules/TreeModule.html":{},"index.html":{}}}],["cluster_treemodule_declarations",{"_index":4015,"title":{},"body":{"modules/TreeModule.html":{},"index.html":{}}}],["cluster_treemodule_exports",{"_index":4014,"title":{},"body":{"modules/TreeModule.html":{},"index.html":{}}}],["cluster_uploadmodule",{"_index":4321,"title":{},"body":{"modules/UploadModule.html":{},"index.html":{}}}],["cluster_uploadmodule_declarations",{"_index":4324,"title":{},"body":{"modules/UploadModule.html":{},"index.html":{}}}],["cluster_uploadmodule_exports",{"_index":4323,"title":{},"body":{"modules/UploadModule.html":{},"index.html":{}}}],["cluster_uploadmodule_imports",{"_index":4322,"title":{},"body":{"modules/UploadModule.html":{}}}],["cns",{"_index":2370,"title":{},"body":{"components/FooterComponent.html":{}}}],["color",{"_index":11,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["colors",{"_index":3650,"title":{},"body":{"classes/Scales.html":{}}}],["column",{"_index":2680,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["columns",{"_index":3509,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["colums",{"_index":3463,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["command",{"_index":240,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["common",{"_index":2613,"title":{},"body":{"components/HomeComponent.html":{}}}],["commonmodule",{"_index":1422,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{}}}],["company",{"_index":2402,"title":{},"body":{"components/FooterComponent.html":{}}}],["comparator",{"_index":61,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["comparatorid",{"_index":63,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["comparatorname",{"_index":62,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["compare",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["compare'},{'name",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["compare.component",{"_index":1424,"title":{},"body":{"modules/CompareModule.html":{}}}],["compare.component.html",{"_index":1073,"title":{},"body":{"components/CompareComponent.html":{}}}],["compare.component.scss",{"_index":1072,"title":{},"body":{"components/CompareComponent.html":{}}}],["comparecomponent",{"_index":347,"title":{"components/CompareComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["comparedata",{"_index":1091,"title":{"interfaces/CompareData.html":{}},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["comparedata.find((c",{"_index":2972,"title":{},"body":{"injectables/LegendService.html":{}}}],["comparedata.length",{"_index":2971,"title":{},"body":{"injectables/LegendService.html":{}}}],["comparedd",{"_index":134,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["comparemodule",{"_index":1414,"title":{"modules/CompareModule.html":{}},"body":{"modules/CompareModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["compareopen",{"_index":4159,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["comparereport",{"_index":1402,"title":{"interfaces/CompareReport.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["comparereportdata",{"_index":1410,"title":{"interfaces/CompareReportData.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["comparesheets",{"_index":1089,"title":{},"body":{"components/CompareComponent.html":{}}}],["comparison",{"_index":2493,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"miscellaneous/enumerations.html":{}}}],["comparisondetails",{"_index":1883,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["compiler",{"_index":3153,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["component",{"_index":250,"title":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["component_template",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["componentactive",{"_index":3269,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["components",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["components/compare/compare.module",{"_index":3630,"title":{},"body":{"modules/RootModule.html":{}}}],["components/controls/controls.module",{"_index":1682,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["components/debug",{"_index":3628,"title":{},"body":{"modules/RootModule.html":{}}}],["components/doi/doi.module",{"_index":3638,"title":{},"body":{"modules/RootModule.html":{}}}],["components/error/error.module",{"_index":3632,"title":{},"body":{"modules/RootModule.html":{}}}],["components/file",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/PlaygroundModule.html":{}}}],["components/footer/footer.module",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"modules/DocsModule.html":{}}}],["components/home/home.component",{"_index":497,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/home/home.module",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["components/indented",{"_index":3626,"title":{},"body":{"modules/RootModule.html":{}}}],["components/info/info.module",{"_index":3639,"title":{},"body":{"modules/RootModule.html":{}}}],["components/legend/legend.module",{"_index":1683,"title":{},"body":{"modules/ControlPaneModule.html":{},"modules/RootModule.html":{}}}],["components/nav",{"_index":3202,"title":{},"body":{"modules/NavbarModule.html":{}}}],["components/omap",{"_index":1684,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["components/organ",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["components/report/report.module",{"_index":3625,"title":{},"body":{"modules/RootModule.html":{}}}],["components/sidenav/sidenav.module",{"_index":1687,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["components/table",{"_index":3207,"title":{},"body":{"modules/NavbarModule.html":{},"modules/RootModule.html":{}}}],["components/tracking",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/upload/upload.module",{"_index":3596,"title":{},"body":{"modules/PlaygroundModule.html":{}}}],["compute",{"_index":4499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["computes",{"_index":4625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["con",{"_index":2743,"title":{},"body":{"components/HomeComponent.html":{}}}],["con.desc",{"_index":2647,"title":{},"body":{"components/HomeComponent.html":{}}}],["con.mail",{"_index":2648,"title":{},"body":{"components/HomeComponent.html":{}}}],["con.name",{"_index":2646,"title":{},"body":{"components/HomeComponent.html":{}}}],["conditions",{"_index":2380,"title":{},"body":{"components/FooterComponent.html":{}}}],["config",{"_index":183,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["config.discrepencyid",{"_index":1615,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["config.discrepencylabel",{"_index":1604,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["config.duplicateid",{"_index":1617,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["config.json",{"_index":1450,"title":{},"body":{"injectables/ConfigService.html":{},"components/VisControlsComponent.html":{}}}],["config.json').pipe(take(1",{"_index":1455,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["config.service.ts",{"_index":1439,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:10",{"_index":1453,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:14",{"_index":1469,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:25",{"_index":1465,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:36",{"_index":1446,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:9",{"_index":1456,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config['mastersheetlink",{"_index":1971,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["configs",{"_index":3322,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["configservice",{"_index":431,"title":{"injectables/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["configservice.config$.topromise()]).then",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":739,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/VegaService.html":{}}}],["configurationoptions",{"_index":1386,"title":{"interfaces/ConfigurationOptions.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["configurations",{"_index":4034,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["connection",{"_index":2887,"title":{},"body":{"components/InfoComponent.html":{}}}],["consent",{"_index":1474,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consent.service",{"_index":221,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["consentchange",{"_index":1475,"title":{},"body":{"injectables/ConsentService.html":{}}}],["consentservice",{"_index":195,"title":{"injectables/ConsentService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["consentservice.consentchange.subscribe((consent",{"_index":2517,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["consentservice.setconsent(this.loadconsent",{"_index":3045,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["console.log('bm",{"_index":1637,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["console.log(data",{"_index":3731,"title":{},"body":{"injectables/SheetService.html":{}}}],["console.log(err",{"_index":1640,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["console.log(error",{"_index":962,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["console.log(item",{"_index":2133,"title":{},"body":{"components/DoiComponent.html":{}}}],["consortia",{"_index":2642,"title":{},"body":{"components/HomeComponent.html":{}}}],["consortium",{"_index":2377,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["const",{"_index":30,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"modules/MousePositionTrackerModule.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"classes/TNode.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["constomize",{"_index":4638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":3022,"title":{},"body":{"components/LoadingComponent.html":{}}}],["constructor(as_ct",{"_index":4258,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["constructor(cache",{"_index":4252,"title":{},"body":{"classes/UpdateGetFromCache.html":{}}}],["constructor(comparedata",{"_index":2193,"title":{},"body":{"classes/FetchCompareData.html":{}}}],["constructor(config",{"_index":3807,"title":{},"body":{"classes/Signals.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateConfig.html":{},"classes/UpdateOmapConfig.html":{}}}],["constructor(configservice",{"_index":1942,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["constructor(consentservice",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["constructor(currentsheet",{"_index":1721,"title":{},"body":{"classes/Data.html":{}}}],["constructor(data",{"_index":2115,"title":{},"body":{"components/DoiComponent.html":{},"classes/FetchPlaygroundUploadData.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdatePlaygroundData.html":{}}}],["constructor(discrepencystructures",{"_index":1907,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DuplicateId.html":{}}}],["constructor(elementref",{"_index":3943,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["constructor(error",{"_index":2523,"title":{},"body":{"classes/HasError.html":{}}}],["constructor(fb",{"_index":1094,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["constructor(ga",{"_index":4410,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["constructor(http",{"_index":1444,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["constructor(i",{"_index":1871,"title":{},"body":{"classes/DeleteCompareSheet.html":{}}}],["constructor(id",{"_index":3878,"title":{},"body":{"classes/TNode.html":{}}}],["constructor(indentservice",{"_index":2794,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["constructor(ls",{"_index":2910,"title":{},"body":{"components/LegendComponent.html":{}}}],["constructor(message",{"_index":3613,"title":{},"body":{"classes/ReportMultiLog.html":{}}}],["constructor(mode",{"_index":4269,"title":{},"body":{"classes/UpdateMode.html":{}}}],["constructor(name",{"_index":505,"title":{},"body":{"classes/BMNode.html":{},"classes/ILNode.html":{}}}],["constructor(nodes",{"_index":4238,"title":{},"body":{"classes/UpdateBimodal.html":{}}}],["constructor(organslist",{"_index":4281,"title":{},"body":{"classes/UpdateSelectedOrgansBeforeFilter.html":{}}}],["constructor(private",{"_index":775,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/ConfigService.html":{},"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["constructor(public",{"_index":1039,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"classes/HasError.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["constructor(reportdata",{"_index":4278,"title":{},"body":{"classes/UpdateReport.html":{}}}],["constructor(searchstructures",{"_index":1920,"title":{},"body":{"classes/DoSearch.html":{}}}],["constructor(sheet",{"_index":2190,"title":{},"body":{"classes/FetchAllOrganData.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateSheet.html":{}}}],["constructor(spec",{"_index":4286,"title":{},"body":{"classes/UpdateVegaSpec.html":{}}}],["constructor(store",{"_index":720,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["constructor(structure",{"_index":101,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["constructor(text",{"_index":1065,"title":{},"body":{"classes/CloseLoading.html":{},"classes/OpenLoading.html":{},"classes/OpenSnackbar.html":{},"classes/UpdateLoadingText.html":{}}}],["constructor(type",{"_index":3598,"title":{},"body":{"classes/ReportLog.html":{}}}],["constructor(version",{"_index":2196,"title":{},"body":{"classes/FetchDataFromAssets.html":{}}}],["constructor(view",{"_index":4289,"title":{},"body":{"classes/UpdateVegaView.html":{}}}],["constructor(width",{"_index":4255,"title":{},"body":{"classes/UpdateGraphWidth.html":{}}}],["contact",{"_index":1645,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/ErrorComponent.html":{}}}],["container",{"_index":1298,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{}}}],["contains",{"_index":3702,"title":{},"body":{"injectables/SheetService.html":{},"interfaces/TreeStateModel.html":{}}}],["content",{"_index":1275,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["contentboxsize",{"_index":2583,"title":{},"body":{"components/HomeComponent.html":{}}}],["contextmenu(obj",{"_index":3510,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["contirbutors",{"_index":2529,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["contributors",{"_index":2632,"title":{},"body":{"components/HomeComponent.html":{}}}],["control",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/RootModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["controller",{"_index":3486,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["controlpanecomponent",{"_index":349,"title":{"components/ControlPaneComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["controlpanemodule",{"_index":1672,"title":{"modules/ControlPaneModule.html":{}},"body":{"modules/ControlPaneModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["controlpaneopen",{"_index":4020,"title":{},"body":{"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["controls",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["controls'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component",{"_index":1694,"title":{},"body":{"modules/ControlsModule.html":{},"modules/OmapControlsModule.html":{}}}],["controls.component.html",{"_index":3215,"title":{},"body":{"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component.scss",{"_index":3214,"title":{},"body":{"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component.ts",{"_index":3213,"title":{},"body":{"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component.ts:106",{"_index":4422,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:11",{"_index":3219,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["controls.component.ts:12",{"_index":3218,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["controls.component.ts:13",{"_index":4412,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:14",{"_index":3220,"title":{},"body":{"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component.ts:15",{"_index":4413,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":3222,"title":{},"body":{"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":4414,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:21",{"_index":4411,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":4426,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":4420,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":4417,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:40",{"_index":4419,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:49",{"_index":4424,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:60",{"_index":4423,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:71",{"_index":4425,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:82",{"_index":4415,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:90",{"_index":4416,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.component.ts:98",{"_index":4418,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["controls.module",{"_index":1686,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["controls.module.ts",{"_index":3235,"title":{},"body":{"modules/OmapControlsModule.html":{}}}],["controls/omap",{"_index":1685,"title":{},"body":{"modules/ControlPaneModule.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{}}}],["controls/readme.md",{"_index":4676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controlsmodule",{"_index":1677,"title":{"modules/ControlsModule.html":{}},"body":{"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"index.html":{},"modules.html":{}}}],["controlvalueaccessor",{"_index":2214,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["coordinate",{"_index":2614,"title":{},"body":{"components/HomeComponent.html":{}}}],["coordinates",{"_index":738,"title":{},"body":{"injectables/BimodalService.html":{}}}],["copy",{"_index":2166,"title":{},"body":{"components/ErrorComponent.html":{}}}],["copyright",{"_index":2406,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyrightyear",{"_index":1928,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["core",{"_index":2643,"title":{},"body":{"components/HomeComponent.html":{}}}],["could’ve",{"_index":2164,"title":{},"body":{"components/ErrorComponent.html":{}}}],["count",{"_index":106,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/HomeComponent.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["cover",{"_index":2694,"title":{},"body":{"components/HomeComponent.html":{}}}],["creat",{"_index":4344,"title":{},"body":{"injectables/VegaService.html":{}}}],["create",{"_index":534,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Data.html":{},"classes/Legends.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["create(config",{"_index":3809,"title":{},"body":{"classes/Signals.html":{}}}],["create(currentsheet",{"_index":1726,"title":{},"body":{"classes/Data.html":{}}}],["createcompareform",{"_index":1082,"title":{},"body":{"components/CompareComponent.html":{}}}],["createcompareform(link",{"_index":1114,"title":{},"body":{"components/CompareComponent.html":{}}}],["created",{"_index":2812,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["creates",{"_index":1738,"title":{},"body":{"classes/Data.html":{},"classes/Marks.html":{},"classes/Scales.html":{}}}],["creation",{"_index":4632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":670,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["cs",{"_index":1499,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["cscontrols",{"_index":1093,"title":{},"body":{"components/CompareComponent.html":{}}}],["csv",{"_index":1248,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["csv/xlsx",{"_index":4314,"title":{},"body":{"components/UploadComponent.html":{}}}],["csvfileurl",{"_index":3698,"title":{},"body":{"injectables/SheetService.html":{}}}],["csvurl",{"_index":1112,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ct",{"_index":94,"title":{"interfaces/CT.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ct_b",{"_index":117,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["ct_b_organwise",{"_index":121,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["ct_blue",{"_index":33,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["ct_bm",{"_index":786,"title":{},"body":{"injectables/BimodalService.html":{}}}],["ct_bm[node.organname",{"_index":939,"title":{},"body":{"injectables/BimodalService.html":{}}}],["ct_bm_links",{"_index":785,"title":{},"body":{"injectables/BimodalService.html":{}}}],["ct_id",{"_index":127,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["ct_name",{"_index":126,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["ctrl",{"_index":3549,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["ctsizeoptions",{"_index":2423,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["ctwithnob",{"_index":1006,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["ctwithnolink",{"_index":1001,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["current",{"_index":736,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["currentcolor",{"_index":4456,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["currently",{"_index":3692,"title":{},"body":{"injectables/SheetService.html":{}}}],["currentsheet",{"_index":1723,"title":{},"body":{"classes/Data.html":{},"components/DebugLogsComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["currentsheet.display",{"_index":2861,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["cursor",{"_index":661,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/NavItemComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["curve",{"_index":1807,"title":{},"body":{"classes/Data.html":{}}}],["custom",{"_index":4366,"title":{},"body":{"injectables/VegaService.html":{}}}],["cut",{"_index":2740,"title":{},"body":{"components/HomeComponent.html":{}}}],["d",{"_index":2467,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["d8d8d8",{"_index":3185,"title":{},"body":{"components/NavItemComponent.html":{}}}],["dark",{"_index":2004,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["darkblue",{"_index":614,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["darken($color",{"_index":2464,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["data",{"_index":331,"title":{"classes/Data.html":{}},"body":{"components/AppComponent.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data(currentsheet",{"_index":1762,"title":{},"body":{"classes/Data.html":{}}}],["data.create(currentsheet",{"_index":4394,"title":{},"body":{"injectables/VegaService.html":{}}}],["data.csvurl",{"_index":3567,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["data.data",{"_index":2326,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["data.foreach((row",{"_index":2843,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{}}}],["data.formdata",{"_index":3571,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["data.getfromcache",{"_index":3352,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["data.gid",{"_index":3563,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["data.length",{"_index":1578,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["data.omaporgans",{"_index":3357,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["data.organs",{"_index":3355,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["data.push",{"_index":1184,"title":{},"body":{"components/CompareComponent.html":{}}}],["data.sheetid",{"_index":3565,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["data:text/json;charset=utf",{"_index":4444,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["data[0].anatomical_structures[0].id",{"_index":2838,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["data[0].anatomical_structures[0].name",{"_index":4063,"title":{},"body":{"injectables/TreeService.html":{}}}],["data[0].anatomical_structures[0].notes",{"_index":4064,"title":{},"body":{"injectables/TreeService.html":{}}}],["data[data.findindex((i",{"_index":993,"title":{},"body":{"injectables/BimodalService.html":{}}}],["dataelement.symbol",{"_index":3360,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["dataelement.version?.find((v",{"_index":3405,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["dataelement.version?.foreach((v",{"_index":3359,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["dataelement?.version?.foreach((v",{"_index":3362,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["datalookup",{"_index":1622,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["datalookup[e.ontologyid",{"_index":1629,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["datasets",{"_index":2368,"title":{},"body":{"components/FooterComponent.html":{}}}],["datasource",{"_index":2321,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"components/OrganTableSelectorComponent.html":{}}}],["datasource.data.length",{"_index":3391,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["dataversion",{"_index":2308,"title":{},"body":{"interfaces/FlatNode.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"injectables/SheetService.html":{},"miscellaneous/functions.html":{}}}],["date().getfullyear",{"_index":1952,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["datum",{"_index":709,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.btype",{"_index":665,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.children",{"_index":3868,"title":{},"body":{"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.color",{"_index":673,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.datum.children",{"_index":4010,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["datum.datum.id",{"_index":611,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.group",{"_index":675,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.id",{"_index":683,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Data.html":{},"classes/Signals.html":{}}}],["datum.isnew",{"_index":671,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.label",{"_index":681,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.name",{"_index":674,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.ontologyid",{"_index":679,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.pathcolor",{"_index":642,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.problem",{"_index":688,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.source.group",{"_index":640,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.source.id",{"_index":638,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.source.pathcolor",{"_index":652,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.source.references",{"_index":3862,"title":{},"body":{"classes/Signals.html":{}}}],["datum.sources",{"_index":3875,"title":{},"body":{"classes/Signals.html":{}}}],["datum.target.group",{"_index":628,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Signals.html":{}}}],["datum.target.id",{"_index":643,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["datum.target.pathcolor",{"_index":653,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["datum.target.references",{"_index":3861,"title":{},"body":{"classes/Signals.html":{}}}],["datum.targets",{"_index":3874,"title":{},"body":{"classes/Signals.html":{}}}],["datum.type",{"_index":3867,"title":{},"body":{"classes/Signals.html":{}}}],["dd",{"_index":137,"title":{"interfaces/DD.html":{}},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["de.symbol",{"_index":3347,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["de.version?.foreach((v",{"_index":3346,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["debug",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["debuglogopen",{"_index":4160,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["debuglogscomponent",{"_index":352,"title":{"components/DebugLogsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["debuglogsmodule",{"_index":1858,"title":{"modules/DebugLogsModule.html":{}},"body":{"modules/DebugLogsModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["declarations",{"_index":189,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["declare",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["decoration",{"_index":2039,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["decorators",{"_index":1532,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/DoiComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{},"injectables/LogsState.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"injectables/TreeService.html":{}}}],["deep",{"_index":1271,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["default",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"classes/BMNode.html":{},"injectables/BimodalService.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":3078,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["defined",{"_index":207,"title":{},"body":{"modules/AnalyticsModule.html":{},"components/AppComponent.html":{},"classes/BMNode.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["degree",{"_index":87,"title":{"interfaces/Degree.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["delay",{"_index":2755,"title":{},"body":{"components/HomeComponent.html":{},"components/LegendComponent.html":{}}}],["delete",{"_index":1218,"title":{},"body":{"components/CompareComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["deletecomparesheet",{"_index":1869,"title":{"classes/DeleteCompareSheet.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["denote",{"_index":3840,"title":{},"body":{"classes/Signals.html":{}}}],["denotes",{"_index":4031,"title":{},"body":{"injectables/TreeService.html":{}}}],["dependencies",{"_index":187,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["deprecated",{"_index":2173,"title":{},"body":{"components/ErrorComponent.html":{}}}],["depricated",{"_index":1730,"title":{},"body":{"classes/Data.html":{},"classes/Marks.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["deps",{"_index":248,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{}}}],["depth",{"_index":1791,"title":{},"body":{"classes/Data.html":{}}}],["desc",{"_index":1189,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DocsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":734,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["deselect",{"_index":3395,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["deselected",{"_index":4382,"title":{},"body":{"injectables/VegaService.html":{}}}],["desktops",{"_index":2730,"title":{},"body":{"components/HomeComponent.html":{}}}],["details",{"_index":2138,"title":{},"body":{"components/DoiComponent.html":{}}}],["determins",{"_index":3685,"title":{},"body":{"injectables/SheetService.html":{}}}],["develop",{"_index":2612,"title":{},"body":{"components/HomeComponent.html":{}}}],["developed",{"_index":2369,"title":{},"body":{"components/FooterComponent.html":{}}}],["developer",{"_index":4583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developing",{"_index":4658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["developmentmode",{"_index":228,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["devices",{"_index":2723,"title":{},"body":{"components/HomeComponent.html":{}}}],["diagonal",{"_index":1796,"title":{},"body":{"classes/Data.html":{}}}],["dialog",{"_index":3325,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["dialogref",{"_index":3270,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["diamond",{"_index":667,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["didn't",{"_index":2174,"title":{},"body":{"components/ErrorComponent.html":{}}}],["didn\\'t",{"_index":2183,"title":{},"body":{"components/ErrorComponent.html":{}}}],["different",{"_index":2610,"title":{},"body":{"components/HomeComponent.html":{},"injectables/TreeService.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":1323,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["directive",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["directives",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["director",{"_index":4550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":971,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["disabled",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/NavItemComponent.html":{}}}],["disclaimer",{"_index":1295,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["discrepency",{"_index":560,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/VisControlsComponent.html":{}}}],["discrepency_signal",{"_index":3877,"title":{},"body":{"classes/Signals.html":{}}}],["discrepencyid",{"_index":1368,"title":{"classes/DiscrepencyId.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["discrepencyid(discrepencyids",{"_index":1616,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencyids",{"_index":1614,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencylabel",{"_index":1367,"title":{"classes/DiscrepencyLabel.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["discrepencylabel(discrepencylabels",{"_index":1613,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencylabels",{"_index":1603,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencyset",{"_index":1605,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencyset.add",{"_index":1608,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["discrepencystructure",{"_index":114,"title":{"interfaces/DiscrepencyStructure.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["discrepencystructures",{"_index":1906,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["discussion",{"_index":1656,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["dismiss",{"_index":3939,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["dispatch",{"_index":4204,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["dispatch(new",{"_index":4205,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["display",{"_index":1299,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/Structure.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["displayed",{"_index":4149,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["displayedcolumns",{"_index":3271,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["displaying",{"_index":2606,"title":{},"body":{"components/HomeComponent.html":{}}}],["distance",{"_index":787,"title":{},"body":{"injectables/BimodalService.html":{},"components/VisControlsComponent.html":{}}}],["distances",{"_index":740,"title":{},"body":{"injectables/BimodalService.html":{}}}],["distancey",{"_index":789,"title":{},"body":{"injectables/BimodalService.html":{}}}],["div",{"_index":2938,"title":{},"body":{"components/LegendComponent.html":{}}}],["docs",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["docs'},{'name",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["docs.component",{"_index":2051,"title":{},"body":{"modules/DocsModule.html":{}}}],["docs.component.html",{"_index":1926,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs.component.scss",{"_index":1925,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs/:id",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["docscomponent",{"_index":354,"title":{"components/DocsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["docsdata",{"_index":1929,"title":{},"body":{"components/DocsComponent.html":{},"injectables/DocsService.html":{}}}],["docsmodule",{"_index":423,"title":{"modules/DocsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DocsModule.html":{},"index.html":{},"modules.html":{}}}],["docsnavcomponent",{"_index":356,"title":{"components/DocsNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["docsnavmodule",{"_index":2049,"title":{"modules/DocsNavModule.html":{}},"body":{"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"index.html":{},"modules.html":{}}}],["docsservice",{"_index":1930,"title":{"injectables/DocsService.html":{}},"body":{"components/DocsComponent.html":{},"injectables/DocsService.html":{}}}],["doctors",{"_index":2639,"title":{},"body":{"components/HomeComponent.html":{}}}],["document",{"_index":3131,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{}}}],["document).body",{"_index":3161,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["document.body.appendchild(element",{"_index":4448,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["document.body.removechild(element",{"_index":4450,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["document.createelement('a",{"_index":4442,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["document.getelementbyid('actionsheight",{"_index":2576,"title":{},"body":{"components/HomeComponent.html":{}}}],["document.getelementsbytagname('body')[0].clientheight",{"_index":4112,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["document.title",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2003,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["doesformhaveerror",{"_index":1083,"title":{},"body":{"components/CompareComponent.html":{}}}],["doi",{"_index":632,"title":{"interfaces/DOI.html":{}},"body":{"classes/BimodalMarkGroup.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"components/DoiComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["doi'},{'name",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["doi.component",{"_index":2147,"title":{},"body":{"modules/DoiModule.html":{}}}],["doi.component.html",{"_index":2112,"title":{},"body":{"components/DoiComponent.html":{}}}],["doi.component.scss",{"_index":2111,"title":{},"body":{"components/DoiComponent.html":{}}}],["doi/references",{"_index":4383,"title":{},"body":{"injectables/VegaService.html":{}}}],["doicomponent",{"_index":359,"title":{"components/DoiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["doimodule",{"_index":2142,"title":{"modules/DoiModule.html":{}},"body":{"modules/DoiModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["dom",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["domain",{"_index":2608,"title":{},"body":{"components/HomeComponent.html":{},"classes/Scales.html":{}}}],["domsanitizer",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":1238,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["dosearch",{"_index":1913,"title":{"classes/DoSearch.html":{}},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["download",{"_index":3768,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["downloadable",{"_index":4626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["downloadfn",{"_index":3771,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["dragdropmodule",{"_index":3635,"title":{},"body":{"modules/RootModule.html":{}}}],["drawer",{"_index":2024,"title":{},"body":{"components/DocsComponent.html":{}}}],["drop",{"_index":3637,"title":{},"body":{"modules/RootModule.html":{}}}],["dropdown",{"_index":3423,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["due",{"_index":2161,"title":{},"body":{"components/ErrorComponent.html":{}}}],["duplicate",{"_index":565,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"injectables/IndentedListService.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/VisControlsComponent.html":{}}}],["duplicateid",{"_index":1369,"title":{"classes/DuplicateId.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["duplicateid([...duplicateid",{"_index":1630,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicateid.filter((e",{"_index":1628,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicateid.reduce",{"_index":1623,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicateidset",{"_index":1618,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicateidset.add",{"_index":1621,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicateidstree",{"_index":1627,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["duplicates",{"_index":4453,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["duration",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["during",{"_index":4630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dx",{"_index":694,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["dy",{"_index":696,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["e",{"_index":1625,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["e.urltitle).indexof(title",{"_index":2104,"title":{},"body":{"injectables/DocsService.html":{}}}],["e16156",{"_index":919,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["e1e1e1",{"_index":2033,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["e3e3e3",{"_index":2689,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["e41a1c",{"_index":32,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["e4e4e4",{"_index":4316,"title":{},"body":{"components/UploadComponent.html":{}}}],["each",{"_index":2496,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/SheetService.html":{}}}],["eaeaea",{"_index":2732,"title":{},"body":{"components/HomeComponent.html":{}}}],["eagerly_loaded_services",{"_index":229,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/variables.html":{}}}],["ease",{"_index":2708,"title":{},"body":{"components/HomeComponent.html":{}}}],["ececec",{"_index":1264,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsNavComponent.html":{}}}],["edgedata",{"_index":994,"title":{},"body":{"injectables/BimodalService.html":{}}}],["edgedata.values",{"_index":996,"title":{},"body":{"injectables/BimodalService.html":{}}}],["edges",{"_index":623,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["edit",{"_index":3381,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["editing",{"_index":3717,"title":{},"body":{"injectables/SheetService.html":{}}}],["efefef",{"_index":3183,"title":{},"body":{"components/NavItemComponent.html":{}}}],["el",{"_index":3140,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["element.click",{"_index":4449,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["element.display",{"_index":3414,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["element.imagingmethod",{"_index":3418,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["element.name",{"_index":1467,"title":{},"body":{"injectables/ConfigService.html":{},"components/OrganTableSelectorComponent.html":{}}}],["element.omapid",{"_index":3420,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["element.setattribute('download",{"_index":4446,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["element.setattribute('href",{"_index":4443,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["element.style.display",{"_index":4447,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["element.tissuepreservationmethod",{"_index":3419,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["element.version.length",{"_index":1464,"title":{},"body":{"injectables/ConfigService.html":{}}}],["element.version?.filter((version",{"_index":1461,"title":{},"body":{"injectables/ConfigService.html":{}}}],["element.version?.length",{"_index":1468,"title":{},"body":{"injectables/ConfigService.html":{}}}],["element.version[0].viewvalue",{"_index":3416,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["elementref",{"_index":2564,"title":{},"body":{"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{}}}],["elementref.nativeelement",{"_index":3962,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["elements",{"_index":2484,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/UIStateModel.html":{}}}],["elevation",{"_index":1282,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["ellen",{"_index":4571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ellenmq@indiana.edu",{"_index":4576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elsewhere",{"_index":3818,"title":{},"body":{"classes/Signals.html":{}}}],["emit",{"_index":3324,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"injectables/VegaService.html":{}}}],["emitevent",{"_index":1171,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["emitted",{"_index":2495,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["empty",{"_index":4225,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["enabled",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enables",{"_index":4111,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["encode",{"_index":589,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["encodeuricomponent(sjson",{"_index":4445,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["end",{"_index":4457,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["ending",{"_index":2171,"title":{},"body":{"components/ErrorComponent.html":{}}}],["enents",{"_index":2486,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["engineer",{"_index":4539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":590,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{}}}],["entering",{"_index":3487,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["entities",{"_index":4620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":3679,"title":{},"body":{"injectables/SheetService.html":{}}}],["entitywithnootherentity",{"_index":1005,"title":{"interfaces/EntityWithNoOtherEntity.html":{}},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["entries",{"_index":2586,"title":{},"body":{"components/HomeComponent.html":{}}}],["entry",{"_index":3952,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["enum",{"_index":39,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["enumerations",{"_index":4475,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.asctbapiurl",{"_index":4665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.googleanalyticsid",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["environment.production",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.tag",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["environments/environment",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["envision",{"_index":2366,"title":{},"body":{"components/FooterComponent.html":{}}}],["err",{"_index":964,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["error",{"_index":766,"title":{"interfaces/Error.html":{}},"body":{"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DoiComponent.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ExportVega.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Response.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error'},{'name",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["error.component",{"_index":2189,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.component.html",{"_index":2159,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.scss",{"_index":2158,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.msg",{"_index":2178,"title":{},"body":{"components/ErrorComponent.html":{},"interfaces/UIStateModel.html":{}}}],["error2",{"_index":4102,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["error2.name",{"_index":4103,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["error2.status",{"_index":4104,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["errorcomponent",{"_index":361,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["errormodule",{"_index":2184,"title":{"modules/ErrorModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["errors",{"_index":2162,"title":{},"body":{"components/ErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":970,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["eslint/explicit",{"_index":3157,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["eslint/no",{"_index":974,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["event",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/ControlPaneComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"modules/MousePositionTrackerModule.html":{},"components/OmapControlsComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Signals.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["event.stoppropagation",{"_index":4439,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["event.target",{"_index":2255,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.urlafterredirects",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["event.value",{"_index":2448,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["event['organsonly",{"_index":3224,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["event['proteinsonly",{"_index":3226,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["eventemitter",{"_index":1100,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["events",{"_index":1984,"title":{},"body":{"components/DocsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"modules/MousePositionTrackerModule.html":{},"classes/Signals.html":{},"interfaces/TreeStateModel.html":{}}}],["events.subscribe((data",{"_index":3148,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["example",{"_index":2169,"title":{},"body":{"components/ErrorComponent.html":{},"components/HomeComponent.html":{}}}],["expand_more",{"_index":2603,"title":{},"body":{"components/HomeComponent.html":{},"components/IndentedListComponent.html":{}}}],["expandable",{"_index":2288,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["expansion",{"_index":1280,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["experimental",{"_index":1222,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["experts",{"_index":2609,"title":{},"body":{"components/HomeComponent.html":{}}}],["explicit",{"_index":975,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["explore",{"_index":4636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":29,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["exportcontrols",{"_index":4405,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["exportcontrols(event",{"_index":4421,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["exported",{"_index":4634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exports",{"_index":192,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["exportvega",{"_index":2156,"title":{"interfaces/ExportVega.html":{}},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Response.html":{}}}],["expr",{"_index":1810,"title":{},"body":{"classes/Data.html":{}}}],["extends",{"_index":6,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["exteral",{"_index":3680,"title":{},"body":{"injectables/SheetService.html":{}}}],["external",{"_index":2489,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["extra",{"_index":2729,"title":{},"body":{"components/HomeComponent.html":{}}}],["extralinks",{"_index":1372,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["f2f2f2",{"_index":2031,"title":{},"body":{"components/DocsComponent.html":{}}}],["f44336",{"_index":1297,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["f4f4f4",{"_index":2082,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["f5f5f5",{"_index":2466,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["fa",{"_index":2403,"title":{},"body":{"components/FooterComponent.html":{}}}],["faarrowleft",{"_index":2063,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["faarrowright",{"_index":2064,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["fachevronright",{"_index":1931,"title":{},"body":{"components/DocsComponent.html":{}}}],["factory",{"_index":3038,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["fadna",{"_index":2424,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["faenvelope",{"_index":1932,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["fafacebooksquare",{"_index":2340,"title":{},"body":{"components/FooterComponent.html":{}}}],["fafafa",{"_index":672,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{},"components/VisControlsComponent.html":{}}}],["fagithub",{"_index":2341,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["faglobe",{"_index":2342,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["failed",{"_index":967,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["fails",{"_index":3154,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["falinkedin",{"_index":2530,"title":{},"body":{"components/HomeComponent.html":{}}}],["fallthrough",{"_index":3052,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["false",{"_index":53,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FunctionsComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":2010,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["faphone",{"_index":1933,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["faq",{"_index":2363,"title":{},"body":{"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["fatwittersquare",{"_index":2343,"title":{},"body":{"components/FooterComponent.html":{}}}],["fb",{"_index":1074,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["fcfcfc",{"_index":3763,"title":{},"body":{"components/SidenavComponent.html":{}}}],["feature",{"_index":1221,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/UploadComponent.html":{}}}],["features",{"_index":4660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetch",{"_index":1876,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/InfoComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchallorgandata",{"_index":1881,"title":{"classes/FetchAllOrganData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchbottomsheetdata",{"_index":3671,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetchbottomsheetdata(id",{"_index":3677,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetchcomparedata",{"_index":1884,"title":{"classes/FetchCompareData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchdatafromassets",{"_index":1879,"title":{"classes/FetchDataFromAssets.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchdatafromassets(dataversion",{"_index":3689,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetching",{"_index":3695,"title":{},"body":{"injectables/SheetService.html":{},"miscellaneous/variables.html":{}}}],["fetching_text",{"_index":4529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetchinitialplaygrounddata",{"_index":1892,"title":{"classes/FetchInitialPlaygroundData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchplaygrounddata",{"_index":3672,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetchplaygrounddata(_data",{"_index":3693,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetchplaygrounduploaddata",{"_index":1895,"title":{"classes/FetchPlaygroundUploadData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchselectedorgandata",{"_index":1559,"title":{"classes/FetchSelectedOrganData.html":{}},"body":{"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchselectedorgandata(sheet",{"_index":1601,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["fetchsheetdata",{"_index":1875,"title":{"classes/FetchSheetData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["fetchsheetdata(sheet",{"_index":3573,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["fetchsheetdata(sheetid",{"_index":3697,"title":{},"body":{"injectables/SheetService.html":{}}}],["fetchvalidomapprotiens",{"_index":1899,"title":{"classes/FetchValidOmapProtiens.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["ff5722",{"_index":1851,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["ffca28",{"_index":1849,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["fff",{"_index":690,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/HomeComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["ffffff",{"_index":4471,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["field",{"_index":591,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"classes/MultiParentMarkGroup.html":{},"modules/NavbarModule.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{}}}],["fields",{"_index":1225,"title":{},"body":{"components/CompareComponent.html":{},"classes/Data.html":{},"components/UploadComponent.html":{}}}],["field}:${event.value}.tolowercase",{"_index":2455,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["file.name",{"_index":2258,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["file.value",{"_index":1168,"title":{},"body":{"components/CompareComponent.html":{}}}],["fileformdataevent",{"_index":1128,"title":{},"body":{"components/CompareComponent.html":{},"components/FileUploadComponent.html":{},"components/UploadComponent.html":{}}}],["filename",{"_index":1117,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["files",{"_index":1247,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["fileupload",{"_index":2235,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["fileupload.click",{"_index":2264,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["fileuploadcomponent",{"_index":363,"title":{"components/FileUploadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["fileuploaderror",{"_index":2221,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["fileuploadmodule",{"_index":424,"title":{"modules/FileUploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/FileUploadModule.html":{},"modules/PlaygroundModule.html":{},"modules/UploadModule.html":{},"index.html":{},"modules.html":{}}}],["fill",{"_index":601,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{},"classes/TreeMarkGroup.html":{},"components/VisControlsComponent.html":{}}}],["filled",{"_index":4319,"title":{},"body":{"components/UploadComponent.html":{}}}],["filter",{"_index":926,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Data.html":{},"miscellaneous/variables.html":{}}}],["filter((element",{"_index":1463,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filteredout",{"_index":1413,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["filteredproteins",{"_index":1500,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["filteredprotiens",{"_index":729,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["filteredprotiens?.includes(elem.comparatorname?.tolowercase",{"_index":868,"title":{},"body":{"injectables/BimodalService.html":{}}}],["filteredprotiens?.map((word",{"_index":778,"title":{},"body":{"injectables/BimodalService.html":{}}}],["filtering",{"_index":1903,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["find",{"_index":4500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fires",{"_index":1983,"title":{},"body":{"components/DocsComponent.html":{}}}],["first",{"_index":1852,"title":{},"body":{"components/DebugLogsComponent.html":{},"interfaces/UIStateModel.html":{}}}],["fit",{"_index":2693,"title":{},"body":{"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["fixed",{"_index":2008,"title":{},"body":{"components/DocsComponent.html":{},"components/FunctionsComponent.html":{}}}],["flag",{"_index":4068,"title":{},"body":{"injectables/TreeService.html":{},"miscellaneous/functions.html":{}}}],["flatnode",{"_index":2284,"title":{"interfaces/FlatNode.html":{}},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["flatten",{"_index":1819,"title":{},"body":{"classes/Data.html":{}}}],["flattreecontrol",{"_index":2290,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["flex",{"_index":1276,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["fly",{"_index":4639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fma",{"_index":3733,"title":{},"body":{"injectables/SheetService.html":{}}}],["fma12345",{"_index":3737,"title":{},"body":{"injectables/SheetService.html":{}}}],["fma:12456",{"_index":3738,"title":{},"body":{"injectables/SheetService.html":{}}}],["fmaid:12345",{"_index":3739,"title":{},"body":{"injectables/SheetService.html":{}}}],["focus",{"_index":4472,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["folder",{"_index":1393,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["following",{"_index":4657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["follows",{"_index":1241,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["font",{"_index":1291,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["fontawesome",{"_index":2056,"title":{},"body":{"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/OmapControlsModule.html":{}}}],["fontawesomemodule",{"_index":2054,"title":{},"body":{"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/OmapControlsModule.html":{}}}],["fontsize",{"_index":148,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"classes/TreeMarkGroup.html":{}}}],["fontweight",{"_index":704,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["footer",{"_index":2337,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/UploadComponent.html":{},"miscellaneous/enumerations.html":{}}}],["footer'},{'name",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["footer.component",{"_index":2417,"title":{},"body":{"modules/FooterModule.html":{}}}],["footer.component.html",{"_index":2339,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":2338,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.module",{"_index":2776,"title":{},"body":{"modules/HomeModule.html":{}}}],["footercomponent",{"_index":365,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["footermodule",{"_index":425,"title":{"modules/FooterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DocsModule.html":{},"modules/FooterModule.html":{},"modules/HomeModule.html":{},"index.html":{},"modules.html":{}}}],["form",{"_index":1174,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/OrganTableSelectorComponent.html":{},"classes/Scales.html":{}}}],["form.controls",{"_index":1176,"title":{},"body":{"components/CompareComponent.html":{}}}],["form.markastouched",{"_index":1175,"title":{},"body":{"components/CompareComponent.html":{}}}],["formarray",{"_index":1163,"title":{},"body":{"components/CompareComponent.html":{}}}],["formarray.controls.foreach((control",{"_index":1165,"title":{},"body":{"components/CompareComponent.html":{}}}],["format",{"_index":1243,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"injectables/SheetService.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["format/readme.md",{"_index":4672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formatdata",{"_index":3136,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["formats",{"_index":3736,"title":{},"body":{"injectables/SheetService.html":{},"miscellaneous/variables.html":{}}}],["formbuilder",{"_index":4294,"title":{},"body":{"components/UploadComponent.html":{}}}],["formcontrol",{"_index":4303,"title":{},"body":{"components/UploadComponent.html":{}}}],["formdata",{"_index":1116,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["formdata.append('csvfile",{"_index":2259,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["formgroup",{"_index":1075,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["formsheets",{"_index":1076,"title":{},"body":{"components/CompareComponent.html":{}}}],["formsmodule",{"_index":1430,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{},"modules/UploadModule.html":{}}}],["formurl",{"_index":3673,"title":{},"body":{"injectables/SheetService.html":{}}}],["formurl(sheetid",{"_index":3703,"title":{},"body":{"injectables/SheetService.html":{}}}],["formvalid",{"_index":1077,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["forroot",{"_index":204,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["forroot(options",{"_index":205,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["fortawesome/angular",{"_index":2055,"title":{},"body":{"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/OmapControlsModule.html":{}}}],["fortawesome/free",{"_index":1964,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{}}}],["found",{"_index":52,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/InfoComponent.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["foundindex",{"_index":895,"title":{},"body":{"injectables/BimodalService.html":{}}}],["foundlog",{"_index":3085,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundlog?.messages.push(newlog",{"_index":3088,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundmilllog",{"_index":3096,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundmilllog?.multi_in_links.push(message",{"_index":3097,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundnillog",{"_index":3093,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundnillog?.no_in_links.push(message",{"_index":3094,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundnollog",{"_index":3090,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundnollog?.no_out_links.push(message",{"_index":3091,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundsllog",{"_index":3099,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["foundsllog?.self_links.push(message",{"_index":3100,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["framework",{"_index":2615,"title":{},"body":{"components/HomeComponent.html":{}}}],["fromevent",{"_index":3132,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fromevent(el",{"_index":3145,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["function",{"_index":230,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Data.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{},"miscellaneous/functions.html":{}}}],["functionalities",{"_index":2622,"title":{},"body":{"components/HomeComponent.html":{}}}],["functions",{"_index":1725,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Data.html":{},"components/FunctionsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions'},{'name",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["functions.component",{"_index":2479,"title":{},"body":{"modules/FunctionsModule.html":{}}}],["functions.component.html",{"_index":2420,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["functions.component.scss",{"_index":2419,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["functions/functions.module",{"_index":1688,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["functions/readme.md",{"_index":4675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functionscomponent",{"_index":367,"title":{"components/FunctionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["functionsmodule",{"_index":1678,"title":{"modules/FunctionsModule.html":{}},"body":{"modules/ControlPaneModule.html":{},"modules/FunctionsModule.html":{},"index.html":{},"modules.html":{}}}],["g",{"_index":1336,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ga",{"_index":1078,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["ga.event('webpage",{"_index":3149,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["ga_details",{"_index":3367,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["ga_details.numorgans",{"_index":3376,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["ga_details.selectedorgans.length",{"_index":3377,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["ga_details.selectedorgans.push",{"_index":3372,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["gaaction",{"_index":1141,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gaaction.click",{"_index":2451,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["gacategory",{"_index":1142,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gacategory.compare",{"_index":1194,"title":{},"body":{"components/CompareComponent.html":{}}}],["gacategory.controls",{"_index":2452,"title":{},"body":{"components/FunctionsComponent.html":{},"components/VisControlsComponent.html":{}}}],["gacategory.docs",{"_index":1988,"title":{},"body":{"components/DocsComponent.html":{}}}],["gacategory.footer",{"_index":2361,"title":{},"body":{"components/FooterComponent.html":{}}}],["gacategory.graph",{"_index":2881,"title":{},"body":{"components/InfoComponent.html":{},"injectables/VegaService.html":{}}}],["gacategory.home",{"_index":2594,"title":{},"body":{"components/HomeComponent.html":{}}}],["gacategory.navbar",{"_index":3379,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"interfaces/UIStateModel.html":{}}}],["gacategory.playground",{"_index":3560,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["gacompareinfo",{"_index":1143,"title":{"interfaces/GaCompareInfo.html":{}},"body":{"components/CompareComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["ganodeinfo",{"_index":2497,"title":{"interfaces/GaNodeInfo.html":{}},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/VegaService.html":{}}}],["gaorganinfo",{"_index":2501,"title":{"interfaces/GaOrganInfo.html":{}},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["gaorgansinfo",{"_index":2500,"title":{"interfaces/GaOrgansInfo.html":{}},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/OrganTableSelectorComponent.html":{}}}],["gap",{"_index":1326,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/UploadComponent.html":{}}}],["gatoken",{"_index":225,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{}}}],["gedge",{"_index":1394,"title":{"interfaces/GEdge.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["gene",{"_index":174,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":1655,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["generatecolumns",{"_index":3455,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["generatecolumns(len",{"_index":3461,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["generated",{"_index":1646,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["generator",{"_index":4610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('assets/omap",{"_index":1449,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get_app",{"_index":3778,"title":{},"body":{"components/SidenavHeaderComponent.html":{},"components/VisControlsComponent.html":{}}}],["getallowtelemetry",{"_index":3956,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["getassetsurl",{"_index":3720,"title":{},"body":{"injectables/SheetService.html":{},"miscellaneous/functions.html":{}}}],["getassetsurl(dataversion",{"_index":4492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getbimodal(state",{"_index":4122,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getbimodalconfig(state",{"_index":4115,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getbiomarkertype(state",{"_index":4113,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getbottomsheet(state",{"_index":4188,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getbottomsheetdata(state",{"_index":4124,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getcomparestate(state",{"_index":4190,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getcontrolpanestate(state",{"_index":4177,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getcscontrols",{"_index":1134,"title":{},"body":{"components/CompareComponent.html":{}}}],["getdata",{"_index":2089,"title":{},"body":{"injectables/DocsService.html":{}}}],["getdata(title",{"_index":2093,"title":{},"body":{"injectables/DocsService.html":{}}}],["getdatawithbody",{"_index":3674,"title":{},"body":{"injectables/SheetService.html":{}}}],["getdatawithbody(data",{"_index":3706,"title":{},"body":{"injectables/SheetService.html":{}}}],["getdebuglog(state",{"_index":4186,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["geterror(state",{"_index":4178,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getfoundindex",{"_index":4482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getfoundindex(str",{"_index":4494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getfromcache",{"_index":1349,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["gethassomeorgans",{"_index":3332,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["getid",{"_index":2090,"title":{},"body":{"injectables/DocsService.html":{}}}],["getid(title",{"_index":2095,"title":{},"body":{"injectables/DocsService.html":{}}}],["getindentlist(state",{"_index":4180,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getlatestsearchstructure(state",{"_index":4130,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getlinksdata(state",{"_index":4126,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getloading(state",{"_index":4173,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getloadingtext(state",{"_index":4175,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getlogs",{"_index":3064,"title":{},"body":{"injectables/LogsState.html":{}}}],["getlogs(state",{"_index":3069,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["getomapconfig(state",{"_index":4132,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getrandomcolor",{"_index":1084,"title":{},"body":{"components/CompareComponent.html":{}}}],["getreport(state",{"_index":4182,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getrightsidenav(state",{"_index":4184,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getsearchstate(state",{"_index":4192,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getsnackbar(state",{"_index":4171,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate",{"_index":3081,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["getstate().compareopen",{"_index":4233,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate().controlpaneopen",{"_index":4200,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate().debuglogopen",{"_index":4216,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate().indentlistopen",{"_index":4210,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate().reportopen",{"_index":4212,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getstate().searchopen",{"_index":4236,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["getting",{"_index":647,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"miscellaneous/variables.html":{}}}],["gettitle",{"_index":2091,"title":{},"body":{"injectables/DocsService.html":{}}}],["gettitle(id",{"_index":2097,"title":{},"body":{"injectables/DocsService.html":{}}}],["gettreedata(state",{"_index":4118,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getvegaspec(state",{"_index":4117,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["getvegaview(state",{"_index":4120,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["gid",{"_index":1111,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["github",{"_index":1994,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["given",{"_index":1486,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["gives",{"_index":2620,"title":{},"body":{"components/HomeComponent.html":{}}}],["gnode",{"_index":1396,"title":{"interfaces/GNode.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["go",{"_index":2618,"title":{},"body":{"components/HomeComponent.html":{}}}],["good",{"_index":1619,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["google",{"_index":219,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["googleanalyticsid",{"_index":4649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googleanalyticsservice",{"_index":1096,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["googleanalyticssyncservice",{"_index":196,"title":{"injectables/GoogleAnalyticsSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["goto",{"_index":2035,"title":{},"body":{"components/DocsComponent.html":{}}}],["gotoplayground",{"_index":2536,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":1400,"title":{"interfaces/Graph.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["graphdata",{"_index":1401,"title":{"interfaces/GraphData.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["gree",{"_index":3649,"title":{},"body":{"classes/Scales.html":{}}}],["green",{"_index":636,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["grey",{"_index":703,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/SidenavHeaderComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["greying",{"_index":644,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["grid",{"_index":1325,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["group",{"_index":147,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"interfaces/OpenBottomSheetData.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/Snackbar.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{}}}],["group.controls['filename'].value",{"_index":1211,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["group.controls['link'].value",{"_index":1210,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["groupmark",{"_index":545,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["groupname",{"_index":54,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"injectables/VegaService.html":{}}}],["groupnamemapper",{"_index":140,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["groupnamemapper[group",{"_index":161,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["groups",{"_index":549,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["groups/bimodal",{"_index":3117,"title":{},"body":{"classes/Marks.html":{}}}],["groups/multiparent",{"_index":3119,"title":{},"body":{"classes/Marks.html":{}}}],["groups/tree",{"_index":3121,"title":{},"body":{"classes/Marks.html":{}}}],["gtag",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["gtag('config",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["h1",{"_index":2026,"title":{},"body":{"components/DocsComponent.html":{}}}],["h6",{"_index":2043,"title":{},"body":{"components/DocsComponent.html":{}}}],["hall",{"_index":2386,"title":{},"body":{"components/FooterComponent.html":{}}}],["handle",{"_index":4470,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["handled",{"_index":4312,"title":{},"body":{"components/UploadComponent.html":{}}}],["haschild",{"_index":2312,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["haserror",{"_index":759,"title":{"classes/HasError.html":{}},"body":{"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DoiComponent.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["haserror(err",{"_index":969,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["hasgiderror",{"_index":2152,"title":{},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Response.html":{}}}],["hassomeorgans",{"_index":3286,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["header",{"_index":1854,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["header'},{'name",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["header.component",{"_index":3786,"title":{},"body":{"modules/SidenavHeaderModule.html":{}}}],["header.component.html",{"_index":3767,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.scss",{"_index":3766,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts",{"_index":3765,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts:10",{"_index":3772,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts:11",{"_index":3775,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts:12",{"_index":3776,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts:13",{"_index":3777,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.component.ts:9",{"_index":3773,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["header.module",{"_index":1434,"title":{},"body":{"modules/CompareModule.html":{},"modules/DebugLogsModule.html":{},"modules/IndentedListModule.html":{},"modules/ReportModule.html":{},"modules/UploadModule.html":{}}}],["header.module.ts",{"_index":3785,"title":{},"body":{"modules/SidenavHeaderModule.html":{}}}],["header/sidenav",{"_index":1433,"title":{},"body":{"modules/CompareModule.html":{},"modules/DebugLogsModule.html":{},"modules/IndentedListModule.html":{},"modules/ReportModule.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/UploadModule.html":{}}}],["header:hover",{"_index":1288,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["header:not(.compare",{"_index":1283,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["headercount",{"_index":1387,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["healthy",{"_index":2616,"title":{},"body":{"components/HomeComponent.html":{}}}],["height",{"_index":742,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"components/TreeComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["hello",{"_index":3774,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["help",{"_index":2373,"title":{},"body":{"components/FooterComponent.html":{},"components/SidenavHeaderComponent.html":{}}}],["help_outline",{"_index":3779,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["here",{"_index":1639,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/ErrorComponent.html":{}}}],["herr",{"_index":4560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herr.html",{"_index":4567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hgnc",{"_index":2892,"title":{},"body":{"components/InfoComponent.html":{}}}],["hi",{"_index":1642,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["hidden",{"_index":2659,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["hide",{"_index":3842,"title":{},"body":{"classes/Signals.html":{}}}],["hierarchical",{"_index":4623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["highlight",{"_index":2816,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["highlighted",{"_index":980,"title":{},"body":{"injectables/BimodalService.html":{}}}],["hint",{"_index":4318,"title":{},"body":{"components/UploadComponent.html":{}}}],["hngc",{"_index":3684,"title":{},"body":{"injectables/SheetService.html":{}}}],["home",{"_index":2492,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["home'},{'name",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["home.component",{"_index":2775,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":2528,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":2527,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":369,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["homemodule",{"_index":426,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"index.html":{},"modules.html":{}}}],["horizontal",{"_index":1795,"title":{},"body":{"classes/Data.html":{},"components/TreeComponent.html":{}}}],["host",{"_index":1843,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/FileUploadComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{}}}],["hostbinding",{"_index":3959,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["hostbinding('class",{"_index":3953,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["hostbindings",{"_index":3941,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["hover",{"_index":641,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/VisControlsComponent.html":{}}}],["hover:not(.bg",{"_index":2029,"title":{},"body":{"components/DocsComponent.html":{}}}],["hovered",{"_index":1750,"title":{},"body":{"classes/Data.html":{},"classes/Signals.html":{}}}],["hovering",{"_index":3820,"title":{},"body":{"classes/Signals.html":{}}}],["hraversion",{"_index":1375,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["hrishikesh",{"_index":4536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hrpaul@iu.edu",{"_index":4542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["htmlelement",{"_index":3135,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/functions.html":{}}}],["htmlinputelement",{"_index":2233,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["http",{"_index":1447,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["http://localhost:5000",{"_index":4662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1445,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["httpclientmodule",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["https://apps.humanatlas.io/asctb",{"_index":4652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cns.iu.edu/current_team/bio/bruce",{"_index":4566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cns.iu.edu/current_team/bio/ellen",{"_index":4577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://docs.google.com/spreadsheets/d",{"_index":3914,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["https://docs.google.com/spreadsheets/d/${sheetid}/export?format=csv&gid=${gid",{"_index":3728,"title":{},"body":{"injectables/SheetService.html":{}}}],["https://docs.google.com/spreadsheets/d/1j_slhfiprwucrzrcdfnh15owoilf7cjks7nvppe3hti/edit#gid=1268820100",{"_index":1998,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["https://github.com/bherr2",{"_index":4569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/hrishikeshpaul",{"_index":4546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/macvogelsang",{"_index":4592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/nikhil",{"_index":4598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/pbrm4",{"_index":4605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/vutukuriajay2241",{"_index":4585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://hrishikeshpaul.github.io",{"_index":4543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://in.linkedin.com/in/ajay",{"_index":4586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://info.sice.indiana.edu/~katy",{"_index":4553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://vega.github.io/schema/vega/v5.json",{"_index":4389,"title":{},"body":{"injectables/VegaService.html":{}}}],["https://www.linkedin.com/in/bruceherr",{"_index":4568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.linkedin.com/in/hrishikeshpaul",{"_index":4545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.linkedin.com/in/katy",{"_index":4554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.linkedin.com/in/mac",{"_index":4593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.linkedin.com/in/nikhilm2395",{"_index":4600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubmap",{"_index":2376,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["human",{"_index":2611,"title":{},"body":{"components/HomeComponent.html":{}}}],["hyphens",{"_index":2017,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["i.btype",{"_index":2975,"title":{},"body":{"injectables/LegendService.html":{}}}],["i.color",{"_index":2970,"title":{},"body":{"injectables/LegendService.html":{}}}],["i.color)?.title",{"_index":2974,"title":{},"body":{"injectables/LegendService.html":{}}}],["i.comparator",{"_index":2847,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["i.comparatorid",{"_index":4070,"title":{},"body":{"injectables/TreeService.html":{}}}],["i.comparatorname",{"_index":4073,"title":{},"body":{"injectables/TreeService.html":{}}}],["i.group",{"_index":900,"title":{},"body":{"injectables/BimodalService.html":{}}}],["i.isnew",{"_index":2968,"title":{},"body":{"injectables/LegendService.html":{}}}],["i.name",{"_index":901,"title":{},"body":{"injectables/BimodalService.html":{}}}],["i.ontologyid",{"_index":899,"title":{},"body":{"injectables/BimodalService.html":{}}}],["i.organname",{"_index":4072,"title":{},"body":{"injectables/TreeService.html":{}}}],["i.proteinpresence",{"_index":2976,"title":{},"body":{"injectables/LegendService.html":{}}}],["i.type",{"_index":2846,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"injectables/TreeService.html":{}}}],["i2",{"_index":1844,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["icon",{"_index":1022,"title":{},"body":{"classes/ClearSheetLogs.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"components/SidenavHeaderComponent.html":{}}}],["icons",{"_index":1966,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{}}}],["id",{"_index":46,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["id.includes",{"_index":3742,"title":{},"body":{"injectables/SheetService.html":{}}}],["id.split(':')[0",{"_index":3744,"title":{},"body":{"injectables/SheetService.html":{}}}],["id.split(':')[1",{"_index":3743,"title":{},"body":{"injectables/SheetService.html":{}}}],["id.substring(3",{"_index":3741,"title":{},"body":{"injectables/SheetService.html":{}}}],["id.tolowercase().startswith('fma",{"_index":3740,"title":{},"body":{"injectables/SheetService.html":{}}}],["identicalas",{"_index":1403,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["identicalb",{"_index":1407,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["identicalbmctpair",{"_index":1409,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["identicalct",{"_index":1405,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["idnameset",{"_index":4061,"title":{},"body":{"injectables/TreeService.html":{}}}],["idnameset[newnode.ontologyid",{"_index":4084,"title":{},"body":{"injectables/TreeService.html":{}}}],["idnameset[structure.id",{"_index":4078,"title":{},"body":{"injectables/TreeService.html":{}}}],["ids",{"_index":1743,"title":{},"body":{"classes/Data.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"components/VisControlsComponent.html":{}}}],["idx",{"_index":924,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{}}}],["ignored",{"_index":3044,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["igoogleanalyticscommand",{"_index":216,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["igoogleanalyticssettings",{"_index":2505,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ii",{"_index":4561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["il",{"_index":4213,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["ilnode",{"_index":2298,"title":{"classes/ILNode.html":{}},"body":{"interfaces/FlatNode.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{}}}],["ilnode(data[0].anatomical_structures[0].name",{"_index":2837,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["ilnode(structure.name",{"_index":2851,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["image",{"_index":2660,"title":{},"body":{"components/HomeComponent.html":{},"components/LegendComponent.html":{}}}],["images",{"_index":2531,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["images/compare.svg",{"_index":4611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/il.svg",{"_index":4612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/link.svg",{"_index":4613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/report.svg",{"_index":4609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["images/vis.svg",{"_index":4607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imaging",{"_index":3314,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["imagingmethod",{"_index":1381,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["img",{"_index":2662,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["img:nth",{"_index":2753,"title":{},"body":{"components/HomeComponent.html":{}}}],["imgoptions",{"_index":1388,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["implements",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Node.html":{},"pipes/OrderByPipe.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["import",{"_index":25,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["important",{"_index":1287,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["imports",{"_index":243,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{}}}],["improve",{"_index":3967,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["inactive",{"_index":4464,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["incase",{"_index":4218,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["indata(\"sources_clicked_array",{"_index":1824,"title":{},"body":{"classes/Data.html":{}}}],["indata(\"sources_hovered_array",{"_index":1827,"title":{},"body":{"classes/Data.html":{}}}],["indata(\"targets_clicked_array",{"_index":1825,"title":{},"body":{"classes/Data.html":{}}}],["indata(\"targets_hovered_array",{"_index":1828,"title":{},"body":{"classes/Data.html":{}}}],["indata('discrepencyid",{"_index":619,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["indata('discrepencylabel",{"_index":615,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["indata('duplicateid",{"_index":622,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["indata('search",{"_index":610,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["indata('sources_clicked_array",{"_index":651,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('sources_hovered_array",{"_index":650,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('sources_of_sources__click",{"_index":685,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('sources_of_sources__hover",{"_index":687,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('targets_clicked_array",{"_index":649,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('targets_hovered_array",{"_index":648,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('targets_of_targets__click",{"_index":684,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('targets_of_targets__hover",{"_index":686,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('view_mode__click",{"_index":682,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indata('view_mode__hover",{"_index":656,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["indegree",{"_index":12,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["indent",{"_index":1047,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"interfaces/FlatNode.html":{},"classes/HasError.html":{},"components/IndentedListComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["indent'},{'name",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["indentdata",{"_index":2305,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{}}}],["indented",{"_index":2301,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"interfaces/Node.html":{},"interfaces/UIStateModel.html":{},"miscellaneous/variables.html":{}}}],["indentedlist",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["indentedlistcomponent",{"_index":371,"title":{"components/IndentedListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["indentedlistmodule",{"_index":2823,"title":{"modules/IndentedListModule.html":{}},"body":{"modules/IndentedListModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["indentedlistservice",{"_index":2300,"title":{"injectables/IndentedListService.html":{}},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{}}}],["indentlistopen",{"_index":4161,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["indentservice",{"_index":2324,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["indenttree",{"_index":2311,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexof(node_sources__hover",{"_index":1813,"title":{},"body":{"classes/Data.html":{}}}],["indexof(node_targets__hover",{"_index":1811,"title":{},"body":{"classes/Data.html":{}}}],["indexof(sources__click",{"_index":1817,"title":{},"body":{"classes/Data.html":{}}}],["indexof(targets__click",{"_index":1815,"title":{},"body":{"classes/Data.html":{}}}],["indiana",{"_index":2371,"title":{},"body":{"components/FooterComponent.html":{}}}],["indicate",{"_index":4502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["infinite",{"_index":2750,"title":{},"body":{"components/HomeComponent.html":{}}}],["infinity",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["infix",{"_index":3435,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["info'},{'name",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["info.component",{"_index":2901,"title":{},"body":{"modules/InfoModule.html":{}}}],["info.component.html",{"_index":2864,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":2863,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.desc",{"_index":2889,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.haserror",{"_index":2876,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.iri",{"_index":2893,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.msg",{"_index":2878,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.name",{"_index":2882,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.notes",{"_index":2884,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.ontologycode",{"_index":2891,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.ontologyid",{"_index":2890,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.status",{"_index":2879,"title":{},"body":{"components/InfoComponent.html":{}}}],["infoccf&#64;indiana.edu",{"_index":2394,"title":{},"body":{"components/FooterComponent.html":{}}}],["infoccf@indiana.edu",{"_index":2412,"title":{},"body":{"components/FooterComponent.html":{}}}],["infocomponent",{"_index":373,"title":{"components/InfoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["infomodule",{"_index":2896,"title":{"modules/InfoModule.html":{}},"body":{"modules/InfoModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["information",{"_index":2494,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/InfoComponent.html":{},"interfaces/TreeStateModel.html":{}}}],["inherit",{"_index":4455,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["initcommands",{"_index":4484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initcommands(options",{"_index":239,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["initial",{"_index":1893,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/OrganTableSelectorComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["initialize",{"_index":3468,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["initializeapp",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initializeapp(configservice",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initializetree",{"_index":2793,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["initializetree(data",{"_index":2334,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["inittable",{"_index":3456,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["inittable(data",{"_index":3466,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["inject",{"_index":2124,"title":{},"body":{"components/DoiComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inject(document",{"_index":3159,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["inject(local_storage_consent_key",{"_index":3041,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["inject(mat_bottom_sheet_data",{"_index":2119,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["inject(mat_dialog_data",{"_index":3016,"title":{},"body":{"components/LoadingComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":3954,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["inject(ngx_google_analytics_settings_token",{"_index":2513,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["inject(ngx_window",{"_index":2512,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["injectable",{"_index":712,"title":{"injectables/BimodalService.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"injectables/DocsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}},"body":{"injectables/BimodalService.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"injectables/DocsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["injectables",{"_index":714,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"injectables/DocsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{},"index.html":{}}}],["injectiontoken",{"_index":3033,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["injectiontoken('key",{"_index":3035,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":1322,"title":{},"body":{"components/CompareComponent.html":{},"components/LegendComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{}}}],["inlinesize",{"_index":2584,"title":{},"body":{"components/HomeComponent.html":{}}}],["input",{"_index":1136,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsNavComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["input[type='color",{"_index":1266,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["inputs",{"_index":1088,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsNavComponent.html":{},"components/ErrorComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/VisControlsComponent.html":{}}}],["insert",{"_index":3511,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["instance",{"_index":3498,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["instanceof",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["institutions",{"_index":2650,"title":{},"body":{"components/HomeComponent.html":{}}}],["instruction",{"_index":1290,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["instructions",{"_index":1219,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["inter",{"_index":2672,"title":{},"body":{"components/HomeComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Legend.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/IndentedListComponent.html":{},"interfaces/Legend.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["interfaces",{"_index":1,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Legend.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"index.html":{}}}],["intermediate",{"_index":1344,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["intial",{"_index":2129,"title":{},"body":{"components/DoiComponent.html":{}}}],["introduction",{"_index":1977,"title":{},"body":{"components/DocsComponent.html":{},"miscellaneous/variables.html":{}}}],["invalid",{"_index":2885,"title":{},"body":{"components/InfoComponent.html":{}}}],["inverting",{"_index":4197,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["iri",{"_index":1371,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["isallselected",{"_index":3282,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["isbiomarker",{"_index":4497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isforreport",{"_index":4496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isintilalselect",{"_index":1348,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["isnew",{"_index":13,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["isomap",{"_index":1334,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["isreport",{"_index":726,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["isreportnotorganwise",{"_index":4498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issue",{"_index":2176,"title":{},"body":{"components/ErrorComponent.html":{}}}],["issue/bug",{"_index":1650,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["issues",{"_index":2175,"title":{},"body":{"components/ErrorComponent.html":{}}}],["isvalid(datum.source.references",{"_index":633,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["item",{"_index":1842,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"components/NavItemComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["item'},{'name",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["item.color",{"_index":2982,"title":{},"body":{"injectables/LegendService.html":{}}}],["item.component",{"_index":3191,"title":{},"body":{"modules/NavItemModule.html":{}}}],["item.component.html",{"_index":3176,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item.component.scss",{"_index":3175,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item.component.ts",{"_index":3174,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item.component.ts:10",{"_index":3177,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item.component.ts:9",{"_index":3178,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item.display",{"_index":3373,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["item.doi",{"_index":2135,"title":{},"body":{"components/DoiComponent.html":{}}}],["item.doi.substring(5",{"_index":2136,"title":{},"body":{"components/DoiComponent.html":{}}}],["item.doi.touppercase().search('doi",{"_index":2134,"title":{},"body":{"components/DoiComponent.html":{}}}],["item.id",{"_index":2139,"title":{},"body":{"components/DoiComponent.html":{}}}],["item.key",{"_index":2894,"title":{},"body":{"components/InfoComponent.html":{}}}],["item.module",{"_index":3203,"title":{},"body":{"modules/NavbarModule.html":{}}}],["item.module.ts",{"_index":3190,"title":{},"body":{"modules/NavItemModule.html":{}}}],["item.name",{"_index":3369,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["item.notes",{"_index":2140,"title":{},"body":{"components/DoiComponent.html":{}}}],["item.symbol",{"_index":3370,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["item.symbol.split",{"_index":3374,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["item.title",{"_index":2001,"title":{},"body":{"components/DocsComponent.html":{},"injectables/LegendService.html":{}}}],["item.value",{"_index":2895,"title":{},"body":{"components/InfoComponent.html":{}}}],["item/nav",{"_index":3173,"title":{},"body":{"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{}}}],["item:active",{"_index":3184,"title":{},"body":{"components/NavItemComponent.html":{}}}],["item:hover",{"_index":3182,"title":{},"body":{"components/NavItemComponent.html":{}}}],["items",{"_index":1300,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["items.push",{"_index":3513,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["iteration",{"_index":2749,"title":{},"body":{"components/HomeComponent.html":{}}}],["iu",{"_index":2636,"title":{},"body":{"components/HomeComponent.html":{}}}],["jexcel",{"_index":3469,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["jexcel.column",{"_index":3465,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["jexcel.jspreadsheetinstance",{"_index":3496,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["jexcel_about",{"_index":3574,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["json",{"_index":3710,"title":{},"body":{"injectables/SheetService.html":{}}}],["json.parse(json.stringify(this.currentsheet",{"_index":3561,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["json.stringify(ga_details",{"_index":3380,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["json.stringify(nodeinfo",{"_index":4373,"title":{},"body":{"injectables/VegaService.html":{}}}],["json.stringify(sheetinfo",{"_index":1196,"title":{},"body":{"components/CompareComponent.html":{}}}],["json.stringify(this.config",{"_index":4441,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["jsonld",{"_index":3727,"title":{},"body":{"injectables/SheetService.html":{}}}],["jspreadsheet",{"_index":3499,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["jump",{"_index":2595,"title":{},"body":{"components/HomeComponent.html":{}}}],["justify",{"_index":1302,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["katy",{"_index":4548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["katy@indiana.edu",{"_index":4552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keep",{"_index":3075,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/PlaygroundComponent.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["keeps",{"_index":3495,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["key",{"_index":234,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"classes/Data.html":{},"injectables/LocalStorageSyncService.html":{},"pipes/OrderByPipe.html":{}}}],["keyframes",{"_index":2764,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyof",{"_index":162,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"pipes/OrderByPipe.html":{}}}],["knob",{"_index":4467,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["know",{"_index":2629,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["l",{"_index":904,"title":{},"body":{"injectables/BimodalService.html":{},"components/HomeComponent.html":{}}}],["l.color",{"_index":2969,"title":{},"body":{"injectables/LegendService.html":{}}}],["l.icon",{"_index":1838,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["l.id",{"_index":3087,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["l.loadingtext",{"_index":3024,"title":{},"body":{"components/LoadingComponent.html":{}}}],["l.name",{"_index":2929,"title":{},"body":{"components/LegendComponent.html":{},"injectables/LegendService.html":{}}}],["l.s",{"_index":935,"title":{},"body":{"injectables/BimodalService.html":{}}}],["l.t",{"_index":936,"title":{},"body":{"injectables/BimodalService.html":{}}}],["lab",{"_index":4599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":14,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["labelfontsize",{"_index":2992,"title":{},"body":{"classes/Legends.html":{}}}],["labeloffset",{"_index":2993,"title":{},"body":{"classes/Legends.html":{}}}],["labels",{"_index":1745,"title":{},"body":{"classes/Data.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{}}}],["laptop",{"_index":2716,"title":{},"body":{"components/HomeComponent.html":{}}}],["laptop:after",{"_index":2717,"title":{},"body":{"components/HomeComponent.html":{}}}],["large",{"_index":2367,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["last",{"_index":731,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/TreeStateModel.html":{}}}],["lastclickedoption",{"_index":1915,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["lastclickedstructure",{"_index":4144,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["lastsearch",{"_index":4108,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["latest",{"_index":1024,"title":{},"body":{"classes/ClearSheetLogs.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["launch",{"_index":2602,"title":{},"body":{"components/HomeComponent.html":{}}}],["layer",{"_index":732,"title":{},"body":{"injectables/BimodalService.html":{}}}],["lead",{"_index":4540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaf",{"_index":794,"title":{},"body":{"injectables/BimodalService.html":{}}}],["left",{"_index":699,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"classes/Legends.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["legend",{"_index":188,"title":{"interfaces/Legend.html":{}},"body":{"modules/AnalyticsModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"modules/TreeModule.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["legend'},{'name",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["legend.component",{"_index":2946,"title":{},"body":{"modules/LegendModule.html":{}}}],["legend.component.html",{"_index":2907,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.component.scss",{"_index":2906,"title":{},"body":{"components/LegendComponent.html":{}}}],["legend.service",{"_index":2919,"title":{},"body":{"components/LegendComponent.html":{}}}],["legendcomponent",{"_index":375,"title":{"components/LegendComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["legenddata",{"_index":2951,"title":{},"body":{"injectables/LegendService.html":{}}}],["legendmodule",{"_index":1679,"title":{"modules/LegendModule.html":{}},"body":{"modules/ControlPaneModule.html":{},"modules/LegendModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["legends",{"_index":2908,"title":{"classes/Legends.html":{}},"body":{"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/VegaService.html":{}}}],["legends().legends",{"_index":2999,"title":{},"body":{"classes/Legends.html":{}}}],["legends.create",{"_index":4396,"title":{},"body":{"injectables/VegaService.html":{}}}],["legends.findindex((l",{"_index":2966,"title":{},"body":{"injectables/LegendService.html":{}}}],["legends.push",{"_index":2967,"title":{},"body":{"injectables/LegendService.html":{}}}],["legendservice",{"_index":2911,"title":{"injectables/LegendService.html":{}},"body":{"components/LegendComponent.html":{},"injectables/LegendService.html":{}}}],["legendx",{"_index":2997,"title":{},"body":{"classes/Legends.html":{}}}],["legendy",{"_index":2998,"title":{},"body":{"classes/Legends.html":{}}}],["len",{"_index":3464,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["length(datum.source.references",{"_index":634,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["length(datum.sources",{"_index":676,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["length(datum.target.references",{"_index":629,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["length(datum.targets",{"_index":677,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["letter",{"_index":2018,"title":{},"body":{"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{}}}],["letters",{"_index":1212,"title":{},"body":{"components/CompareComponent.html":{}}}],["level",{"_index":2289,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["lh",{"_index":2179,"title":{},"body":{"components/ErrorComponent.html":{}}}],["li",{"_index":2400,"title":{},"body":{"components/FooterComponent.html":{}}}],["license",{"_index":2398,"title":{},"body":{"components/FooterComponent.html":{}}}],["light",{"_index":2030,"title":{},"body":{"components/DocsComponent.html":{}}}],["lightblue",{"_index":613,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["lightyellow",{"_index":621,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["limit",{"_index":707,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["line",{"_index":972,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ExportVega.html":{},"components/HomeComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["link",{"_index":95,"title":{"interfaces/Link.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/ErrorComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/variables.html":{}}}],["link.clearvalidators",{"_index":1169,"title":{},"body":{"components/CompareComponent.html":{}}}],["link.updatevalueandvalidity",{"_index":1170,"title":{},"body":{"components/CompareComponent.html":{}}}],["linkedin",{"_index":4544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linker",{"_index":2665,"title":{},"body":{"components/HomeComponent.html":{}}}],["linker:hover",{"_index":2667,"title":{},"body":{"components/HomeComponent.html":{}}}],["linkformcontrol",{"_index":3451,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["linkpath",{"_index":1793,"title":{},"body":{"classes/Data.html":{}}}],["links",{"_index":135,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FooterComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Link.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["links)).subscribe",{"_index":951,"title":{},"body":{"injectables/BimodalService.html":{}}}],["links).resize().runasync",{"_index":985,"title":{},"body":{"injectables/BimodalService.html":{}}}],["links.push",{"_index":907,"title":{},"body":{"injectables/BimodalService.html":{}}}],["links.some((l",{"_index":934,"title":{},"body":{"injectables/BimodalService.html":{}}}],["linksasctbdata",{"_index":115,"title":{"interfaces/LinksASCTBData.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["lipids",{"_index":176,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":1048,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"injectables/DocsService.html":{},"classes/DuplicateId.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"classes/HasError.html":{},"components/IndentedListComponent.html":{},"classes/Marks.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/Signals.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"miscellaneous/variables.html":{}}}],["list.component",{"_index":2829,"title":{},"body":{"modules/IndentedListModule.html":{}}}],["list.component.html",{"_index":2303,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["list.component.scss",{"_index":2304,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["list.component.ts",{"_index":2287,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["list.component.ts:27",{"_index":2804,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:28",{"_index":2802,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:29",{"_index":2809,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:31",{"_index":2797,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:32",{"_index":2796,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:33",{"_index":2798,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:34",{"_index":2799,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:35",{"_index":2800,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:40",{"_index":2806,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:42",{"_index":2803,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:44",{"_index":2807,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:58",{"_index":2808,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:65",{"_index":2795,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:67",{"_index":2805,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.component.ts:92",{"_index":2801,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["list.module",{"_index":3627,"title":{},"body":{"modules/RootModule.html":{}}}],["list.module.ts",{"_index":2828,"title":{},"body":{"modules/IndentedListModule.html":{}}}],["list.service",{"_index":2302,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["list.service.ts",{"_index":2831,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["list.service.ts:11",{"_index":2836,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["list.service.ts:13",{"_index":2834,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["list/indented",{"_index":2286,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{},"modules/RootModule.html":{}}}],["list/readme.md",{"_index":4682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listed",{"_index":2623,"title":{},"body":{"components/HomeComponent.html":{}}}],["listener",{"_index":4379,"title":{},"body":{"injectables/VegaService.html":{}}}],["listeners",{"_index":4335,"title":{},"body":{"injectables/VegaService.html":{}}}],["lists",{"_index":4628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["literal",{"_index":531,"title":{},"body":{"interfaces/BimodalConfig.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetOptions.html":{},"components/TrackingPopupComponent.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{}}}],["loadconsent",{"_index":3048,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["loaded",{"_index":2267,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["loading",{"_index":1038,"title":{"interfaces/Loading.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DoiComponent.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"interfaces/Logs.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["loading'},{'name",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["loading.component",{"_index":3030,"title":{},"body":{"modules/LoadingModule.html":{}}}],["loading.component.html",{"_index":3014,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":3013,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":377,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["loadingmodule",{"_index":3025,"title":{"modules/LoadingModule.html":{}},"body":{"modules/LoadingModule.html":{},"index.html":{},"modules.html":{}}}],["loadingtext",{"_index":3006,"title":{},"body":{"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"interfaces/Logs.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{},"interfaces/UIStateModel.html":{}}}],["loads",{"_index":2883,"title":{},"body":{"components/InfoComponent.html":{}}}],["local",{"_index":223,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["local_storage_consent_key",{"_index":3034,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":4661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage",{"_index":3040,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["localstoragesyncservice",{"_index":197,"title":{"injectables/LocalStorageSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":2381,"title":{},"body":{"components/FooterComponent.html":{}}}],["log",{"_index":1020,"title":{"interfaces/Log.html":{}},"body":{"classes/ClearSheetLogs.html":{},"components/DebugLogsComponent.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"interfaces/Snackbar.html":{},"components/TrackingPopupComponent.html":{},"interfaces/UIStateModel.html":{},"miscellaneous/variables.html":{}}}],["log_icons",{"_index":762,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"miscellaneous/enumerations.html":{}}}],["log_icons.error",{"_index":968,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["log_icons.success",{"_index":990,"title":{},"body":{"injectables/BimodalService.html":{}}}],["log_types",{"_index":763,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"miscellaneous/enumerations.html":{}}}],["logentry",{"_index":3061,"title":{"interfaces/LogEntry.html":{}},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["logo1",{"_index":2698,"title":{},"body":{"components/HomeComponent.html":{}}}],["logo2",{"_index":2700,"title":{},"body":{"components/HomeComponent.html":{}}}],["logs",{"_index":1019,"title":{"interfaces/Logs.html":{}},"body":{"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DebugLogsComponent.html":{},"classes/HasError.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["logs'},{'name",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["logs.component",{"_index":1864,"title":{},"body":{"modules/DebugLogsModule.html":{}}}],["logs.component.html",{"_index":1833,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.component.scss",{"_index":1832,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.component.ts",{"_index":1831,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.component.ts:11",{"_index":1835,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.component.ts:12",{"_index":1836,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.component.ts:13",{"_index":1837,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logs.model",{"_index":3007,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{}}}],["logs.module",{"_index":3629,"title":{},"body":{"modules/RootModule.html":{}}}],["logs.module.ts",{"_index":1863,"title":{},"body":{"modules/DebugLogsModule.html":{}}}],["logs/debug",{"_index":1830,"title":{},"body":{"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"modules/RootModule.html":{}}}],["logslist",{"_index":1841,"title":{},"body":{"components/DebugLogsComponent.html":{}}}],["logsstate",{"_index":470,"title":{"injectables/LogsState.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["logsstatemodel",{"_index":3070,"title":{"interfaces/LogsStateModel.html":{}},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["look",{"_index":4644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lookup",{"_index":1798,"title":{},"body":{"classes/Data.html":{}}}],["ls",{"_index":2909,"title":{},"body":{"components/LegendComponent.html":{}}}],["luddy",{"_index":2385,"title":{},"body":{"components/FooterComponent.html":{}}}],["m",{"_index":4572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mac",{"_index":4589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["madvogel@iu.edu",{"_index":4591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mahadevaswamy",{"_index":4596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":4541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailtext",{"_index":1657,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["mailto:infoccf@indiana.edu?subject=${subject}&body=${body",{"_index":1658,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["main",{"_index":2656,"title":{},"body":{"components/HomeComponent.html":{}}}],["make",{"_index":932,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["makeas",{"_index":770,"title":{},"body":{"injectables/BimodalService.html":{},"miscellaneous/functions.html":{}}}],["makeas(data",{"_index":4503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makeas(sheetdata",{"_index":781,"title":{},"body":{"injectables/BimodalService.html":{}}}],["makeasmultiparentedgesdata",{"_index":1702,"title":{},"body":{"classes/Data.html":{}}}],["makeasmultiparentedgesdata(multiparentlinksdata",{"_index":1728,"title":{},"body":{"classes/Data.html":{}}}],["makeastreedata",{"_index":1703,"title":{},"body":{"classes/Data.html":{}}}],["makeastreedata(_currentsheet",{"_index":1732,"title":{},"body":{"classes/Data.html":{}}}],["makeastreeheightsignal",{"_index":3793,"title":{},"body":{"classes/Signals.html":{}}}],["makeastreeheightsignal(height",{"_index":3811,"title":{},"body":{"classes/Signals.html":{}}}],["makeastreelinksdata",{"_index":1704,"title":{},"body":{"classes/Data.html":{}}}],["makeastreewidthsignal",{"_index":3794,"title":{},"body":{"classes/Signals.html":{}}}],["makeastreewidthsignal(width",{"_index":3813,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodal",{"_index":4328,"title":{},"body":{"injectables/VegaService.html":{}}}],["makebimodal(view",{"_index":4336,"title":{},"body":{"injectables/VegaService.html":{}}}],["makebimodaldata",{"_index":717,"title":{},"body":{"injectables/BimodalService.html":{}}}],["makebimodaldata(sheetdata",{"_index":723,"title":{},"body":{"injectables/BimodalService.html":{}}}],["makebimodaledgesdata",{"_index":1705,"title":{},"body":{"classes/Data.html":{}}}],["makebimodallegend",{"_index":2985,"title":{},"body":{"classes/Legends.html":{}}}],["makebimodalmarkgroup",{"_index":535,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Marks.html":{}}}],["makebimodalnodeclickstatesignal",{"_index":3795,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodalnodehoverstatesignal",{"_index":3796,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodalnodesdata",{"_index":1706,"title":{},"body":{"classes/Data.html":{}}}],["makebimodalnodesourceshoverstatesignal",{"_index":3797,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodalnodetargetshoverstatesignal",{"_index":3798,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodalpathmarks",{"_index":536,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["makebimodalsourcesclickstatesignal",{"_index":3799,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodalsymbolmarks",{"_index":537,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["makebimodaltargetsclickstatesignal",{"_index":3800,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodaltextclicksignal",{"_index":3801,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodaltextdiscrepencyidmarks",{"_index":538,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["makebimodaltextdiscrepencylabelmarks",{"_index":539,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["makebimodaltextduplicateidmarks",{"_index":540,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["makebimodaltexthoversignal",{"_index":3802,"title":{},"body":{"classes/Signals.html":{}}}],["makebimodaltextsearchmarks",{"_index":541,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["makebimodalwithdiscrepencyid",{"_index":1504,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makebimodalwithdiscrepencyid(config",{"_index":1515,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makebimodalwithdiscrepencylabel",{"_index":1505,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makebimodalwithdiscrepencylabel(config",{"_index":1517,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makebiomarkers",{"_index":771,"title":{},"body":{"injectables/BimodalService.html":{},"miscellaneous/functions.html":{}}}],["makebiomarkers(data",{"_index":4504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makebiomarkers(sheetdata",{"_index":865,"title":{},"body":{"injectables/BimodalService.html":{}}}],["makebiomodalpathdoisignal",{"_index":3803,"title":{},"body":{"classes/Signals.html":{}}}],["makebiomodalscale",{"_index":3642,"title":{},"body":{"classes/Scales.html":{}}}],["makebiomodaltextlinkmarks",{"_index":542,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["makebiomodaltextmarks",{"_index":543,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["makecelltypes",{"_index":772,"title":{},"body":{"injectables/BimodalService.html":{},"miscellaneous/functions.html":{}}}],["makecelltypes(data",{"_index":4505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makecelltypes(sheetdata",{"_index":828,"title":{},"body":{"injectables/BimodalService.html":{}}}],["makediscrepencyiddata",{"_index":1707,"title":{},"body":{"classes/Data.html":{}}}],["makediscrepencylabeldata",{"_index":1708,"title":{},"body":{"classes/Data.html":{}}}],["makediscrepencysignal",{"_index":3804,"title":{},"body":{"classes/Signals.html":{}}}],["makeduplicateid",{"_index":1506,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makeduplicateid(config",{"_index":1519,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["makeduplicateiddata",{"_index":1709,"title":{},"body":{"classes/Data.html":{}}}],["makeindentdata",{"_index":2832,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["makeindentdata(currentsheet",{"_index":2833,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["makelegenddata",{"_index":2952,"title":{},"body":{"injectables/LegendService.html":{}}}],["makelegenddata(treedata",{"_index":2953,"title":{},"body":{"injectables/LegendService.html":{}}}],["makemultiparentmarkgroup",{"_index":3109,"title":{},"body":{"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{}}}],["makemultiparentpathmarks",{"_index":3163,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["makenodeinfostring",{"_index":4329,"title":{},"body":{"injectables/VegaService.html":{}}}],["makenodeinfostring(node",{"_index":4339,"title":{},"body":{"injectables/VegaService.html":{}}}],["makesearchidsdata",{"_index":1710,"title":{},"body":{"classes/Data.html":{}}}],["makesearchsignal",{"_index":3805,"title":{},"body":{"classes/Signals.html":{}}}],["makeshowontologyidsignal",{"_index":3806,"title":{},"body":{"classes/Signals.html":{}}}],["makeshowontologyidsignal(value",{"_index":3838,"title":{},"body":{"classes/Signals.html":{}}}],["makesourcesclickdata",{"_index":1711,"title":{},"body":{"classes/Data.html":{}}}],["makesourceshoverdata",{"_index":1712,"title":{},"body":{"classes/Data.html":{}}}],["makesourcesofsourcesclickdata",{"_index":1713,"title":{},"body":{"classes/Data.html":{}}}],["makesourcesofsourceshoverdata",{"_index":1714,"title":{},"body":{"classes/Data.html":{}}}],["maketargetsclickdata",{"_index":1715,"title":{},"body":{"classes/Data.html":{}}}],["maketargetshoverdata",{"_index":1716,"title":{},"body":{"classes/Data.html":{}}}],["maketargetsoftargetsclickdata",{"_index":1717,"title":{},"body":{"classes/Data.html":{}}}],["maketargetsoftargetshoverdata",{"_index":1718,"title":{},"body":{"classes/Data.html":{}}}],["maketreedata",{"_index":4022,"title":{},"body":{"injectables/TreeService.html":{}}}],["maketreedata(currentsheet",{"_index":4024,"title":{},"body":{"injectables/TreeService.html":{}}}],["maketreelegend",{"_index":2986,"title":{},"body":{"classes/Legends.html":{}}}],["maketreelegendscale",{"_index":3643,"title":{},"body":{"classes/Scales.html":{}}}],["maketreemarkgroup",{"_index":3110,"title":{},"body":{"classes/Marks.html":{},"classes/TreeMarkGroup.html":{}}}],["maketreepathmarks",{"_index":3987,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["maketreesymbolmarks",{"_index":3988,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["maketreetextlinkmarks",{"_index":3989,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["maketreetextmarks",{"_index":3990,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["makevegaconfig",{"_index":4330,"title":{},"body":{"injectables/VegaService.html":{}}}],["makevegaconfig(currentsheet",{"_index":4341,"title":{},"body":{"injectables/VegaService.html":{}}}],["makeviewmodeclickdata",{"_index":1719,"title":{},"body":{"classes/Data.html":{}}}],["makeviewmodehoverdata",{"_index":1720,"title":{},"body":{"classes/Data.html":{}}}],["making",{"_index":825,"title":{},"body":{"injectables/BimodalService.html":{}}}],["map",{"_index":929,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/ConfigService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/SheetService.html":{}}}],["map((data",{"_index":1459,"title":{},"body":{"injectables/ConfigService.html":{}}}],["map((element",{"_index":1460,"title":{},"body":{"injectables/ConfigService.html":{}}}],["map((res",{"_index":3748,"title":{},"body":{"injectables/SheetService.html":{}}}],["map((val",{"_index":923,"title":{},"body":{"injectables/BimodalService.html":{}}}],["map(formatdata",{"_index":3147,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mapping",{"_index":1244,"title":{},"body":{"components/CompareComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{}}}],["maps",{"_index":3686,"title":{},"body":{"injectables/SheetService.html":{}}}],["margin",{"_index":1308,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/NavItemComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["mark",{"_index":548,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"classes/Marks.html":{},"classes/TreeMarkGroup.html":{}}}],["markdown",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"modules/DocsModule.html":{},"injectables/DocsService.html":{},"modules/InfoModule.html":{}}}],["markdownmodule",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"modules/DocsModule.html":{},"modules/InfoModule.html":{}}}],["markdownmodule.forroot",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["marker",{"_index":105,"title":{"classes/Marker.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["marker.btype",{"_index":890,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.color",{"_index":886,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.indegree",{"_index":887,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.isnew",{"_index":885,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.link",{"_index":882,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.nodesize",{"_index":883,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.notes",{"_index":880,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.organname",{"_index":881,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.outdegree",{"_index":888,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.proteinpresence",{"_index":884,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker.structure",{"_index":879,"title":{},"body":{"injectables/BimodalService.html":{}}}],["marker_col",{"_index":92,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["markers",{"_index":111,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["markformgrouptouched",{"_index":1085,"title":{},"body":{"components/CompareComponent.html":{}}}],["markformgrouptouched(formgroup",{"_index":1121,"title":{},"body":{"components/CompareComponent.html":{}}}],["marks",{"_index":570,"title":{"classes/Marks.html":{}},"body":{"classes/BimodalMarkGroup.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{}}}],["marks().marks",{"_index":3122,"title":{},"body":{"classes/Marks.html":{}}}],["marks.create",{"_index":4397,"title":{},"body":{"injectables/VegaService.html":{}}}],["master",{"_index":2000,"title":{},"body":{"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["mastersheetlink",{"_index":1389,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["mastertoggle",{"_index":3283,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["mat",{"_index":1279,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/SearchModule.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["mat_bottom_sheet_data",{"_index":2125,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["mat_dialog_data",{"_index":3019,"title":{},"body":{"components/LoadingComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["mat_snack_bar_data",{"_index":3960,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["matbottomsheetmodule",{"_index":2148,"title":{},"body":{"modules/DoiModule.html":{},"modules/InfoModule.html":{},"modules/RootModule.html":{}}}],["matbottomsheetref",{"_index":2116,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["matbuttonmodule",{"_index":1435,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DoiModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/UploadModule.html":{}}}],["matbuttontogglemodule",{"_index":3668,"title":{},"body":{"modules/SearchModule.html":{}}}],["matcardmodule",{"_index":1437,"title":{},"body":{"modules/CompareModule.html":{},"modules/UploadModule.html":{}}}],["match",{"_index":1620,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/ErrorComponent.html":{}}}],["matcheckboxmodule",{"_index":3236,"title":{},"body":{"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["matching",{"_index":131,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialogmodule",{"_index":3446,"title":{},"body":{"modules/OrganTableSelectorModule.html":{},"modules/RootModule.html":{}}}],["matdialogref",{"_index":3287,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["matexpansionmodule",{"_index":1425,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/FunctionsModule.html":{},"modules/LegendModule.html":{},"modules/OmapControlsModule.html":{},"modules/ReportModule.html":{},"modules/UploadModule.html":{}}}],["matformfieldmodule",{"_index":3205,"title":{},"body":{"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{}}}],["maticonmodule",{"_index":1427,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DoiModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/UploadModule.html":{}}}],["maticonregistry",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodule",{"_index":1428,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/FileUploadModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{},"modules/UploadModule.html":{}}}],["matlistmodule",{"_index":1865,"title":{},"body":{"modules/DebugLogsModule.html":{},"modules/SearchModule.html":{}}}],["matmenu",{"_index":3911,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["matmenumodule",{"_index":2281,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/HomeModule.html":{},"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/TableNestedMenuModule.html":{}}}],["matoptionmodule",{"_index":3666,"title":{},"body":{"modules/SearchModule.html":{}}}],["matselectchange",{"_index":2430,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["matselectmodule",{"_index":2480,"title":{},"body":{"modules/FunctionsModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["matsidenavmodule",{"_index":2052,"title":{},"body":{"modules/DocsModule.html":{},"modules/RootModule.html":{}}}],["matslidermodule",{"_index":1695,"title":{},"body":{"modules/ControlsModule.html":{}}}],["matslidetogglemodule",{"_index":1699,"title":{},"body":{"modules/ControlsModule.html":{},"modules/OrganTableSelectorModule.html":{}}}],["matsnackbar",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["matsnackbarmodule",{"_index":3634,"title":{},"body":{"modules/RootModule.html":{}}}],["matsortmodule",{"_index":3611,"title":{},"body":{"modules/ReportModule.html":{}}}],["mattabchangeevent",{"_index":3471,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["mattabledatasource",{"_index":3306,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["mattabledatasource(this.omapsheetoptions",{"_index":3344,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["mattabledatasource(this.sheetoptions",{"_index":3350,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["mattablemodule",{"_index":3447,"title":{},"body":{"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{}}}],["mattabsmodule",{"_index":1867,"title":{},"body":{"modules/DebugLogsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{}}}],["mattoolbarmodule",{"_index":3200,"title":{},"body":{"modules/NavbarModule.html":{}}}],["mattooltipmodule",{"_index":1697,"title":{},"body":{"modules/ControlsModule.html":{},"modules/FunctionsModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/ReportModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{}}}],["mattree",{"_index":2294,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["mattreeflatdatasource",{"_index":2295,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":2322,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["mattreeflattener",{"_index":2296,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["mattreemodule",{"_index":2830,"title":{},"body":{"modules/IndentedListModule.html":{}}}],["max",{"_index":1856,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/DoiComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/VisControlsComponent.html":{}}}],["mc",{"_index":2635,"title":{},"body":{"components/HomeComponent.html":{}}}],["md",{"_index":2038,"title":{},"body":{"components/DocsComponent.html":{}}}],["mdc",{"_index":2472,"title":{},"body":{"components/FunctionsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["media",{"_index":2410,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["medium",{"_index":2722,"title":{},"body":{"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["members",{"_index":2634,"title":{},"body":{"components/HomeComponent.html":{}}}],["mentioned",{"_index":1226,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"components/UploadComponent.html":{}}}],["menu",{"_index":2028,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/TableNestedMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["menu'},{'name",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["menu.component",{"_index":3924,"title":{},"body":{"modules/TableNestedMenuModule.html":{}}}],["menu.component.html",{"_index":3903,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.scss",{"_index":3902,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts",{"_index":3901,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:11",{"_index":3907,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:12",{"_index":3908,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:13",{"_index":3916,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:14",{"_index":3913,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:15",{"_index":3915,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.component.ts:17",{"_index":3910,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["menu.module",{"_index":2779,"title":{},"body":{"modules/HomeModule.html":{},"modules/NavbarModule.html":{},"modules/RootModule.html":{}}}],["menu.module.ts",{"_index":3923,"title":{},"body":{"modules/TableNestedMenuModule.html":{}}}],["menu/table",{"_index":2778,"title":{},"body":{"modules/HomeModule.html":{},"modules/NavbarModule.html":{},"modules/RootModule.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{}}}],["menu:hover",{"_index":2654,"title":{},"body":{"components/HomeComponent.html":{}}}],["merge",{"_index":2601,"title":{},"body":{"components/HomeComponent.html":{}}}],["message",{"_index":1021,"title":{},"body":{"classes/ClearSheetLogs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/UIStateModel.html":{}}}],["messages",{"_index":3056,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["metabolites",{"_index":177,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":260,"title":{"interfaces/Metadata.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"pipes/OrderByPipe.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["method",{"_index":1786,"title":{},"body":{"classes/Data.html":{},"components/OrganTableSelectorComponent.html":{}}}],["methods",{"_index":202,"title":{},"body":{"modules/AnalyticsModule.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/LogsState.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"components/OmapControlsComponent.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["middle",{"_index":701,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/OrganTableSelectorComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["milti",{"_index":1026,"title":{},"body":{"classes/ClearSheetLogs.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["min",{"_index":1839,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["miner",{"_index":4028,"title":{},"body":{"injectables/TreeService.html":{}}}],["miscellaneous",{"_index":4474,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":4451,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["missing",{"_index":4452,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["mit",{"_index":2397,"title":{},"body":{"components/FooterComponent.html":{}}}],["mode",{"_index":1888,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["model",{"_index":4170,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["models/bimodal.model",{"_index":761,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["models/ga.model",{"_index":1144,"title":{},"body":{"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["models/indent.model",{"_index":2299,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{}}}],["models/legend.model",{"_index":2918,"title":{},"body":{"components/LegendComponent.html":{},"injectables/LegendService.html":{}}}],["models/logs.model",{"_index":764,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["models/omap.model",{"_index":765,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/OmapControlsComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["models/report.model",{"_index":1874,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["models/response.model",{"_index":767,"title":{},"body":{"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/ControlPaneComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["models/sheet.model",{"_index":768,"title":{},"body":{"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"components/DoiComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["models/tree.model",{"_index":769,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["models/ui.model",{"_index":1035,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"injectables/VegaService.html":{}}}],["module",{"_index":184,"title":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["modules",{"_index":186,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{},"modules.html":{}}}],["modules/docs/docs.component",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/docs/docs.module",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/root/root.component",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/root/root.module",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/tree/bimodal.service",{"_index":2444,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["modulewithproviders",{"_index":212,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["more",{"_index":3413,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"miscellaneous/variables.html":{}}}],["moreoption",{"_index":1392,"title":{"interfaces/MoreOption.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["moreoptions",{"_index":1391,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["mouse",{"_index":3821,"title":{},"body":{"classes/Signals.html":{}}}],["mouseevent",{"_index":3137,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove",{"_index":3150,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove').pipe(throttletime(1000",{"_index":3146,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mouseover[!event.item",{"_index":3871,"title":{},"body":{"classes/Signals.html":{}}}],["mousepositiontrackermodule",{"_index":427,"title":{"modules/MousePositionTrackerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MousePositionTrackerModule.html":{},"index.html":{},"modules.html":{}}}],["msg",{"_index":965,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"injectables/TreeService.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["multi",{"_index":74,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"index.html":{}}}],["multi_in_links",{"_index":3057,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["multi_parent_edges",{"_index":1797,"title":{},"body":{"classes/Data.html":{},"classes/MultiParentMarkGroup.html":{}}}],["multimessage",{"_index":1027,"title":{},"body":{"classes/ClearSheetLogs.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["multiparent",{"_index":3115,"title":{},"body":{"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{}}}],["multiparentlinksdata",{"_index":1731,"title":{},"body":{"classes/Data.html":{},"injectables/VegaService.html":{}}}],["multiparentmarkgroup",{"_index":3118,"title":{"classes/MultiParentMarkGroup.html":{}},"body":{"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{}}}],["multiparentmarkgroup().group",{"_index":3168,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["multiparentmarkgroup.create",{"_index":3127,"title":{},"body":{"classes/Marks.html":{}}}],["multiplexed",{"_index":3312,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["muted",{"_index":2766,"title":{},"body":{"components/HomeComponent.html":{}}}],["mw",{"_index":3780,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["n",{"_index":2382,"title":{},"body":{"components/FooterComponent.html":{}}}],["name",{"_index":48,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/CloseLoading.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenLoading.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name.tolowercase",{"_index":2792,"title":{},"body":{"classes/ILNode.html":{}}}],["names",{"_index":3841,"title":{},"body":{"classes/Signals.html":{},"miscellaneous/variables.html":{}}}],["nav",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/UpdateLoadingText.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nav'},{'name",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["nav.component",{"_index":2087,"title":{},"body":{"modules/DocsNavModule.html":{}}}],["nav.component.html",{"_index":2062,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.scss",{"_index":2061,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts",{"_index":2060,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:11",{"_index":2074,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:12",{"_index":2073,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:13",{"_index":2072,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:15",{"_index":2068,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:16",{"_index":2069,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:17",{"_index":2070,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.component.ts:18",{"_index":2071,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["nav.module",{"_index":2058,"title":{},"body":{"modules/DocsModule.html":{}}}],["nav.module.ts",{"_index":2086,"title":{},"body":{"modules/DocsNavModule.html":{}}}],["nav/docs",{"_index":2057,"title":{},"body":{"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{}}}],["nav:hover",{"_index":2664,"title":{},"body":{"components/HomeComponent.html":{}}}],["navbar",{"_index":2007,"title":{},"body":{"components/DocsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["navbar'},{'name",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["navbar.component",{"_index":3199,"title":{},"body":{"modules/NavbarModule.html":{}}}],["navbar/navbar.module",{"_index":3631,"title":{},"body":{"modules/RootModule.html":{}}}],["navbarcomponent",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"modules/NavbarModule.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["navbarmodule",{"_index":3192,"title":{"modules/NavbarModule.html":{}},"body":{"modules/NavbarModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["navigation",{"_index":1981,"title":{},"body":{"components/DocsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{}}}],["navigationend",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["navitemcomponent",{"_index":381,"title":{"components/NavItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["navitemmodule",{"_index":3186,"title":{"modules/NavItemModule.html":{}},"body":{"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"index.html":{},"modules.html":{}}}],["nbsp",{"_index":1254,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["needs",{"_index":1759,"title":{},"body":{"classes/Data.html":{}}}],["neg",{"_index":1342,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["negative",{"_index":1343,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["nested",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"modules/NavbarModule.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/RootModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["network",{"_index":551,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/InfoComponent.html":{},"classes/Marks.html":{},"classes/Signals.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["new",{"_index":572,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/LocalStorageSyncService.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["newas",{"_index":1404,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["newb",{"_index":1408,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["newct",{"_index":1406,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["newleaf",{"_index":796,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.color",{"_index":811,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.id",{"_index":804,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.indegree",{"_index":815,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.isnew",{"_index":809,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.label",{"_index":819,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.ontologyid",{"_index":813,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.outdegree",{"_index":818,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.pathcolor",{"_index":807,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newleaf.problem",{"_index":805,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newlog",{"_index":3083,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["newnode",{"_index":844,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["newnode.btype",{"_index":889,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newnode.color",{"_index":855,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["newnode.comparator",{"_index":2852,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["newnode.comparatorid",{"_index":4082,"title":{},"body":{"injectables/TreeService.html":{}}}],["newnode.comparatorname",{"_index":4083,"title":{},"body":{"injectables/TreeService.html":{}}}],["newnode.id",{"_index":850,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newnode.indegree",{"_index":856,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newnode.isnew",{"_index":851,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["newnode.label",{"_index":860,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["newnode.name",{"_index":2853,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["newnode.ontologyid",{"_index":2854,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["newnode.outdegree",{"_index":858,"title":{},"body":{"injectables/BimodalService.html":{}}}],["newnode.pathcolor",{"_index":853,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["newnode.references",{"_index":862,"title":{},"body":{"injectables/BimodalService.html":{}}}],["next",{"_index":824,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsNavComponent.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["next_plan",{"_index":3062,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"miscellaneous/enumerations.html":{}}}],["nextclick",{"_index":2066,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["ng",{"_index":1270,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["ng_validators",{"_index":2218,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":2216,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":2331,"title":{},"body":{"interfaces/FlatNode.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"components/PlaygroundComponent.html":{}}}],["ngmodule",{"_index":214,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{}}}],["ngonchanges",{"_index":2922,"title":{},"body":{"components/LegendComponent.html":{}}}],["ngondestroy",{"_index":1489,"title":{},"body":{"injectables/ConsentService.html":{},"interfaces/FlatNode.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Node.html":{}}}],["ngoninit",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"interfaces/Node.html":{},"components/UploadComponent.html":{}}}],["ngx",{"_index":218,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"modules/MousePositionTrackerModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/SearchModule.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["ngx_google_analytics_settings_token",{"_index":2507,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngx_window",{"_index":2508,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngxchartsmodule",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"modules/ReportModule.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":217,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxgoogleanalyticsmodule.forroot(options.gatoken",{"_index":249,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxmatselectsearchmodule",{"_index":3665,"title":{},"body":{"modules/SearchModule.html":{}}}],["ngxs",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxs/devtools",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxs/logger",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxs/store",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/LoadingComponent.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["ngxsloggerpluginmodule",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsmodule",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsmodule.forroot([sheetstate",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsreduxdevtoolspluginmodule",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsreduxdevtoolspluginmodule.forroot",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsresetpluginmodule",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsresetpluginmodule.forroot",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["nikhil",{"_index":4595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nmahade@iu.edu",{"_index":4597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["no_in_links",{"_index":3058,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["no_out_links",{"_index":3059,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["node",{"_index":646,"title":{"interfaces/Node.html":{}},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"interfaces/FlatNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"classes/Signals.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"injectables/VegaService.html":{}}}],["node.children",{"_index":1606,"title":{},"body":{"components/ControlPaneComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["node.children.length",{"_index":2318,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["node.color",{"_index":4088,"title":{},"body":{"injectables/TreeService.html":{}}}],["node.expandable",{"_index":2314,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["node.group",{"_index":892,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{}}}],["node.groupname",{"_index":1612,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/VegaService.html":{}}}],["node.id",{"_index":908,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{}}}],["node.indegree?.foreach((str",{"_index":909,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.label",{"_index":1607,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["node.level",{"_index":2316,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["node.name",{"_index":914,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"injectables/VegaService.html":{}}}],["node.ontologyid",{"_index":1609,"title":{},"body":{"components/ControlPaneComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"injectables/VegaService.html":{}}}],["node.organname",{"_index":938,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.outdegree?.foreach((str",{"_index":894,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.pathcolor",{"_index":4089,"title":{},"body":{"injectables/TreeService.html":{}}}],["node.sources",{"_index":893,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.sources.findindex((l",{"_index":910,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.sources.push(nodes[foundindex].id",{"_index":911,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.sources.push(s",{"_index":947,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.targets.findindex((l",{"_index":903,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.targets.push(nodes[foundindex].id",{"_index":906,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.targets.push(s",{"_index":940,"title":{},"body":{"injectables/BimodalService.html":{}}}],["node.type",{"_index":4372,"title":{},"body":{"injectables/VegaService.html":{}}}],["node.x",{"_index":1610,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/VegaService.html":{}}}],["node.y",{"_index":1611,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/VegaService.html":{}}}],["node:hover",{"_index":2814,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["node__click",{"_index":609,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Data.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["node__hover",{"_index":639,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Data.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["node_sources__hover",{"_index":3823,"title":{},"body":{"classes/Signals.html":{}}}],["node_targets__hover",{"_index":3825,"title":{},"body":{"classes/Signals.html":{}}}],["node_type",{"_index":40,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"miscellaneous/enumerations.html":{}}}],["node_type.as",{"_index":81,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["node_type.bm",{"_index":164,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["node_type.r",{"_index":4066,"title":{},"body":{"injectables/TreeService.html":{}}}],["nodedata",{"_index":992,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodedata.values",{"_index":995,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodeid",{"_index":4381,"title":{},"body":{"injectables/VegaService.html":{}}}],["nodeinfo",{"_index":4371,"title":{},"body":{"injectables/VegaService.html":{}}}],["nodes",{"_index":75,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/variables.html":{}}}],["nodes).data('edges",{"_index":984,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodes.findindex((i",{"_index":898,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["nodes.foreach((node",{"_index":891,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodes.push(newleaf",{"_index":821,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodes.push(newnode",{"_index":864,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["nodes.push(root",{"_index":4067,"title":{},"body":{"injectables/TreeService.html":{}}}],["nodes.shift",{"_index":4090,"title":{},"body":{"injectables/TreeService.html":{}}}],["nodes[0",{"_index":4091,"title":{},"body":{"injectables/TreeService.html":{}}}],["nodes[foundindex].id",{"_index":905,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodes[foundindex].outdegree?.foreach((cellout",{"_index":912,"title":{},"body":{"injectables/BimodalService.html":{}}}],["nodes[s",{"_index":4087,"title":{},"body":{"injectables/TreeService.html":{}}}],["nodesize",{"_index":96,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["noerror",{"_index":1041,"title":{"classes/NoError.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/UpdateLoadingText.html":{}}}],["noid",{"_index":2113,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["none",{"_index":102,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"interfaces/DD.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":3430,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["normalize",{"_index":3732,"title":{},"body":{"injectables/SheetService.html":{}}}],["normalized",{"_index":3687,"title":{},"body":{"injectables/SheetService.html":{}}}],["note",{"_index":3151,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"injectables/SheetService.html":{}}}],["notes",{"_index":15,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DoiComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["now",{"_index":1249,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["nowrap",{"_index":3984,"title":{},"body":{"components/TreeComponent.html":{}}}],["null",{"_index":236,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"injectables/LocalStorageSyncService.html":{},"classes/MultiParentMarkGroup.html":{},"components/PlaygroundComponent.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{}}}],["null)?.files?.[0",{"_index":2256,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["number",{"_index":47,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Legend.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"interfaces/Node.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numberinput",{"_index":4454,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["numorgans",{"_index":2502,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/OrganTableSelectorComponent.html":{}}}],["numrows",{"_index":3390,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["numselected",{"_index":3388,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["o.name",{"_index":3342,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["obj",{"_index":4506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obj.deletecolumn(obj.getselectedcolumns().length",{"_index":3520,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.deleterow(obj.getselectedrows().length",{"_index":3537,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.download(true",{"_index":3550,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.insertcolumn(1",{"_index":3515,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.insertrow(1",{"_index":3532,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowcomments",{"_index":3538,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowdeletecolumn",{"_index":3518,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowdeleterow",{"_index":3535,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowexport",{"_index":3546,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowinsertcolumn",{"_index":3512,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowinsertrow",{"_index":3530,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.allowrenamecolumn",{"_index":3522,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.columnsorting",{"_index":3526,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.addcomments",{"_index":3541,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.clearcomments",{"_index":3544,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.deleteselectedcolumns",{"_index":3519,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.deleteselectedrows",{"_index":3536,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.editcomments",{"_index":3540,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.insertanewcolumnafter",{"_index":3517,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.insertanewcolumnbefore",{"_index":3514,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.insertanewrowafter",{"_index":3534,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.insertanewrowbefore",{"_index":3531,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.orderascending",{"_index":3527,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.orderdescending",{"_index":3529,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.renamethiscolumn",{"_index":3523,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.options.text?.saveas",{"_index":3547,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.orderby(parseint(x",{"_index":3528,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.records[+y][+x].getattribute('title",{"_index":3539,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.setcomments",{"_index":3542,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.setcomments([parseint(x",{"_index":3545,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["obj.setheader(parseint(x",{"_index":3524,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["object",{"_index":2692,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.entries(node).length",{"_index":4376,"title":{},"body":{"injectables/VegaService.html":{}}}],["object.entries(obj).reduce>((attrs",{"_index":233,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["object.entries(view).length",{"_index":4230,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["object.keys(view).length",{"_index":4046,"title":{},"body":{"injectables/TreeService.html":{}}}],["object.prototype.hasownproperty.call(as_ct",{"_index":945,"title":{},"body":{"injectables/BimodalService.html":{}}}],["object.prototype.hasownproperty.call(asbyasorganwise",{"_index":4075,"title":{},"body":{"injectables/TreeService.html":{}}}],["object.prototype.hasownproperty.call(ct_bm",{"_index":937,"title":{},"body":{"injectables/BimodalService.html":{}}}],["object.values(formgroup.controls).foreach((control",{"_index":1173,"title":{},"body":{"components/CompareComponent.html":{}}}],["observable",{"_index":1098,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{}}}],["occurred",{"_index":2165,"title":{},"body":{"components/ErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["offset",{"_index":594,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{},"classes/TreeMarkGroup.html":{}}}],["oid",{"_index":2498,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/VegaService.html":{}}}],["old",{"_index":1999,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["omap",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["omapconfig",{"_index":728,"title":{"interfaces/OmapConfig.html":{}},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FunctionsComponent.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["omapconfig?.proteinsonly",{"_index":866,"title":{},"body":{"injectables/BimodalService.html":{}}}],["omapcontrolscomponent",{"_index":384,"title":{"components/OmapControlsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["omapcontrolsmodule",{"_index":1680,"title":{"modules/OmapControlsModule.html":{}},"body":{"modules/ControlPaneModule.html":{},"modules/OmapControlsModule.html":{},"index.html":{},"modules.html":{}}}],["omapdatasource",{"_index":3272,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["omapdisplayedcolumns",{"_index":3273,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["omapid",{"_index":1379,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["omaporgans",{"_index":1347,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["omaporgans.push(element.symbol",{"_index":3383,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["omaps",{"_index":3217,"title":{},"body":{"components/OmapControlsComponent.html":{},"interfaces/TreeStateModel.html":{}}}],["omapselectedorgans",{"_index":1599,"title":{},"body":{"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["omapselection",{"_index":3274,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["omapsheetconfiguration",{"_index":1442,"title":{},"body":{"injectables/ConfigService.html":{}}}],["omapsheetoptions",{"_index":3275,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["onchange",{"_index":1937,"title":{},"body":{"components/DocsComponent.html":{},"components/FileUploadComponent.html":{}}}],["onchange(idx",{"_index":1944,"title":{},"body":{"components/DocsComponent.html":{}}}],["onchanges",{"_index":2905,"title":{},"body":{"components/LegendComponent.html":{}}}],["onclick",{"_index":2224,"title":{},"body":{"components/FileUploadComponent.html":{},"components/PlaygroundComponent.html":{}}}],["onclick(fileupload",{"_index":2232,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onclose",{"_index":3276,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["ondestroy",{"_index":1484,"title":{},"body":{"injectables/ConsentService.html":{},"interfaces/FlatNode.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Node.html":{}}}],["one",{"_index":3412,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["onfileselected",{"_index":2225,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onfileselected(event",{"_index":2236,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["oninit",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"interfaces/Node.html":{},"components/UploadComponent.html":{}}}],["onlatest",{"_index":1938,"title":{},"body":{"components/DocsComponent.html":{}}}],["ontology",{"_index":678,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/ControlPaneComponent.html":{},"components/InfoComponent.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"components/VisControlsComponent.html":{}}}],["ontologycode",{"_index":1370,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ontologyid",{"_index":50,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ontologytype",{"_index":1398,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ontologytypeid",{"_index":1397,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ontouched",{"_index":2222,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onvalidatorchange",{"_index":2223,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["opacity",{"_index":607,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"classes/Data.html":{},"components/HomeComponent.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{},"components/UploadComponent.html":{}}}],["open",{"_index":1037,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{}}}],["openbottomsheet",{"_index":1055,"title":{"classes/OpenBottomSheet.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"interfaces/FlatNode.html":{},"classes/HasError.html":{},"components/IndentedListComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{}}}],["openbottomsheet(node",{"_index":4377,"title":{},"body":{"injectables/VegaService.html":{}}}],["openbottomsheetdata",{"_index":1034,"title":{"interfaces/OpenBottomSheetData.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"injectables/VegaService.html":{}}}],["openbottomsheetdoi",{"_index":1056,"title":{"classes/OpenBottomSheetDOI.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{}}}],["openbottomsheetdoi(text",{"_index":4386,"title":{},"body":{"injectables/VegaService.html":{}}}],["opencompare",{"_index":1058,"title":{"classes/OpenCompare.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["opendata",{"_index":1939,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["opendataold",{"_index":1940,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["opendocs",{"_index":2344,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["opened",{"_index":3009,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{},"interfaces/UIStateModel.html":{}}}],["openfaq",{"_index":2345,"title":{},"body":{"components/FooterComponent.html":{}}}],["opengithub",{"_index":1941,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["openloading",{"_index":1036,"title":{"classes/OpenLoading.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["opensearch",{"_index":1060,"title":{"classes/OpenSearch.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["opensnackbar",{"_index":1044,"title":{"classes/OpenSnackbar.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["opensnackbar(text",{"_index":4206,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["openurl",{"_index":3906,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["openurl(sheetid",{"_index":3909,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["opt",{"_index":3948,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["option",{"_index":1234,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"components/FunctionsComponent.html":{},"interfaces/Response.html":{},"classes/Scales.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{}}}],["option.title",{"_index":2619,"title":{},"body":{"components/HomeComponent.html":{}}}],["option.viewvalue",{"_index":3415,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/CloseLoading.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenLoading.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/Reference.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/ResponseData.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":210,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1228,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["orderby",{"_index":3253,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["orderbypipe",{"_index":2944,"title":{"pipes/OrderByPipe.html":{}},"body":{"modules/LegendModule.html":{},"pipes/OrderByPipe.html":{},"modules/ReportModule.html":{},"index.html":{}}}],["ordinal",{"_index":3658,"title":{},"body":{"classes/Scales.html":{}}}],["organ",{"_index":108,"title":{"interfaces/Organ.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"interfaces/DiscrepencyStructure.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"interfaces/LinksASCTBData.html":{},"components/LoadingComponent.html":{},"classes/Marker.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["organmenu",{"_index":2712,"title":{},"body":{"components/HomeComponent.html":{}}}],["organname",{"_index":16,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["organrow",{"_index":112,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["organs",{"_index":1346,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/OmapControlsComponent.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["organslist",{"_index":1904,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["organsonly",{"_index":3210,"title":{},"body":{"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"interfaces/TreeStateModel.html":{}}}],["organtableonclose",{"_index":1350,"title":{"interfaces/OrganTableOnClose.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["organtableselect",{"_index":1345,"title":{"interfaces/OrganTableSelect.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["organtableselectorcomponent",{"_index":387,"title":{"components/OrganTableSelectorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["organtableselectormodule",{"_index":428,"title":{"modules/OrganTableSelectorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrganTableSelectorModule.html":{},"index.html":{},"modules.html":{}}}],["orgon",{"_index":3427,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["orient",{"_index":1794,"title":{},"body":{"classes/Data.html":{},"classes/Legends.html":{}}}],["out",{"_index":200,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"classes/BimodalMarkGroup.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["outdegree",{"_index":17,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["outline",{"_index":1269,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["output",{"_index":1137,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["outputs",{"_index":1090,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"components/IndentedListComponent.html":{},"components/OmapControlsComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["over",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow",{"_index":1277,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DoiComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{}}}],["overview",{"_index":2621,"title":{"index.html":{}},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["owl",{"_index":3723,"title":{},"body":{"injectables/SheetService.html":{}}}],["p",{"_index":1337,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/FooterComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"components/TrackingPopupComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["pad",{"_index":4391,"title":{},"body":{"injectables/VegaService.html":{}}}],["padding",{"_index":1274,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["page_path",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["pages",{"_index":2102,"title":{},"body":{"injectables/DocsService.html":{}}}],["pane",{"_index":1043,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/ControlPaneComponent.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["pane'},{'name",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["pane.component",{"_index":1689,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["pane.component.html",{"_index":1498,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.scss",{"_index":1497,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts",{"_index":1496,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:110",{"_index":1522,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:119",{"_index":1518,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:157",{"_index":1516,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:195",{"_index":1520,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:24",{"_index":1514,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:243",{"_index":1525,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:26",{"_index":1536,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:261",{"_index":1523,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:265",{"_index":1521,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:27",{"_index":1548,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:274",{"_index":1530,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:29",{"_index":1557,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:30",{"_index":1546,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:32",{"_index":1551,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:34",{"_index":1534,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:35",{"_index":1539,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:37",{"_index":1553,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:39",{"_index":1544,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:40",{"_index":1541,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:42",{"_index":1542,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:43",{"_index":1554,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:45",{"_index":1555,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:46",{"_index":1513,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:49",{"_index":1549,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:50",{"_index":1531,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:51",{"_index":1558,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:52",{"_index":1537,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.component.ts:78",{"_index":1527,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pane.module",{"_index":3624,"title":{},"body":{"modules/RootModule.html":{}}}],["pane.module.ts",{"_index":1681,"title":{},"body":{"modules/ControlPaneModule.html":{}}}],["pane/control",{"_index":1495,"title":{},"body":{"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/RootModule.html":{}}}],["panel",{"_index":1246,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["panel:not([class*='mat",{"_index":1281,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["panels",{"_index":3228,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["paneopen",{"_index":4509,"title":{},"body":{"miscellaneous/functions.html":{}}}],["panewidth",{"_index":4510,"title":{},"body":{"miscellaneous/functions.html":{}}}],["param",{"_index":776,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Data.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["parameter",{"_index":3701,"title":{},"body":{"injectables/SheetService.html":{}}}],["parameters",{"_index":209,"title":{},"body":{"modules/AnalyticsModule.html":{},"components/AppComponent.html":{},"classes/BMNode.html":{},"injectables/BimodalService.html":{},"classes/Cell.html":{},"classes/CloseLoading.html":{},"components/CompareComponent.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"classes/Marker.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenLoading.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":3724,"title":{},"body":{"injectables/SheetService.html":{}}}],["parent",{"_index":49,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/IndentedListService.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{}}}],["parent.children?.[s",{"_index":2856,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["parent.children?.findindex",{"_index":2845,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["parent.children?.push(newnode",{"_index":2855,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["parent.comparator",{"_index":2848,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["parent.comparatorid",{"_index":4071,"title":{},"body":{"injectables/TreeService.html":{}}}],["parent.comparatorname",{"_index":4074,"title":{},"body":{"injectables/TreeService.html":{}}}],["parent.id",{"_index":4079,"title":{},"body":{"injectables/TreeService.html":{}}}],["parentkey",{"_index":1785,"title":{},"body":{"classes/Data.html":{}}}],["parents",{"_index":56,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["parse",{"_index":4353,"title":{},"body":{"injectables/VegaService.html":{}}}],["parse(config",{"_index":4361,"title":{},"body":{"injectables/VegaService.html":{}}}],["parsed",{"_index":1363,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["parseint(x",{"_index":3516,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["parseint(y",{"_index":3533,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["parsing",{"_index":4631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":2130,"title":{},"body":{"components/DoiComponent.html":{}}}],["particular",{"_index":3691,"title":{},"body":{"injectables/SheetService.html":{}}}],["partonomy",{"_index":4348,"title":{},"body":{"injectables/VegaService.html":{}}}],["partonomy/vega",{"_index":4345,"title":{},"body":{"injectables/VegaService.html":{}}}],["passing",{"_index":3682,"title":{},"body":{"injectables/SheetService.html":{}}}],["pasting",{"_index":1223,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["patchstate",{"_index":4136,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["path",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{},"miscellaneous/variables.html":{}}}],["path:click",{"_index":3860,"title":{},"body":{"classes/Signals.html":{}}}],["path__click",{"_index":3859,"title":{},"body":{"classes/Signals.html":{}}}],["pathcolor",{"_index":55,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["paths",{"_index":553,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/LegendService.html":{},"classes/TreeMarkGroup.html":{}}}],["paul",{"_index":4537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":1253,"title":{},"body":{"components/CompareComponent.html":{}}}],["pipe",{"_index":3249,"title":{"pipes/OrderByPipe.html":{}},"body":{"pipes/OrderByPipe.html":{},"index.html":{}}}],["pipe(take(1",{"_index":1451,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pipes",{"_index":3250,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["pipes/order",{"_index":2947,"title":{},"body":{"modules/LegendModule.html":{},"modules/ReportModule.html":{}}}],["pipetransform",{"_index":3259,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["play",{"_index":4642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player",{"_index":2532,"title":{},"body":{"components/HomeComponent.html":{},"modules/HomeModule.html":{}}}],["playground",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["playground'},{'name",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["playground.component",{"_index":3594,"title":{},"body":{"modules/PlaygroundModule.html":{}}}],["playground.component.html",{"_index":3450,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["playground.component.scss",{"_index":3449,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["playground/playground.module",{"_index":3633,"title":{},"body":{"modules/RootModule.html":{}}}],["playgroundcomponent",{"_index":390,"title":{"components/PlaygroundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["playgroundmodule",{"_index":3586,"title":{"modules/PlaygroundModule.html":{}},"body":{"modules/PlaygroundModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["playgroundsheetoptions",{"_index":1385,"title":{"interfaces/PlaygroundSheetOptions.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["please",{"_index":1240,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{},"components/UploadComponent.html":{}}}],["plugin",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["pnbhakta@iu.edu",{"_index":4604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pointer",{"_index":662,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/NavItemComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["points",{"_index":3143,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["points.join('_",{"_index":3144,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["policy",{"_index":2378,"title":{},"body":{"components/FooterComponent.html":{}}}],["poppins",{"_index":2011,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["popup",{"_index":3935,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup'},{'name",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["popup.component",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"modules/TrackingPopupModule.html":{}}}],["popup.component.html",{"_index":3937,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.scss",{"_index":3936,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts",{"_index":3932,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:12",{"_index":3945,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:14",{"_index":3957,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:18",{"_index":3944,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:23",{"_index":3955,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:28",{"_index":3946,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:32",{"_index":3951,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:37",{"_index":3949,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.module",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["popup.module.ts",{"_index":3977,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup/tracking",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{}}}],["pos",{"_index":1340,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["position",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{}}}],["positive",{"_index":1341,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["possible",{"_index":1647,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["pramod",{"_index":4602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preclose",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["presence",{"_index":2977,"title":{},"body":{"injectables/LegendService.html":{}}}],["presevation",{"_index":3316,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["prev",{"_index":2065,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["prevclick",{"_index":2067,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["previous",{"_index":1890,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"components/DocsNavComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["prevtab",{"_index":3452,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["private",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/DocsComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Node.html":{}}}],["privileges",{"_index":1236,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["pro",{"_index":2690,"title":{},"body":{"components/HomeComponent.html":{}}}],["problem",{"_index":51,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["problems",{"_index":2163,"title":{},"body":{"components/ErrorComponent.html":{}}}],["production",{"_index":4647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":2768,"title":{},"body":{"components/HomeComponent.html":{}}}],["projectname",{"_index":227,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["promise",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["promise.all([configservice.sheetconfiguration$.topromise",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["prompt(obj.options.text?.comments",{"_index":3543,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["prop",{"_index":1528,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["prop.config.height",{"_index":1587,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["prop.config.show_ontology).runasync",{"_index":1590,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["prop.config.width",{"_index":1585,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["prop.property",{"_index":1583,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["proper",{"_index":3756,"title":{},"body":{"injectables/SheetService.html":{}}}],["properly",{"_index":3156,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"classes/Scales.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["property",{"_index":1582,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/DoiComponent.html":{},"components/VisControlsComponent.html":{}}}],["protein",{"_index":175,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["protein_presence",{"_index":26,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["protein_presence.intermediate",{"_index":920,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["protein_presence.neg",{"_index":918,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["protein_presence.pos",{"_index":916,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/LegendService.html":{}}}],["protein_presence.unknown",{"_index":152,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["proteinpresence",{"_index":88,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["proteins",{"_index":3229,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["proteinsonly",{"_index":3211,"title":{},"body":{"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"interfaces/TreeStateModel.html":{}}}],["proteoforms",{"_index":178,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["protiens",{"_index":1900,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["provide",{"_index":244,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"index.html":{}}}],["providedin",{"_index":774,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/DocsService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":191,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["public",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["pure",{"_index":3254,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["quardokus",{"_index":4573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quardokus.html",{"_index":4578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryparams",{"_index":2599,"title":{},"body":{"components/HomeComponent.html":{}}}],["queryparamshandling",{"_index":2600,"title":{},"body":{"components/HomeComponent.html":{}}}],["r",{"_index":42,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/enumerations.html":{}}}],["radius",{"_index":1257,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["range",{"_index":3659,"title":{},"body":{"classes/Scales.html":{}}}],["rawvalue",{"_index":3049,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rawvalue.trim().tolowercase",{"_index":3051,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rdfs:label",{"_index":680,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["rdfs_label",{"_index":1352,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["re",{"_index":4045,"title":{},"body":{"injectables/TreeService.html":{}}}],["reach",{"_index":2177,"title":{},"body":{"components/ErrorComponent.html":{}}}],["reactiveformsmodule",{"_index":1431,"title":{},"body":{"modules/CompareModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/FileUploadModule.html":{},"modules/NavbarModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/SearchModule.html":{},"modules/UploadModule.html":{}}}],["read",{"_index":3476,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["readonly",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"injectables/ConfigService.html":{},"injectables/ConsentService.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"injectables/LocalStorageSyncService.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"injectables/SheetService.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["reassign",{"_index":2858,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["recently",{"_index":4128,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["record",{"_index":120,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/OmapControlsComponent.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{}}}],["record>)[type][field",{"_index":2447,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["rect",{"_index":587,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/LegendComponent.html":{},"classes/TreeMarkGroup.html":{}}}],["rectangle",{"_index":557,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["rectmark",{"_index":586,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["rectmarkdiscrepencyid",{"_index":616,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["rectmarkdiscrepencylabel",{"_index":612,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["rectmarkduplicateid",{"_index":620,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["red",{"_index":635,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"classes/Scales.html":{},"components/UploadComponent.html":{}}}],["reduced",{"_index":1760,"title":{},"body":{"classes/Data.html":{}}}],["refer.doi",{"_index":2888,"title":{},"body":{"components/InfoComponent.html":{}}}],["reference",{"_index":27,"title":{"interfaces/Reference.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["references",{"_index":97,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["refresh",{"_index":1878,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["refreshdata",{"_index":1877,"title":{"classes/RefreshData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["registeronchange",{"_index":2226,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registeronchange(onchange",{"_index":2238,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registerontouched",{"_index":2227,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registerontouched(ontouched",{"_index":2240,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registeronvalidatorchange",{"_index":2228,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registeronvalidatorchange(onvalidatorchange",{"_index":2242,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["registry",{"_index":1934,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"miscellaneous/variables.html":{}}}],["registry.map((e",{"_index":2103,"title":{},"body":{"injectables/DocsService.html":{}}}],["registry[id].urltitle",{"_index":2109,"title":{},"body":{"injectables/DocsService.html":{}}}],["registry[next].title",{"_index":2077,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["registry[prev].title",{"_index":2076,"title":{},"body":{"components/DocsNavComponent.html":{}}}],["regular",{"_index":2360,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["related",{"_index":4106,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["relative",{"_index":2653,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["release",{"_index":1990,"title":{},"body":{"components/DocsComponent.html":{}}}],["remove",{"_index":3579,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["removecomparesheetrow",{"_index":1086,"title":{},"body":{"components/CompareComponent.html":{}}}],["removecomparesheetrow(i",{"_index":1123,"title":{},"body":{"components/CompareComponent.html":{}}}],["removing",{"_index":978,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Signals.html":{}}}],["rename",{"_index":3521,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["render",{"_index":3716,"title":{},"body":{"injectables/SheetService.html":{},"injectables/TreeService.html":{}}}],["rendered",{"_index":988,"title":{},"body":{"injectables/BimodalService.html":{},"components/ErrorComponent.html":{},"injectables/VegaService.html":{}}}],["rendergraph",{"_index":4331,"title":{},"body":{"injectables/VegaService.html":{}}}],["rendergraph(config",{"_index":4346,"title":{},"body":{"injectables/VegaService.html":{}}}],["repeat",{"_index":2932,"title":{},"body":{"components/LegendComponent.html":{}}}],["replaysubject",{"_index":1485,"title":{},"body":{"injectables/ConsentService.html":{}}}],["replaysubject(1",{"_index":1483,"title":{},"body":{"injectables/ConsentService.html":{}}}],["report",{"_index":312,"title":{"interfaces/Report.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["report'},{'name",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["report.component",{"_index":3610,"title":{},"body":{"modules/ReportModule.html":{}}}],["report:hover",{"_index":1669,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["report_cols",{"_index":90,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["reportcomponent",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/ReportModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["reportdata",{"_index":1007,"title":{"interfaces/ReportData.html":{}},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"classes/DeleteCompareSheet.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["reporter",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["reporter%0d%0a%0d%0a2",{"_index":1652,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["reporter'},{'name",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["reporter.%0d%0a%0d%0a3",{"_index":1654,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["reportlog",{"_index":752,"title":{"classes/ReportLog.html":{}},"body":{"injectables/BimodalService.html":{},"classes/ClearSheetLogs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["reportlog(log_types.msg",{"_index":966,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["reportlog(undefined",{"_index":3072,"title":{},"body":{"injectables/LogsState.html":{}}}],["reportmodule",{"_index":3604,"title":{"modules/ReportModule.html":{}},"body":{"modules/ReportModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["reportmultilog",{"_index":1025,"title":{"classes/ReportMultiLog.html":{}},"body":{"classes/ClearSheetLogs.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["reportopen",{"_index":4162,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["representation_of",{"_index":1382,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["request",{"_index":1653,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["required",{"_index":1251,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["res.description",{"_index":3749,"title":{},"body":{"injectables/SheetService.html":{}}}],["res.extralinks",{"_index":3751,"title":{},"body":{"injectables/SheetService.html":{}}}],["res.label",{"_index":3752,"title":{},"body":{"injectables/SheetService.html":{}}}],["res.link",{"_index":3750,"title":{},"body":{"injectables/SheetService.html":{}}}],["rescinded",{"_index":1487,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["research",{"_index":4574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["researcher",{"_index":4551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["researchers",{"_index":2640,"title":{},"body":{"components/HomeComponent.html":{}}}],["reserved",{"_index":2396,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":199,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"injectables/BimodalService.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}],["resizeobserver",{"_index":2572,"title":{},"body":{"components/HomeComponent.html":{}}}],["resizeobserver((entries",{"_index":2582,"title":{},"body":{"components/HomeComponent.html":{}}}],["respective",{"_index":2131,"title":{},"body":{"components/DoiComponent.html":{}}}],["response",{"_index":2153,"title":{"interfaces/Response.html":{}},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{}}}],["response.model",{"_index":3008,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{}}}],["responsedata",{"_index":1362,"title":{"interfaces/ResponseData.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["responsetype",{"_index":2106,"title":{},"body":{"injectables/DocsService.html":{},"injectables/SheetService.html":{}}}],["results",{"_index":130,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":232,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marks.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"interfaces/Node.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{}}}],["returns",{"_index":211,"title":{},"body":{"modules/AnalyticsModule.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"components/OmapControlsComponent.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"injectables/SheetService.html":{},"classes/Signals.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["rgb(164",{"_index":2674,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgb(196",{"_index":1318,"title":{},"body":{"components/CompareComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["rgb(215",{"_index":2819,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["rgb(218",{"_index":2696,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgb(228",{"_index":1285,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["rgb(245",{"_index":1670,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["rgb(249",{"_index":2404,"title":{},"body":{"components/FooterComponent.html":{}}}],["rgb(64",{"_index":2180,"title":{},"body":{"components/ErrorComponent.html":{}}}],["rgb(89",{"_index":3180,"title":{},"body":{"components/NavItemComponent.html":{}}}],["rgba(128",{"_index":2704,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgba(245",{"_index":1664,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["rgba(255",{"_index":2407,"title":{},"body":{"components/FooterComponent.html":{}}}],["right",{"_index":1052,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["rights",{"_index":2395,"title":{},"body":{"components/FooterComponent.html":{}}}],["rightsidenavopen",{"_index":4163,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["root",{"_index":43,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"injectables/DocsService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{},"interfaces/LinksASCTBData.html":{},"injectables/LocalStorageSyncService.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["root.children?.[0",{"_index":2857,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["root.comparator",{"_index":2839,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["root.component",{"_index":3623,"title":{},"body":{"modules/RootModule.html":{}}}],["root.label",{"_index":4065,"title":{},"body":{"injectables/TreeService.html":{}}}],["root.name",{"_index":2840,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["root.ontologyid",{"_index":2841,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["root.type",{"_index":2842,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["rootcomponent",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/RootModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["rootmodule",{"_index":429,"title":{"modules/RootModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"index.html":{},"modules.html":{}}}],["round",{"_index":593,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["rounded",{"_index":1328,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["router",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["routermodule",{"_index":494,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ControlPaneModule.html":{},"modules/DocsModule.html":{},"modules/HomeModule.html":{},"modules/NavbarModule.html":{}}}],["routermodule.forroot(routes",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":493,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":492,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":724,"title":{"interfaces/Row.html":{}},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{}}}],["row.anatomical_structures.foreach((structure",{"_index":2844,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["row.anatomical_structures.unshift(organ",{"_index":3757,"title":{},"body":{"injectables/SheetService.html":{}}}],["row.name",{"_index":3398,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["row.organname",{"_index":3758,"title":{},"body":{"injectables/SheetService.html":{},"injectables/TreeService.html":{}}}],["row.position",{"_index":3397,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["row.some((cell",{"_index":3556,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["row.symbol",{"_index":3399,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["row.symbol?.split",{"_index":3402,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["row.version?.slice",{"_index":3403,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["row?.organname",{"_index":4076,"title":{},"body":{"injectables/TreeService.html":{}}}],["rowpadding",{"_index":2995,"title":{},"body":{"classes/Legends.html":{}}}],["runtime",{"_index":4360,"title":{},"body":{"injectables/VegaService.html":{}}}],["rxjs",{"_index":1140,"title":{},"body":{"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"injectables/DocsService.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{}}}],["rxjs/operators",{"_index":1472,"title":{},"body":{"injectables/ConfigService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/SheetService.html":{}}}],["s",{"_index":167,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"injectables/IndentedListService.html":{},"interfaces/Link.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{}}}],["sai",{"_index":4580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sans",{"_index":2012,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["save",{"_index":1239,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["saveconsent(value",{"_index":3053,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sc",{"_index":4021,"title":{},"body":{"injectables/TreeService.html":{}}}],["scale",{"_index":3645,"title":{},"body":{"classes/Scales.html":{}}}],["scale(0.7",{"_index":2821,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["scale(0.99",{"_index":2736,"title":{},"body":{"components/HomeComponent.html":{}}}],["scales",{"_index":3640,"title":{"classes/Scales.html":{}},"body":{"classes/Scales.html":{},"injectables/VegaService.html":{}}}],["scales().scales",{"_index":3654,"title":{},"body":{"classes/Scales.html":{}}}],["scales.create",{"_index":4395,"title":{},"body":{"injectables/VegaService.html":{}}}],["scaling",{"_index":3648,"title":{},"body":{"classes/Scales.html":{}}}],["schema",{"_index":4388,"title":{},"body":{"injectables/VegaService.html":{}}}],["science",{"_index":2375,"title":{},"body":{"components/FooterComponent.html":{}}}],["screen",{"_index":2678,"title":{},"body":{"components/HomeComponent.html":{}}}],["scroll",{"_index":3428,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/TreeComponent.html":{}}}],["scrollpositionrestoration",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["search",{"_index":1061,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/HasError.html":{},"classes/ILNode.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"modules/SearchModule.html":{},"classes/Signals.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["search(name",{"_index":2787,"title":{},"body":{"classes/ILNode.html":{}}}],["search.component",{"_index":3664,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.module",{"_index":3204,"title":{},"body":{"modules/NavbarModule.html":{}}}],["search_signal",{"_index":3876,"title":{},"body":{"classes/Signals.html":{}}}],["searchcomponent",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/SearchModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["searchids",{"_index":136,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["searchmodule",{"_index":3197,"title":{"modules/SearchModule.html":{}},"body":{"modules/NavbarModule.html":{},"modules/SearchModule.html":{},"index.html":{},"modules.html":{}}}],["searchopen",{"_index":4164,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["searchstructure",{"_index":113,"title":{"interfaces/SearchStructure.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["searchstructures",{"_index":1914,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["sec",{"_index":4615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":4222,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["secondary",{"_index":2462,"title":{},"body":{"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["seconds",{"_index":2546,"title":{},"body":{"components/HomeComponent.html":{}}}],["section",{"_index":1853,"title":{},"body":{"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{}}}],["see",{"_index":631,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"classes/Scales.html":{},"miscellaneous/variables.html":{}}}],["seekvideo",{"_index":2537,"title":{},"body":{"components/HomeComponent.html":{}}}],["seekvideo(seconds",{"_index":2544,"title":{},"body":{"components/HomeComponent.html":{}}}],["select",{"_index":1237,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/LoadingComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/SearchModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{}}}],["select(sheetstate.getcomparesheets",{"_index":1538,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(sheetstate.getfilteredprotiens",{"_index":1540,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(sheetstate.getparseddata",{"_index":3478,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["select(sheetstate.getselectedorgans",{"_index":1545,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(sheetstate.getsheet",{"_index":1547,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/PlaygroundComponent.html":{}}}],["select(sheetstate.getsheetconfig",{"_index":1535,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{}}}],["select(treestate",{"_index":1552,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{}}}],["select(treestate.getbimodal",{"_index":1533,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(treestate.getbimodalconfig",{"_index":2437,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["select(treestate.getomapconfig",{"_index":1543,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(treestate.gettreedata",{"_index":1550,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(treestate.getvegaview",{"_index":1556,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["select(uistate",{"_index":3018,"title":{},"body":{"components/LoadingComponent.html":{},"injectables/TreeService.html":{}}}],["selectbyhraversion",{"_index":3284,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selectbyhraversion(row",{"_index":3299,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selected",{"_index":1882,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"injectables/VegaService.html":{}}}],["selected:enabled",{"_index":4460,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["selectedorganbeforefilter",{"_index":1412,"title":{"interfaces/SelectedOrganBeforeFilter.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["selectedorgans",{"_index":1501,"title":{},"body":{"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/VisControlsComponent.html":{}}}],["selectedsheetoption",{"_index":3277,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selectedversion",{"_index":3401,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selecting",{"_index":1231,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["selection",{"_index":2499,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/OrganTableSelectorComponent.html":{}}}],["selection.clear",{"_index":3393,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selection.select(...datasource.data",{"_index":3394,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selection.selected.length",{"_index":3389,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selectionmodel",{"_index":3334,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selectionmodel(true",{"_index":3319,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["selector'},{'name",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["selector.component",{"_index":3445,"title":{},"body":{"modules/OrganTableSelectorModule.html":{}}}],["selector.component.html",{"_index":3268,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.scss",{"_index":3267,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts",{"_index":3266,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:121",{"_index":3289,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:156",{"_index":3297,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:164",{"_index":3298,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:174",{"_index":3296,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:181",{"_index":3294,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:19",{"_index":3330,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:190",{"_index":3300,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:203",{"_index":3302,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:219",{"_index":3291,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:24",{"_index":3321,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:28",{"_index":3333,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:37",{"_index":3331,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:41",{"_index":3328,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:42",{"_index":3327,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:43",{"_index":3318,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:44",{"_index":3311,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:45",{"_index":3309,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:46",{"_index":3317,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:54",{"_index":3329,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:55",{"_index":3320,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:56",{"_index":3303,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:60",{"_index":3323,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:65",{"_index":3307,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:66",{"_index":3288,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:69",{"_index":3304,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:70",{"_index":3308,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:71",{"_index":3305,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.component.ts:72",{"_index":3310,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selector.module",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["selector.module.ts",{"_index":3444,"title":{},"body":{"modules/OrganTableSelectorModule.html":{}}}],["selector/organ",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{}}}],["selector:active",{"_index":2735,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector:not(.active):hover",{"_index":2733,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectors",{"_index":2624,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectrow",{"_index":3285,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["selectrow(row",{"_index":3301,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["self_links",{"_index":3060,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["send",{"_index":3714,"title":{},"body":{"injectables/SheetService.html":{}}}],["sendmail",{"_index":1507,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["senior",{"_index":4562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["separation",{"_index":1790,"title":{},"body":{"classes/Data.html":{}}}],["serif",{"_index":2013,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["service",{"_index":1736,"title":{},"body":{"classes/Data.html":{},"injectables/SheetService.html":{},"components/TrackingPopupComponent.html":{}}}],["services/analytics.module",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["services/consent.service",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["services/docs.service",{"_index":1967,"title":{},"body":{"components/DocsComponent.html":{}}}],["services/mouse",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":3077,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["set",{"_index":23,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"injectables/LocalStorageSyncService.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/Signals.html":{},"classes/TNode.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["setconsent",{"_index":1476,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setconsent(value",{"_index":1479,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setstate",{"_index":3101,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["setting",{"_index":4194,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["shadow",{"_index":1260,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["shape",{"_index":664,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Data.html":{}}}],["share",{"_index":1232,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{},"components/UploadComponent.html":{}}}],["sharereplay",{"_index":1470,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sharereplay(1",{"_index":1452,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sheet",{"_index":737,"title":{"interfaces/Sheet.html":{}},"body":{"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/FlatNode.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["sheet.color",{"_index":1192,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.config.height",{"_index":3569,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["sheet.controls['formdata",{"_index":1166,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.controls['formdata'].setvalue(fileformdataevent",{"_index":1172,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.controls['link",{"_index":1167,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.controls['link'].markastouched",{"_index":1215,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.csvurl",{"_index":3566,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["sheet.description",{"_index":1190,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheet.display",{"_index":3918,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["sheet.filename",{"_index":4311,"title":{},"body":{"components/UploadComponent.html":{}}}],["sheet.formdata",{"_index":3572,"title":{},"body":{"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["sheet.gid",{"_index":3562,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["sheet.link",{"_index":1191,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["sheet.model",{"_index":28,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Organ.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/SearchStructure.html":{},"interfaces/Snackbar.html":{},"classes/TNode.html":{}}}],["sheet.sheetid",{"_index":3564,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["sheet.title",{"_index":1183,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheetconfig",{"_index":727,"title":{"interfaces/SheetConfig.html":{}},"body":{"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["sheetconfig).data",{"_index":1763,"title":{},"body":{"classes/Data.html":{}}}],["sheetconfig?.bimodal_distance_x",{"_index":788,"title":{},"body":{"injectables/BimodalService.html":{}}}],["sheetconfig?.bimodal_distance_y",{"_index":790,"title":{},"body":{"injectables/BimodalService.html":{}}}],["sheetconfiguration",{"_index":1443,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sheetdata",{"_index":735,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["sheetdetails",{"_index":1378,"title":{"interfaces/SheetDetails.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["sheetid",{"_index":1110,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["sheetinfo",{"_index":1188,"title":{"interfaces/SheetInfo.html":{}},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["sheetlogs",{"_index":3010,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{}}}],["sheetlogs.messages.push(newlog",{"_index":3084,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["sheetlogs.multi_in_links.push(message",{"_index":3095,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["sheetlogs.no_in_links.push(message",{"_index":3092,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["sheetlogs.no_out_links.push(message",{"_index":3089,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["sheetlogs.self_links.push(message",{"_index":3098,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["sheetoptions",{"_index":1384,"title":{"interfaces/SheetOptions.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["sheetoptions.filter((o",{"_index":3341,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["sheetref",{"_index":2114,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["sheets",{"_index":1147,"title":{},"body":{"components/CompareComponent.html":{},"components/ErrorComponent.html":{}}}],["sheets.length",{"_index":1152,"title":{},"body":{"components/CompareComponent.html":{}}}],["sheetservice",{"_index":3669,"title":{"injectables/SheetService.html":{}},"body":{"injectables/SheetService.html":{}}}],["sheetstate",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"components/ControlPaneComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{}}}],["sheeturl",{"_index":3905,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["shortcut",{"_index":3548,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["show",{"_index":1588,"title":{},"body":{"components/ControlPaneComponent.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/HomeComponent.html":{},"classes/RefreshData.html":{},"classes/Signals.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["show_all_as",{"_index":1366,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["show_ontology",{"_index":706,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["showallas",{"_index":1508,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["showbutton",{"_index":3940,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showbutton(button",{"_index":3947,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showdiscrepencyid",{"_index":4406,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["showdiscrepencylabel",{"_index":4407,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["showduplicateid",{"_index":4408,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["showheader",{"_index":1935,"title":{},"body":{"components/DocsComponent.html":{}}}],["shows",{"_index":4165,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["side",{"_index":1053,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["sidebar",{"_index":4166,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["sidenav",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"modules/CompareModule.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"modules/ReportModule.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"components/VisControlsComponent.html":{}}}],["sidenav'},{'name",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["sidenav.component",{"_index":3791,"title":{},"body":{"modules/SidenavModule.html":{}}}],["sidenav.component.html",{"_index":3761,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":3760,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav/sidenav.module",{"_index":1432,"title":{},"body":{"modules/CompareModule.html":{},"modules/DebugLogsModule.html":{},"modules/IndentedListModule.html":{},"modules/ReportModule.html":{},"modules/UploadModule.html":{}}}],["sidenavcomponent",{"_index":398,"title":{"components/SidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavModule.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["sidenavheadercomponent",{"_index":400,"title":{"components/SidenavHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["sidenavheadermodule",{"_index":1419,"title":{"modules/SidenavHeaderModule.html":{}},"body":{"modules/CompareModule.html":{},"modules/DebugLogsModule.html":{},"modules/IndentedListModule.html":{},"modules/ReportModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/UploadModule.html":{},"index.html":{},"modules.html":{}}}],["sidenavmodule",{"_index":1420,"title":{"modules/SidenavModule.html":{}},"body":{"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/DebugLogsModule.html":{},"modules/IndentedListModule.html":{},"modules/ReportModule.html":{},"modules/SidenavModule.html":{},"modules/UploadModule.html":{},"index.html":{},"modules.html":{}}}],["signal",{"_index":595,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Data.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{}}}],["signals",{"_index":575,"title":{"classes/Signals.html":{}},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{}}}],["signals(config).signals",{"_index":3843,"title":{},"body":{"classes/Signals.html":{}}}],["signals.create(sheetconfig",{"_index":4393,"title":{},"body":{"injectables/VegaService.html":{}}}],["size",{"_index":181,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"components/CompareComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/LegendComponent.html":{},"interfaces/Link.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":4109,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["sjson",{"_index":4440,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["skip",{"_index":2625,"title":{},"body":{"components/HomeComponent.html":{}}}],["slice(1).join",{"_index":3375,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["slide",{"_index":2487,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["slider",{"_index":2485,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/OrganTableSelectorComponent.html":{},"components/VisControlsComponent.html":{}}}],["slider__thumb",{"_index":4466,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["slider__track",{"_index":4463,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["smes",{"_index":2641,"title":{},"body":{"components/HomeComponent.html":{}}}],["snackbar",{"_index":272,"title":{"interfaces/Snackbar.html":{}},"body":{"components/AppComponent.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["snackbar.dismiss",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["snackbartype",{"_index":1033,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/HasError.html":{},"interfaces/Loading.html":{},"interfaces/Logs.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Response.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"miscellaneous/enumerations.html":{}}}],["snackbartype.error",{"_index":4208,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["snackbartype.success",{"_index":4169,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["social",{"_index":2409,"title":{},"body":{"components/FooterComponent.html":{}}}],["software",{"_index":4538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":1317,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/UploadComponent.html":{}}}],["sort",{"_index":180,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/variables.html":{}}}],["sort_by_alpha",{"_index":2459,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["sorting",{"_index":3525,"title":{},"body":{"components/PlaygroundComponent.html":{},"interfaces/TreeStateModel.html":{}}}],["sortoptions",{"_index":2425,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["sortorder",{"_index":2903,"title":{},"body":{"interfaces/Legend.html":{},"injectables/LegendService.html":{}}}],["sotre",{"_index":4167,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["source",{"_index":3,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"modules/CompareModule.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"modules/DocsModule.html":{},"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"modules/DoiModule.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"modules/FooterModule.html":{},"components/FunctionsComponent.html":{},"modules/FunctionsModule.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"modules/InfoModule.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"modules/LegendModule.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"modules/LoadingModule.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"modules/MousePositionTrackerModule.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"modules/PlaygroundModule.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"modules/ReportModule.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"modules/RootModule.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"modules/SearchModule.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"modules/TreeModule.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"modules/UploadModule.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{}}}],["source.color",{"_index":1156,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.description",{"_index":1158,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.filename",{"_index":1160,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.formdata",{"_index":1159,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.link",{"_index":1155,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.title",{"_index":1157,"title":{},"body":{"components/CompareComponent.html":{}}}],["source.x",{"_index":1800,"title":{},"body":{"classes/Data.html":{}}}],["source.y",{"_index":1802,"title":{},"body":{"classes/Data.html":{}}}],["sources",{"_index":150,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Link.html":{},"classes/Signals.html":{}}}],["sources.foreach((s",{"_index":944,"title":{},"body":{"injectables/BimodalService.html":{}}}],["sources.push(nodes[s].id",{"_index":943,"title":{},"body":{"injectables/BimodalService.html":{}}}],["sources__click",{"_index":3827,"title":{},"body":{"classes/Signals.html":{}}}],["sources_clicked_array",{"_index":1816,"title":{},"body":{"classes/Data.html":{}}}],["sources_hovered_array",{"_index":1812,"title":{},"body":{"classes/Data.html":{}}}],["sources_of_sources__click",{"_index":1820,"title":{},"body":{"classes/Data.html":{}}}],["sources_of_sources__hover",{"_index":1822,"title":{},"body":{"classes/Data.html":{}}}],["sourcex",{"_index":1799,"title":{},"body":{"classes/Data.html":{}}}],["sourcey",{"_index":1801,"title":{},"body":{"classes/Data.html":{}}}],["space",{"_index":1303,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["spacer",{"_index":2652,"title":{},"body":{"components/HomeComponent.html":{}}}],["spacing",{"_index":2019,"title":{},"body":{"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{}}}],["spec",{"_index":746,"title":{},"body":{"injectables/BimodalService.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Response.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["spec.data",{"_index":991,"title":{},"body":{"injectables/BimodalService.html":{}}}],["spec.data?.[0",{"_index":4098,"title":{},"body":{"injectables/TreeService.html":{}}}],["spec/data",{"_index":4355,"title":{},"body":{"injectables/VegaService.html":{}}}],["spec/legends",{"_index":4356,"title":{},"body":{"injectables/VegaService.html":{}}}],["spec/marks",{"_index":4357,"title":{},"body":{"injectables/VegaService.html":{}}}],["spec/scales",{"_index":4358,"title":{},"body":{"injectables/VegaService.html":{}}}],["spec/signals",{"_index":4359,"title":{},"body":{"injectables/VegaService.html":{}}}],["specifically",{"_index":2628,"title":{},"body":{"components/HomeComponent.html":{}}}],["specification",{"_index":4110,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["spliturl",{"_index":1199,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["spliturl.length",{"_index":1201,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["spliturl[5",{"_index":1203,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["spliturl[6].split('=')[1",{"_index":1204,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["spreadsheet",{"_index":3453,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["spreadsheetdata",{"_index":3454,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["square",{"_index":668,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/.../analytics.module.ts",{"_index":4485,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.component.ts",{"_index":4531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":4486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../bimodal.model.ts",{"_index":4524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consent.service.ts",{"_index":4521,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../docs.ts",{"_index":4533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":4526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.stage.ts",{"_index":4527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ga.model.ts",{"_index":4477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../home.ts",{"_index":4525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":4532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logs.model.ts",{"_index":4478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mouse",{"_index":4488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../response.model.ts",{"_index":4480,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../sheet.model.ts",{"_index":4476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../sheet.state.ts",{"_index":4530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tree.functions.ts",{"_index":4483,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../tree.model.ts",{"_index":4479,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../url.ts",{"_index":4481,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.ts",{"_index":4490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/actions/logs.actions.ts",{"_index":1016,"title":{},"body":{"classes/ClearSheetLogs.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{}}}],["src/app/actions/logs.actions.ts:12",{"_index":3614,"title":{},"body":{"classes/ReportMultiLog.html":{}}}],["src/app/actions/logs.actions.ts:14",{"_index":3616,"title":{},"body":{"classes/ReportMultiLog.html":{}}}],["src/app/actions/logs.actions.ts:15",{"_index":3615,"title":{},"body":{"classes/ReportMultiLog.html":{}}}],["src/app/actions/logs.actions.ts:16",{"_index":3617,"title":{},"body":{"classes/ReportMultiLog.html":{}}}],["src/app/actions/logs.actions.ts:2",{"_index":3599,"title":{},"body":{"classes/ReportLog.html":{}}}],["src/app/actions/logs.actions.ts:21",{"_index":1017,"title":{},"body":{"classes/ClearSheetLogs.html":{}}}],["src/app/actions/logs.actions.ts:4",{"_index":3602,"title":{},"body":{"classes/ReportLog.html":{}}}],["src/app/actions/logs.actions.ts:5",{"_index":3601,"title":{},"body":{"classes/ReportLog.html":{}}}],["src/app/actions/logs.actions.ts:6",{"_index":3600,"title":{},"body":{"classes/ReportLog.html":{}}}],["src/app/actions/logs.actions.ts:7",{"_index":3603,"title":{},"body":{"classes/ReportLog.html":{}}}],["src/app/actions/sheet.actions.ts",{"_index":1870,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["src/app/actions/sheet.actions.ts:100",{"_index":4245,"title":{},"body":{"classes/UpdateBottomSheetDOI.html":{}}}],["src/app/actions/sheet.actions.ts:104",{"_index":4253,"title":{},"body":{"classes/UpdateGetFromCache.html":{}}}],["src/app/actions/sheet.actions.ts:105",{"_index":4254,"title":{},"body":{"classes/UpdateGetFromCache.html":{}}}],["src/app/actions/sheet.actions.ts:109",{"_index":2211,"title":{},"body":{"classes/FetchValidOmapProtiens.html":{}}}],["src/app/actions/sheet.actions.ts:11",{"_index":3597,"title":{},"body":{"classes/RefreshData.html":{}}}],["src/app/actions/sheet.actions.ts:114",{"_index":4282,"title":{},"body":{"classes/UpdateSelectedOrgansBeforeFilter.html":{}}}],["src/app/actions/sheet.actions.ts:115",{"_index":4283,"title":{},"body":{"classes/UpdateSelectedOrgansBeforeFilter.html":{}}}],["src/app/actions/sheet.actions.ts:16",{"_index":2197,"title":{},"body":{"classes/FetchDataFromAssets.html":{}}}],["src/app/actions/sheet.actions.ts:18",{"_index":2199,"title":{},"body":{"classes/FetchDataFromAssets.html":{}}}],["src/app/actions/sheet.actions.ts:19",{"_index":2198,"title":{},"body":{"classes/FetchDataFromAssets.html":{}}}],["src/app/actions/sheet.actions.ts:24",{"_index":2191,"title":{},"body":{"classes/FetchAllOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:25",{"_index":2192,"title":{},"body":{"classes/FetchAllOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:29",{"_index":2204,"title":{},"body":{"classes/FetchSelectedOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:31",{"_index":2208,"title":{},"body":{"classes/FetchSelectedOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:32",{"_index":2207,"title":{},"body":{"classes/FetchSelectedOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:33",{"_index":2206,"title":{},"body":{"classes/FetchSelectedOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:34",{"_index":2205,"title":{},"body":{"classes/FetchSelectedOrganData.html":{}}}],["src/app/actions/sheet.actions.ts:39",{"_index":2194,"title":{},"body":{"classes/FetchCompareData.html":{}}}],["src/app/actions/sheet.actions.ts:40",{"_index":2195,"title":{},"body":{"classes/FetchCompareData.html":{}}}],["src/app/actions/sheet.actions.ts:44",{"_index":4250,"title":{},"body":{"classes/UpdateConfig.html":{}}}],["src/app/actions/sheet.actions.ts:45",{"_index":4251,"title":{},"body":{"classes/UpdateConfig.html":{}}}],["src/app/actions/sheet.actions.ts:49",{"_index":3930,"title":{},"body":{"classes/ToggleShowAllAS.html":{}}}],["src/app/actions/sheet.actions.ts:54",{"_index":4279,"title":{},"body":{"classes/UpdateReport.html":{}}}],["src/app/actions/sheet.actions.ts:55",{"_index":4280,"title":{},"body":{"classes/UpdateReport.html":{}}}],["src/app/actions/sheet.actions.ts:59",{"_index":1872,"title":{},"body":{"classes/DeleteCompareSheet.html":{}}}],["src/app/actions/sheet.actions.ts:6",{"_index":2209,"title":{},"body":{"classes/FetchSheetData.html":{}}}],["src/app/actions/sheet.actions.ts:60",{"_index":1873,"title":{},"body":{"classes/DeleteCompareSheet.html":{}}}],["src/app/actions/sheet.actions.ts:64",{"_index":4270,"title":{},"body":{"classes/UpdateMode.html":{}}}],["src/app/actions/sheet.actions.ts:65",{"_index":4271,"title":{},"body":{"classes/UpdateMode.html":{}}}],["src/app/actions/sheet.actions.ts:69",{"_index":4276,"title":{},"body":{"classes/UpdatePrevSheet.html":{}}}],["src/app/actions/sheet.actions.ts:7",{"_index":2210,"title":{},"body":{"classes/FetchSheetData.html":{}}}],["src/app/actions/sheet.actions.ts:70",{"_index":4277,"title":{},"body":{"classes/UpdatePrevSheet.html":{}}}],["src/app/actions/sheet.actions.ts:74",{"_index":4284,"title":{},"body":{"classes/UpdateSheet.html":{}}}],["src/app/actions/sheet.actions.ts:75",{"_index":4285,"title":{},"body":{"classes/UpdateSheet.html":{}}}],["src/app/actions/sheet.actions.ts:79",{"_index":2200,"title":{},"body":{"classes/FetchInitialPlaygroundData.html":{}}}],["src/app/actions/sheet.actions.ts:80",{"_index":2201,"title":{},"body":{"classes/FetchInitialPlaygroundData.html":{}}}],["src/app/actions/sheet.actions.ts:84",{"_index":4274,"title":{},"body":{"classes/UpdatePlaygroundData.html":{}}}],["src/app/actions/sheet.actions.ts:85",{"_index":4275,"title":{},"body":{"classes/UpdatePlaygroundData.html":{}}}],["src/app/actions/sheet.actions.ts:89",{"_index":2202,"title":{},"body":{"classes/FetchPlaygroundUploadData.html":{}}}],["src/app/actions/sheet.actions.ts:90",{"_index":2203,"title":{},"body":{"classes/FetchPlaygroundUploadData.html":{}}}],["src/app/actions/sheet.actions.ts:94",{"_index":4248,"title":{},"body":{"classes/UpdateBottomSheetInfo.html":{}}}],["src/app/actions/sheet.actions.ts:95",{"_index":4249,"title":{},"body":{"classes/UpdateBottomSheetInfo.html":{}}}],["src/app/actions/sheet.actions.ts:99",{"_index":4244,"title":{},"body":{"classes/UpdateBottomSheetDOI.html":{}}}],["src/app/actions/tree.actions.ts",{"_index":1905,"title":{},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["src/app/actions/tree.actions.ts:11",{"_index":4287,"title":{},"body":{"classes/UpdateVegaSpec.html":{}}}],["src/app/actions/tree.actions.ts:13",{"_index":4288,"title":{},"body":{"classes/UpdateVegaSpec.html":{}}}],["src/app/actions/tree.actions.ts:17",{"_index":4290,"title":{},"body":{"classes/UpdateVegaView.html":{}}}],["src/app/actions/tree.actions.ts:19",{"_index":4291,"title":{},"body":{"classes/UpdateVegaView.html":{}}}],["src/app/actions/tree.actions.ts:23",{"_index":4239,"title":{},"body":{"classes/UpdateBimodal.html":{}}}],["src/app/actions/tree.actions.ts:25",{"_index":4241,"title":{},"body":{"classes/UpdateBimodal.html":{}}}],["src/app/actions/tree.actions.ts:26",{"_index":4240,"title":{},"body":{"classes/UpdateBimodal.html":{}}}],["src/app/actions/tree.actions.ts:31",{"_index":4242,"title":{},"body":{"classes/UpdateBimodalConfig.html":{}}}],["src/app/actions/tree.actions.ts:32",{"_index":4243,"title":{},"body":{"classes/UpdateBimodalConfig.html":{}}}],["src/app/actions/tree.actions.ts:36",{"_index":1921,"title":{},"body":{"classes/DoSearch.html":{}}}],["src/app/actions/tree.actions.ts:38",{"_index":1923,"title":{},"body":{"classes/DoSearch.html":{}}}],["src/app/actions/tree.actions.ts:39",{"_index":1922,"title":{},"body":{"classes/DoSearch.html":{}}}],["src/app/actions/tree.actions.ts:44",{"_index":1918,"title":{},"body":{"classes/DiscrepencyLabel.html":{}}}],["src/app/actions/tree.actions.ts:45",{"_index":1919,"title":{},"body":{"classes/DiscrepencyLabel.html":{}}}],["src/app/actions/tree.actions.ts:48",{"_index":1908,"title":{},"body":{"classes/DiscrepencyId.html":{}}}],["src/app/actions/tree.actions.ts:49",{"_index":1909,"title":{},"body":{"classes/DiscrepencyId.html":{}}}],["src/app/actions/tree.actions.ts:53",{"_index":2149,"title":{},"body":{"classes/DuplicateId.html":{}}}],["src/app/actions/tree.actions.ts:54",{"_index":2150,"title":{},"body":{"classes/DuplicateId.html":{}}}],["src/app/actions/tree.actions.ts:58",{"_index":4246,"title":{},"body":{"classes/UpdateBottomSheetData.html":{}}}],["src/app/actions/tree.actions.ts:6",{"_index":4256,"title":{},"body":{"classes/UpdateGraphWidth.html":{}}}],["src/app/actions/tree.actions.ts:60",{"_index":4247,"title":{},"body":{"classes/UpdateBottomSheetData.html":{}}}],["src/app/actions/tree.actions.ts:64",{"_index":4259,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:66",{"_index":4263,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:67",{"_index":4265,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:68",{"_index":4264,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:69",{"_index":4266,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:7",{"_index":4257,"title":{},"body":{"classes/UpdateGraphWidth.html":{}}}],["src/app/actions/tree.actions.ts:70",{"_index":4261,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:71",{"_index":4262,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:72",{"_index":4260,"title":{},"body":{"classes/UpdateLinksData.html":{}}}],["src/app/actions/tree.actions.ts:77",{"_index":4272,"title":{},"body":{"classes/UpdateOmapConfig.html":{}}}],["src/app/actions/tree.actions.ts:78",{"_index":4273,"title":{},"body":{"classes/UpdateOmapConfig.html":{}}}],["src/app/actions/ui.actions.ts",{"_index":1029,"title":{},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/UpdateLoadingText.html":{}}}],["src/app/actions/ui.actions.ts:103",{"_index":3245,"title":{},"body":{"classes/OpenSearch.html":{}}}],["src/app/actions/ui.actions.ts:108",{"_index":1069,"title":{},"body":{"classes/CloseSearch.html":{}}}],["src/app/actions/ui.actions.ts:11",{"_index":4267,"title":{},"body":{"classes/UpdateLoadingText.html":{}}}],["src/app/actions/ui.actions.ts:12",{"_index":4268,"title":{},"body":{"classes/UpdateLoadingText.html":{}}}],["src/app/actions/ui.actions.ts:16",{"_index":1066,"title":{},"body":{"classes/CloseLoading.html":{}}}],["src/app/actions/ui.actions.ts:17",{"_index":1067,"title":{},"body":{"classes/CloseLoading.html":{}}}],["src/app/actions/ui.actions.ts:21",{"_index":2524,"title":{},"body":{"classes/HasError.html":{}}}],["src/app/actions/ui.actions.ts:22",{"_index":2525,"title":{},"body":{"classes/HasError.html":{}}}],["src/app/actions/ui.actions.ts:26",{"_index":3208,"title":{},"body":{"classes/NoError.html":{}}}],["src/app/actions/ui.actions.ts:30",{"_index":3926,"title":{},"body":{"classes/ToggleControlPane.html":{}}}],["src/app/actions/ui.actions.ts:35",{"_index":3246,"title":{},"body":{"classes/OpenSnackbar.html":{}}}],["src/app/actions/ui.actions.ts:37",{"_index":3247,"title":{},"body":{"classes/OpenSnackbar.html":{}}}],["src/app/actions/ui.actions.ts:38",{"_index":3248,"title":{},"body":{"classes/OpenSnackbar.html":{}}}],["src/app/actions/ui.actions.ts:43",{"_index":1070,"title":{},"body":{"classes/CloseSnackbar.html":{}}}],["src/app/actions/ui.actions.ts:48",{"_index":3928,"title":{},"body":{"classes/ToggleIndentList.html":{}}}],["src/app/actions/ui.actions.ts:53",{"_index":3929,"title":{},"body":{"classes/ToggleReport.html":{}}}],["src/app/actions/ui.actions.ts:58",{"_index":3927,"title":{},"body":{"classes/ToggleDebugLogs.html":{}}}],["src/app/actions/ui.actions.ts:6",{"_index":3243,"title":{},"body":{"classes/OpenLoading.html":{}}}],["src/app/actions/ui.actions.ts:63",{"_index":1068,"title":{},"body":{"classes/CloseRightSideNav.html":{}}}],["src/app/actions/ui.actions.ts:68",{"_index":3925,"title":{},"body":{"classes/ToggleBottomSheet.html":{}}}],["src/app/actions/ui.actions.ts:7",{"_index":3244,"title":{},"body":{"classes/OpenLoading.html":{}}}],["src/app/actions/ui.actions.ts:73",{"_index":3238,"title":{},"body":{"classes/OpenBottomSheet.html":{}}}],["src/app/actions/ui.actions.ts:74",{"_index":3239,"title":{},"body":{"classes/OpenBottomSheet.html":{}}}],["src/app/actions/ui.actions.ts:78",{"_index":3240,"title":{},"body":{"classes/OpenBottomSheetDOI.html":{}}}],["src/app/actions/ui.actions.ts:79",{"_index":3241,"title":{},"body":{"classes/OpenBottomSheetDOI.html":{}}}],["src/app/actions/ui.actions.ts:83",{"_index":1030,"title":{},"body":{"classes/CloseBottomSheet.html":{}}}],["src/app/actions/ui.actions.ts:88",{"_index":1063,"title":{},"body":{"classes/CloseBottomSheetDOI.html":{}}}],["src/app/actions/ui.actions.ts:93",{"_index":3242,"title":{},"body":{"classes/OpenCompare.html":{}}}],["src/app/actions/ui.actions.ts:98",{"_index":1064,"title":{},"body":{"classes/CloseCompare.html":{}}}],["src/app/app",{"_index":491,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ConfigService.html":{}}}],["src/app/app.component.ts",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts:17",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/compare/compare.component.ts",{"_index":1071,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:114",{"_index":1108,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:132",{"_index":1118,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:14",{"_index":1101,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:15",{"_index":1102,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:160",{"_index":1106,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:169",{"_index":1135,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:17",{"_index":1099,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:173",{"_index":1120,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:182",{"_index":1119,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:19",{"_index":1130,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:190",{"_index":1103,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:196",{"_index":1124,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:20",{"_index":1132,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:21",{"_index":1097,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:24",{"_index":1129,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:25",{"_index":1133,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:67",{"_index":1127,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:72",{"_index":1122,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.component.ts:83",{"_index":1113,"title":{},"body":{"components/CompareComponent.html":{}}}],["src/app/components/compare/compare.module.ts",{"_index":1421,"title":{},"body":{"modules/CompareModule.html":{}}}],["src/app/components/controls/controls.module.ts",{"_index":1693,"title":{},"body":{"modules/ControlsModule.html":{}}}],["src/app/components/controls/vis",{"_index":4398,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["src/app/components/debug",{"_index":1829,"title":{},"body":{"components/DebugLogsComponent.html":{},"modules/DebugLogsModule.html":{}}}],["src/app/components/doi/doi.component.ts",{"_index":2110,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:12",{"_index":2121,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:13",{"_index":2122,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:14",{"_index":2117,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:16",{"_index":2120,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:17",{"_index":2123,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.component.ts:35",{"_index":2118,"title":{},"body":{"components/DoiComponent.html":{}}}],["src/app/components/doi/doi.module.ts",{"_index":2146,"title":{},"body":{"modules/DoiModule.html":{}}}],["src/app/components/error/error.component.ts",{"_index":2157,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/components/error/error.component.ts:10",{"_index":2160,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/components/error/error.module.ts",{"_index":2188,"title":{},"body":{"modules/ErrorModule.html":{}}}],["src/app/components/file",{"_index":2212,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":2336,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:16",{"_index":2355,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:17",{"_index":2354,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:18",{"_index":2356,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:19",{"_index":2352,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:20",{"_index":2353,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:21",{"_index":2357,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:23",{"_index":2351,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:24",{"_index":2346,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:27",{"_index":2350,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:29",{"_index":2358,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:36",{"_index":2348,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:41",{"_index":2349,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:46",{"_index":2347,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.module.ts",{"_index":2416,"title":{},"body":{"modules/FooterModule.html":{}}}],["src/app/components/home/home.component.ts",{"_index":2526,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:104",{"_index":2541,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:112",{"_index":2539,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:19",{"_index":2568,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:20",{"_index":2550,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:21",{"_index":2563,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:22",{"_index":2548,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:23",{"_index":2557,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:24",{"_index":2567,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:26",{"_index":2554,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:27",{"_index":2553,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:28",{"_index":2552,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:29",{"_index":2555,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:30",{"_index":2551,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:32",{"_index":2549,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:33",{"_index":2558,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:34",{"_index":2562,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:36",{"_index":2566,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:37",{"_index":2561,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:39",{"_index":2538,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:42",{"_index":2547,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:44",{"_index":2556,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:79",{"_index":2545,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:89",{"_index":2543,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:94",{"_index":2542,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:99",{"_index":2540,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.module.ts",{"_index":2774,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/components/indented",{"_index":2285,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"modules/IndentedListModule.html":{},"injectables/IndentedListService.html":{},"interfaces/Node.html":{}}}],["src/app/components/info/info.component.ts",{"_index":2862,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:15",{"_index":2871,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:16",{"_index":2872,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:17",{"_index":2869,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:18",{"_index":2866,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:23",{"_index":2868,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:25",{"_index":2873,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:26",{"_index":2870,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.component.ts:50",{"_index":2867,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/info/info.module.ts",{"_index":2900,"title":{},"body":{"modules/InfoModule.html":{}}}],["src/app/components/legend/legend.component.ts",{"_index":2904,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:16",{"_index":2916,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:18",{"_index":2915,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:19",{"_index":2913,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:20",{"_index":2914,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:21",{"_index":2912,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.component.ts:23",{"_index":2917,"title":{},"body":{"components/LegendComponent.html":{}}}],["src/app/components/legend/legend.module.ts",{"_index":2945,"title":{},"body":{"modules/LegendModule.html":{}}}],["src/app/components/legend/legend.service.ts",{"_index":2950,"title":{},"body":{"injectables/LegendService.html":{}}}],["src/app/components/legend/legend.service.ts:13",{"_index":2956,"title":{},"body":{"injectables/LegendService.html":{}}}],["src/app/components/legend/legend.service.ts:15",{"_index":2954,"title":{},"body":{"injectables/LegendService.html":{}}}],["src/app/components/loading/loading.component.ts",{"_index":3012,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/loading/loading.component.ts:13",{"_index":3015,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/loading/loading.component.ts:15",{"_index":3017,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/components/loading/loading.module.ts",{"_index":3029,"title":{},"body":{"modules/LoadingModule.html":{}}}],["src/app/components/nav",{"_index":3172,"title":{},"body":{"components/NavItemComponent.html":{},"modules/NavItemModule.html":{}}}],["src/app/components/omap",{"_index":3212,"title":{},"body":{"components/OmapControlsComponent.html":{},"modules/OmapControlsModule.html":{}}}],["src/app/components/organ",{"_index":3265,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{}}}],["src/app/components/report/report.module.ts",{"_index":3609,"title":{},"body":{"modules/ReportModule.html":{}}}],["src/app/components/sidenav",{"_index":3764,"title":{},"body":{"components/SidenavHeaderComponent.html":{},"modules/SidenavHeaderModule.html":{}}}],["src/app/components/sidenav/sidenav.component.ts",{"_index":3759,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/sidenav/sidenav.module.ts",{"_index":3790,"title":{},"body":{"modules/SidenavModule.html":{}}}],["src/app/components/table",{"_index":3900,"title":{},"body":{"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{}}}],["src/app/components/tracking",{"_index":3931,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{}}}],["src/app/components/upload/upload.component.ts",{"_index":4292,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:11",{"_index":4296,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:13",{"_index":4302,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:14",{"_index":4295,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:16",{"_index":4301,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:40",{"_index":4297,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:49",{"_index":4300,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:53",{"_index":4299,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.component.ts:74",{"_index":4298,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/components/upload/upload.module.ts",{"_index":4325,"title":{},"body":{"modules/UploadModule.html":{}}}],["src/app/models/bimodal.model.ts",{"_index":133,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/bimodal.model.ts:11",{"_index":517,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:12",{"_index":520,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:13",{"_index":511,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:14",{"_index":512,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:15",{"_index":510,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:16",{"_index":529,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:17",{"_index":530,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:18",{"_index":513,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:19",{"_index":508,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:20",{"_index":518,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:21",{"_index":527,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:22",{"_index":526,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:24",{"_index":523,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:25",{"_index":522,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:26",{"_index":515,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:27",{"_index":528,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:28",{"_index":509,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:29",{"_index":514,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:30",{"_index":521,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:31",{"_index":516,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:32",{"_index":507,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:33",{"_index":524,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:34",{"_index":525,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:35",{"_index":519,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/bimodal.model.ts:36",{"_index":506,"title":{},"body":{"classes/BMNode.html":{}}}],["src/app/models/ga.model.ts",{"_index":2481,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/indent.model.ts",{"_index":2780,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:18",{"_index":2788,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:2",{"_index":2785,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:3",{"_index":2786,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:4",{"_index":2782,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:5",{"_index":2783,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:6",{"_index":2784,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/indent.model.ts:7",{"_index":2781,"title":{},"body":{"classes/ILNode.html":{}}}],["src/app/models/legend.model.ts",{"_index":2902,"title":{},"body":{"interfaces/Legend.html":{}}}],["src/app/models/logs.model.ts",{"_index":3055,"title":{},"body":{"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/omap.model.ts",{"_index":3209,"title":{},"body":{"interfaces/OmapConfig.html":{}}}],["src/app/models/report.model.ts",{"_index":999,"title":{},"body":{"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["src/app/models/response.model.ts",{"_index":2151,"title":{},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Response.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/sheet.model.ts",{"_index":1333,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/tree.model.ts",{"_index":5,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/tree.model.ts:126",{"_index":1014,"title":{},"body":{"classes/Cell.html":{}}}],["src/app/models/tree.model.ts:127",{"_index":1013,"title":{},"body":{"classes/Cell.html":{}}}],["src/app/models/tree.model.ts:128",{"_index":1012,"title":{},"body":{"classes/Cell.html":{}}}],["src/app/models/tree.model.ts:129",{"_index":1011,"title":{},"body":{"classes/Cell.html":{}}}],["src/app/models/tree.model.ts:130",{"_index":1010,"title":{},"body":{"classes/Cell.html":{}}}],["src/app/models/tree.model.ts:142",{"_index":3107,"title":{},"body":{"classes/Marker.html":{}}}],["src/app/models/tree.model.ts:143",{"_index":3106,"title":{},"body":{"classes/Marker.html":{}}}],["src/app/models/tree.model.ts:144",{"_index":3104,"title":{},"body":{"classes/Marker.html":{}}}],["src/app/models/tree.model.ts:145",{"_index":3105,"title":{},"body":{"classes/Marker.html":{}}}],["src/app/models/tree.model.ts:146",{"_index":3103,"title":{},"body":{"classes/Marker.html":{}}}],["src/app/models/tree.model.ts:15",{"_index":3887,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:16",{"_index":3890,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:17",{"_index":3893,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:18",{"_index":3892,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:19",{"_index":3881,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:20",{"_index":3896,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:21",{"_index":3885,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:22",{"_index":3886,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:23",{"_index":3888,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:24",{"_index":3895,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:25",{"_index":3894,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:26",{"_index":3880,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:27",{"_index":3898,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:28",{"_index":3899,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:29",{"_index":3897,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:30",{"_index":3882,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:31",{"_index":3884,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:32",{"_index":3883,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:33",{"_index":3889,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:34",{"_index":3891,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/tree.model.ts:35",{"_index":3879,"title":{},"body":{"classes/TNode.html":{}}}],["src/app/models/ui.model.ts",{"_index":3005,"title":{},"body":{"interfaces/Loading.html":{},"interfaces/Logs.html":{},"interfaces/OpenBottomSheetData.html":{},"interfaces/Snackbar.html":{}}}],["src/app/modules/control",{"_index":1494,"title":{},"body":{"components/ControlPaneComponent.html":{},"modules/ControlPaneModule.html":{}}}],["src/app/modules/docs/docs",{"_index":2059,"title":{},"body":{"components/DocsNavComponent.html":{},"modules/DocsNavModule.html":{}}}],["src/app/modules/docs/docs.component.ts",{"_index":1924,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:16",{"_index":1963,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:17",{"_index":1958,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:18",{"_index":1957,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:19",{"_index":1956,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:20",{"_index":1962,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:21",{"_index":1954,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:22",{"_index":1960,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:23",{"_index":1961,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:24",{"_index":1953,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:25",{"_index":1943,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:28",{"_index":1951,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:30",{"_index":1950,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:31",{"_index":1955,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:32",{"_index":1959,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:56",{"_index":1945,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:63",{"_index":1946,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:68",{"_index":1949,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:73",{"_index":1947,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.component.ts:78",{"_index":1948,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/modules/docs/docs.module.ts",{"_index":2050,"title":{},"body":{"modules/DocsModule.html":{}}}],["src/app/modules/functions/functions.component.ts",{"_index":2418,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:26",{"_index":2436,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:27",{"_index":2441,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:28",{"_index":2438,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:29",{"_index":2433,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:30",{"_index":2434,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:31",{"_index":2439,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:33",{"_index":2428,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:35",{"_index":2427,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:38",{"_index":2442,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:39",{"_index":2435,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:40",{"_index":2440,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:47",{"_index":2431,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.component.ts:57",{"_index":2432,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["src/app/modules/functions/functions.module.ts",{"_index":2478,"title":{},"body":{"modules/FunctionsModule.html":{}}}],["src/app/modules/navbar/navbar.module.ts",{"_index":3198,"title":{},"body":{"modules/NavbarModule.html":{}}}],["src/app/modules/playground/playground.component.ts",{"_index":3448,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:19",{"_index":3491,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:21",{"_index":3479,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:22",{"_index":3489,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:249",{"_index":3472,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:263",{"_index":3475,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:27",{"_index":3492,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:280",{"_index":3459,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:31",{"_index":3497,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:35",{"_index":3488,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:39",{"_index":3477,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:43",{"_index":3494,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:48",{"_index":3485,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:53",{"_index":3458,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:56",{"_index":3493,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:57",{"_index":3480,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:81",{"_index":3462,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.component.ts:97",{"_index":3467,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["src/app/modules/playground/playground.module.ts",{"_index":3593,"title":{},"body":{"modules/PlaygroundModule.html":{}}}],["src/app/modules/root/root.module.ts",{"_index":3622,"title":{},"body":{"modules/RootModule.html":{}}}],["src/app/modules/search/search.module.ts",{"_index":3663,"title":{},"body":{"modules/SearchModule.html":{}}}],["src/app/modules/tree/bimodal.service.ts",{"_index":715,"title":{},"body":{"injectables/BimodalService.html":{}}}],["src/app/modules/tree/bimodal.service.ts:19",{"_index":722,"title":{},"body":{"injectables/BimodalService.html":{}}}],["src/app/modules/tree/bimodal.service.ts:30",{"_index":730,"title":{},"body":{"injectables/BimodalService.html":{}}}],["src/app/modules/tree/bimodal.service.ts:393",{"_index":747,"title":{},"body":{"injectables/BimodalService.html":{}}}],["src/app/modules/tree/bimodal.service.ts:414",{"_index":750,"title":{},"body":{"injectables/BimodalService.html":{}}}],["src/app/modules/tree/spec/data.ts",{"_index":1701,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:111",{"_index":1737,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:12",{"_index":1722,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:130",{"_index":1729,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:158",{"_index":1741,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:168",{"_index":1739,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:196",{"_index":1754,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:212",{"_index":1749,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:228",{"_index":1753,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:244",{"_index":1748,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:260",{"_index":1755,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:280",{"_index":1751,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:300",{"_index":1756,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:320",{"_index":1752,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:340",{"_index":1757,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:356",{"_index":1761,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:41",{"_index":1747,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:52",{"_index":1742,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:6",{"_index":1727,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:63",{"_index":1746,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:74",{"_index":1744,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/data.ts:87",{"_index":1734,"title":{},"body":{"classes/Data.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts",{"_index":533,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:136",{"_index":556,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:17",{"_index":547,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:185",{"_index":564,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:234",{"_index":552,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:38",{"_index":566,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:398",{"_index":554,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:4",{"_index":546,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:458",{"_index":567,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:538",{"_index":569,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:8",{"_index":544,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/bimodal.ts:87",{"_index":563,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/multiparent.ts",{"_index":3162,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/multiparent.ts:10",{"_index":3164,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/multiparent.ts:16",{"_index":3166,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/multiparent.ts:26",{"_index":3167,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/multiparent.ts:6",{"_index":3165,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts",{"_index":3986,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:110",{"_index":3994,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:17",{"_index":3997,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:182",{"_index":3993,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:254",{"_index":3995,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:326",{"_index":3998,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:358",{"_index":3999,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:38",{"_index":3996,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:4",{"_index":3992,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:402",{"_index":4000,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:457",{"_index":4002,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/groups/tree.ts:8",{"_index":3991,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["src/app/modules/tree/spec/legends.ts",{"_index":2984,"title":{},"body":{"classes/Legends.html":{}}}],["src/app/modules/tree/spec/legends.ts:10",{"_index":2987,"title":{},"body":{"classes/Legends.html":{}}}],["src/app/modules/tree/spec/legends.ts:19",{"_index":2989,"title":{},"body":{"classes/Legends.html":{}}}],["src/app/modules/tree/spec/legends.ts:35",{"_index":2996,"title":{},"body":{"classes/Legends.html":{}}}],["src/app/modules/tree/spec/legends.ts:6",{"_index":2988,"title":{},"body":{"classes/Legends.html":{}}}],["src/app/modules/tree/spec/marks.ts",{"_index":3108,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/marks.ts:14",{"_index":3111,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/marks.ts:23",{"_index":3116,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/marks.ts:30",{"_index":3114,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/marks.ts:37",{"_index":3113,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/marks.ts:7",{"_index":3112,"title":{},"body":{"classes/Marks.html":{}}}],["src/app/modules/tree/spec/scales.ts",{"_index":3641,"title":{},"body":{"classes/Scales.html":{}}}],["src/app/modules/tree/spec/scales.ts:21",{"_index":3647,"title":{},"body":{"classes/Scales.html":{}}}],["src/app/modules/tree/spec/scales.ts:36",{"_index":3653,"title":{},"body":{"classes/Scales.html":{}}}],["src/app/modules/tree/spec/scales.ts:4",{"_index":3646,"title":{},"body":{"classes/Scales.html":{}}}],["src/app/modules/tree/spec/scales.ts:8",{"_index":3644,"title":{},"body":{"classes/Scales.html":{}}}],["src/app/modules/tree/spec/signals.ts",{"_index":3792,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:110",{"_index":3831,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:12",{"_index":3808,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:131",{"_index":3815,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:152",{"_index":3819,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:170",{"_index":3824,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:188",{"_index":3822,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:206",{"_index":3828,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:227",{"_index":3826,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:244",{"_index":3837,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:254",{"_index":3836,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:38",{"_index":3834,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:5",{"_index":3810,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:58",{"_index":3839,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:69",{"_index":3814,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:80",{"_index":3812,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/spec/signals.ts:92",{"_index":3830,"title":{},"body":{"classes/Signals.html":{}}}],["src/app/modules/tree/tree.component.ts",{"_index":3978,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/modules/tree/tree.component.ts:9",{"_index":3983,"title":{},"body":{"components/TreeComponent.html":{}}}],["src/app/modules/tree/tree.functions.ts",{"_index":4493,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/tree/tree.module.ts",{"_index":4016,"title":{},"body":{"modules/TreeModule.html":{}}}],["src/app/modules/tree/tree.service.ts",{"_index":4019,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:108",{"_index":4026,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:25",{"_index":4032,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:29",{"_index":4030,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:33",{"_index":4033,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:38",{"_index":4036,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:43",{"_index":4037,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:48",{"_index":4023,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:51",{"_index":4035,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:52",{"_index":4038,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/tree.service.ts:53",{"_index":4029,"title":{},"body":{"injectables/TreeService.html":{}}}],["src/app/modules/tree/vega.service.ts",{"_index":4326,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:118",{"_index":4337,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:141",{"_index":4343,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:30",{"_index":4332,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:33",{"_index":4352,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:34",{"_index":4349,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:35",{"_index":4350,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:43",{"_index":4347,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:69",{"_index":4340,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/modules/tree/vega.service.ts:86",{"_index":4334,"title":{},"body":{"injectables/VegaService.html":{}}}],["src/app/pipes/order",{"_index":3251,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["src/app/services/analytics.module.ts",{"_index":201,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/analytics.module.ts:60",{"_index":208,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["src/app/services/consent.service.ts",{"_index":1473,"title":{},"body":{"injectables/ConsentService.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/services/consent.service.ts:10",{"_index":1478,"title":{},"body":{"injectables/ConsentService.html":{}}}],["src/app/services/consent.service.ts:20",{"_index":1480,"title":{},"body":{"injectables/ConsentService.html":{}}}],["src/app/services/consent.service.ts:27",{"_index":1481,"title":{},"body":{"injectables/ConsentService.html":{}}}],["src/app/services/consent.service.ts:8",{"_index":1482,"title":{},"body":{"injectables/ConsentService.html":{}}}],["src/app/services/docs.service.ts",{"_index":2088,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/docs.service.ts:13",{"_index":2101,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/docs.service.ts:18",{"_index":2092,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/docs.service.ts:21",{"_index":2094,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/docs.service.ts:28",{"_index":2096,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/docs.service.ts:32",{"_index":2098,"title":{},"body":{"injectables/DocsService.html":{}}}],["src/app/services/google",{"_index":2503,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["src/app/services/local",{"_index":3031,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/mouse",{"_index":3129,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/services/sheet.service.ts",{"_index":3670,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:11",{"_index":3676,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:121",{"_index":3694,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:131",{"_index":3713,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:139",{"_index":3707,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:158",{"_index":3704,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:20",{"_index":3699,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:64",{"_index":3690,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:70",{"_index":3711,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/services/sheet.service.ts:82",{"_index":3678,"title":{},"body":{"injectables/SheetService.html":{}}}],["src/app/static/docs.ts",{"_index":4666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/static/home.ts",{"_index":4534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/static/url.ts",{"_index":4491,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/static/util.ts",{"_index":4507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/store/logs.state.ts",{"_index":3063,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["src/app/store/logs.state.ts:110",{"_index":3068,"title":{},"body":{"injectables/LogsState.html":{}}}],["src/app/store/logs.state.ts:53",{"_index":3071,"title":{},"body":{"injectables/LogsState.html":{}}}],["src/app/store/logs.state.ts:64",{"_index":3074,"title":{},"body":{"injectables/LogsState.html":{}}}],["src/app/store/sheet.state.ts",{"_index":4663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/store/tree.state.ts",{"_index":4105,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["src/app/store/ui.state.ts",{"_index":4157,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["src/environments/environment.prod.ts",{"_index":4646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.stage.ts",{"_index":4653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ss",{"_index":941,"title":{},"body":{"injectables/BimodalService.html":{},"components/HomeComponent.html":{}}}],["ss.foreach((s",{"_index":942,"title":{},"body":{"injectables/BimodalService.html":{}}}],["st_id",{"_index":37,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"miscellaneous/variables.html":{}}}],["staging",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":3255,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["start",{"_index":1324,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/UploadComponent.html":{}}}],["started",{"_index":4616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state",{"_index":952,"title":{},"body":{"injectables/BimodalService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["state.alllogs",{"_index":3080,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["state.bimodal",{"_index":4123,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.bimodal.config",{"_index":4116,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.bimodal.config.bm.type",{"_index":4114,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.bimodal.links",{"_index":958,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/TreeStateModel.html":{}}}],["state.bimodal.nodes",{"_index":956,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/TreeStateModel.html":{}}}],["state.bottomsheetdata",{"_index":4125,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.bottomsheetopen",{"_index":4189,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.compareopen",{"_index":4191,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.controlpaneopen",{"_index":4058,"title":{},"body":{"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["state.debuglogopen",{"_index":4187,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.discrepencyid",{"_index":4052,"title":{},"body":{"injectables/TreeService.html":{}}}],["state.discrepencylabel",{"_index":4050,"title":{},"body":{"injectables/TreeService.html":{}}}],["state.duplicateid",{"_index":4054,"title":{},"body":{"injectables/TreeService.html":{}}}],["state.error",{"_index":4179,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.height",{"_index":4043,"title":{},"body":{"injectables/TreeService.html":{}}}],["state.id",{"_index":3082,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["state.indentlistopen",{"_index":4181,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.lastsearch",{"_index":4131,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links",{"_index":4127,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.as_as",{"_index":4156,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.as_as_organwise",{"_index":4151,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.as_ct",{"_index":4152,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.as_ct_organwise",{"_index":4155,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.ct_b",{"_index":4153,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.links.ct_b_organwise",{"_index":4154,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.loading",{"_index":4174,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.loadingtext",{"_index":4176,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.omapconfig",{"_index":4133,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.reportopen",{"_index":4183,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.rightsidenavopen",{"_index":4185,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.search",{"_index":4047,"title":{},"body":{"injectables/TreeService.html":{}}}],["state.searchopen",{"_index":4193,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.sheetlogs",{"_index":3079,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{}}}],["state.snackbar",{"_index":4172,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["state.spec",{"_index":959,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/TreeStateModel.html":{}}}],["state.treedata",{"_index":4119,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["state.view",{"_index":4121,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["statecontext",{"_index":3066,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["states.sheetstate.comparesheets",{"_index":1662,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["states.sheetstate.data",{"_index":1632,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["states.sheetstate.filteredprotiens",{"_index":1636,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["states.sheetstate.omapselectedorgans",{"_index":1600,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["states.sheetstate.selectedorgans",{"_index":1598,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["states.sheetstate.sheet",{"_index":1597,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["states.sheetstate.sheetconfig",{"_index":2457,"title":{},"body":{"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["states.treestate.bimodal.config",{"_index":1634,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["states.treestate.omapconfig",{"_index":1635,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["states.treestate.treedata",{"_index":1633,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/VegaService.html":{}}}],["static",{"_index":203,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"classes/BimodalMarkGroup.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/Data.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"classes/Legends.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/TreeMarkGroup.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["static/docs",{"_index":1968,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{}}}],["static/home",{"_index":2570,"title":{},"body":{"components/HomeComponent.html":{}}}],["static/url",{"_index":3721,"title":{},"body":{"injectables/SheetService.html":{}}}],["statistics",{"_index":1886,"title":{},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"miscellaneous/variables.html":{}}}],["status",{"_index":963,"title":{},"body":{"injectables/BimodalService.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"injectables/TreeService.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["steelblue",{"_index":604,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["storage",{"_index":224,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":721,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{}}}],["store/logs.state",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["store/sheet.state",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"components/ControlPaneComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{}}}],["store/tree.state",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/TreeService.html":{}}}],["store/ui.state",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"components/LoadingComponent.html":{},"injectables/TreeService.html":{}}}],["stored",{"_index":3037,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["stores",{"_index":1740,"title":{},"body":{"classes/Data.html":{},"interfaces/TreeStateModel.html":{}}}],["str",{"_index":4501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["str.id",{"_index":896,"title":{},"body":{"injectables/BimodalService.html":{}}}],["str.id.tolowercase",{"_index":897,"title":{},"body":{"injectables/BimodalService.html":{}}}],["str.name",{"_index":902,"title":{},"body":{"injectables/BimodalService.html":{}}}],["stratify",{"_index":1784,"title":{},"body":{"classes/Data.html":{}}}],["string",{"_index":20,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Legend.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":603,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["strokedash",{"_index":692,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["strokewidth",{"_index":624,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["structure",{"_index":18,"title":{"interfaces/Structure.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/InfoComponent.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/functions.html":{}}}],["structure.color",{"_index":4085,"title":{},"body":{"injectables/TreeService.html":{}}}],["structure.id",{"_index":2850,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["structure.name",{"_index":2849,"title":{},"body":{"injectables/IndentedListService.html":{},"injectables/TreeService.html":{}}}],["structure.notes",{"_index":4080,"title":{},"body":{"injectables/TreeService.html":{}}}],["structure.rdfs_label",{"_index":4081,"title":{},"body":{"injectables/TreeService.html":{}}}],["structures",{"_index":143,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":2275,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"interfaces/Legend.html":{},"injectables/LegendService.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["styles",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["styleurls",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["sub",{"_index":1305,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["subject",{"_index":1641,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/DocsService.html":{},"injectables/IndentedListService.html":{},"injectables/LegendService.html":{}}}],["subjects",{"_index":1648,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["submit",{"_index":3421,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{}}}],["submit(entry",{"_index":3950,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["submitdata",{"_index":4293,"title":{},"body":{"components/UploadComponent.html":{}}}],["subscribe((data",{"_index":2107,"title":{},"body":{"injectables/DocsService.html":{}}}],["subscription",{"_index":2509,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":2511,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["substructures",{"_index":4027,"title":{},"body":{"injectables/TreeService.html":{}}}],["subtitle",{"_index":2688,"title":{},"body":{"components/HomeComponent.html":{}}}],["success",{"_index":2154,"title":{},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Response.html":{},"interfaces/UIStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":989,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["suitable",{"_index":1252,"title":{},"body":{"components/CompareComponent.html":{}}}],["suite",{"_index":2387,"title":{},"body":{"components/FooterComponent.html":{}}}],["support",{"_index":4517,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1250,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["sure",{"_index":1229,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["svg",{"_index":1965,"title":{},"body":{"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"modules.html":{}}}],["svutuku@iu.edu",{"_index":4584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swatch",{"_index":1272,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["swimlane/ngx",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/ReportModule.html":{}}}],["switch",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/VisControlsComponent.html":{}}}],["switch.mdc",{"_index":4459,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["switch__icon",{"_index":4461,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["symbol",{"_index":663,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/Legends.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["symbol:click",{"_index":3872,"title":{},"body":{"classes/Signals.html":{}}}],["symbol:mouseover",{"_index":3873,"title":{},"body":{"classes/Signals.html":{}}}],["symbols",{"_index":555,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Legends.html":{}}}],["symbolsize",{"_index":2994,"title":{},"body":{"classes/Legends.html":{}}}],["sync.service",{"_index":222,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["sync.service.ts",{"_index":2504,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:10",{"_index":2506,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:14",{"_index":3032,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["system",{"_index":4563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":168,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Link.html":{},"pipes/OrderByPipe.html":{}}}],["tab",{"_index":3432,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{}}}],["tab.index",{"_index":3554,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tab.mdc",{"_index":3581,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tabchange",{"_index":3457,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tabchange(tab",{"_index":3470,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tabindex",{"_index":3292,"title":{},"body":{"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{}}}],["table",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["tablenestedmenucomponent",{"_index":403,"title":{"components/TableNestedMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"modules/TableNestedMenuModule.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["tablenestedmenumodule",{"_index":2773,"title":{"modules/TableNestedMenuModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/NavbarModule.html":{},"modules/RootModule.html":{},"modules/TableNestedMenuModule.html":{},"index.html":{},"modules.html":{}}}],["tables",{"_index":1996,"title":{},"body":{"components/DocsComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"miscellaneous/variables.html":{}}}],["tablets",{"_index":2724,"title":{},"body":{"components/HomeComponent.html":{}}}],["tableversion",{"_index":1361,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["tabs",{"_index":3473,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tabular",{"_index":3718,"title":{},"body":{"injectables/SheetService.html":{}}}],["tag",{"_index":4648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["take",{"_index":1471,"title":{},"body":{"injectables/ConfigService.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["takes",{"_index":3734,"title":{},"body":{"injectables/SheetService.html":{}}}],["target",{"_index":1395,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["target.x",{"_index":1804,"title":{},"body":{"classes/Data.html":{}}}],["target.y",{"_index":1806,"title":{},"body":{"classes/Data.html":{}}}],["targets",{"_index":149,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Link.html":{},"classes/Signals.html":{}}}],["targets.foreach((s",{"_index":933,"title":{},"body":{"injectables/BimodalService.html":{}}}],["targets.push(nodes[s].id",{"_index":931,"title":{},"body":{"injectables/BimodalService.html":{}}}],["targets__click",{"_index":3829,"title":{},"body":{"classes/Signals.html":{}}}],["targets_clicked_array",{"_index":1814,"title":{},"body":{"classes/Data.html":{}}}],["targets_hovered_array",{"_index":1809,"title":{},"body":{"classes/Data.html":{}}}],["targets_of_targets__click",{"_index":1818,"title":{},"body":{"classes/Data.html":{}}}],["targets_of_targets__hover",{"_index":1821,"title":{},"body":{"classes/Data.html":{}}}],["targetx",{"_index":1803,"title":{},"body":{"classes/Data.html":{}}}],["targety",{"_index":1805,"title":{},"body":{"classes/Data.html":{}}}],["tbody",{"_index":3576,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["td",{"_index":1502,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/PlaygroundComponent.html":{}}}],["td.children",{"_index":793,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.color",{"_index":812,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.isnew",{"_index":810,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.name",{"_index":795,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.notes",{"_index":801,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.ontologyid",{"_index":803,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.ontologyid.tolowercase",{"_index":814,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.organname",{"_index":802,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.pathcolor",{"_index":808,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.problem",{"_index":806,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.x",{"_index":798,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td.y",{"_index":799,"title":{},"body":{"injectables/BimodalService.html":{}}}],["td:nth",{"_index":3583,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["te",{"_index":4139,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["team",{"_index":2637,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["templateurl",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["termid",{"_index":3745,"title":{},"body":{"injectables/SheetService.html":{}}}],["terms",{"_index":2379,"title":{},"body":{"components/FooterComponent.html":{}}}],["test",{"_index":608,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["testcallback",{"_index":3675,"title":{},"body":{"injectables/SheetService.html":{}}}],["testcallback(data",{"_index":3709,"title":{},"body":{"injectables/SheetService.html":{}}}],["text",{"_index":559,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"interfaces/Loading.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"injectables/SheetService.html":{},"interfaces/Snackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["text.length",{"_index":4385,"title":{},"body":{"injectables/VegaService.html":{}}}],["textbox",{"_index":1311,"title":{},"body":{"components/CompareComponent.html":{}}}],["textlinkmark",{"_index":693,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["textmark",{"_index":588,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["textmark:click",{"_index":3865,"title":{},"body":{"classes/Signals.html":{}}}],["textmark:mouseover",{"_index":3869,"title":{},"body":{"classes/Signals.html":{}}}],["texts",{"_index":568,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["th",{"_index":3438,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["thank",{"_index":1643,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["thead",{"_index":3584,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["theme",{"_index":4365,"title":{},"body":{"injectables/VegaService.html":{}}}],["this.activatedroute.params.subscribe((params",{"_index":1972,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.addsignallisteners(treeview",{"_index":4368,"title":{},"body":{"injectables/VegaService.html":{}}}],["this.allomapsheetconfigurations$.pipe",{"_index":1458,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.allsheetconfigurations$.pipe",{"_index":1466,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.atleastonephonerequired",{"_index":1209,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.bimodalconfig",{"_index":2446,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["this.bimodaldata",{"_index":2923,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.bimodaldata.nodes",{"_index":2927,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.bimodaldata.nodes.length",{"_index":2925,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.bm.makebimodaldata",{"_index":4097,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.bm.makebimodaldata(data",{"_index":1579,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/VegaService.html":{}}}],["this.bms.makebimodaldata(data",{"_index":2458,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["this.changedetectorref.detectchanges",{"_index":2880,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.checklinkformat(sheet.link)?.csvurl",{"_index":1187,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.checklinkformat(sheet.link)?.gid",{"_index":1186,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.checklinkformat(sheet.link)?.sheetid",{"_index":1185,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.children",{"_index":2789,"title":{},"body":{"classes/ILNode.html":{}}}],["this.color",{"_index":71,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.comparator",{"_index":82,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.comparatorid",{"_index":83,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.comparatorname",{"_index":84,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.comparedata",{"_index":2928,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.comparedata.emit(data",{"_index":1197,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.comparesheets.subscribe((sheets",{"_index":1151,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.componentactive",{"_index":3385,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.config",{"_index":4428,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config$.subscribe((config",{"_index":2445,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["this.config.bimodal_distance_x",{"_index":4436,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.bimodal_distance_y",{"_index":4437,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.discrepencyid",{"_index":4434,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.discrepencylabel",{"_index":4433,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.duplicateid",{"_index":4435,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.height",{"_index":4431,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.show_all_as",{"_index":4438,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.show_ontology",{"_index":4432,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.config.width",{"_index":4430,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.configservice.config$.subscribe((config",{"_index":1969,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["this.configservice.omapsheetconfiguration$.subscribe((sheetoptions",{"_index":3339,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.configservice.sheetconfiguration$.subscribe((sheetoptions",{"_index":2573,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["this.consent",{"_index":1491,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.complete",{"_index":1490,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(this.consent",{"_index":1488,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(value",{"_index":1492,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentservice.consent",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["this.consentservice.setconsent(entry",{"_index":3964,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.container",{"_index":3961,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.controlpaneopen",{"_index":4057,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.count",{"_index":107,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.createcompareform",{"_index":1154,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.currentsheet",{"_index":3503,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.data",{"_index":1764,"title":{},"body":{"classes/Data.html":{},"components/DoiComponent.html":{},"components/LoadingComponent.html":{}}}],["this.data$.subscribe((data",{"_index":3504,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.data.isintilalselect",{"_index":3378,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.data.map((item",{"_index":2132,"title":{},"body":{"components/DoiComponent.html":{}}}],["this.data.preclose",{"_index":3963,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.data.subscribe((info",{"_index":2874,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.datasource",{"_index":3349,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.datasource.data",{"_index":2335,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.datasource.data.foreach((dataelement",{"_index":3358,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.dialogref.close",{"_index":3384,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.dismiss",{"_index":3965,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.docsdata",{"_index":1979,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.docsdata.next(data",{"_index":2108,"title":{},"body":{"injectables/DocsService.html":{}}}],["this.docsservice.docsdata.subscribe((data",{"_index":1978,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.docsservice.getdata(params['id",{"_index":1975,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.docsservice.getid(params['id",{"_index":1973,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.docsservice.gettitle(idx",{"_index":1980,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/compare.svg",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/debug.svg",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/indent.svg",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/playground.svg",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/report.svg",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/upload.svg",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["this.error",{"_index":2877,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.fb.array",{"_index":1148,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.fb.group",{"_index":1146,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.fileformdataevent.emit(formdata",{"_index":2260,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.filename",{"_index":2257,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.filteredproteins$.subscribe",{"_index":1571,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.fontsize",{"_index":154,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.formgroup",{"_index":1145,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.formgroup.controls['sheets",{"_index":1164,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formgroup.get('link')?.clearvalidators",{"_index":4307,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.formgroup.get('link')?.updatevalueandvalidity",{"_index":4308,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.formgroup.get('sheets",{"_index":1150,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formgroup.patchvalue",{"_index":4309,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.formgroup.status",{"_index":1180,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.formgroup.value",{"_index":4310,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.formgroup.value.sheets.entries",{"_index":1182,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formgroup.valuechanges.subscribe",{"_index":1162,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formgroup.valuechanges.subscribe((x",{"_index":4305,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.formsheets",{"_index":1149,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formsheets.push",{"_index":1153,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formsheets.push(sheet",{"_index":1216,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formsheets.push(this.createcompareform",{"_index":1161,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formsheets.removeat(i",{"_index":1217,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.formvalid",{"_index":1179,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["this.ga.event",{"_index":2450,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["this.ga.event(gaaction.click",{"_index":1193,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{},"components/InfoComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/UIStateModel.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["this.ga.event(gaaction.nav",{"_index":1987,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/PlaygroundComponent.html":{}}}],["this.ga.event(gaaction.slide",{"_index":4429,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.ga.event(gaaction.toggle",{"_index":4199,"title":{},"body":{"interfaces/UIStateModel.html":{},"components/VisControlsComponent.html":{}}}],["this.generatecolumns(data[0].length",{"_index":3551,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.getfromcache",{"_index":3351,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.getrandomcolor",{"_index":1205,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.group",{"_index":153,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["this.groupname",{"_index":73,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.height",{"_index":4042,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.http",{"_index":1448,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get('assets/sheet",{"_index":1454,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(`${url}/lookup/${ontologycode}/${termid}`).pipe",{"_index":3747,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(`${url}/v2/${sheetid}/${gid",{"_index":3729,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(`${url}/v2/${sheetid}/${gid}/graph",{"_index":3726,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(`${url}/v2/csv",{"_index":3722,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(`${url}/v2/playground",{"_index":3753,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(getassetsurl(dataversion",{"_index":3730,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.get(registry[index].path",{"_index":2105,"title":{},"body":{"injectables/DocsService.html":{}}}],["this.http.get>('assets/configuration.json').pipe(take(1",{"_index":1457,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.post(`${url}/v2/csv",{"_index":3725,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.http.post(`${url}/v2/playground",{"_index":3754,"title":{},"body":{"injectables/SheetService.html":{}}}],["this.id",{"_index":67,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.indentdata.asobservable",{"_index":2835,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["this.indentdata.next",{"_index":2860,"title":{},"body":{"injectables/IndentedListService.html":{}}}],["this.indentservice.indentdata$.subscribe((data",{"_index":2325,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.indentservice.makeindentdata(this.currentsheet",{"_index":2329,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.indenttree",{"_index":2332,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.indenttree.treecontrol.expandall",{"_index":2333,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.info",{"_index":2875,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.initializetree(data.data",{"_index":2327,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.inittable(data",{"_index":3507,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.isallselected",{"_index":3392,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.isnew",{"_index":76,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.label",{"_index":165,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.legenddata.asobservable",{"_index":2955,"title":{},"body":{"injectables/LegendService.html":{}}}],["this.legenddata.next(legends",{"_index":2983,"title":{},"body":{"injectables/LegendService.html":{}}}],["this.legends",{"_index":2921,"title":{},"body":{"components/LegendComponent.html":{},"classes/Legends.html":{}}}],["this.link",{"_index":104,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.loading",{"_index":2127,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["this.loadingtext$.subscribe((l",{"_index":3023,"title":{},"body":{"components/LoadingComponent.html":{}}}],["this.ls.legenddata$.pipe(delay(0)).subscribe((data",{"_index":2920,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.ls.makelegenddata(this.treedata",{"_index":2926,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.makeastreedata(currentsheet",{"_index":1765,"title":{},"body":{"classes/Data.html":{}}}],["this.makeastreeheightsignal(config.height",{"_index":3855,"title":{},"body":{"classes/Signals.html":{}}}],["this.makeastreelinksdata",{"_index":1766,"title":{},"body":{"classes/Data.html":{}}}],["this.makeastreewidthsignal(config.width",{"_index":3854,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodal(treeview",{"_index":4370,"title":{},"body":{"injectables/VegaService.html":{}}}],["this.makebimodaledgesdata",{"_index":1768,"title":{},"body":{"classes/Data.html":{}}}],["this.makebimodallegend",{"_index":3000,"title":{},"body":{"classes/Legends.html":{}}}],["this.makebimodalmarkgroup",{"_index":574,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/Marks.html":{}}}],["this.makebimodalnodeclickstatesignal",{"_index":3845,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodalnodehoverstatesignal",{"_index":3846,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodalnodesdata",{"_index":1767,"title":{},"body":{"classes/Data.html":{}}}],["this.makebimodalnodesourceshoverstatesignal",{"_index":3847,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodalnodetargetshoverstatesignal",{"_index":3848,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodalpathmarks",{"_index":578,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["this.makebimodalsourcesclickstatesignal",{"_index":3850,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodalsymbolmarks",{"_index":579,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["this.makebimodaltargetsclickstatesignal",{"_index":3849,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodaltextclicksignal",{"_index":3852,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodaltextdiscrepencyidmarks",{"_index":584,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["this.makebimodaltextdiscrepencylabelmarks",{"_index":583,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["this.makebimodaltextduplicateidmarks",{"_index":585,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["this.makebimodaltexthoversignal",{"_index":3853,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebimodaltextsearchmarks",{"_index":581,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["this.makebimodalwithdiscrepencyid(prop.config",{"_index":1594,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.makebimodalwithdiscrepencylabel(prop.config",{"_index":1593,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.makebiomodalpathdoisignal",{"_index":3857,"title":{},"body":{"classes/Signals.html":{}}}],["this.makebiomodalscale",{"_index":3656,"title":{},"body":{"classes/Scales.html":{}}}],["this.makebiomodaltextlinkmarks",{"_index":582,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["this.makebiomodaltextmarks",{"_index":580,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["this.makediscrepencyiddata",{"_index":1781,"title":{},"body":{"classes/Data.html":{}}}],["this.makediscrepencylabeldata",{"_index":1780,"title":{},"body":{"classes/Data.html":{}}}],["this.makediscrepencysignal",{"_index":3858,"title":{},"body":{"classes/Signals.html":{}}}],["this.makeduplicateid(prop.config",{"_index":1595,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.makeduplicateiddata",{"_index":1782,"title":{},"body":{"classes/Data.html":{}}}],["this.makemultiparentmarkgroup",{"_index":3124,"title":{},"body":{"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{}}}],["this.makemultiparentpathmarks",{"_index":3169,"title":{},"body":{"classes/MultiParentMarkGroup.html":{}}}],["this.makenodeinfostring(node",{"_index":4378,"title":{},"body":{"injectables/VegaService.html":{}}}],["this.makesearchidsdata",{"_index":1779,"title":{},"body":{"classes/Data.html":{}}}],["this.makesearchsignal",{"_index":3851,"title":{},"body":{"classes/Signals.html":{}}}],["this.makeshowontologyidsignal(config.show_ontology",{"_index":3856,"title":{},"body":{"classes/Signals.html":{}}}],["this.makesourcesclickdata",{"_index":1769,"title":{},"body":{"classes/Data.html":{}}}],["this.makesourceshoverdata",{"_index":1770,"title":{},"body":{"classes/Data.html":{}}}],["this.makesourcesofsourcesclickdata",{"_index":1773,"title":{},"body":{"classes/Data.html":{}}}],["this.makesourcesofsourceshoverdata",{"_index":1774,"title":{},"body":{"classes/Data.html":{}}}],["this.maketargetsclickdata",{"_index":1771,"title":{},"body":{"classes/Data.html":{}}}],["this.maketargetshoverdata",{"_index":1772,"title":{},"body":{"classes/Data.html":{}}}],["this.maketargetsoftargetsclickdata",{"_index":1775,"title":{},"body":{"classes/Data.html":{}}}],["this.maketargetsoftargetshoverdata",{"_index":1776,"title":{},"body":{"classes/Data.html":{}}}],["this.maketreelegend",{"_index":3001,"title":{},"body":{"classes/Legends.html":{}}}],["this.maketreelegendscale",{"_index":3657,"title":{},"body":{"classes/Scales.html":{}}}],["this.maketreemarkgroup",{"_index":3125,"title":{},"body":{"classes/Marks.html":{},"classes/TreeMarkGroup.html":{}}}],["this.maketreepathmarks",{"_index":4005,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["this.maketreesymbolmarks",{"_index":4006,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["this.maketreetextlinkmarks",{"_index":4008,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["this.maketreetextmarks",{"_index":4007,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["this.makeviewmodeclickdata",{"_index":1777,"title":{},"body":{"classes/Data.html":{}}}],["this.makeviewmodehoverdata",{"_index":1778,"title":{},"body":{"classes/Data.html":{}}}],["this.markformgrouptouched(form",{"_index":1177,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.markformgrouptouched(this.formgroup",{"_index":1178,"title":{},"body":{"components/CompareComponent.html":{}}}],["this.marks",{"_index":3123,"title":{},"body":{"classes/Marks.html":{}}}],["this.mastersheetlink",{"_index":1970,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["this.maticonregistry.addsvgicon",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["this.name",{"_index":68,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.nodes",{"_index":1569,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.nodesize",{"_index":157,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.notes",{"_index":85,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.omapdatasource",{"_index":3343,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapdatasource.data.foreach((dataelement",{"_index":3365,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapdatasource.data?.foreach((de",{"_index":3345,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omaporgans",{"_index":3356,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omaporgans.foreach((item",{"_index":3364,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omaps.organsonly",{"_index":3223,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["this.omaps.proteinsonly",{"_index":3225,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["this.omapselection",{"_index":3387,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapselection.isempty",{"_index":3337,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapselection.select(dataelement",{"_index":3366,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapselection.selected.foreach((element",{"_index":3382,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapselection.toggle(row",{"_index":3411,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.omapsheetoptions",{"_index":3340,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.onchange",{"_index":2265,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.onchange(this.filename",{"_index":2261,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.onclose.cache",{"_index":3353,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.ontologyid",{"_index":70,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.ontouched",{"_index":2263,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.onvalidatorchange",{"_index":2266,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.organname",{"_index":86,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.organs",{"_index":3354,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.organs.foreach((item",{"_index":3361,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.organs.push(item.symbol",{"_index":3371,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.parent",{"_index":69,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.parents",{"_index":79,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.pathcolor",{"_index":77,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.player.height",{"_index":2578,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.player.pausevideo",{"_index":2591,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.player.playvideo",{"_index":2593,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.player.seekto(seconds",{"_index":2592,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.player.width",{"_index":2587,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.prevtab",{"_index":3553,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.problem",{"_index":72,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.proteinpresence",{"_index":166,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.router.events.subscribe((event",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":1986,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.router.navigate(['/docs",{"_index":1976,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["this.router.navigate(['/docs/faq",{"_index":2362,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.router.navigate(['/vis",{"_index":2598,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.saveconsent(consent",{"_index":3047,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.sc$.subscribe((config",{"_index":4059,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.scales",{"_index":3655,"title":{},"body":{"classes/Scales.html":{}}}],["this.selectbyhraversion(row",{"_index":3400,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selected",{"_index":1974,"title":{},"body":{"components/DocsComponent.html":{}}}],["this.selection",{"_index":3386,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.clear",{"_index":3409,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.deselect(dataelement",{"_index":3408,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.isempty",{"_index":3338,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.isselected(row",{"_index":3396,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.select(dataelement",{"_index":3363,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.selected.map((item",{"_index":3368,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.selection.toggle(row",{"_index":3410,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["this.setconsent('not",{"_index":1493,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.sheet$.subscribe((sheet",{"_index":3502,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.sheetconfig",{"_index":4060,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.sheetdata",{"_index":2330,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.sheetoptions",{"_index":2574,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["this.sheetref.dismiss",{"_index":2137,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{}}}],["this.showallas",{"_index":1592,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.signals",{"_index":3844,"title":{},"body":{"classes/Signals.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sources",{"_index":160,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.spreadsheetdata",{"_index":3505,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.spreadsheetdata.filter((row",{"_index":3555,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.storage",{"_index":3042,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.getitem?.(this.key",{"_index":3050,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.setitem?.(this.key",{"_index":3054,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.store.dispatch",{"_index":1661,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.store.dispatch(new",{"_index":948,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["this.store.selectsnapshot(sheetstate.getdata",{"_index":1572,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.store.selectsnapshot(sheetstate.getfilteredprotiens",{"_index":1577,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.store.selectsnapshot(sheetstate.getsheetconfig",{"_index":1575,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{}}}],["this.store.selectsnapshot(treestate",{"_index":953,"title":{},"body":{"injectables/BimodalService.html":{}}}],["this.store.selectsnapshot(treestate.getbimodalconfig",{"_index":1574,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{}}}],["this.store.selectsnapshot(treestate.getomapconfig",{"_index":1576,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.store.selectsnapshot(treestate.gettreedata",{"_index":1573,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.store.selectsnapshot(treestate.getvegaview",{"_index":4229,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["this.structure",{"_index":103,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.subscriptions.add",{"_index":2516,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.subscriptions.add(consentservice.consentchange.subscribe((consent",{"_index":3046,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions.unsubscribe",{"_index":2519,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["this.tabindex",{"_index":3568,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.table",{"_index":3506,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.table.destroy",{"_index":3508,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["this.targets",{"_index":159,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.togglegoogleanalytics(consent",{"_index":2518,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.token",{"_index":2515,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.transformer",{"_index":2320,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.tree$.subscribe((state",{"_index":4041,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.tree$.subscribe((tree",{"_index":1566,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.treedata",{"_index":1567,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/LegendComponent.html":{}}}],["this.treedata.length",{"_index":2924,"title":{},"body":{"components/LegendComponent.html":{}}}],["this.treeflattener",{"_index":2323,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.type",{"_index":80,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/DD.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/ILNode.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["this.uistate$.subscribe((state",{"_index":4056,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.updatebimodal",{"_index":2449,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["this.updatebimodal(prop.config",{"_index":1591,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.updatebimodaldata(view",{"_index":960,"title":{},"body":{"injectables/BimodalService.html":{}}}],["this.updateconfig.emit(this.omaps",{"_index":3227,"title":{},"body":{"components/OmapControlsComponent.html":{}}}],["this.updatedconfig.emit",{"_index":4427,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["this.updatespec(spec",{"_index":986,"title":{},"body":{"injectables/BimodalService.html":{}}}],["this.uploadform.emit(data",{"_index":4313,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.videocontainerresizeobserver",{"_index":2581,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.videocontainerresizeobserver.observe(this.videocontainer.nativeelement",{"_index":2588,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.videocontainerresizeobserver?.disconnect",{"_index":2589,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.videosectionselected",{"_index":2590,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.view",{"_index":1581,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.view$.subscribe((data",{"_index":1580,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.view.signal('show_ontology",{"_index":1589,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.visible",{"_index":2328,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["this.vs.makebimodal(this.view.signal('as_height",{"_index":1586,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.vs.makebimodal(this.view.signal('as_width",{"_index":1584,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["this.vs.makevegaconfig(currentsheet",{"_index":4092,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.vs.rendergraph(spec",{"_index":4096,"title":{},"body":{"injectables/TreeService.html":{}}}],["this.window",{"_index":2521,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.window.open(`${this.sheeturl}${sheetid}/edit#gid=${gid",{"_index":3917,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["this.window[`ga",{"_index":2522,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.x",{"_index":155,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["this.y",{"_index":156,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{}}}],["throttletime",{"_index":3133,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["through",{"_index":1220,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["throwerror",{"_index":3719,"title":{},"body":{"injectables/SheetService.html":{}}}],["throwerror('invalid",{"_index":3746,"title":{},"body":{"injectables/SheetService.html":{}}}],["timing",{"_index":2748,"title":{},"body":{"components/HomeComponent.html":{}}}],["tissue",{"_index":3315,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["tissuepreservationmethod",{"_index":1380,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["title",{"_index":1115,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"classes/Legends.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavHeaderComponent.html":{},"interfaces/Structure.html":{},"components/TableNestedMenuComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["title1",{"_index":2682,"title":{},"body":{"components/HomeComponent.html":{}}}],["title2",{"_index":2009,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["title3",{"_index":2686,"title":{},"body":{"components/HomeComponent.html":{}}}],["title4",{"_index":2687,"title":{},"body":{"components/HomeComponent.html":{}}}],["titlefontsize",{"_index":2991,"title":{},"body":{"classes/Legends.html":{}}}],["titlepadding",{"_index":2990,"title":{},"body":{"classes/Legends.html":{}}}],["tnode",{"_index":45,"title":{"classes/TNode.html":{}},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"injectables/VegaService.html":{}}}],["tnode[]).filter((x",{"_index":4100,"title":{},"body":{"injectables/TreeService.html":{}}}],["toattributes",{"_index":242,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["toattributes(obj",{"_index":231,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":561,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"modules/ControlsModule.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"components/OrganTableSelectorComponent.html":{},"modules/OrganTableSelectorModule.html":{},"modules/SearchModule.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{},"components/VisControlsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["togglebottomsheet",{"_index":1054,"title":{"classes/ToggleBottomSheet.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/UpdateLoadingText.html":{}}}],["togglecontrolpane",{"_index":1042,"title":{"classes/ToggleControlPane.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/ControlPaneComponent.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["toggledebuglogs",{"_index":1050,"title":{"classes/ToggleDebugLogs.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["togglegoogleanalytics(disabled",{"_index":2520,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["toggleindentlist",{"_index":1046,"title":{"classes/ToggleIndentList.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["togglepane",{"_index":1509,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["togglereport",{"_index":1049,"title":{"classes/ToggleReport.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["toggleshowallas",{"_index":1560,"title":{"classes/ToggleShowAllAS.html":{}},"body":{"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["toggleshowallas()).subscribe((states",{"_index":1596,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["token",{"_index":2510,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["tool",{"_index":2365,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["toolbar",{"_index":4618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tooltip",{"_index":627,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{}}}],["tooltipstring",{"_index":3769,"title":{},"body":{"components/SidenavHeaderComponent.html":{}}}],["top",{"_index":1309,"title":{},"body":{"components/CompareComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"classes/Legends.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["touched",{"_index":1214,"title":{},"body":{"components/CompareComponent.html":{}}}],["tr",{"_index":3582,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["tr:nth",{"_index":3577,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["track",{"_index":3076,"title":{},"body":{"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"components/PlaygroundComponent.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"components/VisControlsComponent.html":{}}}],["tracker.module",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["tracker.module.ts",{"_index":3130,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["tracking",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["trackingcode",{"_index":2514,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["trackingpopupcomponent",{"_index":287,"title":{"components/TrackingPopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["trackingpopupmodule",{"_index":430,"title":{"modules/TrackingPopupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TrackingPopupModule.html":{},"index.html":{},"modules.html":{}}}],["trackmouseposition",{"_index":4487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trackmouseposition((document",{"_index":3160,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["trackmouseposition(el",{"_index":3134,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["transform",{"_index":1783,"title":{},"body":{"classes/Data.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"pipes/OrderByPipe.html":{}}}],["transform(array",{"_index":3256,"title":{},"body":{"pipes/OrderByPipe.html":{}}}],["transformer",{"_index":2317,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["transition",{"_index":1667,"title":{},"body":{"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/VisControlsComponent.html":{}}}],["translate",{"_index":3705,"title":{},"body":{"injectables/SheetService.html":{}}}],["transparent",{"_index":2817,"title":{},"body":{"components/IndentedListComponent.html":{},"components/VisControlsComponent.html":{}}}],["tree",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"classes/Marks.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"classes/Scales.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["tree'},{'name",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["tree.bimodal.nodes",{"_index":1570,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["tree.component",{"_index":4017,"title":{},"body":{"modules/TreeModule.html":{}}}],["tree.component.html",{"_index":3980,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree.component.scss",{"_index":3979,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree.functions",{"_index":773,"title":{},"body":{"injectables/BimodalService.html":{}}}],["tree.model",{"_index":139,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"interfaces/DD.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Link.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{}}}],["tree.state",{"_index":4168,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["tree.treedata",{"_index":1568,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["tree/bimodal.service",{"_index":1564,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["tree/tree.module",{"_index":3595,"title":{},"body":{"modules/PlaygroundModule.html":{},"modules/RootModule.html":{}}}],["tree/vega.service",{"_index":1565,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["treecomponent",{"_index":408,"title":{"components/TreeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"modules/TreeModule.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["treecontrol",{"_index":2315,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["treecontrol.isexpanded(node",{"_index":2810,"title":{},"body":{"components/IndentedListComponent.html":{}}}],["treedata",{"_index":725,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/Data.html":{},"components/FunctionsComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"interfaces/TreeStateModel.html":{},"injectables/VegaService.html":{}}}],["treedata.foreach((td",{"_index":792,"title":{},"body":{"injectables/BimodalService.html":{}}}],["treedata.length",{"_index":791,"title":{},"body":{"injectables/BimodalService.html":{}}}],["treeelementref",{"_index":3981,"title":{},"body":{"components/TreeComponent.html":{}}}],["treeflattener",{"_index":2319,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["treelegend",{"_index":3004,"title":{},"body":{"classes/Legends.html":{},"classes/Scales.html":{}}}],["treelinks",{"_index":1792,"title":{},"body":{"classes/Data.html":{}}}],["treemarkgroup",{"_index":3120,"title":{"classes/TreeMarkGroup.html":{}},"body":{"classes/Marks.html":{},"classes/TreeMarkGroup.html":{}}}],["treemarkgroup().group",{"_index":4003,"title":{},"body":{"classes/TreeMarkGroup.html":{}}}],["treemarkgroup.create",{"_index":3126,"title":{},"body":{"classes/Marks.html":{}}}],["treemodule",{"_index":3591,"title":{"modules/TreeModule.html":{}},"body":{"modules/PlaygroundModule.html":{},"modules/RootModule.html":{},"modules/TreeModule.html":{},"index.html":{},"modules.html":{}}}],["treeservice",{"_index":4018,"title":{"injectables/TreeService.html":{}},"body":{"injectables/TreeService.html":{}}}],["treestate",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"components/FunctionsComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{}}}],["treestate.getvegaview(state",{"_index":954,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["treestatemodel",{"_index":1563,"title":{"interfaces/TreeStateModel.html":{}},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{}}}],["treeview",{"_index":4362,"title":{},"body":{"injectables/VegaService.html":{}}}],["treeview.data('links').length",{"_index":4369,"title":{},"body":{"injectables/VegaService.html":{}}}],["treeview.runasync",{"_index":4367,"title":{},"body":{"injectables/VegaService.html":{}}}],["treex",{"_index":782,"title":{},"body":{"injectables/BimodalService.html":{}}}],["treey",{"_index":783,"title":{},"body":{"injectables/BimodalService.html":{}}}],["triangle",{"_index":669,"title":{},"body":{"classes/BimodalMarkGroup.html":{}}}],["trigger",{"_index":2473,"title":{},"body":{"components/FunctionsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"classes/Signals.html":{}}}],["triggered",{"_index":3832,"title":{},"body":{"classes/Signals.html":{}}}],["trimming",{"_index":2128,"title":{},"body":{"components/DoiComponent.html":{}}}],["true",{"_index":245,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"interfaces/FlatNode.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"injectables/LegendService.html":{},"interfaces/Node.html":{},"pipes/OrderByPipe.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":777,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"injectables/IndentedListService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["tt",{"_index":922,"title":{},"body":{"injectables/BimodalService.html":{}}}],["tt.foreach((s",{"_index":930,"title":{},"body":{"injectables/BimodalService.html":{}}}],["turned",{"_index":562,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["tutorial",{"_index":2657,"title":{},"body":{"components/HomeComponent.html":{}}}],["type",{"_index":21,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/AppComponent.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CByOrgan.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"components/DebugLogsComponent.html":{},"interfaces/Degree.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"interfaces/DiscrepencyStructure.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"interfaces/Error.html":{},"components/ErrorComponent.html":{},"interfaces/ExportVega.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"classes/ILNode.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"interfaces/Legend.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"interfaces/Loading.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Logs.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"classes/Marker.html":{},"classes/Marks.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"interfaces/Node.html":{},"interfaces/OmapConfig.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"interfaces/OpenBottomSheetData.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"pipes/OrderByPipe.html":{},"interfaces/Organ.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/Response.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"classes/Scales.html":{},"interfaces/SearchStructure.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Snackbar.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4519,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":3155,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["typedata",{"_index":4495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["typeof",{"_index":163,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"interfaces/Link.html":{},"injectables/LocalStorageSyncService.html":{}}}],["types",{"_index":144,"title":{},"body":{"interfaces/ASCTD.html":{},"classes/BMNode.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"interfaces/DD.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"injectables/LegendService.html":{},"interfaces/Link.html":{},"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":973,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Response.html":{},"injectables/SheetService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["typestructure",{"_index":4522,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typing",{"_index":4621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["u0000",{"_index":3558,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["uberon",{"_index":19,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"injectables/SheetService.html":{},"classes/TNode.html":{}}}],["uberon:0013702",{"_index":3755,"title":{},"body":{"injectables/SheetService.html":{}}}],["uberon_col",{"_index":93,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["uberon_id",{"_index":1383,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["ui",{"_index":2483,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["uid",{"_index":65,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/B.html":{},"interfaces/Base.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{}}}],["uistate",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"components/LoadingComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["uistatemodel",{"_index":3021,"title":{"interfaces/UIStateModel.html":{}},"body":{"components/LoadingComponent.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{}}}],["ul",{"_index":2399,"title":{},"body":{"components/FooterComponent.html":{}}}],["undefined",{"_index":247,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/IndentedListService.html":{},"injectables/LogsState.html":{},"components/PlaygroundComponent.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"interfaces/UIStateModel.html":{},"components/VisControlsComponent.html":{}}}],["under",{"_index":3036,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["underline",{"_index":2041,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/UploadComponent.html":{}}}],["understand",{"_index":3968,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["university",{"_index":2372,"title":{},"body":{"components/FooterComponent.html":{}}}],["unknown",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/Data.html":{},"interfaces/FlatNode.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/IndentedListComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/Node.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UploadForm.html":{},"injectables/VegaService.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{}}}],["unselected",{"_index":4469,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["unselected:enabled",{"_index":4462,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["unset",{"_index":2934,"title":{},"body":{"components/LegendComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["unsetconsent",{"_index":1477,"title":{},"body":{"injectables/ConsentService.html":{}}}],["untypedformarray",{"_index":1131,"title":{},"body":{"components/CompareComponent.html":{}}}],["untypedformbuilder",{"_index":1095,"title":{},"body":{"components/CompareComponent.html":{}}}],["untypedformcontrol",{"_index":3481,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["untypedformgroup",{"_index":1105,"title":{},"body":{"components/CompareComponent.html":{}}}],["up",{"_index":2726,"title":{},"body":{"components/HomeComponent.html":{}}}],["update",{"_index":606,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/HasError.html":{},"classes/Legends.html":{},"classes/MultiParentMarkGroup.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/RefreshData.html":{},"classes/Signals.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"classes/TreeMarkGroup.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatebimodal",{"_index":754,"title":{"classes/UpdateBimodal.html":{}},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FunctionsComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatebimodal(config",{"_index":1524,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updatebimodal(nodes",{"_index":950,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatebimodalconfig",{"_index":1912,"title":{"classes/UpdateBimodalConfig.html":{}},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/FunctionsComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatebimodalconfig(this.bimodalconfig)).subscribe((states",{"_index":2456,"title":{},"body":{"components/FunctionsComponent.html":{}}}],["updatebimodaldata",{"_index":718,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatebimodaldata(view",{"_index":744,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatebottomsheetdata",{"_index":1916,"title":{"classes/UpdateBottomSheetData.html":{}},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatebottomsheetdata(data)).subscribe((_unused",{"_index":4220,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["updatebottomsheetdoi",{"_index":1897,"title":{"classes/UpdateBottomSheetDOI.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updatebottomsheetdoi(data",{"_index":4224,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["updatebottomsheetinfo",{"_index":1896,"title":{"classes/UpdateBottomSheetInfo.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updatebottomsheetinfo(data",{"_index":4221,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["updateconfig",{"_index":1561,"title":{"classes/UpdateConfig.html":{}},"body":{"components/ControlPaneComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/OmapControlsComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updateconfig(config",{"_index":1602,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updateconfig(config)).subscribe((states",{"_index":1631,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updateconfiginsheet",{"_index":1510,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updateconfiginsheet(prop",{"_index":1526,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updated",{"_index":3715,"title":{},"body":{"injectables/SheetService.html":{},"classes/Signals.html":{}}}],["updatedconfig",{"_index":4409,"title":{},"body":{"components/VisControlsComponent.html":{}}}],["updatedlinks",{"_index":957,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatednodes",{"_index":955,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updategetfromcache",{"_index":1898,"title":{"classes/UpdateGetFromCache.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updategraphwidth",{"_index":1910,"title":{"classes/UpdateGraphWidth.html":{}},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatelinksdata",{"_index":755,"title":{"classes/UpdateLinksData.html":{}},"body":{"injectables/BimodalService.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["updatelinksdata(0",{"_index":4095,"title":{},"body":{"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["updatelinksdata(as_ct_links",{"_index":949,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updateloadingtext",{"_index":1040,"title":{"classes/UpdateLoadingText.html":{}},"body":{"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"classes/HasError.html":{},"classes/NoError.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateLoadingText.html":{}}}],["updatemode",{"_index":1887,"title":{"classes/UpdateMode.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updateomapconfig",{"_index":1511,"title":{"classes/UpdateOmapConfig.html":{}},"body":{"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updateomapconfig(event",{"_index":1529,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updateomapconfig(event)).subscribe((states",{"_index":1660,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["updateplaygrounddata",{"_index":1894,"title":{"classes/UpdatePlaygroundData.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"injectables/SheetService.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updateplaygrounddata(data",{"_index":3712,"title":{},"body":{"injectables/SheetService.html":{}}}],["updateplaygrounddata(this.spreadsheetdata",{"_index":3559,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["updateprevsheet",{"_index":1889,"title":{"classes/UpdatePrevSheet.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updatereport",{"_index":1885,"title":{"classes/UpdateReport.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updates",{"_index":3816,"title":{},"body":{"classes/Signals.html":{},"interfaces/TreeStateModel.html":{}}}],["updateselectedorgansbeforefilter",{"_index":1901,"title":{"classes/UpdateSelectedOrgansBeforeFilter.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updatesheet",{"_index":1891,"title":{"classes/UpdateSheet.html":{}},"body":{"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{}}}],["updatespec",{"_index":719,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatespec(spec",{"_index":749,"title":{},"body":{"injectables/BimodalService.html":{}}}],["updatevegaspec",{"_index":756,"title":{"classes/UpdateVegaSpec.html":{}},"body":{"injectables/BimodalService.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{}}}],["updatevegaspec(spec",{"_index":997,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["updatevegaview",{"_index":1911,"title":{"classes/UpdateVegaView.html":{}},"body":{"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["updatevegaview(view)).subscribe((states",{"_index":4387,"title":{},"body":{"injectables/VegaService.html":{}}}],["updtes",{"_index":3835,"title":{},"body":{"classes/Signals.html":{}}}],["upload",{"_index":1087,"title":{},"body":{"components/CompareComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/PlaygroundComponent.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["upload'},{'name",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["upload(data",{"_index":3474,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["upload(fileformdataevent",{"_index":1125,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["upload.component",{"_index":2283,"title":{},"body":{"modules/FileUploadModule.html":{},"modules/UploadModule.html":{}}}],["upload.component.html",{"_index":2220,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UploadComponent.html":{}}}],["upload.component.scss",{"_index":2219,"title":{},"body":{"components/FileUploadComponent.html":{},"components/UploadComponent.html":{}}}],["upload.component.ts",{"_index":2213,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:29",{"_index":2250,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:31",{"_index":2231,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:33",{"_index":2237,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:45",{"_index":2251,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:47",{"_index":2252,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:49",{"_index":2253,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:51",{"_index":2254,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:53",{"_index":2234,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:58",{"_index":2249,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:62",{"_index":2239,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:66",{"_index":2241,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:70",{"_index":2243,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:74",{"_index":2245,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.module",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/PlaygroundModule.html":{},"modules/UploadModule.html":{}}}],["upload.module.ts",{"_index":2280,"title":{},"body":{"modules/FileUploadModule.html":{}}}],["upload/file",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"modules/CompareModule.html":{},"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"modules/PlaygroundModule.html":{},"modules/UploadModule.html":{}}}],["upload_file",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/FileUploadComponent.html":{}}}],["uploadcomponent",{"_index":410,"title":{"components/UploadComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"modules/UploadModule.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["uploadform",{"_index":1411,"title":{"interfaces/UploadForm.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["uploadmodule",{"_index":3592,"title":{"modules/UploadModule.html":{}},"body":{"modules/PlaygroundModule.html":{},"modules/UploadModule.html":{},"index.html":{},"modules.html":{}}}],["upon",{"_index":3833,"title":{},"body":{"classes/Signals.html":{}}}],["url",{"_index":1109,"title":{},"body":{"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/ErrorComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/variables.html":{}}}],["url(../../../assets/legends/crosssymbol.svg",{"_index":2937,"title":{},"body":{"components/LegendComponent.html":{}}}],["url(../../../assets/legends/diamondsymbol.svg",{"_index":2931,"title":{},"body":{"components/LegendComponent.html":{}}}],["url(../../../assets/legends/squaresymbol.svg",{"_index":2935,"title":{},"body":{"components/LegendComponent.html":{}}}],["url(../../../assets/legends/trianglesymbol.svg",{"_index":2936,"title":{},"body":{"components/LegendComponent.html":{}}}],["url.split",{"_index":1200,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["url.startswith('https://docs.google.com/spreadsheets/d",{"_index":1198,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["urls",{"_index":2170,"title":{},"body":{"components/ErrorComponent.html":{}}}],["urltitle",{"_index":4667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":3966,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["use",{"_index":2167,"title":{},"body":{"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"interfaces/TreeStateModel.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":733,"title":{},"body":{"injectables/BimodalService.html":{},"classes/Data.html":{},"components/HomeComponent.html":{},"classes/Scales.html":{}}}],["useexisting",{"_index":2217,"title":{},"body":{"components/FileUploadComponent.html":{},"modules/FileUploadModule.html":{},"index.html":{}}}],["usefactory",{"_index":246,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/AppModule.html":{}}}],["uses",{"_index":3651,"title":{},"body":{"classes/Scales.html":{},"injectables/VegaService.html":{}}}],["using",{"_index":3700,"title":{},"body":{"injectables/SheetService.html":{}}}],["usp=sharing",{"_index":2172,"title":{},"body":{"components/ErrorComponent.html":{}}}],["v.hraversion?.includes(selectedversion",{"_index":3406,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["v.value",{"_index":3348,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["v2.8",{"_index":2604,"title":{},"body":{"components/HomeComponent.html":{}}}],["va.desc",{"_index":2631,"title":{},"body":{"components/HomeComponent.html":{}}}],["va.header",{"_index":2630,"title":{},"body":{"components/HomeComponent.html":{}}}],["val",{"_index":925,"title":{},"body":{"injectables/BimodalService.html":{}}}],["val.name",{"_index":928,"title":{},"body":{"injectables/BimodalService.html":{}}}],["val.ontologyid",{"_index":927,"title":{},"body":{"injectables/BimodalService.html":{}}}],["valid",{"_index":1181,"title":{},"body":{"components/CompareComponent.html":{},"classes/DeleteCompareSheet.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"classes/RefreshData.html":{},"classes/ToggleShowAllAS.html":{},"injectables/TreeService.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"components/UploadComponent.html":{}}}],["validate",{"_index":2229,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["validate(_control",{"_index":2244,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["validatewidth",{"_index":4489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validatewidth(width",{"_index":4508,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":3460,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["validationerrors",{"_index":2247,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["validator",{"_index":2215,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["validatorfn",{"_index":3484,"title":{},"body":{"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["validators",{"_index":1138,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["validators.compose",{"_index":3482,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["validators.compose([validators.pattern(/\\/([\\w",{"_index":4304,"title":{},"body":{"components/UploadComponent.html":{}}}],["validators.compose([validators.required",{"_index":1206,"title":{},"body":{"components/CompareComponent.html":{}}}],["validators.pattern(/\\/([\\w",{"_index":1207,"title":{},"body":{"components/CompareComponent.html":{},"components/PlaygroundComponent.html":{}}}],["validators.required",{"_index":3483,"title":{},"body":{"components/PlaygroundComponent.html":{},"components/UploadComponent.html":{}}}],["value",{"_index":235,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"classes/BMNode.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BiomarkersCounts.html":{},"interfaces/BiomarkersNamesInReport.html":{},"interfaces/CByOrgan.html":{},"classes/ClearSheetLogs.html":{},"classes/CloseBottomSheet.html":{},"classes/CloseBottomSheetDOI.html":{},"classes/CloseCompare.html":{},"classes/CloseLoading.html":{},"classes/CloseRightSideNav.html":{},"classes/CloseSearch.html":{},"classes/CloseSnackbar.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"interfaces/EntityWithNoOtherEntity.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"classes/HasError.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"injectables/IndentedListService.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"injectables/LegendService.html":{},"classes/Legends.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"classes/MultiParentMarkGroup.html":{},"components/NavItemComponent.html":{},"classes/NoError.html":{},"components/OmapControlsComponent.html":{},"classes/OpenBottomSheet.html":{},"classes/OpenBottomSheetDOI.html":{},"classes/OpenCompare.html":{},"classes/OpenLoading.html":{},"classes/OpenSearch.html":{},"classes/OpenSnackbar.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"interfaces/Report.html":{},"interfaces/ReportData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"classes/TNode.html":{},"components/TableNestedMenuComponent.html":{},"classes/ToggleBottomSheet.html":{},"classes/ToggleControlPane.html":{},"classes/ToggleDebugLogs.html":{},"classes/ToggleIndentList.html":{},"classes/ToggleReport.html":{},"classes/ToggleShowAllAS.html":{},"components/TrackingPopupComponent.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateLoadingText.html":{},"classes/UpdateMode.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":241,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"classes/Data.html":{}}}],["valuesdata",{"_index":751,"title":{},"body":{"injectables/BimodalService.html":{},"injectables/TreeService.html":{}}}],["valuesdata).values",{"_index":4099,"title":{},"body":{"injectables/TreeService.html":{}}}],["var",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["variable",{"_index":4227,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["variables",{"_index":4523,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":2490,"title":{},"body":{"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/HomeComponent.html":{},"injectables/VegaService.html":{},"miscellaneous/variables.html":{}}}],["vega",{"_index":571,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"classes/Data.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"classes/Legends.html":{},"classes/Marks.html":{},"classes/MultiParentMarkGroup.html":{},"classes/Scales.html":{},"classes/Signals.html":{},"classes/TreeMarkGroup.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{}}}],["vega.service",{"_index":4040,"title":{},"body":{"injectables/TreeService.html":{}}}],["vegadatainterface",{"_index":1724,"title":{},"body":{"classes/Data.html":{}}}],["vegaservice",{"_index":1512,"title":{"injectables/VegaService.html":{}},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{},"injectables/VegaService.html":{}}}],["vegatooltip",{"_index":4354,"title":{},"body":{"injectables/VegaService.html":{}}}],["vegatooltip(treeview",{"_index":4364,"title":{},"body":{"injectables/VegaService.html":{}}}],["version",{"_index":1023,"title":{"interfaces/Version.html":{}},"body":{"classes/ClearSheetLogs.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"classes/DeleteCompareSheet.html":{},"components/ErrorComponent.html":{},"classes/FetchAllOrganData.html":{},"classes/FetchCompareData.html":{},"classes/FetchDataFromAssets.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchPlaygroundUploadData.html":{},"classes/FetchSelectedOrganData.html":{},"classes/FetchSheetData.html":{},"classes/FetchValidOmapProtiens.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"injectables/LogsState.html":{},"interfaces/LogsStateModel.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"classes/RefreshData.html":{},"classes/ReportLog.html":{},"classes/ReportMultiLog.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"injectables/SheetService.html":{},"interfaces/Structure.html":{},"classes/ToggleShowAllAS.html":{},"classes/UpdateBottomSheetDOI.html":{},"classes/UpdateBottomSheetInfo.html":{},"classes/UpdateConfig.html":{},"classes/UpdateGetFromCache.html":{},"classes/UpdateMode.html":{},"classes/UpdatePlaygroundData.html":{},"classes/UpdatePrevSheet.html":{},"classes/UpdateReport.html":{},"classes/UpdateSelectedOrgansBeforeFilter.html":{},"classes/UpdateSheet.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["version.value",{"_index":3407,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["version.viewvalue",{"_index":3919,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["version.viewvalue.includes('draft",{"_index":1462,"title":{},"body":{"injectables/ConfigService.html":{}}}],["version1url",{"_index":1390,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["versiondetail",{"_index":1373,"title":{"interfaces/VersionDetail.html":{}},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["vertical",{"_index":2738,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/VisControlsComponent.html":{}}}],["video",{"_index":2596,"title":{},"body":{"components/HomeComponent.html":{}}}],["video_actions",{"_index":2533,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["video_actions[id].header",{"_index":2597,"title":{},"body":{"components/HomeComponent.html":{}}}],["videocontainer",{"_index":2534,"title":{},"body":{"components/HomeComponent.html":{}}}],["videocontainerresizeobserver",{"_index":2571,"title":{},"body":{"components/HomeComponent.html":{}}}],["videosectionselected",{"_index":2535,"title":{},"body":{"components/HomeComponent.html":{}}}],["view",{"_index":745,"title":{},"body":{"injectables/BimodalService.html":{},"components/ControlPaneComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"classes/DuplicateId.html":{},"components/PlaygroundComponent.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"interfaces/UIStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"injectables/VegaService.html":{},"miscellaneous/variables.html":{}}}],["view(runtime).renderer('svg').initialize('#vis').hover",{"_index":4363,"title":{},"body":{"injectables/VegaService.html":{}}}],["view._viewwidth",{"_index":4138,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["view.addsignallistener('bimodal_text__click",{"_index":4374,"title":{},"body":{"injectables/VegaService.html":{}}}],["view.addsignallistener('node__click",{"_index":4380,"title":{},"body":{"injectables/VegaService.html":{}}}],["view.addsignallistener('path__click",{"_index":4384,"title":{},"body":{"injectables/VegaService.html":{}}}],["view.data('discrepencyid",{"_index":4053,"title":{},"body":{"injectables/TreeService.html":{}}}],["view.data('discrepencylabel",{"_index":4051,"title":{},"body":{"injectables/TreeService.html":{}}}],["view.data('duplicateid",{"_index":4055,"title":{},"body":{"injectables/TreeService.html":{}}}],["view.data('nodes",{"_index":983,"title":{},"body":{"injectables/BimodalService.html":{}}}],["view.data('search",{"_index":4048,"title":{},"body":{"injectables/TreeService.html":{}}}],["view.data('tree",{"_index":4137,"title":{},"body":{"interfaces/TreeStateModel.html":{}}}],["view.runasync",{"_index":4049,"title":{},"body":{"injectables/TreeService.html":{}}}],["view.signal('bimodal_text__click",{"_index":4231,"title":{},"body":{"interfaces/UIStateModel.html":{}}}],["view_mode__click",{"_index":1823,"title":{},"body":{"classes/Data.html":{}}}],["view_mode__hover",{"_index":1826,"title":{},"body":{"classes/Data.html":{}}}],["viewchild",{"_index":2293,"title":{},"body":{"interfaces/FlatNode.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"components/PlaygroundComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TreeComponent.html":{}}}],["viewchild('childmenu",{"_index":3912,"title":{},"body":{"components/TableNestedMenuComponent.html":{}}}],["viewchild('graph",{"_index":3982,"title":{},"body":{"components/TreeComponent.html":{}}}],["viewchild('indenttree",{"_index":2310,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{}}}],["viewchild('spreadsheet",{"_index":3490,"title":{},"body":{"components/PlaygroundComponent.html":{}}}],["viewchild('tutorialvideo",{"_index":2560,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild('tutorialvideocontainer",{"_index":2565,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewer",{"_index":1235,"title":{},"body":{"components/CompareComponent.html":{},"components/UploadComponent.html":{}}}],["viewvalue",{"_index":1374,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["vis",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"modules/ControlsModule.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["vis/:sheet/:version/:playground",{"_index":499,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["viscontrolscomponent",{"_index":411,"title":{"components/VisControlsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"modules/ControlsModule.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/DocsNavComponent.html":{},"components/DoiComponent.html":{},"components/ErrorComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"components/NavItemComponent.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{},"index.html":{}}}],["visibility",{"_index":3575,"title":{},"body":{"components/PlaygroundComponent.html":{},"components/VisControlsComponent.html":{}}}],["visible",{"_index":2307,"title":{},"body":{"interfaces/FlatNode.html":{},"components/IndentedListComponent.html":{},"interfaces/Node.html":{},"components/PlaygroundComponent.html":{},"classes/Signals.html":{}}}],["visualization",{"_index":748,"title":{},"body":{"injectables/BimodalService.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"classes/Signals.html":{},"injectables/TreeService.html":{},"interfaces/TreeStateModel.html":{},"injectables/VegaService.html":{},"miscellaneous/variables.html":{}}}],["vogelsang",{"_index":4590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"injectables/ConsentService.html":{},"components/ControlPaneComponent.html":{},"components/DocsComponent.html":{},"injectables/DocsService.html":{},"components/DoiComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/FlatNode.html":{},"components/FooterComponent.html":{},"components/FunctionsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"components/LoadingComponent.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/LogsState.html":{},"interfaces/Node.html":{},"components/OmapControlsComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TableNestedMenuComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TreeService.html":{},"components/UploadComponent.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{},"miscellaneous/variables.html":{}}}],["vs",{"_index":1503,"title":{},"body":{"components/ControlPaneComponent.html":{},"injectables/TreeService.html":{}}}],["vutukuri",{"_index":4582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["w",{"_index":4559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":2141,"title":{},"body":{"components/DoiComponent.html":{},"components/InfoComponent.html":{},"components/LoadingComponent.html":{}}}],["want",{"_index":2627,"title":{},"body":{"components/HomeComponent.html":{}}}],["wanting",{"_index":1644,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["warning",{"_index":2155,"title":{},"body":{"interfaces/Error.html":{},"interfaces/ExportVega.html":{},"interfaces/Log.html":{},"interfaces/LogEntry.html":{},"interfaces/Response.html":{},"miscellaneous/enumerations.html":{}}}],["warnings",{"_index":4629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["webkit",{"_index":1267,"title":{},"body":{"components/CompareComponent.html":{},"components/HomeComponent.html":{},"components/UploadComponent.html":{}}}],["website",{"_index":2617,"title":{},"body":{"components/HomeComponent.html":{}}}],["weight",{"_index":1292,"title":{},"body":{"components/CompareComponent.html":{},"components/ControlPaneComponent.html":{},"components/DebugLogsComponent.html":{},"components/DocsComponent.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/SidenavHeaderComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{}}}],["welcome",{"_index":2002,"title":{},"body":{"components/DocsComponent.html":{}}}],["well",{"_index":2638,"title":{},"body":{"components/HomeComponent.html":{}}}],["white",{"_index":2006,"title":{},"body":{"components/DocsComponent.html":{},"components/FileUploadComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{}}}],["whole",{"_index":1758,"title":{},"body":{"classes/Data.html":{}}}],["width",{"_index":743,"title":{},"body":{"injectables/BimodalService.html":{},"components/CompareComponent.html":{},"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"components/ControlPaneComponent.html":{},"interfaces/DOI.html":{},"components/DebugLogsComponent.html":{},"classes/DiscrepencyId.html":{},"classes/DiscrepencyLabel.html":{},"classes/DoSearch.html":{},"components/DocsComponent.html":{},"components/DoiComponent.html":{},"classes/DuplicateId.html":{},"components/FileUploadComponent.html":{},"components/FunctionsComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"components/HomeComponent.html":{},"components/IndentedListComponent.html":{},"components/InfoComponent.html":{},"components/LegendComponent.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"components/SidenavHeaderComponent.html":{},"classes/Signals.html":{},"interfaces/Structure.html":{},"components/TrackingPopupComponent.html":{},"interfaces/TreeStateModel.html":{},"classes/UpdateBimodal.html":{},"classes/UpdateBimodalConfig.html":{},"classes/UpdateBottomSheetData.html":{},"classes/UpdateGraphWidth.html":{},"classes/UpdateLinksData.html":{},"classes/UpdateOmapConfig.html":{},"classes/UpdateVegaSpec.html":{},"classes/UpdateVegaView.html":{},"components/UploadComponent.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{},"components/VisControlsComponent.html":{},"miscellaneous/functions.html":{}}}],["window",{"_index":1936,"title":{},"body":{"components/DocsComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{},"components/TableNestedMenuComponent.html":{}}}],["window.location.href",{"_index":1659,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["window.open",{"_index":1997,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["window.open('https://github.com/hubmapconsortium/ccf",{"_index":1991,"title":{},"body":{"components/DocsComponent.html":{},"components/HomeComponent.html":{}}}],["window.open(this.mastersheetlink",{"_index":1995,"title":{},"body":{"components/DocsComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["wit",{"_index":1651,"title":{},"body":{"components/ControlPaneComponent.html":{}}}],["woodlawn",{"_index":2383,"title":{},"body":{"components/FooterComponent.html":{}}}],["word",{"_index":2673,"title":{},"body":{"components/HomeComponent.html":{},"components/OrganTableSelectorComponent.html":{}}}],["word.tolowercase",{"_index":779,"title":{},"body":{"injectables/BimodalService.html":{}}}],["working",{"_index":2644,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrap",{"_index":3429,"title":{},"body":{"components/OrganTableSelectorComponent.html":{}}}],["wrapper",{"_index":1273,"title":{},"body":{"components/CompareComponent.html":{},"components/FunctionsComponent.html":{},"components/TreeComponent.html":{},"components/UploadComponent.html":{}}}],["writevalue",{"_index":2230,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["writevalue(value",{"_index":2248,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["wyfw84s56b",{"_index":4650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":59,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"components/OrganTableSelectorComponent.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["x.filename",{"_index":4306,"title":{},"body":{"components/UploadComponent.html":{}}}],["x2",{"_index":596,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["xlsx",{"_index":1376,"title":{},"body":{"interfaces/CompareData.html":{},"interfaces/CompareReport.html":{},"interfaces/CompareReportData.html":{},"interfaces/ConfigurationOptions.html":{},"interfaces/DOI.html":{},"components/FileUploadComponent.html":{},"interfaces/GEdge.html":{},"interfaces/GNode.html":{},"interfaces/Graph.html":{},"interfaces/GraphData.html":{},"interfaces/Metadata.html":{},"interfaces/MoreOption.html":{},"interfaces/OrganTableOnClose.html":{},"interfaces/OrganTableSelect.html":{},"interfaces/PlaygroundSheetOptions.html":{},"interfaces/Reference.html":{},"interfaces/ResponseData.html":{},"interfaces/Row.html":{},"interfaces/SelectedOrganBeforeFilter.html":{},"interfaces/Sheet.html":{},"interfaces/SheetConfig.html":{},"interfaces/SheetDetails.html":{},"interfaces/SheetInfo.html":{},"interfaces/SheetOptions.html":{},"interfaces/Structure.html":{},"interfaces/UploadForm.html":{},"interfaces/Version.html":{},"interfaces/VersionDetail.html":{}}}],["y",{"_index":60,"title":{},"body":{"interfaces/AS.html":{},"interfaces/ASCTBConfig.html":{},"interfaces/ASCTD.html":{},"interfaces/B.html":{},"classes/BMNode.html":{},"interfaces/Base.html":{},"interfaces/BimodalConfig.html":{},"interfaces/BimodalData.html":{},"classes/BimodalMarkGroup.html":{},"injectables/BimodalService.html":{},"interfaces/BmCtPairings.html":{},"interfaces/CT.html":{},"classes/Cell.html":{},"components/ControlPaneComponent.html":{},"interfaces/DD.html":{},"classes/Data.html":{},"interfaces/Degree.html":{},"interfaces/DiscrepencyStructure.html":{},"interfaces/GaCompareInfo.html":{},"interfaces/GaNodeInfo.html":{},"interfaces/GaOrganInfo.html":{},"interfaces/GaOrgansInfo.html":{},"components/LegendComponent.html":{},"interfaces/Link.html":{},"interfaces/LinksASCTBData.html":{},"classes/Marker.html":{},"interfaces/Organ.html":{},"components/PlaygroundComponent.html":{},"interfaces/SearchStructure.html":{},"classes/TNode.html":{},"classes/TreeMarkGroup.html":{},"injectables/VegaService.html":{},"components/VisControlsComponent.html":{}}}],["y2",{"_index":599,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["yes",{"_index":741,"title":{},"body":{"injectables/BimodalService.html":{},"classes/CloseLoading.html":{},"components/CompareComponent.html":{},"classes/FetchInitialPlaygroundData.html":{},"classes/FetchSelectedOrganData.html":{},"components/OrganTableSelectorComponent.html":{},"classes/ReportLog.html":{},"injectables/SheetService.html":{},"injectables/TreeService.html":{},"classes/UpdateLinksData.html":{},"injectables/VegaService.html":{},"miscellaneous/functions.html":{}}}],["youtubeplayer",{"_index":2559,"title":{},"body":{"components/HomeComponent.html":{}}}],["youtubeplayermodule",{"_index":2777,"title":{},"body":{"modules/HomeModule.html":{}}}],["you’d",{"_index":2626,"title":{},"body":{"components/HomeComponent.html":{}}}],["z",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/CompareComponent.html":{},"components/DocsComponent.html":{},"components/FunctionsComponent.html":{},"components/HomeComponent.html":{},"components/LegendComponent.html":{},"components/OmapControlsComponent.html":{},"components/TrackingPopupComponent.html":{},"components/UploadComponent.html":{},"components/VisControlsComponent.html":{}}}],["zindex",{"_index":605,"title":{},"body":{"classes/BimodalMarkGroup.html":{},"classes/MultiParentMarkGroup.html":{},"classes/TreeMarkGroup.html":{}}}],["zoom",{"_index":198,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/AppModule.html":{},"modules/CompareModule.html":{},"modules/ControlPaneModule.html":{},"modules/ControlsModule.html":{},"modules/DebugLogsModule.html":{},"modules/DocsModule.html":{},"modules/DocsNavModule.html":{},"modules/DoiModule.html":{},"modules/ErrorModule.html":{},"modules/FileUploadModule.html":{},"modules/FooterModule.html":{},"modules/FunctionsModule.html":{},"modules/HomeModule.html":{},"modules/IndentedListModule.html":{},"modules/InfoModule.html":{},"modules/LegendModule.html":{},"modules/LoadingModule.html":{},"modules/NavItemModule.html":{},"modules/NavbarModule.html":{},"modules/OmapControlsModule.html":{},"modules/OrganTableSelectorModule.html":{},"modules/PlaygroundModule.html":{},"modules/ReportModule.html":{},"modules/RootModule.html":{},"modules/SearchModule.html":{},"modules/SidenavHeaderModule.html":{},"modules/SidenavModule.html":{},"modules/TableNestedMenuModule.html":{},"modules/TrackingPopupModule.html":{},"modules/TreeModule.html":{},"modules/UploadModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AS.html":{"url":"interfaces/AS.html","title":"interface - AS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Base\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            indegree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isNew\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outdegree\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                                \n                                        \n                                            uberon\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        indegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNew:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outdegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outdegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uberon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uberon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ASCTBConfig.html":{"url":"interfaces/ASCTBConfig.html","title":"interface - ASCTBConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ASCTBConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cell_col\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            marker_col\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            report_cols\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uberon_col\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cell_col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cell_col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        marker_col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        marker_col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        report_cols\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        report_cols:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uberon_col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uberon_col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ASCTD.html":{"url":"interfaces/ASCTD.html","title":"interface - ASCTD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ASCTD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compareDD\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            searchIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compareDD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compareDD:         DD[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DD[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:         Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Link[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:         BMNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BMNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchIds:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsentService\n                        \n                        \n                            GoogleAnalyticsSyncService\n                        \n                        \n                            LocalStorageSyncService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: AnalyticsOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/analytics.module.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AnalyticsOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\nconst EAGERLY_LOADED_SERVICES = [ConsentService, GoogleAnalyticsSyncService, LocalStorageSyncService];\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [\n        toAttributes({\n          appName,\n          projectName,\n          developmentMode,\n        }),\n      ],\n    },\n  ];\n}\n\n@NgModule({\n  imports: [NgxGoogleAnalyticsModule],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES,\n    },\n  ],\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(options.gaToken, initCommands(options));\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyticsOptions.html":{"url":"interfaces/AnalyticsOptions.html","title":"interface - AnalyticsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyticsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/analytics.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            appName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            developmentMode\n                                        \n                                \n                                \n                                        \n                                            gaToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        developmentMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        developmentMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gaToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gaToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\nconst EAGERLY_LOADED_SERVICES = [ConsentService, GoogleAnalyticsSyncService, LocalStorageSyncService];\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [\n        toAttributes({\n          appName,\n          projectName,\n          developmentMode,\n        }),\n      ],\n    },\n  ];\n}\n\n@NgModule({\n  imports: [NgxGoogleAnalyticsModule],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES,\n    },\n  ],\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(options.gaToken, initCommands(options));\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reporter\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, snackbar: MatSnackBar, matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                        MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { environment } from '../environments/environment';\nimport { TrackingPopupComponent } from './components/tracking-popup/tracking-popup.component';\nimport { ConsentService } from './services/consent.service';\n\ndeclare let gtag: (arg1?: unknown, arg2?: unknown, arg3?: unknown) => void;\n\n@Component({\n  selector: 'app-reporter',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    readonly consentService: ConsentService,\n    readonly snackbar: MatSnackBar,\n    private readonly matIconRegistry: MatIconRegistry,\n    private readonly domSanitizer: DomSanitizer,\n    public readonly router: Router,\n  ) {\n    switch (environment.tag) {\n      case 'Staging':\n        document.title = 'ASCT+B Reporter | Staging';\n        break;\n      case 'Development':\n        document.title = 'ASCT+B Reporter | Development';\n        break;\n      default:\n        document.title = 'ASCT+B Reporter';\n    }\n\n    this.matIconRegistry.addSvgIcon(\n      'debug',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/debug.svg'),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'report',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/report.svg'),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'indentedList',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/indent.svg'),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'compare',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/compare.svg'),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'playground',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/playground.svg'),\n    );\n\n    this.matIconRegistry.addSvgIcon(\n      'upload_file',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/upload.svg'),\n    );\n\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        gtag('config', environment.googleAnalyticsId, {\n          page_path: event.urlAfterRedirects,\n        });\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        },\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000,\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .over {\n  z-index: 1000;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAppModule -->\n\nAnalyticsModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDocsModule\n\nDocsModule\n\nAppModule -->\n\nDocsModule->AppModule\n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nAppModule -->\n\nFileUploadModule->AppModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nAppModule -->\n\nFooterModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nMousePositionTrackerModule\n\nMousePositionTrackerModule\n\nAppModule -->\n\nMousePositionTrackerModule->AppModule\n\n\n\n\n\nOrganTableSelectorModule\n\nOrganTableSelectorModule\n\nAppModule -->\n\nOrganTableSelectorModule->AppModule\n\n\n\n\n\nRootModule\n\nRootModule\n\nAppModule -->\n\nRootModule->AppModule\n\n\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nAppModule -->\n\nTrackingPopupModule->AppModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nAppModule -->\n\nConfigService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnalyticsModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            DocsModule\n                        \n                        \n                            FileUploadModule\n                        \n                        \n                            FooterModule\n                        \n                        \n                            HomeModule\n                        \n                        \n                            MousePositionTrackerModule\n                        \n                        \n                            OrganTableSelectorModule\n                        \n                        \n                            RootModule\n                        \n                        \n                            TrackingPopupModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { NgxsResetPluginModule } from 'ngxs-reset-plugin';\n\nimport { environment } from '../environments/environment';\nimport { ConfigService } from './app-config.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FileUploadModule } from './components/file-upload/file-upload.module';\nimport { FooterModule } from './components/footer/footer.module';\nimport { HomeModule } from './components/home/home.module';\nimport { OrganTableSelectorModule } from './components/organ-table-selector/organ-table-selector.module';\nimport { TrackingPopupModule } from './components/tracking-popup/tracking-popup.module';\nimport { DocsModule } from './modules/docs/docs.module';\nimport { RootModule } from './modules/root/root.module';\nimport { AnalyticsModule } from './services/analytics.module';\nimport { MousePositionTrackerModule } from './services/mouse-position-tracker.module';\nimport { LogsState } from './store/logs.state';\nimport { SheetState } from './store/sheet.state';\nimport { TreeState } from './store/tree.state';\nimport { UIState } from './store/ui.state';\n\nexport function initializeApp(configService: ConfigService): () => Promise {\n  return () =>\n    Promise.all([configService.sheetConfiguration$.toPromise(), configService.config$.toPromise()]).then(() => {});\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxsModule.forRoot([SheetState, TreeState, UIState, LogsState]),\n    NgxsResetPluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production,\n    }),\n    MarkdownModule.forRoot(),\n    DocsModule,\n    RootModule,\n    HomeModule,\n    FileUploadModule,\n    OrganTableSelectorModule,\n    FooterModule,\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsId,\n      appName: 'reporter',\n    }),\n    TrackingPopupModule,\n    MousePositionTrackerModule,\n  ],\n  providers: [\n    ConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      deps: [ConfigService],\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RootComponent } from './modules/root/root.component';\nimport { DocsComponent } from './modules/docs/docs.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'vis',\n    component: RootComponent,\n  },\n  {\n    path: 'playground',\n    component: RootComponent,\n  },\n  {\n    path: 'vis/:sheet/:version/:playground',\n    component: RootComponent,\n  },\n  {\n    path: 'docs',\n    component: DocsComponent,\n  },\n  {\n    path: 'docs/:id',\n    component: DocsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/B.html":{"url":"interfaces/B.html","title":"interface - B","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  B\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Base\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bType\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            indegree\n                                        \n                                \n                                \n                                        \n                                            isNew\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nodeSize\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outdegree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            proteinPresence\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        indegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNew:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outdegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outdegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proteinPresence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proteinPresence:         PROTEIN_PRESENCE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PROTEIN_PRESENCE\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BMNode.html":{"url":"classes/BMNode.html","title":"class - BMNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BMNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bType\n                            \n                            \n                                color\n                            \n                            \n                                    Optional\n                                degree\n                            \n                            \n                                fontSize\n                            \n                            \n                                group\n                            \n                            \n                                groupName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                indegree\n                            \n                            \n                                isNew\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                name\n                            \n                            \n                                nodeSize\n                            \n                            \n                                notes\n                            \n                            \n                                ontologyId\n                            \n                            \n                                organName\n                            \n                            \n                                    Optional\n                                outdegree\n                            \n                            \n                                pathColor\n                            \n                            \n                                problem\n                            \n                            \n                                proteinPresence\n                            \n                            \n                                    Optional\n                                references\n                            \n                            \n                                sources\n                            \n                            \n                                targets\n                            \n                            \n                                type\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, group: number, x: number, y: number, fontSize: number, notes: string, organName: string, ontologyId: string, color: string, nodeSize: number, proteinPresence)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/bimodal.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        group\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fontSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notes\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        organName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ontologyId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodeSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        proteinPresence\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        degree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fontSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        indegree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ontologyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        outdegree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pathColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        problem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        proteinPresence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PROTEIN_PRESENCE\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reference[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/bimodal.model.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Base.html":{"url":"interfaces/Base.html","title":"interface - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            comparator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comparatorId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comparatorName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comparator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comparator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comparatorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comparatorId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comparatorName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comparatorName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BimodalConfig.html":{"url":"interfaces/BimodalConfig.html","title":"interface - BimodalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BimodalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            BM\n                                        \n                                \n                                \n                                        \n                                            CT\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        BM\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BM:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CT:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BimodalData.html":{"url":"interfaces/BimodalData.html","title":"interface - BimodalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BimodalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         BimodalConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BimodalConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:         Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Link[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:         BMNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BMNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BimodalMarkGroup.html":{"url":"classes/BimodalMarkGroup.html","title":"class - BimodalMarkGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BimodalMarkGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/groups/bimodal.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeBimodalMarkGroup\n                            \n                            \n                                makeBimodalPathMarks\n                            \n                            \n                                makeBimodalSymbolMarks\n                            \n                            \n                                makeBimodalTextDiscrepencyIdMarks\n                            \n                            \n                                makeBimodalTextDiscrepencyLabelMarks\n                            \n                            \n                                makeBimodalTextDuplicateIdMarks\n                            \n                            \n                                makeBimodalTextSearchMarks\n                            \n                            \n                                makeBiomodalTextLinkMarks\n                            \n                            \n                                makeBiomodalTextMarks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/groups/bimodal.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GroupMark\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/groups/bimodal.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeBimodalMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:17\n                        \n                    \n\n\n            \n                \n                        Function to create the mark groups for the bimodal network\n\n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalPathMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalPathMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:234\n                        \n                    \n\n\n            \n                \n                        Bimodal paths\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalSymbolMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalSymbolMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:398\n                        \n                    \n\n\n            \n                \n                        Bimodal symbols\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDiscrepencyIdMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDiscrepencyIdMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:136\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when discrepency Id toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDiscrepencyLabelMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDiscrepencyLabelMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:87\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when discrepency label toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDuplicateIdMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDuplicateIdMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:185\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when duplicate Id toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextSearchMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextSearchMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:38\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBiomodalTextLinkMarks\n                        \n                    \n                \n            \n            \n                \nmakeBiomodalTextLinkMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:458\n                        \n                    \n\n\n            \n                \n                        Bimodal link texts\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBiomodalTextMarks\n                        \n                    \n                \n            \n            \n                \nmakeBiomodalTextMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/bimodal.ts:538\n                        \n                    \n\n\n            \n                \n                        Bimodal text marks\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GroupMark, Mark } from 'vega';\n\nexport class BimodalMarkGroup {\n  static create(): GroupMark {\n    return new BimodalMarkGroup().group;\n  }\n\n  group: GroupMark;\n\n  constructor() {\n    this.group = this.makeBimodalMarkGroup();\n  }\n\n  /**\n   * Function to create the mark groups for the bimodal network\n   */\n  makeBimodalMarkGroup(): GroupMark {\n    return {\n      type: 'group',\n      signals: [{ name: 'bgoffset', value: 8 }],\n      name: 'bimodal-network',\n      marks: [\n        this.makeBimodalPathMarks(),\n        this.makeBimodalSymbolMarks(),\n        this.makeBiomodalTextMarks(),\n        this.makeBimodalTextSearchMarks(),\n        this.makeBiomodalTextLinkMarks(),\n        this.makeBimodalTextDiscrepencyLabelMarks(),\n        this.makeBimodalTextDiscrepencyIdMarks(),\n        this.makeBimodalTextDuplicateIdMarks(),\n      ],\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark\n   */\n  makeBimodalTextSearchMarks(): Mark {\n    return {\n      name: 'rectmark',\n      type: 'rect',\n      from: { data: 'textmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'aliceblue' },\n          stroke: { value: 'steelblue' },\n          zindex: { value: -1 },\n        },\n        update: {\n          opacity: [\n            {\n              test: \"node__click === null && indata('search', 'id', datum.datum.id)\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when discrepency label toggle is turned on\n   */\n  makeBimodalTextDiscrepencyLabelMarks(): Mark {\n    return {\n      name: 'rectmarkdiscrepencylabel',\n      type: 'rect',\n      from: { data: 'textmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightblue' },\n          stroke: { value: 'darkblue' },\n          zindex: { value: -1 },\n        },\n        update: {\n          opacity: [\n            {\n              test: \"node__click === null && indata('discrepencyLabel', 'id', datum.datum.id)\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when discrepency Id toggle is turned on\n   */\n  makeBimodalTextDiscrepencyIdMarks(): Mark {\n    return {\n      name: 'rectmarkdiscrepencyid',\n      type: 'rect',\n      from: { data: 'textmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'bisque' },\n          stroke: { value: 'burlywood' },\n          zindex: { value: -1 },\n        },\n        update: {\n          opacity: [\n            {\n              test: \"node__click === null && indata('discrepencyId', 'id', datum.datum.id)\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when duplicate Id toggle is turned on\n   */\n  makeBimodalTextDuplicateIdMarks(): Mark {\n    return {\n      name: 'rectmarkduplicateid',\n      type: 'rect',\n      from: { data: 'textmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightyellow' },\n          stroke: { value: 'burlywood' },\n          zindex: { value: -1 },\n        },\n        update: {\n          opacity: [\n            {\n              test: \"node__click === null && indata('duplicateId', 'id', datum.datum.id)\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Bimodal paths\n   */\n  makeBimodalPathMarks(): Mark {\n    return {\n      type: 'path',\n      name: 'bimodal-path',\n      from: { data: 'edges' },\n      encode: {\n        enter: {\n          stroke: { value: '#ccc' },\n          strokeWidth: { value: 1.5 },\n          x: { value: 0 },\n          y: { value: 5 },\n        },\n        update: {\n          tooltip: [\n            {\n              test: 'node__click === null && datum.target.group === 2',\n              signal: \"length(datum.target.references) > 0 ? 'Click to see DOI References' : 'No DOI References'\",\n            },\n            {\n              test: 'node__click === null && datum.target.group !== 2',\n              signal:\n                \"isValid(datum.source.references) && length(datum.source.references) > 0 ? 'Click to see DOI References' : 'No DOI References'\",\n            },\n          ],\n          strokeWidth: { value: 5 },\n          path: { field: 'path' },\n          stroke: [\n            // red: E41A1C, green: 4DAF4A, blue: 377EB8\n            {\n              test: 'datum.source.id === node__hover && datum.source.group == 1',\n              value: '#E41A1C',\n            }, // for hover\n            {\n              test: 'datum.source.id === node__hover && datum.source.group == 2 && !datum.pathColor',\n              value: '#377EB8',\n            }, // for hover\n            {\n              test: 'datum.source.id === node__hover && datum.source.group == 2 && datum.pathColor',\n              field: 'pathColor',\n            }, // for hover\n            {\n              test: 'datum.target.id === node__hover && datum.target.group == 2',\n              value: '#E41A1C',\n            }, // for hover\n            {\n              test: 'datum.target.id === node__hover && datum.target.group == 3 && !datum.pathColor',\n              value: '#4DAF4A',\n            }, // for hover\n            {\n              test: 'datum.target.id === node__hover && datum.target.group == 3 && datum.pathColor',\n              field: 'pathColor',\n            }, // for hover\n            {\n              test: 'datum.source.id === node__click && datum.source.group == 1',\n              value: '#E41A1C',\n            }, // for click\n            {\n              test: 'datum.source.id === node__click && datum.source.group == 2 && !datum.pathColor',\n              value: '#377EB8',\n            }, // for click\n            {\n              test: 'datum.source.id === node__click && datum.source.group == 2 && datum.pathColor',\n              field: 'pathColor',\n            }, // for click\n            {\n              test: 'datum.target.id === node__click && datum.target.group == 2',\n              value: '#E41A1C',\n            }, // for click\n            {\n              test: 'datum.target.id === node__click && datum.target.group == 3 && !datum.pathColor',\n              value: '#4DAF4A',\n            }, // for click\n            {\n              test: 'datum.target.id === node__click && datum.target.group == 3 && datum.pathColor',\n              field: 'pathColor',\n            }, // for click\n            {\n              test: '(node__click !== null || node__hover !== null) && datum.target.group == 3',\n              value: '#ccc', // for greying out other paths when clicking on a node\n            },\n            {\n              test: '(node__click !== null || node__hover !== null) && datum.target.group == 2',\n              value: '#ccc', // for greying out other paths when clicking on a node\n            },\n            // for getting AS -> CT -> B\n            {\n              test: \"indata('targets_hovered_array', 'id', datum.source.id)\",\n              value: '#377EB8',\n            },\n\n            {\n              test: \"indata('targets_clicked_array', 'id', datum.source.id)\",\n              value: '#377EB8',\n            },\n            // for getting B -> CT -> AS\n            {\n              test: \"indata('sources_hovered_array', 'id', datum.target.id) && datum.source.group !== 2\",\n              value: '#377EB8',\n            },\n            {\n              test: \"indata('sources_clicked_array', 'id', datum.target.id) && datum.source.group !== 2\",\n              value: '#377EB8',\n            },\n            {\n              signal:\n                'datum.pathColor? datum.pathColor :datum.source.pathColor === datum.target.pathColor ? datum.source.pathColor : \"#ccc\"',\n            },\n          ],\n          opacity: [\n            { test: 'datum.target.id === node__click', value: 0.5 },\n            { test: 'datum.source.id === node__click', value: 0.5 },\n            {\n              test: \"indata('targets_clicked_array', 'id', datum.source.id)\",\n              value: 0.5,\n            },\n            {\n              test: \"indata('sources_clicked_array', 'id', datum.target.id) && datum.source.group !== 2\",\n              value: 0.5,\n            },\n            {\n              test: \"indata('targets_hovered_array', 'id', datum.source.id)\",\n              value: 0.3,\n            },\n            {\n              test: \"indata('sources_hovered_array', 'id', datum.target.id)\",\n              value: 0.3,\n            },\n            {\n              test: \"indata('view_mode__hover', 'id', datum.source.id) && indata('view_mode__hover', 'id', datum.target.id)\",\n              value: 0.3,\n            },\n            {\n              test: 'node__hover && datum.source.id !== node__hover && node__click === null',\n              value: 0.15,\n            },\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            { value: 0.3 },\n          ],\n          zindex: [\n            { test: 'datum.source.id === node__hover', value: 2 },\n            { test: 'datum.target.id === node__hover', value: 2 },\n            { test: 'datum.source.id === node__click', value: 2 },\n            { test: 'datum.target.id === node__click', value: 2 },\n            {\n              test: \"indata('targets_clicked_array', 'id', datum.source.id)\",\n              value: 2,\n            },\n          ],\n        },\n        hover: {\n          strokeWidth: [{ test: 'node__click === null', value: 3.5 }],\n          stroke: { value: '#6c6a63' },\n          cursor: [{ test: 'node__click === null', value: 'pointer' }],\n        },\n      },\n    };\n  }\n\n  /**\n   * Bimodal symbols\n   */\n  makeBimodalSymbolMarks(): Mark {\n    return {\n      type: 'symbol',\n      name: 'bimodal-symbol',\n      from: { data: 'nodes' },\n      encode: {\n        enter: {\n          shape: {\n            signal: `datum.bType === \"gene\" ?\n              \"circle\" : datum.bType === \"protein\" ?\n              \"diamond\" : datum.bType === \"lipids\" ?\n              \"square\" : datum.bType === \"metabolites\" ?\n              \"triangle\": datum.bType === \"proteoforms\" ?\n              \"cross\" : \"circle\"`,\n          },\n          size: { field: 'nodeSize' },\n          fill: { signal: 'datum.isNew ? \"#fafafa\" : datum.color' },\n          x: { field: 'x' },\n          y: { field: 'y', offset: 5 },\n          cursor: { value: 'pointer' },\n          tooltip: {\n            signal:\n              '{\\'Name\\': datum.name, \\'Degree\\': datum.group === 1 ? length(datum.sources) + length(datum.targets) + 1 : length(datum.sources) + length(datum.targets), \"Indegree\": datum.group == 1 ? 1 : length(datum.sources), \"Outdegree\": length(datum.targets), \"Ontology ID\": datum.ontologyId, \"rdfs:label\": datum.label}',\n          },\n        },\n        update: {\n          opacity: [\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: \"indata('view_mode__click', 'id', datum.id) || indata('targets_of_targets__click', 'targets', datum.id) || (indata('sources_of_sources__click', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: \"node__hover !== null && indata('view_mode__hover', 'id', datum.id) || indata('targets_of_targets__hover', 'targets', datum.id) || (indata('sources_of_sources__hover', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && datum.id !== node__hover && node__click === null',\n              value: 0.5,\n            },\n            {\n              value: 0.1,\n            },\n          ],\n          stroke: {\n            signal: 'datum.problem ? \"#000\" : datum.isNew ? datum.color : \"#fff\"',\n          },\n          strokeWidth: { signal: 'datum.isNew ? 4 : 0' },\n          strokeDash: { signal: 'datum.isNew ? [3, 3] : [0, 0]' },\n        },\n      },\n    };\n  }\n\n  /**\n   * Bimodal link texts\n   */\n  makeBiomodalTextLinkMarks(): Mark {\n    return {\n      type: 'text',\n      name: 'textlinkmark',\n      zindex: 5,\n      from: { data: 'nodes' },\n      encode: {\n        update: {\n          x: { field: 'x' },\n          y: { field: 'y', offset: 5 },\n          dx: { value: 20 },\n          dy: { value: 10 },\n          align: { value: 'left' },\n          baseline: { value: 'middle' },\n          text: { field: 'ontologyId' },\n          fontSize: { value: 11 },\n          fill: [\n            {\n              value: 'grey',\n            },\n          ],\n          fontWeight: [\n            {\n              test: \"indata('targets_clicked_array', 'id', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: 'datum.id === node__click',\n              value: 'bold',\n            },\n            {\n              test: \"indata('sources_clicked_array', 'id', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: \"indata('targets_of_targets__click', 'targets', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: \"indata('sources_of_sources__click', 'sources', datum.id)  && datum.group !== 2 && datum.group !== 3\",\n              value: 'bold',\n            },\n          ],\n          opacity: [\n            {\n              test: '!show_ontology',\n              value: 0,\n            },\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: \"indata('view_mode__click', 'id', datum.id) || indata('targets_of_targets__click', 'targets', datum.id) || (indata('sources_of_sources__click', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: \"node__hover !== null && indata('view_mode__hover', 'id', datum.id) || indata('targets_of_targets__hover', 'targets', datum.id) || (indata('sources_of_sources__hover', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && datum.id !== node__hover && node__click === null',\n              value: 0.5,\n            },\n            {\n              value: 0.1,\n            },\n          ],\n          limit: {\n            signal:\n              \"node__click === datum.id || node__hover === datum.id || indata('view_mode__click', 'id', datum.id) || indata('view_mode__hover', 'id', datum.id) || indata('targets_of_targets__click', 'targets', datum.id) || indata('sources_of_sources__click', 'sources', datum.id) || indata('targets_of_targets__hover', 'targets', datum.id) || indata('sources_of_sources__hover', 'sources', datum.id)? null : 150\",\n          },\n        },\n      },\n    };\n  }\n\n  /**\n   * Bimodal text marks\n   */\n  makeBiomodalTextMarks(): Mark {\n    return {\n      type: 'text',\n      name: 'textmark',\n      zindex: 5,\n      from: { data: 'nodes' },\n      encode: {\n        update: {\n          x: { field: 'x' },\n          y: { field: 'y', offset: 5 },\n          dx: { value: 20 },\n          dy: { signal: 'show_ontology ? -8 : 0' },\n          align: { value: 'left' },\n          baseline: { value: 'middle' },\n          text: { field: 'name' },\n          fontSize: { field: 'fontSize' },\n          cursor: { value: 'pointer' },\n          fill: [\n            {\n              test: 'datum === bimodal_text__hover',\n              value: 'steelblue',\n            },\n            {\n              value: 'black',\n            },\n          ],\n          fontWeight: [\n            {\n              test: \"indata('targets_clicked_array', 'id', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: 'datum.id === node__click',\n              value: 'bold',\n            },\n            {\n              test: \"indata('sources_clicked_array', 'id', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: \"indata('targets_of_targets__click', 'targets', datum.id)\",\n              value: 'bold',\n            },\n            {\n              test: \"indata('sources_of_sources__click', 'sources', datum.id)  && datum.group !== 2 && datum.group !== 3\",\n              value: 'bold',\n            },\n          ],\n          opacity: [\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: \"indata('view_mode__click', 'id', datum.id) || indata('targets_of_targets__click', 'targets', datum.id) || (indata('sources_of_sources__click', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: \"node__hover !== null && indata('view_mode__hover', 'id', datum.id) || indata('targets_of_targets__hover', 'targets', datum.id) || (indata('sources_of_sources__hover', 'sources', datum.id) && datum.group !== 2 && datum.group !== 3)\",\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && datum.id !== node__hover && node__click === null',\n              value: 0.5,\n            },\n            {\n              value: 0.1,\n            },\n          ],\n          limit: {\n            signal:\n              \"node__click === datum.id || node__hover === datum.id || indata('view_mode__click', 'id', datum.id) || indata('view_mode__hover', 'id', datum.id) || indata('targets_of_targets__click', 'targets', datum.id) || indata('sources_of_sources__click', 'sources', datum.id) || indata('targets_of_targets__hover', 'targets', datum.id) || indata('sources_of_sources__hover', 'sources', datum.id)? null : 150\",\n          },\n        },\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BimodalService.html":{"url":"injectables/BimodalService.html","title":"injectable - BimodalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BimodalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/bimodal.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                makeBimodalData\n                            \n                            \n                                updateBimodalData\n                            \n                            \n                                updateSpec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/bimodal.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        makeBimodalData\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeBimodalData(sheetData: Row[], treeData: TNode[], bimodalConfig: BimodalConfig, isReport, sheetConfig?: SheetConfig, omapConfig?: OmapConfig, filteredProtiens?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/bimodal.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Function to create the bimodal network\nlast layer is used to create the CT layer\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sheetData\n                                            \n                                                            Row[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    current sheet data\n\n                                            \n                                        \n                                        \n                                                treeData\n                                            \n                                                            TNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    data from the vega tree. the coordinates from the\nlast layer is used to create the CT layer\n\n                                            \n                                        \n                                        \n                                                bimodalConfig\n                                            \n                                                            BimodalConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    bimodal configuration for x and y distances\n\n                                            \n                                        \n                                        \n                                                isReport\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                sheetConfig\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    sheet configuration for height and width\n\n                                            \n                                        \n                                        \n                                                omapConfig\n                                            \n                                                            OmapConfig\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                filteredProtiens\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBimodalData\n                        \n                    \n                \n            \n            \n                \nupdateBimodalData(view: View, spec: Spec, nodes: BMNode[], links: Link[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/bimodal.service.ts:393\n                        \n                    \n\n\n            \n                \n                        Function to reset the signals and data of the visualization\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        View\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega view\n\n                                            \n                                        \n                                        \n                                                spec\n                                            \n                                                        Spec\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega spec\n\n                                            \n                                        \n                                        \n                                                nodes\n                                            \n                                                            BMNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    bimodal network nodes\n\n                                            \n                                        \n                                        \n                                                links\n                                            \n                                                            Link[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    bimodal network links\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSpec\n                        \n                    \n                \n            \n            \n                \nupdateSpec(spec: Spec, nodes: BMNode[], links: Link[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/bimodal.service.ts:414\n                        \n                    \n\n\n            \n                \n                        Function to update the spec with bimodal data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                spec\n                                            \n                                                        Spec\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega spec\n\n                                            \n                                        \n                                        \n                                                nodes\n                                            \n                                                            BMNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    bimodal network nodes\n\n                                            \n                                        \n                                        \n                                                links\n                                            \n                                                            Link[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    bimodal network links\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Spec, ValuesData, View } from 'vega';\nimport { ReportLog } from '../../actions/logs.actions';\nimport { UpdateBimodal, UpdateLinksData, UpdateVegaSpec } from '../../actions/tree.actions';\nimport { CloseLoading, HasError } from '../../actions/ui.actions';\nimport { BMNode, BimodalConfig, Link } from '../../models/bimodal.model';\nimport { LOG_ICONS, LOG_TYPES } from '../../models/logs.model';\nimport { OmapConfig } from '../../models/omap.model';\nimport { Error } from '../../models/response.model';\nimport { PROTEIN_PRESENCE, Row, SheetConfig } from '../../models/sheet.model';\nimport { AS, B, B_GREEN, CT, CT_BLUE, TNode } from '../../models/tree.model';\nimport { TreeState } from '../../store/tree.state';\nimport { makeAS, makeBioMarkers, makeCellTypes } from './tree.functions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BimodalService {\n  constructor(private readonly store: Store) {}\n\n  /**\n   * Function to create the bimodal network\n   * @param sheetData current sheet data\n   * @param treeData data from the vega tree. the coordinates from the\n   * last layer is used to create the CT layer\n   * @param bimodalConfig bimodal configuration for x and y distances\n   * @param sheetConfig sheet configuration for height and width\n   */\n  async makeBimodalData(\n    sheetData: Row[],\n    treeData: TNode[],\n    bimodalConfig: BimodalConfig,\n    isReport = false,\n    sheetConfig?: SheetConfig,\n    omapConfig?: OmapConfig,\n    filteredProtiens?: string[],\n  ) {\n    try {\n      filteredProtiens = filteredProtiens?.map((word) => word.toLowerCase()) ?? [];\n      const anatomicalStructuresData = makeAS(sheetData);\n      const links: { s: number; t: number; pathColor?: string }[] = [];\n      const nodes: BMNode[] = [];\n      let treeX = 0;\n      let treeY = 50;\n      let AS_CT_LINKS = 0;\n      let CT_BM_LINKS = 0;\n      const CT_BM: Record = {};\n      const AS_CT: Record = {};\n      const distance = sheetConfig?.bimodal_distance_x ?? 0;\n      const distanceY = sheetConfig?.bimodal_distance_y ?? 0;\n      let id = treeData.length + 1;\n      let biomarkers = [];\n      treeData.forEach((td) => {\n        if (td.children === 0 || isReport) {\n          const leaf = td.name;\n          const newLeaf = new BMNode(leaf, 1, td.x, td.y - 5, 14, td.notes, td.organName, td.ontologyId);\n          newLeaf.id = id;\n          newLeaf.problem = td.problem;\n          newLeaf.pathColor = td.pathColor;\n          newLeaf.isNew = td.isNew;\n          newLeaf.color = td.color;\n          newLeaf.ontologyId = td.ontologyId;\n          if (td.ontologyId && td.ontologyId.toLowerCase() !== 'not found') {\n            newLeaf.indegree = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorId === td.ontologyId;\n            })?.indegree;\n            newLeaf.outdegree = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorId === td.ontologyId;\n            })?.outdegree;\n            newLeaf.label = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorId === td.ontologyId;\n            })?.label;\n          } else {\n            newLeaf.indegree = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorName === td.name;\n            })?.indegree;\n            newLeaf.outdegree = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorName === td.name;\n            })?.outdegree;\n            newLeaf.label = anatomicalStructuresData.find((a: AS) => {\n              return a.comparatorName === td.name;\n            })?.label;\n          }\n          nodes.push(newLeaf);\n          id += 1;\n          treeX = td.x;\n        }\n      });\n\n      // adding x distance to build the next layer of bimodal\n      treeX += distance;\n\n      // making group 2: cell type\n      const cellTypes = await makeCellTypes(sheetData);\n\n      switch (bimodalConfig.CT.sort) {\n        case 'Alphabetically':\n          cellTypes.sort((a, b) => {\n            return a.structure.toLowerCase() > b.structure.toLowerCase()\n              ? 1\n              : b.structure.toLowerCase() > a.structure.toLowerCase()\n                ? -1\n                : 0;\n          });\n          break;\n\n        case 'Degree':\n          cellTypes.sort((a, b) => {\n            return (\n              (b.outdegree?.size ?? 0) + (b.indegree?.size ?? 0) - ((a.outdegree?.size ?? 0) + (a.indegree?.size ?? 0))\n            );\n          });\n          break;\n      }\n\n      switch (bimodalConfig.CT.size) {\n        case 'None':\n          break;\n        case 'Degree':\n          cellTypes.forEach((c) => {\n            c.nodeSize = ((c.indegree?.size ?? 0) + (c.outdegree?.size ?? 0)) * 25;\n          });\n          break;\n        case 'Indegree':\n          cellTypes.forEach((c) => {\n            c.nodeSize = (c.indegree?.size ?? 0) * 25;\n          });\n          break;\n        case 'Outdegree':\n          cellTypes.forEach((c) => {\n            c.nodeSize = (c.outdegree?.size ?? 0) * 25;\n          });\n          break;\n      }\n\n      cellTypes.forEach((cell: CT) => {\n        const newNode = new BMNode(\n          cell.structure,\n          2,\n          treeX,\n          treeY,\n          14,\n          cell.notes,\n          cell.organName ?? '',\n          cell.link,\n          CT_BLUE,\n          cell.nodeSize,\n        );\n        newNode.id = id;\n        newNode.isNew = cell.isNew;\n        newNode.pathColor = cell.color;\n        newNode.color = cell.color;\n        newNode.indegree = cell.indegree;\n        newNode.outdegree = cell.outdegree;\n        newNode.label = cell.label;\n        newNode.references = cell.references;\n\n        nodes.push(newNode);\n        treeY += distanceY;\n        id += 1;\n      });\n\n      treeY = distanceY;\n      treeX += distance;\n\n      biomarkers = await makeBioMarkers(sheetData);\n      if (omapConfig?.proteinsOnly) {\n        biomarkers = biomarkers.filter((elem) => filteredProtiens?.includes(elem.comparatorName?.toLowerCase() ?? ''));\n      }\n      switch (bimodalConfig.BM.sort) {\n        case 'Alphabetically':\n          biomarkers.sort((a, b) => {\n            return a.structure.toLowerCase() > b.structure.toLowerCase()\n              ? 1\n              : b.structure.toLowerCase() > a.structure.toLowerCase()\n                ? -1\n                : 0;\n          });\n          break;\n\n        case 'Degree':\n          biomarkers.sort((a, b) => {\n            return (b.indegree?.size ?? 0) - (a.indegree?.size ?? 0);\n          });\n          break;\n      }\n\n      switch (bimodalConfig.BM.size) {\n        case 'None':\n          break;\n        case 'Degree':\n          biomarkers.forEach((b) => {\n            b.nodeSize = (b.nodeSize ?? 0) + ((b.indegree?.size ?? 0) + (b.outdegree?.size ?? 0)) * 25;\n          });\n          break;\n      }\n\n      switch (bimodalConfig.BM.type) {\n        case 'All':\n          break;\n        case 'Gene':\n          biomarkers = biomarkers.filter((b) => b.bType === 'gene');\n          break;\n        case 'Protein':\n          biomarkers = biomarkers.filter((b) => b.bType === 'protein');\n          break;\n        case 'Lipids':\n          biomarkers = biomarkers.filter((b) => b.bType === 'lipids');\n          break;\n        case 'Metabolites':\n          biomarkers = biomarkers.filter((b) => b.bType === 'metabolites');\n          break;\n        case 'Proteoforms':\n          biomarkers = biomarkers.filter((b) => b.bType === 'proteoforms');\n          break;\n      }\n\n      // making group 3: bio markers\n      biomarkers.forEach((marker: B) => {\n        const newNode = new BMNode(\n          marker.structure,\n          3,\n          treeX,\n          treeY,\n          14,\n          marker.notes,\n          marker.organName ?? '',\n          marker.link,\n          B_GREEN,\n          marker.nodeSize,\n          marker.proteinPresence,\n        );\n        newNode.id = id;\n        newNode.isNew = marker.isNew;\n        newNode.pathColor = marker.color;\n        newNode.color = marker.color;\n        newNode.indegree = marker.indegree;\n        newNode.outdegree = marker.outdegree;\n        newNode.bType = marker.bType;\n\n        nodes.push(newNode);\n        treeY += distanceY;\n        id += 1;\n      });\n\n      nodes.forEach((node) => {\n        if (node.group === 1) {\n          node.sources = [];\n          node.outdegree?.forEach((str) => {\n            let foundIndex: number;\n            if (str.id && str.id.toLowerCase() !== 'not found') {\n              foundIndex = nodes.findIndex((i: BMNode) => i.ontologyId === str.id && i.group !== 1);\n            } else {\n              foundIndex = nodes.findIndex((i: BMNode) => i.name === str.name && i.group !== 1);\n            }\n            if (node.targets.findIndex((l) => l === nodes[foundIndex].id) === -1) {\n              node.targets.push(nodes[foundIndex].id);\n            }\n            links.push({ s: node.id, t: nodes[foundIndex].id });\n          });\n        }\n\n        if (node.group === 3) {\n          node.indegree?.forEach((str) => {\n            let pathColor = '';\n            let foundIndex: number;\n            if (str.id) {\n              foundIndex = nodes.findIndex((i: BMNode) => i.ontologyId === str.id);\n            } else {\n              foundIndex = nodes.findIndex((i: BMNode) => i.name === str.name);\n            }\n            if (node.sources.findIndex((l) => l === nodes[foundIndex].id) === -1) {\n              node.sources.push(nodes[foundIndex].id);\n            }\n            nodes[foundIndex].outdegree?.forEach((cellOut) => {\n              if (cellOut.name === node.name) {\n                if (cellOut.proteinPresence === PROTEIN_PRESENCE.POS) {\n                  pathColor = '#00008B';\n                } else if (cellOut.proteinPresence === PROTEIN_PRESENCE.NEG) {\n                  pathColor = '#E16156';\n                } else if (cellOut.proteinPresence === PROTEIN_PRESENCE.INTERMEDIATE) {\n                  pathColor = '#4B2079';\n                }\n              }\n            });\n            links.push({ s: nodes[foundIndex].id, t: node.id, pathColor });\n          });\n        }\n      });\n\n      nodes.forEach((node: BMNode) => {\n        if (node.group === 2) {\n          node.outdegree?.forEach((str) => {\n            const tt = nodes\n              .map((val, idx) => ({ val, idx }))\n              .filter(({ val }) => {\n                if (str.id) {\n                  return val.ontologyId === str.id;\n                } else {\n                  return val.name === str.name;\n                }\n              })\n              .map(({ idx }) => idx);\n            const targets: number[] = [];\n            tt.forEach((s) => {\n              targets.push(nodes[s].id);\n            });\n\n            // make targets only if there is a link from CT to B\n            targets.forEach((s) => {\n              if (links.some((l) => l.s === node.id && l.t === s)) {\n                if (node.targets.findIndex((l) => l === s) === -1) {\n                  if (Object.prototype.hasOwnProperty.call(CT_BM, node.organName)) {\n                    CT_BM[node.organName] += 1;\n                  } else {\n                    CT_BM[node.organName] = 1;\n                  }\n                  CT_BM_LINKS += 1;\n                  node.targets.push(s);\n                }\n              }\n            });\n          });\n          // make sources only if there is a link from AS to CT\n          node.indegree?.forEach((str) => {\n            const ss = nodes\n              .map((val, idx) => ({ val, idx }))\n              .filter(({ val }) => {\n                if (str.id && str.id.toLowerCase() !== 'not found') {\n                  return val.ontologyId === str.id;\n                } else {\n                  return val.name === str.name;\n                }\n              })\n              .map(({ idx }) => idx);\n            const sources: number[] = [];\n            ss.forEach((s) => {\n              sources.push(nodes[s].id);\n            });\n            sources.forEach((s) => {\n              if (links.some((l) => l.s === s && l.t === node.id)) {\n                if (node.sources.findIndex((l) => l === s) === -1) {\n                  if (Object.prototype.hasOwnProperty.call(AS_CT, node.organName)) {\n                    AS_CT[node.organName] += 1;\n                  } else {\n                    AS_CT[node.organName] = 1;\n                  }\n                  AS_CT_LINKS += 1;\n                  node.sources.push(s);\n                }\n              }\n            });\n          });\n        }\n      });\n\n      if (!isReport) {\n        this.store.dispatch(new UpdateLinksData(AS_CT_LINKS, CT_BM_LINKS, AS_CT, CT_BM));\n\n        this.store.dispatch(new UpdateBimodal(nodes, links)).subscribe(() => {\n          const state = this.store.selectSnapshot(TreeState);\n          const view = TreeState.getVegaView(state);\n          const updatedNodes = state.bimodal.nodes;\n          const updatedLinks = state.bimodal.links;\n          const spec = state.spec;\n          this.updateBimodalData(view, spec, updatedNodes, updatedLinks);\n        });\n      } else {\n        this.store.dispatch(new UpdateLinksData(AS_CT_LINKS, CT_BM_LINKS, AS_CT, CT_BM, 0, undefined, true));\n      }\n    } catch (error) {\n      console.log(error);\n      const status = (error as { status: number }).status;\n      const err: Error = {\n        msg: `${error} (Status: ${status})`,\n        status: status,\n        hasError: true,\n      };\n      this.store.dispatch(new ReportLog(LOG_TYPES.MSG, 'Failed to create Tree', LOG_ICONS.error));\n      this.store.dispatch(new HasError(err));\n    }\n  }\n\n  /**\n   * Function to reset the signals and data of the visualization\n   *\n   * @param view vega view\n   * @param spec vega spec\n   * @param nodes bimodal network nodes\n   * @param links bimodal network links\n   */\n  updateBimodalData(view: View, spec: Spec, nodes: BMNode[], links: Link[]) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const anyView: any = view;\n    anyView._runtime.signals.node__click.value = null; // removing clicked highlighted nodes if at all\n    anyView._runtime.signals.sources__click.value = []; // removing clicked bold source nodes if at all\n    anyView._runtime.signals.targets__click.value = [];\n    view.data('nodes', nodes).data('edges', links).resize().runAsync();\n\n    this.updateSpec(spec, nodes, links);\n\n    this.store.dispatch(new CloseLoading('Visualization Rendered'));\n    this.store.dispatch(new ReportLog(LOG_TYPES.MSG, 'Visualization successfully rendered', LOG_ICONS.success));\n  }\n\n  /**\n   * Function to update the spec with bimodal data\n   *\n   * @param spec vega spec\n   * @param nodes bimodal network nodes\n   * @param links bimodal network links\n   */\n  updateSpec(spec: Spec, nodes: BMNode[], links: Link[]) {\n    const data = spec.data ?? [];\n    const nodeData = data[data.findIndex((i) => i.name === 'nodes')] as ValuesData;\n    const edgeData = data[data.findIndex((i) => i.name === 'edges')] as ValuesData;\n    nodeData.values = nodes;\n    edgeData.values = links;\n\n    this.store.dispatch(new UpdateVegaSpec(spec));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BiomarkersCounts.html":{"url":"interfaces/BiomarkersCounts.html","title":"interface - BiomarkersCounts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BiomarkersCounts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BiomarkersNamesInReport.html":{"url":"interfaces/BiomarkersNamesInReport.html","title":"interface - BiomarkersNamesInReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BiomarkersNamesInReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BmCtPairings.html":{"url":"interfaces/BmCtPairings.html","title":"interface - BmCtPairings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BmCtPairings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AS_ID\n                                        \n                                \n                                \n                                        \n                                            AS_NAME\n                                        \n                                \n                                \n                                        \n                                            BM_ID\n                                        \n                                \n                                \n                                        \n                                            BM_NAME\n                                        \n                                \n                                \n                                        \n                                            CT_ID\n                                        \n                                \n                                \n                                        \n                                            CT_NAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AS_ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AS_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BM_ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BM_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BM_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BM_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CT_ID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CT_ID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CT_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CT_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CByOrgan.html":{"url":"interfaces/CByOrgan.html","title":"interface - CByOrgan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CByOrgan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            biomarkers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellTypes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTypes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CT.html":{"url":"interfaces/CT.html","title":"interface - CT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Base\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            indegree\n                                        \n                                \n                                \n                                        \n                                            isNew\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nodeSize\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            outdegree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            references\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        indegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNew:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outdegree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outdegree:         Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Set\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                isNew\n                            \n                            \n                                link\n                            \n                            \n                                parents\n                            \n                            \n                                structure\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(structure: string, link: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tree.model.ts:130\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        structure\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        link\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:126\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSheetLogs.html":{"url":"classes/ClearSheetLogs.html","title":"class - ClearSheetLogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSheetLogs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/logs.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/logs.actions.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLEAR] Sheet Logs'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ReportLog {\n  static readonly type = '[REPORT] Log';\n  constructor(\n    public type: string,\n    public message: string,\n    public icon?: string,\n    public version = 'latest',\n  ) {}\n}\n\nexport class ReportMultiLog {\n  static readonly type = '[REPORT] Milti Log';\n  constructor(\n    public message: string,\n    public icon: string,\n    public multiMessage = '',\n  ) {}\n}\n\nexport class ClearSheetLogs {\n  static readonly type = '[CLEAR] Sheet Logs';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseBottomSheet.html":{"url":"classes/CloseBottomSheet.html","title":"class - CloseBottomSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseBottomSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:83\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Bottom Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseBottomSheetDOI.html":{"url":"classes/CloseBottomSheetDOI.html","title":"class - CloseBottomSheetDOI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseBottomSheetDOI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:88\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Bottom Sheet DOI'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseCompare.html":{"url":"classes/CloseCompare.html","title":"class - CloseCompare","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseCompare\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:98\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Compare'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:98\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseLoading.html":{"url":"classes/CloseLoading.html","title":"class - CloseLoading","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseLoading\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                text\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Loading'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseRightSideNav.html":{"url":"classes/CloseRightSideNav.html","title":"class - CloseRightSideNav","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseRightSideNav\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:63\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Right Side Nav'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseSearch.html":{"url":"classes/CloseSearch.html","title":"class - CloseSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:108\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Search'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:108\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseSnackbar.html":{"url":"classes/CloseSnackbar.html","title":"class - CloseSnackbar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseSnackbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:43\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CLOSE] Snackbar'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompareComponent.html":{"url":"components/CompareComponent.html","title":"component - CompareComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CompareComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/compare/compare.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-compare\n            \n\n\n\n            \n                styleUrls\n                ./compare.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./compare.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                formGroup\n                            \n                            \n                                formSheets\n                            \n                            \n                                formValid\n                            \n                            \n                                    Public\n                                ga\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCompareSheetRow\n                            \n                            \n                                atLeastOnePhoneRequired\n                            \n                            \n                                checkLinkFormat\n                            \n                            \n                                compare\n                            \n                            \n                                createCompareForm\n                            \n                            \n                                doesFormHaveError\n                            \n                            \n                                getRandomColor\n                            \n                            \n                                markFormGroupTouched\n                            \n                            \n                                removeCompareSheetRow\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                compareSheets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeCompare\n                            \n                            \n                                compareData\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    CSControls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: UntypedFormBuilder, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/compare/compare.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        UntypedFormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        compareSheets\n                    \n                \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/compare/compare.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeCompare\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/compare/compare.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        compareData\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/compare/compare.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCompareSheetRow\n                        \n                    \n                \n            \n            \n                \naddCompareSheetRow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        atLeastOnePhoneRequired\n                        \n                    \n                \n            \n            \n                \natLeastOnePhoneRequired(group: UntypedFormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        UntypedFormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLinkFormat\n                        \n                    \n                \n            \n            \n                \ncheckLinkFormat(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { sheetID: any; gid: any; csvUrl: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n            \n                \ncompare()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCompareForm\n                        \n                    \n                \n            \n            \n                \ncreateCompareForm(link: string, color?: string, title: string, description: string, formData?: FormData, fileName?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                link\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                description\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                formData\n                                            \n                                                            FormData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                fileName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     UntypedFormGroup\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doesFormHaveError\n                        \n                    \n                \n            \n            \n                \ndoesFormHaveError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRandomColor\n                        \n                    \n                \n            \n            \n                \ngetRandomColor()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \nmarkFormGroupTouched(formGroup: UntypedFormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        UntypedFormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeCompareSheetRow\n                        \n                    \n                \n            \n            \n                \nremoveCompareSheetRow(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(fileFormDataEvent: FormData, control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/compare/compare.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileFormDataEvent\n                                            \n                                                            FormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UntypedFormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/compare/compare.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UntypedFormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/compare/compare.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formSheets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UntypedFormArray\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/compare/compare.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formValid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/compare/compare.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/compare/compare.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        CSControls\n                    \n                \n\n                \n                    \n                        getCSControls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/compare/compare.component.ts:169\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { GaAction, GaCategory, GaCompareInfo } from '../../models/ga.model';\nimport { CompareData } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-compare',\n  templateUrl: './compare.component.html',\n  styleUrls: ['./compare.component.scss'],\n})\nexport class CompareComponent implements OnInit {\n  @Output() closeCompare = new EventEmitter();\n  @Output() compareData = new EventEmitter();\n\n  @Input() compareSheets!: Observable;\n\n  formGroup!: UntypedFormGroup;\n  formSheets!: UntypedFormArray;\n  formValid = true;\n\n  constructor(\n    public fb: UntypedFormBuilder,\n    public ga: GoogleAnalyticsService,\n  ) {}\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      sheets: this.fb.array([]),\n    });\n    this.formSheets = this.formGroup.get('sheets') as UntypedFormArray;\n\n    this.compareSheets.subscribe((sheets) => {\n      if (sheets.length) {\n        for (const source of sheets) {\n          this.formSheets.push(\n            this.createCompareForm(\n              source.link,\n              source.color,\n              source.title,\n              source.description,\n              source.formData,\n              source.fileName,\n            ),\n          );\n        }\n      } else {\n        this.formSheets.push(this.createCompareForm());\n      }\n    });\n\n    this.formGroup.valueChanges.subscribe(() => {\n      const formArray = this.formGroup.controls['sheets'] as UntypedFormArray;\n      formArray.controls.forEach((control) => {\n        const sheet = control as UntypedFormGroup;\n        const file = sheet.controls['formData'];\n        const link = sheet.controls['link'];\n        if (file.value != null) {\n          link.clearValidators();\n          link.updateValueAndValidity({ emitEvent: false });\n        }\n      });\n    });\n  }\n\n  upload(fileFormDataEvent: FormData, control: AbstractControl) {\n    const sheet = control as UntypedFormGroup;\n    sheet.controls['formData'].setValue(fileFormDataEvent);\n  }\n\n  markFormGroupTouched(formGroup: UntypedFormGroup) {\n    Object.values(formGroup.controls).forEach((control) => {\n      const form = control as UntypedFormGroup;\n      form.markAsTouched();\n\n      if (form.controls) {\n        this.markFormGroupTouched(form);\n      }\n    });\n  }\n\n  compare() {\n    this.markFormGroupTouched(this.formGroup);\n    this.formValid = this.formGroup.status === 'VALID';\n    if (this.formGroup.status !== 'VALID') {\n      return;\n    }\n    const data: CompareData[] = [];\n    for (const [idx, sheet] of this.formGroup.value.sheets.entries()) {\n      if (sheet.title === '') {\n        sheet.title = `Sheet ${idx + 1}`;\n      }\n\n      data.push({\n        ...sheet,\n        sheetId: this.checkLinkFormat(sheet.link)?.sheetID,\n        gid: this.checkLinkFormat(sheet.link)?.gid,\n        csvUrl: this.checkLinkFormat(sheet.link)?.csvUrl,\n      });\n\n      const sheetInfo: GaCompareInfo = {\n        title: sheet.title,\n        desc: sheet.description,\n        link: sheet.link,\n        color: sheet.color,\n      };\n      this.ga.event(GaAction.CLICK, GaCategory.COMPARE, `Add new sheet to compare: ${JSON.stringify(sheetInfo)}`);\n    }\n\n    this.compareData.emit(data);\n  }\n\n  checkLinkFormat(url: string) {\n    if (url.startsWith('https://docs.google.com/spreadsheets/d/')) {\n      const splitUrl = url.split('/');\n      if (splitUrl.length === 7) {\n        return {\n          sheetID: splitUrl[5],\n          gid: splitUrl[6].split('=')[1],\n          csvUrl: '',\n        };\n      }\n    }\n    return {\n      sheetID: '0',\n      gid: '0',\n      csvUrl: url,\n    };\n  }\n\n  createCompareForm(\n    link = '',\n    color?: string,\n    title = '',\n    description = '',\n    formData?: FormData,\n    fileName?: string,\n  ): UntypedFormGroup {\n    if (!color) {\n      color = this.getRandomColor();\n    }\n\n    return this.fb.group(\n      {\n        title: [title],\n        description: [description],\n        link: [\n          link,\n          Validators.compose([Validators.required, Validators.pattern(/\\/([\\w-_]{15,})\\/(.*?gid=(\\d+))?|\\w*csv$/)]),\n        ],\n        color: [color],\n        formData: [formData],\n        fileName: [fileName],\n      },\n      { validators: [this.atLeastOnePhoneRequired] },\n    );\n  }\n\n  atLeastOnePhoneRequired(group: UntypedFormGroup): { [s: string]: boolean } | null {\n    if (group) {\n      if (group.controls['link'].value || group.controls['fileName'].value) {\n        return null;\n      }\n    }\n    return { error: true };\n  }\n\n  get CSControls() {\n    return this.formGroup.get('sheets') as UntypedFormArray;\n  }\n\n  getRandomColor() {\n    const letters = '3456789BC'.split('');\n    let color = '#';\n    for (let i = 0; i  {\n      // mark as touched for all controls\n      sheet.controls['link'].markAsTouched();\n    });\n    return this.formGroup.status !== 'VALID';\n  }\n\n  addCompareSheetRow() {\n    const sheet = this.createCompareForm();\n    this.formSheets.push(sheet);\n    this.ga.event(GaAction.CLICK, GaCategory.COMPARE, 'Add new compare row', undefined);\n  }\n\n  removeCompareSheetRow(i: number) {\n    this.formSheets.removeAt(i);\n    this.ga.event(GaAction.CLICK, GaCategory.COMPARE, 'Delete compare row', i);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        \n          \n            Instructions\n          \n        \n\n        \n          \n            \n              Through this feature, you can upload your own data (ASCT+B to ASCT+B, ASCT+B to experimental data, or\n              ASCT+B to OMAP) by pasting the Browser URL address for the Google sheet of your data in the fields\n              mentioned below.\n            \n            \n              In order to successfully link your sheet, make sure the sheet has public access by selecting Share --> Get\n              link --> selecting \"Anyone with the link\" option and \"Viewer\" privileges, select \"Done\" to save.\n            \n\n            \n              Please make sure your data follows the appropriate data format:\n              \n                \n                  ASCT+B Table template\n                \n                \n                  OMAP compare template\n                \n              \n            \n          \n        \n        \n        \n          New\n          Organ Mapping Antibody Panel files (CSV) are now supported!\n        \n      \n    \n\n    \n      \n        * required field\n      \n\n      \n        \n          \n            \n              \n                \n                  \n                    \n                      Title\n                      \n                      A title for your sheet\n                    \n                  \n                \n                \n                  \n                    \n                      \n                        Description\n                        \n                        A suitable description\n                      \n                    \n                  \n                  \n                    \n                      delete\n                    \n                  \n                \n              \n\n              \n                Pick Color\n                \n              \n\n              \n                Data\n                * &nbsp;\n                 ( Upload a csv file or link to the data)\n              \n\n              \n                \n                  \n                    \n                      Google Sheet (or CSV) Link\n                      \n                      Enter Browser URL address for your public Google Sheet (or CSV)\n                    \n                  \n                \n\n                \n                  \n                    \n                      \n                    \n                  \n                \n              \n            \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n        Compare\n      \n      \n        add\n        Add\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./compare.component.scss\n                \n                // .cc {\n//   border-radius: 8px;\n//   box-shadow: 3px 3px 40px 30px #ececec;\n// }\n\n.link-input-field {\n  width: 100%;\n}\n\ninput[type='color'] {\n  -webkit-appearance: none;\n  border: none;\n  outline: none;\n}\n\n::ng-deep input[type='color']::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n\ninput[type='color']::-webkit-color-swatch {\n  border: none;\n}\n\n.content {\n  flex: 1 1;\n  overflow: auto;\n}\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n  box-shadow: none;\n}\n\n.mat-expansion-panel-header:not(.compare) {\n  background: rgb(228, 228, 228) !important;\n}\n\n.mat-expansion-panel-header:hover {\n  opacity: 0.85 !important;\n}\n\n.instruction-title {\n  font-weight: 600;\n  font-size: 10pt;\n}\n\n.required-field-disclaimer {\n  font-size: 0.625rem;\n  color: #f44336;\n}\n\n.title-sheet-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.title-sheet-sub-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 0.5;\n}\n\n.flex-container {\n  flex: 0.5;\n}\n\n.file-upload {\n  color: #757575;\n}\n\n.sheet-link-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.pick-color-container {\n  width: 4rem;\n  margin-top: 1.125rem !important;\n  margin-bottom: 1.125rem !important;\n\n  .pick-color-title {\n    font-size: 0.625rem;\n    color: grey;\n  }\n\n  .pick-color-textbox {\n    height: 1.875rem;\n    margin-top: 0.25rem;\n  }\n}\n\n.button-container {\n  width: 100%;\n  justify-content: space-between;\n  display: flex;\n}\n\n.compare-button {\n  border-radius: 0.5rem !important;\n}\n\n.compare-button-color {\n  background-color: #f44336 !important;\n}\n\n.add-button {\n  border: 0.063rem solid rgb(196, 196, 196);\n  color: grey;\n  border-radius: 0.5rem !important;\n}\n\n.data-upload-title {\n  margin-top: 1.5rem !important;\n  color: #444a65;\n\n  .data-disclaimer-text {\n    font-size: 0.625rem;\n    color: #757575;\n  }\n}\n\n.red {\n  color: red;\n  display: inline;\n}\n\n.optional-info {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  grid-gap: 10px;\n}\n\n.rounded-blob {\n  align-items: center;\n  height: 1.5rem;\n  width: 2.5rem;\n  background-color: #c2cae5;\n  border-radius: 100px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Instructions                                                              Through this feature, you can upload your own data (ASCT+B to ASCT+B, ASCT+B to experimental data, or              ASCT+B to OMAP) by pasting the Browser URL address for the Google sheet of your data in the fields              mentioned below.                                      In order to successfully link your sheet, make sure the sheet has public access by selecting Share --> Get              link --> selecting \"Anyone with the link\" option and \"Viewer\" privileges, select \"Done\" to save.                                      Please make sure your data follows the appropriate data format:                                                ASCT+B Table template                                                  OMAP compare template                                                                                      New          Organ Mapping Antibody Panel files (CSV) are now supported!                                    * required field                                                                                                                                    Title                                            A title for your sheet                                                                                                                                                          Description                                                A suitable description                                                                                                                        delete                                                                                                  Pick Color                                                            Data                *                   ( Upload a csv file or link to the data)                                                                                                        Google Sheet (or CSV) Link                                            Enter Browser URL address for your public Google Sheet (or CSV)                                                                                                                                                                                                                                                                                Compare                    add        Add            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompareComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompareData.html":{"url":"interfaces/CompareData.html","title":"interface - CompareData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompareData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            csvUrl\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            formData\n                                        \n                                \n                                \n                                        \n                                            gid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isOmap\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            sheetId\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        csvUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csvUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formData:         FormData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOmap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOmap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompareModule.html":{"url":"modules/CompareModule.html","title":"module - CompareModule","body":"\n                   \n\n\n\n\n    Modules\n    CompareModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompareModule\n\n\n\ncluster_CompareModule_declarations\n\n\n\ncluster_CompareModule_imports\n\n\n\ncluster_CompareModule_exports\n\n\n\n\nCompareComponent\n\nCompareComponent\n\n\n\nCompareModule\n\nCompareModule\n\nCompareModule -->\n\nCompareComponent->CompareModule\n\n\n\n\n\nCompareComponent \n\nCompareComponent \n\nCompareComponent  -->\n\nCompareModule->CompareComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nCompareModule -->\n\nFileUploadModule->CompareModule\n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nCompareModule -->\n\nSidenavHeaderModule->CompareModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nCompareModule -->\n\nSidenavModule->CompareModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/compare/compare.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CompareComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileUploadModule\n                        \n                        \n                            SidenavHeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompareComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompareComponent } from './compare.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SidenavModule } from '../sidenav/sidenav.module';\nimport { SidenavHeaderModule } from '../sidenav-header/sidenav-header.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FileUploadModule } from '../file-upload/file-upload.module';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [CompareComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SidenavModule,\n    SidenavHeaderModule,\n    MatButtonModule,\n    FileUploadModule,\n    MatCardModule,\n  ],\n  exports: [CompareComponent],\n})\nexport class CompareModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompareReport.html":{"url":"interfaces/CompareReport.html","title":"interface - CompareReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompareReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            identicalAS\n                                        \n                                \n                                \n                                        \n                                            identicalB\n                                        \n                                \n                                \n                                        \n                                            identicalBMCTPair\n                                        \n                                \n                                \n                                        \n                                            identicalCT\n                                        \n                                \n                                \n                                        \n                                            newAS\n                                        \n                                \n                                \n                                        \n                                            newB\n                                        \n                                \n                                \n                                        \n                                            newCT\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identicalAS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identicalAS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identicalB\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identicalB:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identicalBMCTPair\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identicalBMCTPair:         Row[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Row[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identicalCT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identicalCT:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newAS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newAS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newB\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newB:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newCT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newCT:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompareReportData.html":{"url":"interfaces/CompareReportData.html","title":"interface - CompareReportData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompareReportData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     CompareReport[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CompareReport[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allOMAPSheetConfigurations$\n                            \n                            \n                                allSheetConfigurations$\n                            \n                            \n                                config$\n                            \n                            \n                                omapsheetConfiguration$\n                            \n                            \n                                sheetConfiguration$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-config.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allOMAPSheetConfigurations$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.http\n    .get('assets/omap-sheet-config.json')\n    .pipe(take(1), shareReplay(1))\n                    \n                \n                    \n                        \n                                Defined in src/app/app-config.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allSheetConfigurations$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.http.get('assets/sheet-config.json').pipe(take(1), shareReplay(1))\n                    \n                \n                    \n                        \n                                Defined in src/app/app-config.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.http.get>('assets/configuration.json').pipe(take(1), shareReplay(1))\n                    \n                \n                    \n                        \n                                Defined in src/app/app-config.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapsheetConfiguration$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.allOMAPSheetConfigurations$.pipe(\n    map((data) =>\n      data\n        .map((element) => ({\n          ...element,\n          version: element.version?.filter((version) => !version.viewValue.includes('DRAFT')) ?? [],\n        }))\n        .filter((element) => element.version.length > 0),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/app-config.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetConfiguration$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.allSheetConfigurations$.pipe(\n    map((data) =>\n      data\n        .map((element) => ({\n          ...element,\n          version: element.version?.filter((version) => !version.viewValue.includes('DRAFT')) ?? [],\n        }))\n        .filter((element) => element.name === 'some' || element.version?.length > 0),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/app-config.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { SheetDetails } from './models/sheet.model';\nimport { map, shareReplay, take } from 'rxjs/operators';\n\n@Injectable()\nexport class ConfigService {\n  allSheetConfigurations$ = this.http.get('assets/sheet-config.json').pipe(take(1), shareReplay(1));\n  allOMAPSheetConfigurations$ = this.http\n    .get('assets/omap-sheet-config.json')\n    .pipe(take(1), shareReplay(1));\n\n  sheetConfiguration$ = this.allSheetConfigurations$.pipe(\n    map((data) =>\n      data\n        .map((element) => ({\n          ...element,\n          version: element.version?.filter((version) => !version.viewValue.includes('DRAFT')) ?? [],\n        }))\n        .filter((element) => element.name === 'some' || element.version?.length > 0),\n    ),\n  );\n\n  omapsheetConfiguration$ = this.allOMAPSheetConfigurations$.pipe(\n    map((data) =>\n      data\n        .map((element) => ({\n          ...element,\n          version: element.version?.filter((version) => !version.viewValue.includes('DRAFT')) ?? [],\n        }))\n        .filter((element) => element.version.length > 0),\n    ),\n  );\n\n  config$ = this.http.get>('assets/configuration.json').pipe(take(1), shareReplay(1));\n\n  constructor(private readonly http: HttpClient) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationOptions.html":{"url":"interfaces/ConfigurationOptions.html","title":"interface - ConfigurationOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            headerCount\n                                        \n                                \n                                \n                                        \n                                            imgOptions\n                                        \n                                \n                                \n                                        \n                                            masterSheetLink\n                                        \n                                \n                                \n                                        \n                                            moreOptions\n                                        \n                                \n                                \n                                        \n                                            playgroundSheetOptions\n                                        \n                                \n                                \n                                        \n                                            sheetId\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                                \n                                        \n                                            version1Url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headerCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headerCount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imgOptions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        masterSheetLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        masterSheetLink:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moreOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moreOptions:         MoreOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MoreOption[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playgroundSheetOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playgroundSheetOptions:     PlaygroundSheetOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlaygroundSheetOptions[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         Version[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Version[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version1Url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version1Url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentService.html":{"url":"injectables/ConsentService.html","title":"injectable - ConsentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/consent.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consent\n                            \n                            \n                                    Readonly\n                                consentChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setConsent\n                            \n                            \n                                unsetConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/consent.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setConsent\n                        \n                    \n                \n            \n            \n                \nsetConsent(value: Consent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/consent.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            Consent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetConsent\n                        \n                    \n                \n            \n            \n                \nunsetConsent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/consent.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consent\n\n                    \n                \n                \n                    \n                        Default value : 'not-set'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/consent.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        consentChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/consent.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\nexport type Consent = 'not-set' | 'given' | 'rescinded';\n\n@Injectable()\nexport class ConsentService implements OnDestroy {\n  consent: Consent = 'not-set';\n\n  readonly consentChange = new ReplaySubject(1);\n\n  constructor() {\n    this.consentChange.next(this.consent);\n  }\n\n  ngOnDestroy(): void {\n    this.consentChange.complete();\n  }\n\n  setConsent(value: Consent): void {\n    if (this.consent !== value) {\n      this.consent = value;\n      this.consentChange.next(value);\n    }\n  }\n\n  unsetConsent(): void {\n    this.setConsent('not-set');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlPaneComponent.html":{"url":"components/ControlPaneComponent.html","title":"component - ControlPaneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ControlPaneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/control-pane/control-pane.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-control-pane\n            \n\n\n\n            \n                styleUrls\n                ./control-pane.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./control-pane.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bm\n                            \n                            \n                                    \n                                bm$\n                            \n                            \n                                    \n                                config$\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    \n                                cs$\n                            \n                            \n                                    \n                                filteredProteins$\n                            \n                            \n                                groupName\n                            \n                            \n                                nodes\n                            \n                            \n                                    \n                                omapConfig$\n                            \n                            \n                                    \n                                selectedOrgans$\n                            \n                            \n                                    \n                                sheet$\n                            \n                            \n                                    Public\n                                store\n                            \n                            \n                                    \n                                td$\n                            \n                            \n                                    \n                                tree$\n                            \n                            \n                                treeData\n                            \n                            \n                                view\n                            \n                            \n                                    \n                                view$\n                            \n                            \n                                    Public\n                                vs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeBimodalWithDiscrepencyId\n                            \n                            \n                                makeBimodalWithDiscrepencyLabel\n                            \n                            \n                                makeDuplicateId\n                            \n                            \n                                sendMail\n                            \n                            \n                                showAllAS\n                            \n                            \n                                togglePane\n                            \n                            \n                                updateBimodal\n                            \n                            \n                                updateConfigInSheet\n                            \n                            \n                                updateOmapConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, bm: BimodalService, vs: VegaService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bm\n                                                  \n                                                        \n                                                                        BimodalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vs\n                                                  \n                                                        \n                                                                        VegaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/control-pane/control-pane.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalWithDiscrepencyId\n                        \n                    \n                \n            \n            \n                \nmakeBimodalWithDiscrepencyId(config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalWithDiscrepencyLabel\n                        \n                    \n                \n            \n            \n                \nmakeBimodalWithDiscrepencyLabel(config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDuplicateId\n                        \n                    \n                \n            \n            \n                \nmakeDuplicateId(config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMail\n                        \n                    \n                \n            \n            \n                \nsendMail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:265\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAllAS\n                        \n                    \n                \n            \n            \n                \nshowAllAS()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePane\n                        \n                    \n                \n            \n            \n                \ntogglePane()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:261\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBimodal\n                        \n                    \n                \n            \n            \n                \nupdateBimodal(config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateConfigInSheet\n                        \n                    \n                \n            \n            \n                \nupdateConfigInSheet(prop: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prop\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOmapConfig\n                        \n                    \n                \n            \n            \n                \nupdateOmapConfig(event: OmapConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/control-pane/control-pane.component.ts:274\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            OmapConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState.getBimodal)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        config$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getSheetConfig)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getCompareSheets)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        filteredProteins$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getFilteredProtiens)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Anatomical Structures'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BMNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        omapConfig$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState.getOmapConfig)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        selectedOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getSelectedOrgans)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sheet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getSheet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        td$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState.getTreeData)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tree$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        treeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        view$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState.getVegaView)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VegaService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/control-pane/control-pane.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { FetchSelectedOrganData, ToggleShowAllAS, UpdateConfig } from '../../actions/sheet.actions';\nimport { DiscrepencyId, DiscrepencyLabel, DuplicateId, UpdateOmapConfig } from '../../actions/tree.actions';\nimport { ToggleControlPane } from '../../actions/ui.actions';\nimport { ConfigService } from '../../app-config.service';\nimport { BMNode } from '../../models/bimodal.model';\nimport { OmapConfig } from '../../models/omap.model';\nimport { Error } from '../../models/response.model';\nimport { CompareData, Sheet, SheetConfig } from '../../models/sheet.model';\nimport { DiscrepencyStructure, TNode } from '../../models/tree.model';\nimport { SheetState } from '../../store/sheet.state';\nimport { TreeState, TreeStateModel } from '../../store/tree.state';\nimport { BimodalService } from '../tree/bimodal.service';\nimport { VegaService } from '../tree/vega.service';\n\n@Component({\n  selector: 'app-control-pane',\n  templateUrl: './control-pane.component.html',\n  styleUrls: ['./control-pane.component.scss'],\n})\nexport class ControlPaneComponent implements OnInit {\n  @Input() error!: Error;\n\n  @Select(SheetState.getSheetConfig) config$!: Observable;\n  @Select(SheetState.getSheet) sheet$!: Observable;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Select(TreeState.getVegaView) view$!: Observable;\n  @Select(SheetState.getSelectedOrgans) selectedOrgans$!: Observable;\n\n  @Select(TreeState.getTreeData) td$!: Observable;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Select(TreeState.getBimodal) bm$!: Observable;\n  @Select(SheetState.getCompareSheets) cs$!: Observable;\n\n  @Select(TreeState) tree$!: Observable;\n\n  @Select(TreeState.getOmapConfig) omapConfig$!: Observable;\n  @Select(SheetState.getFilteredProtiens) filteredProteins$!: Observable;\n\n  nodes: BMNode[] = [];\n  treeData: TNode[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  view: any;\n  groupName = 'Anatomical Structures';\n\n  constructor(\n    public store: Store,\n    public bm: BimodalService,\n    public vs: VegaService,\n    public configService: ConfigService,\n  ) {\n    this.tree$.subscribe((tree) => {\n      this.treeData = tree.treeData;\n      this.nodes = tree.bimodal.nodes;\n    });\n\n    this.filteredProteins$.subscribe(() => {\n      const data = this.store.selectSnapshot(SheetState.getData);\n      const treeData = this.store.selectSnapshot(TreeState.getTreeData);\n      const bimodalConfig = this.store.selectSnapshot(TreeState.getBimodalConfig);\n      const sheetConfig = this.store.selectSnapshot(SheetState.getSheetConfig);\n      const omapConfig = this.store.selectSnapshot(TreeState.getOmapConfig);\n      const filteredProtiens = this.store.selectSnapshot(SheetState.getFilteredProtiens);\n      if (data.length) {\n        this.bm.makeBimodalData(data, treeData, bimodalConfig, false, sheetConfig, omapConfig, filteredProtiens);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.view$.subscribe((data) => {\n      this.view = data;\n    });\n  }\n\n  updateConfigInSheet(prop: { property: string; config: SheetConfig }) {\n    switch (prop.property) {\n      case 'width':\n        this.vs.makeBimodal(this.view.signal('as_width', prop.config.width));\n        break;\n      case 'height':\n        this.vs.makeBimodal(this.view.signal('as_height', prop.config.height));\n        break;\n      case 'show-ontology':\n        this.view.signal('show_ontology', prop.config.show_ontology).runAsync();\n        break;\n      case 'bm-x':\n        this.updateBimodal(prop.config);\n        break;\n      case 'bm-y':\n        this.updateBimodal(prop.config);\n        break;\n      case 'show-as':\n        this.showAllAS();\n        break;\n      case 'show-discrepency-label':\n        this.makeBimodalWithDiscrepencyLabel(prop.config);\n        break;\n      case 'show-discrepency-id':\n        this.makeBimodalWithDiscrepencyId(prop.config);\n        break;\n      case 'show-duplicate-id':\n        this.makeDuplicateId(prop.config);\n        break;\n    }\n  }\n\n  showAllAS() {\n    this.store.dispatch(new ToggleShowAllAS()).subscribe((states) => {\n      const sheet = states.sheetState.sheet;\n      const selectedOrgans = states.sheetState.selectedOrgans;\n      const omapSelectedOrgans = states.sheetState.omapSelectedOrgans;\n      this.store.dispatch(new FetchSelectedOrganData(sheet, selectedOrgans, omapSelectedOrgans));\n    });\n  }\n\n  makeBimodalWithDiscrepencyLabel(config: SheetConfig) {\n    this.store.dispatch(new UpdateConfig(config));\n    let discrepencyLabels: DiscrepencyStructure[] = [];\n    if (config.discrepencyLabel) {\n      const discrepencySet = new Set();\n      for (const node of this.treeData) {\n        if (node.children !== 0 && node.label !== node.name) {\n          discrepencySet.add({\n            id: node.id,\n            name: node.name,\n            groupName: this.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      for (const node of this.nodes) {\n        if ((node.group === 1 || node.group === 2) && node.label !== node.name) {\n          discrepencySet.add({\n            id: node.id,\n            name: node.name,\n            groupName: node.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      discrepencyLabels = [...discrepencySet];\n      this.store.dispatch(new DiscrepencyId([]));\n      this.store.dispatch(new DuplicateId([]));\n    } else {\n      discrepencyLabels = [];\n    }\n    this.store.dispatch(new DiscrepencyLabel(discrepencyLabels));\n  }\n\n  makeBimodalWithDiscrepencyId(config: SheetConfig) {\n    this.store.dispatch(new UpdateConfig(config));\n    let discrepencyIds: DiscrepencyStructure[] = [];\n    if (config.discrepencyId) {\n      const discrepencySet = new Set();\n      for (const node of this.treeData) {\n        if (node.children !== 0 && !node.ontologyId) {\n          discrepencySet.add({\n            id: node.id,\n            name: node.name,\n            groupName: this.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      for (const node of this.nodes) {\n        if ((node.group === 1 || node.group === 2) && !node.ontologyId) {\n          discrepencySet.add({\n            id: node.id,\n            name: node.name,\n            groupName: node.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      discrepencyIds = [...discrepencySet];\n      this.store.dispatch(new DiscrepencyLabel([]));\n      this.store.dispatch(new DuplicateId([]));\n    } else {\n      discrepencyIds = [];\n    }\n    this.store.dispatch(new DiscrepencyId(discrepencyIds));\n  }\n\n  makeDuplicateId(config: SheetConfig) {\n    this.store.dispatch(new UpdateConfig(config));\n    let duplicateId: DiscrepencyStructure[] = [];\n    if (config.duplicateId) {\n      const duplicateIdSet = new Set();\n      for (const node of this.treeData) {\n        if (node.children !== 0 && node.ontologyId && node.ontologyId !== 'no good match') {\n          duplicateIdSet.add({\n            id: node.id,\n            name: node.name,\n            groupName: this.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      for (const node of this.nodes) {\n        if (node.ontologyId && node.ontologyId !== 'no good match') {\n          duplicateIdSet.add({\n            id: node.id,\n            name: node.name,\n            groupName: node.groupName,\n            ontologyId: node.ontologyId,\n            x: node.x,\n            y: node.y,\n          });\n        }\n      }\n      duplicateId = [...duplicateIdSet];\n      const dataLookup = duplicateId.reduce(\n        (acc, e) => {\n          acc[e.ontologyId]++;\n          acc[e.ontologyId] = acc[e.ontologyId] || 0;\n          return acc;\n        },\n        {} as Record,\n      );\n      const duplicateIdsTree = duplicateId.filter((e) => dataLookup[e.ontologyId]);\n      duplicateId = [...duplicateIdsTree];\n      this.store.dispatch(new DiscrepencyLabel([]));\n      this.store.dispatch(new DiscrepencyId([]));\n    } else {\n      duplicateId = [];\n    }\n    this.store.dispatch(new DuplicateId([...duplicateId]));\n  }\n\n  updateBimodal(config: SheetConfig) {\n    this.store.dispatch(new UpdateConfig(config)).subscribe((states) => {\n      const data = states.sheetState.data;\n      const treeData = states.treeState.treeData;\n      const bimodalConfig = states.treeState.bimodal.config;\n      const omapConfig = states.treeState.omapConfig;\n      const filteredProtiens = states.sheetState.filteredProtiens;\n      if (data.length) {\n        try {\n          console.log('BM Call here');\n          this.bm.makeBimodalData(data, treeData, bimodalConfig, false, config, omapConfig, filteredProtiens);\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    });\n  }\n\n  togglePane() {\n    this.store.dispatch(new ToggleControlPane());\n  }\n\n  sendMail() {\n    const subject = 'About the ASCT+B Reporter!';\n    const body = `Hi, thank you for wanting to contact us! This is an auto-generated body template.\n      Below are a list of possible subjects, %0D%0A%0D%0A1. Issue/bug wit the Reporter%0D%0A%0D%0A2.\n      Feature request for the reporter.%0D%0A%0D%0A3. General discussion about the Reporter.`;\n    const mailText = `mailto:infoccf@indiana.edu?subject=${subject}&body=${body}`;\n    window.location.href = mailText;\n  }\n\n  updateOmapConfig(event: OmapConfig) {\n    this.store.dispatch(new UpdateOmapConfig(event)).subscribe((states) => {\n      this.store.dispatch(\n        new FetchSelectedOrganData(\n          states.sheetState.sheet,\n          states.sheetState.selectedOrgans,\n          states.sheetState.omapSelectedOrgans,\n          states.sheetState.compareSheets,\n        ),\n      );\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n  \n\n  \n    Contact Us\n  \n\n\n    \n\n    \n                \n                    ./control-pane.component.scss\n                \n                /* REPORT */\n.report {\n  border: 0.0625rem solid rgba(245, 159, 61);\n  border-radius: 0.5rem !important;\n  color: black;\n  transition: all 0.3s;\n}\n\n.report:hover {\n  background-color: rgb(245, 159, 61);\n}\n\na {\n  color: grey;\n}\n.arrow-left-button {\n  border-radius: 0.5rem;\n}\n.arrow-left-icon {\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Contact Us  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ControlPaneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ControlPaneModule.html":{"url":"modules/ControlPaneModule.html","title":"module - ControlPaneModule","body":"\n                   \n\n\n\n\n    Modules\n    ControlPaneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ControlPaneModule\n\n\n\ncluster_ControlPaneModule_declarations\n\n\n\ncluster_ControlPaneModule_imports\n\n\n\ncluster_ControlPaneModule_exports\n\n\n\n\nControlPaneComponent\n\nControlPaneComponent\n\n\n\nControlPaneModule\n\nControlPaneModule\n\nControlPaneModule -->\n\nControlPaneComponent->ControlPaneModule\n\n\n\n\n\nControlPaneComponent \n\nControlPaneComponent \n\nControlPaneComponent  -->\n\nControlPaneModule->ControlPaneComponent \n\n\n\n\n\nControlsModule\n\nControlsModule\n\nControlPaneModule -->\n\nControlsModule->ControlPaneModule\n\n\n\n\n\nFunctionsModule\n\nFunctionsModule\n\nControlPaneModule -->\n\nFunctionsModule->ControlPaneModule\n\n\n\n\n\nLegendModule\n\nLegendModule\n\nControlPaneModule -->\n\nLegendModule->ControlPaneModule\n\n\n\n\n\nOmapControlsModule\n\nOmapControlsModule\n\nControlPaneModule -->\n\nOmapControlsModule->ControlPaneModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nControlPaneModule -->\n\nSidenavModule->ControlPaneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/control-pane/control-pane.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ControlPaneComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ControlsModule\n                        \n                        \n                            FunctionsModule\n                        \n                        \n                            LegendModule\n                        \n                        \n                            OmapControlsModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ControlPaneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterModule } from '@angular/router';\nimport { ControlsModule } from '../../components/controls/controls.module';\nimport { LegendModule } from '../../components/legend/legend.module';\nimport { OmapControlsModule } from '../../components/omap-controls/omap-controls.module';\nimport { SidenavModule } from '../../components/sidenav/sidenav.module';\nimport { FunctionsModule } from '../functions/functions.module';\nimport { ControlPaneComponent } from './control-pane.component';\n\n@NgModule({\n  declarations: [ControlPaneComponent],\n  imports: [\n    CommonModule,\n    SidenavModule,\n    MatButtonModule,\n    LegendModule,\n    FunctionsModule,\n    ControlsModule,\n    RouterModule,\n    OmapControlsModule,\n  ],\n  exports: [ControlPaneComponent],\n})\nexport class ControlPaneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ControlsModule.html":{"url":"modules/ControlsModule.html","title":"module - ControlsModule","body":"\n                   \n\n\n\n\n    Modules\n    ControlsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ControlsModule\n\n\n\ncluster_ControlsModule_declarations\n\n\n\ncluster_ControlsModule_exports\n\n\n\n\nVisControlsComponent\n\nVisControlsComponent\n\n\n\nControlsModule\n\nControlsModule\n\nControlsModule -->\n\nVisControlsComponent->ControlsModule\n\n\n\n\n\nVisControlsComponent \n\nVisControlsComponent \n\nVisControlsComponent  -->\n\nControlsModule->VisControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/controls/controls.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisControlsComponent } from './vis-controls.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [VisControlsComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatSliderModule,\n    MatIconModule,\n    MatTooltipModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n    MatButtonModule,\n  ],\n  exports: [VisControlsComponent],\n})\nexport class ControlsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DD.html":{"url":"interfaces/DD.html","title":"interface - DD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DOI.html":{"url":"interfaces/DOI.html","title":"interface - DOI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DOI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            doi\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Data.html":{"url":"classes/Data.html","title":"class - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeASMultiParentEdgesData\n                            \n                            \n                                makeASTreeData\n                            \n                            \n                                makeASTreeLinksData\n                            \n                            \n                                makeBimodalEdgesData\n                            \n                            \n                                makeBimodalNodesData\n                            \n                            \n                                makeDiscrepencyIdData\n                            \n                            \n                                makeDiscrepencyLabelData\n                            \n                            \n                                makeDuplicateIdData\n                            \n                            \n                                makeSearchIdsData\n                            \n                            \n                                makeSourcesClickData\n                            \n                            \n                                makeSourcesHoverData\n                            \n                            \n                                makeSourcesOfSourcesClickData\n                            \n                            \n                                makeSourcesOfSourcesHoverData\n                            \n                            \n                                makeTargetsClickData\n                            \n                            \n                                makeTargetsHoverData\n                            \n                            \n                                makeTargetsOfTargetsClickData\n                            \n                            \n                                makeTargetsOfTargetsHoverData\n                            \n                            \n                                makeViewModeClickData\n                            \n                            \n                                makeViewModeHoverData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/data.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currentSheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        treeData\n                                                  \n                                                        \n                                                                        TNode[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheetConfig\n                                                  \n                                                        \n                                                                        SheetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VegaDataInterface[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/data.ts:12\n                        \n                    \n\n            \n                \n                    List of data functions\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                treeData\n                                            \n                                                            TNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sheetConfig\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         VegaDataInterface[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeASMultiParentEdgesData\n                        \n                    \n                \n            \n            \n                \nmakeASMultiParentEdgesData(multiParentLinksData: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:130\n                        \n                    \n\n\n            \n                \n                        Function to create edges between multi parents (depricated)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                multiParentLinksData\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    multi parent links (depricated)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         VegaDataInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeASTreeData\n                        \n                    \n                \n            \n            \n                \nmakeASTreeData(_currentSheet: Sheet, treeData: TNode[], _config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:87\n                        \n                    \n\n\n            \n                \n                        Function to create vega data. Has tree config\nand the nodes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                treeData\n                                            \n                                                            TNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    tree data from tree service\n\n                                            \n                                        \n                                        \n                                                _config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         VegaDataInterface\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeASTreeLinksData\n                        \n                    \n                \n            \n            \n                \nmakeASTreeLinksData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:111\n                        \n                    \n\n\n            \n                \n                        Creates links in the vega tree\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalEdgesData\n                        \n                    \n                \n            \n            \n                \nmakeBimodalEdgesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:168\n                        \n                    \n\n\n            \n                \n                        Stores the edges of the bimodal network\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalNodesData\n                        \n                    \n                \n            \n            \n                \nmakeBimodalNodesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:158\n                        \n                    \n\n\n            \n                \n                        Stores the nodes data of the bimodal network\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDiscrepencyIdData\n                        \n                    \n                \n            \n            \n                \nmakeDiscrepencyIdData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:52\n                        \n                    \n\n\n            \n                \n                        Stores the list of IDs that should show on the graph\nwhen Discrepency ID feature is used\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDiscrepencyLabelData\n                        \n                    \n                \n            \n            \n                \nmakeDiscrepencyLabelData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:74\n                        \n                    \n\n\n            \n                \n                        Stores the list of Labels that should show on the graph\nwhen Discrepency Labels feature is used\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDuplicateIdData\n                        \n                    \n                \n            \n            \n                \nmakeDuplicateIdData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:63\n                        \n                    \n\n\n            \n                \n                        Stores the list of IDs that should show on the graph\nwhen Duplicate ID feature is used\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSearchIdsData\n                        \n                    \n                \n            \n            \n                \nmakeSearchIdsData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:41\n                        \n                    \n\n\n            \n                \n                        Stores the list of IDs that should show on the graph\nwhen search is used\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSourcesClickData\n                        \n                    \n                \n            \n            \n                \nmakeSourcesClickData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:244\n                        \n                    \n\n\n            \n                \n                        Stores the sources of a node that has been clicked on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSourcesHoverData\n                        \n                    \n                \n            \n            \n                \nmakeSourcesHoverData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:212\n                        \n                    \n\n\n            \n                \n                        Stores the sources of a node that has been hovered on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSourcesOfSourcesClickData\n                        \n                    \n                \n            \n            \n                \nmakeSourcesOfSourcesClickData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:280\n                        \n                    \n\n\n            \n                \n                        Stores the sources or sources of a node that has been clicked on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSourcesOfSourcesHoverData\n                        \n                    \n                \n            \n            \n                \nmakeSourcesOfSourcesHoverData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:320\n                        \n                    \n\n\n            \n                \n                        Stores the sources or sources of a node that has been hovered on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTargetsClickData\n                        \n                    \n                \n            \n            \n                \nmakeTargetsClickData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:228\n                        \n                    \n\n\n            \n                \n                        Stores the targets of a node that has been clicked on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTargetsHoverData\n                        \n                    \n                \n            \n            \n                \nmakeTargetsHoverData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:196\n                        \n                    \n\n\n            \n                \n                        Stores the targets of a node that has been hovered on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTargetsOfTargetsClickData\n                        \n                    \n                \n            \n            \n                \nmakeTargetsOfTargetsClickData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:260\n                        \n                    \n\n\n            \n                \n                        Stores the targets or targets of a node that has been clicked on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTargetsOfTargetsHoverData\n                        \n                    \n                \n            \n            \n                \nmakeTargetsOfTargetsHoverData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:300\n                        \n                    \n\n\n            \n                \n                        Stores the targets or targets of a node that has been hovered on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeViewModeClickData\n                        \n                    \n                \n            \n            \n                \nmakeViewModeClickData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:340\n                        \n                    \n\n\n            \n                \n                        Stores the nodes whole opacity needs to be reduced when a node is clicked on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeViewModeHoverData\n                        \n                    \n                \n            \n            \n                \nmakeViewModeHoverData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/data.ts:356\n                        \n                    \n\n\n            \n                \n                        Stores the nodes whole opacity needs to be reduced when a node is hovered on\n\n\n                        \n                            Returns :         VegaDataInterface\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Data as VegaDataInterface } from 'vega';\nimport { Sheet, SheetConfig } from '../../../models/sheet.model';\nimport { TNode } from '../../../models/tree.model';\n\nexport class Data {\n  static create(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig): VegaDataInterface[] {\n    return new Data(currentSheet, treeData, sheetConfig).data;\n  }\n  /**\n   * List of data functions\n   */\n  data: VegaDataInterface[];\n\n  constructor(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig) {\n    this.data = [\n      this.makeASTreeData(currentSheet, treeData, sheetConfig),\n      this.makeASTreeLinksData(),\n      this.makeBimodalNodesData(),\n      this.makeBimodalEdgesData(),\n      this.makeSourcesClickData(),\n      this.makeSourcesHoverData(),\n      this.makeTargetsClickData(),\n      this.makeTargetsHoverData(),\n      this.makeSourcesOfSourcesClickData(),\n      this.makeSourcesOfSourcesHoverData(),\n      this.makeTargetsOfTargetsClickData(),\n      this.makeTargetsOfTargetsHoverData(),\n      this.makeViewModeClickData(),\n      this.makeViewModeHoverData(),\n      this.makeSearchIdsData(),\n      this.makeDiscrepencyLabelData(),\n      this.makeDiscrepencyIdData(),\n      this.makeDuplicateIdData(),\n    ];\n  }\n\n  /**\n   * Stores the list of IDs that should show on the graph\n   * when search is used\n   */\n  makeSearchIdsData(): VegaDataInterface {\n    return {\n      name: 'search',\n      values: [],\n    };\n  }\n\n  /**\n   * Stores the list of IDs that should show on the graph\n   * when Discrepency ID feature is used\n   */\n  makeDiscrepencyIdData(): VegaDataInterface {\n    return {\n      name: 'discrepencyId',\n      values: [],\n    };\n  }\n\n  /**\n   * Stores the list of IDs that should show on the graph\n   * when Duplicate ID feature is used\n   */\n  makeDuplicateIdData(): VegaDataInterface {\n    return {\n      name: 'duplicateId',\n      values: [],\n    };\n  }\n\n  /**\n   * Stores the list of Labels that should show on the graph\n   * when Discrepency Labels feature is used\n   */\n  makeDiscrepencyLabelData(): VegaDataInterface {\n    return {\n      name: 'discrepencyLabel',\n      values: [],\n    };\n  }\n\n  /**\n   * Function to create vega data. Has tree config\n   * and the nodes\n   *\n   * @param treeData tree data from tree service\n   */\n  makeASTreeData(_currentSheet: Sheet, treeData: TNode[], _config: SheetConfig): VegaDataInterface {\n    return {\n      name: 'tree',\n      values: treeData,\n      transform: [\n        {\n          type: 'stratify',\n          key: 'id',\n          parentKey: 'parent',\n        },\n        {\n          type: 'tree',\n          method: 'cluster',\n          size: [{ signal: 'as_height' }, { signal: 'as_width' }],\n          separation: false,\n          as: ['y', 'x', 'depth', 'children'],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Creates links in the vega tree\n   */\n  makeASTreeLinksData(): VegaDataInterface {\n    return {\n      name: 'links',\n      source: 'tree',\n      transform: [\n        { type: 'treelinks' },\n        {\n          type: 'linkpath',\n          orient: 'horizontal',\n          shape: 'diagonal',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Function to create edges between multi parents (depricated)\n   * @param multiParentLinksData multi parent links (depricated)\n   */\n  makeASMultiParentEdgesData(multiParentLinksData: unknown[]): VegaDataInterface {\n    return {\n      name: 'multi_parent_edges',\n      values: multiParentLinksData,\n      transform: [\n        {\n          type: 'lookup',\n          from: 'tree',\n          key: 'id',\n          fields: ['s', 't'],\n          as: ['source', 'target'],\n        },\n        {\n          type: 'linkpath',\n          sourceX: 'source.x',\n          sourceY: 'source.y',\n          targetX: 'target.x',\n          targetY: 'target.y',\n          orient: 'horizontal',\n          shape: 'curve',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the nodes data of the bimodal network\n   */\n  makeBimodalNodesData(): VegaDataInterface {\n    return {\n      name: 'nodes',\n      values: [],\n    };\n  }\n\n  /**\n   * Stores the edges of the bimodal network\n   */\n  makeBimodalEdgesData(): VegaDataInterface {\n    return {\n      name: 'edges',\n      values: [],\n      transform: [\n        {\n          type: 'lookup',\n          from: 'nodes',\n          key: 'id',\n          fields: ['s', 't', 'pathColor'],\n          as: ['source', 'target', 'c'],\n        },\n        {\n          type: 'linkpath',\n          sourceX: 'source.x',\n          sourceY: 'source.y',\n          targetX: 'target.x',\n          targetY: 'target.y',\n          orient: 'horizontal',\n          shape: 'diagonal',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the targets of a node that has been hovered on\n   */\n  makeTargetsHoverData(): VegaDataInterface {\n    return {\n      name: 'targets_hovered_array',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(node_targets__hover, datum.id) !== -1',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the sources of a node that has been hovered on\n   */\n  makeSourcesHoverData(): VegaDataInterface {\n    return {\n      name: 'sources_hovered_array',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(node_sources__hover, datum.id) !== -1',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the targets of a node that has been clicked on\n   */\n  makeTargetsClickData(): VegaDataInterface {\n    return {\n      name: 'targets_clicked_array',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(targets__click, datum.id) !== -1',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the sources of a node that has been clicked on\n   */\n  makeSourcesClickData(): VegaDataInterface {\n    return {\n      name: 'sources_clicked_array',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(sources__click, datum.id) !== -1',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the targets or targets of a node that has been clicked on\n   */\n  makeTargetsOfTargetsClickData(): VegaDataInterface {\n    return {\n      name: 'targets_of_targets__click',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(targets__click, datum.id) !== -1',\n        },\n        {\n          type: 'flatten',\n          fields: ['targets'],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the sources or sources of a node that has been clicked on\n   */\n  makeSourcesOfSourcesClickData(): VegaDataInterface {\n    return {\n      name: 'sources_of_sources__click',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(sources__click, datum.id) !== -1',\n        },\n        {\n          type: 'flatten',\n          fields: ['sources'],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the targets or targets of a node that has been hovered on\n   */\n  makeTargetsOfTargetsHoverData(): VegaDataInterface {\n    return {\n      name: 'targets_of_targets__hover',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(node_targets__hover, datum.id) !== -1',\n        },\n        {\n          type: 'flatten',\n          fields: ['targets'],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the sources or sources of a node that has been hovered on\n   */\n  makeSourcesOfSourcesHoverData(): VegaDataInterface {\n    return {\n      name: 'sources_of_sources__hover',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'indexof(node_sources__hover, datum.id) !== -1',\n        },\n        {\n          type: 'flatten',\n          fields: ['sources'],\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the nodes whole opacity needs to be reduced when a node is clicked on\n   */\n  makeViewModeClickData(): VegaDataInterface {\n    return {\n      name: 'view_mode__click',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'node__click === datum.id || indata(\"sources_clicked_array\", \"id\", datum.id) || indata(\"targets_clicked_array\", \"id\", datum.id)',\n        },\n      ],\n    };\n  }\n\n  /**\n   * Stores the nodes whole opacity needs to be reduced when a node is hovered on\n   */\n  makeViewModeHoverData(): VegaDataInterface {\n    return {\n      name: 'view_mode__hover',\n      source: 'nodes',\n      transform: [\n        {\n          type: 'filter',\n          expr: 'node__hover === datum.id || indata(\"sources_hovered_array\", \"id\", datum.id) || indata(\"targets_hovered_array\", \"id\", datum.id)',\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DebugLogsComponent.html":{"url":"components/DebugLogsComponent.html","title":"component - DebugLogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DebugLogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/debug-logs/debug-logs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-debug-logs\n            \n\n\n\n            \n                styleUrls\n                ./debug-logs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./debug-logs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentSheet\n                            \n                            \n                                logs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeDebug\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentSheet\n                    \n                \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/debug-logs/debug-logs.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logs\n                    \n                \n                \n                    \n                        Type :         Logs\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/debug-logs/debug-logs.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeDebug\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/debug-logs/debug-logs.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Sheet } from '../../models/sheet.model';\nimport { Logs } from '../../models/ui.model';\n\n@Component({\n  selector: 'app-debug-logs',\n  templateUrl: './debug-logs.component.html',\n  styleUrls: ['./debug-logs.component.scss'],\n})\nexport class DebugLogsComponent {\n  @Input() currentSheet!: Sheet;\n  @Input() logs!: Logs;\n  @Output() closeDebug = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        \n          \n            \n              {{ l.icon }}\n              \n                \n              \n            \n            \n              error\n              \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              error\n              \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              error\n              \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n            \n              error\n              \n                \n                  \n                    \n                      \n                        \n                      \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n          \n        \n      \n      \n        \n          \n            {{ l.icon }}\n            \n              \n            \n          \n          \n            error\n            \n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n            error\n            \n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n            error\n            \n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n            error\n            \n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./debug-logs.component.scss\n                \n                .debug-log {\n  min-width: 31.25rem;\n}\n\n.logsList .mat-list-item {\n  height: auto;\n  width: 100%;\n}\n\n::ng-deep .mat-list-item-content {\n  padding: 0 !important;\n}\n\n:host ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content {\n  align-items: flex-start;\n}\n\n.i2 {\n  font-size: 12pt;\n  margin-top: 0.3125rem;\n  margin-bottom: 0.3125rem;\n  font-weight: 300;\n}\n\n.check_circle {\n  color: #66bb6a !important;\n}\n\n.error {\n  color: #ffca28 !important;\n}\n\n.cancel {\n  color: #ff5722 !important;\n}\n.mat-list-container {\n  padding: 0;\n}\n.list-item-first {\n  padding-left: 0;\n}\n.error-icon-list {\n  color: grey;\n}\n.list-item-section {\n  width: 100%;\n}\n.expansion-panel-container {\n  box-shadow: none !important;\n}\n.expansion-panel-header {\n  width: 99%;\n}\n.expansion-panel-content {\n  text-align: start;\n  max-height: 18.75rem;\n  overflow: auto;\n}\n.error-list-container {\n  width: 100%;\n  display: flex !important;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                {{ l.icon }}                                                                                  error                                                                                                                                                                                                                                                                                                          error                                                                                                                                                                                                                                                                                                          error                                                                                                                                                                                                                                                                                                          error                                                                                                                                                                                                                                                                                                                                            {{ l.icon }}                                                                      error                                                                                                                                                                                                                                                                        error                                                                                                                                                                                                                                                                        error                                                                                                                                                                                                                                                                        error                                                                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DebugLogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DebugLogsModule.html":{"url":"modules/DebugLogsModule.html","title":"module - DebugLogsModule","body":"\n                   \n\n\n\n\n    Modules\n    DebugLogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DebugLogsModule\n\n\n\ncluster_DebugLogsModule_imports\n\n\n\ncluster_DebugLogsModule_declarations\n\n\n\ncluster_DebugLogsModule_exports\n\n\n\n\nDebugLogsComponent\n\nDebugLogsComponent\n\n\n\nDebugLogsModule\n\nDebugLogsModule\n\nDebugLogsModule -->\n\nDebugLogsComponent->DebugLogsModule\n\n\n\n\n\nDebugLogsComponent \n\nDebugLogsComponent \n\nDebugLogsComponent  -->\n\nDebugLogsModule->DebugLogsComponent \n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nDebugLogsModule -->\n\nSidenavHeaderModule->DebugLogsModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nDebugLogsModule -->\n\nSidenavModule->DebugLogsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/debug-logs/debug-logs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DebugLogsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SidenavHeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DebugLogsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavModule } from '../sidenav/sidenav.module';\nimport { DebugLogsComponent } from './debug-logs.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SidenavHeaderModule } from '../sidenav-header/sidenav-header.module';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@NgModule({\n  declarations: [DebugLogsComponent],\n  imports: [\n    CommonModule,\n    SidenavModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatTabsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SidenavHeaderModule,\n  ],\n  exports: [DebugLogsComponent],\n})\nexport class DebugLogsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Degree.html":{"url":"interfaces/Degree.html","title":"interface - Degree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Degree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            proteinPresence\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proteinPresence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proteinPresence:         PROTEIN_PRESENCE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PROTEIN_PRESENCE\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteCompareSheet.html":{"url":"classes/DeleteCompareSheet.html","title":"class - DeleteCompareSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteCompareSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(i: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        i\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[DELETE] Compare Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiscrepencyId.html":{"url":"classes/DiscrepencyId.html","title":"class - DiscrepencyId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiscrepencyId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                discrepencyStructures\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discrepencyStructures: DiscrepencyStructure[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discrepencyStructures\n                                                  \n                                                        \n                                                                    DiscrepencyStructure[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        discrepencyStructures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DiscrepencyStructure[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[DISCREPENCY] Update discrepency Id List'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiscrepencyLabel.html":{"url":"classes/DiscrepencyLabel.html","title":"class - DiscrepencyLabel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiscrepencyLabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                discrepencyStructures\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discrepencyStructures: DiscrepencyStructure[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discrepencyStructures\n                                                  \n                                                        \n                                                                    DiscrepencyStructure[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        discrepencyStructures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DiscrepencyStructure[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[DISCREPENCY] Update discrepency Label List'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DiscrepencyStructure.html":{"url":"interfaces/DiscrepencyStructure.html","title":"interface - DiscrepencyStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DiscrepencyStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            groupName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DoSearch.html":{"url":"classes/DoSearch.html","title":"class - DoSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DoSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                lastClickedOption\n                            \n                            \n                                    Public\n                                searchStructures\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(searchStructures: SearchStructure[], lastClickedOption: SearchStructure)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchStructures\n                                                  \n                                                        \n                                                                    SearchStructure[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastClickedOption\n                                                  \n                                                        \n                                                                        SearchStructure\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastClickedOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchStructure\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchStructures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SearchStructure[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SEARCH] Update Search List'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocsComponent.html":{"url":"components/DocsComponent.html","title":"component - DocsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/docs/docs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-docs\n            \n\n\n\n            \n                styleUrls\n                ./docs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./docs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                copyrightYear\n                            \n                            \n                                docsData\n                            \n                            \n                                    Public\n                                docsService\n                            \n                            \n                                faChevronRight\n                            \n                            \n                                faEnvelope\n                            \n                            \n                                faPhone\n                            \n                            \n                                    Public\n                                ga\n                            \n                            \n                                masterSheetLink\n                            \n                            \n                                REGISTRY\n                            \n                            \n                                selected\n                            \n                            \n                                showHeader\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                onLatest\n                            \n                            \n                                openData\n                            \n                            \n                                openDataOld\n                            \n                            \n                                openGithub\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, router: Router, activatedRoute: ActivatedRoute, docsService: DocsService, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/docs/docs.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        docsService\n                                                  \n                                                        \n                                                                        DocsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(idx: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/docs/docs.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idx\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLatest\n                        \n                    \n                \n            \n            \n                \nonLatest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/docs/docs.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openData\n                        \n                    \n                \n            \n            \n                \nopenData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/docs/docs.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDataOld\n                        \n                    \n                \n            \n            \n                \nopenDataOld()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/docs/docs.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGithub\n                        \n                    \n                \n            \n            \n                \nopenGithub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/docs/docs.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyrightYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        docsData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        docsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DocsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faChevronRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faChevronRight\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faEnvelope\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faEnvelope\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPhone\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterSheetLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REGISTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REGISTRY\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { faChevronRight, faEnvelope, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ConfigService } from '../../app-config.service';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { DocsService } from '../../services/docs.service';\nimport { REGISTRY } from '../../static/docs';\n\n@Component({\n  selector: 'app-docs',\n  templateUrl: './docs.component.html',\n  styleUrls: ['./docs.component.scss'],\n})\nexport class DocsComponent implements OnInit {\n  window = window;\n  faPhone = faPhone;\n  faEnvelope = faEnvelope;\n  faChevronRight = faChevronRight;\n  showHeader = true;\n  docsData!: string;\n  REGISTRY = REGISTRY;\n  selected!: number;\n  copyrightYear = new Date().getFullYear();\n  masterSheetLink!: string;\n\n  constructor(\n    public configService: ConfigService,\n    private readonly router: Router,\n    public activatedRoute: ActivatedRoute,\n    public docsService: DocsService,\n    public ga: GoogleAnalyticsService,\n  ) {\n    this.configService.config$.subscribe((config) => {\n      this.masterSheetLink = config['masterSheetLink'] as string;\n    });\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params) => {\n      if (this.docsService.getID(params['id']) >= 0) {\n        this.selected = this.docsService.getID(params['id']);\n        this.docsService.getData(params['id']);\n      } else {\n        this.router.navigate(['/docs', 'introduction']);\n      }\n    });\n\n    this.docsService.docsData.subscribe((data) => {\n      if (data) {\n        this.docsData = data;\n      }\n    });\n  }\n\n  onChange(idx: number) {\n    this.selected = idx;\n    const title = this.docsService.getTitle(idx);\n    this.router.navigate(['/docs', title]);\n    // Router navigation already fires Google Analytics events, see app.component.ts\n  }\n\n  onLatest() {\n    this.router.navigate(['/']);\n    this.ga.event(GaAction.NAV, GaCategory.DOCS, 'Back to Latest Release');\n  }\n\n  openGithub() {\n    window.open('https://github.com/hubmapconsortium/ccf-asct-reporter', '_blank');\n    this.ga.event(GaAction.NAV, GaCategory.DOCS, 'Open Github');\n  }\n\n  openData() {\n    window.open(this.masterSheetLink, '_blank');\n    this.ga.event(GaAction.NAV, GaCategory.DOCS, 'Open Data Tables');\n  }\n\n  openDataOld() {\n    window.open(\n      'https://docs.google.com/spreadsheets/d/1j_SLhFipRWUcRZrCDfNH15OWoiLf7cJks7NVppe3htI/edit#gid=1268820100',\n      '_blank',\n    );\n    this.ga.event(GaAction.NAV, GaCategory.DOCS, 'Open Old Data Tables');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n          \n            Master Tables\n            GitHub\n            Old Tables\n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          Latest Release\n          \n        \n        \n        \n          {{ item.title }}\n        \n      \n\n      \n        \n          \n            ASCT+B REPORTER DOCS\n            Welcome to the ASCT+B Reporter Documentation!\n          \n\n          \n            \n          \n\n          \n            \n          \n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./docs.component.scss\n                \n                .dark {\n  background-color: #262626;\n}\n\na {\n  color: white;\n}\n\n.navbar {\n  position: fixed;\n  z-index: 100;\n}\n\n.title2 {\n  font-family: 'Poppins', sans-serif;\n  font-size: 3.125rem;\n  line-height: 2.75rem;\n  font-weight: 700;\n  hyphens: auto;\n  letter-spacing: 0.25rem;\n}\n\n.desc {\n  font-size: 14pt;\n  font-weight: 400;\n  line-height: 1.5625rem;\n}\n\n.top-padding {\n  padding-top: 8rem;\n}\n\n.drawer {\n  width: 18rem;\n}\n\nh1 {\n  font-weight: 800 !important;\n  font-family: 'Poppins', sans-serif;\n}\n\n.menu-item {\n  transform: all 0.3s;\n  cursor: pointer;\n\n  &:hover:not(.bg-light) {\n    transition: all 0.3s;\n    background-color: #f2f2f2 !important;\n  }\n}\n\n.bg-light {\n  color: #444a65;\n  background-color: #e1e1e1 !important;\n}\n\n.nav-height {\n  padding-top: 62px;\n}\n\n.goto {\n  transition: all 0.3s;\n  cursor: pointer;\n\n  &:hover {\n    color: white;\n    background-color: #444a65;\n  }\n\n  &:active {\n    color: white;\n    background-color: #2e3243;\n  }\n}\n\n.md-file ::ng-deep {\n  a {\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n}\n\n.icon-right {\n  padding-right: 1rem;\n}\n\n.h6-title {\n  padding-left: 3rem;\n}\n\n.navbar-options {\n  a {\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n  .github {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Master Tables            GitHub            Old Tables                                                            Latest Release                                            {{ item.title }}                                                  ASCT+B REPORTER DOCS            Welcome to the ASCT+B Reporter Documentation!                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocsModule.html":{"url":"modules/DocsModule.html","title":"module - DocsModule","body":"\n                   \n\n\n\n\n    Modules\n    DocsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocsModule\n\n\n\ncluster_DocsModule_imports\n\n\n\ncluster_DocsModule_declarations\n\n\n\ncluster_DocsModule_exports\n\n\n\n\nDocsComponent\n\nDocsComponent\n\n\n\nDocsModule\n\nDocsModule\n\nDocsModule -->\n\nDocsComponent->DocsModule\n\n\n\n\n\nDocsComponent \n\nDocsComponent \n\nDocsComponent  -->\n\nDocsModule->DocsComponent \n\n\n\n\n\nDocsNavModule\n\nDocsNavModule\n\nDocsModule -->\n\nDocsNavModule->DocsModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nDocsModule -->\n\nFooterModule->DocsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/docs/docs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DocsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DocsNavModule\n                        \n                        \n                            FooterModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DocsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocsComponent } from './docs.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { DocsNavModule } from './docs-nav/docs-nav.module';\nimport { RouterModule } from '@angular/router';\nimport { FooterModule } from '../../components/footer/footer.module';\n\n@NgModule({\n  declarations: [DocsComponent],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    MarkdownModule,\n    FontAwesomeModule,\n    DocsNavModule,\n    RouterModule,\n    FooterModule,\n  ],\n  exports: [DocsComponent],\n})\nexport class DocsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocsNavComponent.html":{"url":"components/DocsNavComponent.html","title":"component - DocsNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocsNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/docs/docs-nav/docs-nav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-docs-nav\n            \n\n\n\n            \n                styleUrls\n                ./docs-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./docs-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faArrowLeft\n                            \n                            \n                                faArrowRight\n                            \n                            \n                                REGISTRY\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                next\n                            \n                            \n                                prev\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nextClick\n                            \n                            \n                                prevClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        next\n                    \n                \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prev\n                    \n                \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nextClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prevClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        faArrowLeft\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faArrowLeft\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faArrowRight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faArrowRight\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REGISTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REGISTRY\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/docs/docs-nav/docs-nav.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { REGISTRY } from '../../../static/docs';\n\n@Component({\n  selector: 'app-docs-nav',\n  templateUrl: './docs-nav.component.html',\n  styleUrls: ['./docs-nav.component.scss'],\n})\nexport class DocsNavComponent {\n  REGISTRY = REGISTRY;\n  faArrowRight = faArrowRight;\n  faArrowLeft = faArrowLeft;\n\n  @Input() next: number | null = null;\n  @Input() prev: number | null = null;\n  @Output() nextClick = new EventEmitter();\n  @Output() prevClick = new EventEmitter();\n}\n\n    \n\n    \n        \n  = 0\"\n    (click)=\"prevClick.emit()\"\n  >\n    \n    \n      Previous\n      {{ REGISTRY[prev].title }}\n    \n  \n\n  \n    \n      Next\n      {{ REGISTRY[next].title }}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./docs-nav.component.scss\n                \n                .bip {\n  font-size: 10pt;\n}\n\n.item {\n  border-radius: 0.5rem;\n  border: 2px solid #ececec;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    transition: all 0.2s;\n    border-color: #bfbfbf;\n  }\n\n  &:active {\n    background-color: #f4f4f4;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  = 0\"    (click)=\"prevClick.emit()\"  >              Previous      {{ REGISTRY[prev].title }}                  Next      {{ REGISTRY[next].title }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocsNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocsNavModule.html":{"url":"modules/DocsNavModule.html","title":"module - DocsNavModule","body":"\n                   \n\n\n\n\n    Modules\n    DocsNavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocsNavModule\n\n\n\ncluster_DocsNavModule_declarations\n\n\n\ncluster_DocsNavModule_exports\n\n\n\n\nDocsNavComponent\n\nDocsNavComponent\n\n\n\nDocsNavModule\n\nDocsNavModule\n\nDocsNavModule -->\n\nDocsNavComponent->DocsNavModule\n\n\n\n\n\nDocsNavComponent \n\nDocsNavComponent \n\nDocsNavComponent  -->\n\nDocsNavModule->DocsNavComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/docs/docs-nav/docs-nav.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DocsNavComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DocsNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { DocsNavComponent } from './docs-nav.component';\n\n@NgModule({\n  declarations: [DocsNavComponent],\n  imports: [CommonModule, FontAwesomeModule],\n  exports: [DocsNavComponent],\n})\nexport class DocsNavModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocsService.html":{"url":"injectables/DocsService.html","title":"injectable - DocsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DocsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/docs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docsData\n                            \n                            \n                                REGISTRY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                getID\n                            \n                            \n                                getTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/docs.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/docs.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getID\n                        \n                    \n                \n            \n            \n                \ngetID(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/docs.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTitle\n                        \n                    \n                \n            \n            \n                \ngetTitle(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/docs.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        docsData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/docs.service.ts:18\n                        \n                    \n\n            \n                \n                    Behavior subject to return the markdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REGISTRY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REGISTRY\n                    \n                \n                    \n                        \n                                Defined in src/app/services/docs.service.ts:13\n                        \n                    \n\n            \n                \n                    List of all the docs pages\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { REGISTRY } from '../static/docs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DocsService {\n  /**\n   * List of all the docs pages\n   */\n  REGISTRY = REGISTRY;\n\n  /**\n   * Behavior subject to return the markdown\n   */\n  docsData = new BehaviorSubject('');\n  constructor(private readonly http: HttpClient) {}\n\n  getData(title: string) {\n    const index = REGISTRY.map((e) => e.urlTitle).indexOf(title);\n    this.http.get(REGISTRY[index].path, { responseType: 'text' }).subscribe((data) => {\n      this.docsData.next(data);\n    });\n  }\n\n  getID(title: string) {\n    return REGISTRY.map((e) => e.urlTitle).indexOf(title);\n  }\n\n  getTitle(id: number) {\n    return REGISTRY[id].urlTitle;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DoiComponent.html":{"url":"components/DoiComponent.html","title":"component - DoiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DoiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/doi/doi.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-doi\n            \n\n\n\n            \n                styleUrls\n                ./doi.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./doi.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                error\n                            \n                            \n                                loading\n                            \n                            \n                                noId\n                            \n                            \n                                    Public\n                                sheetRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DOI[], sheetRef: MatBottomSheetRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/doi/doi.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DOI[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheetRef\n                                                  \n                                                        \n                                                                    MatBottomSheetRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/doi/doi.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DOI[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_BOTTOM_SHEET_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/doi/doi.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Error\n\n                    \n                \n                \n                    \n                        Default value : { hasError: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/doi/doi.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/doi/doi.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/doi/doi.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheetRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatBottomSheetRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/doi/doi.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { Error } from '../../models/response.model';\nimport { DOI } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-doi',\n  templateUrl: './doi.component.html',\n  styleUrls: ['./doi.component.scss'],\n})\nexport class DoiComponent implements OnInit {\n  loading = true;\n  noId = false;\n  error: Error = { hasError: false };\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: DOI[],\n    public sheetRef: MatBottomSheetRef,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = false;\n\n    /**\n     * Trimming the intial part of the doi property as it as \"DOI: \" in its respective property.\n     */\n    this.data = this.data.map((item) => {\n      console.log(item);\n      if (item.doi.toUpperCase().search('DOI') === 0) {\n        item.doi = item.doi.substring(5);\n      }\n      return item;\n    });\n  }\n\n  close() {\n    this.sheetRef.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      DOI Details\n    \n    \n      \n        close\n      \n    \n  \n  \n    \n      \n        DOI: \n        \n          {{ item.doi }}\n        \n\n        \n\n        Id: \n        \n          {{ item.id }}\n        \n\n        \n\n        Notes: \n        \n          {{ item.notes }}\n        \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./doi.component.scss\n                \n                .doi {\n  max-height: 18.75rem;\n  overflow: auto;\n}\n.loading-wait {\n  width: 10%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            DOI Details                      close                                DOI:                   {{ item.doi }}                        Id:                   {{ item.id }}                        Notes:                   {{ item.notes }}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DoiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DoiModule.html":{"url":"modules/DoiModule.html","title":"module - DoiModule","body":"\n                   \n\n\n\n\n    Modules\n    DoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DoiModule\n\n\n\ncluster_DoiModule_exports\n\n\n\ncluster_DoiModule_declarations\n\n\n\n\nDoiComponent\n\nDoiComponent\n\n\n\nDoiModule\n\nDoiModule\n\nDoiModule -->\n\nDoiComponent->DoiModule\n\n\n\n\n\nDoiComponent \n\nDoiComponent \n\nDoiComponent  -->\n\nDoiModule->DoiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/doi/doi.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DoiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DoiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DoiComponent } from './doi.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n\n@NgModule({\n  declarations: [DoiComponent],\n  imports: [CommonModule, MatIconModule, MatButtonModule, MatBottomSheetModule],\n  exports: [DoiComponent],\n})\nexport class DoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DuplicateId.html":{"url":"classes/DuplicateId.html","title":"class - DuplicateId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DuplicateId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                discrepencyStructures\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(discrepencyStructures: DiscrepencyStructure[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discrepencyStructures\n                                                  \n                                                        \n                                                                    DiscrepencyStructure[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        discrepencyStructures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DiscrepencyStructure[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[DISCREPENCY] Update duplicate Id List'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityWithNoOtherEntity.html":{"url":"interfaces/EntityWithNoOtherEntity.html","title":"interface - EntityWithNoOtherEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityWithNoOtherEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            organName\n                                        \n                                \n                                \n                                        \n                                            structure\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        structure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        structure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Error.html":{"url":"interfaces/Error.html","title":"interface - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/response.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hasError\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasGidError\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            msg\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasGidError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasGidError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: any;\n  msg: string;\n  status: number;\n}\n\nexport interface Error {\n  hasError?: boolean;\n  msg?: string;\n  status?: number;\n  hasGidError?: boolean;\n}\n\nexport enum SnackbarType {\n  success = 'success',\n  error = 'error',\n  warning = 'warning',\n}\n\nexport interface ExportVega {\n  option: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  spec?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/error/error.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n\n\n            \n                styleUrls\n                ./error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/error/error.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Error } from '../../models/response.model';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n})\nexport class ErrorComponent {\n  @Input() error!: Error;\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n        Error!\n        \n          The visualization could not be rendered due to some errors. Below mentioned are a list of problems that\n            could’ve occurred.\n        \n        \n          \n            \n            \n              Please copy and use the sheet URL from the Address bar like from above example.\n            \n            \n              Do not use the Share URL from Google Sheets (URLs ending with ?usp=sharing).\n            \n            \n              The data version that you selected is deprecated for the sheet. Click on this link to see the deprecated\n              sheets.\n            \n            The format of the data didn't match the format of the master tables.\n            Network issues.\n          \n          \n            To report this issue, please reach out to us,\n            here.\n          \n        \n        \n          {{ error.msg }}\n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./error.component.scss\n                \n                .lh {\n  line-height: 1.5625rem;\n}\n.error-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.contact-us-link {\n  color: rgb(64, 132, 201);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Error!                  The visualization could not be rendered due to some errors. Below mentioned are a list of problems that            could’ve occurred.                                                                Please copy and use the sheet URL from the Address bar like from above example.                                      Do not use the Share URL from Google Sheets (URLs ending with ?usp=sharing).                                      The data version that you selected is deprecated for the sheet. Click on this link to see the deprecated              sheets.                        The format of the data didn\\'t match the format of the master tables.            Network issues.                                To report this issue, please reach out to us,            here.                                    {{ error.msg }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_exports\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nErrorComponent->ErrorModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nErrorModule->ErrorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/error/error.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorComponent } from './error.component';\n\n@NgModule({\n  declarations: [ErrorComponent],\n  imports: [CommonModule],\n  exports: [ErrorComponent],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExportVega.html":{"url":"interfaces/ExportVega.html","title":"interface - ExportVega","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExportVega\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/response.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            option\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spec\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        option\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        option:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spec:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: any;\n  msg: string;\n  status: number;\n}\n\nexport interface Error {\n  hasError?: boolean;\n  msg?: string;\n  status?: number;\n  hasGidError?: boolean;\n}\n\nexport enum SnackbarType {\n  success = 'success',\n  error = 'error',\n  warning = 'warning',\n}\n\nexport interface ExportVega {\n  option: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  spec?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchAllOrganData.html":{"url":"classes/FetchAllOrganData.html","title":"class - FetchAllOrganData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchAllOrganData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: Sheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] All Organ Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchCompareData.html":{"url":"classes/FetchCompareData.html","title":"class - FetchCompareData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchCompareData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                compareData\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(compareData: CompareData[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        compareData\n                                                  \n                                                        \n                                                                        CompareData[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        compareData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompareData[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Compare Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchDataFromAssets.html":{"url":"classes/FetchDataFromAssets.html","title":"class - FetchDataFromAssets","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchDataFromAssets\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(version: string, sheet: Sheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Data from Assets'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchInitialPlaygroundData.html":{"url":"classes/FetchInitialPlaygroundData.html","title":"class - FetchInitialPlaygroundData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchInitialPlaygroundData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet?: Sheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Initial Playground Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:79\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchPlaygroundUploadData.html":{"url":"classes/FetchPlaygroundUploadData.html","title":"class - FetchPlaygroundUploadData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchPlaygroundUploadData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: string[][])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    string[][]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Playground Upload Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:89\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSelectedOrganData.html":{"url":"classes/FetchSelectedOrganData.html","title":"class - FetchSelectedOrganData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSelectedOrganData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                comparisonDetails\n                            \n                            \n                                    Public\n                                omapSelectedOrgans\n                            \n                            \n                                    Public\n                                selectedOrgans\n                            \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: Sheet, selectedOrgans: string[], omapSelectedOrgans: string[], comparisonDetails?: CompareData[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedOrgans\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        omapSelectedOrgans\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comparisonDetails\n                                                  \n                                                        \n                                                                        CompareData[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        comparisonDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompareData[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        omapSelectedOrgans\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedOrgans\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Selected Organs Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSheetData.html":{"url":"classes/FetchSheetData.html","title":"class - FetchSheetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSheetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: Sheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Sheet Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchValidOmapProtiens.html":{"url":"classes/FetchValidOmapProtiens.html","title":"class - FetchValidOmapProtiens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchValidOmapProtiens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:109\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Valid OMAP Protiens Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:109\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadComponent.html":{"url":"components/FileUploadComponent.html","title":"component - FileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/file-upload/file-upload.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                Validator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}\n                            {\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}\n                \n            \n\n\n            \n                selector\n                app-file-upload\n            \n\n\n\n            \n                styleUrls\n                ./file-upload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fileName\n                            \n                            \n                                fileUploadError\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                            \n                                onValidatorChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                registerOnValidatorChange\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileFormDataEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        fileFormDataEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/file-upload/file-upload.component.ts:31\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClick\n                        \n                    \n                \n            \n            \n                \nonClick(fileUpload: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileUpload\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(onChange: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onChange\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(onTouched: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onTouched\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnValidatorChange\n                        \n                    \n                \n            \n            \n                \nregisterOnValidatorChange(onValidatorChange: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                onValidatorChange\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(_control: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/file-upload/file-upload.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/file-upload/file-upload.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileUploadError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/file-upload/file-upload.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/file-upload/file-upload.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/file-upload/file-upload.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onValidatorChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/file-upload/file-upload.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: FileUploadComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: FileUploadComponent,\n    },\n  ],\n})\nexport class FileUploadComponent implements ControlValueAccessor, Validator {\n  fileName = '';\n\n  @Output() fileFormDataEvent = new EventEmitter();\n\n  onFileSelected(event: Event) {\n    const file = (event.target as HTMLInputElement | null)?.files?.[0];\n\n    if (file) {\n      this.fileName = file.name;\n      const formData = new FormData();\n      formData.append('csvFile', file);\n      this.fileFormDataEvent.emit(formData);\n      this.onChange(this.fileName);\n    }\n  }\n\n  fileUploadError = false;\n\n  onChange = (_fileName: string) => {};\n\n  onTouched = () => {};\n\n  onValidatorChange = () => {};\n\n  onClick(fileUpload: HTMLInputElement) {\n    this.onTouched();\n    fileUpload.click();\n  }\n\n  writeValue(value: string) {\n    this.fileName = value;\n  }\n\n  registerOnChange(onChange: (value: string) => void) {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: () => void) {\n    this.onTouched = onTouched;\n  }\n\n  registerOnValidatorChange(onValidatorChange: () => void) {\n    this.onValidatorChange = onValidatorChange;\n  }\n\n  validate(_control: AbstractControl): ValidationErrors | null {\n    return null;\n  }\n}\n\n    \n\n    \n        \n\n\n  upload_file\n  Upload file (CSV or XLSX)\n\n\n\n  {{ fileName || 'No file loaded' }}\n\n\n    \n\n    \n                \n                    ./file-upload.component.scss\n                \n                :host {\n  display: block;\n  width: 25rem;\n  height: 6.25rem;\n\n  .file-input {\n    display: none;\n  }\n\n  .file-upload {\n    color: #757575;\n  }\n\n  button {\n    margin-top: 2rem;\n    display: flex;\n    width: 14.688rem;\n    height: 3.125rem;\n    align-items: center;\n    background: white;\n    border-radius: 0.3rem;\n    border-color: #9d9e9a;\n    border-style: solid;\n  }\n\n  mat-icon {\n    color: #9d9e9a;\n  }\n\n  .file-name {\n    padding-top: 0.7rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  upload_file  Upload file (CSV or XLSX)  {{ fileName || \\'No file loaded\\' }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileUploadModule.html":{"url":"modules/FileUploadModule.html","title":"module - FileUploadModule","body":"\n                   \n\n\n\n\n    Modules\n    FileUploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileUploadModule\n\n\n\ncluster_FileUploadModule_exports\n\n\n\ncluster_FileUploadModule_FileUploadComponent_providers\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nFileUploadModule -->\n\nFileUploadComponent->FileUploadModule\n\n\n\n\n\nFileUploadComponent \n\nFileUploadComponent \n\nFileUploadComponent  -->\n\nFileUploadModule->FileUploadComponent \n\n\n\n\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}\n\nFileUploadComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}->FileUploadComponent\n\n\n\n\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}\n\nFileUploadComponent -->\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}->FileUploadComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/file-upload/file-upload.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FileUploadComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileUploadComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FileUploadComponent } from './file-upload.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [FileUploadComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    FontAwesomeModule,\n  ],\n  exports: [FileUploadComponent],\n})\nexport class FileUploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlatNode.html":{"url":"interfaces/FlatNode.html","title":"interface - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/indented-list/indented-list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expandable\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expandable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTree, MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { ILNode } from '../../models/indent.model';\nimport { Row, Sheet } from '../../models/sheet.model';\nimport { IndentedListService } from './indented-list.service';\n\ninterface Node {\n  name: string;\n  ontologyId: string;\n  children?: Node[];\n}\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  ontologyId: string;\n  level: number;\n}\n\n@Component({\n  selector: 'app-indent',\n  templateUrl: './indented-list.component.html',\n  styleUrls: ['./indented-list.component.scss'],\n})\nexport class IndentedListComponent implements OnInit, OnDestroy, AfterViewInit {\n  indentData = [];\n  activateNode?: unknown;\n  visible = false;\n\n  @Input() dataVersion?: unknown;\n  @Input() currentSheet!: Sheet;\n  @Input() sheetData: Row[] = [];\n  @Output() closeIL = new EventEmitter();\n  @Output() openBottomSheet = new EventEmitter();\n\n  @ViewChild('indentTree') indentTree!: MatTree;\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n\n  treeControl = new FlatTreeControl(\n    (node) => node.level,\n    (node) => node.expandable,\n  );\n\n  private readonly transformer = (node: Node, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      ontologyId: node.ontologyId,\n      level,\n    };\n  };\n\n  treeFlattener = new MatTreeFlattener(\n    this.transformer,\n    (node) => node.level,\n    (node) => node.expandable,\n    (node) => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor(public indentService: IndentedListService) {}\n\n  ngOnInit(): void {\n    this.indentService.indentData$.subscribe((data) => {\n      if (data.data) {\n        this.initializeTree(data.data);\n        this.visible = true;\n      } else {\n        this.visible = false;\n      }\n    });\n\n    this.indentService.makeIndentData(this.currentSheet, this.sheetData);\n  }\n\n  ngAfterViewInit(): void {\n    if (this.indentTree) {\n      this.indentTree.treeControl.expandAll();\n    }\n  }\n\n  ngOnDestroy() {\n    this.visible = false;\n  }\n\n  public initializeTree(data: ILNode) {\n    this.dataSource.data = [data];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                            \n                                copyrightYear\n                            \n                            \n                                faEnvelope\n                            \n                            \n                                faFacebookSquare\n                            \n                            \n                                faGithub\n                            \n                            \n                                faGlobe\n                            \n                            \n                                faPhone\n                            \n                            \n                                faTwitterSquare\n                            \n                            \n                                    Public\n                                ga\n                            \n                            \n                                masterSheetLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openData\n                            \n                            \n                                openDocs\n                            \n                            \n                                openFaq\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, router: Router, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/footer/footer.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openData\n                        \n                    \n                \n            \n            \n                \nopenData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/footer/footer.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDocs\n                        \n                    \n                \n            \n            \n                \nopenDocs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/footer/footer.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openFaq\n                        \n                    \n                \n            \n            \n                \nopenFaq()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/footer/footer.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyrightYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faEnvelope\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faEnvelope\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faFacebookSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faFacebookSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGithub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGithub\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGlobe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGlobe\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPhone\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faTwitterSquare\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faTwitterSquare\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterSheetLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faFacebookSquare, faGithub, faTwitterSquare } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons';\nimport { faGlobe, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ConfigService } from '../../app-config.service';\nimport { GaAction, GaCategory } from '../../models/ga.model';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {\n  faGlobe = faGlobe;\n  faGithub = faGithub;\n  faPhone = faPhone;\n  faEnvelope = faEnvelope;\n  faFacebookSquare = faFacebookSquare;\n  faTwitterSquare = faTwitterSquare;\n\n  copyrightYear = new Date().getFullYear();\n  masterSheetLink = '';\n\n  constructor(\n    public configService: ConfigService,\n    private readonly router: Router,\n    public ga: GoogleAnalyticsService,\n  ) {\n    this.configService.config$.subscribe((config) => {\n      this.masterSheetLink = config['masterSheetLink'] as string;\n    });\n  }\n\n  openDocs() {\n    this.router.navigate(['/docs']);\n    this.ga.event(GaAction.NAV, GaCategory.FOOTER, 'Open Docs');\n  }\n\n  openFaq() {\n    this.router.navigate(['/docs/faq']);\n    this.ga.event(GaAction.NAV, GaCategory.FOOTER, 'Open FAQ');\n  }\n\n  openData() {\n    window.open(this.masterSheetLink, '_blank');\n    this.ga.event(GaAction.NAV, GaCategory.FOOTER, 'Open Master Tables');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        ASCT+B Reporter\n        \n          A state of the art visualization tool to envision large datasets developed by CNS, Indiana University.\n        \n        \n          \n          \n        \n      \n      \n        Help\n        \n          • Documentation\n          • FAQ\n          \n            •\n            Master Data Tables\n          \n        \n      \n      \n        Links\n        \n          \n            •\n            Indiana University\n          \n          \n            •\n            CI for Network Science Center\n          \n          \n            •\n            HuBMAP Consortium\n          \n          \n            •\n            Policy\n          \n          \n            •\n            Terms & Conditions\n          \n        \n      \n      \n        Location\n        700 N. Woodlawn Ave. Luddy Hall, Suite 4018 Bloomington, IN 47408\n         (812) 856 7034\n        \n          \n          infoccf&#64;indiana.edu\n        \n      \n    \n    \n      \n        \n          © {{ copyrightYear }}. All Rights Reserved. MIT License.\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                a {\n  cursor: pointer;\n}\n\n.footer {\n  background: #262626;\n  color: white;\n  .links,\n  .help {\n    ul {\n      list-style-type: none;\n    }\n    li a {\n      text-decoration: none;\n      color: white;\n      transition: color 0.2s;\n      &:hover {\n        text-decoration: none;\n        color: #4180cb;\n      }\n    }\n  }\n  .about-company {\n    fa-icon {\n      font-size: 2rem;\n    }\n    a {\n      color: rgb(249, 249, 249);\n      transition: color 0.2s;\n      &:hover {\n        color: #4180cb;\n      }\n    }\n  }\n  .location {\n    i {\n      font-size: 1.125rem;\n    }\n  }\n  .copyright p {\n    border-top: 0.0625rem solid rgba(255, 255, 255, 0.1);\n  }\n}\n\n.social-media {\n  a {\n    padding-left: 0.2rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ASCT+B Reporter                  A state of the art visualization tool to envision large datasets developed by CNS, Indiana University.                                                                Help                  • Documentation          • FAQ                      •            Master Data Tables                                      Links                              •            Indiana University                                •            CI for Network Science Center                                •            HuBMAP Consortium                                •            Policy                                •            Terms & Conditions                                      Location        700 N. Woodlawn Ave. Luddy Hall, Suite 4018 Bloomington, IN 47408         (812) 856 7034                            infoccf@indiana.edu                                              © {{ copyrightYear }}. All Rights Reserved. MIT License.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FooterModule.html":{"url":"modules/FooterModule.html","title":"module - FooterModule","body":"\n                   \n\n\n\n\n    Modules\n    FooterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FooterModule\n\n\n\ncluster_FooterModule_declarations\n\n\n\ncluster_FooterModule_exports\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nFooterModule\n\nFooterModule\n\nFooterModule -->\n\nFooterComponent->FooterModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nFooterModule->FooterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/footer/footer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FooterComponent } from './footer.component';\n\n@NgModule({\n  declarations: [FooterComponent],\n  imports: [CommonModule, MatIconModule, MatButtonModule, MatMenuModule, FontAwesomeModule],\n  exports: [FooterComponent],\n})\nexport class FooterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FunctionsComponent.html":{"url":"components/FunctionsComponent.html","title":"component - FunctionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FunctionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/functions/functions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-functions\n            \n\n\n\n            \n                styleUrls\n                ./functions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./functions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bimodalBTypeOptions\n                            \n                            \n                                bimodalConfig\n                            \n                            \n                                    Public\n                                bms\n                            \n                            \n                                bmSizeOptions\n                            \n                            \n                                    \n                                config$\n                            \n                            \n                                ctSizeOptions\n                            \n                            \n                                faDna\n                            \n                            \n                                    Public\n                                ga\n                            \n                            \n                                sortOptions\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeOptions\n                            \n                            \n                                updateBimodal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, bms: BimodalService, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/functions/functions.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bms\n                                                  \n                                                        \n                                                                        BimodalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/functions/functions.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeOptions\n                        \n                    \n                \n            \n            \n                \nchangeOptions(type: string, field: string, event: MatSelectChange)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/functions/functions.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        MatSelectChange\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBimodal\n                        \n                    \n                \n            \n            \n                \nupdateBimodal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/functions/functions.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bimodalBTypeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : bimodalBTypeOptions\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bimodalConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bmSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : bimodalBSizeOptions\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        config$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState.getBimodalConfig)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ctSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : bimodalCTSizeOptions\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faDna\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faDna\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : bimodalSortOptions\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/functions/functions.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MatSelectChange } from '@angular/material/select';\nimport { faDna } from '@fortawesome/free-solid-svg-icons';\nimport { Select, Store } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { UpdateBimodalConfig } from '../../actions/tree.actions';\nimport {\n  BimodalConfig,\n  bimodalBSizeOptions,\n  bimodalBTypeOptions,\n  bimodalCTSizeOptions,\n  bimodalSortOptions,\n} from '../../models/bimodal.model';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { Error } from '../../models/response.model';\nimport { BimodalService } from '../../modules/tree/bimodal.service';\nimport { TreeState } from '../../store/tree.state';\n\n@Component({\n  selector: 'app-functions',\n  templateUrl: './functions.component.html',\n  styleUrls: ['./functions.component.scss'],\n})\nexport class FunctionsComponent {\n  bmSizeOptions = bimodalBSizeOptions;\n  sortOptions = bimodalSortOptions;\n  ctSizeOptions = bimodalCTSizeOptions;\n  bimodalBTypeOptions = bimodalBTypeOptions;\n  bimodalConfig!: BimodalConfig;\n  faDna = faDna;\n\n  @Input() error!: Error;\n\n  @Select(TreeState.getBimodalConfig) config$!: Observable;\n\n  constructor(\n    public store: Store,\n    public bms: BimodalService,\n    public ga: GoogleAnalyticsService,\n  ) {\n    this.config$.subscribe((config) => {\n      this.bimodalConfig = config;\n    });\n  }\n\n  changeOptions(type: string, field: string, event: MatSelectChange) {\n    (this.bimodalConfig as unknown as Record>)[type][field] = event.value;\n    this.updateBimodal();\n    this.ga.event(\n      GaAction.CLICK,\n      GaCategory.CONTROLS,\n      `Change Cell Type (CT) or Biomarker (BM) Options: ${field}:${event.value}.toLowerCase()`,\n    );\n  }\n\n  updateBimodal() {\n    this.store.dispatch(new UpdateBimodalConfig(this.bimodalConfig)).subscribe((states) => {\n      const data = states.sheetState.data;\n      const treeData = states.treeState.treeData;\n      const bimodalConfig = states.treeState.bimodal.config;\n      const sheetConfig = states.sheetState.sheetConfig;\n      const omapConfig = states.treeState.omapConfig;\n      const filteredProtiens = states.sheetState.filteredProtiens;\n      if (data.length) {\n        this.bms.makeBimodalData(data, treeData, bimodalConfig, false, sheetConfig, omapConfig, filteredProtiens);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Cell Types \n        \n      \n    \n\n    \n      \n        \n          sort_by_alpha\n        \n        \n          \n            \n              {{ option }}\n            \n          \n        \n      \n    \n    \n      \n        \n          bubble_chart\n        \n        \n          \n            \n              {{ option }}\n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n           Biomarkers \n        \n      \n    \n\n    \n      \n        \n          sort_by_alpha\n        \n        \n          \n            \n              {{ option }}\n            \n          \n        \n      \n    \n    \n      \n        \n          bubble_chart\n        \n        \n          \n            \n              {{ option }}\n            \n          \n        \n      \n    \n    \n      \n        \n          \n        \n        \n          \n            \n              {{ option }}\n            \n          \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./functions.component.scss\n                \n                @import './../../../assets/stylesheets/_colors.scss';\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n  box-shadow: none;\n}\n\n.mat-expansion-panel-header:not(.compare) {\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header {\n  transition: all 0.3s;\n  background-color: $secondary !important;\n  padding-left: 0.9375rem !important;\n  padding-right: 0.9375rem !important;\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header:hover {\n  background-color: darken($color: $secondary, $amount: 8%) !important;\n}\n\n.function-button {\n  width: 100% !important;\n  background-color: #f5f5f5;\n  padding: 0 0.625rem 0 0.625rem !important;\n\n  ::ng-deep {\n    .mat-form-field {\n      width: auto !important;\n    }\n\n    .mat-select-value {\n      max-width: 100%;\n      width: auto;\n    }\n  }\n}\n\n.biomarker-icon-type {\n  font-size: 1.125rem;\n}\n\n.d-flex {\n  gap: 1rem;\n}\n\nmat-select {\n  letter-spacing: 0.1px;\n  font-size: 14px;\n  align-items: center;\n}\n\n::ng-deep {\n  .cell-types-panel {\n    left: 74px;\n    position: fixed !important;\n    width: 140px !important;\n  }\n\n  .mat-mdc-select-arrow-wrapper {\n    margin: 14px;\n  }\n}\n\n.control-title ::ng-deep .mat-mdc-select-trigger {\n  .mat-mdc-select-value {\n    width: 7rem;\n    .mat-mdc-select-value-text {\n      padding-left: 1rem;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Cell Types                                               sort_by_alpha                                                    {{ option }}                                                                    bubble_chart                                                    {{ option }}                                                                         Biomarkers                                               sort_by_alpha                                                    {{ option }}                                                                    bubble_chart                                                    {{ option }}                                                                                                                        {{ option }}                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FunctionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FunctionsModule.html":{"url":"modules/FunctionsModule.html","title":"module - FunctionsModule","body":"\n                   \n\n\n\n\n    Modules\n    FunctionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FunctionsModule\n\n\n\ncluster_FunctionsModule_exports\n\n\n\ncluster_FunctionsModule_declarations\n\n\n\n\nFunctionsComponent\n\nFunctionsComponent\n\n\n\nFunctionsModule\n\nFunctionsModule\n\nFunctionsModule -->\n\nFunctionsComponent->FunctionsModule\n\n\n\n\n\nFunctionsComponent \n\nFunctionsComponent \n\nFunctionsComponent  -->\n\nFunctionsModule->FunctionsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/functions/functions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FunctionsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FunctionsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FunctionsComponent } from './functions.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [FunctionsComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatTooltipModule,\n    FontAwesomeModule,\n    MatButtonModule,\n  ],\n  exports: [FunctionsComponent],\n})\nexport class FunctionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GEdge.html":{"url":"interfaces/GEdge.html","title":"interface - GEdge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GEdge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GNode.html":{"url":"interfaces/GNode.html","title":"interface - GNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         Metadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Metadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GaCompareInfo.html":{"url":"interfaces/GaCompareInfo.html","title":"interface - GaCompareInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GaCompareInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ga.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GaAction {\n  // Action for form inputs\n  INPUT = 'input',\n  // Action for toggle ui elements\n  TOGGLE = 'toggle',\n  // Action for slider change enents\n  SLIDE = 'slide',\n  // Action for other button clicks or graph clicks\n  CLICK = 'click',\n  // Action for module navigation or external links\n  NAV = 'nav',\n}\n\n// Various event categories\nexport enum GaCategory {\n  HOME = 'home',\n  FOOTER = 'footer',\n  DOCS = 'docs',\n  REPORT = 'report',\n  NAVBAR = 'navbar',\n  PLAYGROUND = 'playground',\n  GRAPH = 'graph',\n  COMPARE = 'compare',\n  CONTROLS = 'controls',\n  COMPARISON = 'comparison',\n}\n\n// Information to be emitted on each Comparison event\nexport interface GaCompareInfo {\n  title: string;\n  desc: string;\n  link: string;\n  color: string;\n}\n\n// Information to be emitted on each Node Click event\nexport interface GaNodeInfo {\n  oid: string;\n  type: string;\n  x: number;\n  y: number;\n  name: string;\n  groupName: string;\n}\n\n// Information to be emitted on organs selection events\nexport interface GaOrgansInfo {\n  selectedOrgans: GaOrganInfo[];\n  numOrgans: number;\n}\n\n// Organs Information\nexport interface GaOrganInfo {\n  organ: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GaNodeInfo.html":{"url":"interfaces/GaNodeInfo.html","title":"interface - GaNodeInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GaNodeInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ga.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            groupName\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            oid\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GaAction {\n  // Action for form inputs\n  INPUT = 'input',\n  // Action for toggle ui elements\n  TOGGLE = 'toggle',\n  // Action for slider change enents\n  SLIDE = 'slide',\n  // Action for other button clicks or graph clicks\n  CLICK = 'click',\n  // Action for module navigation or external links\n  NAV = 'nav',\n}\n\n// Various event categories\nexport enum GaCategory {\n  HOME = 'home',\n  FOOTER = 'footer',\n  DOCS = 'docs',\n  REPORT = 'report',\n  NAVBAR = 'navbar',\n  PLAYGROUND = 'playground',\n  GRAPH = 'graph',\n  COMPARE = 'compare',\n  CONTROLS = 'controls',\n  COMPARISON = 'comparison',\n}\n\n// Information to be emitted on each Comparison event\nexport interface GaCompareInfo {\n  title: string;\n  desc: string;\n  link: string;\n  color: string;\n}\n\n// Information to be emitted on each Node Click event\nexport interface GaNodeInfo {\n  oid: string;\n  type: string;\n  x: number;\n  y: number;\n  name: string;\n  groupName: string;\n}\n\n// Information to be emitted on organs selection events\nexport interface GaOrgansInfo {\n  selectedOrgans: GaOrganInfo[];\n  numOrgans: number;\n}\n\n// Organs Information\nexport interface GaOrganInfo {\n  organ: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GaOrganInfo.html":{"url":"interfaces/GaOrganInfo.html","title":"interface - GaOrganInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GaOrganInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ga.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GaAction {\n  // Action for form inputs\n  INPUT = 'input',\n  // Action for toggle ui elements\n  TOGGLE = 'toggle',\n  // Action for slider change enents\n  SLIDE = 'slide',\n  // Action for other button clicks or graph clicks\n  CLICK = 'click',\n  // Action for module navigation or external links\n  NAV = 'nav',\n}\n\n// Various event categories\nexport enum GaCategory {\n  HOME = 'home',\n  FOOTER = 'footer',\n  DOCS = 'docs',\n  REPORT = 'report',\n  NAVBAR = 'navbar',\n  PLAYGROUND = 'playground',\n  GRAPH = 'graph',\n  COMPARE = 'compare',\n  CONTROLS = 'controls',\n  COMPARISON = 'comparison',\n}\n\n// Information to be emitted on each Comparison event\nexport interface GaCompareInfo {\n  title: string;\n  desc: string;\n  link: string;\n  color: string;\n}\n\n// Information to be emitted on each Node Click event\nexport interface GaNodeInfo {\n  oid: string;\n  type: string;\n  x: number;\n  y: number;\n  name: string;\n  groupName: string;\n}\n\n// Information to be emitted on organs selection events\nexport interface GaOrgansInfo {\n  selectedOrgans: GaOrganInfo[];\n  numOrgans: number;\n}\n\n// Organs Information\nexport interface GaOrganInfo {\n  organ: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GaOrgansInfo.html":{"url":"interfaces/GaOrgansInfo.html","title":"interface - GaOrgansInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GaOrgansInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ga.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numOrgans\n                                        \n                                \n                                \n                                        \n                                            selectedOrgans\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numOrgans:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedOrgans:     GaOrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GaOrganInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GaAction {\n  // Action for form inputs\n  INPUT = 'input',\n  // Action for toggle ui elements\n  TOGGLE = 'toggle',\n  // Action for slider change enents\n  SLIDE = 'slide',\n  // Action for other button clicks or graph clicks\n  CLICK = 'click',\n  // Action for module navigation or external links\n  NAV = 'nav',\n}\n\n// Various event categories\nexport enum GaCategory {\n  HOME = 'home',\n  FOOTER = 'footer',\n  DOCS = 'docs',\n  REPORT = 'report',\n  NAVBAR = 'navbar',\n  PLAYGROUND = 'playground',\n  GRAPH = 'graph',\n  COMPARE = 'compare',\n  CONTROLS = 'controls',\n  COMPARISON = 'comparison',\n}\n\n// Information to be emitted on each Comparison event\nexport interface GaCompareInfo {\n  title: string;\n  desc: string;\n  link: string;\n  color: string;\n}\n\n// Information to be emitted on each Node Click event\nexport interface GaNodeInfo {\n  oid: string;\n  type: string;\n  x: number;\n  y: number;\n  name: string;\n  groupName: string;\n}\n\n// Information to be emitted on organs selection events\nexport interface GaOrgansInfo {\n  selectedOrgans: GaOrganInfo[];\n  numOrgans: number;\n}\n\n// Organs Information\nexport interface GaOrganInfo {\n  organ: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsSyncService.html":{"url":"injectables/GoogleAnalyticsSyncService.html","title":"injectable - GoogleAnalyticsSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/google-analytics-sync.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, window: Record | null, undefined: IGoogleAnalyticsSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/google-analytics-sync.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Record | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                    IGoogleAnalyticsSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { IGoogleAnalyticsSettings, NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN, NGX_WINDOW } from 'ngx-google-analytics';\nimport { Subscription } from 'rxjs';\n\nimport { ConsentService } from './consent.service';\n\n@Injectable()\nexport class GoogleAnalyticsSyncService implements OnDestroy {\n  private readonly token: string;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(NGX_WINDOW) private readonly window: Record | null,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN)\n    { trackingCode }: IGoogleAnalyticsSettings,\n  ) {\n    this.token = trackingCode;\n\n    this.subscriptions.add(\n      consentService.consentChange.subscribe((consent) => this.toggleGoogleAnalytics(consent === 'rescinded')),\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private toggleGoogleAnalytics(disabled: boolean): void {\n    if (this.window) {\n      this.window[`ga-disable-${this.token}`] = disabled;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Graph.html":{"url":"interfaces/Graph.html","title":"interface - Graph","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Graph\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            edges\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        edges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edges:         GEdge[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GEdge[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:     GNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Graph\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Graph\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HasError.html":{"url":"classes/HasError.html","title":"class - HasError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HasError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: Error)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        Error\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Error\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[ERROR] Has Error'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                            \n                                CONTIRBUTORS\n                            \n                            \n                                copyrightYear\n                            \n                            \n                                dataVersion\n                            \n                            \n                                faEnvelope\n                            \n                            \n                                faGithub\n                            \n                            \n                                faGlobe\n                            \n                            \n                                faLinkedin\n                            \n                            \n                                faPhone\n                            \n                            \n                                    Public\n                                ga\n                            \n                            \n                                IMAGES\n                            \n                            \n                                masterSheetLink\n                            \n                            \n                                    \n                                player\n                            \n                            \n                                sheetOptions\n                            \n                            \n                                VIDEO_ACTIONS\n                            \n                            \n                                    \n                                videoContainer\n                            \n                            \n                                videoSectionSelected\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToPlayground\n                            \n                            \n                                openData\n                            \n                            \n                                openDataOld\n                            \n                            \n                                openDocs\n                            \n                            \n                                openGithub\n                            \n                            \n                                seekVideo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, router: Router, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToPlayground\n                        \n                    \n                \n            \n            \n                \ngoToPlayground()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openData\n                        \n                    \n                \n            \n            \n                \nopenData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDataOld\n                        \n                    \n                \n            \n            \n                \nopenDataOld()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDocs\n                        \n                    \n                \n            \n            \n                \nopenDocs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGithub\n                        \n                    \n                \n            \n            \n                \nopenGithub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekVideo\n                        \n                    \n                \n            \n            \n                \nseekVideo(seconds: number, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONTIRBUTORS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONTIRBUTORS\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyrightYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'latest'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faEnvelope\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faEnvelope\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGithub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGithub\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faGlobe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faGlobe\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faLinkedin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faLinkedin\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faPhone\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPhone\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IMAGES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : IMAGES\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterSheetLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        player\n                        \n                    \n                \n            \n                \n                    \n                        Type :     YouTubePlayer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('tutorialVideo')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SheetDetails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VIDEO_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : VIDEO_ACTIONS\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        videoContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('tutorialVideoContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoSectionSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { YouTubePlayer } from '@angular/youtube-player';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons';\nimport { faGlobe, faPhone } from '@fortawesome/free-solid-svg-icons';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ConfigService } from '../../app-config.service';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { SheetDetails } from '../../models/sheet.model';\nimport { CONTIRBUTORS, IMAGES, VIDEO_ACTIONS } from '../../static/home';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements AfterViewInit, OnDestroy {\n  window = window;\n  dataVersion = 'latest';\n  VIDEO_ACTIONS = VIDEO_ACTIONS;\n  CONTIRBUTORS = CONTIRBUTORS;\n  IMAGES = IMAGES;\n  videoSectionSelected = 0;\n\n  faLinkedin = faLinkedin;\n  faGlobe = faGlobe;\n  faGithub = faGithub;\n  faPhone = faPhone;\n  faEnvelope = faEnvelope;\n\n  copyrightYear = new Date().getFullYear();\n  masterSheetLink = '';\n  sheetOptions: SheetDetails[] = [];\n\n  @ViewChild('tutorialVideoContainer') videoContainer!: ElementRef;\n  @ViewChild('tutorialVideo') player!: YouTubePlayer;\n\n  private videoContainerResizeObserver?: ResizeObserver;\n\n  constructor(\n    public configService: ConfigService,\n    private readonly router: Router,\n    public ga: GoogleAnalyticsService,\n  ) {\n    this.configService.config$.subscribe((config) => {\n      this.masterSheetLink = config['masterSheetLink'] as string;\n    });\n\n    this.configService.sheetConfiguration$.subscribe((sheetOptions) => {\n      this.sheetOptions = sheetOptions;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    const actionsDiv = document.getElementById('actionsHeight');\n    if (actionsDiv) {\n      actionsDiv.style.maxHeight = `${this.player.height + 50}px`;\n      actionsDiv.style.overflowY = 'auto';\n    }\n\n    this.videoContainerResizeObserver = new ResizeObserver((entries) => {\n      const [\n        {\n          contentBoxSize: [{ inlineSize: width, blockSize: height }],\n        },\n      ] = entries;\n\n      this.player.width = width;\n      this.player.height = height;\n    });\n    this.videoContainerResizeObserver.observe(this.videoContainer.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.videoContainerResizeObserver?.disconnect();\n  }\n\n  seekVideo(seconds: number, id: number) {\n    this.videoSectionSelected = id;\n\n    this.player.pauseVideo();\n    this.player.seekTo(seconds, true);\n    this.player.playVideo();\n\n    this.ga.event(GaAction.CLICK, GaCategory.HOME, `Jump to video section: ${VIDEO_ACTIONS[id].header}`);\n  }\n\n  openGithub() {\n    window.open('https://github.com/hubmapconsortium/ccf-asct-reporter', '_blank');\n    this.ga.event(GaAction.NAV, GaCategory.HOME, 'Open Github');\n  }\n\n  openDocs() {\n    this.router.navigate(['/docs']);\n    this.ga.event(GaAction.NAV, GaCategory.HOME, 'Open Docs');\n  }\n\n  openData() {\n    window.open(this.masterSheetLink, '_blank');\n    this.ga.event(GaAction.NAV, GaCategory.HOME, 'Open Master Tables');\n  }\n\n  openDataOld() {\n    window.open(\n      'https://docs.google.com/spreadsheets/d/1j_SLhFipRWUcRZrCDfNH15OWoiLf7cJks7NVppe3htI/edit#gid=1268820100',\n      '_blank',\n    );\n    this.ga.event(GaAction.NAV, GaCategory.HOME, 'Open Old Data Tables');\n  }\n\n  goToPlayground() {\n    this.router.navigate(['/vis'], {\n      queryParams: { playground: 'true', selectedOrgans: 'example' },\n      queryParamsHandling: 'merge',\n    });\n    this.ga.event(GaAction.NAV, GaCategory.HOME, 'Launch Playground Tool');\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n      \n      \n        Docs\n        GitHub\n        \n          Master Tables\n          expand_more\n        \n        \n        Old Tables\n      \n    \n  \n\n  \n  \n\n  \n  \n    \n      ASCT+B REPORTER\n      v2.8\n      \n        The CCF ASCT+B Reporter is a visualization tool for displaying anatomical structures, cell types, and biomarker\n        (ASCT+B) authored by domain experts for different human organs. The tables are used to develop a common\n        coordinate framework (CCF) of the healthy human body, see also\n        Hubmap Consortium website.\n      \n      \n        Go to Visualization\n        Launch Playground\n        \n          \n            {{ option.title }}\n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n    \n  \n\n  \n  \n    \n      \n      ABOUT\n      \n        The ASCT+B Reporter is a state-of-the-art visualization tool. The video gives an overview of the functionalities\n        listed below. Please use the selectors below to skip to any section you’d want to specifically know about.\n      \n    \n    \n    \n      \n        \n          \n            \n              {{ va.header }}\n              {{ va.desc }}\n            \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n\n  \n  \n\n  \n  \n    \n      CONTRIBUTORS\n      \n        Along with various members from the MC-IU Team as well as doctors, researchers and SMEs from various consortia,\n        below listed are the members of the core team working on building the ASCT+B Reporter\n      \n    \n    \n      \n        \n          \n            \n              \n            \n            \n              {{ con.name }}\n              \n                {{ con.desc }}\n              \n              \n                {{ con.mail }}\n              \n            \n            \n              \n                \n                  \n                    \n                  \n                \n                \n                  \n                    \n                  \n                \n                \n                  \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n      \n        AFFILIATIONS\n        \n          Various institutions that the CCF ASCT+B Reporter is affiliated with are listed below.\n        \n      \n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n          \n        \n      \n      \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .example-spacer {\n  flex: 1 1 auto;\n}\n.home-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n.menu-button-item {\n  width: 100%;\n}\n.menu {\n  position: relative;\n  color: #fff !important;\n  cursor: pointer;\n  margin: 1.5rem !important;\n}\n.menu:hover {\n  text-decoration: underline;\n}\n\n.icon {\n  position: absolute;\n}\n.about-main-container {\n  position: relative;\n}\n.video-tutorial {\n  box-shadow: 0.3125rem 1.25rem 1.875rem #e1e1e1;\n  border-radius: 0.625rem;\n  outline: none;\n  overflow: hidden;\n}\n.affiliations-image-container {\n  width: 100%;\n  text-align: center;\n}\n.affiliation-img {\n  cursor: pointer;\n}\na {\n  cursor: pointer;\n}\n\np {\n  margin: 0;\n}\n\n.dark {\n  color: #262626 !important;\n}\n\n.a-nav {\n  // color: #444a65;\n  margin-left: 1.875rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-decoration: none !important;\n  font-size: 0.875rem;\n  color: white;\n}\n\n.a-nav:hover {\n  color: #377eb8;\n}\n\n.linker {\n  color: white;\n  font-weight: 500;\n  cursor: pointer;\n}\n\n.linker:hover {\n  text-decoration: underline;\n}\n\n.go-to-vis {\n  padding: 2.3rem 1rem;\n  font-size: 18pt;\n  border-radius: 0.625rem;\n  background-color: #7fd9da;\n  color: #262626;\n  font-weight: bold;\n  margin: 0.5rem 0.5rem;\n  letter-spacing: 0.02rem;\n}\n\n.title-desc {\n  text-align: justify;\n  text-justify: inter-word;\n  color: rgb(164, 164, 164);\n  font-size: 12pt;\n  hyphens: auto;\n}\n\n.title {\n  font-size: 4.375rem;\n  line-height: 4.6875rem;\n  font-weight: 400;\n  color: #444a65;\n  text-align: justify;\n  margin: 0 auto;\n}\n\n@media only screen and (max-width: 1000px) {\n  .title {\n    text-align: center;\n  }\n  .title-desc {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: center;\n    padding-left: 1.25rem;\n    padding-right: 1.25rem;\n  }\n  .title-btn {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n.title1 {\n  font-family: 'Poppins', sans-serif;\n  font-size: 5.5rem;\n  line-height: 5rem;\n  color: white;\n  font-weight: 600;\n  letter-spacing: 0.5rem;\n}\n\n.title2 {\n  font-family: 'Poppins', sans-serif;\n  font-size: 3.125rem;\n  line-height: 3.75rem;\n  color: #262626;\n  font-weight: 400;\n  hyphens: auto;\n  letter-spacing: 0.25rem;\n}\n\n.title3 {\n  font-family: 'Poppins', sans-serif;\n  font-size: 1.875rem;\n  line-height: 1.875rem;\n  color: #262626;\n  font-weight: 600;\n}\n\n.title4 {\n  font-family: 'Poppins', sans-serif;\n  font-size: 1.25rem;\n  line-height: 1.25rem;\n  color: #262626;\n  font-weight: 500;\n}\n\n.subtitle {\n  font-size: 1rem;\n  line-height: 0.9375rem;\n  color: #e3e3e3;\n  font-weight: 400;\n}\n\n.pro {\n  border-radius: 50%;\n  height: 7.5rem;\n  width: 7.5rem;\n  object-fit: cover;\n  border: 0.125rem solid rgb(218, 218, 218);\n}\n\n.desc {\n  font-size: 12pt;\n  font-weight: 400;\n  color: white;\n  line-height: 1.5625rem;\n}\n\n.logo1 {\n  margin-right: 0.625rem;\n  width: 5.625rem;\n  cursor: pointer;\n  color: white;\n}\n\n.logo2 {\n  margin-right: 0.625rem;\n  width: 6.25rem;\n  cursor: pointer;\n  color: white;\n}\n\n/* CARDS */\n\n.card {\n  border: none;\n  border-radius: 0.625rem;\n  box-shadow: 0.3125rem 1.75rem 1.5625rem rgba(128, 128, 128, 0.057);\n  transition: all 0.5s ease;\n}\n\n.card:hover {\n  transition: all 0.5s ease;\n  box-shadow: 0.3125rem 1.75rem 2.1875rem rgba(128, 128, 128, 0.226);\n}\n\n::ng-deep .organMenu {\n  width: 18.75rem !important;\n  height: 12.5rem !important;\n}\n\n#background {\n  position: absolute;\n  top: 0rem;\n  left: 0rem;\n  height: 75%;\n  width: 100%;\n  background-color: #262626;\n  z-index: -1;\n}\n\n.laptop {\n  position: relative;\n  width: 100%;\n  height: auto;\n}\n\n.laptop:after {\n  content: '';\n  display: block;\n}\n\n.l {\n  // position: absolute;\n  width: 100%;\n}\n\n.i {\n  position: absolute;\n  width: 80%;\n  left: 7.6875rem;\n  top: 1.75rem;\n  z-index: -1;\n}\n\n@media (min-width: 576px) {\n  .i {\n    position: absolute;\n    width: 80%;\n    left: 5.1875rem;\n    top: 1.125rem;\n    z-index: -1;\n  }\n}\n\n// Medium devices (tablets, 768px and up)\n@media (min-width: 768px) {\n  .i {\n    position: absolute;\n    width: 80%;\n    left: 6.4375rem;\n    top: 1.4375rem;\n    z-index: -1;\n  }\n}\n\n// Extra large devices (large desktops, 1200px and up)\n@media (min-width: 1200px) {\n  .i {\n    position: absolute;\n    width: 80%;\n    left: 7.6875rem;\n    top: 1.75rem;\n    z-index: -1;\n  }\n}\n\n.section-selector {\n  text-align: left;\n  outline: none;\n  border: 0.125rem solid #eaeaea;\n  border-radius: 0.5rem;\n  padding: 0.625rem 0.625rem 0.625rem 0.625rem;\n  border-left-width: 0.9375rem;\n  background-color: white;\n  transition: all 0.2s;\n}\n\n.section-selector:not(.active):hover {\n  border-color: #444a6590;\n}\n\n.section-selector:active {\n  transform: scale(0.99);\n}\n\n.section-selected {\n  border-color: #444a65 !important;\n}\n\n.ss-header {\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14pt;\n  padding-bottom: 0.3125rem;\n}\n\n.ss-desc {\n  color: grey;\n}\n\n.card-img-top {\n  max-height: 10vh;\n  /*not want to take all vertical space*/\n  object-fit: cover;\n  /*show all image, autosized, no cut, in available space*/\n}\n\n.contributors-img {\n  border-radius: 50%;\n  object-fit: cover;\n  border: 0.1875rem solid #eaeaea;\n}\n\n.con-card {\n  box-shadow: none !important;\n  border: 0.125rem solid #eaeaea;\n  border-top-width: 0.9375rem;\n  border-radius: 0.625rem;\n  padding: 0.625rem;\n  height: 30.375rem;\n}\n\n.icon-btn {\n  height: 3.125rem;\n  width: 3.125rem;\n  font-size: 1.5625rem;\n  line-height: 1.875rem;\n  color: #262626;\n}\n\n.text-info {\n  color: #444a65 !important;\n}\n\n#actionsHeight,\n.video-tutorial {\n  height: 450px;\n}\n\n.home-img {\n  position: absolute;\n  top: 0;\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 8s;\n  animation-name: anim;\n  -webkit-animation-name: anim;\n  -webkit-animation-timing-function: ease-in-out;\n  -webkit-animation-iteration-count: infinite;\n  -webkit-animation-duration: 8s;\n}\n\n.home-img:nth-child(1) {\n  animation-delay: 0s;\n  -webkit-animation-delay: 0s;\n}\n\n.home-img:nth-child(2) {\n  animation-delay: 4s;\n  -webkit-animation-delay: 4s;\n}\n\n.home-img:nth-child(3) {\n  animation-delay: 8s;\n  -webkit-animation-delay: 8s;\n}\n\n.home-img:nth-child(4) {\n  animation-delay: 12s;\n  -webkit-animation-delay: 12s;\n}\n\n.home-img:nth-child(5) {\n  animation-delay: 16s;\n  -webkit-animation-delay: 16s;\n}\n\n@keyframes anim {\n  0% {\n    opacity: 0;\n    z-index: 100;\n  }\n  15% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    z-index: 1;\n  }\n}\n\n.navbar-options {\n  a {\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n  .docs,\n  .github {\n    padding-left: 1rem;\n  }\n}\n\n.muted {\n  color: #6c757d;\n}\n\n.profile {\n  a {\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Docs        GitHub                  Master Tables          expand_more                        Old Tables                              ASCT+B REPORTER      v2.8              The CCF ASCT+B Reporter is a visualization tool for displaying anatomical structures, cell types, and biomarker        (ASCT+B) authored by domain experts for different human organs. The tables are used to develop a common        coordinate framework (CCF) of the healthy human body, see also        Hubmap Consortium website.                    Go to Visualization        Launch Playground                              {{ option.title }}                                                                      ABOUT              The ASCT+B Reporter is a state-of-the-art visualization tool. The video gives an overview of the functionalities        listed below. Please use the selectors below to skip to any section you’d want to specifically know about.                                                                    {{ va.header }}              {{ va.desc }}                                                                                                  CONTRIBUTORS              Along with various members from the MC-IU Team as well as doctors, researchers and SMEs from various consortia,        below listed are the members of the core team working on building the ASCT+B Reporter                                                                                                      {{ con.name }}                              {{ con.desc }}                                            {{ con.mail }}                                                                                                                                                                                                                                                                                                                                                                                                                AFFILIATIONS                  Various institutions that the CCF ASCT+B Reporter is affiliated with are listed below.                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_exports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\nFooterModule\n\nFooterModule\n\nHomeModule -->\n\nFooterModule->HomeModule\n\n\n\n\n\nTableNestedMenuModule\n\nTableNestedMenuModule\n\nHomeModule -->\n\nTableNestedMenuModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FooterModule\n                        \n                        \n                            TableNestedMenuModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { RouterModule } from '@angular/router';\nimport { FooterModule } from '../footer/footer.module';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { TableNestedMenuModule } from '../table-nested-menu/table-nested-menu.module';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    FontAwesomeModule,\n    RouterModule,\n    FooterModule,\n    YouTubePlayerModule,\n    TableNestedMenuModule,\n  ],\n  exports: [HomeComponent],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ILNode.html":{"url":"classes/ILNode.html","title":"class - ILNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ILNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/indent.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                children\n                            \n                            \n                                color\n                            \n                            \n                                comparator\n                            \n                            \n                                name\n                            \n                            \n                                ontologyId\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, children: ILNode[], ontologyId: string, color: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/indent.model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        children\n                                                  \n                                                        \n                                                                        ILNode[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ontologyId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILNode[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comparator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ontologyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/indent.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/models/indent.model.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ILNode {\n  name: string;\n  ontologyId: string;\n  children?: ILNode[];\n  color: string;\n  comparator: string;\n  type: string;\n\n  constructor(name: string, children: ILNode[], ontologyId: string, color = '#808080') {\n    this.name = name;\n    this.children = children;\n    this.ontologyId = ontologyId;\n    this.color = color;\n    this.comparator = '';\n    this.type = '';\n  }\n\n  public search(name: string) {\n    for (const child of this.children ?? []) {\n      if (child.name.toLowerCase() === name.toLowerCase()) {\n        return child;\n      }\n    }\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndentedListComponent.html":{"url":"components/IndentedListComponent.html","title":"component - IndentedListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndentedListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/indented-list/indented-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-indent\n            \n\n\n\n            \n                styleUrls\n                ./indented-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./indented-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                activateNode\n                            \n                            \n                                dataSource\n                            \n                            \n                                hasChild\n                            \n                            \n                                indentData\n                            \n                            \n                                    Public\n                                indentService\n                            \n                            \n                                    \n                                indentTree\n                            \n                            \n                                treeControl\n                            \n                            \n                                treeFlattener\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initializeTree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentSheet\n                            \n                            \n                                dataVersion\n                            \n                            \n                                sheetData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeIL\n                            \n                            \n                                openBottomSheet\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(indentService: IndentedListService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/indented-list/indented-list.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        indentService\n                                                  \n                                                        \n                                                                        IndentedListService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentSheet\n                    \n                \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/indented-list/indented-list.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataVersion\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/indented-list/indented-list.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sheetData\n                    \n                \n                \n                    \n                        Type :         Row[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/indented-list/indented-list.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeIL\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/indented-list/indented-list.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openBottomSheet\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/indented-list/indented-list.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initializeTree\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeTree(data: ILNode)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/indented-list/indented-list.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ILNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        activateNode\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTreeFlatDataSource(this.treeControl, this.treeFlattener)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasChild\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        indentData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        indentService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IndentedListService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        indentTree\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTree<>\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('indentTree')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        treeControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FlatTreeControl(\n    (node) => node.level,\n    (node) => node.expandable,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        treeFlattener\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTreeFlattener(\n    this.transformer,\n    (node) => node.level,\n    (node) => node.expandable,\n    (node) => node.children,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTree, MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { ILNode } from '../../models/indent.model';\nimport { Row, Sheet } from '../../models/sheet.model';\nimport { IndentedListService } from './indented-list.service';\n\ninterface Node {\n  name: string;\n  ontologyId: string;\n  children?: Node[];\n}\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  ontologyId: string;\n  level: number;\n}\n\n@Component({\n  selector: 'app-indent',\n  templateUrl: './indented-list.component.html',\n  styleUrls: ['./indented-list.component.scss'],\n})\nexport class IndentedListComponent implements OnInit, OnDestroy, AfterViewInit {\n  indentData = [];\n  activateNode?: unknown;\n  visible = false;\n\n  @Input() dataVersion?: unknown;\n  @Input() currentSheet!: Sheet;\n  @Input() sheetData: Row[] = [];\n  @Output() closeIL = new EventEmitter();\n  @Output() openBottomSheet = new EventEmitter();\n\n  @ViewChild('indentTree') indentTree!: MatTree;\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n\n  treeControl = new FlatTreeControl(\n    (node) => node.level,\n    (node) => node.expandable,\n  );\n\n  private readonly transformer = (node: Node, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      ontologyId: node.ontologyId,\n      level,\n    };\n  };\n\n  treeFlattener = new MatTreeFlattener(\n    this.transformer,\n    (node) => node.level,\n    (node) => node.expandable,\n    (node) => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor(public indentService: IndentedListService) {}\n\n  ngOnInit(): void {\n    this.indentService.indentData$.subscribe((data) => {\n      if (data.data) {\n        this.initializeTree(data.data);\n        this.visible = true;\n      } else {\n        this.visible = false;\n      }\n    });\n\n    this.indentService.makeIndentData(this.currentSheet, this.sheetData);\n  }\n\n  ngAfterViewInit(): void {\n    if (this.indentTree) {\n      this.indentTree.treeControl.expandAll();\n    }\n  }\n\n  ngOnDestroy() {\n    this.visible = false;\n  }\n\n  public initializeTree(data: ILNode) {\n    this.dataSource.data = [data];\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n        \n        \n          {{ node.name }} {{ node.ontologyId }}\n        \n      \n      \n        \n          \n            {{ treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n          \n        \n\n        \n          {{ node.name }}  {{ node.ontologyId }}\n        \n      \n    \n  \n\n  \n    \n      Indent List not created yet.\n    \n  \n\n\n    \n\n    \n                \n                    ./indented-list.component.scss\n                \n                .mat-tree-node {\n  min-height: 2em !important;\n  cursor: pointer;\n}\n\n.mat-tree-node:hover {\n  color: #1976d2;\n}\n\n.background-highlight {\n  color: #1976d2;\n}\n.tree-container {\n  padding: 1.25rem !important;\n  width: fit-content !important;\n  background-color: transparent;\n}\n.node-name-id {\n  font-size: 8pt;\n  color: grey;\n  padding-left: 0.625rem;\n}\n.node-button {\n  background-color: rgb(215, 215, 215);\n  transform: scale(0.7);\n}\n.node-button-icon {\n  font-size: 20pt;\n  color: white;\n  height: 1.5rem !important;\n  width: 1.5rem !important;\n  font-size: 14pt !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ node.name }} {{ node.ontologyId }}                                                  {{ treeControl.isExpanded(node) ? \\'expand_more\\' : \\'chevron_right\\' }}                                    {{ node.name }}  {{ node.ontologyId }}                                Indent List not created yet.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndentedListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IndentedListModule.html":{"url":"modules/IndentedListModule.html","title":"module - IndentedListModule","body":"\n                   \n\n\n\n\n    Modules\n    IndentedListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IndentedListModule\n\n\n\ncluster_IndentedListModule_exports\n\n\n\ncluster_IndentedListModule_declarations\n\n\n\ncluster_IndentedListModule_imports\n\n\n\n\nIndentedListComponent\n\nIndentedListComponent\n\n\n\nIndentedListModule\n\nIndentedListModule\n\nIndentedListModule -->\n\nIndentedListComponent->IndentedListModule\n\n\n\n\n\nIndentedListComponent \n\nIndentedListComponent \n\nIndentedListComponent  -->\n\nIndentedListModule->IndentedListComponent \n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nIndentedListModule -->\n\nSidenavHeaderModule->IndentedListModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nIndentedListModule -->\n\nSidenavModule->IndentedListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/indented-list/indented-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IndentedListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SidenavHeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IndentedListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavModule } from '../sidenav/sidenav.module';\nimport { IndentedListComponent } from './indented-list.component';\nimport { SidenavHeaderModule } from '../sidenav-header/sidenav-header.module';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [IndentedListComponent],\n  imports: [CommonModule, SidenavModule, SidenavHeaderModule, MatTreeModule, MatButtonModule, MatIconModule],\n  exports: [IndentedListComponent],\n})\nexport class IndentedListModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IndentedListService.html":{"url":"injectables/IndentedListService.html","title":"injectable - IndentedListService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IndentedListService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/indented-list/indented-list.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                indentData$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                makeIndentData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        makeIndentData\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeIndentData(currentSheet: Sheet, data: Row[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/indented-list/indented-list.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Row[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { data: any; sheet: any; } | { data: any; sheet?: undefined; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        indentData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.indentData.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/indented-list/indented-list.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ILNode } from '../../models/indent.model';\nimport { Row, Sheet } from '../../models/sheet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IndentedListService {\n  private readonly indentData = new Subject();\n  readonly indentData$ = this.indentData.asObservable();\n\n  public makeIndentData(currentSheet: Sheet, data: Row[]) {\n    let root = new ILNode(data[0].anatomical_structures[0].name ?? '', [], data[0].anatomical_structures[0].id ?? '');\n    root.comparator = root.name + root.ontologyId;\n    root.type = 'root';\n\n    let parent: ILNode;\n\n    try {\n      data.forEach((row) => {\n        parent = root;\n\n        row.anatomical_structures.forEach((structure) => {\n          const s =\n            parent.children?.findIndex(\n              (i) => i.type !== 'root' && i.comparator === parent.comparator + structure.name + structure.id,\n            ) ?? -1;\n          if (s === -1) {\n            const newNode = new ILNode(structure.name ?? '', [], structure.id ?? '');\n            newNode.comparator = parent.comparator + newNode.name + newNode.ontologyId;\n            parent.children?.push(newNode);\n            parent = newNode;\n          } else {\n            parent = parent.children?.[s] as ILNode;\n          }\n        });\n      });\n\n      root = root.children?.[0] as ILNode; // reassign to avoid duplicate parent\n      this.indentData.next({\n        data: root,\n        sheet: currentSheet.display,\n      });\n\n      return {\n        data: root,\n        sheet: currentSheet.display,\n      };\n    } catch {\n      this.indentData.next({\n        data: null,\n      });\n    }\n\n    return { data: null };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/info/info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info\n            \n\n\n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Readonly\n                                data\n                            \n                            \n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                ga\n                            \n                            \n                                info\n                            \n                            \n                                loading\n                            \n                            \n                                noId\n                            \n                            \n                                    Public\n                                    Readonly\n                                sheetRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Observable, changeDetectorRef: ChangeDetectorRef, sheetRef: MatBottomSheetRef, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/info/info.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    Observable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sheetRef\n                                                  \n                                                        \n                                                                    MatBottomSheetRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/info/info.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_BOTTOM_SHEET_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Error\n\n                    \n                \n                \n                    \n                        Default value : { hasError: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SheetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        sheetRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatBottomSheetRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/info/info.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { Error } from '../../models/response.model';\nimport { SheetInfo } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss'],\n})\nexport class InfoComponent implements OnInit {\n  loading = true;\n  noId = false;\n  error: Error = { hasError: false };\n  info!: SheetInfo;\n\n  // @Output() close: EventEmitter = new EventEmitter();\n\n  constructor(\n    @Inject(MAT_BOTTOM_SHEET_DATA) public readonly data: Observable,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    public readonly sheetRef: MatBottomSheetRef,\n    public readonly ga: GoogleAnalyticsService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.data.subscribe((info: SheetInfo) => {\n      this.info = info;\n      this.loading = false;\n\n      if (info.hasError) {\n        this.error = {\n          hasError: info.hasError,\n          msg: info.msg,\n          status: info.status,\n        };\n      } else {\n        this.error = { hasError: false };\n        this.info = info;\n      }\n\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  close() {\n    this.ga.event(GaAction.CLICK, GaCategory.GRAPH, 'Close Bottom Sheet Information', +false);\n    this.sheetRef.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ info.name }}\n    \n    \n      \n        close\n      \n    \n  \n\n  \n    \n      \n      Please wait while the data loads...\n    \n  \n\n  \n    \n      Could not fetch data {{ !info.notes ? 'and notes' : '' }} for\n      {{ info.name }}\n      {{\n        info.notes\n          ? 'but we have some\n      notes available'\n          : ''\n      }}. This could be because,\n      \n        Structure does not have an ontology ID.\n        Structure has an invalid ontology ID.\n        Broken network connection.\n      \n      \n        \n\n        Notes\n        \n          {{ info.notes }}\n        \n      \n      \n        \n        DOI\n        \n          \n            {{ refer.doi }}\n          \n        \n      \n    \n  \n\n  \n    \n      Description\n      \n        {{ info.desc ? info.desc : 'No description found.' }}\n      \n\n      \n\n      Ontology ID\n      \n        {{ info.ontologyId ? info.ontologyId : 'No ID found.' }}\n      \n\n      \n\n      {{ info.ontologyCode === 'HGNC' ? 'Link' : 'IRI' }}\n      \n        {{ info.iri ? info.iri : 'No IRI found.' }}\n      \n\n      \n        \n          \n          {{ item.key }}\n          \n            {{\n              item.value\n                ? item.value\n                : 'No ' +\n                  item.key +\n                  '\n              found.'\n            }}\n          \n        \n      \n\n      \n      \n      Notes\n       \n\n      \n\n      DOI\n      \n        \n          \n            {{ refer.doi }}\n          \n        \n      \n      No DOI references found\n    \n  \n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                .info {\n  max-height: 18.75rem;\n  overflow: auto;\n}\n.loading-wait {\n  width: 10%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ info.name }}                      close                              Please wait while the data loads...                  Could not fetch data {{ !info.notes ? \\'and notes\\' : \\'\\' }} for      {{ info.name }}      {{        info.notes          ? \\'but we have some      notes available\\'          : \\'\\'      }}. This could be because,              Structure does not have an ontology ID.        Structure has an invalid ontology ID.        Broken network connection.                            Notes                  {{ info.notes }}                                    DOI                              {{ refer.doi }}                                          Description              {{ info.desc ? info.desc : \\'No description found.\\' }}                  Ontology ID              {{ info.ontologyId ? info.ontologyId : \\'No ID found.\\' }}                  {{ info.ontologyCode === \\'HGNC\\' ? \\'Link\\' : \\'IRI\\' }}              {{ info.iri ? info.iri : \\'No IRI found.\\' }}                                        {{ item.key }}                      {{              item.value                ? item.value                : \\'No \\' +                  item.key +                  \\'              found.\\'            }}                                          Notes                   DOI                                    {{ refer.doi }}                              No DOI references found      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoModule.html":{"url":"modules/InfoModule.html","title":"module - InfoModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoModule\n\n\n\ncluster_InfoModule_exports\n\n\n\ncluster_InfoModule_declarations\n\n\n\n\nInfoComponent\n\nInfoComponent\n\n\n\nInfoModule\n\nInfoModule\n\nInfoModule -->\n\nInfoComponent->InfoModule\n\n\n\n\n\nInfoComponent \n\nInfoComponent \n\nInfoComponent  -->\n\nInfoModule->InfoComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/info/info.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoComponent } from './info.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MarkdownModule } from 'ngx-markdown';\n\n@NgModule({\n  declarations: [InfoComponent],\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatBottomSheetModule, MarkdownModule],\n  exports: [InfoComponent],\n})\nexport class InfoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Legend.html":{"url":"interfaces/Legend.html","title":"interface - Legend","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Legend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/legend.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bmType\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            sortOrder\n                                        \n                                \n                                \n                                        \n                                            style\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bmType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortOrder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Legend {\n  name: string;\n  color: string;\n  style: string;\n  sortOrder: number;\n  bmType?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LegendComponent.html":{"url":"components/LegendComponent.html","title":"component - LegendComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LegendComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/legend/legend.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-legend\n            \n\n\n\n            \n                styleUrls\n                ./legend.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./legend.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                legends\n                            \n                            \n                                    Public\n                                ls\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bimodalData\n                            \n                            \n                                compareData\n                            \n                            \n                                error\n                            \n                            \n                                treeData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ls: LegendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/legend/legend.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ls\n                                                  \n                                                        \n                                                                        LegendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bimodalData\n                    \n                \n                \n                    \n                        Type :         BimodalData\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/legend/legend.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        compareData\n                    \n                \n                \n                    \n                        Type :         CompareData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/legend/legend.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/legend/legend.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        treeData\n                    \n                \n                \n                    \n                        Type :         TNode[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/legend/legend.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        legends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Legend[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/legend/legend.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LegendService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/legend/legend.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { BimodalData } from '../../models/bimodal.model';\nimport { Legend } from '../../models/legend.model';\nimport { Error } from '../../models/response.model';\nimport { CompareData } from '../../models/sheet.model';\nimport { TNode } from '../../models/tree.model';\nimport { LegendService } from './legend.service';\nimport { delay } from 'rxjs';\n\n@Component({\n  selector: 'app-legend',\n  templateUrl: './legend.component.html',\n  styleUrls: ['./legend.component.scss'],\n})\nexport class LegendComponent implements OnInit, OnChanges {\n  legends: Legend[] = [];\n\n  @Input() treeData: TNode[] = [];\n  @Input() bimodalData!: BimodalData;\n  @Input() compareData: CompareData[] = [];\n  @Input() error!: Error;\n\n  constructor(public ls: LegendService) {}\n\n  ngOnInit(): void {\n    this.ls.legendData$.pipe(delay(0)).subscribe((data) => {\n      if (data.length) {\n        this.legends = data;\n      }\n    });\n  }\n\n  ngOnChanges() {\n    if (this.treeData && this.bimodalData) {\n      if (this.treeData.length && this.bimodalData.nodes.length) {\n        this.ls.makeLegendData(this.treeData, this.bimodalData.nodes, this.compareData);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Legend \n        \n      \n    \n    \n      \n        \n          \n          {{ l.name }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./legend.component.scss\n                \n                @import './../../../assets/stylesheets/_colors.scss';\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n  box-shadow: none;\n}\n\n.mat-expansion-panel-header:not(.compare) {\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header {\n  transition: all 0.3s;\n  background-color: $secondary !important;\n}\n\n.mat-expansion-panel-header:hover {\n  background-color: darken($color: $secondary, $amount: 8%) !important;\n}\n\n.circle {\n  height: 0.9375rem;\n  width: 0.9375rem;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.rect {\n  height: 0.125rem;\n  width: 0.9375rem;\n  display: inline-block;\n}\n\n.protein {\n  height: 1.063rem;\n  width: 1.063rem;\n  background-image: url(../../../assets/legends/diamondSymbol.svg);\n  background-repeat: no-repeat;\n  background-position: -0.438rem -0.438rem;\n  background-color: unset !important;\n}\n\n.lipids {\n  height: 1.063rem;\n  width: 1.063rem;\n  background-image: url(../../../assets/legends/squareSymbol.svg);\n  background-repeat: no-repeat;\n  background-color: unset !important;\n  background-position: -0.438rem -0.438rem;\n}\n\n.metabolites {\n  height: 1.063rem;\n  width: 1.063rem;\n  background-image: url(../../../assets/legends/triangleSymbol.svg);\n  background-color: unset !important;\n  background-repeat: no-repeat;\n  background-position: -0.438rem -0.438rem;\n}\n\n.proteoforms {\n  height: 1.063rem;\n  width: 1.063rem;\n  background-image: url(../../../assets/legends/crossSymbol.svg);\n  background-color: unset !important;\n  background-repeat: no-repeat;\n  background-position: -0.438rem -0.438rem;\n}\n\n.legend-div {\n  max-height: 11.25rem;\n  overflow-y: auto;\n\n  .legend-label {\n    padding-left: 0.5rem;\n    letter-spacing: 0.1px;\n    font-size: 14px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Legend                                                         {{ l.name }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LegendComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LegendModule.html":{"url":"modules/LegendModule.html","title":"module - LegendModule","body":"\n                   \n\n\n\n\n    Modules\n    LegendModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LegendModule\n\n\n\ncluster_LegendModule_exports\n\n\n\ncluster_LegendModule_declarations\n\n\n\ncluster_LegendModule_imports\n\n\n\n\nLegendComponent\n\nLegendComponent\n\n\n\nLegendModule\n\nLegendModule\n\nLegendModule -->\n\nLegendComponent->LegendModule\n\n\n\n\n\nLegendComponent \n\nLegendComponent \n\nLegendComponent  -->\n\nLegendModule->LegendComponent \n\n\n\n\n\nOrderByPipe\n\nOrderByPipe\n\nLegendModule -->\n\nOrderByPipe->LegendModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/legend/legend.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LegendComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OrderByPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LegendComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LegendComponent } from './legend.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { OrderByPipe } from '../../pipes/order-by/order-by.pipe';\n\n@NgModule({\n  declarations: [LegendComponent],\n  imports: [CommonModule, MatExpansionModule, OrderByPipe],\n  exports: [LegendComponent],\n})\nexport class LegendModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegendService.html":{"url":"injectables/LegendService.html","title":"injectable - LegendService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/legend/legend.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                legendData$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                makeLegendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        makeLegendData\n                        \n                    \n                \n            \n            \n                \nmakeLegendData(treeData: TNode[], bimodalData: BMNode[], compareData: CompareData[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/legend/legend.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                treeData\n                                            \n                                                            TNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                bimodalData\n                                            \n                                                            BMNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                compareData\n                                            \n                                                            CompareData[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Legend[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        legendData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.legendData.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/legend/legend.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { BMNode } from '../../models/bimodal.model';\nimport { Legend } from '../../models/legend.model';\nimport { CompareData, PROTEIN_PRESENCE } from '../../models/sheet.model';\nimport { TNode } from '../../models/tree.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LegendService {\n  private readonly legendData = new Subject();\n  readonly legendData$ = this.legendData.asObservable();\n\n  makeLegendData(treeData: TNode[], bimodalData: BMNode[], compareData: CompareData[] = []): Legend[] {\n    const legends: Legend[] = [];\n    let addedBMBG = false;\n    let addedBMBP = false;\n    let addedBMBL = false;\n    let addedBMBM = false;\n    let addedBMBF = false;\n    let addedCT = false;\n    let addedBMProteinAbsencePath = false;\n    let addedBMProteinPresencePath = false;\n    let addedBMProteinIntermediatePath = false;\n    for (const i of treeData) {\n      if (legends.findIndex((l) => l.name === 'Anatomical Structures') === -1) {\n        legends.push({\n          name: 'Anatomical Structures',\n          color: '#E41A1C',\n          style: '',\n          sortOrder: 1,\n        });\n      }\n      if (i.isNew) {\n        if (legends.findIndex((l) => l.color === i.color) === -1) {\n          if (compareData.length) {\n            legends.push({\n              name: compareData.find((c) => c.color === i.color)?.title ?? '',\n              color: i.color,\n              style: '',\n              sortOrder: 10,\n            });\n\n            legends.push({\n              name: (compareData.find((c) => c.color === i.color)?.title ?? '') + ' - New Nodes',\n              color: i.color,\n              style: 'stroke',\n              sortOrder: 11,\n            });\n          }\n        }\n      }\n    }\n\n    for (const i of bimodalData) {\n      if (i.isNew) {\n        if (legends.findIndex((l) => l.color === i.color) === -1) {\n          if (compareData.length) {\n            legends.push({\n              name: compareData.find((c) => c.color === i.color)?.title ?? '',\n              color: i.color,\n              style: '',\n              sortOrder: 10,\n            });\n\n            legends.push({\n              name: (compareData.find((c) => c.color === i.color)?.title ?? '') + ' - New Nodes',\n              color: i.color,\n              style: 'stroke',\n              sortOrder: 11,\n            });\n          }\n        }\n      }\n      if (i.type === 'BM') {\n        if (!addedBMBG && i.bType === 'gene') {\n          legends.push({\n            name: 'Gene Biomarkers',\n            color: '#4DAF4A',\n            style: '',\n            bmType: 'biomarker',\n            sortOrder: 3,\n          });\n          addedBMBG = true;\n        }\n        if (!addedBMBP && i.bType === 'protein') {\n          legends.push({\n            name: 'Protein Biomarkers',\n            color: '#4DAF4A',\n            style: '',\n            bmType: 'biomarker',\n            sortOrder: 4,\n          });\n          addedBMBP = true;\n        }\n        if (!addedBMProteinPresencePath && i.proteinPresence === PROTEIN_PRESENCE.POS && i.bType === 'protein') {\n          legends.push({\n            name: 'Protein Presence',\n            color: '#00008B',\n            style: '',\n            sortOrder: 97,\n          });\n          addedBMProteinPresencePath = true;\n        }\n        if (!addedBMProteinAbsencePath && i.proteinPresence === PROTEIN_PRESENCE.NEG && i.bType === 'protein') {\n          legends.push({\n            name: 'Protein Absence',\n            color: '#E16156',\n            style: '',\n            sortOrder: 98,\n          });\n          addedBMProteinAbsencePath = true;\n        }\n        if (\n          !addedBMProteinIntermediatePath &&\n          i.proteinPresence === PROTEIN_PRESENCE.INTERMEDIATE &&\n          i.bType === 'protein'\n        ) {\n          legends.push({\n            name: 'Intermediate Protein',\n            color: '#4B2079',\n            style: '',\n            sortOrder: 99,\n          });\n          addedBMProteinIntermediatePath = true;\n        }\n        if (!addedBMBL && i.bType === 'lipids') {\n          legends.push({\n            name: 'Lipids Biomarkers',\n            color: '#4DAF4A',\n            style: '',\n            bmType: 'biomarker',\n            sortOrder: 5,\n          });\n          addedBMBL = true;\n        }\n        if (!addedBMBM && i.bType === 'metabolites') {\n          legends.push({\n            name: 'Metabolites Biomarkers',\n            color: '#4DAF4A',\n            style: '',\n            bmType: 'biomarker',\n            sortOrder: 6,\n          });\n          addedBMBM = true;\n        }\n        if (!addedBMBF && i.bType === 'proteoforms') {\n          legends.push({\n            name: 'Proteoforms Biomarkers',\n            color: '#4DAF4A',\n            style: '',\n            bmType: 'biomarker',\n            sortOrder: 7,\n          });\n          addedBMBF = true;\n        }\n      }\n      if (!addedCT && i.type === 'BM') {\n        legends.push({\n          name: 'Cell Types',\n          color: '#377EB8',\n          style: '',\n          sortOrder: 2,\n        });\n        addedCT = true;\n      }\n    }\n\n    for (const item of compareData) {\n      if (legends.findIndex((l) => l.color === item.color) === -1) {\n        legends.push({\n          name: item.title,\n          color: item.color,\n          style: '',\n          sortOrder: 10,\n        });\n      }\n    }\n    legends.push({\n      name: 'AS-AS, AS-CT, CT-BM Paths',\n      color: '#ccc',\n      style: '',\n      sortOrder: 99,\n    });\n    this.legendData.next(legends);\n    return legends;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Legends.html":{"url":"classes/Legends.html","title":"class - Legends","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Legends\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/legends.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                legends\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeBimodalLegend\n                            \n                            \n                                makeTreeLegend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/legends.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        legends\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Legend[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/legends.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/legends.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Legend[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalLegend\n                        \n                    \n                \n            \n            \n                \nmakeBimodalLegend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/legends.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { type: string; orient: string; fill: string; title: string; offset: number; titlePadding: number; titleFontSize: number; labelFontSize: number; labelOffset: number; symbolSize: number; rowPadding: number; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeLegend\n                        \n                    \n                \n            \n            \n                \nmakeTreeLegend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/legends.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { type: string; orient: string; legendX: number; legendY: number; fill: string; labelFontSize: number; labelOffset: number; symbolSize: number; rowPadding: number; encode: { symbols: { update: { stroke: { ...; }; strokeWidth: { ...; }; }; }; }; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Legend } from 'vega';\n\nexport class Legends {\n  static create(): Legend[] {\n    return new Legends().legends;\n  }\n\n  legends: Legend[];\n\n  constructor() {\n    this.legends = [\n      // this.makeBimodalLegend(),\n      // this.makeTreeLegend()\n    ];\n  }\n\n  makeBimodalLegend() {\n    return {\n      type: 'symbol',\n      orient: 'top-left',\n      fill: 'bimodal',\n      title: 'Legend',\n      offset: -15,\n      titlePadding: 20,\n      titleFontSize: 16,\n      labelFontSize: 14,\n      labelOffset: 10,\n      symbolSize: 200,\n      rowPadding: 10,\n    };\n  }\n\n  makeTreeLegend() {\n    return {\n      type: 'symbol',\n      orient: 'none',\n      legendX: -15,\n      legendY: 98,\n      fill: 'treeLegend',\n      labelFontSize: 14,\n      labelOffset: 10,\n      symbolSize: 200,\n      rowPadding: 10,\n      encode: {\n        symbols: {\n          update: {\n            stroke: { value: 'black' },\n            strokeWidth: { value: 2 },\n          },\n        },\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Link.html":{"url":"interfaces/Link.html","title":"interface - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bimodal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            s\n                                        \n                                \n                                \n                                        \n                                            t\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        s\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        s:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        t\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        t:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nimport { Degree, NODE_TYPE } from './tree.model';\n\nconst groupNameMapper = {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n};\n\nexport class BMNode {\n  name: string;\n  ontologyId: string;\n  group: number;\n  groupName: string;\n  fontSize: number;\n  x: number;\n  y: number;\n  id = 0;\n  color: string;\n  nodeSize: number;\n  targets: number[];\n  sources: number[];\n\n  problem = false;\n  pathColor: string;\n  isNew: boolean;\n  type: string;\n  degree?: number;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  bType?: string;\n  proteinPresence: PROTEIN_PRESENCE;\n  references?: Reference[];\n  notes: string;\n  organName: string;\n\n  constructor(\n    name: string,\n    group: number,\n    x: number,\n    y: number,\n    fontSize: number,\n    notes: string,\n    organName: string,\n    ontologyId = '',\n    color = '#E41A1C',\n    nodeSize = 300,\n    proteinPresence = PROTEIN_PRESENCE.UNKNOWN,\n  ) {\n    this.name = name;\n    this.group = group;\n    this.fontSize = fontSize;\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.nodeSize = nodeSize === 0 ? 50 : nodeSize;\n    this.targets = [];\n    this.sources = [];\n    this.groupName = groupNameMapper[group as keyof typeof groupNameMapper];\n    this.ontologyId = ontologyId;\n    this.pathColor = '#ccc';\n    this.isNew = false;\n    this.type = NODE_TYPE.BM;\n    this.label = '';\n    this.notes = notes;\n    this.organName = organName;\n    this.proteinPresence = proteinPresence;\n  }\n}\n\nexport interface Link {\n  s: number;\n  t: number;\n}\n\nexport interface DD {\n  name: string;\n}\n\nexport interface ASCTD {\n  nodes: BMNode[];\n  links: Link[];\n  compareDD?: DD[];\n  searchIds?: number[];\n}\n\nexport const bimodalSortOptions = ['Alphabetically', 'Degree'];\nexport const bimodalBSizeOptions = ['None', 'Degree'];\nexport const bimodalCTSizeOptions = ['None', 'Degree', 'Indegree', 'Outdegree'];\nexport const bimodalBTypeOptions = ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms'];\n\nexport interface BimodalConfig {\n  CT: {\n    sort: string;\n    size: string;\n  };\n  BM: {\n    sort: string;\n    size: string;\n    type: string;\n  };\n}\n\nexport interface BimodalData {\n  nodes: BMNode[];\n  links: Link[];\n  config: BimodalConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinksASCTBData.html":{"url":"interfaces/LinksASCTBData.html","title":"interface - LinksASCTBData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LinksASCTBData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            AS_AS\n                                        \n                                \n                                \n                                        \n                                            AS_AS_organWise\n                                        \n                                \n                                \n                                        \n                                            AS_CT\n                                        \n                                \n                                \n                                        \n                                            AS_CT_organWise\n                                        \n                                \n                                \n                                        \n                                            CT_B\n                                        \n                                \n                                \n                                        \n                                            CT_B_organWise\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        AS_AS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_AS:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AS_AS_organWise\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_AS_organWise:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AS_CT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_CT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        AS_CT_organWise\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        AS_CT_organWise:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CT_B\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CT_B:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CT_B_organWise\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CT_B_organWise:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Loading.html":{"url":"interfaces/Loading.html","title":"interface - Loading","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Loading\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ui.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            loadingText\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadingText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Log } from './logs.model';\nimport { SnackbarType } from './response.model';\nimport { Reference } from './sheet.model';\n\nexport interface Snackbar {\n  opened: boolean;\n  text: string;\n  type: SnackbarType;\n}\n\nexport interface Loading {\n  loading: boolean;\n  loadingText: string;\n}\n\nexport interface OpenBottomSheetData {\n  name: string;\n  ontologyId: string;\n  group: number;\n  references: Reference[];\n  notes: string;\n}\n\nexport interface Logs {\n  sheetLogs: Log;\n  allLogs: Log[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loading/loading.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n\n\n            \n                styleUrls\n                ./loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                loadingText$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loading/loading.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/loading/loading.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        loadingText$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(UIState)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/loading/loading.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { UIState, UIStateModel } from '../../store/ui.state';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent implements OnInit {\n  @Select(UIState) loadingText$!: Observable;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) {}\n\n  ngOnInit(): void {\n    this.loadingText$.subscribe((l) => {\n      this.data = l.loadingText;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Please wait...\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./loading.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Please wait...          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoadingModule.html":{"url":"modules/LoadingModule.html","title":"module - LoadingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoadingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoadingModule\n\n\n\ncluster_LoadingModule_exports\n\n\n\ncluster_LoadingModule_declarations\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\n\n\nLoadingModule\n\nLoadingModule\n\nLoadingModule -->\n\nLoadingComponent->LoadingModule\n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nLoadingModule->LoadingComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/loading/loading.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoadingComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoadingComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingComponent } from './loading.component';\n\n@NgModule({\n  declarations: [LoadingComponent],\n  imports: [CommonModule],\n  exports: [LoadingComponent],\n})\nexport class LoadingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageSyncService.html":{"url":"injectables/LocalStorageSyncService.html","title":"injectable - LocalStorageSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage-sync.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, key: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-storage-sync.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Consent, ConsentService } from './consent.service';\n\nexport const LOCAL_STORAGE_CONSENT_KEY = new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY',\n});\n\n@Injectable()\nexport class LocalStorageSyncService implements OnDestroy {\n  private readonly storage?: typeof localStorage;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(LOCAL_STORAGE_CONSENT_KEY) private readonly key: string,\n  ) {\n    try {\n      this.storage = localStorage;\n    } catch (_error) {\n      /* Ignored */\n    }\n\n    consentService.setConsent(this.loadConsent());\n    this.subscriptions.add(consentService.consentChange.subscribe((consent) => this.saveConsent(consent)));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private loadConsent(): Consent {\n    const rawValue = this.storage?.getItem?.(this.key);\n    if (rawValue == null) {\n      return 'not-set';\n    }\n\n    const value = rawValue.trim().toLowerCase();\n    switch (value) {\n      case 'given': /* fallthrough */\n      case 'rescinded':\n        return value;\n      default:\n        return 'not-set';\n    }\n  }\n\n  private saveConsent(value: Consent): void {\n    this.storage?.setItem?.(this.key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Log.html":{"url":"interfaces/Log.html","title":"interface - Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/logs.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            MULTI_IN_LINKS\n                                        \n                                \n                                \n                                        \n                                            NO_IN_LINKS\n                                        \n                                \n                                \n                                        \n                                            NO_OUT_LINKS\n                                        \n                                \n                                \n                                        \n                                            SELF_LINKS\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     LogEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MULTI_IN_LINKS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MULTI_IN_LINKS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NO_IN_LINKS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NO_IN_LINKS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NO_OUT_LINKS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NO_OUT_LINKS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SELF_LINKS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SELF_LINKS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum LOG_TYPES {\n  MSG = 'MSG',\n  NO_OUT_LINKS = 'NO_OUT_LINKS',\n  NO_IN_LINKS = 'NO_IN_LINKS',\n  MULTI_IN_LINKS = 'MULTI_IN_LINKS',\n  SELF_LINKS = 'SELF_LINKS',\n}\n\nexport enum LOG_ICONS {\n  error = 'cancel',\n  warning = 'error',\n  success = 'check_circle',\n  file = 'next_plan',\n}\n\nexport interface Log {\n  id: number;\n  messages: LogEntry[];\n  NO_OUT_LINKS: string[];\n  NO_IN_LINKS: string[];\n  MULTI_IN_LINKS: string[];\n  SELF_LINKS: string[];\n}\n\nexport interface LogEntry {\n  icon: string;\n  text: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntry.html":{"url":"interfaces/LogEntry.html","title":"interface - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/logs.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum LOG_TYPES {\n  MSG = 'MSG',\n  NO_OUT_LINKS = 'NO_OUT_LINKS',\n  NO_IN_LINKS = 'NO_IN_LINKS',\n  MULTI_IN_LINKS = 'MULTI_IN_LINKS',\n  SELF_LINKS = 'SELF_LINKS',\n}\n\nexport enum LOG_ICONS {\n  error = 'cancel',\n  warning = 'error',\n  success = 'check_circle',\n  file = 'next_plan',\n}\n\nexport interface Log {\n  id: number;\n  messages: LogEntry[];\n  NO_OUT_LINKS: string[];\n  NO_IN_LINKS: string[];\n  MULTI_IN_LINKS: string[];\n  SELF_LINKS: string[];\n}\n\nexport interface LogEntry {\n  icon: string;\n  text: string;\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Logs.html":{"url":"interfaces/Logs.html","title":"interface - Logs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Logs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ui.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allLogs\n                                        \n                                \n                                \n                                        \n                                            sheetLogs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allLogs:         Log[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Log[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetLogs:         Log\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Log\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Log } from './logs.model';\nimport { SnackbarType } from './response.model';\nimport { Reference } from './sheet.model';\n\nexport interface Snackbar {\n  opened: boolean;\n  text: string;\n  type: SnackbarType;\n}\n\nexport interface Loading {\n  loading: boolean;\n  loadingText: string;\n}\n\nexport interface OpenBottomSheetData {\n  name: string;\n  ontologyId: string;\n  group: number;\n  references: Reference[];\n  notes: string;\n}\n\nexport interface Logs {\n  sheetLogs: Log;\n  allLogs: Log[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogsState.html":{"url":"injectables/LogsState.html","title":"injectable - LogsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/logs.state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                clearSheetLogs\n                            \n                            \n                                    \n                                    Static\n                                getLogs\n                            \n                            \n                                    \n                                reportLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clearSheetLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearSheetLogs(undefined: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearSheetLogs)\n                \n            \n\n                    \n                        \n                            Defined in src/app/store/logs.state.ts:110\n                        \n                    \n\n\n            \n                \n                        Action to clear the logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Static\n                        getLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogs(state: LogsStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n                    \n                        \n                            Defined in src/app/store/logs.state.ts:53\n                        \n                    \n\n\n            \n                \n                        Returns the sheet logs and all logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            LogsStateModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { sheetLogs: Log; allLogs: {}; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reportLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    reportLog(undefined: StateContext, undefined: ReportLog)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ReportLog)\n                \n            \n\n                    \n                        \n                            Defined in src/app/store/logs.state.ts:64\n                        \n                    \n\n\n            \n                \n                        Action to add a log\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            StateContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            ReportLog\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Action, Selector, State, StateContext } from '@ngxs/store';\n\nimport { Injectable } from '@angular/core';\nimport { ClearSheetLogs, ReportLog } from '../actions/logs.actions';\nimport { Log, LogEntry } from '../models/logs.model';\n\n/** Class to keep track of the logs */\nexport interface LogsStateModel {\n  /**\n   * Id of the log\n   */\n  id: number;\n  /**\n   * Logs of the current sheet\n   */\n  sheetLogs: Log;\n  /**\n   * All logs of a session\n   */\n  allLogs: Log[];\n}\n\n@State({\n  name: 'logsState',\n  defaults: {\n    id: 0,\n    sheetLogs: {\n      id: 0,\n      messages: [],\n      NO_IN_LINKS: [],\n      NO_OUT_LINKS: [],\n      MULTI_IN_LINKS: [],\n      SELF_LINKS: [],\n    },\n    allLogs: [\n      {\n        id: 0,\n        messages: [],\n        NO_IN_LINKS: [],\n        NO_OUT_LINKS: [],\n        MULTI_IN_LINKS: [],\n        SELF_LINKS: [],\n      },\n    ],\n  },\n})\n@Injectable()\nexport class LogsState {\n  /**\n   * Returns the sheet logs and all logs\n   */\n  @Selector()\n  static getLogs(state: LogsStateModel) {\n    return {\n      sheetLogs: state.sheetLogs,\n      allLogs: state.allLogs,\n    };\n  }\n\n  /**\n   * Action to add a log\n   */\n  @Action(ReportLog)\n  reportLog({ getState }: StateContext, { type, message, icon, version }: ReportLog) {\n    const state = getState();\n    const allLogs = state.allLogs;\n    const sheetLogs = state.sheetLogs;\n    const id = state.id;\n\n    switch (type) {\n      case 'MSG': {\n        const newLog: LogEntry = { text: message, icon: icon ?? '', version };\n        sheetLogs.messages.push(newLog);\n\n        const foundLog = allLogs.find((l) => l.id === id);\n        foundLog?.messages.push(newLog);\n        break;\n      }\n      case 'NO_OUT_LINKS': {\n        sheetLogs.NO_OUT_LINKS.push(message);\n        const foundNOLLog = allLogs.find((l) => l.id === id);\n        foundNOLLog?.NO_OUT_LINKS.push(message);\n        break;\n      }\n      case 'NO_IN_LINKS': {\n        sheetLogs.NO_IN_LINKS.push(message);\n        const foundNILLog = allLogs.find((l) => l.id === id);\n        foundNILLog?.NO_IN_LINKS.push(message);\n        break;\n      }\n      case 'MULTI_IN_LINKS': {\n        sheetLogs.MULTI_IN_LINKS.push(message);\n        const foundMILLLog = allLogs.find((l) => l.id === id);\n        foundMILLLog?.MULTI_IN_LINKS.push(message);\n        break;\n      }\n      case 'SELF_LINKS': {\n        sheetLogs.SELF_LINKS.push(message);\n        const foundSLLog = allLogs.find((l) => l.id === id);\n        foundSLLog?.SELF_LINKS.push(message);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Action to clear the logs\n   */\n  @Action(ClearSheetLogs)\n  clearSheetLogs({ getState, setState }: StateContext) {\n    const state = getState();\n    const allLogs = state.allLogs;\n\n    const id = state.id + 1;\n    allLogs.push({\n      id,\n      messages: [],\n      NO_IN_LINKS: [],\n      NO_OUT_LINKS: [],\n      MULTI_IN_LINKS: [],\n      SELF_LINKS: [],\n    });\n    setState({\n      ...state,\n      id,\n      sheetLogs: {\n        id,\n        messages: [],\n        NO_IN_LINKS: [],\n        NO_OUT_LINKS: [],\n        MULTI_IN_LINKS: [],\n        SELF_LINKS: [],\n      },\n      allLogs,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogsStateModel.html":{"url":"interfaces/LogsStateModel.html","title":"interface - LogsStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogsStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/logs.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to keep track of the logs\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allLogs\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            sheetLogs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allLogs:         Log[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Log[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    All logs of a session\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the log\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetLogs:         Log\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Log\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Logs of the current sheet\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Action, Selector, State, StateContext } from '@ngxs/store';\n\nimport { Injectable } from '@angular/core';\nimport { ClearSheetLogs, ReportLog } from '../actions/logs.actions';\nimport { Log, LogEntry } from '../models/logs.model';\n\n/** Class to keep track of the logs */\nexport interface LogsStateModel {\n  /**\n   * Id of the log\n   */\n  id: number;\n  /**\n   * Logs of the current sheet\n   */\n  sheetLogs: Log;\n  /**\n   * All logs of a session\n   */\n  allLogs: Log[];\n}\n\n@State({\n  name: 'logsState',\n  defaults: {\n    id: 0,\n    sheetLogs: {\n      id: 0,\n      messages: [],\n      NO_IN_LINKS: [],\n      NO_OUT_LINKS: [],\n      MULTI_IN_LINKS: [],\n      SELF_LINKS: [],\n    },\n    allLogs: [\n      {\n        id: 0,\n        messages: [],\n        NO_IN_LINKS: [],\n        NO_OUT_LINKS: [],\n        MULTI_IN_LINKS: [],\n        SELF_LINKS: [],\n      },\n    ],\n  },\n})\n@Injectable()\nexport class LogsState {\n  /**\n   * Returns the sheet logs and all logs\n   */\n  @Selector()\n  static getLogs(state: LogsStateModel) {\n    return {\n      sheetLogs: state.sheetLogs,\n      allLogs: state.allLogs,\n    };\n  }\n\n  /**\n   * Action to add a log\n   */\n  @Action(ReportLog)\n  reportLog({ getState }: StateContext, { type, message, icon, version }: ReportLog) {\n    const state = getState();\n    const allLogs = state.allLogs;\n    const sheetLogs = state.sheetLogs;\n    const id = state.id;\n\n    switch (type) {\n      case 'MSG': {\n        const newLog: LogEntry = { text: message, icon: icon ?? '', version };\n        sheetLogs.messages.push(newLog);\n\n        const foundLog = allLogs.find((l) => l.id === id);\n        foundLog?.messages.push(newLog);\n        break;\n      }\n      case 'NO_OUT_LINKS': {\n        sheetLogs.NO_OUT_LINKS.push(message);\n        const foundNOLLog = allLogs.find((l) => l.id === id);\n        foundNOLLog?.NO_OUT_LINKS.push(message);\n        break;\n      }\n      case 'NO_IN_LINKS': {\n        sheetLogs.NO_IN_LINKS.push(message);\n        const foundNILLog = allLogs.find((l) => l.id === id);\n        foundNILLog?.NO_IN_LINKS.push(message);\n        break;\n      }\n      case 'MULTI_IN_LINKS': {\n        sheetLogs.MULTI_IN_LINKS.push(message);\n        const foundMILLLog = allLogs.find((l) => l.id === id);\n        foundMILLLog?.MULTI_IN_LINKS.push(message);\n        break;\n      }\n      case 'SELF_LINKS': {\n        sheetLogs.SELF_LINKS.push(message);\n        const foundSLLog = allLogs.find((l) => l.id === id);\n        foundSLLog?.SELF_LINKS.push(message);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Action to clear the logs\n   */\n  @Action(ClearSheetLogs)\n  clearSheetLogs({ getState, setState }: StateContext) {\n    const state = getState();\n    const allLogs = state.allLogs;\n\n    const id = state.id + 1;\n    allLogs.push({\n      id,\n      messages: [],\n      NO_IN_LINKS: [],\n      NO_OUT_LINKS: [],\n      MULTI_IN_LINKS: [],\n      SELF_LINKS: [],\n    });\n    setState({\n      ...state,\n      id,\n      sheetLogs: {\n        id,\n        messages: [],\n        NO_IN_LINKS: [],\n        NO_OUT_LINKS: [],\n        MULTI_IN_LINKS: [],\n        SELF_LINKS: [],\n      },\n      allLogs,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Marker.html":{"url":"classes/Marker.html","title":"class - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                count\n                            \n                            \n                                isNew\n                            \n                            \n                                parents\n                            \n                            \n                                structure\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(structure: string, count: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tree.model.ts:146\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        structure\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        count\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:142\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Marks.html":{"url":"classes/Marks.html","title":"class - Marks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Marks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/marks.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                marks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeBimodalMarkGroup\n                            \n                            \n                                makeMultiParentMarkGroup\n                            \n                            \n                                makeTreeMarkGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/marks.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        marks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Mark[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/marks.ts:14\n                        \n                    \n\n            \n                \n                    List of vega marks\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/marks.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Mark[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeBimodalMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/marks.ts:37\n                        \n                    \n\n\n            \n                \n                        Creates mark group for bimodal network\n\n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeMultiParentMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeMultiParentMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/marks.ts:30\n                        \n                    \n\n\n            \n                \n                        Creates mark group for multiparent (depricated)\n\n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeTreeMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/marks.ts:23\n                        \n                    \n\n\n            \n                \n                        Creates mark group for the AS tree\n\n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GroupMark, Mark } from 'vega';\nimport { BimodalMarkGroup } from './groups/bimodal';\nimport { MultiParentMarkGroup } from './groups/multiparent';\nimport { TreeMarkGroup } from './groups/tree';\n\nexport class Marks {\n  static create(): Mark[] {\n    return new Marks().marks;\n  }\n\n  /**\n   * List of vega marks\n   */\n  marks: Mark[];\n\n  constructor() {\n    this.marks = [this.makeMultiParentMarkGroup(), this.makeTreeMarkGroup(), this.makeBimodalMarkGroup()];\n  }\n\n  /**\n   * Creates mark group for the AS tree\n   */\n  makeTreeMarkGroup(): GroupMark {\n    return TreeMarkGroup.create();\n  }\n\n  /**\n   * Creates mark group for multiparent (depricated)\n   */\n  makeMultiParentMarkGroup(): GroupMark {\n    return MultiParentMarkGroup.create();\n  }\n\n  /**\n   * Creates mark group for bimodal network\n   */\n  makeBimodalMarkGroup(): GroupMark {\n    return BimodalMarkGroup.create();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Metadata.html":{"url":"interfaces/Metadata.html","title":"interface - Metadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Metadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bmType\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                        \n                                            ontologyType\n                                        \n                                \n                                \n                                        \n                                            ontologyTypeId\n                                        \n                                \n                                \n                                        \n                                            references\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bmType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTypeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyTypeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MoreOption.html":{"url":"interfaces/MoreOption.html","title":"interface - MoreOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MoreOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MousePositionTrackerModule.html":{"url":"modules/MousePositionTrackerModule.html","title":"module - MousePositionTrackerModule","body":"\n                   \n\n\n\n\n    Modules\n    MousePositionTrackerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/mouse-position-tracker.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent(el, 'mousemove').pipe(throttleTime(1000), map(formatData));\n\n  return events.subscribe((data) => ga.event('webpage', 'mousemove', data));\n}\n\n@NgModule()\nexport class MousePositionTrackerModule {\n  constructor(\n    // NOTE: Angular compiler fails when document is typed properly?!\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    @Inject(DOCUMENT) document: any,\n    ga: GoogleAnalyticsService,\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultiParentMarkGroup.html":{"url":"classes/MultiParentMarkGroup.html","title":"class - MultiParentMarkGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultiParentMarkGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/groups/multiparent.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeMultiParentMarkGroup\n                            \n                            \n                                makeMultiParentPathMarks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/groups/multiparent.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GroupMark\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/groups/multiparent.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/multiparent.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeMultiParentMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeMultiParentMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/multiparent.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeMultiParentPathMarks\n                        \n                    \n                \n            \n            \n                \nmakeMultiParentPathMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/multiparent.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { type: string; from: { data: string; }; encode: { update: { path: { field: string; }; stroke: { signal: string; }; strokeDash: { value: {}; }; opacity: {}; zIndex: { value: number; }; strokeWidth: { value: number; }; }; }; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GroupMark } from 'vega';\n\nexport class MultiParentMarkGroup {\n  static create(): GroupMark {\n    return new MultiParentMarkGroup().group;\n  }\n\n  group: GroupMark;\n\n  constructor() {\n    this.group = this.makeMultiParentMarkGroup();\n  }\n\n  makeMultiParentMarkGroup(): GroupMark {\n    return {\n      type: 'group',\n      name: 'multiParent',\n      marks: [\n        // this.makeMultiParentPathMarks()\n      ],\n    };\n  }\n\n  makeMultiParentPathMarks() {\n    return {\n      type: 'path',\n      from: { data: 'multi_parent_edges' },\n      encode: {\n        update: {\n          path: { field: 'path' },\n          stroke: { signal: 'datum.source.pathColor' },\n          strokeDash: { value: [5, 8] },\n          opacity: [\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            {\n              test: 'node__hover !== null && datum.source.id !== node__hover && node__click === null',\n              value: 0.25,\n            },\n            {\n              value: 0.4,\n            },\n          ],\n          zIndex: { value: -1 },\n          strokeWidth: { value: 2 },\n        },\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavItemComponent.html":{"url":"components/NavItemComponent.html","title":"component - NavItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/nav-item/nav-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-item\n            \n\n\n\n            \n                styleUrls\n                ./nav-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/nav-item/nav-item.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/nav-item/nav-item.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-item',\n  templateUrl: './nav-item.component.html',\n  styleUrls: ['./nav-item.component.scss'],\n})\nexport class NavItemComponent {\n  @Input() label = '';\n  @Input() disabled = false;\n}\n\n    \n\n    \n        \n  \n  {{ label }}\n\n\n    \n\n    \n                \n                    ./nav-item.component.scss\n                \n                .label {\n  padding-top: 10px;\n  font-size: 0.5625rem;\n}\n\n.nav-item {\n  // margin-top: 10px;\n  padding-top: 0.625rem;\n  cursor: pointer;\n  color: rgb(89, 89, 89);\n  transition: 0.2s all;\n}\n\n.nav-item:hover {\n  // background-color: #efefef;\n  color: black;\n}\n\n.nav-item:active {\n  // background-color: #d8d8d8;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavItemModule.html":{"url":"modules/NavItemModule.html","title":"module - NavItemModule","body":"\n                   \n\n\n\n\n    Modules\n    NavItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NavItemModule\n\n\n\ncluster_NavItemModule_exports\n\n\n\ncluster_NavItemModule_declarations\n\n\n\n\nNavItemComponent\n\nNavItemComponent\n\n\n\nNavItemModule\n\nNavItemModule\n\nNavItemModule -->\n\nNavItemComponent->NavItemModule\n\n\n\n\n\nNavItemComponent \n\nNavItemComponent \n\nNavItemComponent  -->\n\nNavItemModule->NavItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/nav-item/nav-item.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavItemComponent } from './nav-item.component';\n\n@NgModule({\n  declarations: [NavItemComponent],\n  imports: [CommonModule],\n  exports: [NavItemComponent],\n})\nexport class NavItemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavbarModule.html":{"url":"modules/NavbarModule.html","title":"module - NavbarModule","body":"\n                   \n\n\n\n\n    Modules\n    NavbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_NavbarModule_declarations\n\n\n\ncluster_NavbarModule_imports\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\n\n\nNavItemModule\n\nNavItemModule\n\nNavbarModule -->\n\nNavItemModule->NavbarModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nNavbarModule -->\n\nSearchModule->NavbarModule\n\n\n\n\n\nTableNestedMenuModule\n\nTableNestedMenuModule\n\nNavbarModule -->\n\nTableNestedMenuModule->NavbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/navbar/navbar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NavItemModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            TableNestedMenuModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NavItemModule } from '../../components/nav-item/nav-item.module';\nimport { SearchModule } from '../search/search.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TableNestedMenuModule } from '../../components/table-nested-menu/table-nested-menu.module';\n\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    NavItemModule,\n    SearchModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatMenuModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    TableNestedMenuModule,\n  ],\n  exports: [NavbarComponent],\n})\nexport class NavbarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoError.html":{"url":"classes/NoError.html","title":"class - NoError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[ERROR] No Error'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Node.html":{"url":"interfaces/Node.html","title":"interface - Node","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Node\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/indented-list/indented-list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            children\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        children:         Node[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Node[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FlatTreeControl } from '@angular/cdk/tree';\nimport { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTree, MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { ILNode } from '../../models/indent.model';\nimport { Row, Sheet } from '../../models/sheet.model';\nimport { IndentedListService } from './indented-list.service';\n\ninterface Node {\n  name: string;\n  ontologyId: string;\n  children?: Node[];\n}\n\ninterface FlatNode {\n  expandable: boolean;\n  name: string;\n  ontologyId: string;\n  level: number;\n}\n\n@Component({\n  selector: 'app-indent',\n  templateUrl: './indented-list.component.html',\n  styleUrls: ['./indented-list.component.scss'],\n})\nexport class IndentedListComponent implements OnInit, OnDestroy, AfterViewInit {\n  indentData = [];\n  activateNode?: unknown;\n  visible = false;\n\n  @Input() dataVersion?: unknown;\n  @Input() currentSheet!: Sheet;\n  @Input() sheetData: Row[] = [];\n  @Output() closeIL = new EventEmitter();\n  @Output() openBottomSheet = new EventEmitter();\n\n  @ViewChild('indentTree') indentTree!: MatTree;\n\n  hasChild = (_: number, node: FlatNode) => node.expandable;\n\n  treeControl = new FlatTreeControl(\n    (node) => node.level,\n    (node) => node.expandable,\n  );\n\n  private readonly transformer = (node: Node, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      ontologyId: node.ontologyId,\n      level,\n    };\n  };\n\n  treeFlattener = new MatTreeFlattener(\n    this.transformer,\n    (node) => node.level,\n    (node) => node.expandable,\n    (node) => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor(public indentService: IndentedListService) {}\n\n  ngOnInit(): void {\n    this.indentService.indentData$.subscribe((data) => {\n      if (data.data) {\n        this.initializeTree(data.data);\n        this.visible = true;\n      } else {\n        this.visible = false;\n      }\n    });\n\n    this.indentService.makeIndentData(this.currentSheet, this.sheetData);\n  }\n\n  ngAfterViewInit(): void {\n    if (this.indentTree) {\n      this.indentTree.treeControl.expandAll();\n    }\n  }\n\n  ngOnDestroy() {\n    this.visible = false;\n  }\n\n  public initializeTree(data: ILNode) {\n    this.dataSource.data = [data];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OmapConfig.html":{"url":"interfaces/OmapConfig.html","title":"interface - OmapConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OmapConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/omap.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            organsOnly\n                                        \n                                \n                                \n                                        \n                                            proteinsOnly\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organsOnly\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organsOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proteinsOnly\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proteinsOnly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OmapConfig {\n  organsOnly: boolean;\n  proteinsOnly: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OmapControlsComponent.html":{"url":"components/OmapControlsComponent.html","title":"component - OmapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OmapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/omap-controls/omap-controls.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-omap-controls\n            \n\n\n\n            \n                styleUrls\n                ./omap-controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./omap-controls.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkBoxClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                omaps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updateConfig\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/omap-controls/omap-controls.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        omaps\n                    \n                \n                \n                    \n                        Type :         OmapConfig\n\n                    \n                \n                \n                    \n                        Default value : { organsOnly: false, proteinsOnly: false }\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/omap-controls/omap-controls.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updateConfig\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/omap-controls/omap-controls.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkBoxClicked\n                        \n                    \n                \n            \n            \n                \ncheckBoxClicked(event: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/omap-controls/omap-controls.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { OmapConfig } from '../../models/omap.model';\nimport { Error } from '../../models/response.model';\n\n@Component({\n  selector: 'app-omap-controls',\n  templateUrl: './omap-controls.component.html',\n  styleUrls: ['./omap-controls.component.scss'],\n})\nexport class OmapControlsComponent {\n  @Input() omaps: OmapConfig = { organsOnly: false, proteinsOnly: false };\n  @Input() error!: Error;\n\n  @Output() updateConfig = new EventEmitter();\n\n  checkBoxClicked(event: Record) {\n    this.omaps.organsOnly = event['organsOnly'];\n    this.omaps.proteinsOnly = event['proteinsOnly'];\n    this.updateConfig.emit(this.omaps);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           Organ Mapping Antibody Panels (OMAPs) \n        \n      \n    \n\n    \n      \n        OMAP Organs Only\n      \n    \n    \n      \n        OMAP Proteins Only\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./omap-controls.component.scss\n                \n                @import './../../../assets/stylesheets/_colors.scss';\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n  box-shadow: none;\n}\n\n.mat-expansion-panel-header:not(.compare) {\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header {\n  transition: all 0.3s;\n  background-color: $secondary !important;\n  padding-left: 0.9375rem !important;\n  padding-right: 0.9375rem !important;\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header:hover {\n  background-color: darken($color: $secondary, $amount: 8%) !important;\n}\n\n.checkbox-label {\n  font-size: 0.89rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               Organ Mapping Antibody Panels (OMAPs)                                     OMAP Organs Only                            OMAP Proteins Only            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OmapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OmapControlsModule.html":{"url":"modules/OmapControlsModule.html","title":"module - OmapControlsModule","body":"\n                   \n\n\n\n\n    Modules\n    OmapControlsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OmapControlsModule\n\n\n\ncluster_OmapControlsModule_exports\n\n\n\ncluster_OmapControlsModule_declarations\n\n\n\n\nOmapControlsComponent\n\nOmapControlsComponent\n\n\n\nOmapControlsModule\n\nOmapControlsModule\n\nOmapControlsModule -->\n\nOmapControlsComponent->OmapControlsModule\n\n\n\n\n\nOmapControlsComponent \n\nOmapControlsComponent \n\nOmapControlsComponent  -->\n\nOmapControlsModule->OmapControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/omap-controls/omap-controls.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OmapControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OmapControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OmapControlsComponent } from './omap-controls.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n@NgModule({\n  declarations: [OmapControlsComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatTooltipModule,\n    FontAwesomeModule,\n    MatButtonModule,\n    MatCheckboxModule,\n  ],\n  exports: [OmapControlsComponent],\n})\nexport class OmapControlsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenBottomSheet.html":{"url":"classes/OpenBottomSheet.html","title":"class - OpenBottomSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenBottomSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: OpenBottomSheetData)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        OpenBottomSheetData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpenBottomSheetData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Bottom Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenBottomSheetDOI.html":{"url":"classes/OpenBottomSheetDOI.html","title":"class - OpenBottomSheetDOI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenBottomSheetDOI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DOI[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DOI[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DOI[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Bottom Sheet DOI'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:78\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenBottomSheetData.html":{"url":"interfaces/OpenBottomSheetData.html","title":"interface - OpenBottomSheetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenBottomSheetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ui.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                        \n                                            references\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Log } from './logs.model';\nimport { SnackbarType } from './response.model';\nimport { Reference } from './sheet.model';\n\nexport interface Snackbar {\n  opened: boolean;\n  text: string;\n  type: SnackbarType;\n}\n\nexport interface Loading {\n  loading: boolean;\n  loadingText: string;\n}\n\nexport interface OpenBottomSheetData {\n  name: string;\n  ontologyId: string;\n  group: number;\n  references: Reference[];\n  notes: string;\n}\n\nexport interface Logs {\n  sheetLogs: Log;\n  allLogs: Log[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenCompare.html":{"url":"classes/OpenCompare.html","title":"class - OpenCompare","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenCompare\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:93\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Compare'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:93\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenLoading.html":{"url":"classes/OpenLoading.html","title":"class - OpenLoading","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenLoading\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Loading'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenSearch.html":{"url":"classes/OpenSearch.html","title":"class - OpenSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:103\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Search'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:103\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenSnackbar.html":{"url":"classes/OpenSnackbar.html","title":"class - OpenSnackbar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenSnackbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string, type: SnackbarType)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        SnackbarType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[OPEN] Snackbar'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnackbarType\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/OrderByPipe.html":{"url":"pipes/OrderByPipe.html","title":"pipe - OrderByPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  OrderByPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/order-by/order-by.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        orderBy\n                    \n                    \n                        Pure\n                        true\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(array: T[], key)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/order-by/order-by.pipe.ts:9\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                array\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderBy',\n  pure: true,\n  standalone: true,\n})\nexport class OrderByPipe implements PipeTransform {\n  transform(array: T[], key: keyof T): T[] {\n    return array.slice().sort((a, b) => {\n      const aProp = a[key];\n      const bProp = b[key];\n      return aProp === bProp ? 0 : aProp > bProp ? 1 : -1;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Organ.html":{"url":"interfaces/Organ.html","title":"interface - Organ","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Organ\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            cellType\n                                        \n                                \n                                \n                                        \n                                            markers\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            organRow\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        markers:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organRow:         Organ[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Organ[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganTableOnClose.html":{"url":"interfaces/OrganTableOnClose.html","title":"interface - OrganTableOnClose","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganTableOnClose\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cache\n                                        \n                                \n                                \n                                        \n                                            organs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cache:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organs:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganTableSelect.html":{"url":"interfaces/OrganTableSelect.html","title":"interface - OrganTableSelect","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganTableSelect\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getFromCache\n                                        \n                                \n                                \n                                        \n                                            isIntilalSelect\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            omapOrgans\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getFromCache\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getFromCache:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isIntilalSelect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isIntilalSelect:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        omapOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        omapOrgans:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organs:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganTableSelectorComponent.html":{"url":"components/OrganTableSelectorComponent.html","title":"component - OrganTableSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrganTableSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/organ-table-selector/organ-table-selector.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-organ-table-selector\n            \n\n\n\n            \n                styleUrls\n                ./organ-table-selector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organ-table-selector.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentActive\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    Public\n                                ga\n                            \n                            \n                                getFromCache\n                            \n                            \n                                omapdataSource\n                            \n                            \n                                omapdisplayedColumns\n                            \n                            \n                                omapOrgans\n                            \n                            \n                                omapselection\n                            \n                            \n                                omapSheetOptions\n                            \n                            \n                                onClose\n                            \n                            \n                                organs\n                            \n                            \n                                selectedSheetOption\n                            \n                            \n                                selection\n                            \n                            \n                                sheetOptions\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSheets\n                            \n                            \n                                changeTab\n                            \n                            \n                                changeVersion\n                            \n                            \n                                checkboxLabel\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                masterToggle\n                            \n                            \n                                selectByHraVersion\n                            \n                            \n                                selectRow\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasSomeOrgans\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, dialogRef: MatDialogRef, data: OrganTableSelect, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        OrganTableSelect\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSheets\n                        \n                    \n                \n            \n            \n                \naddSheets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTab\n                        \n                    \n                \n            \n            \n                \nchangeTab(tabIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tabIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeVersion\n                        \n                    \n                \n            \n            \n                \nchangeVersion(value: string, row: SheetDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                row\n                                            \n                                                            SheetDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkboxLabel\n                        \n                    \n                \n            \n            \n                \ncheckboxLabel(row?: SheetDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            SheetDetails\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAllSelected\n                        \n                    \n                \n            \n            \n                \nisAllSelected()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        masterToggle\n                        \n                    \n                \n            \n            \n                \nmasterToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectByHraVersion\n                        \n                    \n                \n            \n            \n                \nselectByHraVersion(row: SheetDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            SheetDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectRow\n                        \n                    \n                \n            \n            \n                \nselectRow(row: SheetDetails)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            SheetDetails\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        componentActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganTableSelect\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['select', 'name', 'version']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFromCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapdataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapdisplayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'select',\n    'Organs',\n    'Multiplexed antibody-based imaging method',\n    'Tissue presevation method',\n    'OMAP-ID',\n    'Version',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapOrgans\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapselection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        omapSheetOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SheetDetails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:24\n                        \n                    \n\n            \n                \n                    Sheet configs of Omap config file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganTableOnClose\n\n                    \n                \n                \n                    \n                        Default value : {\n    organs: false,\n    cache: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:60\n                        \n                    \n\n            \n                \n                    Data to emit when dialog is closed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSheetOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:41\n                        \n                    \n\n            \n                \n                    Organ sheet selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SelectionModel(true, [])\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SheetDetails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:19\n                        \n                    \n\n            \n                \n                    Sheet configs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Window\n\n                    \n                \n                \n                    \n                        Default value : window\n                    \n                \n                    \n                        \n                                Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:37\n                        \n                    \n\n            \n                \n                    Document window object\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasSomeOrgans\n                    \n                \n\n                \n                    \n                        gethasSomeOrgans()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/organ-table-selector/organ-table-selector.component.ts:28\n                                \n                            \n                    \n                        \n                                Has some selected organs\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ConfigService } from '../../app-config.service';\nimport { GaAction, GaCategory, GaOrgansInfo } from '../../models/ga.model';\nimport { OrganTableOnClose, OrganTableSelect, SheetDetails } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-organ-table-selector',\n  templateUrl: './organ-table-selector.component.html',\n  styleUrls: ['./organ-table-selector.component.scss'],\n})\nexport class OrganTableSelectorComponent {\n  /**\n   * Sheet configs\n   */\n  sheetOptions: SheetDetails[] = [];\n\n  /**\n   * Sheet configs of Omap config file\n   */\n  omapSheetOptions: SheetDetails[] = [];\n  /**\n   * Has some selected organs\n   */\n  get hasSomeOrgans(): boolean {\n    if (!this.omapselection.isEmpty() || !this.selection.isEmpty()) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Document window object\n   */\n  window: Window = window;\n  /**\n   * Organ sheet selected\n   */\n  selectedSheetOption = '';\n  organs: string[] = [];\n  omapOrgans: string[] = [];\n  getFromCache: boolean;\n  displayedColumns: string[] = ['select', 'name', 'version'];\n  omapdisplayedColumns: string[] = [\n    'select',\n    'Organs',\n    'Multiplexed antibody-based imaging method',\n    'Tissue presevation method',\n    'OMAP-ID',\n    'Version',\n  ];\n  selection = new SelectionModel(true, []);\n  omapselection = new SelectionModel(true, []);\n  componentActive = 0;\n  /**\n   * Data to emit when dialog is closed\n   */\n  onClose: OrganTableOnClose = {\n    organs: false,\n    cache: true,\n  };\n\n  dataSource!: MatTableDataSource;\n  omapdataSource!: MatTableDataSource;\n\n  constructor(\n    public configService: ConfigService,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: OrganTableSelect,\n    public ga: GoogleAnalyticsService,\n  ) {\n    this.configService.omapsheetConfiguration$.subscribe((sheetOptions) => {\n      this.omapSheetOptions = sheetOptions.filter((o) => o.name !== 'some');\n      this.omapdataSource = new MatTableDataSource(this.omapSheetOptions);\n      this.omapdataSource.data?.forEach((de: SheetDetails) => {\n        de.version?.forEach((v) => {\n          de.symbol = v.value;\n        });\n      });\n    });\n\n    this.configService.sheetConfiguration$.subscribe((sheetOptions) => {\n      this.sheetOptions = sheetOptions.filter((o) => o.name !== 'some');\n      this.dataSource = new MatTableDataSource(this.sheetOptions);\n    });\n\n    this.getFromCache = data.getFromCache;\n    this.onClose.cache = data.getFromCache;\n    this.organs = data.organs ? data.organs : [];\n    this.omapOrgans = data.omapOrgans ? data.omapOrgans : [];\n    this.dataSource.data.forEach((dataElement) => {\n      dataElement.version?.forEach((v) => {\n        dataElement.symbol = v.value;\n      });\n    });\n\n    this.organs.forEach((item) => {\n      this.dataSource.data.forEach((dataElement) => {\n        dataElement?.version?.forEach((v) => {\n          if (v.value === item) {\n            dataElement.symbol = item;\n            this.selection.select(dataElement);\n          }\n        });\n      });\n    });\n    this.omapOrgans.forEach((item) => {\n      this.omapdataSource.data.forEach((dataElement) => {\n        dataElement?.version?.forEach((v) => {\n          if (v.value === item) {\n            dataElement.symbol = item;\n            this.omapselection.select(dataElement);\n          }\n        });\n      });\n    });\n  }\n\n  addSheets() {\n    const ga_details: GaOrgansInfo = {\n      selectedOrgans: [],\n      numOrgans: 0,\n    };\n    this.organs = [];\n    this.selection.selected.map((item) => {\n      if (item.name === 'all') {\n        return;\n      }\n      if (item.symbol) {\n        this.organs.push(item.symbol);\n        ga_details.selectedOrgans.push({\n          organ: item.display,\n          version: item.symbol.split('-').slice(1).join('-'),\n        });\n      }\n    });\n    ga_details.numOrgans = ga_details.selectedOrgans.length;\n    if (this.data.isIntilalSelect === true) {\n      this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, `SELECTED ORGANS INITIAL: ${JSON.stringify(ga_details)}`, 0);\n    } else {\n      this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, `SELECTED ORGANS EDIT: ${JSON.stringify(ga_details)}`, 0);\n    }\n    const omapOrgans: string[] = [];\n    this.omapselection.selected.forEach((element) => {\n      omapOrgans.push(element.symbol ?? '');\n    });\n    this.dialogRef.close({\n      organs: this.organs,\n      cache: this.getFromCache,\n      omapOrgans: omapOrgans,\n    });\n  }\n\n  isAllSelected() {\n    const selection = this.componentActive === 0 ? this.selection : this.omapselection;\n    const dataSource = this.componentActive === 0 ? this.dataSource : this.omapdataSource;\n    const numSelected = selection.selected.length;\n    const numRows = dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    const selection = this.componentActive === 0 ? this.selection : this.omapselection;\n    const dataSource = this.componentActive === 0 ? this.dataSource : this.omapdataSource;\n    if (this.isAllSelected()) {\n      selection.clear();\n      return;\n    }\n    selection.select(...dataSource.data);\n  }\n\n  checkboxLabel(row?: SheetDetails): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${(row.position ?? 0) + 1}`;\n  }\n\n  changeVersion(value: string, row: SheetDetails): void {\n    if (row.name === 'all') {\n      row.symbol = value;\n      this.selectByHraVersion(row);\n    } else {\n      row.symbol = value;\n    }\n  }\n\n  selectByHraVersion(row: SheetDetails): void {\n    const selectedVersion = row.symbol?.split('-')[1] ?? row.version?.slice(-1)[0].hraVersion;\n    this.dataSource.data.forEach((dataElement) => {\n      const version = dataElement.version?.find((v) => v.hraVersion?.includes(selectedVersion ?? ''));\n      if (version) {\n        dataElement.symbol = version.value;\n        this.selection.select(dataElement);\n      } else {\n        this.selection.deselect(dataElement);\n      }\n    });\n  }\n\n  selectRow(row: SheetDetails): void {\n    if (this.componentActive === 0) {\n      if (row.name === 'all') {\n        if (this.selection.isSelected(row)) {\n          this.selection.clear();\n        } else {\n          this.selectByHraVersion(row);\n        }\n      } else {\n        this.selection.toggle(row);\n      }\n    } else {\n      this.omapselection.toggle(row);\n    }\n  }\n\n  changeTab(tabIndex: number) {\n    this.componentActive = tabIndex;\n  }\n}\n\n    \n\n    \n        \n  Select one or more ASCT+B Tables\n  \n    \n      Cache\n    \n  \n\n\n\n  \n    \n      \n        \n          \n            Select one or more Organs\n          \n          \n          \n            \n              \n              \n            \n            \n              \n              \n            \n          \n          \n            Organs\n            \n              {{ element.display }}\n            \n          \n          \n            Version\n            \n               1\">\n                \n                  \n                    \n                      {{ option.viewValue }}\n                    \n                  \n                \n              \n              \n                {{ element.version[0].viewValue }} {{ changeVersion(element.version[0].value, element) }}\n              \n            \n          \n\n          \n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            Select one or more Organs\n          \n          \n          \n            \n              \n              \n            \n            \n              \n              \n            \n          \n          \n            Organs\n            \n              {{ element.name }}\n            \n          \n          \n            Multiplexed antibody-based imaging method\n            \n              {{ element.imagingMethod }}\n            \n          \n          \n            Tissue presevation method\n            \n              {{ element.tissuePreservationMethod }}\n            \n          \n          \n            OMAP-ID\n            \n              {{ element.omapId }}\n            \n          \n          \n            Version\n            \n               1\">\n                \n                  \n                    \n                      {{ option.viewValue }}\n                    \n                  \n                \n              \n              \n                {{ element.version[0].viewValue }}\n              \n            \n          \n\n          \n          \n        \n      \n    \n  \n\n\n\n  \n    Cancel\n    \n      Submit\n    \n  \n\n\n    \n\n    \n                \n                    ./organ-table-selector.component.scss\n                \n                .button-container {\n  width: 100%;\n  justify-content: space-between;\n  display: flex;\n  margin-top: 1rem;\n  height: 3.8rem;\n  padding: 0.5rem 1rem 0rem 1rem;\n}\n\n.version-dropdown {\n  position: relative;\n  top: 0.525rem;\n}\n\n.organ-name-label {\n  font-size: 0.9rem;\n  padding: unset;\n}\n.imaging-method {\n  padding-left: 0.5rem;\n}\n\n.select-deselect-all {\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 0.938rem;\n}\n\n.add-cancel-button {\n  border: 0.063rem solid rgb(196, 196, 196);\n  border-radius: 0.5rem !important;\n}\n\n.orgon-selection-box {\n  margin-bottom: 0;\n}\n\n.orgon-selection-button {\n  width: 100%;\n}\n\n::ng-deep .orgon-selection-box .mat-form-field-underline {\n  display: none;\n}\n\n.mat-table {\n  overflow-x: scroll;\n}\n\n.mat-cell,\n.mat-header-cell {\n  word-wrap: initial;\n  display: table-cell;\n  padding: 0rem 0.625rem;\n  line-break: auto;\n  width: fit-content;\n  white-space: normal;\n  overflow: hidden;\n  vertical-align: middle;\n}\n\n.mat-row,\n.mat-header-row {\n  display: table-row;\n}\n\n.table-container {\n  margin-top: 0.625rem;\n  max-height: 18.75rem;\n  overflow: auto;\n}\n\n.selector-title-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: 0.75rem;\n  padding: 0.5rem 1rem 0 1rem;\n}\n\n.title {\n  margin-bottom: 0rem !important;\n}\n\n.toggle-container {\n  display: flex;\n  align-items: center;\n}\n\n.cache-slider {\n  font-weight: 500;\n}\n\nmat-tab-group {\n  padding: 0rem 1rem 0rem 1rem;\n\n  ::ng-deep mat-tab-header {\n    border-style: solid;\n    border-width: 0px 0px 1px 0px;\n  }\n}\n\n.version-dropdown ::ng-deep .mat-mdc-form-field-flex .mat-mdc-form-field-infix {\n  padding-top: unset;\n  padding-bottom: unset;\n  // padding: 0.432rem 0;\n  min-height: 2.375rem;\n}\n\nth {\n  font-size: 0.8rem;\n  color: #7588a1;\n  font-weight: 400;\n}\n\n::ng-deep .mat-mdc-select-trigger .mat-mdc-select-value .mat-mdc-select-value-text {\n  padding: unset;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Select one or more ASCT+B Tables            Cache                                                Select one or more Organs                                                                                                                                                                      Organs                          {{ element.display }}                                            Version                           1\">                                                                            {{ option.viewValue }}                                                                                                  {{ element.version[0].viewValue }} {{ changeVersion(element.version[0].value, element) }}                                                                                                                      Select one or more Organs                                                                                                                                                                      Organs                          {{ element.name }}                                            Multiplexed antibody-based imaging method                          {{ element.imagingMethod }}                                            Tissue presevation method                          {{ element.tissuePreservationMethod }}                                            OMAP-ID                          {{ element.omapId }}                                            Version                           1\">                                                                            {{ option.viewValue }}                                                                                                  {{ element.version[0].viewValue }}                                                                                  Cancel          Submit      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganTableSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganTableSelectorModule.html":{"url":"modules/OrganTableSelectorModule.html","title":"module - OrganTableSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganTableSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganTableSelectorModule\n\n\n\ncluster_OrganTableSelectorModule_exports\n\n\n\ncluster_OrganTableSelectorModule_declarations\n\n\n\n\nOrganTableSelectorComponent\n\nOrganTableSelectorComponent\n\n\n\nOrganTableSelectorModule\n\nOrganTableSelectorModule\n\nOrganTableSelectorModule -->\n\nOrganTableSelectorComponent->OrganTableSelectorModule\n\n\n\n\n\nOrganTableSelectorComponent \n\nOrganTableSelectorComponent \n\nOrganTableSelectorComponent  -->\n\nOrganTableSelectorModule->OrganTableSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/organ-table-selector/organ-table-selector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganTableSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganTableSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrganTableSelectorComponent } from './organ-table-selector.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n@NgModule({\n  declarations: [OrganTableSelectorComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatMenuModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n  ],\n  exports: [OrganTableSelectorComponent],\n})\nexport class OrganTableSelectorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaygroundComponent.html":{"url":"components/PlaygroundComponent.html","title":"component - PlaygroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaygroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/playground/playground.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-playground\n            \n\n\n\n            \n                styleUrls\n                ./playground.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./playground.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSheet\n                            \n                            \n                                    \n                                data$\n                            \n                            \n                                    Public\n                                    Readonly\n                                ga\n                            \n                            \n                                linkFormControl\n                            \n                            \n                                prevTab\n                            \n                            \n                                    \n                                sheet$\n                            \n                            \n                                    \n                                spreadsheet\n                            \n                            \n                                spreadSheetData\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                            \n                                tabIndex\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLinkFormat\n                            \n                            \n                                generateColumns\n                            \n                            \n                                initTable\n                            \n                            \n                                tabChange\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/playground/playground.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLinkFormat\n                        \n                    \n                \n            \n            \n                \ncheckLinkFormat(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/playground/playground.component.ts:280\n                        \n                    \n\n\n            \n                \n                        Link validation function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { sheetID: any; gid: any; csvUrl: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateColumns\n                        \n                    \n                \n            \n            \n                \ngenerateColumns(len: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/playground/playground.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Add colums\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                len\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     jexcel.Column[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initTable\n                        \n                    \n                \n            \n            \n                \ninitTable(data: string[][])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/playground/playground.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Initialize jexcel table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    table data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabChange\n                        \n                    \n                \n            \n            \n                \ntabChange(tab: MatTabChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/playground/playground.component.ts:249\n                        \n                    \n\n\n            \n                \n                        Change tabs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tab\n                                            \n                                                        MatTabChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    table change event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(data: UploadForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/playground/playground.component.ts:263\n                        \n                    \n\n\n            \n                \n                        Read the google sheet link and upload\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UploadForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:39\n                        \n                    \n\n            \n                \n                    Selected sheet\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getParsedData)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linkFormControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [\n    Validators.compose([\n      Validators.required,\n      Validators.pattern(/\\/([\\w-_]{15,})\\/(.*?gid=(\\d+))?|\\w*csv$/),\n    ]) as ValidatorFn,\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:48\n                        \n                    \n\n            \n                \n                    Controller for entering the link\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:35\n                        \n                    \n\n            \n                \n                    Keep track of previous tab. Default to 0\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sheet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getSheet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        spreadsheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('spreadsheet')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spreadSheetData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:27\n                        \n                    \n\n            \n                \n                    Data for the table view\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:43\n                        \n                    \n\n            \n                \n                    Keeps track of the tab index\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :     jexcel.JspreadsheetInstance\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/playground/playground.component.ts:31\n                        \n                    \n\n            \n                \n                    Instance of jspreadsheet-ce(Earlier: jexcel) table\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { UntypedFormControl, ValidatorFn, Validators } from '@angular/forms';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { Select, Store } from '@ngxs/store';\nimport * as jexcel from 'jspreadsheet-ce';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { FetchSheetData, UpdatePlaygroundData } from '../../actions/sheet.actions';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { Sheet, UploadForm } from '../../models/sheet.model';\nimport { SheetState } from '../../store/sheet.state';\n\n@Component({\n  selector: 'app-playground',\n  templateUrl: './playground.component.html',\n  styleUrls: ['./playground.component.scss'],\n})\nexport class PlaygroundComponent implements AfterViewInit {\n  @ViewChild('spreadsheet') spreadsheet!: ElementRef;\n\n  @Select(SheetState.getParsedData) data$!: Observable;\n  @Select(SheetState.getSheet) sheet$!: Observable;\n\n  /**\n   * Data for the table view\n   */\n  spreadSheetData: string[][] = [];\n  /**\n   * Instance of jspreadsheet-ce(Earlier: jexcel) table\n   */\n  table!: jexcel.JspreadsheetInstance;\n  /**\n   * Keep track of previous tab. Default to 0\n   */\n  prevTab = 0;\n  /**\n   * Selected sheet\n   */\n  currentSheet!: Sheet;\n  /**\n   * Keeps track of the tab index\n   */\n  tabIndex!: number;\n\n  /**\n   * Controller for entering the link\n   */\n  linkFormControl = new UntypedFormControl('', [\n    Validators.compose([\n      Validators.required,\n      Validators.pattern(/\\/([\\w-_]{15,})\\/(.*?gid=(\\d+))?|\\w*csv$/),\n    ]) as ValidatorFn,\n  ]);\n\n  constructor(\n    public readonly store: Store,\n    public readonly ga: GoogleAnalyticsService,\n  ) {\n    this.sheet$.subscribe((sheet) => {\n      this.currentSheet = sheet;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.data$.subscribe((data) => {\n      if (data.length) {\n        this.spreadSheetData = data;\n        if (!this.table) {\n          this.initTable(data);\n        } else {\n          this.table.destroy();\n          this.initTable(data);\n        }\n      }\n    });\n  }\n\n  /**\n   * Add colums\n   */\n  generateColumns(len: number): jexcel.Column[] {\n    const columns = [];\n    for (let i = 0; i  {\n        this.spreadSheetData = data;\n      },\n      contextMenu(obj, x, y) {\n        const items = [];\n\n        if (y === null) {\n          // Insert a new column\n          if (obj.options.allowInsertColumn === true) {\n            items.push({\n              title: obj.options.text?.insertANewColumnBefore,\n              onclick() {\n                obj.insertColumn(1, parseInt(x ?? '', 10), true);\n              },\n            });\n          }\n\n          if (obj.options.allowInsertColumn === true) {\n            items.push({\n              title: obj.options.text?.insertANewColumnAfter,\n              onclick() {\n                obj.insertColumn(1, parseInt(x ?? '', 10), false);\n              },\n            });\n          }\n\n          // Delete a column\n          if (obj.options.allowDeleteColumn === true) {\n            items.push({\n              title: obj.options.text?.deleteSelectedColumns,\n              onclick() {\n                obj.deleteColumn(obj.getSelectedColumns().length ? undefined : parseInt(x ?? '', 10));\n              },\n            });\n          }\n\n          // Rename column\n          if (obj.options.allowRenameColumn === true) {\n            items.push({\n              title: obj.options.text?.renameThisColumn,\n              onclick() {\n                obj.setHeader(parseInt(x ?? '', 10));\n              },\n            });\n          }\n\n          // Sorting\n          if (obj.options.columnSorting === true) {\n            // Line\n            items.push({ type: 'line' });\n\n            items.push({\n              title: obj.options.text?.orderAscending,\n              onclick() {\n                obj.orderBy(parseInt(x ?? '', 10), 0);\n              },\n            });\n            items.push({\n              title: obj.options.text?.orderDescending,\n              onclick() {\n                obj.orderBy(parseInt(x ?? '', 10), 1);\n              },\n            });\n          }\n        } else {\n          // Insert new row\n          if (obj.options.allowInsertRow === true) {\n            items.push({\n              title: obj.options.text?.insertANewRowBefore,\n              onclick() {\n                obj.insertRow(1, parseInt(y, 10), 1);\n              },\n            });\n\n            items.push({\n              title: obj.options.text?.insertANewRowAfter,\n              onclick() {\n                obj.insertRow(1, parseInt(y, 10));\n              },\n            });\n          }\n\n          if (obj.options.allowDeleteRow === true) {\n            items.push({\n              title: obj.options.text?.deleteSelectedRows,\n              onclick() {\n                obj.deleteRow(obj.getSelectedRows().length ? undefined : parseInt(y, 10));\n              },\n            });\n          }\n\n          if (x) {\n            if (obj.options.allowComments === true) {\n              items.push({ type: 'line' });\n\n              const title = obj.records[+y][+x].getAttribute('title') || '';\n\n              items.push({\n                title: title ? obj.options.text?.editComments : obj.options.text?.addComments,\n                onclick() {\n                  obj.setComments(\n                    [parseInt(x, 10), parseInt(y, 10)],\n                    prompt(obj.options.text?.comments, title) ?? '',\n                    '',\n                  );\n                },\n              });\n\n              if (title) {\n                items.push({\n                  title: obj.options.text?.clearComments,\n                  onclick() {\n                    obj.setComments([parseInt(x, 10), parseInt(y, 10)], '', '');\n                  },\n                });\n              }\n            }\n          }\n        }\n\n        // Line\n        items.push({ type: 'line' });\n\n        // Save\n        if (obj.options.allowExport) {\n          items.push({\n            title: obj.options.text?.saveAs,\n            shortcut: 'Ctrl + S',\n            onclick() {\n              obj.download(true);\n            },\n          });\n        }\n\n        return items;\n      },\n      columns: [...this.generateColumns(data[0].length)],\n      style: {\n        A1: 'width: 100px;',\n      },\n    });\n  }\n\n  /**\n   * Change tabs\n   *\n   * @param tab table change event\n   */\n  tabChange(tab: MatTabChangeEvent) {\n    if (this.prevTab === 1 && tab.index === 0) {\n      this.spreadSheetData = this.spreadSheetData.filter((row) => {\n        return row.some((cell) => cell.length > 0 && cell !== '\\u0000');\n      });\n      this.store.dispatch(new UpdatePlaygroundData(this.spreadSheetData));\n    }\n    this.prevTab = tab.index;\n    this.ga.event(GaAction.NAV, GaCategory.PLAYGROUND, 'Change playground tab', tab.index);\n  }\n\n  /**\n   * Read the google sheet link and upload\n   */\n  upload(data: UploadForm) {\n    const sheet = JSON.parse(JSON.stringify(this.currentSheet));\n    sheet.gid = data.gid;\n    sheet.sheetId = data.sheetId;\n    sheet.csvUrl = data.csvUrl;\n    this.tabIndex = 0;\n    sheet.config.height = 1400;\n    if (data.formData) {\n      sheet.formData = data.formData;\n    }\n    this.store.dispatch(new FetchSheetData(sheet));\n    this.ga.event(GaAction.CLICK, GaCategory.PLAYGROUND, 'Upload Playground Sheet', sheet.sheetId);\n  }\n\n  /**\n   * Link validation function\n   */\n  checkLinkFormat(url: string) {\n    if (url.startsWith('https://docs.google.com/spreadsheets/d/')) {\n      const splitUrl = url.split('/');\n      if (splitUrl.length === 7) {\n        return {\n          sheetID: splitUrl[5],\n          gid: splitUrl[6].split('=')[1],\n          csvUrl: '',\n        };\n      }\n    }\n\n    return {\n      sheetID: '0',\n      gid: '0',\n      csvUrl: url,\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./playground.component.scss\n                \n                .jexcel_about {\n  visibility: none !important;\n}\n\n::ng-deep .jexcel tbody tr:nth-child(11) {\n  font-weight: bold;\n}\n\n.remove-border-bottom ::ng-deep .mat-tab-header {\n  // border-bottom: none;\n  border-bottom: 0.1875rem solid #444a6510;\n}\n\n::ng-deep .mat-tab-labels {\n  background-color: white !important;\n  border: 0rem !important;\n}\n\n::ng-deep .mat-mdc-tab.mdc-tab {\n  padding: 0rem 3.75rem;\n}\n\n::ng-deep .jexcel > tbody > tr > td:nth-child(2) {\n  border: 0.0625rem solid #e3e3e3;\n  overflow: visible;\n}\n\n::ng-deep .jexcel > thead > tr > td {\n  border: 0.0625rem solid #e3e3e3;\n  overflow: visible;\n}\n\n.upload {\n  margin-top: 1rem;\n  display: block;\n  width: 50rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaygroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlaygroundModule.html":{"url":"modules/PlaygroundModule.html","title":"module - PlaygroundModule","body":"\n                   \n\n\n\n\n    Modules\n    PlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlaygroundModule\n\n\n\ncluster_PlaygroundModule_declarations\n\n\n\ncluster_PlaygroundModule_exports\n\n\n\ncluster_PlaygroundModule_imports\n\n\n\n\nPlaygroundComponent\n\nPlaygroundComponent\n\n\n\nPlaygroundModule\n\nPlaygroundModule\n\nPlaygroundModule -->\n\nPlaygroundComponent->PlaygroundModule\n\n\n\n\n\nPlaygroundComponent \n\nPlaygroundComponent \n\nPlaygroundComponent  -->\n\nPlaygroundModule->PlaygroundComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nPlaygroundModule -->\n\nFileUploadModule->PlaygroundModule\n\n\n\n\n\nTreeModule\n\nTreeModule\n\nPlaygroundModule -->\n\nTreeModule->PlaygroundModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nPlaygroundModule -->\n\nUploadModule->PlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/playground/playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PlaygroundComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileUploadModule\n                        \n                        \n                            TreeModule\n                        \n                        \n                            UploadModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlaygroundComponent } from './playground.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { TreeModule } from '../tree/tree.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { FileUploadModule } from '../../components/file-upload/file-upload.module';\nimport { UploadModule } from '../../components/upload/upload.module';\n\n@NgModule({\n  declarations: [PlaygroundComponent],\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    TreeModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n    UploadModule,\n  ],\n  exports: [PlaygroundComponent],\n})\nexport class PlaygroundModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlaygroundSheetOptions.html":{"url":"interfaces/PlaygroundSheetOptions.html","title":"interface - PlaygroundSheetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlaygroundSheetOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sheet\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sheet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Reference.html":{"url":"interfaces/Reference.html","title":"interface - Reference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Reference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            doi\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshData.html":{"url":"classes/RefreshData.html","title":"class - RefreshData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[FETCH] Refresh'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Report.html":{"url":"interfaces/Report.html","title":"interface - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            ASWithNoCT\n                                        \n                                \n                                \n                                        \n                                            ASWithNoLink\n                                        \n                                \n                                \n                                        \n                                            biomarkers\n                                        \n                                \n                                \n                                        \n                                            BWithNoLink\n                                        \n                                \n                                \n                                        \n                                            cellTypes\n                                        \n                                \n                                \n                                        \n                                            CTWithNoB\n                                        \n                                \n                                \n                                        \n                                            CTWithNoLink\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:         AS[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AS[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ASWithNoCT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ASWithNoCT:         EntityWithNoOtherEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityWithNoOtherEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ASWithNoLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ASWithNoLink:         AS[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AS[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers:         B[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BWithNoLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BWithNoLink:         B[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTypes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTypes:         CT[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CT[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CTWithNoB\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CTWithNoB:         EntityWithNoOtherEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityWithNoOtherEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CTWithNoLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CTWithNoLink:         CT[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CT[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReportData.html":{"url":"interfaces/ReportData.html","title":"interface - ReportData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReportData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/report.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            sheet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Report\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Report\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheet:         Sheet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sheet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sheet } from './sheet.model';\nimport { AS, B, CT } from './tree.model';\n\nexport interface Report {\n  ASWithNoLink: AS[];\n  CTWithNoLink: CT[];\n  BWithNoLink: B[];\n  anatomicalStructures: AS[];\n  cellTypes: CT[];\n  biomarkers: B[];\n  ASWithNoCT: EntityWithNoOtherEntity[];\n  CTWithNoB: EntityWithNoOtherEntity[];\n}\n\nexport interface ReportData {\n  data: Report;\n  sheet: Sheet;\n}\n\nexport interface CByOrgan {\n  organName?: string;\n  anatomicalStructures?: number;\n  cellTypes?: number;\n  biomarkers?: number;\n}\n\nexport interface EntityWithNoOtherEntity {\n  structure: string;\n  organName: string;\n  link: string;\n  label: string;\n}\n\nexport interface BiomarkersNamesInReport {\n  type: string;\n  name: string;\n}\n\nexport interface BiomarkersCounts {\n  name: string;\n  value: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportLog.html":{"url":"classes/ReportLog.html","title":"class - ReportLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/logs.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                icon\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, message: string, icon?: string, version: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/logs.actions.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[REPORT] Log'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'latest'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ReportLog {\n  static readonly type = '[REPORT] Log';\n  constructor(\n    public type: string,\n    public message: string,\n    public icon?: string,\n    public version = 'latest',\n  ) {}\n}\n\nexport class ReportMultiLog {\n  static readonly type = '[REPORT] Milti Log';\n  constructor(\n    public message: string,\n    public icon: string,\n    public multiMessage = '',\n  ) {}\n}\n\nexport class ClearSheetLogs {\n  static readonly type = '[CLEAR] Sheet Logs';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReportModule.html":{"url":"modules/ReportModule.html","title":"module - ReportModule","body":"\n                   \n\n\n\n\n    Modules\n    ReportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_declarations\n\n\n\ncluster_ReportModule_exports\n\n\n\ncluster_ReportModule_imports\n\n\n\n\nReportComponent\n\nReportComponent\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nReportComponent->ReportModule\n\n\n\n\n\nReportComponent \n\nReportComponent \n\nReportComponent  -->\n\nReportModule->ReportComponent \n\n\n\n\n\nOrderByPipe\n\nOrderByPipe\n\nReportModule -->\n\nOrderByPipe->ReportModule\n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nReportModule -->\n\nSidenavHeaderModule->ReportModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nReportModule -->\n\nSidenavModule->ReportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/report/report.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReportComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OrderByPipe\n                        \n                        \n                            SidenavHeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReportComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavModule } from '../sidenav/sidenav.module';\nimport { ReportComponent } from './report.component';\nimport { SidenavHeaderModule } from '../sidenav-header/sidenav-header.module';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSortModule } from '@angular/material/sort';\nimport { OrderByPipe } from '../../pipes/order-by/order-by.pipe';\n\n@NgModule({\n  declarations: [ReportComponent],\n  imports: [\n    CommonModule,\n    SidenavModule,\n    SidenavHeaderModule,\n    MatTabsModule,\n    NgxChartsModule,\n    MatExpansionModule,\n    OrderByPipe,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n    MatTooltipModule,\n    MatSortModule,\n  ],\n  exports: [ReportComponent],\n})\nexport class ReportModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportMultiLog.html":{"url":"classes/ReportMultiLog.html","title":"class - ReportMultiLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportMultiLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/logs.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                multiMessage\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, icon: string, multiMessage: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/logs.actions.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        multiMessage\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        multiMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[REPORT] Milti Log'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/logs.actions.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ReportLog {\n  static readonly type = '[REPORT] Log';\n  constructor(\n    public type: string,\n    public message: string,\n    public icon?: string,\n    public version = 'latest',\n  ) {}\n}\n\nexport class ReportMultiLog {\n  static readonly type = '[REPORT] Milti Log';\n  constructor(\n    public message: string,\n    public icon: string,\n    public multiMessage = '',\n  ) {}\n}\n\nexport class ClearSheetLogs {\n  static readonly type = '[CLEAR] Sheet Logs';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/response.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: any;\n  msg: string;\n  status: number;\n}\n\nexport interface Error {\n  hasError?: boolean;\n  msg?: string;\n  status?: number;\n  hasGidError?: boolean;\n}\n\nexport enum SnackbarType {\n  success = 'success',\n  error = 'error',\n  warning = 'warning',\n}\n\nexport interface ExportVega {\n  option: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  spec?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseData.html":{"url":"interfaces/ResponseData.html","title":"interface - ResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            csv\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isOmap\n                                        \n                                \n                                \n                                        \n                                            parsed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        csv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csv:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Row[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Row[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isOmap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isOmap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parsed:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootModule.html":{"url":"modules/RootModule.html","title":"module - RootModule","body":"\n                   \n\n\n\n\n    Modules\n    RootModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RootModule\n\n\n\ncluster_RootModule_exports\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_RootModule_declarations\n\n\n\n\nRootComponent\n\nRootComponent\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\n\n\nRootComponent \n\nRootComponent \n\nRootComponent  -->\n\nRootModule->RootComponent \n\n\n\n\n\nCompareModule\n\nCompareModule\n\nRootModule -->\n\nCompareModule->RootModule\n\n\n\n\n\nControlPaneModule\n\nControlPaneModule\n\nRootModule -->\n\nControlPaneModule->RootModule\n\n\n\n\n\nDebugLogsModule\n\nDebugLogsModule\n\nRootModule -->\n\nDebugLogsModule->RootModule\n\n\n\n\n\nDoiModule\n\nDoiModule\n\nRootModule -->\n\nDoiModule->RootModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\nRootModule -->\n\nErrorModule->RootModule\n\n\n\n\n\nIndentedListModule\n\nIndentedListModule\n\nRootModule -->\n\nIndentedListModule->RootModule\n\n\n\n\n\nInfoModule\n\nInfoModule\n\nRootModule -->\n\nInfoModule->RootModule\n\n\n\n\n\nLegendModule\n\nLegendModule\n\nRootModule -->\n\nLegendModule->RootModule\n\n\n\n\n\nNavbarModule\n\nNavbarModule\n\nRootModule -->\n\nNavbarModule->RootModule\n\n\n\n\n\nPlaygroundModule\n\nPlaygroundModule\n\nRootModule -->\n\nPlaygroundModule->RootModule\n\n\n\n\n\nReportModule\n\nReportModule\n\nRootModule -->\n\nReportModule->RootModule\n\n\n\n\n\nTableNestedMenuModule\n\nTableNestedMenuModule\n\nRootModule -->\n\nTableNestedMenuModule->RootModule\n\n\n\n\n\nTreeModule\n\nTreeModule\n\nRootModule -->\n\nTreeModule->RootModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root/root.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RootComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CompareModule\n                        \n                        \n                            ControlPaneModule\n                        \n                        \n                            DebugLogsModule\n                        \n                        \n                            DoiModule\n                        \n                        \n                            ErrorModule\n                        \n                        \n                            IndentedListModule\n                        \n                        \n                            InfoModule\n                        \n                        \n                            LegendModule\n                        \n                        \n                            NavbarModule\n                        \n                        \n                            PlaygroundModule\n                        \n                        \n                            ReportModule\n                        \n                        \n                            TableNestedMenuModule\n                        \n                        \n                            TreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RootComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RootComponent } from './root.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { ControlPaneModule } from '../control-pane/control-pane.module';\nimport { ReportModule } from '../../components/report/report.module';\nimport { IndentedListModule } from '../../components/indented-list/indented-list.module';\nimport { DebugLogsModule } from '../../components/debug-logs/debug-logs.module';\nimport { CompareModule } from '../../components/compare/compare.module';\nimport { NavbarModule } from '../navbar/navbar.module';\nimport { ErrorModule } from '../../components/error/error.module';\nimport { LegendModule } from '../../components/legend/legend.module';\nimport { PlaygroundModule } from '../playground/playground.module';\nimport { TreeModule } from '../tree/tree.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { DoiModule } from '../../components/doi/doi.module';\nimport { InfoModule } from '../../components/info/info.module';\nimport { TableNestedMenuModule } from '../../components/table-nested-menu/table-nested-menu.module';\n\n@NgModule({\n  declarations: [RootComponent],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    ControlPaneModule,\n    ReportModule,\n    IndentedListModule,\n    DebugLogsModule,\n    CompareModule,\n    NavbarModule,\n    ErrorModule,\n    LegendModule,\n    PlaygroundModule,\n    TreeModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    MatBottomSheetModule,\n    DragDropModule,\n    DoiModule,\n    InfoModule,\n    TableNestedMenuModule,\n  ],\n  exports: [RootComponent],\n})\nexport class RootModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Row.html":{"url":"interfaces/Row.html","title":"interface - Row","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Row\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomical_structures\n                                        \n                                \n                                \n                                        \n                                            biomarkers\n                                        \n                                \n                                \n                                        \n                                            biomarkers_gene\n                                        \n                                \n                                \n                                        \n                                            biomarkers_lipids\n                                        \n                                \n                                \n                                        \n                                            biomarkers_meta\n                                        \n                                \n                                \n                                        \n                                            biomarkers_prot\n                                        \n                                \n                                \n                                        \n                                            biomarkers_protein\n                                        \n                                \n                                \n                                        \n                                            cell_types\n                                        \n                                \n                                \n                                        \n                                            organName\n                                        \n                                \n                                \n                                        \n                                            references\n                                        \n                                \n                                \n                                        \n                                            tableVersion\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomical_structures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomical_structures:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers_gene\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers_gene:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers_lipids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers_lipids:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers_meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers_meta:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers_prot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers_prot:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        biomarkers_protein\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biomarkers_protein:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cell_types\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cell_types:         Structure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Structure[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tableVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scales.html":{"url":"classes/Scales.html","title":"class - Scales","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scales\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/scales.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scales\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeBiomodalScale\n                            \n                            \n                                makeTreeLegendScale\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/scales.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        scales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Scale[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/scales.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/scales.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Scale[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBiomodalScale\n                        \n                    \n                \n            \n            \n                \nmakeBiomodalScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/scales.ts:21\n                        \n                    \n\n\n            \n                \n                        Creates the color scaling that is used to form the\nbimodal and tree legend. Red, blue and gree are the\ncolors. It uses the properly 'groupName' to assign\ncolor.\n\n\n                        \n                            Returns :     Scale\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeLegendScale\n                        \n                    \n                \n            \n            \n                \nmakeTreeLegendScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/scales.ts:36\n                        \n                    \n\n\n            \n                \n                        Creates the color scaling that is used to form the\ntree legend. It is for the See Debug Log option in\nthe legend and only has the red color.\n\n\n                        \n                            Returns :     Scale\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Scale } from 'vega';\n\nexport class Scales {\n  static create(): Scale[] {\n    return new Scales().scales;\n  }\n\n  scales: Scale[];\n\n  constructor() {\n    this.scales = [this.makeBiomodalScale(), this.makeTreeLegendScale()];\n  }\n\n  /**\n   * Creates the color scaling that is used to form the\n   * bimodal and tree legend. Red, blue and gree are the\n   * colors. It uses the properly 'groupName' to assign\n   * color.\n   */\n\n  makeBiomodalScale(): Scale {\n    return {\n      name: 'bimodal',\n      type: 'ordinal',\n      domain: { data: 'nodes', field: 'groupName' },\n      range: ['#E41A1C', '#377EB8', '#4DAF4A'],\n    };\n  }\n\n  /**\n   * Creates the color scaling that is used to form the\n   * tree legend. It is for the See Debug Log option in\n   * the legend and only has the red color.\n   */\n\n  makeTreeLegendScale(): Scale {\n    return {\n      name: 'treeLegend',\n      type: 'ordinal',\n      domain: { data: 'tree', field: 'groupName' },\n      range: ['#E41A1C'],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\n\nSearchComponent\n\nSearchComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nSearchComponent->SearchModule\n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSearchModule->SearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/search/search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchComponent } from './search.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\n@NgModule({\n  declarations: [SearchComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatOptionModule,\n    NgxMatSelectSearchModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n  ],\n  exports: [SearchComponent],\n})\nexport class SearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchStructure.html":{"url":"interfaces/SearchStructure.html","title":"interface - SearchStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            groupName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectedOrganBeforeFilter.html":{"url":"interfaces/SelectedOrganBeforeFilter.html","title":"interface - SelectedOrganBeforeFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectedOrganBeforeFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            filteredOut\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            selector\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filteredOut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filteredOut:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selector\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selector:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sheet.html":{"url":"interfaces/Sheet.html","title":"interface - Sheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            csvUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            formData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gid\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sheetId\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         SheetConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SheetConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        csvUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csvUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formData:         FormData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SheetConfig.html":{"url":"interfaces/SheetConfig.html","title":"interface - SheetConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SheetConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bimodal_distance_x\n                                        \n                                \n                                \n                                        \n                                            bimodal_distance_y\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            discrepencyId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            discrepencyLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            duplicateId\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            show_all_AS\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            show_ontology\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bimodal_distance_x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bimodal_distance_x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bimodal_distance_y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bimodal_distance_y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discrepencyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discrepencyId:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discrepencyLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discrepencyLabel:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duplicateId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duplicateId:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        show_all_AS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        show_all_AS:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        show_ontology\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        show_ontology:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SheetDetails.html":{"url":"interfaces/SheetDetails.html","title":"interface - SheetDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SheetDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            csvUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            imagingMethod\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            omapId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sheetId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            symbol\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tissuePreservationMethod\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uberon_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        csvUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csvUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagingMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imagingMethod:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        omapId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        omapId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissuePreservationMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tissuePreservationMethod:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uberon_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uberon_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:     VersionDetail[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     VersionDetail[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SheetInfo.html":{"url":"interfaces/SheetInfo.html","title":"interface - SheetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SheetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            extraLinks\n                                        \n                                \n                                \n                                        \n                                            hasError\n                                        \n                                \n                                \n                                        \n                                            iri\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                        \n                                            ontologyCode\n                                        \n                                \n                                \n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            references\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraLinks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraLinks:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Reference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Reference[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SheetOptions.html":{"url":"interfaces/SheetOptions.html","title":"interface - SheetOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SheetOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sheet\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            symbol\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sheet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SheetService.html":{"url":"injectables/SheetService.html","title":"injectable - SheetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SheetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sheet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchBottomSheetData\n                            \n                            \n                                fetchDataFromAssets\n                            \n                            \n                                fetchPlaygroundData\n                            \n                            \n                                fetchSheetData\n                            \n                            \n                                formURL\n                            \n                            \n                                getDataWithBody\n                            \n                            \n                                testCallback\n                            \n                            \n                                updatePlaygroundData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/sheet.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchBottomSheetData\n                        \n                    \n                \n            \n            \n                \nfetchBottomSheetData(id: string, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Service to get the data about an entity for an exteral API\nby passing the UBERON, CL, or HNGC id. It determins which API to call and maps the\nresponse to a normalized BottomSheetInfo format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ontologyid\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : structure name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchDataFromAssets\n                        \n                    \n                \n            \n            \n                \nfetchDataFromAssets(dataVersion: string, currentSheet: Sheet)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Service to get data of a particular version\nNote: Currently depricated\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataVersion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    version of the data\n\n                                            \n                                        \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    current sheet\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchPlaygroundData\n                        \n                    \n                \n            \n            \n                \nfetchPlaygroundData(_data?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Fetching initial playground data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchSheetData\n                        \n                    \n                \n            \n            \n                \nfetchSheetData(sheetId: string, gid: string, csvFileUrl?: string, formData?: FormData, output?: string, cache)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Service to fetch the data for a sheet from CSV file or Google sheet using the api\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sheetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    id of the sheet\n\n                                            \n                                        \n                                        \n                                                gid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    gid of the sheet\n\n                                            \n                                        \n                                        \n                                                csvFileUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    is the optional parameter that contains the value to the csv file url of the sheet\n\n                                            \n                                        \n                                        \n                                                formData\n                                            \n                                                            FormData\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                output\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                cache\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formURL\n                        \n                    \n                \n            \n            \n                \nformURL(sheetID: string, gID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:158\n                        \n                    \n\n\n            \n                \n                        Translate the sheet ID and GID to the google sheet URL\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sheetID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the sheet\n\n                                            \n                                        \n                                        \n                                                gID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    of the sheet\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDataWithBody\n                        \n                    \n                \n            \n            \n                \ngetDataWithBody(data: Row[], organName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Service to add body for each AS to the data\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Row[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    is the parsed ASCTB data from the csv file of the sheet\n\n                                            \n                                        \n                                        \n                                                organName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testCallback\n                        \n                    \n                \n            \n            \n                \ntestCallback(data: JSON)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        JSON\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     JSON\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePlaygroundData\n                        \n                    \n                \n            \n            \n                \nupdatePlaygroundData(data: string[][])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/sheet.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Send updated data to render on the playground\nafter editing on the table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string[][]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    updated tabular data\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Row, Sheet, SheetInfo, Structure } from '../models/sheet.model';\nimport { URL, getAssetsURL } from './../static/url';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SheetService {\n  constructor(private readonly http: HttpClient) {}\n\n  /**\n   * Service to fetch the data for a sheet from CSV file or Google sheet using the api\n   * @param sheetId id of the sheet\n   * @param gid gid of the sheet\n   * @param csvFileUrl is the optional parameter that contains the value to the csv file url of the sheet\n   */\n  fetchSheetData(\n    sheetId: string,\n    gid: string,\n    csvFileUrl?: string,\n    formData?: FormData,\n    output?: string,\n    cache = false,\n  ) {\n    if (csvFileUrl) {\n      return this.http.get(`${URL}/v2/csv`, {\n        responseType: output === 'owl' ? 'text' : (undefined as unknown as 'text'),\n        params: {\n          csvUrl: csvFileUrl,\n          output: output ? output : 'json',\n        },\n      });\n    } else if (formData) {\n      return this.http.post(`${URL}/v2/csv`, formData);\n    } else {\n      if (output === 'graph') {\n        return this.http.get(`${URL}/v2/${sheetId}/${gid}/graph`);\n      } else if (output === 'jsonld') {\n        return this.http.get(`${URL}/v2/csv`, {\n          params: {\n            csvUrl: `https://docs.google.com/spreadsheets/d/${sheetId}/export?format=csv&gid=${gid}`,\n            output: output ? output : 'jsonld',\n          },\n        });\n      }\n      return this.http.get(`${URL}/v2/${sheetId}/${gid}`, {\n        params: {\n          cache,\n        },\n      });\n    }\n  }\n\n  /**\n   * Service to get data of a particular version\n   *\n   * Note: Currently depricated\n   * @param dataVersion version of the data\n   * @param currentSheet current sheet\n   */\n  fetchDataFromAssets(dataVersion: string, currentSheet: Sheet) {\n    return this.http.get(getAssetsURL(dataVersion, currentSheet), {\n      responseType: 'text',\n    });\n  }\n\n  testCallback(data: JSON) {\n    console.log(data);\n    return data;\n  }\n\n  /**\n   * Service to get the data about an entity for an exteral API\n   * by passing the UBERON, CL, or HNGC id. It determins which API to call and maps the\n   * response to a normalized BottomSheetInfo format.\n   * @param id ontologyid\n   * @param name: structure name\n   */\n  fetchBottomSheetData(id: string, name: string): Observable {\n    // Normalize FMA ids. Takes care of the formats: fma12345, FMA:12456, FMAID:12345\n    if (id.toLowerCase().startsWith('fma')) {\n      id = id.substring(3);\n      if (id.includes(':')) {\n        id = id.split(':')[1];\n      }\n      id = 'FMA:' + id;\n    }\n\n    const ontologyCode = id.split(':')[0] ?? '';\n    const termId = id.split(':')[1] ?? '';\n\n    if (ontologyCode === '' || termId === '') {\n      return throwError('Invalid ID format');\n    }\n\n    return this.http.get(`${URL}/lookup/${ontologyCode}/${termId}`).pipe(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      map((res: any) => {\n        return {\n          name,\n          ontologyId: id,\n          ontologyCode,\n          desc: res.description,\n          iri: res.link,\n          extraLinks: res.extraLinks,\n          label: res.label,\n          hasError: false,\n          msg: '',\n          status: 0,\n        } as SheetInfo;\n      }),\n    );\n  }\n\n  /**\n   * Fetching initial playground data\n   */\n  fetchPlaygroundData(_data?: string) {\n    return this.http.get(`${URL}/v2/playground`);\n  }\n\n  /**\n   * Send updated data to render on the playground\n   * after editing on the table\n   *\n   * @param data updated tabular data\n   */\n  updatePlaygroundData(data: string[][]) {\n    return this.http.post(`${URL}/v2/playground`, { data });\n  }\n\n  /**\n   * Service to add body for each AS to the data\n   * @param data is the parsed ASCTB data from the csv file of the sheet\n   */\n  getDataWithBody(data: Row[], organName: string) {\n    const organ: Structure = {\n      name: 'Body',\n      id: 'UBERON:0013702',\n      rdfs_label: 'body proper',\n    };\n    data.forEach((row) => {\n      row.anatomical_structures.unshift(organ);\n      row.organName = organName;\n    });\n    return data;\n  }\n\n  /**\n   * Translate the sheet ID and GID to the google sheet URL\n   *\n   * @param sheetID id of the sheet\n   * @param gID of the sheet\n   */\n  formURL(sheetID: string, gID: string) {\n    return `https://docs.google.com/spreadsheets/d/${sheetID}/export?format=csv&gid=${gID}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidenav/sidenav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n\n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n})\nexport class SidenavComponent {}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                .br-top {\n  border-top: 0.0625rem solid #fcfcfc !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavHeaderComponent.html":{"url":"components/SidenavHeaderComponent.html","title":"component - SidenavHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidenav-header/sidenav-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav-header\n            \n\n\n\n            \n                styleUrls\n                ./sidenav-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                download\n                            \n                            \n                                title\n                            \n                            \n                                tooltipString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeSideNav\n                            \n                            \n                                downloadFn\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        download\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidenav-header/sidenav-header.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidenav-header/sidenav-header.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipString\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Hello'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidenav-header/sidenav-header.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeSideNav\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidenav-header/sidenav-header.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        downloadFn\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidenav-header/sidenav-header.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav-header',\n  templateUrl: './sidenav-header.component.html',\n  styleUrls: ['./sidenav-header.component.scss'],\n})\nexport class SidenavHeaderComponent {\n  @Input() title = '';\n  @Input() download = false;\n  @Input() tooltipString = 'Hello';\n  @Output() closeSideNav = new EventEmitter();\n  @Output() downloadFn = new EventEmitter();\n}\n\n    \n\n    \n        \n  {{ title }}\n  \n    \n      \n        get_app\n      \n    \n    \n      \n        help_outline\n      \n    \n    \n      \n        close\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./sidenav-header.component.scss\n                \n                .mw {\n  min-width: 15.625rem;\n}\n.display-option {\n  display: inline-block;\n}\n.help-icon {\n  color: grey;\n}\n\n.title {\n  font-weight: 600;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}                    get_app                            help_outline                            close            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavHeaderModule.html":{"url":"modules/SidenavHeaderModule.html","title":"module - SidenavHeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavHeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavHeaderModule\n\n\n\ncluster_SidenavHeaderModule_declarations\n\n\n\ncluster_SidenavHeaderModule_exports\n\n\n\n\nSidenavHeaderComponent\n\nSidenavHeaderComponent\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nSidenavHeaderModule -->\n\nSidenavHeaderComponent->SidenavHeaderModule\n\n\n\n\n\nSidenavHeaderComponent \n\nSidenavHeaderComponent \n\nSidenavHeaderComponent  -->\n\nSidenavHeaderModule->SidenavHeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/sidenav-header/sidenav-header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidenavHeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidenavHeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavHeaderComponent } from './sidenav-header.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [SidenavHeaderComponent],\n  imports: [CommonModule, MatIconModule, MatTooltipModule, MatButtonModule],\n  exports: [SidenavHeaderComponent],\n})\nexport class SidenavHeaderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidenavModule.html":{"url":"modules/SidenavModule.html","title":"module - SidenavModule","body":"\n                   \n\n\n\n\n    Modules\n    SidenavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_declarations\n\n\n\ncluster_SidenavModule_exports\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\n\n\nSidenavModule\n\nSidenavModule\n\nSidenavModule -->\n\nSidenavComponent->SidenavModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nSidenavModule->SidenavComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/sidenav/sidenav.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SidenavComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SidenavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidenavComponent } from './sidenav.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [SidenavComponent],\n  imports: [CommonModule, MatButtonModule],\n  exports: [SidenavComponent],\n})\nexport class SidenavModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Signals.html":{"url":"classes/Signals.html","title":"class - Signals","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Signals\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/signals.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                signals\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeASTreeHeightSignal\n                            \n                            \n                                makeASTreeWidthSignal\n                            \n                            \n                                makeBimodalNodeClickStateSignal\n                            \n                            \n                                makeBimodalNodeHoverStateSignal\n                            \n                            \n                                makeBimodalNodeSourcesHoverStateSignal\n                            \n                            \n                                makeBimodalNodeTargetsHoverStateSignal\n                            \n                            \n                                makeBimodalSourcesClickStateSignal\n                            \n                            \n                                makeBimodalTargetsClickStateSignal\n                            \n                            \n                                makeBimodalTextClickSignal\n                            \n                            \n                                makeBimodalTextHoverSignal\n                            \n                            \n                                makeBiomodalPathDOISignal\n                            \n                            \n                                makeDiscrepencySignal\n                            \n                            \n                                makeSearchSignal\n                            \n                            \n                                makeShowOntologyIDSignal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: SheetConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/signals.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SheetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        signals\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/signals.ts:12\n                        \n                    \n\n            \n                \n                    List of signals\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(config: SheetConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Signal[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeASTreeHeightSignal\n                        \n                    \n                \n            \n            \n                \nmakeASTreeHeightSignal(height: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:80\n                        \n                    \n\n\n            \n                \n                        Set the height of the AS tree\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    height of tree\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: string; value: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeASTreeWidthSignal\n                        \n                    \n                \n            \n            \n                \nmakeASTreeWidthSignal(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:69\n                        \n                    \n\n\n            \n                \n                        Set the width of the AS tree\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    width of tree\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: string; value: number; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalNodeClickStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalNodeClickStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:131\n                        \n                    \n\n\n            \n                \n                        Signal to trigger clicking action on a bimodal network signal. It updates the field (node__click)\nwith the id of the node being clicked on.\nOn clicking elsewhere, the field is updated with null.\n\n\n                        \n                            Returns :     { name: string; value: any; on: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalNodeHoverStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalNodeHoverStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:152\n                        \n                    \n\n\n            \n                \n                        Signal to trigger hovering action on a bimodal network signal. It updates the field (node__hover)\nwith the id of the node being hovered on.\nOn removing the mouse from the node, the field is updated with null.\n\n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalNodeSourcesHoverStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalNodeSourcesHoverStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:188\n                        \n                    \n\n\n            \n                \n                        Signal to trigger hovering action on a bimodal network signal. It updates the field (node_sources__hover)\nwith the sources array of the current node.\nOn removing the mouse from the node, the field is updated with null.\n\n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalNodeTargetsHoverStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalNodeTargetsHoverStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:170\n                        \n                    \n\n\n            \n                \n                        Signal to trigger hovering action on a bimodal network signal. It updates the field (node_targets__hover)\nwith the targets array of the current node.\nOn removing the mouse from the node, the field is updated with null.\n\n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalSourcesClickStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalSourcesClickStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:227\n                        \n                    \n\n\n            \n                \n                        Signal to trigger clicking action on a bimodal network signal. It updates the field (sources__click)\nwith the sources array of the current node.\nOn clicking elsewhere, the field is updated with null.\n\n\n                        \n                            Returns :     { name: string; value: {}; on: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTargetsClickStateSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTargetsClickStateSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:206\n                        \n                    \n\n\n            \n                \n                        Signal to trigger clicking action on a bimodal network signal. It updates the field (targets__click)\nwith the targets array of the current node.\nOn clicking elsewhere, the field is updated with null.\n\n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextClickSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextClickSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:92\n                        \n                    \n\n\n            \n                \n                        Signal to trigger an event when the name of a bimodal node\nis clicked\nUpdates the signal data with the data of the node\n\n\n                        \n                            Returns :     { name: string; value: any; on: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextHoverSignal\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextHoverSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:110\n                        \n                    \n\n\n            \n                \n                        Signal that is triggered when the name of a node\nis hovered upon\n\n\n                        \n                            Returns :     { name: string; value: any; on: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBiomodalPathDOISignal\n                        \n                    \n                \n            \n            \n                \nmakeBiomodalPathDOISignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:38\n                        \n                    \n\n\n            \n                \n                        Signal to trigger an action when a path in the bimodal network\nis clicked.\nUpdtes the signal data with the references of the source or target\n\n\n                        \n                            Returns :     { name: string; value: any; on: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeDiscrepencySignal\n                        \n                    \n                \n            \n            \n                \nmakeDiscrepencySignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:254\n                        \n                    \n\n\n            \n                \n                        Signal to update the discrepency field\n\n\n                        \n                            Returns :     { name: string; value: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSearchSignal\n                        \n                    \n                \n            \n            \n                \nmakeSearchSignal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:244\n                        \n                    \n\n\n            \n                \n                        Signal to update the search field\n\n\n                        \n                            Returns :     { name: string; value: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeShowOntologyIDSignal\n                        \n                    \n                \n            \n            \n                \nmakeShowOntologyIDSignal(value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/signals.ts:58\n                        \n                    \n\n\n            \n                \n                        Signal to denote of the ontology names in the visualization\nshould be visible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    show or hide boolean\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: string; value: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Signal } from 'vega';\nimport { SheetConfig } from '../../../models/sheet.model';\n\nexport class Signals {\n  static create(config: SheetConfig): Signal[] {\n    return new Signals(config).signals;\n  }\n\n  /**\n   * List of signals\n   */\n  signals: Signal[];\n\n  constructor(config: SheetConfig) {\n    this.signals = [\n      this.makeBimodalNodeClickStateSignal(),\n      this.makeBimodalNodeHoverStateSignal(),\n      this.makeBimodalNodeSourcesHoverStateSignal(),\n      this.makeBimodalNodeTargetsHoverStateSignal(),\n      this.makeBimodalTargetsClickStateSignal(),\n      this.makeBimodalSourcesClickStateSignal(),\n      this.makeSearchSignal(),\n      this.makeBimodalTextClickSignal(),\n      this.makeBimodalTextHoverSignal(),\n      this.makeASTreeWidthSignal(config.width),\n      this.makeASTreeHeightSignal(config.height),\n      this.makeShowOntologyIDSignal(config.show_ontology ?? false),\n      this.makeBiomodalPathDOISignal(),\n      this.makeDiscrepencySignal(),\n    ];\n  }\n\n  /**\n   * Signal to trigger an action when a path in the bimodal network\n   * is clicked.\n   * Updtes the signal data with the references of the source or target\n   */\n  makeBiomodalPathDOISignal() {\n    return {\n      name: 'path__click',\n      value: null,\n      on: [\n        {\n          events: '@bimodal-path:click',\n          update: 'datum.target.group === 2 ? datum.target.references : datum.source.references',\n        },\n        { events: 'click[!event.item]', update: 'null' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to denote of the ontology names in the visualization\n   * should be visible\n   *\n   * @param value show or hide boolean\n   */\n  makeShowOntologyIDSignal(value: boolean) {\n    return {\n      name: 'show_ontology',\n      value,\n    };\n  }\n\n  /**\n   * Set the width of the AS tree\n   * @param width width of tree\n   */\n  makeASTreeWidthSignal(width: number) {\n    return {\n      name: 'as_width',\n      value: width,\n    };\n  }\n\n  /**\n   * Set the height of the AS tree\n   * @param height height of tree\n   */\n  makeASTreeHeightSignal(height: number) {\n    return {\n      name: 'as_height',\n      value: height,\n    };\n  }\n\n  /**\n   * Signal to trigger an event when the name of a bimodal node\n   * is clicked\n   * Updates the signal data with the data of the node\n   */\n  makeBimodalTextClickSignal() {\n    return {\n      name: 'bimodal_text__click',\n      value: null,\n      on: [\n        {\n          events: '@textmark:click, @astextmark:click',\n          update: \"datum.type === 'AS' && datum.children ? datum : datum.type === 'BM' ? datum : null\",\n        },\n        { events: 'click[!event.item]', update: 'null' },\n      ],\n    };\n  }\n\n  /**\n   * Signal that is triggered when the name of a node\n   * is hovered upon\n   */\n  makeBimodalTextHoverSignal() {\n    return {\n      name: 'bimodal_text__hover',\n      value: null,\n      on: [\n        {\n          events: '@textmark:mouseover, @astextmark:mouseover',\n          update: 'datum',\n        },\n        { events: 'mouseover[!event.item]', update: 'null' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger clicking action on a bimodal network signal. It updates the field (node__click)\n   * with the id of the node being clicked on.\n   *\n   * On clicking elsewhere, the field is updated with null.\n   *\n   */\n  makeBimodalNodeClickStateSignal() {\n    return {\n      name: 'node__click',\n      value: null,\n      on: [\n        {\n          events: '@bimodal-symbol:click',\n          update: 'datum.id === node__click ? null : datum.id',\n        },\n        { events: 'click[!event.item]', update: 'null' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger hovering action on a bimodal network signal. It updates the field (node__hover)\n   * with the id of the node being hovered on.\n   *\n   * On removing the mouse from the node, the field is updated with null.\n   */\n\n  makeBimodalNodeHoverStateSignal(): Signal {\n    return {\n      name: 'node__hover',\n      value: null,\n      on: [\n        { events: '@bimodal-symbol:mouseover', update: 'datum.id' },\n        { events: 'mouseover[!event.item]', update: 'null' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger hovering action on a bimodal network signal. It updates the field (node_targets__hover)\n   * with the targets array of the current node.\n   *\n   * On removing the mouse from the node, the field is updated with null.\n   */\n\n  makeBimodalNodeTargetsHoverStateSignal(): Signal {\n    return {\n      name: 'node_targets__hover',\n      value: [],\n      on: [\n        { events: '@bimodal-symbol:mouseover', update: 'datum.targets' },\n        { events: 'mouseover[!event.item]', update: '[]' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger hovering action on a bimodal network signal. It updates the field (node_sources__hover)\n   * with the sources array of the current node.\n   *\n   * On removing the mouse from the node, the field is updated with null.\n   */\n\n  makeBimodalNodeSourcesHoverStateSignal(): Signal {\n    return {\n      name: 'node_sources__hover',\n      value: [],\n      on: [\n        { events: '@bimodal-symbol:mouseover', update: 'datum.sources' },\n        { events: 'mouseover[!event.item]', update: '[]' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger clicking action on a bimodal network signal. It updates the field (targets__click)\n   * with the targets array of the current node.\n   *\n   * On clicking elsewhere, the field is updated with null.\n   */\n\n  makeBimodalTargetsClickStateSignal(): Signal {\n    return {\n      name: 'targets__click',\n      value: [],\n      on: [\n        {\n          events: '@bimodal-symbol:click',\n          update: 'datum.targets === targets__click ? [] : datum.targets',\n        },\n        { events: 'click[!event.item]', update: '[]' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to trigger clicking action on a bimodal network signal. It updates the field (sources__click)\n   * with the sources array of the current node.\n   *\n   * On clicking elsewhere, the field is updated with null.\n   */\n\n  makeBimodalSourcesClickStateSignal() {\n    return {\n      name: 'sources__click',\n      value: [],\n      on: [\n        {\n          events: '@bimodal-symbol:click',\n          update: 'datum.sources === sources__click ? [] : datum.sources',\n        },\n        { events: 'click[!event.item]', update: '[]' },\n      ],\n    };\n  }\n\n  /**\n   * Signal to update the search field\n   */\n  makeSearchSignal() {\n    return {\n      name: 'search_signal',\n      value: [],\n    };\n  }\n\n  /**\n   * Signal to update the discrepency field\n   */\n  makeDiscrepencySignal() {\n    return {\n      name: 'discrepency_signal',\n      value: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Snackbar.html":{"url":"interfaces/Snackbar.html","title":"interface - Snackbar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Snackbar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ui.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SnackbarType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SnackbarType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Log } from './logs.model';\nimport { SnackbarType } from './response.model';\nimport { Reference } from './sheet.model';\n\nexport interface Snackbar {\n  opened: boolean;\n  text: string;\n  type: SnackbarType;\n}\n\nexport interface Loading {\n  loading: boolean;\n  loadingText: string;\n}\n\nexport interface OpenBottomSheetData {\n  name: string;\n  ontologyId: string;\n  group: number;\n  references: Reference[];\n  notes: string;\n}\n\nexport interface Logs {\n  sheetLogs: Log;\n  allLogs: Log[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Structure.html":{"url":"interfaces/Structure.html","title":"interface - Structure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Structure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            b_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isNew\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            proteinPresence\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rdfs_label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b_type:         BM_TYPE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BM_TYPE\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNew\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNew:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proteinPresence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proteinPresence:         PROTEIN_PRESENCE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PROTEIN_PRESENCE\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rdfs_label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rdfs_label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TNode.html":{"url":"classes/TNode.html","title":"class - TNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/tree.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                color\n                            \n                            \n                                comparator\n                            \n                            \n                                comparatorId\n                            \n                            \n                                comparatorName\n                            \n                            \n                                found\n                            \n                            \n                                groupName\n                            \n                            \n                                id\n                            \n                            \n                                isNew\n                            \n                            \n                                label\n                            \n                            \n                                name\n                            \n                            \n                                notes\n                            \n                            \n                                ontologyId\n                            \n                            \n                                organName\n                            \n                            \n                                parent\n                            \n                            \n                                parents\n                            \n                            \n                                pathColor\n                            \n                            \n                                problem\n                            \n                            \n                                type\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, parent: number, uId: string, notes: string, organName: string, color: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/tree.model.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notes\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        organName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        color\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comparator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comparatorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        comparatorName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        found\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNew\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ontologyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pathColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        problem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/tree.model.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PROTEIN_PRESENCE, Reference } from './sheet.model';\nexport const AS_RED = '#E41A1C';\nexport const CT_BLUE = '#377EB8';\nexport const B_GREEN = '#4DAF4A';\n\nexport const ST_ID = 2;\n\nexport enum NODE_TYPE {\n  AS = 'AS',\n  BM = 'BM',\n  R = 'root',\n}\n\nexport class TNode {\n  id: number;\n  name: string;\n  parent: number;\n  ontologyId: string;\n  color: string;\n  problem: boolean;\n  found = false;\n  groupName: string;\n  isNew: boolean;\n  pathColor: string;\n  parents: number[];\n  children = 0;\n  x = 0;\n  y = 0;\n  type: string;\n  comparator: string;\n  comparatorName: string;\n  comparatorId: string;\n  label = '';\n  notes: string;\n  organName: string;\n\n  constructor(\n    id: number,\n    name: string,\n    parent: number,\n    uId: string,\n    notes: string,\n    organName: string,\n    color = '#808080',\n  ) {\n    this.id = id;\n    this.name = name;\n    this.parent = parent;\n    this.ontologyId = uId;\n    this.color = color;\n    this.problem = false;\n    this.groupName = 'Multi-parent Nodes';\n    this.isNew = false;\n    this.pathColor = '#ccc';\n    this.parents = [];\n    this.type = NODE_TYPE.AS;\n    this.comparator = '';\n    this.comparatorId = '';\n    this.comparatorName = '';\n    this.notes = notes;\n    this.organName = organName;\n  }\n}\n\nexport interface Base {\n  id?: number;\n  comparator?: string;\n  comparatorId?: string;\n  comparatorName?: string;\n}\n\nexport interface AS extends Base {\n  structure: string;\n  uberon: string;\n  indegree?: Set;\n  outdegree?: Set;\n  label?: string;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes: string;\n}\n\nexport interface Degree {\n  id: string;\n  name: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface ASCTBConfig {\n  report_cols?: number[];\n  cell_col?: number;\n  marker_col?: number;\n  uberon_col?: number;\n}\n\nexport interface CT extends Base {\n  structure: string;\n  link: string;\n  nodeSize?: number;\n  isNew: boolean;\n  color: string;\n  label?: string;\n  indegree?: Set;\n  outdegree?: Set;\n  references?: Reference[];\n  organName?: string;\n  notes: string;\n}\n\nexport interface B extends Base {\n  structure: string;\n  link: string;\n  isNew: boolean;\n  color: string;\n  indegree?: Set;\n  outdegree?: Set;\n  nodeSize?: number;\n  bType?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n  organName?: string;\n  notes: string;\n}\n\nexport class Cell {\n  structure: string;\n  parents: string[];\n  link: string;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, link = 'NONE') {\n    this.structure = structure;\n    this.parents = [];\n    this.link = link;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport class Marker {\n  structure: string;\n  parents: string[];\n  count: number;\n  isNew: boolean;\n  color: string;\n\n  constructor(structure: string, count: number) {\n    this.structure = structure;\n    this.parents = [];\n    this.count = count;\n    this.isNew = false;\n    this.color = '#ccc';\n  }\n}\n\nexport interface Organ {\n  body: string;\n  organ: string;\n  cellType: string;\n  markers: string;\n  organRow: Organ[];\n}\n\nexport interface SearchStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n}\n\nexport interface DiscrepencyStructure {\n  id: number;\n  name: string;\n  groupName: string;\n  x: number;\n  y: number;\n  ontologyId: string;\n}\n\nexport interface LinksASCTBData {\n  AS_CT: number;\n  CT_B: number;\n  AS_AS: number;\n  AS_CT_organWise: Record;\n  CT_B_organWise: Record;\n  AS_AS_organWise: Record;\n}\n\nexport interface BmCtPairings {\n  BM_NAME: string;\n  BM_ID: string;\n  CT_NAME: string;\n  CT_ID: string;\n  AS_NAME: string;\n  AS_ID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableNestedMenuComponent.html":{"url":"components/TableNestedMenuComponent.html","title":"component - TableNestedMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TableNestedMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table-nested-menu/table-nested-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table-nested-menu\n            \n\n\n\n            \n                styleUrls\n                ./table-nested-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table-nested-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                childMenu\n                            \n                            \n                                sheetURL\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sheetDetails\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sheetDetails\n                    \n                \n                \n                    \n                        Type :     SheetDetails[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openURL\n                        \n                    \n                \n            \n            \n                \nopenURL(sheetId: string, gid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sheetId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        childMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenu\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('childMenu', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://docs.google.com/spreadsheets/d/'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window\n                    \n                \n                    \n                        \n                                Defined in src/app/components/table-nested-menu/table-nested-menu.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\nimport { MatMenu } from '@angular/material/menu';\nimport { SheetDetails } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-table-nested-menu',\n  templateUrl: './table-nested-menu.component.html',\n  styleUrls: ['./table-nested-menu.component.scss'],\n})\nexport class TableNestedMenuComponent {\n  @Input() sheetDetails: SheetDetails[] = [];\n  @Input() title = '';\n  window = window;\n  @ViewChild('childMenu', { static: true }) public childMenu!: MatMenu;\n  sheetURL = 'https://docs.google.com/spreadsheets/d/';\n\n  openURL(sheetId: string, gid: string) {\n    this.window.open(`${this.sheetURL}${sheetId}/edit#gid=${gid}`, '_blank');\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        {{ sheet.display }}\n      \n    \n    \n      \n        \n        \n          \n            {{ version.viewValue }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./table-nested-menu.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ sheet.display }}                                                          {{ version.viewValue }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableNestedMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableNestedMenuModule.html":{"url":"modules/TableNestedMenuModule.html","title":"module - TableNestedMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    TableNestedMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableNestedMenuModule\n\n\n\ncluster_TableNestedMenuModule_declarations\n\n\n\ncluster_TableNestedMenuModule_exports\n\n\n\n\nTableNestedMenuComponent\n\nTableNestedMenuComponent\n\n\n\nTableNestedMenuModule\n\nTableNestedMenuModule\n\nTableNestedMenuModule -->\n\nTableNestedMenuComponent->TableNestedMenuModule\n\n\n\n\n\nTableNestedMenuComponent \n\nTableNestedMenuComponent \n\nTableNestedMenuComponent  -->\n\nTableNestedMenuModule->TableNestedMenuComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table-nested-menu/table-nested-menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TableNestedMenuComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TableNestedMenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableNestedMenuComponent } from './table-nested-menu.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [TableNestedMenuComponent],\n  imports: [CommonModule, MatIconModule, MatMenuModule, MatButtonModule],\n  exports: [TableNestedMenuComponent],\n})\nexport class TableNestedMenuModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleBottomSheet.html":{"url":"classes/ToggleBottomSheet.html","title":"class - ToggleBottomSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleBottomSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:68\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[TOGGLE] Bottom Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleControlPane.html":{"url":"classes/ToggleControlPane.html","title":"class - ToggleControlPane","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleControlPane\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:30\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[TOGGLE] Control Pane'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleDebugLogs.html":{"url":"classes/ToggleDebugLogs.html","title":"class - ToggleDebugLogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleDebugLogs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:58\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[TOGGLE] Debug Logs'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleIndentList.html":{"url":"classes/ToggleIndentList.html","title":"class - ToggleIndentList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleIndentList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:48\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[TOGGLE] Indent List'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleReport.html":{"url":"classes/ToggleReport.html","title":"class - ToggleReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:53\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[TOGGLE] Report'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ToggleShowAllAS.html":{"url":"classes/ToggleShowAllAS.html","title":"class - ToggleShowAllAS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ToggleShowAllAS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:49\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SHOW ALL AS]'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackingPopupComponent.html":{"url":"components/TrackingPopupComponent.html","title":"component - TrackingPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TrackingPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tracking-popup/tracking-popup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracking-popup\n            \n\n\n\n            \n                styleUrls\n                ./tracking-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracking-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                container\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                showButton\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allowTelemetry\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, consentService: ConsentService, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tracking-popup/tracking-popup.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"app-tracking-popup\"\n\n                    \n                \n                \n                    \n                        Default value : 'app-tracking-popup'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tracking-popup/tracking-popup.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tracking-popup/tracking-popup.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showButton\n                        \n                    \n                \n            \n            \n                \nshowButton(button: \"opt-in\" | \"opt-out\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tracking-popup/tracking-popup.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        \"opt-in\" | \"opt-out\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(entry: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/tracking-popup/tracking-popup.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entry\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app-tracking-popup'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/tracking-popup/tracking-popup.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tracking-popup/tracking-popup.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_SNACK_BAR_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/tracking-popup/tracking-popup.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allowTelemetry\n                    \n                \n\n                \n                    \n                        getallowTelemetry()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tracking-popup/tracking-popup.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { Consent, ConsentService } from '../../services/consent.service';\n\n@Component({\n  selector: 'app-tracking-popup',\n  templateUrl: './tracking-popup.component.html',\n  styleUrls: ['./tracking-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrackingPopupComponent {\n  @HostBinding('class') readonly clsName = 'app-tracking-popup';\n\n  get allowTelemetry(): Consent {\n    return this.consentService.consent;\n  }\n\n  container: HTMLElement;\n\n  constructor(\n    elementRef: ElementRef,\n    readonly consentService: ConsentService,\n    @Inject(MAT_SNACK_BAR_DATA) public data: { preClose: () => void },\n  ) {\n    this.container = elementRef.nativeElement;\n  }\n\n  dismiss(): void {\n    this.data.preClose();\n  }\n\n  submit(entry: boolean): void {\n    this.consentService.setConsent(entry ? 'given' : 'rescinded');\n    this.dismiss();\n  }\n\n  showButton(button: 'opt-in' | 'opt-out'): boolean {\n    const { allowTelemetry } = this;\n    if (allowTelemetry === 'not-set') {\n      return true;\n    } else {\n      return button === 'opt-in' ? allowTelemetry === 'rescinded' : allowTelemetry === 'given';\n    }\n  }\n}\n\n    \n\n    \n        We log usage to improve this service.\n\n  {{ allowTelemetry === 'not-set' ? 'I understand' : 'Opt in' }}\n\nOpt out\n\n    \n\n    \n                \n                    ./tracking-popup.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-width: 400px;\n  z-index: 9999;\n\n  p {\n    margin: 24px;\n  }\n\n  button {\n    margin: 1rem;\n    min-width: 6rem;\n    background-color: #007cbe;\n    display: flex;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'We log usage to improve this service.  {{ allowTelemetry === \\'not-set\\' ? \\'I understand\\' : \\'Opt in\\' }}Opt out'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrackingPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingPopupModule.html":{"url":"modules/TrackingPopupModule.html","title":"module - TrackingPopupModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingPopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tracking-popup/tracking-popup.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TrackingPopupComponent } from './tracking-popup.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule],\n  declarations: [TrackingPopupComponent],\n  exports: [TrackingPopupComponent],\n})\nexport class TrackingPopupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeComponent.html":{"url":"components/TreeComponent.html","title":"component - TreeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TreeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/tree/tree.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tree\n            \n\n\n\n            \n                styleUrls\n                ./tree.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                treeElementRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        treeElementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('graph')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss'],\n})\nexport class TreeComponent {\n  @ViewChild('graph') treeElementRef!: ElementRef;\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./tree.component.scss\n                \n                .title-wrapper {\n  white-space: nowrap;\n}\n\n.title {\n  font-weight: 600;\n  display: inline-block;\n}\n\n.scroll-bar-horizontal {\n  overflow: scroll;\n  height: calc(100vh - 4rem);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeMarkGroup.html":{"url":"classes/TreeMarkGroup.html","title":"class - TreeMarkGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeMarkGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/spec/groups/tree.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                group\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                makeBimodalTextDiscrepencyIdMarks\n                            \n                            \n                                makeBimodalTextDiscrepencyLabelMarks\n                            \n                            \n                                makeBimodalTextDuplicateIdMarks\n                            \n                            \n                                makeBimodalTextSearchMarks\n                            \n                            \n                                makeTreeMarkGroup\n                            \n                            \n                                makeTreePathMarks\n                            \n                            \n                                makeTreeSymbolMarks\n                            \n                            \n                                makeTreeTextLinkMarks\n                            \n                            \n                                makeTreeTextMarks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/spec/groups/tree.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GroupMark\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/spec/groups/tree.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDiscrepencyIdMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDiscrepencyIdMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:182\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when discrepency Id toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDiscrepencyLabelMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDiscrepencyLabelMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:110\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when discrepency label toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextDuplicateIdMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextDuplicateIdMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:254\n                        \n                    \n\n\n            \n                \n                        Rectangle around the bimodal text mark when duplicate Id toggle is turned on\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodalTextSearchMarks\n                        \n                    \n                \n            \n            \n                \nmakeBimodalTextSearchMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:38\n                        \n                    \n\n\n            \n                \n                        Mark for the blue rectangle for search\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeMarkGroup\n                        \n                    \n                \n            \n            \n                \nmakeTreeMarkGroup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:17\n                        \n                    \n\n\n            \n                \n                        Mark group for the AS tree\n\n\n                        \n                            Returns :     GroupMark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreePathMarks\n                        \n                    \n                \n            \n            \n                \nmakeTreePathMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:326\n                        \n                    \n\n\n            \n                \n                        AS Tree paths marks\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeSymbolMarks\n                        \n                    \n                \n            \n            \n                \nmakeTreeSymbolMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:358\n                        \n                    \n\n\n            \n                \n                        AS tree symbol marks\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeTextLinkMarks\n                        \n                    \n                \n            \n            \n                \nmakeTreeTextLinkMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:402\n                        \n                    \n\n\n            \n                \n                        AS tree link text marks (these are clikable to get info )\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeTreeTextMarks\n                        \n                    \n                \n            \n            \n                \nmakeTreeTextMarks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/spec/groups/tree.ts:457\n                        \n                    \n\n\n            \n                \n                        AS Tree text marks\n\n\n                        \n                            Returns :     Mark\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GroupMark, Mark } from 'vega';\n\nexport class TreeMarkGroup {\n  static create(): GroupMark {\n    return new TreeMarkGroup().group;\n  }\n\n  group: GroupMark;\n\n  constructor() {\n    this.group = this.makeTreeMarkGroup();\n  }\n\n  /**\n   * Mark group for the AS tree\n   */\n  makeTreeMarkGroup(): GroupMark {\n    return {\n      type: 'group',\n      signals: [{ name: 'bgoffset', value: 6 }],\n      name: 'asTree',\n      marks: [\n        this.makeTreePathMarks(),\n        this.makeTreeSymbolMarks(),\n        this.makeTreeTextMarks(),\n        this.makeBimodalTextSearchMarks(),\n        this.makeTreeTextLinkMarks(),\n        this.makeBimodalTextDiscrepencyLabelMarks(),\n        this.makeBimodalTextDiscrepencyIdMarks(),\n        this.makeBimodalTextDuplicateIdMarks(),\n      ],\n    };\n  }\n\n  /**\n   * Mark for the blue rectangle for search\n   */\n  makeBimodalTextSearchMarks(): Mark {\n    return {\n      name: 'rectmark',\n      type: 'rect',\n      from: {\n        data: 'astextmark',\n      },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'aliceblue' },\n          stroke: { value: 'steelblue' },\n        },\n        update: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'aliceblue' },\n          stroke: { value: 'steelblue' },\n          opacity: [\n            {\n              test: \"node__click === null && indata('search', 'id', datum.datum.id)\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when discrepency label toggle is turned on\n   */\n  makeBimodalTextDiscrepencyLabelMarks(): Mark {\n    return {\n      name: 'rectmarkdiscrepencylabel',\n      type: 'rect',\n      from: { data: 'astextmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightblue' },\n          stroke: { value: 'darkblue' },\n          zindex: { value: -1 },\n        },\n        update: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightblue' },\n          stroke: { value: 'darkblue' },\n          zindex: { value: -1 },\n          opacity: [\n            {\n              test: \"node__click === null && indata('discrepencyLabel', 'id', datum.datum.id) && datum.datum.children !=0\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when discrepency Id toggle is turned on\n   */\n  makeBimodalTextDiscrepencyIdMarks(): Mark {\n    return {\n      name: 'rectmarkdiscrepencyid',\n      type: 'rect',\n      from: { data: 'astextmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'bisque' },\n          stroke: { value: 'burlywood' },\n          zindex: { value: -1 },\n        },\n        update: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightblue' },\n          stroke: { value: 'darkblue' },\n          zindex: { value: -1 },\n          opacity: [\n            {\n              test: \"node__click === null && indata('discrepencyId', 'id', datum.datum.id) && datum.datum.children !=0\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * Rectangle around the bimodal text mark when duplicate Id toggle is turned on\n   */\n  makeBimodalTextDuplicateIdMarks(): Mark {\n    return {\n      name: 'rectmarkduplicateid',\n      type: 'rect',\n      from: { data: 'astextmark' },\n      encode: {\n        enter: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightyellow' },\n          stroke: { value: 'burlywood' },\n          zindex: { value: -1 },\n        },\n        update: {\n          x: {\n            field: 'bounds.x1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          x2: {\n            field: 'bounds.x2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          y: {\n            field: 'bounds.y1',\n            round: true,\n            offset: { signal: '-bgoffset' },\n          },\n          y2: {\n            field: 'bounds.y2',\n            round: true,\n            offset: { signal: 'bgoffset' },\n          },\n          fill: { value: 'lightblue' },\n          stroke: { value: 'darkblue' },\n          zindex: { value: -1 },\n          opacity: [\n            {\n              test: \"node__click === null && indata('duplicateId', 'id', datum.datum.id) && datum.datum.children !=0\",\n              value: 1,\n            },\n            {\n              value: 0,\n            },\n          ],\n        },\n      },\n    };\n  }\n\n  /**\n   * AS Tree paths marks\n   */\n  makeTreePathMarks(): Mark {\n    return {\n      type: 'path',\n      from: { data: 'links' },\n      encode: {\n        update: {\n          path: { field: 'path' },\n          stroke: {\n            signal: 'datum.source.pathColor === datum.target.pathColor ? datum.source.pathColor : \"#ccc\"',\n          },\n          opacity: [\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            {\n              test: 'node__hover !== null && datum.source.id !== node__hover && node__click === null',\n              value: 0.25,\n            },\n            {\n              value: 0.4,\n            },\n          ],\n          strokeWidth: { value: 5 },\n        },\n      },\n    };\n  }\n\n  /**\n   * AS tree symbol marks\n   */\n  makeTreeSymbolMarks(): Mark {\n    return {\n      type: 'symbol',\n      from: { data: 'tree' },\n      encode: {\n        enter: {\n          size: { value: 300 },\n          stroke: {\n            signal: 'datum.problem ? \"#000\": datum.isNew ? datum.color :\"#fff\"',\n          },\n          strokeWidth: { signal: 'datum.problem ? 3: datum.isNew ? 3 : 0' },\n          strokeDash: { signal: 'datum.isNew ? [3, 3] : [0, 0]' },\n        },\n        update: {\n          x: { field: 'x' },\n          y: { field: 'y' },\n          tooltip: { signal: '{\"Ontology ID\": datum.ontologyId}' },\n          opacity: [\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && node__click === null',\n              value: 0.5,\n            },\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            {\n              value: 0,\n            },\n          ],\n          zIndex: { value: 1 },\n          fill: { signal: 'datum.isNew ? \"#fafafa\" : datum.color' },\n        },\n      },\n    };\n  }\n\n  /**\n   * AS tree link text marks (these are clikable to get info )\n   */\n  makeTreeTextLinkMarks(): Mark {\n    return {\n      type: 'text',\n      name: 'aslinktextmark',\n      from: { data: 'tree' },\n      zindex: 5,\n      encode: {\n        enter: {\n          text: { field: 'ontologyId' },\n          limit: { value: 180 },\n          fontSize: { value: 11 },\n          baseline: { value: 'middle' },\n          fontWeight: { value: 600 },\n        },\n        update: {\n          x: { field: 'x' },\n          y: { field: 'y' },\n          dy: { value: 8 },\n          dx: { signal: 'datum.children ? 15: -15' },\n          fill: [\n            {\n              value: 'grey',\n            },\n          ],\n          opacity: [\n            {\n              test: '!show_ontology',\n              value: 0,\n            },\n            {\n              test: '!datum.children',\n              value: 0,\n            },\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && node__click === null',\n              value: 0.5,\n            },\n          ],\n          align: { signal: \"datum.children ? 'left' : 'right'\" },\n        },\n      },\n    };\n  }\n\n  /**\n   * AS Tree text marks\n   */\n  makeTreeTextMarks(): Mark {\n    return {\n      type: 'text',\n      name: 'astextmark',\n      from: { data: 'tree' },\n      zindex: 5,\n      encode: {\n        enter: {\n          text: { field: 'name' },\n          limit: { value: 180 },\n          fontSize: { value: 14 },\n          baseline: { value: 'middle' },\n          fontWeight: { value: 400 },\n          cursor: { signal: 'datum.children ? \"pointer\" : \"null\"' },\n        },\n        update: {\n          x: { field: 'x' },\n          y: { field: 'y' },\n          dy: { signal: 'show_ontology ? -8 : 0' },\n          dx: { signal: 'datum.children ? 15: -15' },\n          fill: [\n            {\n              test: 'datum === bimodal_text__hover',\n              value: 'steelblue',\n            },\n            {\n              value: 'black',\n            },\n          ],\n          opacity: [\n            {\n              test: '!datum.children',\n              value: 0,\n            },\n            {\n              test: 'node__click !== null',\n              value: 0.1,\n            },\n            {\n              test: 'node__click === null && node__hover === null',\n              value: 1,\n            },\n            {\n              test: 'node__hover !== null && node__click === null',\n              value: 0.5,\n            },\n          ],\n          align: { signal: \"datum.children ? 'left' : 'right'\" },\n        },\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreeModule.html":{"url":"modules/TreeModule.html","title":"module - TreeModule","body":"\n                   \n\n\n\n\n    Modules\n    TreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreeModule\n\n\n\ncluster_TreeModule_exports\n\n\n\ncluster_TreeModule_declarations\n\n\n\n\nTreeComponent\n\nTreeComponent\n\n\n\nTreeModule\n\nTreeModule\n\nTreeModule -->\n\nTreeComponent->TreeModule\n\n\n\n\n\nTreeComponent \n\nTreeComponent \n\nTreeComponent  -->\n\nTreeModule->TreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/tree/tree.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeComponent } from './tree.component';\n\n@NgModule({\n  declarations: [TreeComponent],\n  imports: [CommonModule],\n  exports: [TreeComponent],\n})\nexport class TreeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TreeService.html":{"url":"injectables/TreeService.html","title":"injectable - TreeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TreeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/tree.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                bm\n                            \n                            \n                                controlPaneOpen\n                            \n                            \n                                height\n                            \n                            \n                                    \n                                sc$\n                            \n                            \n                                sheetConfig\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                            \n                                    \n                                tree$\n                            \n                            \n                                    \n                                uiState$\n                            \n                            \n                                    Public\n                                    Readonly\n                                vs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                makeTreeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, vs: VegaService, bm: BimodalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/tree.service.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vs\n                                                  \n                                                        \n                                                                        VegaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bm\n                                                  \n                                                        \n                                                                        BimodalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        makeTreeData\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeTreeData(currentSheet: Sheet, data: Row[], _compareData?, isReport)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/tree.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Function to create the vega tree that visualization the\nAnatomical structures and its substructures\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    current selected sheet\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            Row[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    data from the miner of the sheet\n\n                                            \n                                        \n                                        \n                                                _compareData\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isReport\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        bm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        controlPaneOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:29\n                        \n                    \n\n            \n                \n                    Denotes if the left control pane is open\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:25\n                        \n                    \n\n            \n                \n                    Height of the tree\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sc$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SheetState.getSheetConfig)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:48\n                        \n                    \n\n            \n                \n                    Sheet state - sheet config observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SheetConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:33\n                        \n                    \n\n            \n                \n                    Sheet configurations that has the different parameters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tree$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(TreeState)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:38\n                        \n                    \n\n            \n                \n                    Tree State observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uiState$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(UIState)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:43\n                        \n                    \n\n            \n                \n                    UI State observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        vs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VegaService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/tree.service.ts:52\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { ValuesData } from 'vega';\nimport { ReportLog } from '../../actions/logs.actions';\nimport { UpdateLinksData, UpdateVegaSpec } from '../../actions/tree.actions';\nimport { HasError } from '../../actions/ui.actions';\nimport { LOG_ICONS, LOG_TYPES } from '../../models/logs.model';\nimport { Error } from '../../models/response.model';\nimport { Row, Sheet, SheetConfig } from '../../models/sheet.model';\nimport { SheetState } from '../../store/sheet.state';\nimport { TreeState, TreeStateModel } from '../../store/tree.state';\nimport { UIState, UIStateModel } from '../../store/ui.state';\nimport { AS_RED, NODE_TYPE, TNode } from './../../models/tree.model';\nimport { BimodalService } from './bimodal.service';\nimport { VegaService } from './vega.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TreeService {\n  /**\n   * Height of the tree\n   */\n  height!: number;\n  /**\n   * Denotes if the left control pane is open\n   */\n  controlPaneOpen!: boolean;\n  /**\n   * Sheet configurations that has the different parameters\n   */\n  sheetConfig!: SheetConfig;\n\n  /**\n   * Tree State observable\n   */\n  @Select(TreeState) tree$!: Observable;\n\n  /**\n   * UI State observable\n   */\n  @Select(UIState) uiState$!: Observable;\n\n  /**\n   * Sheet state - sheet config observable\n   */\n  @Select(SheetState.getSheetConfig) sc$!: Observable;\n\n  constructor(\n    public readonly store: Store,\n    public readonly vs: VegaService,\n    public readonly bm: BimodalService,\n  ) {\n    this.tree$.subscribe((state) => {\n      this.height = state.height;\n      const view = TreeState.getVegaView(state);\n\n      // if the vega view is valid, check for search data\n      // re-render the view\n      if (Object.keys(view).length) {\n        const search = state.search;\n        view.data('search', search);\n        view.runAsync();\n      }\n\n      // if the vega view is valid, check for discrepency Labels data\n      // re-render the view\n      if (Object.keys(view).length) {\n        const discrepency = state.discrepencyLabel;\n        view.data('discrepencyLabel', discrepency);\n        view.runAsync();\n      }\n\n      // if the vega view is valid, check for discrepency Ids data\n      // re-render the view\n      if (Object.keys(view).length) {\n        const discrepency = state.discrepencyId;\n        view.data('discrepencyId', discrepency);\n        view.runAsync();\n      }\n\n      // if the vega view is valid, check for duplicate Ids data\n      // re-render the view\n      if (Object.keys(view).length) {\n        const discrepency = state.duplicateId;\n        view.data('duplicateId', discrepency);\n        view.runAsync();\n      }\n    });\n    this.uiState$.subscribe((state) => {\n      this.controlPaneOpen = state.controlPaneOpen;\n    });\n\n    this.sc$.subscribe((config) => {\n      this.sheetConfig = config;\n    });\n  }\n\n  /**\n   * Function to create the vega tree that visualization the\n   * Anatomical structures and its substructures\n   *\n   * @param currentSheet current selected sheet\n   * @param data data from the miner of the sheet\n   * @param compareData compare data (depricated)\n   */\n  public makeTreeData(currentSheet: Sheet, data: Row[], _compareData?: unknown, isReport = false): void {\n    try {\n      if (data.length === 0) {\n        return;\n      }\n\n      const idNameSet: Record = {};\n      let id = 1;\n      let parent: TNode;\n      const nodes: TNode[] = [];\n      const allParentIds = new Set();\n      const root = new TNode(\n        id,\n        data[0].anatomical_structures[0].name ?? '',\n        0,\n        data[0].anatomical_structures[0].id ?? '',\n        data[0].anatomical_structures[0].notes ?? '',\n        'Body',\n        AS_RED,\n      );\n      root.label = '';\n      root.comparator = root.name + root.label + root.ontologyId;\n      root.type = NODE_TYPE.R;\n      delete (root as { parent?: unknown }).parent;\n      nodes.push(root);\n      let flag = 0;\n      const AsByAsOrganWise: Record = {};\n\n      data.forEach((row) => {\n        parent = root;\n        row.anatomical_structures.forEach((structure) => {\n          let s: number;\n          if (structure.id) {\n            s = nodes.findIndex((i: TNode) => {\n              if (!isReport) {\n                return i.type !== 'root' && i.comparatorId === parent.comparatorId + structure.id;\n              } else {\n                return (\n                  i.type !== 'root' &&\n                  i.comparatorId === parent.comparatorId + structure.id &&\n                  i.organName === row.organName\n                );\n              }\n            });\n          } else {\n            s = nodes.findIndex((i: TNode) => {\n              if (!isReport) {\n                return i.type !== 'root' && i.comparatorName === parent.comparatorName + structure.name;\n              } else {\n                return (\n                  i.type !== 'root' &&\n                  i.comparatorName === parent.comparatorName + structure.name &&\n                  i.organName === row.organName\n                );\n              }\n            });\n          }\n          if (s === -1) {\n            if (Object.prototype.hasOwnProperty.call(AsByAsOrganWise, row?.organName) && flag >= 2) {\n              AsByAsOrganWise[row?.organName] += 1;\n            } else {\n              flag += 1;\n              AsByAsOrganWise[row?.organName] = 1;\n            }\n            id += 1;\n            const newNode = new TNode(\n              id,\n              structure.id && idNameSet[structure.id] ? idNameSet[structure.id] : structure.name ?? '',\n              parent.id,\n              structure.id ?? '',\n              structure.notes ?? '',\n              row.organName,\n              AS_RED,\n            );\n            newNode.label = structure.rdfs_label ?? '';\n            newNode.comparator = parent.comparator + newNode.name + newNode.label + newNode.ontologyId;\n            newNode.comparatorId = parent.comparatorId + newNode.ontologyId;\n            newNode.comparatorName = parent.comparatorName + newNode.name;\n            if (idNameSet[newNode.ontologyId] === undefined) {\n              idNameSet[newNode.ontologyId] = newNode.name;\n            }\n            if ('isNew' in structure) {\n              newNode.isNew = true;\n              newNode.color = structure.color ?? '';\n              newNode.pathColor = structure.color ?? '';\n            }\n\n            nodes.push(newNode);\n            allParentIds.add(parent.id);\n            parent = newNode;\n          } else {\n            const node = nodes[s];\n            if ('isNew' in structure) {\n              node.color = structure.color ?? '';\n              node.pathColor = structure.color ?? '';\n            }\n            parent = node;\n          }\n        });\n      });\n\n      // delete duplicate organ element\n      nodes.shift();\n      delete (nodes[0] as { parent?: unknown }).parent;\n\n      const spec = this.vs.makeVegaConfig(currentSheet, nodes, this.sheetConfig);\n      allParentIds.delete(1);\n      const allParentIdsArray = [...allParentIds];\n      if (!isReport) {\n        this.store.dispatch(new UpdateLinksData(0, 0, {}, {}, 0, AsByAsOrganWise));\n        this.store.dispatch(new UpdateVegaSpec(spec));\n        this.vs.renderGraph(spec);\n      } else {\n        this.store.dispatch(new UpdateLinksData(0, 0, {}, {}, 0, AsByAsOrganWise));\n        this.bm.makeBimodalData(\n          data,\n          ((spec.data?.[0] as ValuesData).values as TNode[]).filter((x) => !allParentIdsArray.includes(x.id)),\n          this.store.selectSnapshot(TreeState.getBimodalConfig),\n          true,\n          this.store.selectSnapshot(SheetState.getSheetConfig),\n        );\n      }\n    } catch (error) {\n      console.log(error);\n      const error2 = error as { name: string; status: number };\n      const err: Error = {\n        msg: `${error2.name} (Status: ${error2.status})`,\n        status: error2.status,\n        hasError: true,\n      };\n      this.store.dispatch(new ReportLog(LOG_TYPES.MSG, 'Failed to create Tree', LOG_ICONS.error));\n      this.store.dispatch(new HasError(err));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreeStateModel.html":{"url":"interfaces/TreeStateModel.html","title":"interface - TreeStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TreeStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/tree.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to keep track of all data and events related to the visualization\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bimodal\n                                        \n                                \n                                \n                                        \n                                            bottomSheetData\n                                        \n                                \n                                \n                                        \n                                            discrepencyId\n                                        \n                                \n                                \n                                        \n                                            discrepencyLabel\n                                        \n                                \n                                \n                                        \n                                            duplicateId\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            lastSearch\n                                        \n                                \n                                \n                                        \n                                            links\n                                        \n                                \n                                \n                                        \n                                            omapConfig\n                                        \n                                \n                                \n                                        \n                                            search\n                                        \n                                \n                                \n                                        \n                                            spec\n                                        \n                                \n                                \n                                        \n                                            treeData\n                                        \n                                \n                                \n                                        \n                                            view\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bimodal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bimodal:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store bimodal data - nodes, links and config (for sorting and sizing)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bottomSheetData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottomSheetData:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store data for the bottom sheet to display information\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discrepencyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discrepencyId:     DiscrepencyStructure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscrepencyStructure[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the discrepency id data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discrepencyLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discrepencyLabel:     DiscrepencyStructure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscrepencyStructure[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the discrepency label data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duplicateId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duplicateId:     DiscrepencyStructure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiscrepencyStructure[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the discrepency id data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the height of the visualization\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastSearch:         SearchStructure\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SearchStructure\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the last clicked node in the search field\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        links\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        links:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store data of links between nodes to show in the report\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        omapConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        omapConfig:         OmapConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OmapConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the OMAP Config\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:     SearchStructure[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SearchStructure[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the search data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spec:     Spec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Spec\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Stores the Vega Specification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treeData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        treeData:         TNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TNode[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the data from the Tree\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        view:     View\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     View\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the Vega view object which enables us to use the Vega API\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the width of the visualization\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { Spec, View } from 'vega';\nimport {\n  DiscrepencyId,\n  DiscrepencyLabel,\n  DoSearch,\n  DuplicateId,\n  UpdateBimodal,\n  UpdateBimodalConfig,\n  UpdateBottomSheetData,\n  UpdateLinksData,\n  UpdateOmapConfig,\n  UpdateVegaSpec,\n  UpdateVegaView,\n} from '../actions/tree.actions';\nimport { BMNode, BimodalConfig, Link } from '../models/bimodal.model';\nimport { OmapConfig } from '../models/omap.model';\nimport { DiscrepencyStructure, SearchStructure, TNode } from '../models/tree.model';\n\n/** Class to keep track of all data and events related to the visualization */\nexport interface TreeStateModel {\n  /**\n   * Stores the Vega Specification\n   */\n  spec: Spec;\n  /**\n   * Store the data from the Tree\n   */\n  treeData: TNode[];\n  /**\n   * Store the Vega view object which enables us to use the Vega API\n   */\n  view: View;\n  /**\n   * Store the width of the visualization\n   */\n  width: number;\n  /**\n   * Store the height of the visualization\n   */\n  height: number;\n  /**\n   * Store bimodal data - nodes, links and config (for sorting and sizing)\n   */\n  bimodal: {\n    nodes: BMNode[];\n    links: Link[];\n    config: BimodalConfig;\n  };\n  /**\n   * Store the search data\n   */\n  search: SearchStructure[];\n  /**\n   * Store the last clicked node in the search field\n   */\n  lastSearch: SearchStructure;\n  /**\n   * Store data for the bottom sheet to display information\n   */\n  bottomSheetData: Record;\n  /**\n   * Store data of links between nodes to show in the report\n   */\n  links: {\n    AS_CT: number;\n    CT_B: number;\n    AS_AS: number;\n    AS_CT_organWise: Record;\n    CT_B_organWise: Record;\n    AS_AS_organWise: Record;\n  };\n  /**\n   * Store the discrepency label data\n   */\n  discrepencyLabel: DiscrepencyStructure[];\n  /**\n   * Store the discrepency id data\n   */\n  discrepencyId: DiscrepencyStructure[];\n  /**\n   * Store the discrepency id data\n   */\n  duplicateId: DiscrepencyStructure[];\n  /**\n   * Store the OMAP Config\n   */\n  omapConfig: OmapConfig;\n}\n\n@State({\n  name: 'treeState',\n  defaults: {\n    spec: {},\n    treeData: [],\n    view: {} as View,\n    width: 0,\n    height: document.getElementsByTagName('body')[0].clientHeight,\n    bimodal: {\n      nodes: [],\n      links: [],\n      config: {\n        BM: { sort: 'Alphabetically', size: 'None', type: 'All' },\n        CT: { sort: 'Alphabetically', size: 'None' },\n      },\n    },\n    search: [],\n    lastSearch: null as unknown as SearchStructure,\n    bottomSheetData: {},\n    links: {\n      AS_CT: 0,\n      CT_B: 0,\n      AS_AS: 0,\n      AS_CT_organWise: {},\n      CT_B_organWise: {},\n      AS_AS_organWise: {},\n    },\n    discrepencyLabel: [],\n    discrepencyId: [],\n    duplicateId: [],\n    omapConfig: { organsOnly: false, proteinsOnly: false },\n  },\n})\n@Injectable()\nexport class TreeState {\n  /**\n   * Select the bimodal config (for sorting and sizing)\n   */\n  @Selector()\n  static getBiomarkerType(state: TreeStateModel) {\n    return state.bimodal.config.BM.type;\n  }\n\n  /**\n   * Select the bimodal config (for sorting and sizing)\n   */\n  @Selector()\n  static getBimodalConfig(state: TreeStateModel) {\n    return state.bimodal.config;\n  }\n\n  /**\n   * Select the vega specification\n   */\n  @Selector()\n  static getVegaSpec(state: TreeStateModel) {\n    return state.spec;\n  }\n\n  /**\n   * Select the tree data (only anatomical structures)\n   */\n  @Selector()\n  static getTreeData(state: TreeStateModel) {\n    return state.treeData;\n  }\n\n  /**\n   * Select the Vega View to use the Vega View API\n   */\n  @Selector()\n  static getVegaView(state: TreeStateModel) {\n    return state.view;\n  }\n\n  /**\n   * Select the bimodal data. Contains the nodes, links and the bimodal config\n   */\n  @Selector()\n  static getBimodal(state: TreeStateModel) {\n    return state.bimodal;\n  }\n\n  /**\n   * Select the bottom sheet data\n   */\n  @Selector()\n  static getBottomSheetData(state: TreeStateModel) {\n    return state.bottomSheetData;\n  }\n\n  /**\n   * Select the links data to show in the report\n   */\n  @Selector()\n  static getLinksData(state: TreeStateModel) {\n    return state.links;\n  }\n\n  /**\n   * Select the most recently chosen search option\n   */\n  @Selector()\n  static getLatestSearchStructure(state: TreeStateModel) {\n    return state.lastSearch;\n  }\n\n  /**\n   * Select the config for OMAPS\n   */\n  @Selector()\n  static getOmapConfig(state: TreeStateModel) {\n    return state.omapConfig;\n  }\n\n  /**\n   * Updates the bimodal data\n   */\n  @Action(UpdateBimodal)\n  updateBimodal({ getState, setState }: StateContext, { nodes, links }: UpdateBimodal) {\n    const state = getState();\n    setState({\n      ...state,\n      bimodal: { nodes, links, config: state.bimodal.config },\n    });\n  }\n\n  /**\n   * Updates the vega view\n   * Updates the tree data with the anatomical structures\n   * Updates the width of the visualization\n   */\n  @Action(UpdateVegaView)\n  updateVegaView({ patchState }: StateContext, { view }: UpdateVegaView) {\n    patchState({\n      view,\n      treeData: view.data('tree'),\n      width: view._viewWidth,\n    });\n  }\n\n  /**\n   * Updates te vega spec\n   */\n  @Action(UpdateVegaSpec)\n  updateVegaSpec({ setState, getState }: StateContext, { spec }: UpdateVegaSpec) {\n    const state = getState();\n    setState({\n      ...state,\n      spec,\n    });\n  }\n\n  /**\n   * Updates the bimodal config\n   */\n  @Action(UpdateBimodalConfig)\n  updateBimodalConfig({ getState, setState }: StateContext, { config }: UpdateBimodalConfig) {\n    const state = getState();\n    const nodes = state.bimodal.nodes;\n    const links = state.bimodal.links;\n\n    setState({\n      ...state,\n      bimodal: {\n        nodes,\n        links,\n        config,\n      },\n    });\n  }\n\n  @Action(UpdateOmapConfig)\n  updateOmapConfig({ getState, setState }: StateContext, { config }: UpdateOmapConfig) {\n    setState({\n      ...getState(),\n      omapConfig: config,\n    });\n  }\n\n  /**\n   * Updates the search list\n   */\n  @Action(DoSearch)\n  doSearch(\n    { getState, setState }: StateContext,\n    { searchStructures, lastClickedOption: lastClickedStructure }: DoSearch,\n  ) {\n    const state = getState();\n    setState({\n      ...state,\n      search: searchStructures,\n      lastSearch: lastClickedStructure,\n    });\n  }\n\n  /**\n   * Updates the discrepency labels list\n   */\n  @Action(DiscrepencyLabel)\n  discrepencyLabel({ getState, setState }: StateContext, { discrepencyStructures }: DiscrepencyLabel) {\n    const state = getState();\n    setState({\n      ...state,\n      discrepencyLabel: discrepencyStructures,\n    });\n  }\n\n  /**\n   * Updates the discrepency ids list\n   */\n  @Action(DiscrepencyId)\n  discrepencyId({ getState, setState }: StateContext, { discrepencyStructures }: DiscrepencyLabel) {\n    const state = getState();\n    setState({\n      ...state,\n      discrepencyId: discrepencyStructures,\n    });\n  }\n\n  /**\n   * Updates the duplicate ids list\n   */\n  @Action(DuplicateId)\n  duplicateId({ getState, setState }: StateContext, { discrepencyStructures }: DiscrepencyLabel) {\n    const state = getState();\n    setState({\n      ...state,\n      duplicateId: discrepencyStructures,\n    });\n  }\n\n  /**\n   * Updates the bottom sheet data\n   */\n  @Action(UpdateBottomSheetData)\n  updateBottomSheetData({ getState, setState }: StateContext, { data }: UpdateBottomSheetData) {\n    const state = getState();\n    setState({\n      ...state,\n      bottomSheetData: data,\n    });\n  }\n\n  /**\n   * Updates the links data that is displayed in the report\n   */\n  @Action(UpdateLinksData)\n  updateLinksData(\n    { getState, setState }: StateContext,\n    { AS_CT, CT_B, AS_CT_organWise, CT_B_organWise, AS_AS, AS_AS_organWise, allOrgans }: UpdateLinksData,\n  ) {\n    const state = getState();\n    if (AS_AS) {\n      setState({\n        ...state,\n        links: { ...state.links, AS_AS },\n      });\n    } else if (AS_AS_organWise) {\n      setState({\n        ...state,\n        links: {\n          ...state.links,\n          AS_AS_organWise: {\n            ...state.links.AS_AS_organWise,\n            ...AS_AS_organWise,\n          },\n        },\n      });\n    } else {\n      setState({\n        ...state,\n        links: {\n          AS_CT: allOrgans ? state.links.AS_CT : AS_CT,\n          CT_B: allOrgans ? state.links.CT_B : CT_B,\n          CT_B_organWise: { ...state.links.CT_B_organWise, ...CT_B_organWise },\n          AS_CT_organWise: {\n            ...state.links.AS_CT_organWise,\n            ...AS_CT_organWise,\n          },\n          AS_AS: state.links.AS_AS,\n          AS_AS_organWise: state.links.AS_AS_organWise,\n        },\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UIStateModel.html":{"url":"interfaces/UIStateModel.html","title":"interface - UIStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UIStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/ui.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to keep track of all UI elements\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bottomSheetOpen\n                                        \n                                \n                                \n                                        \n                                            compareOpen\n                                        \n                                \n                                \n                                        \n                                            controlPaneOpen\n                                        \n                                \n                                \n                                        \n                                            debugLogOpen\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            indentListOpen\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            loadingText\n                                        \n                                \n                                \n                                        \n                                            reportOpen\n                                        \n                                \n                                \n                                        \n                                            rightSideNavOpen\n                                        \n                                \n                                \n                                        \n                                            searchOpen\n                                        \n                                \n                                \n                                        \n                                            snackbar\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottomSheetOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottomSheetOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the bottom sheet that shows info\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compareOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compareOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the compare sidebar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        controlPaneOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        controlPaneOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the control pane on the left\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugLogOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugLogOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the debug log sidebar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         Error\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Error\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store UI in error state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indentListOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        indentListOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the indented list sidebar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is the UI in loading state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadingText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Store the loading state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reportOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the report sidebar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightSideNavOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rightSideNavOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the right sidebar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchOpen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchOpen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Keep track of the search panel state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        snackbar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        snackbar:         Snackbar\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Snackbar\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sotre snackbar state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, Select, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ReportLog } from '../actions/logs.actions';\nimport { UpdateBottomSheetDOI, UpdateBottomSheetInfo } from '../actions/sheet.actions';\nimport { UpdateBottomSheetData } from '../actions/tree.actions';\nimport {\n  CloseBottomSheet,\n  CloseBottomSheetDOI,\n  CloseCompare,\n  CloseLoading,\n  CloseRightSideNav,\n  CloseSearch,\n  CloseSnackbar,\n  HasError,\n  OpenBottomSheet,\n  OpenBottomSheetDOI,\n  OpenCompare,\n  OpenLoading,\n  OpenSearch,\n  OpenSnackbar,\n  ToggleControlPane,\n  ToggleDebugLogs,\n  ToggleIndentList,\n  ToggleReport,\n  UpdateLoadingText,\n} from '../actions/ui.actions';\nimport { GaAction, GaCategory } from '../models/ga.model';\nimport { LOG_ICONS, LOG_TYPES } from '../models/logs.model';\nimport { Error, SnackbarType } from '../models/response.model';\nimport { Snackbar } from '../models/ui.model';\nimport { TreeState } from './tree.state';\n\n/** Interface to keep track of all UI elements */\nexport interface UIStateModel {\n  /**\n   * Keep track of the right sidebar\n   */\n  rightSideNavOpen: boolean;\n  /**\n   * Keep track of the control pane on the left\n   */\n  controlPaneOpen: boolean;\n  /**\n   * Is the UI in loading state\n   */\n  loading: boolean;\n  /**\n   * Store the loading state\n   */\n  loadingText: string;\n  /**\n   * Store UI in error state\n   */\n  error: Error;\n  /**\n   * Sotre snackbar state\n   */\n  snackbar: Snackbar;\n  /**\n   * Keep track of the indented list sidebar\n   */\n  indentListOpen: boolean;\n  /**\n   * Keep track of the report sidebar\n   */\n  reportOpen: boolean;\n  /**\n   * Keep track of the debug log sidebar\n   */\n  debugLogOpen: boolean;\n  /**\n   * Keep track of the bottom sheet that shows info\n   */\n  bottomSheetOpen: boolean;\n  /**\n   * Keep track of the compare sidebar\n   */\n  compareOpen: boolean;\n  /**\n   * Keep track of the search panel state\n   */\n  searchOpen: boolean;\n}\n\n@State({\n  name: 'uiState',\n  defaults: {\n    rightSideNavOpen: false,\n    controlPaneOpen: true,\n    loading: true,\n    loadingText: '',\n    error: {},\n    snackbar: { opened: false, text: '', type: SnackbarType.success },\n    indentListOpen: false,\n    reportOpen: false,\n    debugLogOpen: false,\n    bottomSheetOpen: false,\n    compareOpen: false,\n    searchOpen: false,\n  },\n})\n@Injectable()\nexport class UIState {\n  constructor(\n    public store: Store,\n    public ga: GoogleAnalyticsService,\n  ) {}\n\n  /**\n   * Select the snackbar state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getSnackbar(state: UIStateModel) {\n    return state.snackbar;\n  }\n\n  /**\n   * Select the loading state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getLoading(state: UIStateModel) {\n    return state.loading;\n  }\n\n  /**\n   * Select the loading text\n   *\n   * @param state - UI State Model\n   */\n  @Select()\n  static getLoadingText(state: UIStateModel) {\n    return state.loadingText;\n  }\n\n  /**\n   * Select control pane state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getControlPaneState(state: UIStateModel) {\n    return state.controlPaneOpen;\n  }\n\n  /**\n   * Select the error state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getError(state: UIStateModel) {\n    return {\n      error: state.error,\n    };\n  }\n\n  /**\n   * Select indented list sidenav state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getIndentList(state: UIStateModel) {\n    return state.indentListOpen;\n  }\n\n  /**\n   * Select the report sidenav state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getReport(state: UIStateModel) {\n    return state.reportOpen;\n  }\n\n  /**\n   * Select the right sidenav state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getRightSideNav(state: UIStateModel) {\n    return state.rightSideNavOpen;\n  }\n\n  /**\n   * Select the debug sidenav state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getDebugLog(state: UIStateModel) {\n    return state.debugLogOpen;\n  }\n\n  /**\n   * Select the bottom sheet state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getBottomSheet(state: UIStateModel) {\n    return state.bottomSheetOpen;\n  }\n\n  /**\n   * Select the compare sidenav state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getCompareState(state: UIStateModel) {\n    return state.compareOpen;\n  }\n\n  /**\n   * Select the search panel state\n   *\n   * @param state - UI State Model\n   */\n  @Selector()\n  static getSearchState(state: UIStateModel) {\n    return state.searchOpen;\n  }\n\n  /**\n   * Action to open snackbar. Update the UI State by setting the\n   * snackbar state to true and text\n   */\n  @Action(OpenSnackbar)\n  openSnackbar({ getState, setState }: StateContext, { text, type }: OpenSnackbar) {\n    const state = getState();\n    setState({\n      ...state,\n      snackbar: { opened: true, text, type },\n    });\n  }\n\n  /**\n   * Action to close snackbar. Update the UI State by setting the\n   * snackbar state to false and success state\n   */\n  @Action(CloseSnackbar)\n  closeSnackbar({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      snackbar: {\n        opened: false,\n        text: '',\n        type: SnackbarType.success,\n      },\n    });\n  }\n\n  /**\n   * Action to toggle control pane by inverting the current state\n   */\n  @Action(ToggleControlPane)\n  toggleControlPane({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      controlPaneOpen: !state.controlPaneOpen,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.NAVBAR, 'Toggle Control Pane', undefined, getState().controlPaneOpen);\n  }\n\n  /**\n   * Action to open loading. Set loading to true and text to text\n   */\n  @Action(OpenLoading)\n  openLoading({ getState, setState }: StateContext, { text }: OpenLoading) {\n    const state = getState();\n    setState({\n      ...state,\n      loadingText: text,\n      loading: true,\n      error: {},\n    });\n  }\n\n  /**\n   * Action to update loading text\n   */\n  @Action(UpdateLoadingText)\n  UpdateLoadingText({ getState, setState }: StateContext, { text }: UpdateLoadingText) {\n    const state = getState();\n    setState({\n      ...state,\n      loadingText: text,\n    });\n  }\n\n  /**\n   * Action to close loading. Set loading to false and clear loading text\n   */\n  @Action(CloseLoading)\n  closeLoading({ getState, setState, dispatch }: StateContext, { text }: CloseLoading) {\n    const state = getState();\n    setState({\n      ...state,\n      loading: false,\n      loadingText: '',\n    });\n\n    dispatch(new OpenSnackbar(text ?? '', SnackbarType.success));\n  }\n\n  /**\n   * Action to update error state.\n   * Close loading and open snackbar with appropriate message and type\n   */\n  @Action(HasError)\n  hasError({ getState, setState, dispatch }: StateContext, { error }: HasError) {\n    dispatch(new ReportLog(LOG_TYPES.MSG, error.msg ?? '', LOG_ICONS.error));\n    const state = getState();\n    setState({\n      ...state,\n      error,\n      loading: false,\n      loadingText: '',\n      snackbar: {\n        opened: true,\n        text: error.msg ?? '',\n        type: SnackbarType.error,\n      },\n    });\n  }\n\n  /**\n   * Action to toggle Indent list sidebar\n   */\n  @Action(ToggleIndentList)\n  toggleIndentList({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      indentListOpen: !state.indentListOpen,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.NAVBAR, 'Toggle Indent List', undefined, getState().indentListOpen);\n  }\n\n  /**\n   * Action to toggle Report sidebar\n   */\n  @Action(ToggleReport)\n  toggleReport({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      reportOpen: !state.reportOpen,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.NAVBAR, 'Toggle Report', undefined, getState().reportOpen);\n  }\n\n  /**\n   * Action to close right side. Set Report, IL, Debug Log, Compare to false.\n   */\n  @Action(CloseRightSideNav)\n  closeRightSideNav({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      indentListOpen: false,\n      reportOpen: false,\n      debugLogOpen: false,\n      compareOpen: false,\n    });\n    this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, 'Close All Right-Sidenav Elements ', undefined, false);\n  }\n\n  /**\n   * Action to toggle debug logs sidebar\n   */\n  @Action(ToggleDebugLogs)\n  toggleDebugLogs({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      debugLogOpen: !state.debugLogOpen,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.NAVBAR, 'Toggle Debug Logs', undefined, getState().debugLogOpen);\n  }\n\n  /**\n   * Action to open bottom sheet. Accept the data (name of structure)\n   * First close the bottom sheet, incase it is open.\n   * Then dispatch new action to update bottom sheet data\n   */\n  @Action(OpenBottomSheet)\n  openBottomSheet({ getState, setState, dispatch }: StateContext, { data }: OpenBottomSheet) {\n    const state = getState();\n    dispatch(new CloseBottomSheet());\n    dispatch(new CloseBottomSheetDOI());\n    dispatch(new UpdateBottomSheetData(data)).subscribe((_unused) => {\n      setState({\n        ...state,\n        bottomSheetOpen: true,\n      });\n    });\n    dispatch(new UpdateBottomSheetInfo(data));\n  }\n\n  /**\n   * Action to open bottom sheet DOI. Accept the data (name of structure)\n   * First close the bottom sheet Info, incase it is open.\n   * Second close the bottom sheet DOI, incase it is open.\n   * Then dispatch new action to update bottom sheet data DOI\n   */\n  @Action(OpenBottomSheetDOI)\n  OpenBottomSheetDOI({ dispatch }: StateContext, { data }: OpenBottomSheetDOI) {\n    dispatch(new CloseBottomSheet());\n    dispatch(new CloseBottomSheetDOI());\n    dispatch(new UpdateBottomSheetDOI(data));\n  }\n\n  /**\n   * Action to close bottom sheet.\n   * Empty the bottom sheet data from the state\n   */\n  @Action(CloseBottomSheetDOI)\n  closeBottomSheetDOI({ dispatch }: StateContext) {\n    dispatch(new UpdateBottomSheetData({}));\n  }\n\n  /**\n   * Action to close bottom sheet.\n   * Empty the bottom sheet data from the state\n   * Set the bottom sheet open variable to false\n   */\n  @Action(CloseBottomSheet)\n  closeBottomSheet({ getState, setState, dispatch }: StateContext) {\n    dispatch(new UpdateBottomSheetData({}));\n\n    const view = this.store.selectSnapshot(TreeState.getVegaView);\n    if (Object.entries(view).length) {\n      view.signal('bimodal_text__click', {});\n    }\n\n    setState({\n      ...getState(),\n      bottomSheetOpen: false,\n    });\n  }\n\n  /**\n   * Action to open compare sidenav\n   */\n  @Action(OpenCompare)\n  openCompare({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      compareOpen: true,\n    });\n    this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, 'Open Compare', undefined, getState().compareOpen);\n  }\n\n  /**\n   * Action to close compare sidenav\n   */\n  @Action(CloseCompare)\n  closeCompare({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      compareOpen: false,\n    });\n    this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, 'Close Compare', undefined, getState().compareOpen);\n  }\n\n  @Action(OpenSearch)\n  openSearch({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      searchOpen: true,\n    });\n    this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, 'Open Search', undefined, getState().searchOpen);\n  }\n\n  @Action(CloseSearch)\n  closeSearch({ getState, setState }: StateContext) {\n    const state = getState();\n    setState({\n      ...state,\n      searchOpen: false,\n    });\n    this.ga.event(GaAction.CLICK, GaCategory.NAVBAR, 'Close Search', undefined, getState().searchOpen);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBimodal.html":{"url":"classes/UpdateBimodal.html","title":"class - UpdateBimodal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBimodal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                links\n                            \n                            \n                                    Public\n                                nodes\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nodes: BMNode[], links: Link[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nodes\n                                                  \n                                                        \n                                                                        BMNode[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        links\n                                                  \n                                                        \n                                                                        Link[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        links\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Link[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BMNode[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Bimodal Network'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBimodalConfig.html":{"url":"classes/UpdateBimodalConfig.html","title":"class - UpdateBimodalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBimodalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: BimodalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        BimodalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Bimodal config'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBottomSheetDOI.html":{"url":"classes/UpdateBottomSheetDOI.html","title":"class - UpdateBottomSheetDOI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBottomSheetDOI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DOI[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DOI[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DOI[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Bottom Sheet DOI'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBottomSheetData.html":{"url":"classes/UpdateBottomSheetData.html","title":"class - UpdateBottomSheetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBottomSheetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Bottom Sheet Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBottomSheetInfo.html":{"url":"classes/UpdateBottomSheetInfo.html","title":"class - UpdateBottomSheetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBottomSheetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: OpenBottomSheetData)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        OpenBottomSheetData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OpenBottomSheetData\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Bottom Sheet Info'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:94\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateConfig.html":{"url":"classes/UpdateConfig.html","title":"class - UpdateConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: SheetConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SheetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SheetConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Sheet Config'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGetFromCache.html":{"url":"classes/UpdateGetFromCache.html","title":"class - UpdateGetFromCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGetFromCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cache\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:104\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Get From Cache'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:104\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGraphWidth.html":{"url":"classes/UpdateGraphWidth.html","title":"class - UpdateGraphWidth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGraphWidth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(width: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE WIDTH] Update Graph Width'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLinksData.html":{"url":"classes/UpdateLinksData.html","title":"class - UpdateLinksData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLinksData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                allOrgans\n                            \n                            \n                                    Public\n                                    Optional\n                                AS_AS\n                            \n                            \n                                    Public\n                                    Optional\n                                AS_AS_organWise\n                            \n                            \n                                    Public\n                                AS_CT\n                            \n                            \n                                    Public\n                                AS_CT_organWise\n                            \n                            \n                                    Public\n                                CT_B\n                            \n                            \n                                    Public\n                                CT_B_organWise\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(AS_CT: number, CT_B: number, AS_CT_organWise: Record, CT_B_organWise: Record, AS_AS?: number, AS_AS_organWise?: Record, allOrgans?: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        AS_CT\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CT_B\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        AS_CT_organWise\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CT_B_organWise\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        AS_AS\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        AS_AS_organWise\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        allOrgans\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        allOrgans\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        AS_AS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        AS_AS_organWise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        AS_CT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        AS_CT_organWise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        CT_B\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        CT_B_organWise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Links data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLoadingText.html":{"url":"classes/UpdateLoadingText.html","title":"class - UpdateLoadingText","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLoadingText\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(text: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/ui.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Loading Text'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/ui.actions.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Error, SnackbarType } from '../models/response.model';\nimport { DOI } from '../models/sheet.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\n\nexport class OpenLoading {\n  static readonly type = '[OPEN] Loading';\n  constructor(public text: string) {}\n}\n\nexport class UpdateLoadingText {\n  static readonly type = '[UPDATE] Loading Text';\n  constructor(public text: string) {}\n}\n\nexport class CloseLoading {\n  static readonly type = '[CLOSE] Loading';\n  constructor(public text?: string) {}\n}\n\nexport class HasError {\n  static readonly type = '[ERROR] Has Error';\n  constructor(public error: Error) {}\n}\n\nexport class NoError {\n  static readonly type = '[ERROR] No Error';\n}\n\nexport class ToggleControlPane {\n  static readonly type = '[TOGGLE] Control Pane';\n  constructor() {}\n}\n\nexport class OpenSnackbar {\n  static readonly type = '[OPEN] Snackbar';\n  constructor(\n    public text: string,\n    public type: SnackbarType,\n  ) {}\n}\n\nexport class CloseSnackbar {\n  static readonly type = '[CLOSE] Snackbar';\n  constructor() {}\n}\n\nexport class ToggleIndentList {\n  static readonly type = '[TOGGLE] Indent List';\n  constructor() {}\n}\n\nexport class ToggleReport {\n  static readonly type = '[TOGGLE] Report';\n  constructor() {}\n}\n\nexport class ToggleDebugLogs {\n  static readonly type = '[TOGGLE] Debug Logs';\n  constructor() {}\n}\n\nexport class CloseRightSideNav {\n  static readonly type = '[CLOSE] Right Side Nav';\n  constructor() {}\n}\n\nexport class ToggleBottomSheet {\n  static readonly type = '[TOGGLE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class OpenBottomSheet {\n  static readonly type = '[OPEN] Bottom Sheet';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class OpenBottomSheetDOI {\n  static readonly type = '[OPEN] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class CloseBottomSheet {\n  static readonly type = '[CLOSE] Bottom Sheet';\n  constructor() {}\n}\n\nexport class CloseBottomSheetDOI {\n  static readonly type = '[CLOSE] Bottom Sheet DOI';\n  constructor() {}\n}\n\nexport class OpenCompare {\n  static readonly type = '[OPEN] Compare';\n  constructor() {}\n}\n\nexport class CloseCompare {\n  static readonly type = '[CLOSE] Compare';\n  constructor() {}\n}\n\nexport class OpenSearch {\n  static readonly type = '[OPEN] Search';\n  constructor() {}\n}\n\nexport class CloseSearch {\n  static readonly type = '[CLOSE] Search';\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMode.html":{"url":"classes/UpdateMode.html","title":"class - UpdateMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mode\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mode: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Mode'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOmapConfig.html":{"url":"classes/UpdateOmapConfig.html","title":"class - UpdateOmapConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOmapConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OmapConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OmapConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OmapConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] OMAP Config'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlaygroundData.html":{"url":"classes/UpdatePlaygroundData.html","title":"class - UpdatePlaygroundData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlaygroundData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: string[][])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:84\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    string[][]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Playground Data'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePrevSheet.html":{"url":"classes/UpdatePrevSheet.html","title":"class - UpdatePrevSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePrevSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Previous Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReport.html":{"url":"classes/UpdateReport.html","title":"class - UpdateReport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reportData\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reportData: Report)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reportData\n                                                  \n                                                        \n                                                                        Report\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reportData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Report\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[Update] Report Statistics'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSelectedOrgansBeforeFilter.html":{"url":"classes/UpdateSelectedOrgansBeforeFilter.html","title":"class - UpdateSelectedOrgansBeforeFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSelectedOrgansBeforeFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                organsList\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organsList: SelectedOrganBeforeFilter[])\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:114\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organsList\n                                                  \n                                                        \n                                                                    SelectedOrganBeforeFilter[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        organsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SelectedOrganBeforeFilter[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Selected Organs before Filtering'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:114\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSheet.html":{"url":"classes/UpdateSheet.html","title":"class - UpdateSheet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSheet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/sheet.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sheet\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: Sheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/sheet.actions.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                        Sheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sheet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Sheet'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/sheet.actions.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Report } from '../models/report.model';\nimport { OpenBottomSheetData } from '../models/ui.model';\nimport { Sheet, CompareData, SheetConfig, DOI, SelectedOrganBeforeFilter } from './../models/sheet.model';\n\nexport class FetchSheetData {\n  static readonly type = '[FETCH] Sheet Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class RefreshData {\n  static readonly type = '[FETCH] Refresh';\n  constructor() {}\n}\n\nexport class FetchDataFromAssets {\n  static readonly type = '[FETCH] Data from Assets';\n  constructor(\n    public version: string,\n    public sheet: Sheet,\n  ) {}\n}\n\nexport class FetchAllOrganData {\n  static readonly type = '[FETCH] All Organ Data';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchSelectedOrganData {\n  static readonly type = '[FETCH] Selected Organs Data';\n  constructor(\n    public sheet: Sheet,\n    public selectedOrgans: string[],\n    public omapSelectedOrgans: string[],\n    public comparisonDetails?: CompareData[],\n  ) {}\n}\n\nexport class FetchCompareData {\n  static readonly type = '[FETCH] Compare Data';\n  constructor(public compareData: CompareData[]) {}\n}\n\nexport class UpdateConfig {\n  static readonly type = '[UPDATE] Sheet Config';\n  constructor(public config: SheetConfig) {}\n}\n\nexport class ToggleShowAllAS {\n  static readonly type = '[SHOW ALL AS]';\n  constructor() {}\n}\n\nexport class UpdateReport {\n  static readonly type = '[Update] Report Statistics';\n  constructor(public reportData: Report) {}\n}\n\nexport class DeleteCompareSheet {\n  static readonly type = '[DELETE] Compare Sheet';\n  constructor(public i: number) {}\n}\n\nexport class UpdateMode {\n  static readonly type = '[UPDATE] Mode';\n  constructor(public mode: string) {}\n}\n\nexport class UpdatePrevSheet {\n  static readonly type = '[UPDATE] Previous Sheet';\n  constructor(public sheet: string) {}\n}\n\nexport class UpdateSheet {\n  static readonly type = '[UPDATE] Sheet';\n  constructor(public sheet: Sheet) {}\n}\n\nexport class FetchInitialPlaygroundData {\n  static readonly type = '[FETCH] Initial Playground Data';\n  constructor(public sheet?: Sheet) {}\n}\n\nexport class UpdatePlaygroundData {\n  static readonly type = '[UPDATE] Playground Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class FetchPlaygroundUploadData {\n  static readonly type = '[FETCH] Playground Upload Data';\n  constructor(public data: string[][]) {}\n}\n\nexport class UpdateBottomSheetInfo {\n  static readonly type = '[UPDATE] Bottom Sheet Info';\n  constructor(public data: OpenBottomSheetData) {}\n}\n\nexport class UpdateBottomSheetDOI {\n  static readonly type = '[UPDATE] Bottom Sheet DOI';\n  constructor(public data: DOI[]) {}\n}\n\nexport class UpdateGetFromCache {\n  static readonly type = '[UPDATE] Get From Cache';\n  constructor(public cache: boolean) {}\n}\n\nexport class FetchValidOmapProtiens {\n  static readonly type = '[FETCH] Valid OMAP Protiens Data';\n  constructor() {}\n}\n\nexport class UpdateSelectedOrgansBeforeFilter {\n  static readonly type = '[UPDATE] Selected Organs before Filtering';\n  constructor(public organsList: SelectedOrganBeforeFilter[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVegaSpec.html":{"url":"classes/UpdateVegaSpec.html","title":"class - UpdateVegaSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVegaSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                spec\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spec: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Vega Spec'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVegaView.html":{"url":"classes/UpdateVegaView.html","title":"class - UpdateVegaView","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVegaView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/tree.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                view\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(view: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/tree.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        view\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[UPDATE] Vega View'\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/actions/tree.actions.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BimodalConfig, BMNode, Link } from '../models/bimodal.model';\nimport { DiscrepencyStructure, SearchStructure } from '../models/tree.model';\nimport { OmapConfig } from '../models/omap.model';\n\nexport class UpdateGraphWidth {\n  static readonly type = '[UPDATE WIDTH] Update Graph Width';\n  constructor(public width: number) {}\n}\n\nexport class UpdateVegaSpec {\n  static readonly type = '[UPDATE] Vega Spec';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public spec: any) {}\n}\n\nexport class UpdateVegaView {\n  static readonly type = '[UPDATE] Vega View';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public view: any) {}\n}\n\nexport class UpdateBimodal {\n  static readonly type = '[UPDATE] Bimodal Network';\n  constructor(\n    public nodes: BMNode[],\n    public links: Link[],\n  ) {}\n}\n\nexport class UpdateBimodalConfig {\n  static readonly type = '[UPDATE] Bimodal config';\n  constructor(public config: BimodalConfig) {}\n}\n\nexport class DoSearch {\n  static readonly type = '[SEARCH] Update Search List';\n  constructor(\n    public searchStructures: SearchStructure[],\n    public lastClickedOption: SearchStructure,\n  ) {}\n}\n\nexport class DiscrepencyLabel {\n  static readonly type = '[DISCREPENCY] Update discrepency Label List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\nexport class DiscrepencyId {\n  static readonly type = '[DISCREPENCY] Update discrepency Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class DuplicateId {\n  static readonly type = '[DISCREPENCY] Update duplicate Id List';\n  constructor(public discrepencyStructures: DiscrepencyStructure[]) {}\n}\n\nexport class UpdateBottomSheetData {\n  static readonly type = '[UPDATE] Bottom Sheet Data';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(public data: any) {}\n}\n\nexport class UpdateLinksData {\n  static readonly type = '[UPDATE] Links data';\n  constructor(\n    public AS_CT: number,\n    public CT_B: number,\n    public AS_CT_organWise: Record,\n    public CT_B_organWise: Record,\n    public AS_AS?: number,\n    public AS_AS_organWise?: Record,\n    public allOrgans?: boolean,\n  ) {}\n}\n\nexport class UpdateOmapConfig {\n  static readonly type = '[UPDATE] OMAP Config';\n  constructor(public config: OmapConfig) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/upload/upload.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upload\n            \n\n\n\n            \n                styleUrls\n                ./upload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                formGroup\n                            \n                            \n                                formValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                atLeastOnePhoneRequired\n                            \n                            \n                                checkLinkFormat\n                            \n                            \n                                submitData\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                uploadForm\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/upload/upload.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        uploadForm\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/upload/upload.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        atLeastOnePhoneRequired\n                        \n                    \n                \n            \n            \n                \natLeastOnePhoneRequired(group: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkLinkFormat\n                        \n                    \n                \n            \n            \n                \ncheckLinkFormat(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { sheetID: any; gid: any; csvUrl: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitData\n                        \n                    \n                \n            \n            \n                \nsubmitData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(fileFormDataEvent: FormData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/upload/upload.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileFormDataEvent\n                                            \n                                                            FormData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormBuilder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formValid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/upload/upload.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { UploadForm } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.scss'],\n})\nexport class UploadComponent implements OnInit {\n  @Output() uploadForm = new EventEmitter();\n\n  formGroup!: FormGroup;\n  formValid = true;\n\n  constructor(public fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.formGroup = new FormGroup(\n      {\n        link: new FormControl('', [\n          Validators.required,\n          Validators.compose([Validators.pattern(/\\/([\\w-_]{15,})\\/(.*?gid=(\\d+))?|\\w*csv$/)]) as ValidatorFn,\n        ]),\n        formData: new FormControl(''),\n        fileName: new FormControl(''),\n      },\n      { validators: [this.atLeastOnePhoneRequired as ValidatorFn] },\n    );\n\n    this.formGroup.valueChanges.subscribe((x) => {\n      if (!(x.fileName === null || x.fileName === '')) {\n        this.formGroup.get('link')?.clearValidators();\n        this.formGroup.get('link')?.updateValueAndValidity({ emitEvent: false });\n      }\n      this.formValid = this.formGroup.status === 'VALID';\n    });\n  }\n\n  atLeastOnePhoneRequired(group: FormGroup): { [s: string]: boolean } | null {\n    if (group) {\n      if (group.controls['link'].value || group.controls['fileName'].value) {\n        return null;\n      }\n    }\n    return { error: true };\n  }\n\n  upload(fileFormDataEvent: FormData) {\n    this.formGroup.patchValue({ formData: fileFormDataEvent });\n  }\n\n  submitData() {\n    this.formValid = this.formGroup.status === 'VALID';\n    if (this.formGroup.status !== 'VALID') {\n      return;\n    }\n    const sheet = this.formGroup.value;\n    const sheetId = this.checkLinkFormat(sheet.link)?.sheetID ?? '';\n\n    const data: UploadForm = {\n      link: sheet.link,\n      formData: sheet.formData,\n      fileName: sheet.fileName,\n      sheetId,\n      gid: this.checkLinkFormat(sheet.link)?.gid ?? '',\n      csvUrl: this.checkLinkFormat(sheet.link)?.csvUrl ?? '',\n    };\n    // ga call handled in the playground module component\n\n    this.uploadForm.emit(data);\n  }\n\n  checkLinkFormat(url: string) {\n    if (url.startsWith('https://docs.google.com/spreadsheets/d/')) {\n      const splitUrl = url.split('/');\n      if (splitUrl.length === 7) {\n        return {\n          sheetID: splitUrl[5],\n          gid: splitUrl[6].split('=')[1],\n          csvUrl: '',\n        };\n      }\n    }\n\n    return {\n      sheetID: '0',\n      gid: '0',\n      csvUrl: url,\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Instructions\n      \n    \n\n    \n      \n        \n          Through this feature, you can upload your own data (ASCT+B to ASCT+B, ASCT+B to experimental data, or ASCT+B\n          to OMAP) by pasting the Browser URL address for the Google sheet of your data in the fields mentioned below.\n        \n        \n          In order to successfully link your sheet, make sure the sheet has public access by selecting Share --> Get\n          link --> selecting \"Anyone with the link\" option and \"Viewer\" privileges, select \"Done\" to save.\n        \n\n        \n          Please make sure your data follows the appropriate data format:\n          \n            \n              ASCT+B Table template\n            \n            \n              OMAP compare template\n            \n          \n        \n      \n    \n    \n    \n      New\n      Organ Mapping Antibody Panel files (CSV) are now supported!\n    \n  \n\n\n\n  * required field\n\n  \n    \n      Data\n      * &nbsp;\n       (Add a link to data or upload a CSV/XLSX file)\n    \n\n    \n      \n        \n          \n            Google Sheet (or CSV) Link\n            \n            Enter Browser URL address for your public Google Sheet (or CSV)\n          \n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n    \n  \n\n\n\n  \n    \n      Submit\n    \n  \n\n\n    \n\n    \n                \n                    ./upload.component.scss\n                \n                :host {\n  border-style: solid;\n  border-width: 0.03rem;\n  border: #e4e4e4;\n  width: 100%;\n  background-color: white;\n  margin-left: 1rem;\n  font-size: 0.85rem;\n\n  a {\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  .link-input-field {\n    width: 100%;\n  }\n\n  input[type='color'] {\n    border: none;\n    outline: none;\n  }\n\n  ::ng-deep input[type='color']::-webkit-color-swatch-wrapper {\n    padding: 0;\n  }\n\n  input[type='color']::-webkit-color-swatch {\n    border: none;\n  }\n\n  .content {\n    flex: 1 1;\n    overflow: auto;\n  }\n\n  .mat-expansion-panel:not([class*='mat-elevation-z']) {\n    box-shadow: none;\n  }\n\n  .mat-expansion-panel-header:not(.compare) {\n    background: rgb(228, 228, 228) !important;\n  }\n\n  ::ng-deep mat-expansion-panel-header {\n    background: rgb(228, 228, 228);\n  }\n\n  .mat-expansion-panel-header:hover {\n    opacity: 0.85 !important;\n  }\n\n  .instruction-title {\n    font-weight: 600;\n    font-size: 10pt;\n  }\n\n  .required-field-disclaimer {\n    font-size: 0.625rem;\n    color: #f44336;\n    padding-left: 1.5rem;\n  }\n\n  .title-sheet-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .title-sheet-sub-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex: 0.5;\n    font-size: medium;\n  }\n\n  .flex-container {\n    flex: 0.5;\n    background-color: white;\n    mat-hint {\n      color: #757575;\n      margin-left: -0.8rem;\n    }\n\n    ::ng-deep .mdc-text-field--filled {\n      background-color: white;\n    }\n  }\n\n  .file-upload {\n    color: #757575;\n  }\n\n  .sheet-link-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-left: 1rem;\n  }\n\n  .button-container {\n    margin-left: 1.4rem;\n  }\n\n  .submit-button {\n    border-radius: 0.5rem !important;\n  }\n\n  .submit-button-color {\n    background-color: #f44336 !important;\n  }\n\n  .required {\n    color: red;\n    display: inline;\n  }\n\n  .data-upload-title {\n    margin-top: 1.5rem !important;\n    color: #444a65;\n    padding-left: 1rem;\n\n    .data-disclaimer-text {\n      font-size: 0.625rem;\n      color: #757575;\n    }\n  }\n\n  .optional-info {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    grid-gap: 0.625rem;\n  }\n\n  .rounded-blob {\n    align-items: center;\n    height: 1.5rem;\n    width: 2.5rem;\n    background-color: #c2cae5;\n    border-radius: 6.25rem;\n    text-align: center;\n  }\n\n  .footer {\n    height: 3rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Instructions                                      Through this feature, you can upload your own data (ASCT+B to ASCT+B, ASCT+B to experimental data, or ASCT+B          to OMAP) by pasting the Browser URL address for the Google sheet of your data in the fields mentioned below.                          In order to successfully link your sheet, make sure the sheet has public access by selecting Share --> Get          link --> selecting \"Anyone with the link\" option and \"Viewer\" privileges, select \"Done\" to save.                          Please make sure your data follows the appropriate data format:                                    ASCT+B Table template                                      OMAP compare template                                                      New      Organ Mapping Antibody Panel files (CSV) are now supported!        * required field            Data      *         (Add a link to data or upload a CSV/XLSX file)                                            Google Sheet (or CSV) Link                        Enter Browser URL address for your public Google Sheet (or CSV)                                                                                                          Submit      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadForm.html":{"url":"interfaces/UploadForm.html","title":"interface - UploadForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            csvUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fileName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            formData\n                                        \n                                \n                                \n                                        \n                                            gid\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            sheetId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        csvUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csvUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formData:         FormData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormData\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadModule.html":{"url":"modules/UploadModule.html","title":"module - UploadModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_imports\n\n\n\ncluster_UploadModule_exports\n\n\n\ncluster_UploadModule_declarations\n\n\n\n\nUploadComponent\n\nUploadComponent\n\n\n\nUploadModule\n\nUploadModule\n\nUploadModule -->\n\nUploadComponent->UploadModule\n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nUploadModule->UploadComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nUploadModule -->\n\nFileUploadModule->UploadModule\n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nUploadModule -->\n\nSidenavHeaderModule->UploadModule\n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nUploadModule -->\n\nSidenavModule->UploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/upload/upload.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UploadComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileUploadModule\n                        \n                        \n                            SidenavHeaderModule\n                        \n                        \n                            SidenavModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UploadComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UploadComponent } from './upload.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SidenavModule } from '../sidenav/sidenav.module';\nimport { SidenavHeaderModule } from '../sidenav-header/sidenav-header.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FileUploadModule } from '../file-upload/file-upload.module';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [UploadComponent],\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SidenavModule,\n    SidenavHeaderModule,\n    MatButtonModule,\n    FileUploadModule,\n    MatCardModule,\n  ],\n  exports: [UploadComponent],\n})\nexport class UploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VegaService.html":{"url":"injectables/VegaService.html","title":"injectable - VegaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VegaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/tree/vega.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                bm\n                            \n                            \n                                    Public\n                                    Readonly\n                                ga\n                            \n                            \n                                sheetConfig\n                            \n                            \n                                    Public\n                                    Readonly\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSignalListeners\n                            \n                            \n                                makeBimodal\n                            \n                            \n                                    Public\n                                makeNodeInfoString\n                            \n                            \n                                makeVegaConfig\n                            \n                            \n                                    Async\n                                renderGraph\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, bm: BimodalService, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/tree/vega.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bm\n                                                  \n                                                        \n                                                                        BimodalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSignalListeners\n                        \n                    \n                \n            \n            \n                \naddSignalListeners(view: View)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/vega.service.ts:86\n                        \n                    \n\n\n            \n                \n                        Function to add various event listeners to the visualization\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        View\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega view\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBimodal\n                        \n                    \n                \n            \n            \n                \nmakeBimodal(view: View)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/vega.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Function to create the biomodal network\nUses the data, tree data and the various configurations\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        View\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega view\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        makeNodeInfoString\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeNodeInfoString(node: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/vega.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                node\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeVegaConfig\n                        \n                    \n                \n            \n            \n                \nmakeVegaConfig(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig, _multiParentLinksData?: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/vega.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Function to creat the vega spec\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    selected organ sheet\n\n                                            \n                                        \n                                        \n                                                treeData\n                                            \n                                                            TNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    partonomy/vega tree data\n\n                                            \n                                        \n                                        \n                                                sheetConfig\n                                            \n                                                            SheetConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    sheet configurations\n\n                                            \n                                        \n                                        \n                                                _multiParentLinksData\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Spec\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        renderGraph\n                        \n                    \n                \n            \n            \n                \n                        \n                    renderGraph(config: Spec)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/tree/vega.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Function to create the partonomy tree\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Spec\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    vega spec\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        bm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BimodalService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/vega.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/vega.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sheetConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SheetConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/vega.service.ts:30\n                        \n                    \n\n            \n                \n                    Sheet configuration to be applied while building\nthe tree and the bimodal network\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/tree/vega.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Spec, View, parse } from 'vega';\nimport vegaTooltip from 'vega-tooltip';\nimport { ReportLog } from '../../actions/logs.actions';\nimport { UpdateLinksData, UpdateVegaView } from '../../actions/tree.actions';\nimport { CloseLoading, HasError, OpenBottomSheet, OpenBottomSheetDOI } from '../../actions/ui.actions';\nimport { GaAction, GaCategory, GaNodeInfo } from '../../models/ga.model';\nimport { LOG_ICONS, LOG_TYPES } from '../../models/logs.model';\nimport { Error } from '../../models/response.model';\nimport { DOI, Sheet, SheetConfig } from '../../models/sheet.model';\nimport { TNode } from '../../models/tree.model';\nimport { OpenBottomSheetData } from '../../models/ui.model';\nimport { BimodalService } from './bimodal.service';\nimport { Data } from './spec/data';\nimport { Legends } from './spec/legends';\nimport { Marks } from './spec/marks';\nimport { Scales } from './spec/scales';\nimport { Signals } from './spec/signals';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VegaService {\n  /**\n   * Sheet configuration to be applied while building\n   * the tree and the bimodal network\n   */\n  sheetConfig!: SheetConfig;\n\n  constructor(\n    public readonly store: Store,\n    public readonly bm: BimodalService,\n    public readonly ga: GoogleAnalyticsService,\n  ) {}\n\n  /**\n   * Function to create the partonomy tree\n   *\n   * @param config vega spec\n   */\n  async renderGraph(config: Spec) {\n    try {\n      const runtime = parse(config, {});\n      const treeView = new View(runtime).renderer('svg').initialize('#vis').hover();\n\n      vegaTooltip(treeView, { theme: 'custom' });\n      treeView.runAsync();\n\n      this.addSignalListeners(treeView);\n      this.store.dispatch(new CloseLoading('Visualization Rendered'));\n      this.store.dispatch(new UpdateLinksData(0, 0, {}, {}, treeView.data('links').length, {}));\n      this.makeBimodal(treeView);\n    } catch (error) {\n      console.log(error);\n      const error2 = error as { name: string; status: number };\n      const err: Error = {\n        msg: `${error2.name} (Status: ${error2.status})`,\n        status: error2.status,\n        hasError: true,\n      };\n      this.store.dispatch(new ReportLog(LOG_TYPES.MSG, 'Failed to create Tree', LOG_ICONS.error));\n      this.store.dispatch(new HasError(err));\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public makeNodeInfoString(node: any) {\n    const nodeInfo: GaNodeInfo = {\n      name: node.name,\n      groupName: node.groupName,\n      oid: node.ontologyId,\n      type: node.type,\n      x: node.x,\n      y: node.y,\n    };\n    return JSON.stringify(nodeInfo);\n  }\n\n  /**\n   * Function to add various event listeners to the visualization\n   *\n   * @param view vega view\n   */\n  addSignalListeners(view: View) {\n    // node name click event to open bottom sheet\n    view.addSignalListener('bimodal_text__click', (_signal: unknown, node: OpenBottomSheetData) => {\n      if (node && Object.entries(node).length) {\n        this.store.dispatch(new OpenBottomSheet(node));\n        this.ga.event(GaAction.CLICK, GaCategory.GRAPH, `Clicked a node label: ${this.makeNodeInfoString(node)}`);\n      }\n    });\n\n    // node click listener to emit ga event\n    view.addSignalListener('node__click', (_signal: string, nodeId: unknown) => {\n      if (nodeId != null) {\n        this.ga.event(GaAction.CLICK, GaCategory.GRAPH, 'Selected (clicked) a node', 0);\n      } else {\n        this.ga.event(GaAction.CLICK, GaCategory.GRAPH, 'Deselected a node');\n      }\n    });\n\n    // path click event to show doi/references\n    view.addSignalListener('path__click', (_signal: string, text: DOI[]) => {\n      if (text.length) {\n        this.store.dispatch(new OpenBottomSheetDOI(text));\n      }\n    });\n  }\n\n  /**\n   * Function to create the biomodal network\n   * Uses the data, tree data and the various configurations\n   *\n   * @param view vega view\n   */\n  makeBimodal(view: View) {\n    this.store.dispatch(new UpdateVegaView(view)).subscribe((states) => {\n      const data = states.sheetState.data;\n      const treeData = states.treeState.treeData;\n      const bimodalConfig = states.treeState.bimodal.config;\n      const sheetConfig = states.sheetState.sheetConfig;\n      const omapConfig = states.treeState.omapConfig;\n      const filteredProtiens = states.sheetState.filteredProtiens;\n\n      if (data.length) {\n        this.bm.makeBimodalData(data, treeData, bimodalConfig, false, sheetConfig, omapConfig, filteredProtiens);\n      }\n    });\n  }\n\n  /**\n   * Function to creat the vega spec\n   *\n   * @param currentSheet selected organ sheet\n   * @param treeData partonomy/vega tree data\n   * @param sheetConfig sheet configurations\n   * @param multiParentLinksData depricated\n   */\n  makeVegaConfig(currentSheet: Sheet, treeData: TNode[], sheetConfig: SheetConfig, _multiParentLinksData?: []) {\n    const config: Spec = {\n      $schema: 'https://vega.github.io/schema/vega/v5.json',\n      autosize: 'pad',\n      padding: {\n        right: 0,\n        top: 20,\n        bottom: 20,\n        left: 30,\n      },\n      signals: Signals.create(sheetConfig),\n      data: Data.create(currentSheet, treeData, sheetConfig),\n      scales: Scales.create(),\n      legends: Legends.create(),\n      marks: Marks.create(),\n    };\n    return config;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Version.html":{"url":"interfaces/Version.html","title":"interface - Version","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Version\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                        \n                                            folder\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        folder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        folder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VersionDetail.html":{"url":"interfaces/VersionDetail.html","title":"interface - VersionDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VersionDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/sheet.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            as\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            csvUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ct\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hraVersion\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sheetId\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                                \n                                        \n                                            viewValue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            xlsx\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        as\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        as:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        csvUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        csvUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ct\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ct:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hraVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hraVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sheetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sheetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xlsx\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xlsx:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum BM_TYPE {\n  G = 'gene',\n  P = 'protein',\n  BL = 'lipids',\n  BM = 'metabolites',\n  BF = 'proteoforms',\n}\n\nexport enum PROTEIN_PRESENCE {\n  POS = 'Positive',\n  NEG = 'Negative',\n  UNKNOWN = 'Unknown',\n  INTERMEDIATE = 'Intermediate',\n}\n\nexport interface Reference {\n  id?: string;\n  doi?: string;\n  notes?: string;\n}\n\nexport interface OrganTableSelect {\n  organs?: string[];\n  omapOrgans?: string[];\n  isIntilalSelect: boolean;\n  getFromCache: boolean;\n}\n\nexport interface OrganTableOnClose {\n  organs: boolean;\n  cache: boolean;\n}\n\nexport interface Structure {\n  name?: string;\n  id?: string;\n  rdfs_label?: string;\n  b_type?: BM_TYPE;\n  isNew?: boolean;\n  color?: string;\n  organName?: string;\n  notes?: string;\n  proteinPresence?: PROTEIN_PRESENCE;\n}\n\nexport interface Row {\n  anatomical_structures: Structure[];\n  cell_types: Structure[];\n  biomarkers: Structure[];\n  biomarkers_gene: Structure[];\n  biomarkers_protein: Structure[];\n  biomarkers_lipids: Structure[];\n  biomarkers_meta: Structure[];\n  biomarkers_prot: Structure[];\n  references: Reference[];\n  organName: string;\n  tableVersion: string;\n}\n\nexport interface ResponseData {\n  csv: string;\n  data: Row[];\n  parsed: [];\n  isOmap?: boolean;\n}\n\nexport interface Sheet {\n  name: string;\n  sheetId?: string;\n  gid?: string;\n  display: string;\n  config: SheetConfig;\n  title: string;\n  data?: string;\n  csvUrl?: string;\n  formData?: FormData;\n}\n\nexport interface CompareData {\n  link: string;\n  title: string;\n  description: string;\n  color: string;\n  sheetId: string;\n  gid: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  isOmap?: boolean;\n}\n\nexport interface SheetConfig {\n  bimodal_distance_y: number;\n  bimodal_distance_x: number;\n  width: number;\n  height: number;\n  show_ontology?: boolean;\n  show_all_AS?: boolean;\n  discrepencyLabel?: boolean;\n  discrepencyId?: boolean;\n  duplicateId?: boolean;\n}\n\nexport interface SheetInfo {\n  name: string;\n  ontologyId: string;\n  ontologyCode: string;\n  iri: string;\n  label: string;\n  desc: string;\n  hasError: boolean;\n  msg: string;\n  status: number;\n  notes: string;\n  references?: Reference[];\n  extraLinks?: Record;\n}\n\nexport interface DOI {\n  doi: string;\n  id: string;\n  notes: string;\n}\n\nexport interface VersionDetail {\n  value: string;\n  viewValue: string;\n  hraVersion?: string;\n  csvUrl?: string;\n  sheetId?: string;\n  gid?: string;\n  xlsx?: string;\n  as?: number;\n  ct?: number;\n  bp?: number;\n}\n\nexport interface SheetDetails {\n  name: string;\n  omapId?: string;\n  tissuePreservationMethod?: string;\n  imagingMethod?: string;\n  display: string;\n  body?: string;\n  sheetId?: string;\n  gid?: string;\n  config: {\n    bimodal_distance_x: number;\n    bimodal_distance_y: number;\n    width: number;\n    height: number;\n  };\n  title: string;\n  version?: VersionDetail[];\n  data?: string;\n  csvUrl?: string;\n  symbol?: string;\n  position?: number;\n  representation_of?: string[];\n  uberon_id?: string;\n}\n\nexport interface SheetOptions {\n  title: string;\n  sheet: string;\n  version?: {\n    value: string;\n    viewValue: string;\n    hraVersion?: string;\n  }[];\n  symbol?: string;\n}\n\nexport interface PlaygroundSheetOptions {\n  title: string;\n  sheet: string;\n}\n\nexport interface ConfigurationOptions {\n  headerCount: string;\n  imgOptions: string[];\n  masterSheetLink: string;\n  sheetId: string;\n  version1Url: string;\n  playgroundSheetOptions: PlaygroundSheetOptions[];\n  version: Version[];\n  moreOptions: MoreOption[];\n}\n\nexport interface MoreOption {\n  name: string;\n  url: string;\n  type: string;\n}\n\nexport interface Version {\n  display: string;\n  folder: string;\n}\n\nexport interface GEdge {\n  source: number;\n  target: number;\n}\n\nexport interface GNode {\n  id: number;\n  type: string;\n  name: string;\n  metadata: Metadata;\n}\n\nexport interface Metadata {\n  ontologyTypeId: string;\n  ontologyType: string;\n  label: string;\n  name: string;\n  ontologyId: string;\n  bmType?: string;\n  references: Reference[];\n}\n\nexport interface Graph {\n  nodes: GNode[];\n  edges: GEdge[];\n}\n\nexport interface GraphData {\n  data: Graph;\n}\n\nexport interface CompareReport {\n  identicalAS: string[];\n  newAS: string[];\n  identicalCT: string[];\n  newCT: string[];\n  identicalB: string[];\n  newB: string[];\n  color: string;\n  title: string;\n  description: string;\n  identicalBMCTPair: Row[];\n}\n\nexport interface CompareReportData {\n  data: CompareReport[];\n}\n\nexport interface UploadForm {\n  link: string;\n  csvUrl?: string;\n  formData?: FormData;\n  fileName?: string;\n  sheetId: string;\n  gid: string;\n}\n\nexport interface SelectedOrganBeforeFilter {\n  selector?: string;\n  organName?: string;\n  filteredOut?: boolean;\n  version?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisControlsComponent.html":{"url":"components/VisControlsComponent.html","title":"component - VisControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/controls/vis-controls.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-vis-controls\n            \n\n\n\n            \n                styleUrls\n                ./vis-controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./vis-controls.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ga\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeBimodalDistanceX\n                            \n                            \n                                changeBimodalDistanceY\n                            \n                            \n                                changeHeight\n                            \n                            \n                                changeShowAS\n                            \n                            \n                                changeShowOntology\n                            \n                            \n                                changeWidth\n                            \n                            \n                                exportControls\n                            \n                            \n                                showDiscrepencyId\n                            \n                            \n                                showDiscrepencyLabel\n                            \n                            \n                                showDuplicateId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                currentSheet\n                            \n                            \n                                error\n                            \n                            \n                                selectedOrgans\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                updatedConfig\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/controls/vis-controls.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         SheetConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/vis-controls.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentSheet\n                    \n                \n                \n                    \n                        Type :         Sheet\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/vis-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         Error\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/vis-controls.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedOrgans\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/vis-controls.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        updatedConfig\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/vis-controls.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeBimodalDistanceX\n                        \n                    \n                \n            \n            \n                \nchangeBimodalDistanceX()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeBimodalDistanceY\n                        \n                    \n                \n            \n            \n                \nchangeBimodalDistanceY()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeHeight\n                        \n                    \n                \n            \n            \n                \nchangeHeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeShowAS\n                        \n                    \n                \n            \n            \n                \nchangeShowAS()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeShowOntology\n                        \n                    \n                \n            \n            \n                \nchangeShowOntology()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeWidth\n                        \n                    \n                \n            \n            \n                \nchangeWidth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportControls\n                        \n                    \n                \n            \n            \n                \nexportControls(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDiscrepencyId\n                        \n                    \n                \n            \n            \n                \nshowDiscrepencyId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDiscrepencyLabel\n                        \n                    \n                \n            \n            \n                \nshowDiscrepencyLabel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDuplicateId\n                        \n                    \n                \n            \n            \n                \nshowDuplicateId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/vis-controls.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ga\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GoogleAnalyticsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/controls/vis-controls.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { GaAction, GaCategory } from '../../models/ga.model';\nimport { Error } from '../../models/response.model';\nimport { Sheet, SheetConfig } from '../../models/sheet.model';\n\n@Component({\n  selector: 'app-vis-controls',\n  templateUrl: './vis-controls.component.html',\n  styleUrls: ['./vis-controls.component.scss'],\n})\nexport class VisControlsComponent {\n  @Input() config!: SheetConfig;\n  @Input() error!: Error;\n  @Input() currentSheet!: Sheet;\n  @Input() selectedOrgans!: string[];\n\n  @Output() updatedConfig = new EventEmitter();\n  constructor(public ga: GoogleAnalyticsService) {}\n\n  changeWidth() {\n    this.updatedConfig.emit({\n      property: 'width',\n      config: this.config,\n    });\n    this.ga.event(GaAction.SLIDE, GaCategory.CONTROLS, 'Width Slider', this.config.width);\n  }\n\n  changeHeight() {\n    this.updatedConfig.emit({\n      property: 'height',\n      config: this.config,\n    });\n    this.ga.event(GaAction.SLIDE, GaCategory.CONTROLS, 'Height Slider', this.config.height);\n  }\n\n  changeShowOntology() {\n    this.config.show_ontology = !this.config.show_ontology;\n    this.updatedConfig.emit({\n      property: 'show-ontology',\n      config: this.config,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.CONTROLS, 'Toggle Ontology', +this.config.show_ontology);\n  }\n\n  showDiscrepencyLabel() {\n    this.config.discrepencyLabel = !this.config.discrepencyLabel;\n    this.config.discrepencyId = false;\n    this.config.duplicateId = false;\n    this.updatedConfig.emit({\n      property: 'show-discrepency-label',\n      config: this.config,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.CONTROLS, 'Toggle Discrepency Label', +this.config.discrepencyLabel);\n  }\n\n  showDiscrepencyId() {\n    this.config.discrepencyId = !this.config.discrepencyId;\n    this.config.discrepencyLabel = false;\n    this.config.duplicateId = false;\n    this.updatedConfig.emit({\n      property: 'show-discrepency-id',\n      config: this.config,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.CONTROLS, 'Toggle Discrepency ID', +this.config.discrepencyLabel);\n  }\n\n  showDuplicateId() {\n    this.config.duplicateId = !this.config.duplicateId;\n    this.config.discrepencyLabel = false;\n    this.config.discrepencyId = false;\n    this.updatedConfig.emit({\n      property: 'show-duplicate-id',\n      config: this.config,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.CONTROLS, 'Toggle Duplicate ID', +this.config.duplicateId);\n  }\n\n  changeBimodalDistanceX() {\n    this.updatedConfig.emit({\n      property: 'bm-x',\n      config: this.config,\n    });\n    this.ga.event(GaAction.SLIDE, GaCategory.CONTROLS, 'Bimodal Distance X Slider', this.config.bimodal_distance_x);\n  }\n\n  changeBimodalDistanceY() {\n    this.updatedConfig.emit({\n      property: 'bm-y',\n      config: this.config,\n    });\n    this.ga.event(GaAction.SLIDE, GaCategory.CONTROLS, 'Bimodal Distance Y Slider', this.config.bimodal_distance_y);\n  }\n\n  changeShowAS() {\n    this.updatedConfig.emit({\n      property: 'show-as',\n      config: this.config,\n    });\n    this.ga.event(GaAction.TOGGLE, GaCategory.CONTROLS, 'Toggle AS Visibility', +(this.config.show_all_AS ?? false));\n  }\n\n  exportControls(event: Event) {\n    event.stopPropagation();\n    const sJson = JSON.stringify(this.config);\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/json;charset=UTF-8,' + encodeURIComponent(sJson));\n    element.setAttribute('download', 'asct-b-graph-config.json');\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n\n    this.ga.event(GaAction.CLICK, GaCategory.CONTROLS, 'Export Vis Controls', undefined);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n         Controls \n      \n    \n    \n      \n        get_app\n      \n    \n  \n\n   8)\"\n  >\n    \n      Show all AS\n    \n  \n\n  \n    \n      Ontology IDs\n    \n  \n\n  \n    \n      \n        Tree Width\n      \n      \n        \n      \n      \n    \n    \n      \n        \n      \n    \n  \n\n  \n    \n      \n        Tree Height\n      \n      \n        \n          \n      \n      \n    \n    \n      \n        \n    \n  \n\n  \n    \n      \n        Bimodal Distance X\n      \n      \n        \n          \n        \n      \n      \n    \n    \n      \n        \n    \n  \n\n  \n    \n      \n        Bimodal Distance Y\n      \n      \n        \n          \n        \n      \n      \n    \n    \n      \n        \n      \n    \n  \n\n  \n    \n      Label mismatch\n    \n  \n\n  \n    \n      ID Missing\n    \n  \n\n  \n    \n      ID Duplicates\n    \n  \n\n\n    \n\n    \n                \n                    ./vis-controls.component.scss\n                \n                @import './../../../assets/stylesheets/_colors.scss';\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n  box-shadow: none;\n}\n\n.mat-expansion-panel-header:not(.compare) {\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header {\n  transition: all 0.3s;\n  background-color: $secondary !important;\n  padding-left: 0.9375rem !important;\n  padding-right: 0.9375rem !important;\n  border-top-left-radius: 0.5rem !important;\n  border-top-right-radius: 0.5rem !important;\n}\n\n.mat-expansion-panel-header:hover {\n  background-color: darken($color: $secondary, $amount: 8%) !important;\n}\n\n.numberInput {\n  background-color: #fafafa !important;\n  border-radius: 0.25rem !important;\n  font: inherit;\n  background: transparent;\n  color: currentColor;\n  border: none;\n  outline: none;\n  padding: 0;\n  margin: 0;\n  width: 500%;\n  max-width: 100%;\n  vertical-align: bottom;\n  text-align: inherit;\n}\n\n.controls .mat-expansion-panel-header-description {\n  justify-content: flex-end !important;\n  align-items: center;\n  margin-right: 0 !important;\n}\n\n.controls .mat-expansion-panel-header-description {\n  flex-basis: 0;\n}\n\n.controls .mat-expansion-panel-header-title {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n::ng-deep .mat-mdc-slide-toggle .mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon {\n  fill: none !important;\n}\n\n::ng-deep .mat-mdc-slide-toggle .mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon {\n  fill: none !important;\n}\n\n.mat-mdc-slider .mdc-slider__track--active {\n  height: 0.125rem;\n}\n.mat-mdc-slider .mdc-slider__track--active {\n  height: 0.125rem;\n}\n\nmat-slider {\n  --mdc-slider-inactive-track-height: 0.18rem;\n  --mdc-slider-active-track-height: 0.18rem;\n  ::ng-deep .mdc-slider__thumb-knob {\n    border-width: 0.438rem;\n    height: 0.813rem;\n    width: 0.813rem;\n  }\n}\n\n::ng-deep .mat-mdc-slide-toggle {\n  --mdc-switch-unselected-handle-color: #ffffff;\n  --mdc-switch-unselected-focus-handle-color: #ffffff;\n  --mdc-switch-unselected-hover-handle-color: #ffffff;\n  --mdc-switch-unselected-track-color: #989898;\n  --mdc-switch-unselected-hover-track-color: #989898;\n  --mdc-switch-unselected-focus-track-color: #989898;\n}\n\n.vis-controls {\n  font-size: 0.9rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Controls                             get_app               8)\"  >          Show all AS                  Ontology IDs                          Tree Width                                                                                      Tree Height                                                                                          Bimodal Distance X                                                                                                  Bimodal Distance Y                                                                                                Label mismatch                  ID Missing                  ID Duplicates      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-reporter'},{'name': 'CompareComponent', 'selector': 'app-compare'},{'name': 'ControlPaneComponent', 'selector': 'app-control-pane'},{'name': 'DebugLogsComponent', 'selector': 'app-debug-logs'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'DocsNavComponent', 'selector': 'app-docs-nav'},{'name': 'DoiComponent', 'selector': 'app-doi'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FunctionsComponent', 'selector': 'app-functions'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndentedListComponent', 'selector': 'app-indent'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LegendComponent', 'selector': 'app-legend'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavItemComponent', 'selector': 'app-nav-item'},{'name': 'OmapControlsComponent', 'selector': 'app-omap-controls'},{'name': 'OrganTableSelectorComponent', 'selector': 'app-organ-table-selector'},{'name': 'PlaygroundComponent', 'selector': 'app-playground'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'RootComponent', 'selector': 'app-root'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'SidenavHeaderComponent', 'selector': 'app-sidenav-header'},{'name': 'TableNestedMenuComponent', 'selector': 'app-table-nested-menu'},{'name': 'TrackingPopupComponent', 'selector': 'app-tracking-popup'},{'name': 'TreeComponent', 'selector': 'app-tree'},{'name': 'UploadComponent', 'selector': 'app-upload'},{'name': 'VisControlsComponent', 'selector': 'app-vis-controls'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BM_TYPE   (src/.../sheet.model.ts)\n                        \n                        \n                            GaAction   (src/.../ga.model.ts)\n                        \n                        \n                            GaCategory   (src/.../ga.model.ts)\n                        \n                        \n                            LOG_ICONS   (src/.../logs.model.ts)\n                        \n                        \n                            LOG_TYPES   (src/.../logs.model.ts)\n                        \n                        \n                            NODE_TYPE   (src/.../tree.model.ts)\n                        \n                        \n                            PROTEIN_PRESENCE   (src/.../sheet.model.ts)\n                        \n                        \n                            SnackbarType   (src/.../response.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/sheet.model.ts\n    \n        \n            \n                \n                    \n                        \n                        BM_TYPE\n                    \n                \n                        \n                            \n                                 G\n                            \n                        \n                        \n                            \n                                Value : gene\n                            \n                        \n                        \n                            \n                                 P\n                            \n                        \n                        \n                            \n                                Value : protein\n                            \n                        \n                        \n                            \n                                 BL\n                            \n                        \n                        \n                            \n                                Value : lipids\n                            \n                        \n                        \n                            \n                                 BM\n                            \n                        \n                        \n                            \n                                Value : metabolites\n                            \n                        \n                        \n                            \n                                 BF\n                            \n                        \n                        \n                            \n                                Value : proteoforms\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PROTEIN_PRESENCE\n                    \n                \n                        \n                            \n                                 POS\n                            \n                        \n                        \n                            \n                                Value : Positive\n                            \n                        \n                        \n                            \n                                 NEG\n                            \n                        \n                        \n                            \n                                Value : Negative\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : Unknown\n                            \n                        \n                        \n                            \n                                 INTERMEDIATE\n                            \n                        \n                        \n                            \n                                Value : Intermediate\n                            \n                        \n            \n        \n\n    src/app/models/ga.model.ts\n    \n        \n            \n                \n                    \n                        \n                        GaAction\n                    \n                \n                        \n                            \n                                 INPUT\n                            \n                        \n                        \n                            \n                                Value : input\n                            \n                        \n                        \n                            \n                                 TOGGLE\n                            \n                        \n                        \n                            \n                                Value : toggle\n                            \n                        \n                        \n                            \n                                 SLIDE\n                            \n                        \n                        \n                            \n                                Value : slide\n                            \n                        \n                        \n                            \n                                 CLICK\n                            \n                        \n                        \n                            \n                                Value : click\n                            \n                        \n                        \n                            \n                                 NAV\n                            \n                        \n                        \n                            \n                                Value : nav\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GaCategory\n                    \n                \n                        \n                            \n                                 HOME\n                            \n                        \n                        \n                            \n                                Value : home\n                            \n                        \n                        \n                            \n                                 FOOTER\n                            \n                        \n                        \n                            \n                                Value : footer\n                            \n                        \n                        \n                            \n                                 DOCS\n                            \n                        \n                        \n                            \n                                Value : docs\n                            \n                        \n                        \n                            \n                                 REPORT\n                            \n                        \n                        \n                            \n                                Value : report\n                            \n                        \n                        \n                            \n                                 NAVBAR\n                            \n                        \n                        \n                            \n                                Value : navbar\n                            \n                        \n                        \n                            \n                                 PLAYGROUND\n                            \n                        \n                        \n                            \n                                Value : playground\n                            \n                        \n                        \n                            \n                                 GRAPH\n                            \n                        \n                        \n                            \n                                Value : graph\n                            \n                        \n                        \n                            \n                                 COMPARE\n                            \n                        \n                        \n                            \n                                Value : compare\n                            \n                        \n                        \n                            \n                                 CONTROLS\n                            \n                        \n                        \n                            \n                                Value : controls\n                            \n                        \n                        \n                            \n                                 COMPARISON\n                            \n                        \n                        \n                            \n                                Value : comparison\n                            \n                        \n            \n        \n\n    src/app/models/logs.model.ts\n    \n        \n            \n                \n                    \n                        \n                        LOG_ICONS\n                    \n                \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : cancel\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : check_circle\n                            \n                        \n                        \n                            \n                                 file\n                            \n                        \n                        \n                            \n                                Value : next_plan\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LOG_TYPES\n                    \n                \n                        \n                            \n                                 MSG\n                            \n                        \n                        \n                            \n                                Value : MSG\n                            \n                        \n                        \n                            \n                                 NO_OUT_LINKS\n                            \n                        \n                        \n                            \n                                Value : NO_OUT_LINKS\n                            \n                        \n                        \n                            \n                                 NO_IN_LINKS\n                            \n                        \n                        \n                            \n                                Value : NO_IN_LINKS\n                            \n                        \n                        \n                            \n                                 MULTI_IN_LINKS\n                            \n                        \n                        \n                            \n                                Value : MULTI_IN_LINKS\n                            \n                        \n                        \n                            \n                                 SELF_LINKS\n                            \n                        \n                        \n                            \n                                Value : SELF_LINKS\n                            \n                        \n            \n        \n\n    src/app/models/tree.model.ts\n    \n        \n            \n                \n                    \n                        \n                        NODE_TYPE\n                    \n                \n                        \n                            \n                                 AS\n                            \n                        \n                        \n                            \n                                Value : AS\n                            \n                        \n                        \n                            \n                                 BM\n                            \n                        \n                        \n                            \n                                Value : BM\n                            \n                        \n                        \n                            \n                                 R\n                            \n                        \n                        \n                            \n                                Value : root\n                            \n                        \n            \n        \n\n    src/app/models/response.model.ts\n    \n        \n            \n                \n                    \n                        \n                        SnackbarType\n                    \n                \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 warning\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getAssetsURL   (src/.../url.ts)\n                        \n                        \n                            getFoundIndex   (src/.../tree.functions.ts)\n                        \n                        \n                            initCommands   (src/.../analytics.module.ts)\n                        \n                        \n                            initializeApp   (src/.../app.module.ts)\n                        \n                        \n                            makeAS   (src/.../tree.functions.ts)\n                        \n                        \n                            makeBioMarkers   (src/.../tree.functions.ts)\n                        \n                        \n                            makeCellTypes   (src/.../tree.functions.ts)\n                        \n                        \n                            toAttributes   (src/.../analytics.module.ts)\n                        \n                        \n                            trackMousePosition   (src/.../mouse-position-tracker.module.ts)\n                        \n                        \n                            validateWidth   (src/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/static/url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAssetsURL\n                        \n                    \n                \n            \n            \n                \ngetAssetsURL(dataVersion: string, currentSheet: Sheet)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataVersion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentSheet\n                                            \n                                                            Sheet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/modules/tree/tree.functions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getFoundIndex\n                        \n                    \n                \n            \n            \n                \ngetFoundIndex(str: Structure, typeData, isForReport: boolean, row: Row, isBiomarker, isReportNotOrganWise)\n                \n            \n\n\n\n\n            \n                \n                        Function to compute or find the index of the given object in the given array.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            Structure\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nStructure of the object\n\n\n                                            \n                                        \n                                        \n                                                typeData\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nArray of structures to search in Anatomical Structures or Cell Types or Biomarkers\n\n\n                                            \n                                        \n                                        \n                                                isForReport\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nFlag to indicate if the object is for report or not\n\n\n                                            \n                                        \n                                        \n                                                row\n                                            \n                                                            Row\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nRow of the sheet\n\n\n                                            \n                                        \n                                        \n                                                isBiomarker\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isReportNotOrganWise\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \nIndex of the object in the array\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeAS\n                        \n                    \n                \n            \n            \n                \nmakeAS(data, isForReport, isReportNotOrganWise)\n                \n            \n\n\n\n\n            \n                \n                        Function to compute the Anatomical Structures from the given Data Table.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSheet data\n\n\n                                            \n                                        \n                                        \n                                                isForReport\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isReportNotOrganWise\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AS[]\n\n                        \n                            \n                                \nArray of anatomical structures\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeBioMarkers\n                        \n                    \n                \n            \n            \n                \nmakeBioMarkers(data, type?: string, isForReport, isReportNotOrganWise)\n                \n            \n\n\n\n\n            \n                \n                        Function to compute the Cell Types from the given Data Table.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSheet data\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isForReport\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isReportNotOrganWise\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         B[]\n\n                        \n                            \n                                \nArray of biomarkers\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeCellTypes\n                        \n                    \n                \n            \n            \n                \nmakeCellTypes(data, isForReport, isReportNotOrganWise)\n                \n            \n\n\n\n\n            \n                \n                        Function to compute the Cell Types from the given Data Table.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSheet data\n\n\n                                            \n                                        \n                                        \n                                                isForReport\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                        \n                                                isReportNotOrganWise\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CT[]\n\n                        \n                            \n                                \nArray of cell types\n\n\n                            \n                \n            \n        \n    \n    src/app/services/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initCommands\n                        \n                    \n                \n            \n            \n                \ninitCommands(options: AnalyticsOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AnalyticsOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     IGoogleAnalyticsCommand[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAttributes\n                        \n                    \n                \n            \n            \n                \ntoAttributes(obj: Record)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initializeApp\n                        \n                    \n                \n            \n            \n                \ninitializeApp(configService: ConfigService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                configService\n                                            \n                                                            ConfigService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/services/mouse-position-tracker.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        trackMousePosition\n                        \n                    \n                \n            \n            \n                \ntrackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                el\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ga\n                                            \n                                                        GoogleAnalyticsService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Subscription\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/static/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateWidth\n                        \n                    \n                \n            \n            \n                \nvalidateWidth(width: number, paneOpen, paneWidth: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                paneOpen\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                        \n                                                paneWidth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    250\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CompareModule\n\n\n\ncluster_CompareModule_declarations\n\n\n\ncluster_CompareModule_imports\n\n\n\ncluster_CompareModule_exports\n\n\n\ncluster_ControlPaneModule\n\n\n\ncluster_ControlPaneModule_declarations\n\n\n\ncluster_ControlPaneModule_imports\n\n\n\ncluster_ControlPaneModule_exports\n\n\n\ncluster_ControlsModule\n\n\n\ncluster_ControlsModule_declarations\n\n\n\ncluster_ControlsModule_exports\n\n\n\ncluster_DebugLogsModule\n\n\n\ncluster_DebugLogsModule_declarations\n\n\n\ncluster_DebugLogsModule_exports\n\n\n\ncluster_DocsModule\n\n\n\ncluster_DocsModule_declarations\n\n\n\ncluster_DocsModule_imports\n\n\n\ncluster_DocsModule_exports\n\n\n\ncluster_DocsNavModule\n\n\n\ncluster_DocsNavModule_declarations\n\n\n\ncluster_DocsNavModule_exports\n\n\n\ncluster_DoiModule\n\n\n\ncluster_DoiModule_declarations\n\n\n\ncluster_DoiModule_exports\n\n\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_exports\n\n\n\ncluster_FileUploadModule\n\n\n\ncluster_FileUploadModule_declarations\n\n\n\ncluster_FileUploadModule_FileUploadComponent_providers\n\n\n\ncluster_FileUploadModule_exports\n\n\n\ncluster_FooterModule\n\n\n\ncluster_FooterModule_declarations\n\n\n\ncluster_FooterModule_exports\n\n\n\ncluster_FunctionsModule\n\n\n\ncluster_FunctionsModule_declarations\n\n\n\ncluster_FunctionsModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_exports\n\n\n\ncluster_IndentedListModule\n\n\n\ncluster_IndentedListModule_declarations\n\n\n\ncluster_IndentedListModule_exports\n\n\n\ncluster_InfoModule\n\n\n\ncluster_InfoModule_declarations\n\n\n\ncluster_InfoModule_exports\n\n\n\ncluster_LegendModule\n\n\n\ncluster_LegendModule_declarations\n\n\n\ncluster_LegendModule_imports\n\n\n\ncluster_LegendModule_exports\n\n\n\ncluster_LoadingModule\n\n\n\ncluster_LoadingModule_declarations\n\n\n\ncluster_LoadingModule_exports\n\n\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_declarations\n\n\n\ncluster_NavbarModule_imports\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_NavItemModule\n\n\n\ncluster_NavItemModule_declarations\n\n\n\ncluster_NavItemModule_exports\n\n\n\ncluster_OmapControlsModule\n\n\n\ncluster_OmapControlsModule_declarations\n\n\n\ncluster_OmapControlsModule_exports\n\n\n\ncluster_OrganTableSelectorModule\n\n\n\ncluster_OrganTableSelectorModule_declarations\n\n\n\ncluster_OrganTableSelectorModule_exports\n\n\n\ncluster_PlaygroundModule\n\n\n\ncluster_PlaygroundModule_declarations\n\n\n\ncluster_PlaygroundModule_imports\n\n\n\ncluster_PlaygroundModule_exports\n\n\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_declarations\n\n\n\ncluster_ReportModule_exports\n\n\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_exports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_declarations\n\n\n\ncluster_SearchModule_exports\n\n\n\ncluster_SidenavHeaderModule\n\n\n\ncluster_SidenavHeaderModule_declarations\n\n\n\ncluster_SidenavHeaderModule_exports\n\n\n\ncluster_SidenavModule\n\n\n\ncluster_SidenavModule_declarations\n\n\n\ncluster_SidenavModule_exports\n\n\n\ncluster_TableNestedMenuModule\n\n\n\ncluster_TableNestedMenuModule_declarations\n\n\n\ncluster_TableNestedMenuModule_exports\n\n\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\ncluster_TreeModule\n\n\n\ncluster_TreeModule_declarations\n\n\n\ncluster_TreeModule_exports\n\n\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_declarations\n\n\n\ncluster_UploadModule_exports\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnalyticsModule->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDocsModule\n\nDocsModule\n\nAppModule -->\n\nDocsModule->AppModule\n\n\n\n\n\nDocsComponent \n\nDocsComponent \n\nDocsComponent  -->\n\nDocsModule->DocsComponent \n\n\n\n\n\nFileUploadModule\n\nFileUploadModule\n\nAppModule -->\n\nFileUploadModule->AppModule\n\n\n\n\n\nCompareModule\n\nCompareModule\n\nCompareModule -->\n\nFileUploadModule->CompareModule\n\n\n\n\n\nFileUploadComponent \n\nFileUploadComponent \n\nFileUploadComponent  -->\n\nFileUploadModule->FileUploadComponent \n\n\n\n\n\nPlaygroundModule\n\nPlaygroundModule\n\nPlaygroundModule -->\n\nFileUploadModule->PlaygroundModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nUploadModule -->\n\nFileUploadModule->UploadModule\n\n\n\n\n\nFooterModule\n\nFooterModule\n\nAppModule -->\n\nFooterModule->AppModule\n\n\n\nDocsModule -->\n\nFooterModule->DocsModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nFooterModule->HomeModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nFooterModule->FooterComponent \n\n\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nHomeComponent \n\nHomeComponent \n\nHomeComponent  -->\n\nHomeModule->HomeComponent \n\n\n\n\n\nMousePositionTrackerModule\n\nMousePositionTrackerModule\n\nAppModule -->\n\nMousePositionTrackerModule->AppModule\n\n\n\n\n\nOrganTableSelectorModule\n\nOrganTableSelectorModule\n\nAppModule -->\n\nOrganTableSelectorModule->AppModule\n\n\n\n\n\nOrganTableSelectorComponent \n\nOrganTableSelectorComponent \n\nOrganTableSelectorComponent  -->\n\nOrganTableSelectorModule->OrganTableSelectorComponent \n\n\n\n\n\nRootModule\n\nRootModule\n\nAppModule -->\n\nRootModule->AppModule\n\n\n\n\n\nRootComponent \n\nRootComponent \n\nRootComponent  -->\n\nRootModule->RootComponent \n\n\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nAppModule -->\n\nTrackingPopupModule->AppModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\nConfigService\n\nConfigService\n\nAppModule -->\n\nConfigService->AppModule\n\n\n\n\n\nCompareComponent\n\nCompareComponent\n\nCompareModule -->\n\nCompareComponent->CompareModule\n\n\n\nRootModule -->\n\nCompareModule->RootModule\n\n\n\n\n\nCompareComponent \n\nCompareComponent \n\nCompareComponent  -->\n\nCompareModule->CompareComponent \n\n\n\n\n\nSidenavHeaderModule\n\nSidenavHeaderModule\n\nCompareModule -->\n\nSidenavHeaderModule->CompareModule\n\n\n\n\n\nDebugLogsModule\n\nDebugLogsModule\n\nDebugLogsModule -->\n\nSidenavHeaderModule->DebugLogsModule\n\n\n\n\n\nIndentedListModule\n\nIndentedListModule\n\nIndentedListModule -->\n\nSidenavHeaderModule->IndentedListModule\n\n\n\nUploadModule -->\n\nSidenavHeaderModule->UploadModule\n\n\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nSidenavHeaderModule->ReportModule\n\n\n\n\n\nSidenavHeaderComponent \n\nSidenavHeaderComponent \n\nSidenavHeaderComponent  -->\n\nSidenavHeaderModule->SidenavHeaderComponent \n\n\n\n\n\nSidenavModule\n\nSidenavModule\n\nCompareModule -->\n\nSidenavModule->CompareModule\n\n\n\n\n\nControlPaneModule\n\nControlPaneModule\n\nControlPaneModule -->\n\nSidenavModule->ControlPaneModule\n\n\n\nDebugLogsModule -->\n\nSidenavModule->DebugLogsModule\n\n\n\nIndentedListModule -->\n\nSidenavModule->IndentedListModule\n\n\n\nUploadModule -->\n\nSidenavModule->UploadModule\n\n\n\nReportModule -->\n\nSidenavModule->ReportModule\n\n\n\n\n\nSidenavComponent \n\nSidenavComponent \n\nSidenavComponent  -->\n\nSidenavModule->SidenavComponent \n\n\n\n\n\nControlPaneComponent\n\nControlPaneComponent\n\nControlPaneModule -->\n\nControlPaneComponent->ControlPaneModule\n\n\n\nRootModule -->\n\nControlPaneModule->RootModule\n\n\n\n\n\nControlPaneComponent \n\nControlPaneComponent \n\nControlPaneComponent  -->\n\nControlPaneModule->ControlPaneComponent \n\n\n\n\n\nControlsModule\n\nControlsModule\n\nControlPaneModule -->\n\nControlsModule->ControlPaneModule\n\n\n\n\n\nVisControlsComponent \n\nVisControlsComponent \n\nVisControlsComponent  -->\n\nControlsModule->VisControlsComponent \n\n\n\n\n\nFunctionsModule\n\nFunctionsModule\n\nControlPaneModule -->\n\nFunctionsModule->ControlPaneModule\n\n\n\n\n\nFunctionsComponent \n\nFunctionsComponent \n\nFunctionsComponent  -->\n\nFunctionsModule->FunctionsComponent \n\n\n\n\n\nLegendModule\n\nLegendModule\n\nRootModule -->\n\nLegendModule->RootModule\n\n\n\nControlPaneModule -->\n\nLegendModule->ControlPaneModule\n\n\n\n\n\nLegendComponent \n\nLegendComponent \n\nLegendComponent  -->\n\nLegendModule->LegendComponent \n\n\n\n\n\nOmapControlsModule\n\nOmapControlsModule\n\nControlPaneModule -->\n\nOmapControlsModule->ControlPaneModule\n\n\n\n\n\nOmapControlsComponent \n\nOmapControlsComponent \n\nOmapControlsComponent  -->\n\nOmapControlsModule->OmapControlsComponent \n\n\n\n\n\nVisControlsComponent\n\nVisControlsComponent\n\nControlsModule -->\n\nVisControlsComponent->ControlsModule\n\n\n\n\n\nDebugLogsComponent\n\nDebugLogsComponent\n\nDebugLogsModule -->\n\nDebugLogsComponent->DebugLogsModule\n\n\n\nRootModule -->\n\nDebugLogsModule->RootModule\n\n\n\n\n\nDebugLogsComponent \n\nDebugLogsComponent \n\nDebugLogsComponent  -->\n\nDebugLogsModule->DebugLogsComponent \n\n\n\n\n\nDocsComponent\n\nDocsComponent\n\nDocsModule -->\n\nDocsComponent->DocsModule\n\n\n\n\n\nDocsNavModule\n\nDocsNavModule\n\nDocsModule -->\n\nDocsNavModule->DocsModule\n\n\n\n\n\nDocsNavComponent \n\nDocsNavComponent \n\nDocsNavComponent  -->\n\nDocsNavModule->DocsNavComponent \n\n\n\n\n\nDocsNavComponent\n\nDocsNavComponent\n\nDocsNavModule -->\n\nDocsNavComponent->DocsNavModule\n\n\n\n\n\nDoiComponent\n\nDoiComponent\n\n\n\nDoiModule\n\nDoiModule\n\nDoiModule -->\n\nDoiComponent->DoiModule\n\n\n\nRootModule -->\n\nDoiModule->RootModule\n\n\n\n\n\nDoiComponent \n\nDoiComponent \n\nDoiComponent  -->\n\nDoiModule->DoiComponent \n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nErrorComponent->ErrorModule\n\n\n\nRootModule -->\n\nErrorModule->RootModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nErrorModule->ErrorComponent \n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nFileUploadModule -->\n\nFileUploadComponent->FileUploadModule\n\n\n\n\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}\n\nFileUploadComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: FileUploadComponent,\n}->FileUploadComponent\n\n\n\n\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}\n\nFileUploadComponent -->\n\n{\n    provide: NG_VALIDATORS, multi: true, useExisting: FileUploadComponent,\n}->FileUploadComponent\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nFooterModule -->\n\nFooterComponent->FooterModule\n\n\n\n\n\nFunctionsComponent\n\nFunctionsComponent\n\nFunctionsModule -->\n\nFunctionsComponent->FunctionsModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nTableNestedMenuModule\n\nTableNestedMenuModule\n\nHomeModule -->\n\nTableNestedMenuModule->HomeModule\n\n\n\nRootModule -->\n\nTableNestedMenuModule->RootModule\n\n\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nTableNestedMenuModule->NavbarModule\n\n\n\n\n\nTableNestedMenuComponent \n\nTableNestedMenuComponent \n\nTableNestedMenuComponent  -->\n\nTableNestedMenuModule->TableNestedMenuComponent \n\n\n\n\n\nIndentedListComponent\n\nIndentedListComponent\n\nIndentedListModule -->\n\nIndentedListComponent->IndentedListModule\n\n\n\nRootModule -->\n\nIndentedListModule->RootModule\n\n\n\n\n\nIndentedListComponent \n\nIndentedListComponent \n\nIndentedListComponent  -->\n\nIndentedListModule->IndentedListComponent \n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\n\n\nInfoModule\n\nInfoModule\n\nInfoModule -->\n\nInfoComponent->InfoModule\n\n\n\nRootModule -->\n\nInfoModule->RootModule\n\n\n\n\n\nInfoComponent \n\nInfoComponent \n\nInfoComponent  -->\n\nInfoModule->InfoComponent \n\n\n\n\n\nLegendComponent\n\nLegendComponent\n\nLegendModule -->\n\nLegendComponent->LegendModule\n\n\n\n\n\nOrderByPipe\n\nOrderByPipe\n\nLegendModule -->\n\nOrderByPipe->LegendModule\n\n\n\nReportModule -->\n\nOrderByPipe->ReportModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\n\n\nLoadingModule\n\nLoadingModule\n\nLoadingModule -->\n\nLoadingComponent->LoadingModule\n\n\n\n\n\nLoadingComponent \n\nLoadingComponent \n\nLoadingComponent  -->\n\nLoadingModule->LoadingComponent \n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\nRootModule -->\n\nNavbarModule->RootModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\n\n\nNavItemModule\n\nNavItemModule\n\nNavbarModule -->\n\nNavItemModule->NavbarModule\n\n\n\n\n\nNavItemComponent \n\nNavItemComponent \n\nNavItemComponent  -->\n\nNavItemModule->NavItemComponent \n\n\n\n\n\nSearchModule\n\nSearchModule\n\nNavbarModule -->\n\nSearchModule->NavbarModule\n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSearchModule->SearchComponent \n\n\n\n\n\nNavItemComponent\n\nNavItemComponent\n\nNavItemModule -->\n\nNavItemComponent->NavItemModule\n\n\n\n\n\nOmapControlsComponent\n\nOmapControlsComponent\n\nOmapControlsModule -->\n\nOmapControlsComponent->OmapControlsModule\n\n\n\n\n\nOrganTableSelectorComponent\n\nOrganTableSelectorComponent\n\nOrganTableSelectorModule -->\n\nOrganTableSelectorComponent->OrganTableSelectorModule\n\n\n\n\n\nPlaygroundComponent\n\nPlaygroundComponent\n\nPlaygroundModule -->\n\nPlaygroundComponent->PlaygroundModule\n\n\n\nRootModule -->\n\nPlaygroundModule->RootModule\n\n\n\n\n\nPlaygroundComponent \n\nPlaygroundComponent \n\nPlaygroundComponent  -->\n\nPlaygroundModule->PlaygroundComponent \n\n\n\n\n\nTreeModule\n\nTreeModule\n\nRootModule -->\n\nTreeModule->RootModule\n\n\n\nPlaygroundModule -->\n\nTreeModule->PlaygroundModule\n\n\n\n\n\nTreeComponent \n\nTreeComponent \n\nTreeComponent  -->\n\nTreeModule->TreeComponent \n\n\n\nPlaygroundModule -->\n\nUploadModule->PlaygroundModule\n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nUploadModule->UploadComponent \n\n\n\n\n\nReportComponent\n\nReportComponent\n\nReportModule -->\n\nReportComponent->ReportModule\n\n\n\nRootModule -->\n\nReportModule->RootModule\n\n\n\n\n\nReportComponent \n\nReportComponent \n\nReportComponent  -->\n\nReportModule->ReportComponent \n\n\n\n\n\nRootComponent\n\nRootComponent\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nSearchModule -->\n\nSearchComponent->SearchModule\n\n\n\n\n\nSidenavHeaderComponent\n\nSidenavHeaderComponent\n\nSidenavHeaderModule -->\n\nSidenavHeaderComponent->SidenavHeaderModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nSidenavModule -->\n\nSidenavComponent->SidenavModule\n\n\n\n\n\nTableNestedMenuComponent\n\nTableNestedMenuComponent\n\nTableNestedMenuModule -->\n\nTableNestedMenuComponent->TableNestedMenuModule\n\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nTreeModule -->\n\nTreeComponent->TreeModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nUploadModule -->\n\nUploadComponent->UploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        34 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    70 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    71 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompareModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ControlPaneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ControlsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DebugLogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocsNavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileUploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FooterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FunctionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IndentedListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LegendModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoadingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MousePositionTrackerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OmapControlsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganTableSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavHeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidenavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableNestedMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingPopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consent   (src/.../consent.service.ts)\n                        \n                        \n                            TypeStructure   (src/.../tree.functions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/consent.service.ts\n    \n    \n        \n            \n                \n                    \n                    Consent\n                \n            \n            \n                \n                        \"not-set\" | \"given\" | \"rescinded\"\n\n                \n            \n        \n    \n    src/app/modules/tree/tree.functions.ts\n    \n    \n        \n            \n                \n                    \n                    TypeStructure\n                \n            \n            \n                \n                        AS | CT | B\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AS_RED   (src/.../tree.model.ts)\n                        \n                        \n                            B_GREEN   (src/.../tree.model.ts)\n                        \n                        \n                            bimodalBSizeOptions   (src/.../bimodal.model.ts)\n                        \n                        \n                            bimodalBTypeOptions   (src/.../bimodal.model.ts)\n                        \n                        \n                            bimodalCTSizeOptions   (src/.../bimodal.model.ts)\n                        \n                        \n                            bimodalSortOptions   (src/.../bimodal.model.ts)\n                        \n                        \n                            CONTIRBUTORS   (src/.../home.ts)\n                        \n                        \n                            CT_BLUE   (src/.../tree.model.ts)\n                        \n                        \n                            EAGERLY_LOADED_SERVICES   (src/.../analytics.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.stage.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            FETCHING_TEXT   (src/.../sheet.state.ts)\n                        \n                        \n                            groupNameMapper   (src/.../bimodal.model.ts)\n                        \n                        \n                            gtag   (src/.../app.component.ts)\n                        \n                        \n                            IMAGES   (src/.../home.ts)\n                        \n                        \n                            LOCAL_STORAGE_CONSENT_KEY   (src/.../local-storage-sync.service.ts)\n                        \n                        \n                            PLAYGROUND   (src/.../url.ts)\n                        \n                        \n                            REGISTRY   (src/.../docs.ts)\n                        \n                        \n                            ST_ID   (src/.../tree.model.ts)\n                        \n                        \n                            URL   (src/.../url.ts)\n                        \n                        \n                            VIDEO_ACTIONS   (src/.../home.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/tree.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AS_RED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#E41A1C'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        B_GREEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#4DAF4A'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CT_BLUE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#377EB8'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ST_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n\n\n        \n    \n\n    src/app/models/bimodal.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bimodalBSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['None', 'Degree']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bimodalBTypeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['All', 'Gene', 'Protein', 'Lipids', 'Metabolites', 'Proteoforms']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bimodalCTSizeOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['None', 'Degree', 'Indegree', 'Outdegree']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bimodalSortOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Alphabetically', 'Degree']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupNameMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  1: 'Anatomical Structures',\n  2: 'Cell Types',\n  3: 'Biomarkers',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/static/home.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONTIRBUTORS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    img: 'assets/contributors/paul.jpg',\n    name: 'Hrishikesh Paul',\n    desc: 'Software Engineer Team Lead',\n    mail: 'hrpaul@iu.edu',\n    link: 'https://hrishikeshpaul.github.io',\n    linkedin: 'https://www.linkedin.com/in/hrishikeshpaul/',\n    github: 'https://github.com/hrishikeshpaul',\n  },\n  {\n    img: 'assets/contributors/katy.png',\n    name: 'Katy Börner',\n    desc: 'Director & Researcher',\n    mail: 'katy@indiana.edu',\n    link: 'https://info.sice.indiana.edu/~katy/',\n    linkedin: 'https://www.linkedin.com/in/katy-borner-a03837/',\n    github: '',\n  },\n  {\n    img: 'assets/contributors/bruce.jpg',\n    name: 'Bruce W Herr II',\n    desc: 'Senior System Architect',\n    mail: 'bherr@indiana.edu',\n    link: 'https://cns.iu.edu/current_team/bio/bruce-herr.html',\n    linkedin: 'https://www.linkedin.com/in/bruceherr/',\n    github: 'https://github.com/bherr2',\n  },\n  {\n    img: 'assets/contributors/ellen.jpeg',\n    name: 'Ellen M Quardokus',\n    desc: 'Senior Research Analyst',\n    mail: 'ellenmq@indiana.edu',\n    link: 'https://cns.iu.edu/current_team/bio/ellen-quardokus.html',\n    linkedin: '',\n    github: '',\n  },\n  {\n    img: 'assets/contributors/ajay.jpeg',\n    name: 'Sai Ajay Vutukuri',\n    desc: 'Software Developer',\n    mail: 'svutuku@iu.edu',\n    link: 'https://github.com/vutukuriajay2241',\n    linkedin: 'https://in.linkedin.com/in/ajay-vutukuri-38824ba8',\n    github: '',\n  },\n  {\n    img: 'assets/contributors/mac.jpeg',\n    name: 'Mac Vogelsang',\n    desc: 'Software Developer',\n    mail: 'madvogel@iu.edu',\n    link: 'https://github.com/macvogelsang',\n    linkedin: 'https://www.linkedin.com/in/mac-vogelsang',\n    github: '',\n  },\n  {\n    img: 'assets/contributors/nikhil.jpeg',\n    name: 'Nikhil Mahadevaswamy',\n    desc: 'Angular Developer',\n    mail: 'nmahade@iu.edu',\n    link: 'https://github.com/Nikhil-lab',\n    linkedin: 'https://www.linkedin.com/in/nikhilm2395',\n    github: '',\n  },\n  {\n    img: 'assets/contributors/pramod.png',\n    name: 'Pramod Bhakta',\n    desc: 'Angular Developer',\n    mail: 'pnbhakta@iu.edu',\n    link: 'https://github.com/pbrm4',\n    github: '',\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IMAGES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: 'assets/homepage/laptop-images/vis.svg',\n    alt: 'Visualization',\n  },\n  {\n    path: 'assets/homepage/laptop-images/report.svg',\n    alt: 'Report Generator',\n  },\n  {\n    path: 'assets/homepage/laptop-images/compare.svg',\n    alt: 'Compare Results',\n  },\n  {\n    path: 'assets/homepage/laptop-images/il.svg',\n    alt: 'Indented List',\n  },\n  {\n    path: 'assets/homepage/laptop-images/link.svg',\n    alt: 'Playground Link',\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VIDEO_ACTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    header: 'Introduction',\n    desc: 'Know about the Reporter, what it is, why was it built and by who.',\n    sec: 3,\n  },\n  {\n    header: 'Getting Started',\n    desc: 'Know more about what how to use the buttons on the toolbar.',\n    sec: 33,\n  },\n  {\n    header: 'Search',\n    desc: 'Search entities by typing their names.',\n    sec: 117,\n  },\n  {\n    header: 'Indented List',\n    desc: 'View the data in a hierarchical format.',\n    sec: 207,\n  },\n  {\n    header: 'Report Generator',\n    desc: 'The Reporter computes various statistics from the data - which is downloadable.',\n    sec: 232,\n  },\n  {\n    header: 'Debug Log',\n    desc: 'The Log lists warnings and errors that occurred during data parsing and visualization creation',\n    sec: 247,\n  },\n  {\n    header: 'Export',\n    desc: 'The menu lists the formats that can be exported through the reporter.',\n    sec: 270,\n  },\n  {\n    header: 'Tree Visualization',\n    desc: 'See how to explore the tree visualization.',\n    sec: 304,\n  },\n  {\n    header: 'Graph Functions',\n    desc: 'See how you can sort, size and filter different nodes.',\n    sec: 400,\n  },\n  {\n    header: 'Graph Controls',\n    desc: 'Constomize the visualization on the fly.',\n    sec: 480,\n  },\n  {\n    header: 'Compare',\n    desc: 'Compare your data to that of the master tables.',\n    sec: 540,\n  },\n  {\n    header: 'Playground',\n    desc: 'Play with the visualization and upload your own data.',\n    sec: 669,\n  },\n  {\n    header: 'Docs',\n    desc: 'Take a look at the Reporter Documentation.',\n    sec: 796,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/services/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EAGERLY_LOADED_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [ConsentService, GoogleAnalyticsSyncService, LocalStorageSyncService]\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  tag: '',\n  googleAnalyticsId: 'G-WYFW84S56B',\n  asctbApiUrl: 'https://apps.humanatlas.io/asctb-api',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.stage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  tag: 'Staging',\n  googleAnalyticsId: 'G-58FWLW86SD',\n  asctbApiUrl: 'https://apps.humanatlas.io/asctb-api--staging',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  tag: 'Development',\n  googleAnalyticsId: 'G-77K2VNZRJ2',\n  asctbApiUrl: 'https://apps.humanatlas.io/asctb-api',\n  // use the following url when developing against in-staging-only features\n  // asctbApiUrl: 'https://apps.humanatlas.io/asctb-api--staging'\n  // use the following url for localhost API development\n  // asctbApiUrl: 'http://localhost:5000'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/store/sheet.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FETCHING_TEXT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Fetching data...'\n                    \n                \n\n\n        \n    \n\n    src/app/app.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        gtag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         void\n\n                    \n                \n\n\n        \n    \n\n    src/app/services/local-storage-sync.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_CONSENT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY',\n})\n                    \n                \n\n\n        \n    \n\n    src/app/static/url.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PLAYGROUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/playground/sheet.csv'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.asctbApiUrl\n                    \n                \n\n\n        \n    \n\n    src/app/static/docs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REGISTRY\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: 1,\n    title: 'Introduction',\n    urlTitle: 'introduction',\n    path: 'assets/docs/intro/README.md',\n  },\n  {\n    id: 2,\n    title: 'About',\n    urlTitle: 'about',\n    path: 'assets/docs/about/README.md',\n  },\n  {\n    id: 3,\n    title: 'FAQ',\n    urlTitle: 'faq',\n    path: 'assets/docs/faq/README.md',\n  },\n  {\n    id: 4,\n    title: 'Data Format',\n    urlTitle: 'data-format',\n    path: 'assets/docs/data-format/README.md',\n  },\n  {\n    id: 5,\n    title: 'Visualization',\n    urlTitle: 'visualization',\n    path: 'assets/docs/visualization/README.md',\n  },\n  {\n    id: 6,\n    title: 'Visualization Functions',\n    urlTitle: 'visualization-functions',\n    path: 'assets/docs/vis-functions/README.md',\n  },\n  {\n    id: 7,\n    title: 'Visualization Controls',\n    urlTitle: 'visualization-controls',\n    path: 'assets/docs/vis-controls/README.md',\n  },\n  {\n    id: 8,\n    title: 'Compare',\n    urlTitle: 'compare',\n    path: 'assets/docs/compare/README.md',\n  },\n  {\n    id: 9,\n    title: 'Playground',\n    urlTitle: 'playground',\n    path: 'assets/docs/playground/README.md',\n  },\n  {\n    id: 10,\n    title: 'Report',\n    urlTitle: 'report',\n    path: 'assets/docs/report/README.md',\n  },\n  {\n    id: 11,\n    title: 'Indented List',\n    urlTitle: 'indented-list',\n    path: 'assets/docs/indented-list/README.md',\n  },\n  {\n    id: 12,\n    title: 'Search',\n    urlTitle: 'search',\n    path: 'assets/docs/search/README.md',\n  },\n  {\n    id: 13,\n    title: 'Debug Log',\n    urlTitle: 'debug-log',\n    path: 'assets/docs/log/README.md',\n  },\n  {\n    id: 14,\n    title: 'Export',\n    urlTitle: 'export',\n    path: 'assets/docs/export/README.md',\n  },\n  {\n    id: 14,\n    title: 'ASCT+B API',\n    urlTitle: 'api',\n    path: 'assets/docs/asct+b-api/README.md',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
