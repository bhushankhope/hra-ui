{"version":3,"file":"main.js","mappings":"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","sources":["./apps/ccf-rui/src/app/app-web-component.component.ts","./apps/ccf-rui/src/app/app.component.ts","./apps/ccf-rui/src/app/app.component.html","./apps/ccf-rui/src/app/app.module.ts","./apps/ccf-rui/src/app/core/core.module.ts","./apps/ccf-rui/src/app/core/services/config/config.module.ts","./apps/ccf-rui/src/app/core/services/config/config.ts","./apps/ccf-rui/src/app/core/services/theming/theming.module.ts","./apps/ccf-rui/src/app/core/services/theming/theming.service.ts","./apps/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts","./apps/ccf-rui/src/app/core/store/icon-registry/default-icons.ts","./apps/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts","./apps/ccf-rui/src/app/core/store/model/model.state.ts","./apps/ccf-rui/src/app/core/store/page/page.state.ts","./apps/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts","./apps/ccf-rui/src/app/core/store/registration/registration.state.ts","./apps/ccf-rui/src/app/core/store/scene/scene.state.ts","./apps/ccf-rui/src/app/core/store/store.module.ts","./apps/ccf-rui/src/app/modules/content/content.component.ts","./apps/ccf-rui/src/app/modules/content/content.component.html","./apps/ccf-rui/src/app/modules/content/content.module.ts","./apps/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts","./apps/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.html","./apps/ccf-rui/src/app/modules/content/stage-nav/stage-nav.module.ts","./apps/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts","./apps/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.html","./apps/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.module.ts","./apps/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts","./apps/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.html","./apps/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.module.ts","./apps/ccf-rui/src/app/modules/header/header.component.ts","./apps/ccf-rui/src/app/modules/header/header.component.html","./apps/ccf-rui/src/app/modules/header/header.module.ts","./apps/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts","./apps/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.html","./apps/ccf-rui/src/app/modules/left-sidebar/left-sidebar.module.ts","./apps/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts","./apps/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.html","./apps/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.module.ts","./apps/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts","./apps/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.module.ts","./apps/ccf-rui/src/app/modules/review/review-button/review-button.component.ts","./apps/ccf-rui/src/app/modules/review/review-button/review-button.component.html","./apps/ccf-rui/src/app/modules/review/review-button/review-button.module.ts","./apps/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts","./apps/ccf-rui/src/app/modules/review/review-modal/review-modal.component.html","./apps/ccf-rui/src/app/modules/review/review-modal/review-modal.module.ts","./apps/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts","./apps/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.html","./apps/ccf-rui/src/app/modules/right-sidebar/right-sidebar.module.ts","./apps/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts","./apps/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.html","./apps/ccf-rui/src/app/shared/components/block-size-input/block-size-input.module.ts","./apps/ccf-rui/src/app/shared/components/drawer/container/container.component.ts","./apps/ccf-rui/src/app/shared/components/drawer/container/container.component.html","./apps/ccf-rui/src/app/shared/components/drawer/content/content.component.ts","./apps/ccf-rui/src/app/shared/components/drawer/drawer.module.ts","./apps/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts","./apps/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.html","./apps/ccf-rui/src/app/shared/components/drawer/messages.ts","./apps/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts","./apps/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.html","./apps/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts","./apps/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.html","./apps/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.module.ts","./apps/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts","./apps/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.html","./apps/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.module.ts","./apps/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts","./apps/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.html","./apps/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.module.ts","./apps/ccf-rui/src/app/shared/components/name-input/name-input.component.ts","./apps/ccf-rui/src/app/shared/components/name-input/name-input.component.html","./apps/ccf-rui/src/app/shared/components/name-input/name-input.module.ts","./apps/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts","./apps/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.html","./apps/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.module.ts","./apps/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts","./apps/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.html","./apps/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.module.ts","./apps/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts","./apps/ccf-rui/src/app/shared/components/slices-input/slices-input.component.html","./apps/ccf-rui/src/app/shared/components/slices-input/slices-input.module.ts","./apps/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts","./apps/ccf-rui/src/app/shared/components/tag-list/tag-list.component.html","./apps/ccf-rui/src/app/shared/components/tag-list/tag-list.module.ts","./apps/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts","./apps/ccf-rui/src/app/shared/components/tag-search/tag-search.component.html","./apps/ccf-rui/src/app/shared/components/tag-search/tag-search.module.ts","./apps/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts","./apps/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.html","./apps/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.module.ts","./apps/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts","./apps/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.html","./apps/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.module.ts","./apps/ccf-rui/src/app/shared/services/message/message.service.ts","./apps/ccf-rui/src/environments/environment.ts","./apps/ccf-rui/src/main.ts","./libs/ccf-body-ui/src/lib/body-ui-layer.ts","./libs/ccf-body-ui/src/lib/body-ui.ts","./libs/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts","./libs/ccf-body-ui/src/lib/shared/spatial-scene-node.ts","./libs/ccf-body-ui/src/lib/util/load-gltf.ts","./libs/ccf-body-ui/src/lib/util/process-scene-nodes.ts","./libs/ccf-body-ui/src/lib/util/scene-traversal.ts","./libs/ccf-body-ui/src/lib/util/simplify-scene.ts","./libs/ccf-body-ui/src/lib/util/spatial-scene-collider.ts","./libs/ccf-body-ui/src/public-api.ts","./libs/ccf-database/src/lib/ccf-database.ts","./libs/ccf-database/src/lib/ccf-spatial-graph.ts","./libs/ccf-database/src/lib/ccf-spatial-scene.ts","./libs/ccf-database/src/lib/interfaces.ts","./libs/ccf-database/src/lib/queries/aggregate-results-n3.ts","./libs/ccf-database/src/lib/queries/find-ids-n3.ts","./libs/ccf-database/src/lib/queries/ontology-term-occurences-n3.ts","./libs/ccf-database/src/lib/queries/ontology-tree-n3.ts","./libs/ccf-database/src/lib/queries/spatial-result-n3.ts","./libs/ccf-database/src/lib/queries/spatial-search-n3.ts","./libs/ccf-database/src/lib/queries/tissue-block-result-n3.ts","./libs/ccf-database/src/lib/spatial-types.ts","./libs/ccf-database/src/lib/util/ccf-database-status-tracker.ts","./libs/ccf-database/src/lib/util/enrich-bm-located-in-as.ts","./libs/ccf-database/src/lib/util/enrich-rui-locations.ts","./libs/ccf-database/src/lib/util/n3-functions.ts","./libs/ccf-database/src/lib/util/origin-scene.ts","./libs/ccf-database/src/lib/util/patch-jsonld.ts","./libs/ccf-database/src/lib/util/prefixes.ts","./libs/ccf-database/src/lib/util/probing-sphere-scene.ts","./libs/ccf-database/src/lib/util/tissue-block-scene.ts","./libs/ccf-database/src/lib/xconsortia/xconsortia-data-import.ts","./libs/ccf-database/src/lib/xconsortia/xconsortia-data.ts","./libs/ccf-database/src/public-api.ts","./libs/ccf-shared/analytics/src/lib/analytics.module.ts","./libs/ccf-shared/analytics/src/lib/consent.service.ts","./libs/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts","./libs/ccf-shared/analytics/src/lib/local-storage-sync.service.ts","./libs/ccf-shared/analytics/src/public-api.ts","./libs/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts","./libs/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts","./libs/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts","./libs/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts","./libs/ccf-shared/rxjs-ext/operators/src/public-api.ts","./libs/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts","./libs/ccf-shared/src/lib/analytics/tracking.state.ts","./libs/ccf-shared/src/lib/components/body-ui/body-ui.component.ts","./libs/ccf-shared/src/lib/components/body-ui/body-ui.component.html","./libs/ccf-shared/src/lib/components/body-ui/body-ui.module.ts","./libs/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts","./libs/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.html","./libs/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.module.ts","./libs/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts","./libs/ccf-shared/src/lib/components/call-to-action/call-to-action.component.html","./libs/ccf-shared/src/lib/components/call-to-action/call-to-action.module.ts","./libs/ccf-shared/src/lib/components/decorated-text/decorated-range.ts","./libs/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts","./libs/ccf-shared/src/lib/components/decorated-text/decorated-text.component.html","./libs/ccf-shared/src/lib/components/decorated-text/decorated-text.module.ts","./libs/ccf-shared/src/lib/components/info/info-button/info-button.component.ts","./libs/ccf-shared/src/lib/components/info/info-button/info-button.component.html","./libs/ccf-shared/src/lib/components/info/info-button/info-button.module.ts","./libs/ccf-shared/src/lib/components/info/info-button/info-button.service.ts","./libs/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts","./libs/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.html","./libs/ccf-shared/src/lib/components/info/info-dialog/info-dialog.module.ts","./libs/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts","./libs/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.html","./libs/ccf-shared/src/lib/components/opacity-slider/opacity-slider.module.ts","./libs/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts","./libs/ccf-shared/src/lib/components/organ-selector/organ-selector.component.html","./libs/ccf-shared/src/lib/components/organ-selector/organ-selector.module.ts","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui-behavior/spatial-search-keyboard-ui-behavior.component.ts","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui-behavior/spatial-search-keyboard-ui-behavior.component.html","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui-behavior/spatial-search-keyboard-ui-behavior.module.ts","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui/spatial-search-keyboard-ui.component.ts","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui/spatial-search-keyboard-ui.component.html","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui/spatial-search-keyboard-ui.module.ts","./libs/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts","./libs/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.html","./libs/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.module.ts","./libs/ccf-shared/src/lib/components/store-debug/store-debug.component.ts","./libs/ccf-shared/src/lib/components/store-debug/store-debug.component.html","./libs/ccf-shared/src/lib/components/store-debug/store-debug.module.ts","./libs/ccf-shared/src/lib/components/text-search/text-search.component.ts","./libs/ccf-shared/src/lib/components/text-search/text-search.component.html","./libs/ccf-shared/src/lib/components/text-search/text-search.module.ts","./libs/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts","./libs/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.html","./libs/ccf-shared/src/lib/components/tracking-popup/tracking-popup.module.ts","./libs/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts","./libs/ccf-shared/src/lib/components/xyz-position/xyz-position.component.html","./libs/ccf-shared/src/lib/components/xyz-position/xyz-position.module.ts","./libs/ccf-shared/src/lib/config/global-config.state.ts","./libs/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts","./libs/ccf-shared/src/lib/directives/numbers-only/numbers-only.module.ts","./libs/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts","./libs/ccf-shared/src/lib/services/data-source/ccf-database.service.ts","./libs/ccf-shared/src/lib/services/data-source/data-source.service.ts","./libs/ccf-shared/src/lib/services/data-source/data-source.ts","./libs/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts","./libs/ccf-shared/src/lib/services/globals/globals.service.ts","./libs/ccf-shared/src/lib/services/local-storage/local-storage.service.ts","./libs/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts","./libs/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts","./libs/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts","./libs/ccf-shared/src/public-api.ts","./libs/ccf-shared/web-components/src/lib/config-manager.ts","./libs/ccf-shared/web-components/src/lib/parsers.ts","./libs/ccf-shared/web-components/src/lib/web-component.ts","./libs/ccf-shared/web-components/src/public-api.ts","./libs/triple-store-utils/src/lib/triple-store-utils.ts","./libs/triple-store-utils/src/public-api.ts","ignored|/home/runner/work/hra-ui/hra-ui/node_modules/@loaders.gl/core/node_modules/@loaders.gl/loader-utils/dist/esm/lib/binary-utils|../node/buffer","ignored|/home/runner/work/hra-ui/hra-ui/node_modules/@loaders.gl/gltf/node_modules/@loaders.gl/loader-utils/dist/esm/lib/binary-utils|../node/buffer","ignored|/home/runner/work/hra-ui/hra-ui/node_modules/@loaders.gl/worker-utils/dist/esm/lib/library-utils|../node/require-utils.node","ignored|/home/runner/work/hra-ui/hra-ui/node_modules/rdf-canonize/lib|rdf-canonize-native"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, BUILTIN_PARSERS } from 'ccf-shared/web-components';\nimport { ObservableInput } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\n\nimport { environment } from '../environments/environment';\n\nexport type User = NonNullable<GlobalConfig['user']>;\nexport type Organ = NonNullable<GlobalConfig['organ']>;\nexport type RegistrationCallback = (data: unknown) => void;\nexport type CancelRegistrationCallback = () => void;\nexport type FetchPreviousRegistrationsCallback = () => ObservableInput<Record<string, unknown>[]>;\n\nfunction parseOrgan(value: unknown): string | Organ {\n  try {\n    return BUILTIN_PARSERS.json(value) as Organ;\n  } catch {\n    return '' + value;\n  }\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '<ccf-root *ngIf=\"initialized\"></ccf-root>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() baseHref!: string;\n  @Input() useDownload!: string | boolean;\n  @Input() referenceData!: string;\n  @Input() user!: string | User;\n  @Input() organ!: string | Organ;\n  @Input() editRegistration!: string | SpatialEntityJsonLd;\n  @Input() register!: string | RegistrationCallback;\n  @Input() cancelRegistration!: string | CancelRegistrationCallback;\n  @Input() fetchPreviousRegistrations!: string | FetchPreviousRegistrationsCallback;\n  @Input() skipUnsavedChangesConfirmation!: string | boolean;\n  @Input() theme!: string;\n  @Input() header!: string | boolean;\n  @Input() homeUrl!: string;\n  @Input() logoTooltip!: string;\n  @Input() organOptions!: string | string[];\n  @Input() collisionsEndpoint!: string;\n\n  constructor(configStore: GlobalConfigState<GlobalConfig>, cdr: ChangeDetectorRef) {\n    const BP = BUILTIN_PARSERS;\n\n    super(configStore, cdr, {\n      initialConfig: {\n        ...environment.dbOptions,\n        ...(globalThis['ruiConfig' as never] as object),\n        ...environment.customization,\n      },\n      parse: {\n        useDownload: BP.boolean,\n        user: BP.json,\n        organ: parseOrgan,\n        editRegistration: BP.json,\n        register: BP.function,\n        cancelRegistration: BP.function,\n        fetchPreviousRegistrations: BP.function,\n        skipUnsavedChangesConfirmation: BP.boolean,\n        header: BP.boolean,\n        organOptions: BP.stringArray,\n      },\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { ReplaySubject, Subscription, combineLatest } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  registrationExpanded = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject<'light' | 'dark'>(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme!: string;\n\n  homeUrl!: string;\n\n  logoTooltip!: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState,\n    readonly page: PageState,\n    readonly consentService: ConsentService,\n    readonly snackbar: MatSnackBar,\n    readonly theming: ThemingService,\n    el: ElementRef<unknown>,\n    injector: Injector,\n    private readonly globalConfig: GlobalConfigState<AppOptions>,\n    cdr: ChangeDetectorRef,\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      }),\n    );\n    this.theme$.subscribe((theme) => {\n      this.theme = theme ?? 'light';\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url) => {\n      this.homeUrl = url ?? '';\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip) => {\n      this.logoTooltip = tooltip ?? '';\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(([theme, mode]) => {\n      this.theming.setTheme(`${theme}-theme-${mode}`);\n      cdr.markForCheck();\n    });\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        },\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000,\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  registrationToggle(event: boolean): void {\n    this.registrationExpanded = event;\n    if (!this.registrationExpanded) {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:mousedown', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const disableWhenClicked = ['mat-mdc-input-element', 'form-input-label'];\n    for (const className of disableWhenClicked) {\n      if (typeof target.className === 'string' && target.className.includes(className)) {\n        this.disablePositionChange = true;\n        return;\n      }\n    }\n    this.disablePositionChange = false;\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ccf-registration-modal></ccf-registration-modal>\n<ccf-header\n  [class.header-hidden]=\"(header$ | async) === false\"\n  [logoTooltip]=\"(logoTooltip$ | async) ?? ''\"\n  [homeUrl]=\"(homeUrl$ | async) ?? ''\"\n></ccf-header>\n\n<ccf-drawer-container>\n  <ccf-drawer opened>\n    <ccf-left-sidebar [modalClosed]=\"registrationStarted\"> </ccf-left-sidebar>\n    <ccf-drawer-toggle-button></ccf-drawer-toggle-button>\n  </ccf-drawer>\n  <ccf-drawer position=\"end\" opened>\n    <ccf-right-sidebar\n      [modalClosed]=\"registrationStarted\"\n      (registrationExpanded)=\"registrationToggle($event)\"\n    ></ccf-right-sidebar>\n    <ccf-drawer-toggle-button></ccf-drawer-toggle-button>\n  </ccf-drawer>\n\n  <ccf-drawer-content>\n    <ccf-content class=\"stage-content\" [disablePositionChange]=\"disablePositionChange\"></ccf-content>\n  </ccf-drawer-content>\n</ccf-drawer-container>\n","import { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TrackingPopupModule } from 'ccf-shared';\n\nimport { AppWebComponent } from './app-web-component.component';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { DEFAULT_THEME } from './core/services/theming/theming.service';\nimport { ContentModule } from './modules/content/content.module';\nimport { HeaderModule } from './modules/header/header.module';\nimport { LeftSidebarModule } from './modules/left-sidebar/left-sidebar.module';\nimport { RegistrationModalModule } from './modules/registration-modal/registration-modal/registration-modal.module';\nimport { RightSidebarModule } from './modules/right-sidebar/right-sidebar.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    MatIconModule,\n    DrawerModule,\n    HeaderModule,\n    ContentModule,\n    LeftSidebarModule,\n    RightSidebarModule,\n    RegistrationModalModule,\n    TrackingPopupModule,\n    MatSnackBarModule,\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    {\n      provide: DEFAULT_THEME,\n      useValue: 'hubmap-theme-light',\n    },\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        floatLabel: true,\n      },\n    },\n  ],\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) {}\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector,\n    });\n\n    customElements.define('ccf-rui', appElement);\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigModule } from './services/config/config.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'rui',\n    }),\n    MousePositionTrackerModule,\n\n    ConfigModule,\n    StoreModule,\n    ThemingModule,\n  ],\n  exports: [],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\n\nimport { GLOBAL_CONFIG, globalConfigFactory } from './config';\n\n@NgModule({\n  providers: [\n    {\n      provide: GLOBAL_CONFIG,\n      useFactory: globalConfigFactory,\n      deps: [GlobalsService],\n    },\n  ],\n})\nexport class ConfigModule {}\n","import { InjectionToken } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\nimport { ObservableInput } from 'rxjs';\n\nexport interface GlobalConfig {\n  baseHref?: string;\n  editRegistration?: Record<string, unknown>;\n  organ?: OrganConfig | string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n\n  register?: (data: string) => void;\n  useDownload?: boolean;\n\n  fetchPreviousRegistrations?: () => ObservableInput<Record<string, unknown>[]>;\n  registrationStarted?: boolean;\n\n  cancelRegistration?: () => void;\n\n  skipUnsavedChangesConfirmation?: boolean;\n\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  organOptions?: string[];\n\n  collisionsEndpoint?: string;\n}\n\nexport type OrganName = 'large intestine' | 'heart' | 'kidney' | 'spleen';\n\nexport interface OrganConfig {\n  name: OrganName;\n  ontologyId?: string;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\ndeclare global {\n  let ruiConfig: GlobalConfig;\n}\n\nexport const GLOBAL_CONFIG = new InjectionToken<GlobalConfig>('Global configuration object');\n\nexport function globalConfigFactory(globals: GlobalsService): GlobalConfig {\n  return globals.get('ruiConfig', { user: { firstName: '', lastName: '' } });\n}\n","import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n@NgModule({\n  providers: [{ provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true }, ThemingService],\n})\nexport class ThemingModule {}\n","import { OverlayContainer } from '@angular/cdk/overlay';\nimport {\n  ComponentRef,\n  ElementRef,\n  Inject,\n  Injector,\n  Injectable,\n  InjectionToken,\n  Optional,\n  Renderer2,\n} from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken<string>('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element!: ElementRef<unknown>;\n  private injector!: Injector;\n  /** Default theme class. */\n  private readonly defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef<unknown>): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef<unknown>, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n","import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n/** Tag state model */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nexport interface AnatomicalStructureTagStateModel {}\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State<EntityCollections<Tag, TagId, AnatomicalStructureTagStateModel>>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections(),\n  },\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository<\n  Tag,\n  TagId,\n  AnatomicalStructureTagStateModel\n> {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable<Tag[]> {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set<string>();\n        const removed = new Set<string>();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned',\n            });\n          }\n        }\n        return tags;\n      }),\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model!: ModelState;\n  /** Reference to the scene state */\n  private scene!: SceneState;\n\n  private page!: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(private readonly injector: Injector) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput<TagSearchResult> {\n    const matches = this.model.snapshot.anatomicalStructures.filter(\n      (as) => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1,\n    );\n    return [\n      {\n        totalCount: matches.length,\n        results: matches\n          .map(\n            (as): Tag => ({\n              id: as.id,\n              label: as.name,\n              type: 'added',\n            }),\n          )\n          .slice(0, limit),\n      },\n    ];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n","/**\n * Object definition for icon that should be loaded on startup.\n * Unlike runtime registration object this does not need url ot html\n * to be sanitized before hand.\n */\nexport interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-brain.svg' },\n  { name: 'mammary-gland', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-breast.svg' },\n  { name: 'main-bronchus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-extrapulmonary-bronchus.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-left.svg' },\n  {\n    name: 'fallopian-tube-right',\n    namespace: 'app',\n    url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-right.svg',\n  },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-right.svg' },\n  { name: 'kidneys', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidneys.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-large-intestine.svg' },\n  { name: 'larynx', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-larynx.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lungs.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lymph-nodes.svg' },\n  { name: 'neurons', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-neurons.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-right.svg' },\n  { name: 'palatine-tonsil', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-palatine-tonsil.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pelvis.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-small-intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-thymus.svg' },\n  { name: 'trachea', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-trachea.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' },\n];\n","import { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State<void>({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository<void> {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    private readonly sanitizer: DomSanitizer,\n    private readonly globalConfig: GlobalConfigState<GlobalConfig>,\n  ) {\n    super();\n  }\n\n  override ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS.filter((def) => def.html !== undefined)\n      .map((def) => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html ?? '') }))\n      .forEach((def) => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find((icon) => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace);\n\n      if (def?.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName as never] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter((value) => !!value);\n  }\n}\n","import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, distinctUntilChanged, filter, map, skipUntil, switchMap, tap, throttleTime } from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet<T = number> {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State<ModelStateModel>({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: [],\n  },\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository<ModelStateModel> {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(\n    map((x) => x?.id),\n    distinctUntilChanged(),\n  );\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(\n    map((x) => x?.blockSize),\n    distinctUntilChanged(),\n  );\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(\n    map((x) => x?.rotation),\n    distinctUntilChanged(),\n  );\n  /** Position observable */\n  readonly position$ = this.state$.pipe(\n    map((x) => x?.position),\n    distinctUntilChanged(),\n  );\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(\n    map((x) => x?.slicesConfig),\n    distinctUntilChanged(),\n  );\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(\n    map((x) => x?.viewType),\n    distinctUntilChanged(),\n  );\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(\n    map((x) => x?.viewSide),\n    distinctUntilChanged(),\n  );\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(\n    map((x) => x?.organ),\n    distinctUntilChanged(),\n  );\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(\n    map((x) => x?.organIri),\n    distinctUntilChanged(),\n  );\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(\n    map((x) => x?.organDimensions),\n    distinctUntilChanged(),\n  );\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(\n    map((x) => x?.sex),\n    distinctUntilChanged(),\n  );\n  /** Side observable */\n  readonly side$ = this.state$.pipe(\n    map((x) => x?.side),\n    distinctUntilChanged(),\n  );\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(\n    map((x) => x?.showPrevious),\n    distinctUntilChanged(),\n  );\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(\n    map((x) => x?.extractionSites),\n    distinctUntilChanged(),\n  );\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(\n    map((x) => x?.anatomicalStructures),\n    distinctUntilChanged(),\n  );\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(\n    map((x) => x?.extractionSets),\n    distinctUntilChanged(),\n  );\n\n  @Computed()\n  get modelChanged$(): Observable<void> {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState).filter((key) => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key as never] !== v2[key as never]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined),\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData!: ReferenceDataState;\n\n  private page!: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState<GlobalConfig>,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) => (ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false));\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName,\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event(\n      'placement',\n      `${this.snapshot.organ?.name}_placement`,\n      `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`,\n    );\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      } else {\n        this.ctx.patchState({ side: undefined });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Sets position and rotation to default\n   */\n  @DataAction()\n  setOrganDefaults(): void {\n    this.ctx.patchState({\n      position: this.defaultPosition,\n      rotation: { x: 0, y: 0, z: 0 },\n    });\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map((structure) => ({\n        ...structure,\n        opacity: Math.min(20, structure.opacity ?? 20),\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '',\n      this.snapshot.sex,\n      this.snapshot.side,\n      this.snapshot.organ,\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of db.anatomicalStructures[organIri] || []) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label ?? '',\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment,\n          };\n        }\n      }\n      this.ctx.patchState({\n        anatomicalStructures: [\n          { id: 'all', name: 'all anatomical structures', opacity: 20, visible: true },\n          ...Object.values(asLookup),\n        ],\n      });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: [{ id: 'all', name: 'all landmarks', visible: true, opacity: 0 }].concat(\n          sortBy(\n            set.extractionSites.map((entity) => ({\n              id: entity['@id'],\n              name: entity.label ?? '',\n              visible: true,\n              opacity: 0,\n              tooltip: entity.comment,\n            })),\n            'name',\n          ),\n        ),\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig\n      .getOption('organ')\n      .pipe(\n        filterNulls(),\n        delay(0),\n        switchMap((organ) => this.onOrganChange(organ)),\n      )\n      .subscribe();\n\n    this.modelChanged$\n      .pipe(skipUntil(this.page.registrationStarted$.pipe(filter((started) => started))))\n      .subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable<unknown> {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right',\n      });\n      return this.referenceData.state$.pipe(tap(() => this.onOrganIriChange()));\n    }\n\n    return EMPTY;\n  }\n}\n","import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { RegistrationState } from '../registration/registration.state';\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  orcidId?: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n  orcidValid: boolean;\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State<PageStateModel>({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: '',\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: [],\n    orcidValid: false,\n  },\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository<PageStateModel> {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map((x) => x?.user));\n  /** registrationStarted observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map((x) => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map((x) => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map((x) => x?.organOptions));\n  readonly orcidValid$ = this.state$.pipe(map((x) => x?.orcidValid));\n\n  @Computed()\n  get skipConfirmation$(): Observable<boolean> {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable<boolean> {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map((value) => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged(),\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable<boolean> {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState<GlobalConfig>,\n    private readonly reg: RegistrationState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    combineLatest([this.reg.state$, this.globalConfig.config$])\n      .pipe(\n        tap(([reg, config]) => {\n          this.setState(\n            patch({\n              registrationCallbackSet: reg.useRegistrationCallback ? !!config.register : false,\n              useCancelRegistrationCallback: !!config.cancelRegistration,\n              user: iif(!!config.user, config.user ?? { firstName: '', lastName: '' }),\n              registrationStarted: config.user ?? reg.initialRegistration ? true : undefined,\n            }),\n          );\n        }),\n      )\n      .subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: {\n        snapshot: { cancelRegistration: cancelRegistrationCallback },\n      },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation },\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick<Person, 'firstName' | 'middleName' | 'lastName'>): void {\n    this.ctx.setState(\n      patch({\n        user: patch({\n          firstName: name.firstName,\n          lastName: name.lastName,\n          middleName: name.middleName !== '' ? name.middleName : undefined,\n        }),\n      }),\n    );\n  }\n\n  /**\n   * Saves ORCID id as URI\n   * Sets orcidValid to true if blank, otherwise set to true if valid\n   * @param id ORCID id\n   */\n  @DataAction()\n  setOrcidId(id?: string): void {\n    this.ctx.setState(\n      patch({\n        user: patch({\n          orcidId: id ? this.orcidToUri(id) : undefined,\n        }),\n      }),\n    );\n    this.ctx.patchState({\n      orcidValid: id ? this.isOrcidValid() : true,\n    });\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(\n      patch({\n        registrationStarted: true,\n      }),\n    );\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const {\n      snapshot: { registrationStarted, hasChanges },\n    } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true,\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false,\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$.pipe(filter((s) => s)).subscribe(updateSkipConfirmation);\n\n    this.hasChanges$\n      .pipe(\n        withLatestFrom(this.globalSkipConfirmation$),\n        map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n        distinctUntilChanged(),\n      )\n      .subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe((skipConfirmation) => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n\n  /**\n   * Checks if current orcid value is in the valid format\n   * @returns true if orcid valid or blank\n   */\n  isOrcidValid(): boolean {\n    const orcId = this.uriToOrcid(this.snapshot.user.orcidId);\n    return !!(!orcId || orcId.match('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$'));\n  }\n\n  /**\n   * Converts orcid URI to a regular orcid value\n   * @param uri orcid uri\n   * @returns orcid id\n   */\n  uriToOrcid(uri?: string): string {\n    return uri ? uri.split('/').slice(-1)[0] : '';\n  }\n\n  /**\n   * Converts orcid to URI\n   * @param id orcid id\n   * @returns orcid URI\n   */\n  private orcidToUri(id: string): string {\n    const idWithHyphens = id\n      .replace(/-/g, '')\n      .replace(/(.{1,4})/g, '$1-')\n      .slice(0, -1);\n    return 'https://orcid.org/' + idWithHyphens;\n  }\n}\n","import { Immutable } from '@angular-ru/common/typings';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, Observable, from } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable<SpatialPlacementJsonLd>): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map((t) => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map<number>(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State<ReferenceDataStateModel>({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {},\n  },\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository<ReferenceDataStateModel> {\n  constructor(\n    private readonly globals: GlobalsService,\n    private readonly globalConfig: GlobalConfigState<GlobalConfig>,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe((db) => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable<ReferenceDataStateModel> {\n    return this.globalConfig.getOption<string>('referenceData').pipe(\n      switchMap((url) =>\n        from(fetch(url)).pipe(\n          switchMap((data) => data.json()),\n          catchError(() => EMPTY),\n        ),\n      ),\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([position.x, position.y, position.z], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(\n    organ: string,\n    sex?: 'Male' | 'Female' | string,\n    side?: 'Left' | 'Right' | string,\n    organInfo?: OrganInfo,\n  ): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(\n      (info) => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side),\n    );\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right',\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n","import { Immutable } from '@angular-ru/common/typings';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { insertItem, patch } from '@ngxs/store/operators';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { saveAs } from 'file-saver';\nimport { Observable, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take, tap, throttleTime } from 'rxjs/operators';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { isEqual } from 'lodash';\nimport { Tag } from '../../models/anatomical-structure-tag';\nimport { MetaData } from '../../models/meta-data';\nimport { GlobalConfig } from '../../services/config/config';\nimport { AnatomicalStructureTagState } from '../anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState, ModelStateModel, RUI_ORGANS, XYZTriplet } from '../model/model.state';\nimport { PageState, PageStateModel } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n/**\n * Registration state model\n */\nexport interface RegistrationStateModel {\n  /** Whether to use the registration callback function */\n  useRegistrationCallback: boolean;\n  /** Whether or not to display user registration errors */\n  displayErrors: boolean;\n  /** Previous registrations */\n  registrations: Record<string, unknown>[];\n  /** Registration provided by user */\n  initialRegistration?: SpatialEntityJsonLd;\n}\n\nconst JSONLD_THROTTLE_DURATION = 100;\n\n/**\n * Data for model registrations\n */\n@StateRepository()\n@State<RegistrationStateModel>({\n  name: 'registration',\n  defaults: {\n    useRegistrationCallback: false,\n    displayErrors: false,\n    registrations: [],\n  },\n})\n@Injectable()\nexport class RegistrationState extends NgxsImmutableDataRepository<RegistrationStateModel> {\n  readonly displayErrors$ = this.state$.pipe(map((x) => x?.displayErrors));\n\n  /** Observable of registration metadata */\n  @Computed()\n  get metadata$(): Observable<MetaData> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildMetadata(page, model, tags)),\n    );\n  }\n\n  /** Observable of registration data in jsonld format */\n  @Computed()\n  get jsonld$(): Observable<Record<string, unknown>> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags)),\n    );\n  }\n\n  @Computed()\n  get throttledJsonld$(): Observable<Record<string, unknown>> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      throttleTime(JSONLD_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      distinctUntilChanged(isEqual),\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags)),\n    );\n  }\n\n  @Computed()\n  get valid$(): Observable<boolean> {\n    return combineLatest([this.page.state$, this.model.state$]).pipe(map(() => this.isValid));\n  }\n\n  /**\n   * Observable of previous registrations\n   */\n  @Computed()\n  get previousRegistrations$(): Observable<Record<string, unknown>[]> {\n    const { globalConfig, state$ } = this;\n    const regs = state$.pipe(map((x) => x?.registrations));\n    const fetched = globalConfig.getOption('fetchPreviousRegistrations').pipe(\n      switchMap((fetch) => fetch?.() ?? [[]]),\n      startWith([]),\n    );\n\n    return combineLatest([regs, fetched]).pipe(map(([local, external]) => [...local, ...external]));\n  }\n\n  /** Current uuid identifier used when registering */\n  @Computed()\n  private get currentIdentifier(): string {\n    return uuidV4();\n  }\n\n  /** Time of last modification to registration data */\n  @Computed()\n  private get currentDate(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n  /** Reference to the page state */\n  private page!: PageState;\n\n  /** Reference to the model state */\n  private model!: ModelState;\n\n  /** Reference to the AS Tag state */\n  private tags!: AnatomicalStructureTagState;\n\n  /** Reference to the reference data state */\n  private refData!: ReferenceDataState;\n\n  /**\n   * Creates an instance of registration state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState<GlobalConfig>,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.page = this.injector.get(PageState);\n    this.model = this.injector.get(ModelState);\n    this.tags = this.injector.get(AnatomicalStructureTagState);\n    this.refData = this.injector.get(ReferenceDataState);\n\n    this.refData.state$.subscribe(() => {\n      this.globalConfig.config$\n        .pipe(\n          take(1),\n          tap(({ useDownload, register, organOptions }) => {\n            this.ctx.patchState({\n              useRegistrationCallback: !!(!useDownload && register),\n            });\n            this.page.setOrcidId();\n            this.model.setOrganDefaults();\n            this.setOrganSelection(organOptions as string[]);\n          }),\n        )\n        .subscribe();\n\n      this.globalConfig\n        .getOption('editRegistration')\n        .pipe(\n          filterNulls(),\n          tap((reg) => {\n            this.editRegistration(reg as SpatialEntityJsonLd);\n          }),\n        )\n        .subscribe();\n    });\n  }\n\n  async editRegistration(reg: SpatialEntityJsonLd): Promise<void> {\n    this.ctx.patchState({ initialRegistration: reg });\n    const place = this.refData.normalizePlacement(Array.isArray(reg.placement) ? reg.placement[0] : reg.placement);\n    const data = this.refData.getOrganData(place.target);\n\n    this.page.setUserName({\n      firstName: reg.creator_first_name,\n      middleName: reg.creator_middle_name,\n      lastName: reg.creator_last_name,\n    });\n\n    const orcid = this.page.uriToOrcid(reg.creator_orcid);\n    this.page.setOrcidId(orcid);\n\n    if (data) {\n      this.model.setOrgan(data.organ);\n      if (data.sex) {\n        this.model.setSex(data.sex);\n      }\n      if (data.side) {\n        this.model.setSide(data.side);\n      }\n    }\n\n    this.model.setBlockSize({ x: reg.x_dimension, y: reg.y_dimension, z: reg.z_dimension });\n    this.model.setRotation({ x: place.x_rotation, y: place.y_rotation, z: place.z_rotation });\n    this.model.setSlicesConfig({ thickness: reg.slice_thickness || NaN, numSlices: reg.slice_count || NaN });\n\n    this.model.setPosition({ x: place.x_translation, y: place.y_translation, z: place.z_translation });\n    const iris = new Set<string>(reg.ccf_annotations);\n    this.tags.addTags(\n      this.model.snapshot.anatomicalStructures\n        .filter((item) => iris.has(item.id as string))\n        .map((item) => ({ id: item.id, label: item.name, type: 'added' })),\n    );\n\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets whether to use the registration callback function or download.\n   *\n   * @param use True to use the callback, false to download\n   */\n  @DataAction()\n  setUseRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useRegistrationCallback: use });\n  }\n\n  /**\n   * Set's whether or not we should display the user's registration errors\n   *\n   * @param displayErrors the value to set it to\n   */\n  @DataAction()\n  setDisplayErrors(displayErrors: boolean): void {\n    this.ctx.patchState({ displayErrors });\n  }\n\n  /**\n   * Adds an entry to the previous registrations\n   *\n   * @param registration The new entry\n   */\n  @DataAction()\n  addRegistration(registration: Record<string, unknown>): void {\n    this.ctx.setState(\n      patch({\n        registrations: insertItem(registration as Immutable<Record<string, unknown>>),\n      }),\n    );\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets organ options in the RUI\n   * @param ids list of organ ids\n   */\n  @DataAction()\n  setOrganSelection(ids: string[] = []): void {\n    this.page.patchState({ organOptions: this.organListOptions(ids) });\n  }\n\n  isDataValid(page: Immutable<PageStateModel>, model: Immutable<ModelStateModel>): boolean {\n    const requiredValues = [\n      page.user.firstName,\n      page.user.lastName,\n      page.orcidValid,\n      model.organ.src,\n      model.organ.name,\n      model.organ.organ,\n    ];\n\n    return requiredValues.every((value) => !!value);\n  }\n\n  @Computed()\n  get isValid(): boolean {\n    return this.isDataValid(this.page.snapshot, this.model.snapshot);\n  }\n\n  /**\n   * Registers or downloads json data.\n   *\n   * @param [useCallback] Explicit override selecting the register/download action\n   */\n  register(useCallback?: boolean | undefined): void {\n    this.page.registrationStarted();\n    if (!this.isValid) {\n      return;\n    }\n\n    const {\n      globalConfig: {\n        snapshot: { register: registrationCallback },\n      },\n      page,\n      model,\n      snapshot,\n    } = this;\n    const jsonObj = this.buildJsonLd(page.snapshot, model.snapshot, this.tags.latestTags);\n    const json = JSON.stringify(jsonObj, undefined, 2);\n\n    if (useCallback ?? (useCallback === undefined && snapshot.useRegistrationCallback)) {\n      registrationCallback?.(json);\n    } else {\n      const data = new Blob([json], {\n        type: 'application/json',\n        endings: 'native',\n      });\n\n      saveAs(data, 'registration-data.json');\n    }\n\n    this.setDisplayErrors(false);\n    this.page.clearHasChanges();\n    this.addRegistration(jsonObj);\n  }\n\n  /**\n   * Sets the state back to the initial registration\n   */\n  setToInitialRegistration() {\n    const { page } = this;\n\n    const initialWithChanges: SpatialEntityJsonLd | undefined = {\n      ...(this.snapshot.initialRegistration as SpatialEntityJsonLd),\n      creator_first_name: page.snapshot.user.firstName,\n      creator_last_name: page.snapshot.user.lastName,\n      creator_middle_name: page.snapshot.user.middleName,\n      creator_orcid: page.snapshot.user.orcidId,\n    };\n\n    this.editRegistration(initialWithChanges);\n  }\n\n  /**\n   * Builds a metadata array from the specified data.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns metadata An array of label-value objects\n   */\n  private buildMetadata(page: Immutable<PageStateModel>, model: Immutable<ModelStateModel>, tags: Tag[]): MetaData {\n    const data: MetaData = [];\n\n    if (!page.registrationCallbackSet) {\n      data.push({ label: 'First Name', value: page.user.firstName }, { label: 'Last Name', value: page.user.lastName });\n    }\n\n    data.push(\n      { label: 'Reference Organ Name', value: model.organ.name },\n      { label: 'Tissue Block Dimensions (mm)', value: this.xyzTripletToString(model.blockSize) },\n      { label: 'Tissue Block Position (mm)', value: this.xyzTripletToString(model.position) },\n      { label: 'Tissue Block Rotation', value: this.xyzTripletToString(model.rotation) },\n      { label: 'Anatomical Structure Tags', value: tags.map((t) => t.label).join(', ') },\n      { label: 'Time Stamp', value: this.currentDate },\n      { label: 'Alignment ID', value: this.currentIdentifier },\n    );\n\n    return data;\n  }\n\n  /**\n   * Converts the registration data into jsonld format.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns A jsonld object\n   */\n  private buildJsonLd(\n    page: Immutable<PageStateModel>,\n    model: Immutable<ModelStateModel>,\n    tags: Tag[],\n  ): Record<string, unknown> {\n    return {\n      '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n      '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}`,\n      '@type': 'SpatialEntity',\n      label: model.label || undefined,\n      creator: `${page.user.firstName} ${page.user.middleName ? page.user.middleName + ' ' : ''}${page.user.lastName}`,\n      creator_first_name: page.user.firstName,\n      creator_last_name: page.user.lastName,\n      creator_middle_name: page.user.middleName,\n      creator_orcid: page.user.orcidId,\n      creation_date: this.currentDate,\n      ccf_annotations: tags.map((tag) => tag.id),\n      slice_thickness: model.slicesConfig?.thickness || undefined,\n      slice_count: model.slicesConfig?.numSlices || undefined,\n\n      x_dimension: +model.blockSize.x.toFixed(3),\n      y_dimension: +model.blockSize.y.toFixed(3),\n      z_dimension: +model.blockSize.z.toFixed(3),\n      dimension_units: 'millimeter',\n\n      placement: {\n        '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}_placement`,\n        '@type': 'SpatialPlacement',\n        target: model.organIri as string,\n        placement_date: this.currentDate,\n\n        x_scaling: 1,\n        y_scaling: 1,\n        z_scaling: 1,\n        scaling_units: 'ratio',\n\n        x_rotation: +model.rotation.x.toFixed(3),\n        y_rotation: +model.rotation.y.toFixed(3),\n        z_rotation: +model.rotation.z.toFixed(3),\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n\n        x_translation: +model.position.x.toFixed(3),\n        y_translation: +model.position.y.toFixed(3),\n        z_translation: +model.position.z.toFixed(3),\n        translation_units: 'millimeter',\n      },\n    };\n  }\n\n  /**\n   * Format a XYZTriplet as a string.\n   *\n   * @param xyz The triplet values\n   * @returns The string representation\n   */\n  private xyzTripletToString(xyz: XYZTriplet): string {\n    return `${Math.round(xyz.x)}, ${Math.round(xyz.y)}, ${Math.round(xyz.z)}`;\n  }\n\n  /**\n   * Provides list of organ objects given an array of organ ids\n   * @param organOptions array of organ ids\n   * @returns list of organ info\n   */\n  private organListOptions(organOptions?: string[]): OrganInfo[] {\n    if (organOptions && organOptions.length > 0) {\n      return RUI_ORGANS.filter((organ) => {\n        if (!organ.id) {\n          return false;\n        } else {\n          return organOptions.includes(organ.id);\n        }\n      });\n    } else {\n      return RUI_ORGANS;\n    }\n  }\n}\n","import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { SpatialEntity, SpatialPlacement, getOriginScene, getTissueBlockScene } from 'ccf-database';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { isEqual } from 'lodash';\nimport { Observable, combineLatest, defer, of } from 'rxjs';\nimport {\n  catchError,\n  concatMap,\n  distinctUntilChanged,\n  filter,\n  map,\n  share,\n  startWith,\n  switchMap,\n  take,\n  throttleTime,\n} from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\ninterface Collision {\n  id: string;\n}\n\nconst NODE_COLLISION_THROTTLE_DURATION = 10;\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i]))),\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State<SceneStateModel>({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production,\n  },\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository<SceneStateModel> implements NgxsOnInit {\n  @Computed()\n  get nodes$(): Observable<SpatialSceneNode[]> {\n    return combineLatest([\n      this.placementCube$,\n      this.referenceOrganNodes$,\n      this.previousRegistrationNodes$,\n      this.nodeCollisions$,\n      this.spatialKeyBoardAxis$,\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions, axis]) => [\n        ...placement,\n        ...prevNodes,\n        ...nodes,\n        ...axis,\n        ...(this.snapshot.showCollisions ? collisions : []),\n      ]),\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable<SpatialSceneNode[]> {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map((n) => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY)\n              .rotateY(toRadians(rotation))\n              .multiplyRight(n.transformMatrix),\n          }));\n        }\n      }),\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable<SpatialSceneNode[]> {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) => {\n        const organ = this.getOrganSpatialEntity(organIri as string);\n        const originScene = organIri ? getOriginScene(organ, false, true) : [];\n        const organScene = this.createSceneNodes(\n          organIri as string,\n          [...anatomicalStructures, ...extractionSites] as VisibilityItem[],\n        );\n        return [...originScene, ...organScene];\n      }),\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable<SpatialSceneNode[]> {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [\n                {\n                  ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255],\n                },\n              ];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map(\n                  (node): SpatialSceneNode => ({\n                    ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                    opacity: (item.opacity ?? 100) / 100,\n                    color: [255, 255, 255, 255],\n                  }),\n                );\n            }\n          })\n          .reduce<SpatialSceneNode[]>((acc, nodes) => acc.concat(nodes), []),\n      ),\n      distinctUntilChanged(isEqual),\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable<SpatialSceneNode[]> {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.collisions$, this.placementCube$]).pipe(\n      throttleTime(NODE_COLLISION_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      map(([nodes, collisions, placement]) => {\n        if (collisions !== undefined) {\n          return this.filterNodeCollisions(nodes, collisions);\n        } else if (placement.length > 0) {\n          return this.filterNodeBBox(nodes, placement[0]);\n        }\n        return [];\n      }),\n      share(),\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable<SpatialSceneNode[]> {\n    return combineLatest([\n      this.model.organIri$,\n      this.model.showPrevious$,\n      this.registration.previousRegistrations$ as Observable<SpatialEntityJsonLd[]>,\n    ]).pipe(\n      map(([organIri = '', showPrevious, previousRegistrations]) =>\n        showPrevious ? this.getPreviousRegistrationNodes(organIri, previousRegistrations) : [],\n      ),\n    );\n  }\n\n  @Computed()\n  get spatialKeyBoardAxis$(): Observable<SpatialSceneNode[]> {\n    const nonEmptyOrganIri = this.model.organIri$.pipe(filter((iri): iri is string => iri !== undefined && iri !== ''));\n\n    return combineLatest([nonEmptyOrganIri, this.model.position$]).pipe(\n      map(([organIri, position]) => {\n        const organEntity = this.getOrganSpatialEntity(organIri);\n        const blockSize = this.model.snapshot.blockSize;\n        const rotation = this.model.snapshot.rotation;\n        if (!organEntity) {\n          return [];\n        }\n\n        return getTissueBlockScene(\n          {\n            x_dimension: blockSize.x,\n            y_dimension: blockSize.y,\n            z_dimension: blockSize.z,\n          } as SpatialEntity,\n          {\n            x_translation: position.x - organEntity.x_dimension / 2,\n            y_translation: position.y - organEntity.y_dimension / 2,\n            z_translation: position.z - organEntity.z_dimension / 2,\n\n            x_rotation: rotation.x,\n            y_rotation: rotation.y,\n            z_rotation: rotation.z,\n\n            x_scaling: 1,\n            y_scaling: 1,\n            z_scaling: 1,\n          } as SpatialPlacement,\n        );\n      }),\n    );\n  }\n\n  @Computed()\n  get placementCube$(): Observable<SpatialSceneNode[]> {\n    return combineLatest([\n      this.model.viewType$,\n      this.model.blockSize$,\n      this.model.rotation$,\n      this.model.position$,\n      this.model.organ$,\n    ]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => (organ.src === '' ? [] : [this.placementCube])),\n      distinctUntilChanged(isEqual),\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map((n) => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map<number>(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map((n) => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n  @Computed()\n  get rotation$(): Observable<number> {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      }),\n    );\n  }\n\n  readonly gizmo$: Observable<SpatialSceneNode[]> = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1,\n    },\n  ]);\n\n  /** Reference to the model state */\n  private model!: ModelState;\n  private registration!: RegistrationState;\n  private referenceData!: ReferenceDataState;\n\n  @Computed()\n  private get collisions$(): Observable<Collision[] | undefined> {\n    return defer(() => this.registration.throttledJsonld$).pipe(\n      concatMap((jsonld) => this.getCollisions(jsonld)),\n      startWith([]),\n    );\n  }\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly http: HttpClient,\n    private readonly globalConfig: GlobalConfigState<GlobalConfig>,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter((item) => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [\n            {\n              ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255],\n            },\n          ];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map((node) => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255],\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n\n  private getOrganSpatialEntity(organIri: string): SpatialEntity {\n    const db = this.referenceData.snapshot;\n    return db.organSpatialEntities[organIri] as SpatialEntity;\n  }\n\n  private getCollisions(jsonld: unknown): Observable<Collision[] | undefined> {\n    return this.globalConfig.getOption('collisionsEndpoint').pipe(\n      switchMap((endpoint) =>\n        endpoint\n          ? this.http.post<Collision[]>(endpoint, JSON.stringify(jsonld), {\n              headers: { 'Content-Type': 'application/json' },\n            })\n          : of(undefined),\n      ),\n      catchError(() => of(undefined)),\n      take(1),\n    );\n  }\n\n  private filterNodeCollisions(nodes: SpatialSceneNode[], collisions: Collision[]): SpatialSceneNode[] {\n    const collidedIds = new Set(collisions.map((node) => node.id));\n    return nodes.filter((node) => collidedIds.has(node['@id']));\n  }\n\n  private filterNodeBBox(nodes: SpatialSceneNode[], placement: SpatialSceneNode): SpatialSceneNode[] {\n    const bbox = getNodeBbox(placement);\n    return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n  }\n\n  private getPreviousRegistrationNodes(\n    organIri: string,\n    previousRegistrations: SpatialEntityJsonLd[],\n  ): SpatialSceneNode[] {\n    const toNode = (entity: SpatialEntityJsonLd): SpatialSceneNode | undefined => {\n      const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n      if (p.target === organIri) {\n        const organDimensions = this.model.snapshot.organDimensions;\n        const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map((n) => -n / 1000 / 2);\n        return {\n          '@id': entity['@id'],\n          '@type': 'SpatialSceneNode',\n          transformMatrix: new Matrix4(Matrix4.IDENTITY)\n            .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n            .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map<number>(toRadians) as [number, number, number])\n            .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map((n) => n / 1000 / 2)),\n          color: [25, 118, 210, 200],\n          tooltip: entity.label,\n          unpickable: true,\n        };\n      } else {\n        return undefined;\n      }\n    };\n\n    return previousRegistrations.map(toNode).filter((entity): entity is SpatialSceneNode => entity !== undefined);\n  }\n}\n","import { NgxsDataPluginModule } from '@angular-ru/ngxs';\nimport { NgModule } from '@angular/core';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\nimport { AnatomicalStructureTagState } from './anatomical-structure-tags/anatomical-structure-tags.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ModelState } from './model/model.state';\nimport { PageState } from './page/page.state';\nimport { ReferenceDataState } from './reference-data/reference-data.state';\nimport { RegistrationState } from './registration/registration.state';\nimport { SceneState } from './scene/scene.state';\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState,\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production,\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Must come before all other plugins except the ngxs data plugin!\n    NgxsStoragePluginModule.forRoot({\n      key: ['registration.registrations'],\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production,\n    }),\n  ],\n})\nexport class StoreModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NodeDragEvent } from 'ccf-body-ui';\nimport { ResizeSensor } from 'css-element-queries';\nimport { distinctUntilKeyChanged, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { SceneState } from '../../core/store/scene/scene.state';\n\n/**\n * Main content component\n */\n@Component({\n  selector: 'ccf-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContentComponent implements OnInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-content';\n\n  @Input() disablePositionChange = false;\n\n  readonly position$ = this.model.position$.pipe(\n    map((p) => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) })),\n  );\n\n  /** Whether the view type is 3d or register */\n  readonly is3DView$ = this.model.viewType$.pipe(map((type) => type === '3d'));\n\n  readonly bounds$ = this.model.organDimensions$.pipe(\n    map((dims) => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000,\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y'),\n  );\n\n  /** Whether the content area is very narrow */\n  isNarrowView = false;\n\n  /**\n   * Shows / hides the state debug component for testing purposes.\n   */\n  debugMode = false;\n\n  /**\n   * Show debug buttons of content component\n   */\n  showDebugButtons = !environment.production;\n\n  /** Resize detection */\n  private sensor!: ResizeSensor;\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param model The model state\n   * @param page The page state\n   * @param registration The registration state\n   * @param rootRef Component's root element\n   * @param cdr Change detector\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly page: PageState,\n    readonly registration: RegistrationState,\n    readonly scene: SceneState,\n    private readonly rootRef: ElementRef<HTMLElement>,\n    private readonly cdr: ChangeDetectorRef,\n  ) {}\n\n  /**\n   * Sets up the resize sensor\n   */\n  ngOnInit(): void {\n    this.sensor = new ResizeSensor(this.rootRef.nativeElement, ({ width }) => {\n      const isNarrowView = width < 440; // 27.5rem\n      if (this.isNarrowView !== isNarrowView) {\n        this.isNarrowView = isNarrowView;\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  /**\n   * Detaches the resize sensor\n   */\n  ngOnDestroy(): void {\n    this.sensor.detach();\n  }\n\n  /**\n   * Sets view type\n   *\n   * @param is3DView Set view type to '3d' if this is true otherwise set it to 'register'\n   */\n  setViewType(is3DView: boolean): void {\n    this.model.setViewType(is3DView ? '3d' : 'register');\n  }\n\n  /**\n   * Method to reset registration block, crosshairs, and x,y,z information.\n   * Resets to initial registration state if provided\n   */\n  resetStage(): void {\n    if (this.registration.snapshot.initialRegistration) {\n      this.registration.setToInitialRegistration();\n    } else {\n      this.model.setOrganDefaults();\n    }\n    this.model.setViewSide('anterior');\n    this.model.setViewType('register');\n  }\n\n  handleNodeDrag(event: NodeDragEvent): void {\n    if (event.node['@id'] === '#DraftPlacement') {\n      if (event.info.coordinate) {\n        const [a, b] = (event.info.coordinate as number[]).map((n) => n * 1000) as [number, number];\n        const { position, viewSide, organDimensions } = this.model.snapshot;\n        const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map((n) => n / 2);\n        let newPosition = position;\n        switch (viewSide) {\n          case 'anterior':\n            newPosition = { x: a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'posterior':\n            newPosition = { x: -a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'left':\n            newPosition = { x: position.x, y: b + dims[1], z: -a + dims[2] };\n            break;\n          case 'right':\n            newPosition = { x: position.x, y: b + dims[1], z: a + dims[2] };\n            break;\n        }\n        this.model.setPosition(newPosition);\n      }\n    }\n  }\n}\n","<div class=\"top-bar\">\n  <ccf-stage-nav\n    [useDropdownMenu]=\"isNarrowView\"\n    [view3D]=\"(is3DView$ | async) ?? false\"\n    [side]=\"(model.viewSide$ | async)!\"\n    (view3DChange)=\"setViewType($event)\"\n    (sideChange)=\"model.setViewSide($any($event))\"\n  >\n  </ccf-stage-nav>\n  <mat-icon\n    matRipple\n    [matRippleCentered]=\"true\"\n    [matRippleUnbounded]=\"true\"\n    matRippleColor=\"rgba(204, 204, 204, 0.25)\"\n    class=\"icon reset\"\n    (click)=\"resetStage()\"\n    >refresh</mat-icon\n  >\n</div>\n\n<div class=\"main-content\">\n  <ccf-body-ui\n    class=\"body-ui\"\n    *ngIf=\"(model.viewType$ | async) === '3d'\"\n    [scene]=\"(scene.nodes$ | async) ?? []\"\n    [rotation]=\"(scene.rotation$ | async) ?? 0\"\n    (rotationChange)=\"gizmo.rotation = $event[0]; gizmo.rotationX = $event[1]\"\n    [bounds]=\"(bounds$ | async)!\"\n    [zoom]=\"11.5\"\n    [interactive]=\"true\"\n    camera=\"perspective\"\n  ></ccf-body-ui>\n\n  <ccf-body-ui\n    class=\"body-ui\"\n    *ngIf=\"(model.viewType$ | async) === 'register'\"\n    [scene]=\"(scene.rotatedNodes$ | async) ?? []\"\n    [interactive]=\"false\"\n    [bounds]=\"(bounds$ | async)!\"\n    [zoom]=\"11.5\"\n    (nodeDrag)=\"handleNodeDrag($event)\"\n    camera=\"orthographic\"\n  ></ccf-body-ui>\n  <div class=\"gizmo-area\">\n    <ccf-body-ui\n      class=\"gizmo\"\n      [scene]=\"(scene.gizmo$ | async)!\"\n      [rotation]=\"(scene.rotation$ | async) ?? 0\"\n      [interactive]=\"false\"\n      [zoom]=\"9.5\"\n      #gizmo\n    ></ccf-body-ui>\n    <ccf-spatial-search-keyboard-ui-behavior\n      *ngIf=\"page.registrationStarted$ | async\"\n      [delta]=\"1\"\n      [shiftDelta]=\"2\"\n      [position]=\"(position$ | async)!\"\n      [disablePositionChange]=\"disablePositionChange\"\n    ></ccf-spatial-search-keyboard-ui-behavior>\n    <div class=\"position-display\">\n      <div class=\"position\">\n        <div class=\"x\">X: {{ (position$ | async)?.x }}</div>\n        <div class=\"y\">Y: {{ (position$ | async)?.y }}</div>\n        <div class=\"z\">Z: {{ (position$ | async)?.z }}</div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ccf-store-debug *ngIf=\"showDebugButtons && debugMode\" class=\"debug\"> </ccf-store-debug>\n<div\n  *ngIf=\"showDebugButtons\"\n  style=\"\n    position: absolute;\n    bottom: 1rem;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 7rem;\n  \"\n>\n  <button style=\"width: 3rem; font-size: 0.7rem\" (click)=\"debugMode = !debugMode\">State</button>\n  <button (click)=\"registration.setUseRegistrationCallback(true)\">Use callback</button>\n  <button (click)=\"registration.setUseRegistrationCallback(false)\">Use download</button>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BodyUiModule, SpatialSearchKeyboardUIBehaviorModule, StoreDebugModule } from 'ccf-shared';\n\nimport { ContentComponent } from '../content/content.component';\nimport { StageNavModule } from './stage-nav/stage-nav.module';\nimport { VideoModalLauncherModule } from './video-modal/video-modal-launcher/video-modal-launcher.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StageNavModule,\n    MatIconModule,\n    StoreDebugModule,\n    VideoModalLauncherModule,\n    MatRippleModule,\n    SpatialSearchKeyboardUIBehaviorModule,\n    BodyUiModule,\n  ],\n  declarations: [ContentComponent],\n  exports: [ContentComponent],\n})\nexport class ContentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/** Valid values for side. */\nexport type Side = 'left' | 'right' | 'anterior' | 'posterior' | '3D';\n\n/** Component that allows the user to change the viewing angle and rendering mode of the stage. */\n@Component({\n  selector: 'ccf-stage-nav',\n  templateUrl: './stage-nav.component.html',\n  styleUrls: ['./stage-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StageNavComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-stage-nav';\n\n  /** Whether to use a drop down menu instead of a options bar */\n  @Input()\n  set useDropdownMenu(value: boolean) {\n    this.isDropdownActive = value;\n    this.isDropdownHidden = true;\n  }\n\n  /** Input that allows changing the current side from outside the component */\n  @Input() side: Side = 'anterior';\n\n  /** Input that allows toggling of 3D view on / off from outside the component */\n  @Input() view3D = false;\n\n  /** Output that emits whenever the current side selection changes */\n  @Output() readonly sideChange = new EventEmitter<Side>();\n\n  /** Output that emits whenever the 3D view is toggled on / off */\n  @Output() readonly view3DChange = new EventEmitter<boolean>();\n\n  /** Label for dropdown */\n  @ViewChild('label', { static: true }) labelRef!: ElementRef<HTMLElement>;\n\n  /** Options dropdown */\n  @ViewChild('options', { static: true }) optionsRef!: ElementRef<HTMLElement>;\n\n  /** Whether this component shows a dropdown menu or an options bar */\n  isDropdownActive = false;\n\n  /** Whether the dropdown menu is hidden */\n  isDropdownHidden = true;\n\n  /** Simple helper for accessing the native label element */\n  private get labelEl(): HTMLElement {\n    return this.labelRef.nativeElement;\n  }\n\n  /** Simple helper for accessing the native options element */\n  private get optionsEl(): HTMLElement {\n    return this.optionsRef.nativeElement;\n  }\n\n  /**\n   * Creates an instance of stage nav component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   *\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const { isDropdownHidden, labelEl, optionsEl } = this;\n\n    if (labelEl.contains(target)) {\n      this.isDropdownHidden = !isDropdownHidden;\n    } else if (!optionsEl.contains(target)) {\n      this.isDropdownHidden = true;\n    }\n  }\n\n  /**\n   * Handles the updating of the side selection and calling the event emitter\n   *\n   * @param selection the new selected side\n   */\n  updateSide(selection: Side): void {\n    this.ga.event('side_update', 'stage_nav', selection);\n\n    if (selection === '3D') {\n      this.updateView(true);\n    } else {\n      this.updateView(false);\n      this.side = selection;\n      this.sideChange.emit(this.side);\n    }\n  }\n\n  /**\n   * Handles updating of the boolean that keeps track of current view\n   * and calling the event emitter.\n   *\n   * @param selection 3D (true) or Register (false)\n   */\n  updateView(selection: boolean): void {\n    this.view3D = selection;\n    this.ga.event('view_update', 'stage_nav', selection ? '3D' : 'Register');\n    this.view3DChange.emit(this.view3D);\n  }\n}\n","<div class=\"dropdown-label\" [class.dropdown]=\"isDropdownActive\" #label>\n  <mat-label>Options</mat-label>\n  <mat-icon>arrow_drop_down</mat-icon>\n</div>\n\n<div\n  class=\"stage-options\"\n  [class.dropdowncontainer]=\"isDropdownActive\"\n  [class.hidden]=\"isDropdownActive && isDropdownHidden\"\n  #options\n>\n  <mat-radio-group class=\"input-group\" [value]=\"side\" (change)=\"updateSide($event.value)\">\n    <mat-radio-button value=\"left\" class=\"nav-input\">Left</mat-radio-button>\n    <mat-radio-button value=\"right\" class=\"nav-input\">Right</mat-radio-button>\n    <mat-radio-button value=\"anterior\" class=\"nav-input\" checked>Anterior</mat-radio-button>\n    <mat-radio-button value=\"posterior\" class=\"nav-input\">Posterior</mat-radio-button>\n  </mat-radio-group>\n\n  <ccf-labeled-slide-toggle\n    matTooltip=\"Change view.\"\n    class=\"view-slider\"\n    [labels]=\"['Register', '3D\\u00A0Preview']\"\n    [value]=\"view3D ? '3D\\u00A0Preview' : 'Register'\"\n    (valueChange)=\"updateView($event !== 'Register')\"\n  >\n  </ccf-labeled-slide-toggle>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LabeledSlideToggleModule } from '../../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\n\nimport { StageNavComponent } from './stage-nav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDividerModule,\n    LabeledSlideToggleModule,\n    MatTooltipModule,\n  ],\n  declarations: [StageNavComponent],\n  exports: [StageNavComponent],\n})\nexport class StageNavModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { VideoModalComponent } from '../video-modal/video-modal.component';\n\n/**\n * Component for launching an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal-launcher',\n  templateUrl: './video-modal-launcher.component.html',\n  styleUrls: ['./video-modal-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VideoModalLauncherComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal-launcher';\n\n  /**\n   * Input used to toggle the launcher on and off.\n   */\n  @Input() visible = true;\n\n  /**\n   * Creates an instance of video modal launcher component.\n   */\n  constructor(private readonly dialog: MatDialog) {}\n\n  /**\n   * Launches the video modal component.\n   */\n  launchVideoModal(): void {\n    this.dialog.open(VideoModalComponent, {\n      width: '46rem',\n      data: {},\n    });\n  }\n}\n","<div class=\"description align-center video-description\" *ngIf=\"visible\">\n  <div class=\"title\">WATCH</div>\n  \"How to use the HuBMAP Registration User Interface\"\n</div>\n<mat-icon class=\"play-icon-button\" (click)=\"launchVideoModal()\" *ngIf=\"visible\"> play_circle_outline </mat-icon>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { VideoModalModule } from '../video-modal/video-modal.module';\nimport { VideoModalLauncherComponent } from './video-modal-launcher.component';\n\n@NgModule({\n  declarations: [VideoModalLauncherComponent],\n  imports: [CommonModule, MatIconModule, VideoModalModule],\n  exports: [VideoModalLauncherComponent],\n})\nexport class VideoModalLauncherModule {}\n","import { DOCUMENT } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, HostBinding, Inject, OnInit, Renderer2 } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n/**\n * Component for displaying a youtube video inside of an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal',\n  templateUrl: './video-modal.component.html',\n  styleUrls: ['./video-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VideoModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal';\n\n  /**\n   * Creates an instance of video modal component.\n   */\n  constructor(\n    private readonly renderer2: Renderer2,\n    public readonly dialogRef: MatDialogRef<VideoModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: unknown,\n    @Inject(DOCUMENT) private readonly document: Document,\n  ) {}\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    this.loadYoutubePlayerAPI();\n  }\n\n  /**\n   * loads the IFrame Player API code asynchronously from YouTube.\n   */\n  loadYoutubePlayerAPI(): void {\n    const script = this.renderer2.createElement('script') as HTMLScriptElement;\n    script.src = 'https://www.youtube.com/iframe_api';\n    this.renderer2.appendChild(this.document.body, script);\n  }\n\n  /**\n   * Closes the video modal component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"video-modal wrapper\">\n  <div class=\"container\">\n    <mat-icon class=\"material-icons close-icon\" (click)=\"close()\">clear</mat-icon>\n    <div class=\"content\">\n      <mat-dialog-content class=\"mat-typography\">\n        <youtube-player videoId=\"142hGer4xvU\"></youtube-player>\n      </mat-dialog-content>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { VideoModalComponent } from './video-modal.component';\n\n@NgModule({\n  declarations: [VideoModalComponent],\n  imports: [CommonModule, YouTubePlayerModule, MatIconModule, MatDialogModule],\n  exports: [VideoModalComponent],\n})\nexport class VideoModalModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nimport { PageState } from '../../core/store/page/page.state';\n\n/**\n * Page header\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-header';\n\n  @Input() homeUrl!: string;\n\n  @Input() logoTooltip!: string;\n\n  /**\n   * Creates an instance of header component.\n   *\n   * @param page Page data.\n   */\n  constructor(readonly page: PageState) {}\n}\n","<ng-container *ngIf=\"page.useCancelRegistrationCallback$ | async; then backButton; else logo\"> </ng-container>\n\n<ng-template #backButton>\n  <div class=\"link home\" (click)=\"page.cancelRegistration()\" rel=\"noreferrer noopener\">\n    <mat-icon class=\"icon backbutton\">chevron_left</mat-icon>\n    <span class=\"text\">BACK</span>\n  </div>\n</ng-template>\n\n<ng-template #logo>\n  <a\n    class=\"link portal\"\n    [href]=\"homeUrl\"\n    rel=\"noreferrer noopener\"\n    [matTooltip]=\"logoTooltip\"\n    matTooltipPosition=\"right\"\n  >\n    <div class=\"logo\" aria-hidden=\"false\" aria-label=\"Reset tool\"></div>\n  </a>\n</ng-template>\n\n<div class=\"filler\"></div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent],\n})\nexport class HeaderModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { VisibilityItem } from '../../core/models/visibility-item';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\n\n/**\n * The left sidebar\n */\n@Component({\n  selector: 'ccf-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LeftSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-left-sidebar';\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  readonly organSelected$ = this.model.organ$.pipe(map((organ) => (organ === undefined ? false : true)));\n\n  /**\n   * Variable that keeps track of the extraction site tooltip to display on\n   * the stage when hovered.\n   */\n  extractionSiteTooltip = '';\n\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n  ) {}\n\n  /**\n   * Updates extraction site tooltip to either the VisibilityItem passed in's\n   * tooltip property, or an empty string if undefined.\n   *\n   * @param item The VisibilityItem which we want to show the tooltip of, or\n   * undefined.\n   */\n  updateExtractionSiteTooltip(item: VisibilityItem | undefined): void {\n    if (item?.tooltip) {\n      this.extractionSiteTooltip = item.tooltip;\n    } else {\n      this.extractionSiteTooltip = '';\n    }\n  }\n}\n","<div class=\"scroll-wrapper\">\n  <div class=\"container\">\n    <mat-expansion-panel class=\"anatomical-structures-menu\" [expanded]=\"organSelected$ | async\">\n      <mat-expansion-panel-header class=\"expansion-header\">\n        <mat-panel-title\n          class=\"expansion-title\"\n          matTooltip=\"Use opacity icons to change visibility of anatomical structures\"\n          >Anatomical Structures</mat-panel-title\n        >\n      </mat-expansion-panel-header>\n\n      <div class=\"expansion-content\">\n        <ccf-visibility-menu\n          [items]=\"$any(model.anatomicalStructures$ | async) ?? []\"\n          (itemsChange)=\"model.setAnatomicalStructures($event)\"\n        >\n        </ccf-visibility-menu>\n      </div>\n    </mat-expansion-panel>\n\n    <mat-divider></mat-divider>\n\n    <mat-expansion-panel class=\"extraction-menu\" [expanded]=\"organSelected$ | async\">\n      <mat-expansion-panel-header class=\"expansion-header\">\n        <mat-panel-title\n          matTooltip=\"Some organs have predefined landmarks to guide manual tissue registration--you can turn these on/off.\"\n          class=\"expansion-title\"\n          >Landmarks</mat-panel-title\n        >\n      </mat-expansion-panel-header>\n      <div *ngIf=\"organSelected$ | async\" class=\"expansion-content\">\n        <ccf-extraction-set-dropdown\n          [sets]=\"$any(model.extractionSets$ | async)\"\n          (setChange)=\"model.setExtractionSites($event.sites)\"\n          #dropdown\n        >\n        </ccf-extraction-set-dropdown>\n        <ccf-visibility-menu\n          [items]=\"$any(model.extractionSites$ | async)\"\n          (itemsChange)=\"model.setExtractionSites($event)\"\n          (hover)=\"updateExtractionSiteTooltip($event)\"\n        >\n        </ccf-visibility-menu>\n      </div>\n    </mat-expansion-panel>\n    <div class=\"extraction-site-tooltip mat-elevation-z8\" *ngIf=\"extractionSiteTooltip.length > 0\">\n      {{ extractionSiteTooltip }}\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { OpacitySliderModule } from 'ccf-shared';\n\nimport { ExtractionSetDropdownModule } from '../../shared/components/extraction-set-dropdown/extraction-set-dropdown.module';\nimport { NameInputModule } from '../../shared/components/name-input/name-input.module';\nimport { VisibilityMenuModule } from '../../shared/components/visibility-menu/visibility-menu.module';\nimport { VisibilityToggleModule } from '../../shared/components/visibility-toggle/visibility-toggle.module';\nimport { LeftSidebarComponent } from './left-sidebar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatTooltipModule,\n\n    MatDividerModule,\n    NameInputModule,\n    VisibilityToggleModule,\n    ExtractionSetDropdownModule,\n    OpacitySliderModule,\n    VisibilityMenuModule,\n    VisibilityToggleModule,\n  ],\n  declarations: [LeftSidebarComponent],\n  exports: [LeftSidebarComponent],\n})\nexport class LeftSidebarModule {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { OrganInfo } from 'ccf-shared';\nimport { map } from 'rxjs/operators';\n\nimport { ModelState, RUI_ORGANS } from '../../../core/store/model/model.state';\nimport { PageState, Person } from '../../../core/store/page/page.state';\n\n/**\n * Component containing content of the initial registration modal\n */\n@Component({\n  selector: 'ccf-registration-content',\n  templateUrl: './registration-content.component.html',\n  styleUrls: ['./registration-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegistrationContentComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-content';\n\n  /** Current sex in the model state */\n  readonly sexByLabel$ = this.model.sex$.pipe(map((sex) => (sex === 'female' ? 'Female' : 'Male')));\n\n  /** List of selectable organs */\n  organList = RUI_ORGANS;\n\n  /** Whether sex has been selected */\n  sexSelected!: boolean;\n\n  /** Whether an organ has been selected */\n  organSelected!: boolean;\n\n  /** Current sex selected */\n  currentSex!: string;\n\n  /** Current organ selected */\n  currentOrgan!: OrganInfo;\n\n  /** Checks if the user has entered a first and last name */\n  nameValid!: boolean;\n\n  /** Checks if the entered orcid is valid */\n  orcidValid!: boolean;\n\n  /** Checks if a preexisting registration was uploaded */\n  registrationSelected: boolean;\n\n  /**\n   * Creates an instance of the registration dialog\n   *\n   * @param page Page state\n   * @param model Model state\n   * @param dialogRef Registration dialog\n   * @param cdr Change detection\n   */\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    public dialogRef: MatDialogRef<RegistrationContentComponent>,\n    cdr: ChangeDetectorRef,\n  ) {\n    this.registrationSelected = false;\n    page.user$.subscribe((user) => {\n      this.checkNameValid(user);\n      this.orcidValid = page.isOrcidValid();\n      cdr.markForCheck();\n    });\n    model.organ$.subscribe((organ) => {\n      this.organSelected = organ.src !== '';\n      cdr.markForCheck();\n    });\n    this.sexByLabel$.subscribe((sex) => {\n      this.setSexFromLabel(sex);\n      cdr.markForCheck();\n    });\n    dialogRef.disableClose = true;\n    this.page.organOptions$.subscribe((options) => {\n      this.organList = options as OrganInfo[];\n      cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Updates current sex selected\n   *\n   * @param label Sex selected\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.currentSex = label;\n    this.sexSelected = true;\n  }\n\n  /**\n   * Checks to see if a first and last name has been entered\n   *\n   * @param event Name input event\n   */\n  checkNameValid(event: Pick<Person, 'firstName' | 'lastName'>): void {\n    this.nameValid = event.firstName.length > 0 && event.lastName.length > 0;\n  }\n\n  /**\n   * Updates current organ selected\n   *\n   * @param organ Organ selected\n   */\n  organSelect(organ: OrganInfo): void {\n    this.currentOrgan = organ;\n    this.organSelected = true;\n  }\n\n  /**\n   * Handles button click\n   *\n   * @param [event] The click event\n   * @returns  Returns nothing is no organ is selected\n   */\n  registerButtonClick(event?: MouseEvent): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.organSelected || !this.nameValid) {\n      return;\n    }\n    this.closeDialog();\n  }\n\n  /**\n   * Sets registrationSelected to true when a registration is uploaded\n   */\n  handleRegistrationSelect() {\n    this.registrationSelected = true;\n  }\n\n  /**\n   * Closes the dialog and sets the correct sex and organ in the model state\n   * Sets block to default position and rotation if user didn't select a registration\n   * Updates page state to signal registration has started\n   */\n  closeDialog(): void {\n    this.model.setSex(this.currentSex === 'Female' ? 'female' : 'male');\n    this.model.setOrgan(this.currentOrgan);\n    if (!this.registrationSelected) {\n      this.model.setOrganDefaults();\n    }\n    this.dialogRef.close(true);\n    this.page.registrationStarted();\n  }\n}\n","<div class=\"modal\">\n  <div class=\"title\">Start Registration</div>\n  <ccf-registration-metadata (registrationSelected)=\"handleRegistrationSelect()\"></ccf-registration-metadata>\n  <button\n    [class.disabled]=\"!organSelected || !nameValid || !orcidValid\"\n    mat-button\n    class=\"registration-button\"\n    (click)=\"registerButtonClick($event)\"\n    [matTooltip]=\"!organSelected || !nameValid ? 'Required: Enter first and last name, and select an organ' : ''\"\n  >\n    Continue\n  </button>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { RegistrationMetadataModule } from '../../../shared/components/registration-metadata/registration-metadata.module';\nimport { RegistrationContentComponent } from './registration-content.component';\n\n@NgModule({\n  declarations: [RegistrationContentComponent],\n  imports: [CommonModule, MatTooltipModule, RegistrationMetadataModule, MatButtonModule],\n  exports: [RegistrationContentComponent],\n})\nexport class RegistrationContentModule {}\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { GlobalConfig } from '../../../core/services/config/config';\nimport { ModelState } from '../../../core/store/model/model.state';\nimport { PageState } from '../../../core/store/page/page.state';\nimport { ReferenceDataState } from '../../../core/store/reference-data/reference-data.state';\nimport { RegistrationContentComponent } from '../registration-content/registration-content.component';\n\n/**\n * Registration modal that appears on startup\n */\n@Component({\n  selector: 'ccf-registration-modal',\n  templateUrl: './registration-modal.component.html',\n})\nexport class RegistrationModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-modal';\n\n  /** Checks if registration dialog has been opened */\n  dialogOpen = false;\n\n  /**\n   * Creates an instance of registration modal component.\n   *\n   * @param dialog Dialog for the modal\n   */\n  constructor(\n    public dialog: MatDialog,\n    private readonly page: PageState,\n    private readonly model: ModelState,\n    private readonly referenceData: ReferenceDataState,\n    private readonly globalConfig: GlobalConfigState<GlobalConfig>,\n  ) {}\n\n  /**\n   * Opens the dialog on startup (but not if cancel registration callback is set)\n   */\n  ngOnInit(): void {\n    combineLatest([this.page.state$, this.model.state$, this.referenceData.state$, this.globalConfig.state$])\n      .pipe(\n        tap(([page, model, data, global]) => {\n          if (this.dialogOpen) {\n            return;\n          }\n          if (global.editRegistration) {\n            return;\n          }\n          if (Object.keys(data.organIRILookup).length === 0) {\n            return;\n          }\n          if (page.user.firstName !== '' && page.user.lastName !== '' && model.organ.src !== '') {\n            return;\n          }\n          this.dialogOpen = true;\n          this.openDialog();\n        }),\n      )\n      .subscribe();\n  }\n\n  /**\n   * Opens dialog\n   */\n  openDialog(): void {\n    this.dialog.open(RegistrationContentComponent, {\n      autoFocus: false,\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RegistrationContentModule } from '../registration-content/registration-content.module';\nimport { RegistrationModalComponent } from './registration-modal.component';\n\n@NgModule({\n  declarations: [RegistrationModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, RegistrationContentModule],\n  exports: [RegistrationModalComponent],\n})\nexport class RegistrationModalModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnChanges, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { MetaData } from '../../../core/models/meta-data';\nimport { PageState } from '../../../core/store/page/page.state';\nimport { ReviewModalComponent } from '../review-modal/review-modal.component';\n\n/**\n * Component to launch the ReviewModal component.\n */\n@Component({\n  selector: 'ccf-review-button',\n  templateUrl: './review-button.component.html',\n  styleUrls: ['./review-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewButtonComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-button';\n\n  /**\n   * Input to set whether the component should be in register (true) or download (false) mode\n   */\n  @Input() registrationCallbackSet = true;\n\n  /**\n   * Input object of information to display in the modal\n   */\n  @Input() metaData: MetaData = [];\n\n  /**\n   * Whether or not the app is currently displaying errors\n   * Decides how the button should be styled\n   */\n  @Input() displayErrors = true;\n\n  /**\n   * Whether or not all the necessary data has been inputted from the user.\n   */\n  @Input() userValid = false;\n\n  /**\n   * Output that emits when the modal's register button was clicked\n   */\n  @Output() readonly registerData = new EventEmitter<void>();\n\n  /**\n   * Turns on the 'error mode' for the application.\n   * Used to begin showing the user what they need to\n   * do to be able to register / download.\n   */\n  @Output() readonly enterErrorMode = new EventEmitter<void>();\n\n  /**\n   * Decides whether or not to let the user open the registration / download modal\n   */\n  registrationIsValid = false;\n\n  /**\n   * Creates an instance of review button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param ga Analytics service\n   */\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly ga: GoogleAnalyticsService,\n    readonly page: PageState,\n  ) {}\n\n  /**\n   * Updates the value of registrationIsValid based on the\n   * meta data.\n   */\n  ngOnChanges(): void {\n    const organ = this.metaDataLookup('Reference Organ Name');\n    const dimensions = this.metaDataLookup('Tissue Block Dimensions (mm)');\n    const pos = this.metaDataLookup('Tissue Block Position (mm)');\n    const tags = this.metaDataLookup('Anatomical Structure Tags');\n    this.registrationIsValid = this.userValid && [organ, dimensions, pos, tags].every((value) => value !== '');\n  }\n\n  /**\n   * Decides whether or not the download / register button should\n   * be disabled.\n   */\n  get disabled(): boolean {\n    return !this.registrationIsValid;\n  }\n\n  /**\n   * Gets value from metadata field\n   * @param field Name of field\n   * @returns Metadata value\n   */\n  private metaDataLookup(field: string): string | undefined {\n    return this.metaData.find((data) => data.label === field)?.value;\n  }\n\n  /**\n   * Handles the click action for the register button.\n   */\n  registerButtonClick(event?: MouseEvent): false {\n    if (event) {\n      event.preventDefault();\n    }\n    this.enterErrorMode.emit();\n    if (this.registrationIsValid) {\n      this.ga.event('review_start', 'review_button');\n      this.launchReviewModal();\n    }\n    return false;\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchReviewModal(): void {\n    this.page.patchState({ registrationStarted: false });\n    const dialogRef = this.dialog.open(ReviewModalComponent, {\n      panelClass: 'modal-animated',\n      width: '60rem',\n      data: {\n        registrationCallbackSet: this.registrationCallbackSet,\n        metaData: this.metaData,\n      },\n    });\n\n    dialogRef.afterClosed().subscribe((data) => {\n      this.page.registrationStarted();\n      if (data) {\n        this.ga.event('register', 'review_button');\n        this.registerData.emit();\n      }\n    });\n  }\n}\n","<button\n  [class.disabled]=\"disabled\"\n  mat-button\n  class=\"review-button\"\n  (click)=\"registerButtonClick($event)\"\n  [matTooltip]=\"\n    disabled\n      ? 'Required: Enter valid user info, select an organ and position tissue block inside organ.'\n      : 'Review registration and submit/download.'\n  \"\n>\n  {{ registrationCallbackSet ? 'Review and Register' : 'Review and Download' }}\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ReviewModalModule } from '../review-modal/review-modal.module';\nimport { ReviewButtonComponent } from './review-button.component';\n\n@NgModule({\n  declarations: [ReviewButtonComponent],\n  imports: [CommonModule, ReviewModalModule, MatButtonModule, MatTooltipModule],\n  exports: [ReviewButtonComponent],\n})\nexport class ReviewButtonModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef<ReviewModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData,\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n","<div class=\"ccf-about wrapper\">\n  <div class=\"container\">\n    <div class=\"close\">\n      <mat-icon class=\"material-icons close-icon\" (click)=\"close()\">clear</mat-icon>\n    </div>\n    <div class=\"content\">\n      <h2 class=\"title\" mat-dialog-title>Registration Review</h2>\n\n      <mat-dialog-content class=\"mat-typography\">\n        <div class=\"display-fields\">\n          <div class=\"field\" *ngFor=\"let data of metaData\">\n            <div class=\"label\">{{ data.label }}</div>\n            <div class=\"data\">{{ data.value }}</div>\n          </div>\n        </div>\n      </mat-dialog-content>\n\n      <div class=\"footer\">\n        <button mat-button class=\"download-button\" (click)=\"dialogRef.close(true)\">\n          {{ registrationCallbackSet ? 'REGISTER' : 'DOWNLOAD REGISTRATION DATA' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReviewModalComponent } from './review-modal.component';\n\n@NgModule({\n  declarations: [ReviewModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatButtonModule],\n  exports: [ReviewModalComponent],\n})\nexport class ReviewModalModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\nimport { AnatomicalStructureTagState } from '../../core/store/anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\n\n/**\n * The right sidebar\n */\n@Component({\n  selector: 'ccf-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RightSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-right-sidebar';\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  @Output() readonly registrationExpanded = new EventEmitter<boolean>();\n\n  /**\n   * Creates an instance of right sidebar component.\n   *\n   * @param model Model state service\n   * @param registration Registration state service\n   * @param page The page state\n   * @param astags The anatomical structure tags state\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n    readonly page: PageState,\n    readonly astags: AnatomicalStructureTagState,\n  ) {}\n}\n","<div class=\"info-button-container\">\n  <ccf-info-button\n    videoID=\"j4f9_xdBrK0\"\n    infoTitle=\"CCF Registration User Interface\"\n    documentationUrl=\"assets/docs/README.md\"\n  ></ccf-info-button>\n</div>\n<div class=\"scroll-wrapper\">\n  <div class=\"container\">\n    <mat-expansion-panel\n      class=\"registration-metadata-panel\"\n      (opened)=\"registrationExpanded.emit(true)\"\n      (closed)=\"registrationExpanded.emit(false)\"\n    >\n      <mat-expansion-panel-header class=\"header\">\n        <mat-panel-title matTooltip=\"\">Registration Metadata</mat-panel-title>\n      </mat-expansion-panel-header>\n\n      <ccf-registration-metadata></ccf-registration-metadata>\n    </mat-expansion-panel>\n\n    <mat-divider></mat-divider>\n\n    <mat-expansion-panel class=\"tissue-block-controls-panel\" [expanded]=\"true\">\n      <mat-expansion-panel-header class=\"header\">\n        <mat-panel-title matTooltip=\"\">Tissue Block Controls</mat-panel-title>\n      </mat-expansion-panel-header>\n\n      <ccf-block-size-input [blockSize]=\"(model.blockSize$ | async)!\" (blockSizeChange)=\"model.setBlockSize($event)\">\n      </ccf-block-size-input>\n\n      <ccf-slices-input\n        [slicesConfig]=\"$any(model.slicesConfig$ | async)\"\n        (slicesConfigChange)=\"model.setSlicesConfig($event)\"\n      >\n      </ccf-slices-input>\n\n      <ccf-rotation-slider [rotation]=\"$any(model.rotation$ | async)\" (rotationChange)=\"model.setRotation($event)\">\n      </ccf-rotation-slider>\n    </mat-expansion-panel>\n\n    <mat-divider></mat-divider>\n    <mat-expansion-panel class=\"tags-container\" [expanded]=\"true\">\n      <mat-expansion-panel-header class=\"header\">\n        <mat-panel-title matTooltip=\"Review tags generated via collision detection. Add or delete tags as needed.\"\n          >Anatomical Structure Tags</mat-panel-title\n        >\n      </mat-expansion-panel-header>\n\n      <ccf-tag-search [search]=\"astags.searchExternal\" (added)=\"astags.addTags($event)\"> </ccf-tag-search>\n\n      <ccf-tag-list\n        *ngIf=\"(model.organ$ | async)?.name; else tagListPlaceholder\"\n        class=\"tag-list\"\n        [tags]=\"(astags.tags$ | async) ?? []\"\n        (tagRemoved)=\"astags.removeTag($event)\"\n      >\n      </ccf-tag-list>\n      <ng-template #tagListPlaceholder> </ng-template>\n\n      <div class=\"legend\">\n        <span class=\"dot assigned\"></span>\n        <span class=\"text assigned\">Assigned</span>\n        <span class=\"dot added\"></span>\n        <span class=\"text added\">Added</span>\n      </div>\n    </mat-expansion-panel>\n    <mat-divider></mat-divider>\n\n    <div class=\"filler\"></div>\n\n    <ccf-review-button\n      class=\"review-button\"\n      [registrationCallbackSet]=\"(page.registrationCallbackSet$ | async) ?? false\"\n      [displayErrors]=\"(registration.displayErrors$ | async) ?? false\"\n      [userValid]=\"(registration.valid$ | async) ?? false\"\n      [metaData]=\"(registration.metadata$ | async) ?? []\"\n      (registerData)=\"registration.register()\"\n      (enterErrorMode)=\"registration.setDisplayErrors(!registration.isValid)\"\n    >\n    </ccf-review-button>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InfoButtonModule } from 'ccf-shared';\n\nimport { BlockSizeInputModule } from '../../shared/components/block-size-input/block-size-input.module';\nimport { RegistrationMetadataModule } from '../../shared/components/registration-metadata/registration-metadata.module';\nimport { RotationSliderModule } from '../../shared/components/rotation-slider/rotation-slider.module';\nimport { SlicesInputModule } from '../../shared/components/slices-input/slices-input.module';\nimport { TagListModule } from '../../shared/components/tag-list/tag-list.module';\nimport { TagSearchModule } from '../../shared/components/tag-search/tag-search.module';\nimport { ReviewButtonModule } from '../review/review-button/review-button.module';\nimport { RightSidebarComponent } from './right-sidebar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatExpansionModule,\n    MatDividerModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatTooltipModule,\n\n    BlockSizeInputModule,\n    ReviewButtonModule,\n    RotationSliderModule,\n    SlicesInputModule,\n    TagListModule,\n    TagSearchModule,\n    InfoButtonModule,\n    RegistrationMetadataModule,\n  ],\n  declarations: [RightSidebarComponent],\n  exports: [RightSidebarComponent],\n})\nexport class RightSidebarModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10,\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter<BlockSize>();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input Event from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: KeyboardEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key as never]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n","<div class=\"header\" matTooltip=\"Set the tissue block width, height and depth (dimensions)\">\n  <span class=\"text title\">Tissue Block Dimensions (mm)</span>\n  <div class=\"filler\"></div>\n  <mat-icon\n    matRipple\n    [matRippleCentered]=\"true\"\n    [matRippleUnbounded]=\"true\"\n    class=\"icon refresh\"\n    (click)=\"refreshBlockSize()\"\n    >refresh</mat-icon\n  >\n</div>\n\n<div class=\"size-inputs\">\n  <mat-form-field class=\"field\">\n    <mat-label class=\"text form-input-label\">Width (X)</mat-label>\n    <input\n      matInput\n      class=\"input\"\n      type=\"number\"\n      placeholder=\"\"\n      [value]=\"blockSize.x\"\n      (keyup)=\"updateBlockSizes($event, 'x')\"\n      matTooltip=\"Enter tissue block width.\"\n    />\n  </mat-form-field>\n\n  <mat-form-field class=\"field\">\n    <mat-label class=\"text form-input-label\">Height (Y)</mat-label>\n    <input\n      matInput\n      class=\"input\"\n      type=\"number\"\n      placeholder=\"\"\n      [value]=\"blockSize.y\"\n      (keyup)=\"updateBlockSizes($event, 'y')\"\n      matTooltip=\"Enter tissue block height.\"\n    />\n  </mat-form-field>\n\n  <mat-form-field class=\"field\">\n    <mat-label class=\"text form-input-label\">Depth (Z)</mat-label>\n    <input\n      matInput\n      class=\"input\"\n      type=\"number\"\n      placeholder=\"\"\n      [value]=\"blockSize.z\"\n      (keyup)=\"updateBlockSizes($event, 'z')\"\n      matTooltip=\"Enter tissue block depth.\"\n    />\n  </mat-form-field>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { BlockSizeInputComponent } from './block-size-input.component';\n\n@NgModule({\n  imports: [CommonModule, MatInputModule, MatIconModule, MatRippleModule, MatTooltipModule, MatFormFieldModule],\n  declarations: [BlockSizeInputComponent],\n  exports: [BlockSizeInputComponent],\n})\nexport class BlockSizeInputModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  HostBinding,\n  OnDestroy,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private readonly drawers!: QueryList<DrawerComponent>;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private readonly content1!: QueryList<ContentComponent>;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private readonly content2!: QueryList<ContentComponent>;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private readonly channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(\n    messageService: MessageService,\n    private readonly cdr: ChangeDetectorRef,\n  ) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(\n      this.channel.getMessages().subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers,\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content,\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter((drawer) => drawer.position === 'start');\n    const endDrawers = drawers.filter((drawer) => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n","<ng-content select=\"ccf-drawer\"></ng-content>\n\n<ng-content select=\"ccf-drawer-content\"></ng-content>\n<ccf-drawer-content *ngIf=\"!hasWrappedContent\">\n  <ng-content></ng-content>\n</ccf-drawer-content>\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false <=> true', animate('1s')),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService, cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(\n      messages.subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean, width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = !!(startExpanded || endExpanded);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [\n    {\n      provide: MESSAGE_SERVICE_CONFIG,\n      useValue: MESSAGE_SERVICE_DEFAULT_CONFIG,\n    },\n  ],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n})\nexport class DrawerModule {}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0,\n  },\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private readonly deferred = new Promise<void>((resolve) => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve!: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise<void> {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(\n        'open, open-instant',\n        style({\n          transform: 'none',\n        }),\n      ),\n      state('closed', style({})),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed <=> open, open-instant => closed', animate('.5s ease-in-out')),\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state(\n        'half',\n        style({\n          width: 'calc(50% - {{ margin }}px)',\n        }),\n        EXPAND_COLLAPSE_PARAMS_DEFAULT,\n      ),\n      state(\n        'extended',\n        style({\n          width: 'calc(100% - {{ width }}px - {{ margin }}px)',\n        }),\n        EXPAND_COLLAPSE_PARAMS_DEFAULT,\n      ),\n      state(\n        'full',\n        style({\n          width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)',\n        }),\n        EXPAND_COLLAPSE_PARAMS_DEFAULT,\n      ),\n\n      transition('* <=> *', animate('.5s ease-in-out')),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input() // eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input()\n  @HostBinding('class.ccf-drawer-opened')\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input()\n  @HostBinding('class.ccf-drawer-expanded')\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter<boolean>(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter<boolean>(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter<void>(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose') openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')\n  get expandedStateObj(): unknown {\n    return {\n      value: this.expandedState2,\n      params: {\n        width: this.width,\n        margin: this.measuredMargin,\n        margin2: this.margin2,\n      },\n    };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private readonly initialized = new InitializationState();\n  /** Connected message channel. */\n  private readonly channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(\n    messageService: MessageService,\n    cdr: ChangeDetectorRef,\n    private readonly element: ElementRef<HTMLElement>,\n  ) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(\n      this.channel.getMessages().subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done')\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done')\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise<void> {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin,\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      const other = msg.source as DrawerComponent;\n      this.syncExpanded(other);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n","<div class=\"cff-drawer-inner-container\">\n  <ng-content></ng-content>\n</div>\n","import {\n  Message as GenericMessage,\n  MessageChannel as GenericMessageChannel,\n  MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage<Payload>;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel<Payload>;\n/** Specific service type. */\nexport type MessageService = GenericMessageService<Payload>;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      [expand, collapse] = [collapse, expand];\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(\n    private readonly drawer: DrawerComponent,\n    messageService: MessageService,\n    private readonly cdr: ChangeDetectorRef,\n  ) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(\n      channel.getMessagesFromSource(drawer).subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n","<mat-icon\n  [class.hidden]=\"icon === 'arrow_left'\"\n  class=\"expand-collapse-icon\"\n  aria-hidden=\"false\"\n  aria-label=\"Close side drawer\"\n  (click)=\"toggle()\"\n>\n  arrow_right\n</mat-icon>\n<mat-icon\n  [class.hidden]=\"icon === 'arrow_right'\"\n  class=\"expand-collapse-icon\"\n  aria-hidden=\"false\"\n  aria-label=\"Close side drawer\"\n  (click)=\"toggle()\"\n>\n  arrow_left\n</mat-icon>\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ExtractionSet } from '../../../core/models/extraction-set';\n\n/**\n * Dropdown for selecting the extraction set\n */\n@Component({\n  selector: 'ccf-extraction-set-dropdown',\n  templateUrl: './extraction-set-dropdown.component.html',\n  styleUrls: ['./extraction-set-dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExtractionSetDropdownComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-extraction-set-dropdown';\n\n  /**\n   * Emits the current extraction set when selected\n   */\n  @Output() readonly setChange = new EventEmitter<ExtractionSet>();\n\n  /**\n   * Extraction sets to be displayed as options\n   */\n  @Input() sets!: ExtractionSet[];\n\n  /**\n   * The currently selected extraction set\n   */\n  selected!: ExtractionSet;\n\n  /**\n   * Creates an instance of extraction set dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Sets the selected extraction set and emits the extraction set\n   *\n   * @param value The extraction set selected\n   */\n  extractionSetChanged(value: ExtractionSet): void {\n    this.selected = value;\n    this.ga.event('selected_extraction_set_change', 'extraction_set_dropdown', value.name);\n    this.setChange.emit(value);\n  }\n\n  /**\n   * Determines whether there is more than one extraction set\n   *\n   * @returns true if there is more than one extraction set\n   */\n  isMultiple(): boolean {\n    return this.sets.length > 1;\n  }\n}\n","<mat-form-field class=\"dropdown-form-field\" *ngIf=\"isMultiple()\" appearance=\"fill\">\n  <mat-label class=\"extraction-dropdown-label\">Landmark Set</mat-label>\n  <mat-select\n    disableOptionCentering=\"true\"\n    (selectionChange)=\"extractionSetChanged($event.value)\"\n    [value]=\"sets[0]\"\n    panelClass=\"extraction-set-panel\"\n  >\n    <mat-option class=\"extraction-set-options\" *ngFor=\"let set of sets\" [value]=\"set\">\n      {{ set.name }} ({{ set.sites.length }})\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ExtractionSetDropdownComponent } from './extraction-set-dropdown.component';\n\n@NgModule({\n  imports: [CommonModule, MatSelectModule],\n  declarations: [ExtractionSetDropdownComponent],\n  exports: [ExtractionSetDropdownComponent],\n})\nexport class ExtractionSetDropdownModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n@Component({\n  selector: 'ccf-json-file-reader',\n  templateUrl: './json-file-reader.component.html',\n  styleUrls: ['./json-file-reader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class JsonFileReaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-json-file-reader';\n\n  /** File Input element, used to manually trigger the click event. */\n  @ViewChild('fileInput') fileInput!: ElementRef<HTMLElement>;\n\n  /** Allows the label on the upload button to be customized. */\n  @Input() label = 'Upload';\n\n  /** Emits the json object of any files uploaded. */\n  @Output() readonly parsedJson = new EventEmitter<unknown>();\n\n  /**\n   * Creates an instance of json file reader component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Method used to trigger the file input element's click handler\n   * from the placeholder button used for styling purposes.\n   */\n  triggerFileInput(): void {\n    const fileInputElement: HTMLElement = this.fileInput.nativeElement;\n    fileInputElement.click();\n  }\n\n  /**\n   * Takes in a json file and emits the parsed json object.\n   *\n   * @param event file input event\n   */\n  handleFile(event: Event): void {\n    const inputTarget = event.target as HTMLInputElement;\n    if (!inputTarget.files) {\n      return;\n    }\n\n    const file = inputTarget.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const json = JSON.parse(fileReader.result as string) as unknown;\n      this.ga.event('json_file_load_end', 'json_file_reader');\n      this.parsedJson.emit(json);\n    };\n\n    this.ga.event('json_file_load_start', 'json_file_reader');\n    fileReader.readAsText(file);\n  }\n}\n","<button mat-button class=\"upload-button\" (click)=\"triggerFileInput()\">{{ label }}</button>\n<input\n  #fileInput\n  (change)=\"handleFile($event)\"\n  type=\"file\"\n  accept=\"application/JSON\"\n  name=\"fileInput\"\n  id=\"fileInput\"\n  style=\"display: none\"\n/>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonFileReaderComponent } from './json-file-reader.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [JsonFileReaderComponent],\n  imports: [CommonModule, MatButtonModule],\n  exports: [JsonFileReaderComponent],\n})\nexport class JsonFileReaderModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Generic toggle slider component\n */\n@Component({\n  selector: 'ccf-labeled-slide-toggle',\n  templateUrl: './labeled-slide-toggle.component.html',\n  styleUrls: ['./labeled-slide-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LabeledSlideToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-labeled-slide-toggle';\n\n  /**\n   * The two selection options to be toggled\n   */\n  @Input() labels: [string, string] = ['Left', 'Right'];\n\n  /**\n   * Input value for toggle slider\n   */\n  @Input() value = 'Left';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Emits the datatype with the currently selected option\n   */\n  @Output() readonly valueChange = new EventEmitter<string>();\n\n  /**\n   * Creates an instance of labeled slide toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Determines if left toggle option is selected\n   */\n  get left(): boolean {\n    const { value, labels } = this;\n    return value !== labels[1];\n  }\n\n  /**\n   * Updates and emits the currently selected option\n   *\n   * @param selection The current toggle state (true=left, false=right)\n   */\n  updateToggle(selection: boolean): void {\n    this.value = selection ? this.labels[0] : this.labels[1];\n    this.ga.event('slide_toggle_toggled', 'slide_toggle', this.value);\n    this.valueChange.emit(this.value);\n  }\n}\n","<span\n  class=\"slide-label\"\n  [class.disabled]=\"disabled\"\n  [class.highlighted]=\"left\"\n  (click)=\"left ? '' : toggle.toggle(); updateToggle(true)\"\n>\n  {{ labels[0] }}\n</span>\n\n<mat-slide-toggle\n  [disabled]=\"disabled\"\n  [checked]=\"!left\"\n  hideIcon\n  (change)=\"updateToggle(!$event.checked)\"\n  class=\"slider\"\n  #toggle\n>\n</mat-slide-toggle>\n\n<span\n  class=\"slide-label\"\n  [class.disabled]=\"disabled\"\n  [class.highlighted]=\"!left\"\n  (click)=\"!left ? '' : toggle.toggle(); updateToggle(false)\"\n>\n  {{ labels[1] }}\n</span>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { LabeledSlideToggleComponent } from './labeled-slide-toggle.component';\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule],\n  declarations: [LabeledSlideToggleComponent],\n  exports: [LabeledSlideToggleComponent],\n})\nexport class LabeledSlideToggleModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's middle name\n   */\n  middleName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the middle name input field.\n   */\n  middleNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n    this.middleNameValidator.setValue(value?.middleName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    middleName: '',\n    lastName: '',\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter<UserName>();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: Event, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n","<mat-form-field class=\"field\" subscriptSizing=\"dynamic\">\n  <mat-label class=\"text form-input-label\">First Name </mat-label>\n  <input\n    matInput\n    class=\"input\"\n    [value]=\"firstNameValidator.value\"\n    (input)=\"updateName($event, 'firstName')\"\n    matTooltip=\"Add your first name.\"\n    required\n    title=\"\"\n  />\n</mat-form-field>\n\n<mat-form-field class=\"field\" subscriptSizing=\"dynamic\">\n  <mat-label class=\"text form-input-label\">Middle Name </mat-label>\n  <input\n    matInput\n    class=\"input\"\n    [value]=\"middleNameValidator.value\"\n    (input)=\"updateName($event, 'middleName')\"\n    matTooltip=\"Add your middle name.\"\n  />\n</mat-form-field>\n\n<mat-form-field class=\"field\" subscriptSizing=\"dynamic\">\n  <mat-label class=\"text form-input-label\">Last Name </mat-label>\n  <input\n    matInput\n    class=\"input\"\n    [value]=\"lastNameValidator.value\"\n    (input)=\"updateName($event, 'lastName')\"\n    matTooltip=\"Add your last name.\"\n    required\n    title=\"\"\n  />\n</mat-form-field>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NameInputComponent } from './name-input.component';\n\n@NgModule({\n  imports: [CommonModule, MatInputModule, FormsModule, ReactiveFormsModule, MatTooltipModule],\n  declarations: [NameInputComponent],\n  exports: [NameInputComponent],\n})\nexport class NameInputModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { ModelState } from '../../../core/store/model/model.state';\nimport { PageState, Person } from '../../../core/store/page/page.state';\nimport { RegistrationState } from '../../../core/store/registration/registration.state';\n\n/**\n * Right side registration menu\n */\n@Component({\n  selector: 'ccf-registration-metadata',\n  templateUrl: './registration-metadata.component.html',\n  styleUrls: ['./registration-metadata.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegistrationMetadataComponent {\n  /** Emits when user has uploaded registration */\n  @Output() readonly registrationSelected = new EventEmitter<void>();\n\n  /** Checks if first and last name has been entered */\n  nameValid!: boolean;\n\n  /** Orcid URI converted to regular id */\n  orcId?: string;\n\n  /** Text to inform user if a registration file has been uploaded */\n  uploadText!: string;\n\n  /** Form control for validating orcid id */\n  orcidControl = new FormControl('', [Validators.pattern('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$')]);\n\n  /**\n   * Creates an instance of registration metadata component.\n   * @param model Model state\n   * @param registration Registration state\n   * @param page Page state\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n    readonly page: PageState,\n  ) {\n    page.user$.subscribe((user) => {\n      this.checkNameValid(user);\n      this.orcId = page.uriToOrcid(user.orcidId);\n    });\n    registration.state$.subscribe((reg) => {\n      this.uploadText = reg.initialRegistration ? 'File(s) uploaded' : 'No file(s) uploaded';\n    });\n  }\n\n  /**\n   * Error message to inform user if orcid is invalid\n   * @returns Error message\n   */\n  getErrorMessage(): string {\n    return this.orcidControl.hasError('pattern') ? 'Not a valid ORCID' : '';\n  }\n\n  /**\n   * Updates orcid value\n   * @param value Orcid value entered\n   */\n  updateOrcid(value: string): void {\n    this.page.setOrcidId(value);\n  }\n\n  /**\n   * Emits registrationSelected and calls editRegistration in state\n   * @param event Registration uploaded\n   */\n  handleRegistrationUpload(reg: SpatialEntityJsonLd): void {\n    this.registrationSelected.emit();\n    this.registration.editRegistration(reg);\n  }\n\n  /**\n   * Checks to see if a first and last name has been entered\n   * @param event Name input event\n   */\n  checkNameValid(event: Pick<Person, 'firstName' | 'lastName'>): void {\n    this.nameValid = event.firstName.length > 0 && event.lastName.length > 0;\n  }\n\n  /**\n   * Updates current sex selected\n   * @param label Sex selected\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.model.setSex(label.toLowerCase() as 'male' | 'female');\n  }\n}\n","<div class=\"author-section\">\n  <h2 class=\"section-title\">Author Data</h2>\n\n  <ccf-name-input [name]=\"$any(page.user$ | async)\" (nameChange)=\"page.setUserName($event); checkNameValid($event)\">\n  </ccf-name-input>\n\n  <mat-form-field class=\"orcid-input\">\n    <mat-label>ORCID identifier (optional)</mat-label>\n    <input\n      matInput\n      class=\"input\"\n      [value]=\"orcId\"\n      [formControl]=\"orcidControl\"\n      (input)=\"updateOrcid($any($event.target).value)\"\n      matTooltip=\"Add ORCID id.\"\n      maxlength=\"19\"\n    />\n    <mat-error *ngIf=\"orcidControl.invalid\">{{ getErrorMessage() }}</mat-error>\n  </mat-form-field>\n</div>\n\n<div class=\"donor-section\">\n  <h2 class=\"section-title\">Donor Data</h2>\n\n  <div class=\"sex-toggle\">\n    <div class=\"label\">Donor Sex:</div>\n    <mat-radio-group class=\"radio-group\" [value]=\"model.sex$ | async\" (change)=\"setSexFromLabel($event.value)\">\n      <mat-radio-button class=\"radio\" value=\"male\">Male</mat-radio-button>\n      <mat-radio-button class=\"radio\" value=\"female\">Female</mat-radio-button>\n    </mat-radio-group>\n  </div>\n\n  <div class=\"organ-selector\">\n    <div class=\"label\">Select an organ:</div>\n    <mat-form-field class=\"form-field\" appearance=\"fill\" subscriptSizing=\"dynamic\">\n      <div *ngIf=\"(model.organ$ | async) === undefined\" class=\"label\">Organs</div>\n      <mat-select\n        disableOptionCentering=\"true\"\n        panelClass=\"organ-select\"\n        [value]=\"model.organ$ | async\"\n        (selectionChange)=\"model.setOrgan($event.value); model.setOrganDefaults()\"\n        hideSingleSelectionIndicator=\"true\"\n      >\n        <mat-option class=\"organ-select-option\" *ngFor=\"let organ of page.organOptions$ | async\" [value]=\"organ\">\n          {{ organ.name }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n  <div class=\"upload-registration\">\n    <div class=\"label\">Upload previous registration data (optional):</div>\n\n    <ccf-json-file-reader\n      (parsedJson)=\"handleRegistrationUpload($any($event))\"\n      label=\"Upload\"\n      matTooltip=\"Upload a preexisting registration\"\n    ></ccf-json-file-reader>\n\n    <div>{{ uploadText }}</div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { JsonFileReaderModule } from '../json-file-reader/json-file-reader.module';\nimport { NameInputModule } from '../name-input/name-input.module';\nimport { RegistrationMetadataComponent } from './registration-metadata.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    NameInputModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    JsonFileReaderModule,\n  ],\n  declarations: [RegistrationMetadataComponent],\n  exports: [RegistrationMetadataComponent],\n})\nexport class RegistrationMetadataModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0,\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /** Input that allows the rotation to be changed from outside of the component */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /** Output that emits the new rotation whenever it is changed from within the component */\n  @Output() readonly rotationChange = new EventEmitter<Rotation>();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * If rotation value is < -180 or > 180, set to -180 or 180\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    const updatedNewRotation = +newRotation > 180 ? 180 : +newRotation < -180 ? -180 : +newRotation;\n    this.rotation = { ...this.rotation, [axis]: +updatedNewRotation };\n    this.ga.event('rotation_update', 'rotation_slider', axis, +updatedNewRotation);\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(dimension: 'x' | 'y' | 'z'): void {\n    this.rotation = { ...this.rotation, [dimension]: 0 };\n    this.ga.event('rotation_reset', 'rotation_slider');\n    this.rotationChange.emit(this.rotation);\n  }\n}\n","<div class=\"header\">\n  <span class=\"text title\" matTooltip=\"Use sliders below to rotate tissue block for registration\"\n    >Tissue Block Rotation</span\n  >\n  <div class=\"filler\"></div>\n  <div class=\"refresh-button-container\">\n    <mat-icon\n      matRipple\n      [matRippleCentered]=\"true\"\n      [matRippleUnbounded]=\"true\"\n      class=\"icon reset\"\n      (click)=\"resetRotation('x'); resetRotation('y'); resetRotation('z')\"\n      >refresh</mat-icon\n    >\n  </div>\n</div>\n\n<div class=\"slider-box red\">\n  <span class=\"text label\">X</span>\n  <div class=\"slider-container\">\n    <mat-slider class=\"slider\" [max]=\"180\" [min]=\"-180\" disableRipple discrete>\n      <input\n        class=\"slider-x\"\n        matSliderThumb\n        [value]=\"rotation.x\"\n        (input)=\"changeRotation(sliderX.value, 'x')\"\n        #sliderX\n      />\n    </mat-slider>\n  </div>\n  <mat-form-field>\n    <input\n      matInput\n      class=\"input\"\n      type=\"number\"\n      [value]=\"rotation.x\"\n      [min]=\"-180\"\n      [max]=\"180\"\n      (change)=\"changeRotation($any($event.target).value, 'x')\"\n    />\n  </mat-form-field>\n</div>\n\n<div class=\"slider-box green\">\n  <span class=\"text label\">Y</span>\n  <div class=\"slider-container\">\n    <mat-slider class=\"slider\" [max]=\"180\" [min]=\"-180\" disableRipple discrete>\n      <input\n        class=\"slider-y\"\n        matSliderThumb\n        [value]=\"rotation.y\"\n        (input)=\"changeRotation(sliderY.value, 'y')\"\n        #sliderY\n      />\n    </mat-slider>\n  </div>\n  <mat-form-field>\n    <input\n      matInput\n      class=\"input\"\n      type=\"number\"\n      [value]=\"rotation.y\"\n      [min]=\"-180\"\n      [max]=\"180\"\n      (change)=\"changeRotation($any($event.target).value, 'y')\"\n    />\n  </mat-form-field>\n</div>\n\n<div class=\"slider-box blue\">\n  <span class=\"text label\">Z</span>\n  <div class=\"slider-container\">\n    <mat-slider class=\"slider\" [max]=\"180\" [min]=\"-180\" disableRipple discrete>\n      <input\n        class=\"slider-z\"\n        matSliderThumb\n        [value]=\"rotation.z\"\n        (input)=\"changeRotation(sliderZ.value, 'z')\"\n        #sliderZ\n      />\n    </mat-slider>\n  </div>\n  <mat-form-field>\n    <input\n      matInput\n      class=\"input\"\n      type=\"number\"\n      [value]=\"rotation.z\"\n      [min]=\"-180\"\n      [max]=\"180\"\n      (change)=\"changeRotation($any($event.target).value, 'z')\"\n    />\n  </mat-form-field>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RotationSliderComponent } from './rotation-slider.component';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [RotationSliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatFormFieldModule,\n  ],\n  exports: [RotationSliderComponent],\n})\nexport class RotationSliderModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN,\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter<SlicesConfig>();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input Event from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: KeyboardEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key as never]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n","<div class=\"header\">\n  <span class=\"text title\" matTooltip=\"Add thickness of tissue sections and the total number of sections\"\n    >Tissue Sections</span\n  >\n  <div class=\"filler\"></div>\n  <mat-icon\n    matRipple\n    [matRippleCentered]=\"true\"\n    [matRippleUnbounded]=\"true\"\n    class=\"icon refresh\"\n    (click)=\"refreshSlices()\"\n  >\n    refresh\n  </mat-icon>\n</div>\n\n<div class=\"slices-inputs\">\n  <mat-form-field class=\"field\">\n    <mat-label class=\"text form-input-label\">Thickness</mat-label>\n    <input\n      matInput\n      ccfNumbersOnly\n      class=\"input\"\n      type=\"number\"\n      [value]=\"slicesConfig.thickness\"\n      (keyup)=\"updateSlicesData($event, 'thickness')\"\n      matTooltip=\"Enter thickness of tissue sections\"\n    />\n    <div matSuffix class=\"suffix\" [class.show]=\"hasThicknessValue\">μm</div>\n  </mat-form-field>\n\n  <mat-form-field class=\"field\">\n    <mat-label class=\"text form-input-label\"># Sections</mat-label>\n    <input\n      matInput\n      ccfNumbersOnly\n      class=\"input\"\n      type=\"number\"\n      [value]=\"slicesConfig.numSlices\"\n      (keyup)=\"updateSlicesData($event, 'numSlices')\"\n      matTooltip=\"Enter total number of sections\"\n    />\n  </mat-form-field>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NumbersOnlyModule } from 'ccf-shared';\nimport { SlicesInputComponent } from './slices-input.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    MatTooltipModule,\n    NumbersOnlyModule,\n    MatFormFieldModule,\n  ],\n  declarations: [SlicesInputComponent],\n  exports: [SlicesInputComponent],\n})\nexport class SlicesInputModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { Tag } from '../../../core/models/anatomical-structure-tag';\n\n/**\n * A list of removable tags\n */\n@Component({\n  selector: 'ccf-tag-list',\n  templateUrl: './tag-list.component.html',\n  styleUrls: ['./tag-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TagListComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-tag-list';\n\n  /**\n   * The tags\n   */\n  @Input() tags!: Tag[];\n\n  /**\n   * Emits when a tag is removed\n   */\n  @Output() readonly tagRemoved = new EventEmitter<Tag>();\n\n  /**\n   * Emits the new array of tags when a tag has been removed\n   */\n  @Output() readonly tagsChange = new EventEmitter<Tag[]>();\n\n  /**\n   * Creates an instance of tag list component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Gets the unique identifier for a tag\n   *\n   * @param _index Unused\n   * @param tag A tag\n   * @returns An identifier\n   */\n  tagId(_index: number, tag: Tag): unknown {\n    return tag.id;\n  }\n\n  tagClasses(tag: Tag): string[] {\n    return tag.type === 'added' ? ['added'] : ['assigned'];\n  }\n\n  /**\n   * Removes a tag from the list\n   *\n   * @param tag Tag to remove\n   */\n  removeTag(tag: Tag): void {\n    this.tags = this.tags.filter((obj) => obj !== tag);\n    this.ga.event('tag_removed', 'tag_list', tag.label);\n    this.tagRemoved.emit(tag);\n    this.tagsChange.emit(this.tags);\n  }\n}\n","<mat-chip-listbox selectable=\"false\">\n  <mat-chip\n    *ngFor=\"let tag of tags; trackBy: tagId\"\n    removable\n    disableRipple\n    [class]=\"tagClasses(tag)\"\n    (removed)=\"removeTag(tag)\"\n  >\n    {{ tag.label }}\n    <mat-icon matChipRemove class=\"icon remove\">cancel</mat-icon>\n  </mat-chip>\n</mat-chip-listbox>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TagListComponent } from './tag-list.component';\n\n@NgModule({\n  imports: [CommonModule, MatChipsModule, MatIconModule],\n  declarations: [TagListComponent],\n  exports: [TagListComponent],\n})\nexport class TagListModule {}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { ObservableInput, Subject, from, interval } from 'rxjs';\nimport { catchError, map, switchMap, takeUntil, throttle } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../../core/models/anatomical-structure-tag';\n\n/** Default search results limit */\nconst DEFAULT_SEARCH_LIMIT = 5;\n/** Default search throttle time in ms */\nconst DEFAULT_SEARCH_THROTTLE = 100;\n/** Empty search result object */\nconst EMPTY_RESULT: TagSearchResult = { totalCount: 0, results: [] };\n\n/**\n * Component for searching, selecting, and adding tags.\n */\n@Component({\n  selector: 'ccf-tag-search',\n  templateUrl: './tag-search.component.html',\n  styleUrls: ['./tag-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TagSearchComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-tag-search';\n\n  /** Placeholder text */\n  @Input() placeholder = 'Add Anatomical Structures ...';\n\n  /** Search method */\n  @Input() search?: (text: string, limit: number) => ObservableInput<TagSearchResult>;\n\n  /** Maximum number of results to show */\n  @Input() searchLimit?: number;\n\n  /** Throttle time between search calls */\n  @Input() searchThrottle?: number;\n\n  /** Emits when tags are added */\n  @Output() readonly added = new EventEmitter<Tag[]>();\n\n  /** Element for close search button */\n  @ViewChild('closeSearch', { read: ElementRef, static: false }) closeSearch!: ElementRef<HTMLElement>;\n\n  /** Mapping for pluralizing the result total count */\n  readonly countMapping = {\n    /* eslint-disable-next-line @typescript-eslint/naming-convention */\n    '=1': '1 result',\n    other: '# results',\n  };\n\n  /** Search field controller */\n  readonly searchControl = new UntypedFormControl();\n\n  /** Search results */\n  searchResults = EMPTY_RESULT;\n\n  /** Object of currently checked search results */\n  checkedResults: Record<TagId, boolean> = {};\n\n  /** Whether results are shown */\n  resultsVisible = false;\n\n  /** Emits and completes when component is destroyed. Used to clean up observables. */\n  private readonly destroy$ = new Subject<void>();\n\n  /**\n   * Creates an instance of tag search component.\n   *\n   * @param el Element for this component\n   * @param ga Analytics service\n   * @param cdr Reference to change detector\n   */\n  constructor(\n    private readonly el: ElementRef<Node>,\n    private readonly ga: GoogleAnalyticsService,\n    cdr: ChangeDetectorRef,\n  ) {\n    this.searchControl.valueChanges\n      .pipe(\n        takeUntil(this.destroy$),\n        throttle(() => interval(this.searchThrottle ?? DEFAULT_SEARCH_THROTTLE), { leading: true, trailing: true }),\n        switchMap(this.executeSearch),\n      )\n      .subscribe((result) => {\n        this.searchResults = result;\n        this.checkedResults = this.getUpdatedCheckedResults(result);\n        cdr.markForCheck();\n      });\n  }\n\n  /**\n   * Cleans up component on destruction\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Extracts the tag identifier\n   *\n   * @param _index Unused\n   * @param tag A tag\n   * @returns The identifier corresponding to the tag\n   */\n  tagId(_index: number, tag: Tag): TagId {\n    return tag.id;\n  }\n\n  /**\n   * Determines whether any tags have been checked\n   *\n   * @returns true if any tag has been checked by the user\n   */\n  hasCheckedTags(): boolean {\n    return Object.values(this.checkedResults).some((v) => v);\n  }\n\n  /**\n   * Emits selected tags and resets the search and selections\n   */\n  addTags(): void {\n    const { searchControl, searchResults, checkedResults } = this;\n    const tags = searchResults.results.filter((tag) => checkedResults[tag.id]);\n\n    if (tags.length > 0) {\n      searchControl.reset();\n      this.searchResults = EMPTY_RESULT;\n      this.checkedResults = {};\n      this.ga.event('tags_added', 'tag_search', tags.map((tag) => tag.label).join(','));\n      this.added.emit(tags);\n    }\n  }\n\n  /**\n   * Opens the results panel\n   */\n  @HostListener('click') // eslint-disable-line\n  @HostListener('focusin') // eslint-disable-line\n  openResults(): void {\n    if (!this.resultsVisible) {\n      this.resultsVisible = true;\n    }\n  }\n\n  /**\n   * Closes the results panel\n   *\n   * @param event DOM event\n   */\n  @HostListener('window:click', ['$event']) // eslint-disable-line\n  @HostListener('window:focusin', ['$event']) // eslint-disable-line\n  closeResults(event: Event): void {\n    const { closeSearch } = this;\n    if (this.resultsVisible && event.target instanceof Node) {\n      if (!this.el.nativeElement.contains(event.target) || closeSearch.nativeElement.contains(event.target)) {\n        this.resultsVisible = false;\n      }\n    }\n  }\n\n  /**\n   * Executes a search on a piece of text.\n   *\n   * @param text Search text\n   * @returns An observable of the search result.\n   */\n  @Bind\n  private executeSearch(text: string): ObservableInput<TagSearchResult> {\n    const { search, searchLimit = DEFAULT_SEARCH_LIMIT } = this;\n    if (!text || !search) {\n      return [EMPTY_RESULT];\n    }\n\n    return from(search(text, searchLimit)).pipe(\n      catchError(() => [EMPTY_RESULT]),\n      map(this.truncateResults),\n    );\n  }\n\n  /**\n   * Truncates the number of results returned by a search\n   *\n   * @param result The results\n   * @returns Results with at most `searchLimit` items\n   */\n  @Bind\n  private truncateResults(result: TagSearchResult): TagSearchResult {\n    const { searchLimit = DEFAULT_SEARCH_LIMIT } = this;\n    const items = result.results;\n\n    if (items.length > searchLimit) {\n      return {\n        ...result,\n        results: items.slice(0, searchLimit),\n      };\n    }\n\n    return result;\n  }\n\n  /**\n   * Computes a new checked object for result items. Already checked items are preserved.\n   *\n   * @param result New results\n   * @returns A new checked object\n   */\n  private getUpdatedCheckedResults(result: TagSearchResult): Record<TagId, boolean> {\n    const prev = this.checkedResults;\n    return result.results.reduce<Record<TagId, boolean>>((acc, { id }) => {\n      acc[id] = prev[id] ?? false;\n      return acc;\n    }, {});\n  }\n}\n","<div class=\"spacer\"></div>\n\n<mat-form-field class=\"overlay\" [class.expanded]=\"resultsVisible\" appearance=\"outline\" subscriptSizing=\"dynamic\">\n  <div class=\"search-box\">\n    <input matInput type=\"search\" [placeholder]=\"placeholder\" [formControl]=\"searchControl\" #search />\n    <button\n      class=\"add-button\"\n      [class.active]=\"hasCheckedTags()\"\n      [disabled]=\"!hasCheckedTags()\"\n      (click)=\"addTags(); search.focus()\"\n      matSuffix\n      #closeSearch\n    >\n      <mat-icon class=\"icon\">add</mat-icon>\n    </button>\n  </div>\n\n  <div *ngIf=\"resultsVisible\" class=\"results\">\n    <div *ngFor=\"let result of searchResults.results; trackBy: tagId\" class=\"item\">\n      <mat-checkbox labelPosition=\"after\" [(ngModel)]=\"checkedResults[result.id]\">\n        {{ result.label }}\n      </mat-checkbox>\n    </div>\n\n    <div class=\"count\">\n      {{ searchResults.totalCount | i18nPlural: countMapping }}\n    </div>\n  </div>\n</mat-form-field>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TagSearchComponent } from './tag-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n  ],\n  declarations: [TagSearchComponent],\n  exports: [TagSearchComponent],\n})\nexport class TagSearchModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { VisibilityItem } from '../../../core/models/visibility-item';\n\n/**\n * Menu for displaying visibility options\n */\n@Component({\n  selector: 'ccf-visibility-menu',\n  templateUrl: './visibility-menu.component.html',\n  styleUrls: ['./visibility-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VisibilityMenuComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-menu';\n\n  /**\n   * Items to be displayed in the visibility menu\n   */\n  @Input() items!: VisibilityItem[];\n\n  /**\n   * The currently selected item\n   */\n  @Input() selection: VisibilityItem | undefined;\n\n  /**\n   * Emits the currently hovered item\n   */\n  @Output() readonly hover = new EventEmitter<VisibilityItem | undefined>();\n\n  /**\n   * Emits whenever there is a change to one or more items.\n   */\n  @Output() readonly itemsChange = new EventEmitter<VisibilityItem[]>();\n\n  /**\n   * Creates an instance of visibility menu component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n   *\n   * @param item Menu item\n   */\n  toggleVisibility(item: VisibilityItem): void {\n    item = { ...item, visible: !item.visible };\n    if (this.selection && item.id === this.selection.id) {\n      this.selection = { ...this.selection, visible: item.visible };\n    }\n\n    this.ga.event('visibility_toggled', 'visibility_menu', '' + item.id, +item.visible);\n    this.updateOpacity(item.opacity);\n  }\n\n  /**\n   * Changes current selection to hovered over item and emits the item\n   *\n   * @param item Menu item\n   */\n  mouseOver(item: VisibilityItem): void {\n    this.selection = item === this.selection ? undefined : item;\n    this.hover.emit(item);\n  }\n\n  /**\n   * Clears current selection and emits undefined in response to mouse out\n   *\n   * @param item Menu item\n   */\n  mouseOut(): void {\n    this.selection = undefined;\n    this.hover.emit(undefined);\n  }\n\n  /**\n   * Updates opacity of the currently selected item (if one is selected) and emits the new items\n   *\n   * @param value Updated opacity value\n   */\n  updateOpacity(value: number | undefined): void {\n    if (!this.selection) {\n      return;\n    }\n    const updatedSelection = { ...this.selection, opacity: value };\n    this.selection = updatedSelection;\n    if (updatedSelection.id === 'all') {\n      this.setAllOpacity(updatedSelection.opacity as number);\n    } else {\n      this.items = this.items.map((item) => (item.id === updatedSelection.id ? updatedSelection : item));\n      this.ga.event('opacity_update', 'visibility_menu', '' + updatedSelection.id, updatedSelection.opacity);\n    }\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Resets item to opacity 20 and visible\n   */\n  resetItem(): void {\n    if (this.selection) {\n      const updatedSelection = { ...this.selection, opacity: 20, visible: true };\n      this.selection = updatedSelection;\n      if (this.selection.id === 'all') {\n        this.setAllOpacity(updatedSelection.opacity);\n      } else {\n        this.items = this.items.map((item) => (item.id === updatedSelection.id ? updatedSelection : item));\n        this.ga.event('item_reset', 'visibility_menu', '' + updatedSelection.id);\n      }\n      this.itemsChange.emit(this.items);\n    }\n  }\n\n  /**\n   * Sets all items to the same opacity and makes them visible\n   *\n   * @param value Updated opacity value\n   */\n  setAllOpacity(value: number): void {\n    this.items = this.items.map((i) => ({ ...i, opacity: value, visible: true }));\n    this.ga.event('all_items_opacity_update', 'visibility_menu', undefined, value);\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Returns the id of an item\n   *\n   * @param index Index of item in items array\n   * @param item The item to get an id for\n   * @returns id Id of the item\n   */\n  getId(_index: number, item: VisibilityItem): string | number {\n    return item.id;\n  }\n}\n","<mat-icon\n  class=\"icon reset\"\n  matRipple\n  [matRippleCentered]=\"true\"\n  [matRippleUnbounded]=\"true\"\n  (click)=\"setAllOpacity(20)\"\n  *ngIf=\"items.length\"\n  >refresh</mat-icon\n>\n\n<div\n  class=\"item-entry\"\n  [class.selected]=\"selection ? getId(0, selection) === getId(0, item) : false\"\n  (mouseenter)=\"mouseOver(item)\"\n  (mouseleave)=\"mouseOut()\"\n  *ngFor=\"let item of items; trackBy: getId\"\n>\n  <mat-icon class=\"opacity-icon\" [class.fade]=\"!item.visible\" svgIcon=\"app:opacity\"></mat-icon>\n  <div class=\"item-name\" [class.hidden]=\"item.id === selection?.id\" title=\"{{ item.name }}\">{{ item.name }}</div>\n\n  <div class=\"slider\" [class.visible]=\"item.id === selection?.id\" [class.hidden]=\"item.id !== selection?.id\">\n    <ccf-opacity-slider\n      [opacity]=\"selection?.opacity ?? 20\"\n      (opacityChange)=\"updateOpacity($event)\"\n      (opacityReset)=\"resetItem()\"\n      (visibilityToggle)=\"toggleVisibility(item)\"\n    >\n    </ccf-opacity-slider>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { OpacitySliderModule } from 'ccf-shared';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { VisibilityMenuComponent } from './visibility-menu.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatRippleModule, OpacitySliderModule],\n  declarations: [VisibilityMenuComponent],\n  exports: [VisibilityMenuComponent],\n})\nexport class VisibilityMenuModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for easily adding a visibility toggle with customizable label and\n * pre set up emitter.\n */\n@Component({\n  selector: 'ccf-visibility-toggle',\n  templateUrl: './visibility-toggle.component.html',\n  styleUrls: ['./visibility-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VisibilityToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-toggle';\n\n  /**\n   * Keeps track of the current visibility state of the toggle.\n   */\n  @Input() visible = false;\n\n  /**\n   * Input that allows the label to be set from outside the component,\n   * making it more reusable.\n   */\n  @Input() toggleLabel = '';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Outputs the new visibility state whenever toggleVisibility()\n   * changes it.\n   */\n  @Output() readonly visibilityChanged = new EventEmitter<boolean>();\n\n  /**\n   * Creates an instance of visibility toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Toggles visibility and emits the new value.\n   */\n  toggleVisibility(): void {\n    this.visible = !this.visible;\n\n    this.ga.event('visibility_toggled', 'visibility_toggle', '' + this.visible);\n    this.visibilityChanged.emit(this.visible);\n  }\n}\n","<div class=\"toggle-div\">\n  <mat-chip (click)=\"toggleVisibility()\" class=\"toggle-wrapper\" [class.disabled]=\"disabled\">\n    <div class=\"icon-background\" [class.disabled]=\"disabled\">\n      <mat-icon class=\"icon block\" [class.hidden]=\"visible\" svgIcon=\"app:visibility_off_cube\"></mat-icon>\n      <mat-icon class=\"icon green\" [class.hidden]=\"!visible\">done</mat-icon>\n    </div>\n\n    <div class=\"toggle-label\">{{ toggleLabel }}</div>\n  </mat-chip>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisibilityToggleComponent } from './visibility-toggle.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatChipsModule } from '@angular/material/chips';\n\n@NgModule({\n  declarations: [VisibilityToggleComponent],\n  imports: [CommonModule, MatIconModule, MatChipsModule],\n  exports: [VisibilityToggleComponent],\n})\nexport class VisibilityToggleModule {}\n","import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Observable, Subject, from } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message<T> {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true,\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken<MessageServiceConfig>('Message service configuration', {\n  providedIn: 'root',\n  factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG,\n});\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel<T> {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private readonly channel: Subject<Message<T>>,\n    private readonly messages: Observable<Message<T>>,\n  ) {}\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload,\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable<Message<T>> {\n    return this.messages.pipe(filter((msg) => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable<Message<T>> {\n    return this.getMessages().pipe(filter((msg) => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable<Message<T>> {\n    return this.getMessages().pipe(filter((msg) => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    const result = MessageChannel.counter;\n    MessageChannel.counter++;\n    return result;\n  }\n}\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService<T> implements OnDestroy {\n  /** The message channel. */\n  private readonly channel = new Subject<Message<T>>();\n  /** The message listener. */\n  private readonly messages: Observable<Message<T>>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(\n    @Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n    @Optional() @SkipSelf() readonly parent: MessageService<T> | null,\n  ) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([this.channel, parent.messages.pipe(takeWhile(() => !this.channel.closed))]).pipe(\n        mergeAll(),\n      );\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel<T> {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  disableDbWorker: true,\n  dbOptions: {\n    ccfOwlUrl: 'https://ccf-ontology.hubmapconsortium.org/v2.1.0/ccf.owl',\n    ccfContextUrl: 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n    hubmapDataService: 'search-api',\n    hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n    hubmapDataUrl: '', // Do not query the search-api for spatial entities by default\n    hubmapAssetsUrl: 'https://assets.hubmapconsortium.org',\n    hubmapToken: localStorage.getItem('HUBMAP_TOKEN') ?? '',\n  },\n  customization: {\n    theme: 'default',\n    header: true,\n    homeUrl: 'https://portal.hubmapconsortium.org/',\n    logoTooltip: 'Human BioMolecular Atlas Project',\n    collisionsEndpoint: 'https://apps.humanatlas.io/api/v1/collisions',\n    referenceData: 'https://cdn.jsdelivr.net/gh/hubmapconsortium/ccf-ui@gh-pages/rui/assets/reference-organ-data.json',\n  },\n  skipUnsavedChangesConfirmation: true,\n  googleAnalyticsToken: 'G-B3DT7XPMRT',\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  // eslint-disable-next-line no-console\n  .catch((err) => console.error(err));\n","import { CompositeLayer, COORDINATE_SYSTEM, LayersList } from '@deck.gl/core/typed';\nimport { TextLayer } from '@deck.gl/layers/typed';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers/typed';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore Ignore missing typings\nimport { ConeGeometry, CubeGeometry, CylinderGeometry, Geometry, SphereGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { loadGLTF, loadGLTF2, registerGLTFLoaders } from './util/load-gltf';\nimport { doCollisions } from './util/spatial-scene-collider';\n\nfunction meshLayer(\n  id: string,\n  data: SpatialSceneNode[],\n  options: { [key: string]: unknown },\n): SimpleMeshLayer<unknown> | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    let mesh: Geometry;\n    switch (options['geometry']) {\n      case 'sphere':\n        mesh = new SphereGeometry();\n        break;\n      case 'cone':\n        mesh = new ConeGeometry();\n        break;\n      case 'cylinder':\n        mesh = new CylinderGeometry();\n        break;\n      case 'cube':\n      default:\n        mesh = new CubeGeometry();\n        break;\n    }\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: false,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        mesh: mesh as any,\n        wireframe: false,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color || [255, 255, 255, 0.9 * 255],\n        getTransformMatrix: (d) => (d as { transformMatrix: number[] }).transformMatrix,\n      },\n      ...options,\n    });\n  }\n}\n\nfunction textLayer(\n  id: string,\n  data: SpatialSceneNode[],\n  options: { [key: string]: unknown },\n): TextLayer<unknown> | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new TextLayer({\n      ...{\n        id,\n        pickable: true,\n        data: data.map((d) => ({\n          ...d,\n          position: new Matrix4(d.transformMatrix).getTranslation(),\n        })),\n        getText: (d) => (d as { text: string }).text,\n        getPosition: (d) => (d as { position: [number, number] }).position,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color,\n      },\n      ...options,\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer<SpatialSceneNode> {\n  static override readonly layerName = 'BodyUILayer';\n  static readonly gltfCache: { [url: string]: Promise<Blob> } = {};\n\n  override initializeState(): void {\n    const { data } = this.props;\n    this.setState({ data: data ?? [], zoomOpacity: 0.8, doCollisions: false });\n    registerGLTFLoaders();\n  }\n\n  renderLayers(): LayersList {\n    const state = this.state as {\n      data: SpatialSceneNode[];\n      zoomOpacity: number;\n      doCollisions: boolean;\n    };\n    const geometries: Record<string, SpatialSceneNode[]> = {\n      sphere: [],\n      cone: [],\n      cylinder: [],\n      cube: [],\n      text: [],\n      wireframe: [],\n      scenegraph: [],\n    };\n\n    for (const node of state.data) {\n      const geometry = node.geometry ?? 'cube';\n      if (node.scenegraph) {\n        geometries['scenegraph'].push(node);\n      } else if (geometries[geometry] !== undefined) {\n        geometries[geometry].push(node);\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const url2gltf: { [url: string]: Promise<any> } = {};\n    for (const m of geometries['scenegraph']) {\n      if (m.scenegraph && m.scenegraphNode && !Object.prototype.hasOwnProperty.call(url2gltf, m.scenegraph)) {\n        url2gltf[m.scenegraph] = loadGLTF({ scenegraph: m.scenegraph } as SpatialSceneNode, BodyUILayer.gltfCache);\n      }\n    }\n\n    const layers: unknown[] = [];\n    for (const [geometry, nodes] of Object.entries(geometries)) {\n      if (geometry === 'scenegraph') {\n        for (const model of nodes) {\n          layers.push(\n            new ScenegraphLayer({\n              id: 'models-' + model['@id'],\n              opacity: model.zoomBasedOpacity ? state.zoomOpacity : model.opacity ?? 1.0,\n              pickable: !model.unpickable,\n              coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n              data: [model],\n              scenegraph: model.scenegraphNode\n                ? loadGLTF2(model.scenegraphNode, url2gltf[model.scenegraph as string])\n                : (model.scenegraph as unknown as URL),\n              _lighting: model._lighting as 'pbr', // 'pbr' | undefined\n              getTransformMatrix: model.transformMatrix,\n              getColor: model.color ?? [0, 255, 0, 0.5 * 255],\n              parameters: {\n                depthMask: !model.zoomBasedOpacity && (model.opacity === undefined || model.opacity === 1),\n              },\n            }),\n          );\n        }\n      } else if (geometry === 'text') {\n        layers.push(\n          textLayer(\n            'text',\n            nodes.filter((n) => n.unpickable),\n            { pickable: false },\n          ),\n        );\n        layers.push(\n          textLayer(\n            'textPickable',\n            nodes.filter((n) => !n.unpickable),\n            { pickable: true },\n          ),\n        );\n      } else if (geometry === 'wireframe') {\n        layers.push(\n          meshLayer(geometry, nodes, {\n            wireframe: true,\n            pickable: false,\n            geometry,\n          }),\n        );\n      } else {\n        layers.push(\n          meshLayer(\n            geometry,\n            nodes.filter((n) => n.unpickable),\n            { wireframe: false, pickable: false, geometry },\n          ),\n        );\n        layers.push(\n          meshLayer(\n            `${geometry}Pickable`,\n            nodes.filter((n) => !n.unpickable),\n            { wireframe: false, pickable: true, geometry },\n          ),\n        );\n      }\n    }\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return layers.filter((l) => !!l) as LayersList;\n  }\n\n  override getPickingInfo(\n    e: Parameters<CompositeLayer<SpatialSceneNode>['getPickingInfo']>[0],\n  ): ReturnType<CompositeLayer<SpatialSceneNode>['getPickingInfo']> {\n    return e.info;\n  }\n}\n","import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core/typed';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\ninterface BodyUIViewStateProps {\n  orbitAxis?: string;\n  target?: [number, number, number];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: [number, number, number];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo<D> {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = {\n  node: SpatialSceneNode;\n  info: PickInfo<SpatialSceneNode>;\n  e: MouseEvent;\n};\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject<NodeClickEvent>();\n  private readonly nodeHoverStartSubject = new Subject<SpatialSceneNode>();\n  private readonly nodeHoverStopSubject = new Subject<SpatialSceneNode>();\n  private readonly sceneRotationSubject = new BehaviorSubject<[number, number]>([0, 0]);\n  private readonly nodeDragStartSubject = new Subject<NodeDragEvent>();\n  private readonly nodeDragSubject = new Subject<NodeDragEvent>();\n  private readonly nodeDragEndSubject = new Subject<NodeDragEvent>();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private readonly deckProps: Partial<BodyUIProps>) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [\n        deckProps.camera === 'orthographic'\n          ? new OrthographicView({ flipY: false, near: -1000 })\n          : new OrbitView({ orbitAxis: 'Y' }),\n      ],\n      controller: deckProps.interactive ?? true,\n      layers: [this.bodyUILayer],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab'),\n    };\n    if (deckProps.legacyLighting) {\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0,\n          }),\n        }),\n      ];\n    }\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera,\n      } as BodyUIViewStateProps,\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise<void> {\n    while (!this.bodyUILayer.state) {\n      await new Promise((r) => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    const gltfUrl =\n      'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    const gltfTransform = new Matrix4([\n      0.076, 0, 0, 0, 0, 0.076, 1.6875389974302382e-17, 0, 0, -1.6875389974302382e-17, 0.076, 0, 0.49, 0.034, 0.11, 1,\n    ]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        _lighting: 'pbr',\n        zoomBasedOpacity: false,\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps,\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value,\n      } as BodyUIViewStateProps,\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value,\n      } as BodyUIViewStateProps,\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value,\n      } as BodyUIViewStateProps,\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value,\n      } as BodyUIViewStateProps,\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value,\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo<SpatialSceneNode>, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({\n        node: info.object,\n        ctrlClick: e?.srcEvent?.ctrlKey ?? undefined,\n      });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: {\n    interactionState: { isZooming: boolean };\n    viewState: BodyUIViewStateProps;\n  }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {\n        zoomOpacity: number;\n        data: unknown;\n      };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo<SpatialSceneNode>, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo<SpatialSceneNode>, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo<SpatialSceneNode>, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo<SpatialSceneNode>, e: MouseEvent, subject: Subject<NodeDragEvent>): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n","import { JsonLdObj } from 'jsonld/jsonld-spec';\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_middle_name: string | undefined;\n  creator_last_name: string;\n  creator_orcid: string | undefined;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n","import { Matrix4 } from '@math.gl/core';\n\nexport type SpatialSceneGeometry = 'sphere' | 'cube' | 'wireframe' | 'text' | 'cone' | 'cylinder';\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  geometry?: SpatialSceneGeometry;\n  text?: string;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n","import { parse, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\nexport function registerGLTFLoaders(): void {\n  registerLoaders([DracoWorkerLoader, GLTFLoader]);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function deriveScenegraph(scenegraphNodeName: string, gltf: any): any {\n  const scenegraphNode = gltf.nodes?.find((n: { name: string }) => n.name === scenegraphNodeName);\n  if (scenegraphNode) {\n    let foundNodeInScene = false;\n    for (const scene of gltf.scenes) {\n      if (!foundNodeInScene) {\n        traverseScene(scene, new Matrix4(Matrix4.IDENTITY), (child, modelMatrix) => {\n          if (child === scenegraphNode) {\n            child.matrix = modelMatrix;\n            child.translation = undefined;\n            child.rotation = undefined;\n            child.scale = undefined;\n            foundNodeInScene = true;\n            return false;\n          }\n          return true;\n        });\n      }\n    }\n    gltf.scene = {\n      id: scenegraphNodeName,\n      name: scenegraphNodeName,\n      nodes: [scenegraphNode],\n    };\n    gltf.scenes = [gltf.scene];\n\n    return { scene: gltf.scene, scenes: gltf.scenes };\n  } else {\n    return gltf;\n  }\n}\n\nexport async function loadGLTF(\n  model: SpatialSceneNode,\n  cache?: { [url: string]: Promise<Blob> },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Promise<any> {\n  const gltfUrl = model.scenegraph as string;\n  let gltfPromise: Promise<Blob | Response>;\n  if (cache) {\n    gltfPromise = cache[gltfUrl] || (cache[gltfUrl] = fetch(gltfUrl).then((r) => r.blob()));\n  } else {\n    gltfPromise = fetch(gltfUrl);\n  }\n  const gltf = await parse(gltfPromise, GLTFLoader, {\n    DracoLoader,\n    gltf: { decompressMeshes: true, postProcess: true },\n  });\n\n  if (!gltf.nodes) {\n    console.log('WARNING: Empty Scene', gltfUrl, gltf);\n  }\n\n  return deriveScenegraph(model.scenegraphNode as string, gltf);\n}\n\nexport async function loadGLTF2(\n  scenegraphNodeName: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  gltfPromise: Promise<any>,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Promise<any> {\n  return deriveScenegraph(scenegraphNodeName, await gltfPromise);\n}\n","import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { loadGLTF, registerGLTFLoaders } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\n\nexport interface ProcessedNode extends SpatialSceneNode {\n  bbox: AABB;\n  jsonld: unknown;\n  node: unknown;\n  size: Vec3;\n  center: Vec3;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction childNames(scene: { nodes: any; children: any }, names: string[] = []): string[] {\n  for (const child of scene.nodes || scene.children || []) {\n    names.push(child.name);\n    childNames(child, names);\n  }\n  return names;\n}\n\nexport async function processSceneNodes(\n  gltfUrl: string,\n  worldMatrix?: Matrix4,\n  scenegraphNode?: string,\n  gltfCache?: { [url: string]: Promise<Blob> },\n): Promise<{ [node: string]: ProcessedNode }> {\n  registerGLTFLoaders();\n  const gltf = await loadGLTF({ scenegraph: gltfUrl, scenegraphNode } as SpatialSceneNode, gltfCache);\n  const nodes: { [node: string]: ProcessedNode } = {};\n  const gltfNodes: ProcessedNode[] = [];\n\n  worldMatrix = new Matrix4(worldMatrix ?? Matrix4.IDENTITY);\n\n  for (const scene of gltf.scenes) {\n    traverseScene(scene, worldMatrix, (node, modelMatrix: Matrix4) => {\n      const processedNode: ProcessedNode = {\n        '@id': (node.name || node.id) as string,\n        '@type': 'ProcessedNode',\n        transformMatrix: new Matrix4(modelMatrix),\n        geometry: 'wireframe',\n        node,\n      } as ProcessedNode;\n      gltfNodes.push({\n        '@id': `GLTF:${processedNode['@id']}`,\n        '@type': 'GLTFNode',\n        scenegraph: gltfUrl,\n        scenegraphNode: processedNode['@id'],\n        transformMatrix: new Matrix4(worldMatrix || Matrix4.IDENTITY),\n        tooltip: (node.name || node.id) as string,\n        color: [255, 255, 255, 255],\n        _lighting: 'pbr',\n        zoomBasedOpacity: true,\n        node,\n      } as ProcessedNode);\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            processedNode.bbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i]))),\n            });\n          }\n        }\n      }\n      nodes[processedNode['@id']] = processedNode;\n      return true;\n    });\n  }\n\n  for (const node of Object.values(nodes).filter((n) => !n.bbox)) {\n    for (const child of childNames(node.node as never)\n      .map((n) => nodes[n])\n      .filter((n) => n.bbox)) {\n      if (!node.bbox) {\n        node.bbox = child.bbox.clone();\n      } else {\n        node.bbox.extend(child.bbox);\n      }\n    }\n    if (!node.bbox) {\n      delete nodes[node['@id']];\n    }\n  }\n  for (const node of Object.values(nodes)) {\n    const lb = node.bbox.lowerBound;\n    const ub = node.bbox.upperBound;\n    const size = (node.size = ub.clone().vsub(lb));\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const center = (node.center = lb.clone().vadd(halfSize));\n\n    node.transformMatrix = new Matrix4(Matrix4.IDENTITY).translate(center.toArray()).scale(halfSize.toArray());\n  }\n  for (const node of gltfNodes) {\n    nodes[node['@id']] = node;\n  }\n  return nodes;\n}\n/* eslint-enable */\n","import { Matrix4, NumericArray } from '@math.gl/core';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type SceneTraversalVisitor = (child: any, modelMatrix: Matrix4, parentMatrix: Matrix4) => boolean;\n\nexport function traverseScene(\n  scene: {\n    matrix: Readonly<NumericArray>;\n    translation: Readonly<NumericArray>;\n    rotation: Readonly<NumericArray>;\n    scale: number | Readonly<NumericArray>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    nodes: any;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    children: any;\n  },\n  worldMatrix: Matrix4,\n  visitor: SceneTraversalVisitor,\n): boolean {\n  if (!worldMatrix) {\n    worldMatrix = new Matrix4(Matrix4.IDENTITY);\n  }\n  const matrix = new Matrix4(Matrix4.IDENTITY);\n  if (!scene) {\n    return true;\n  } else if (scene.matrix) {\n    matrix.copy(scene.matrix);\n  } else {\n    matrix.identity();\n\n    if (scene.translation) {\n      matrix.translate(scene.translation);\n    }\n\n    if (scene.rotation) {\n      const rotationMatrix = new Matrix4(Matrix4.IDENTITY).fromQuaternion(scene.rotation);\n      matrix.multiplyRight(rotationMatrix);\n    }\n\n    if (scene.scale) {\n      matrix.scale(scene.scale);\n    }\n  }\n  const modelMatrix = new Matrix4(worldMatrix).multiplyRight(matrix);\n  if (visitor(scene, modelMatrix, worldMatrix) === false) {\n    return false;\n  }\n  for (const child of scene.nodes || scene.children || []) {\n    if (traverseScene(child, modelMatrix, visitor) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { loadGLTF } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\n\nexport async function simplifyScene(nodes: SpatialSceneNode[]): Promise<SpatialSceneNode[]> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const gltfCache: { [url: string]: any } = {};\n  const gltfUrls = new Set(nodes.map((n) => n.scenegraph).filter((n) => !!n));\n  for (const gltfUrl of gltfUrls) {\n    // eslint-disable-next-line no-await-in-loop\n    gltfCache[gltfUrl as string] = await loadGLTF({\n      scenegraph: gltfUrl,\n    } as SpatialSceneNode);\n  }\n  const newNodes: SpatialSceneNode[] = nodes.filter((n) => !n.scenegraph);\n\n  for (const model of nodes.filter((n) => n.scenegraph)) {\n    const gltf = gltfCache[model.scenegraph as string];\n    const bbox = new AABB();\n    let worldMatrix = new Matrix4(model.transformMatrix);\n\n    /* eslint-disable  */\n    if (model.scenegraphNode) {\n      const scenegraphNode = model.scenegraphNode\n        ? gltf.nodes.find((n: { name: string | undefined }) => n.name === model.scenegraphNode)\n        : undefined;\n      let foundNodeInScene = false;\n      for (const scene of gltf.scenes) {\n        if (!foundNodeInScene) {\n          traverseScene(scene, new Matrix4(model.transformMatrix), (child, modelMatrix) => {\n            if (child === scenegraphNode) {\n              worldMatrix = modelMatrix;\n              foundNodeInScene = true;\n              return false;\n            }\n            return true;\n          });\n        }\n      }\n      gltf.scene = {\n        id: model.scenegraphNode,\n        name: model.scenegraphNode,\n        nodes: [scenegraphNode],\n      };\n    }\n\n    traverseScene(gltf.scene, worldMatrix, (node, modelMatrix) => {\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            const innerBbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i]))),\n            });\n            bbox.extend(innerBbox);\n          }\n        }\n      }\n      return true;\n    });\n    /* eslint-enable */\n\n    const size = bbox.upperBound.clone().vsub(bbox.lowerBound);\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const position = bbox.lowerBound.clone().vadd(halfSize);\n    const transformMatrix = new Matrix4(Matrix4.IDENTITY).translate(position.toArray()).scale(halfSize.toArray());\n    const newNode: SpatialSceneNode = {\n      ...model,\n      transformMatrix,\n      geometry: 'wireframe',\n    };\n    delete newNode.scenegraph;\n    delete newNode.scenegraphNode;\n\n    newNodes.push(newNode);\n  }\n  return newNodes;\n}\n","import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: { '@id': string; name: string }[];\n}\n\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise<Collision[]> {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter((d) => !d.scenegraph && d.geometry !== 'wireframe')\n    .map((model) => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n: number, i: number) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n: number, i: number) => Math.max(n, lowerBound[i]))),\n        }),\n      };\n    });\n\n  const targetBoxes: {\n    '@id': string;\n    name: string;\n    entityId?: string;\n    bbox: AABB;\n    gltf: unknown;\n  }[] = [];\n  for (const model of scene.filter((d) => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {\n      DracoLoader,\n      decompress: true,\n      postProcess: true,\n    });\n    for (const gltfScene of gltf.scenes ?? []) {\n      traverseScene(gltfScene as never, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i]))),\n                }),\n                gltf,\n              });\n            }\n          }\n        }\n        return true;\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: { '@id': string; name: string }[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({ '@id': target['@id'], name: target.name });\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name as string,\n        hits,\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({\n    sourceBoxes,\n    targetBoxes,\n    report,\n    sad,\n    maxHits: Math.max(...report.map((r) => r.hits.length)),\n  });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': '',\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name,\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n","// Hack to support deck.gl and other typings\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference types=\"node\" />\n\n/*\n * Public API Surface of ccf-body-ui\n */\nexport * from './lib/body-ui-layer';\nexport * from './lib/body-ui';\nexport * from './lib/shared/spatial-scene-node';\nexport * from './lib/shared/ccf-spatial-jsonld';\n\nexport * from './lib/util/load-gltf';\nexport * from './lib/util/scene-traversal';\nexport * from './lib/util/spatial-scene-collider';\nexport * from './lib/util/process-scene-nodes';\nexport * from './lib/util/simplify-scene';\n","import * as idb from 'idb-keyval';\nimport { JsonLd } from 'jsonld/jsonld-spec';\nimport * as hash from 'object-hash';\nimport {\n  addJsonLdToStore,\n  addN3ToStore,\n  addRdfXmlToStore,\n  DataFactory,\n  deserializeN3Store,\n  Quad,\n  serializeN3Store,\n  Store,\n} from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, TissueBlockResult } from './interfaces';\nimport { getAggregateResults, getDatasetTechnologyNames, getProviderNames } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport {\n  getBiomarkerTermOccurences,\n  getCellTypeTermOccurences,\n  getOntologyTermOccurences,\n} from './queries/ontology-term-occurences-n3';\nimport {\n  getAnatomicalStructureTreeModel,\n  getBiomarkerTreeModel,\n  getCellTypeTreeModel,\n} from './queries/ontology-tree-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { getTissueBlockResult } from './queries/tissue-block-result-n3';\nimport { FlatSpatialPlacement, SpatialEntity } from './spatial-types';\nimport { CCFDatabaseStatusTracker } from './util/ccf-database-status-tracker';\nimport { getBmLocatedInAs } from './util/enrich-bm-located-in-as';\nimport { enrichRuiLocations } from './util/enrich-rui-locations';\nimport { patchJsonLd } from './util/patch-jsonld';\nimport { searchXConsortia } from './xconsortia/xconsortia-data-import';\n\nconst { delMany, get, setMany } = idb;\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** A url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** A list of data sources (in n3, rdf, xml, owl, or jsonld format) */\n  dataSources: (string | JsonLd)[];\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** HuBMAP Elastic Search Query */\n  hubmapQuery?: unknown;\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://apps.humanatlas.io/hra-api/v1/ccf.owl.n3store.json',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  dataSources: [],\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org',\n};\n\n/** Database provider. */\nexport class CCFDatabase {\n  /** The triple store. */\n  store: Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n  /** If the database is initialized */\n  private initializing?: Promise<void>;\n\n  private status!: CCFDatabaseStatusTracker;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store(undefined, { factory: DataFactory });\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions, cached = false): Promise<boolean> {\n    if (options) {\n      this.options = options;\n    }\n    if (!this.initializing) {\n      if (cached) {\n        this.initializing = this.cachedConnect();\n      } else {\n        this.initializing = this.doConnect();\n      }\n    }\n    await this.initializing;\n    return this.store.size > 0;\n  }\n\n  private async cachedConnect(): Promise<void> {\n    const start = new Date().getTime();\n    const optionsHash = hash(this.options, {\n      encoding: 'base64',\n      ignoreUnknown: true,\n      respectType: false,\n      unorderedArrays: true,\n      unorderedObjects: true,\n      unorderedSets: true,\n    });\n    const lastModifiedKey = `ccf-database.last_modified.${optionsHash}`;\n    const ccfDatabaseKey = `ccf-database.${optionsHash}`;\n\n    const lastModified = await get(lastModifiedKey).catch(() => undefined);\n    let serializedDb: string | undefined;\n\n    if (lastModified && start - new Date(+lastModified).getTime() > 60 * 60 * 1000) {\n      await delMany([ccfDatabaseKey, lastModifiedKey]).catch(() => undefined);\n    } else {\n      serializedDb = await get(ccfDatabaseKey).catch(() => undefined);\n    }\n\n    if (serializedDb) {\n      await this.deserialize(serializedDb);\n    } else {\n      await this.doConnect();\n\n      setMany([\n        [ccfDatabaseKey, this.serialize()],\n        [lastModifiedKey, '' + start],\n      ]).catch(() => undefined);\n    }\n  }\n\n  /**\n   * Actually connects to the database.\n   *\n   * @returns A promise resolving to void when connected.\n   */\n  private async doConnect(): Promise<void> {\n    const ops: Promise<unknown>[] = [];\n    const sources: (string | JsonLd)[] = this.options.dataSources?.concat() ?? [];\n\n    const ccfOwlUrl = this.options.ccfOwlUrl;\n    if (ccfOwlUrl.startsWith('{')) {\n      // serialized n3 store was provided as the ccfOwlUrl\n      this.store = deserializeN3Store(ccfOwlUrl, DataFactory);\n    } else if (ccfOwlUrl.endsWith('.n3store.json')) {\n      const storeString = await fetch(ccfOwlUrl)\n        .then((r) => r.text())\n        .catch(() => console.log(\"Couldn't locate serialized store.\"));\n      if (storeString) {\n        this.store = deserializeN3Store(storeString, DataFactory);\n      }\n    } else if (ccfOwlUrl?.length > 0) {\n      sources.push(ccfOwlUrl);\n    }\n\n    // Add a direct edge between BM and AS for queries\n    sources.push(await getBmLocatedInAs());\n\n    if (this.options.hubmapDataUrl) {\n      if (this.options.hubmapDataUrl.endsWith('jsonld')) {\n        sources.push(this.options.hubmapDataUrl);\n      } else {\n        ops.push(\n          searchXConsortia(\n            this.options.hubmapDataUrl,\n            this.options.hubmapDataService,\n            this.options.hubmapQuery,\n            this.options.hubmapToken,\n          ).then((jsonld) => {\n            if (jsonld) {\n              return this.addDataSources([jsonld]);\n            } else {\n              return undefined;\n            }\n          }),\n        );\n      }\n    }\n    ops.push(this.addDataSources(sources));\n    await Promise.all(ops);\n    await this.synchronize();\n  }\n\n  async addDataSources(sources: (string | JsonLd)[], inputStore?: Store): Promise<this> {\n    const store: Store = inputStore ?? this.store;\n    await Promise.all(\n      sources.map(async (source) => {\n        if (typeof source === 'string') {\n          if ((source.startsWith('http') || source.startsWith('assets/')) && source.includes('jsonld')) {\n            const sourceUrl = source;\n            source = await fetch(sourceUrl)\n              .then((r) => r.text())\n              .catch((err) => {\n                console.log(`Error fetching ${sourceUrl}`, err);\n                return '[]';\n              });\n            source = patchJsonLd(source);\n            await addJsonLdToStore(source, store);\n          } else if (source.endsWith('n3')) {\n            await addN3ToStore(source, store);\n          } else if (source.endsWith('rdf') || source.endsWith('owl') || source.endsWith('xml')) {\n            await addRdfXmlToStore(source, store);\n          } else {\n            // Passthrough assumes a JSON-LD response\n            source = patchJsonLd(source);\n            await addJsonLdToStore(source, store);\n          }\n        } else {\n          source = patchJsonLd(JSON.stringify(source));\n          await addJsonLdToStore(source, store);\n        }\n      }),\n    );\n    return this;\n  }\n\n  async synchronize(): Promise<this> {\n    // Add a small delay to allow the triple store to settle\n    await new Promise((r) => {\n      setTimeout(r, 500);\n    });\n    this.graph.createGraph();\n    enrichRuiLocations(this.store);\n    return this;\n  }\n\n  serialize(): string {\n    return serializeN3Store(this.store);\n  }\n\n  async deserialize(value: string): Promise<void> {\n    this.store = deserializeN3Store(value, DataFactory);\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n    await new Promise((r) => {\n      setTimeout(r, 10);\n    });\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set<string> {\n    return findIds(this.store, this.graph, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    filter = { ...filter, hasSpatialEntity: true } as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  async getDatabaseStatus(): Promise<DatabaseStatus> {\n    if (!this.status) {\n      this.status = new CCFDatabaseStatusTracker(this);\n    }\n    return this.status.toJson();\n  }\n\n  /**\n   * Get a list of technology names used by datasets\n   *\n   * @returns list of unique technology names in the data\n   */\n  async getDatasetTechnologyNames(): Promise<string[]> {\n    return getDatasetTechnologyNames(this.store);\n  }\n\n  /**\n   * Get a list of provider names from the database\n   *\n   * @returns list of unique provider names in the data\n   */\n  async getProviderNames(): Promise<string[]> {\n    return getProviderNames(this.store);\n  }\n\n  /**\n   * Gets all tissue block results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getTissueBlockResults(filter?: Filter): Promise<TissueBlockResult[]> {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    filter = { ...filter, hasSpatialEntity: true } as Filter;\n    return [...this.getIds(filter)].map((s) => getTissueBlockResult(this.store, s));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise<AggregateResult[]> {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise<Record<string, number>> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of cell type terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Cell type term counts.\n   */\n  async getCellTypeTermOccurences(filter?: Filter): Promise<Record<string, number>> {\n    return getCellTypeTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of cell type terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Cell type term counts.\n   */\n  async getBiomarkerTermOccurences(filter?: Filter): Promise<Record<string, number>> {\n    return getBiomarkerTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get ontology term tree nodes\n   *\n   * @returns Ontology term counts.\n   */\n  async getOntologyTreeModel(): Promise<OntologyTreeModel> {\n    return getAnatomicalStructureTreeModel(this.store);\n  }\n\n  /**\n   * Get cell type term tree nodes\n   *\n   * @returns Ontology term counts.\n   */\n  async getCellTypeTreeModel(): Promise<OntologyTreeModel> {\n    return getCellTypeTreeModel(this.store);\n  }\n\n  /**\n   * Get biomarker tree nodes\n   *\n   * @returns Ontology term counts.\n   */\n  async getBiomarkerTreeModel(): Promise<OntologyTreeModel> {\n    return getBiomarkerTreeModel(this.store);\n  }\n\n  /**\n   * Get reference organs\n   *\n   * @returns Ontology term counts.\n   */\n  async getReferenceOrgans(): Promise<SpatialEntity[]> {\n    return this.scene.getReferenceOrgans();\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   *\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise<SpatialSceneNode[]> {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference organ and tissues\n   *\n   * @param [organIri] The Reference Organ IRI\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getReferenceOrganScene(organIri: string, filter?: Filter): Promise<SpatialSceneNode[]> {\n    this.graph.createGraph();\n    return this.scene.getReferenceOrganScene(organIri, filter);\n  }\n\n  async getSpatialPlacement(source: SpatialEntity, targetIri: string): Promise<FlatSpatialPlacement | undefined> {\n    return this.graph.getSpatialPlacement(source, targetIri);\n  }\n}\n","import { Euler, Matrix4, toDegrees, toRadians } from '@math.gl/core';\nimport { DirectedGraph } from 'graphology';\nimport { bidirectional } from 'graphology-shortest-path/unweighted';\nimport { get } from 'lodash';\nimport { readQuads } from 'triple-store-utils';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { CCFDatabase } from './ccf-database';\nimport { getSpatialPlacement } from './queries/spatial-result-n3';\nimport { FlatSpatialPlacement, SpatialEntity, SpatialPlacement } from './spatial-types';\nimport { ccf, rdf } from './util/prefixes';\n\nexport function applySpatialPlacement(tx: Matrix4, placement: SpatialPlacement): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map((t) => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map<number>(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport class CCFSpatialGraph {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  graph: any;\n\n  constructor(private readonly db: CCFDatabase) {\n    this.createGraph();\n  }\n\n  createGraph(): void {\n    this.graph = new DirectedGraph();\n    const store = this.db.store;\n\n    // Add all Spatial Object References\n    store.forSubjects(\n      (subject) => {\n        this.addNode(subject.id, 'SpatialObjectReference');\n      },\n      rdf.type,\n      ccf.SpatialObjectReference,\n      null,\n    );\n\n    // Add all Spatial Entities\n    store.forSubjects(\n      (subject) => {\n        this.addNode(subject.id, 'SpatialEntity');\n      },\n      rdf.type,\n      ccf.SpatialEntity,\n      null,\n    );\n\n    // Add all Spatial Placements\n    const edgeSource: Record<string, string> = {};\n    for (const quad of readQuads(store, null, ccf.spatialPlacement.source, null, null)) {\n      edgeSource[quad.subject.id] = quad.object.id;\n    }\n    for (const quad of readQuads(store, null, ccf.spatialPlacement.target, null, null)) {\n      const source = edgeSource[quad.subject.id];\n      if (source) {\n        this.addEdge(quad.subject.id, source, quad.object.id, 'SpatialPlacement');\n      }\n    }\n  }\n\n  addNode(id: string, type: string): void {\n    this.graph.mergeNode(id, { type });\n  }\n\n  addEdge(id: string, source: string, target: string, type: string): void {\n    this.graph.mergeDirectedEdge(source, target, { type, id });\n  }\n\n  getTransformationMatrix(sourceIRI: string, targetIRI: string): Matrix4 | undefined {\n    if (sourceIRI === targetIRI) {\n      return new Matrix4(Matrix4.IDENTITY); // identity\n    }\n    if (!this.graph.hasNode(sourceIRI) || !this.graph.hasNode(targetIRI)) {\n      return undefined;\n    }\n\n    const store = this.db.store;\n    const tx = new Matrix4(Matrix4.IDENTITY);\n    const path = bidirectional(this.graph, sourceIRI, targetIRI);\n    if (path && path.length > 0) {\n      path.reverse();\n      let target: string | number = '';\n      for (const source of path) {\n        if (target) {\n          const placementId = this.graph.getEdgeAttribute(source, target, 'id');\n          const placement = getSpatialPlacement(store, placementId);\n          applySpatialPlacement(tx, placement);\n        }\n        target = source;\n      }\n      return tx;\n    } else {\n      return undefined;\n    }\n  }\n\n  getSpatialPlacement(source: SpatialEntity, targetIri: string): FlatSpatialPlacement | undefined {\n    const sourceIri = this.graph.hasNode(source['@id']) ? source['@id'] : undefined;\n    const placement = get(source, 'placement[0]', get(source, 'placement', undefined)) as unknown as SpatialPlacement;\n\n    let matrix: Matrix4 | undefined;\n    if (placement && this.graph.hasNode(placement.target)) {\n      matrix = this.getTransformationMatrix(placement.target as unknown as string, targetIri);\n      if (matrix) {\n        matrix = applySpatialPlacement(matrix, placement);\n      }\n    } else if (sourceIri) {\n      matrix = this.getTransformationMatrix(sourceIri, targetIri);\n    }\n\n    if (matrix) {\n      const euler = new Euler().fromRotationMatrix(matrix, Euler.XYZ);\n      const T = matrix.getTranslation().map((n) => n * 1000) as [number, number, number];\n      const R = euler.toVector3().map<number>(toDegrees) as [number, number, number];\n      const S = matrix.getScale().map((n) => (n < 1 && n > 0.999999 ? 1 : n)) as [number, number, number];\n\n      return {\n        '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${uuidV4()}_placement`,\n        '@type': 'SpatialPlacement',\n        source: source['@id'],\n        target: targetIri,\n        placement_date: new Date().toISOString().split('T')[0],\n        x_scaling: S[0],\n        y_scaling: S[1],\n        z_scaling: S[2],\n        scaling_units: 'ratio',\n        x_rotation: R[0],\n        y_rotation: R[1],\n        z_rotation: R[2],\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n        x_translation: T[0],\n        y_translation: T[1],\n        z_translation: T[2],\n        translation_units: 'millimeter',\n      };\n    } else {\n      return undefined;\n    }\n  }\n}\n","import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport {\n  getAnatomicalStructures,\n  getExtractionSet,\n  getExtractionSets,\n  getReferenceOrgans,\n  getSpatialEntity,\n} from './queries/spatial-result-n3';\nimport { ExtractionSet, SpatialEntity } from './spatial-types';\nimport { ccf } from './util/prefixes';\n\nexport type SpatialSceneGeometry = 'sphere' | 'cube' | 'wireframe' | 'text' | 'cone' | 'cylinder';\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  ccf_annotations?: string[];\n  representation_of?: string;\n  reference_organ?: string;\n  sex?: 'Male' | 'Female';\n  unpickable?: boolean;\n  geometry?: SpatialSceneGeometry;\n  text?: string;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\nexport class CCFSpatialScene {\n  constructor(private readonly db: CCFDatabase) {}\n\n  getSpatialEntity(iri: string): SpatialEntity {\n    return getSpatialEntity(this.db.store, iri);\n  }\n  getExtractionSets(iri: string): ExtractionSet[] {\n    return getExtractionSets(this.db.store, iri);\n  }\n  getExtractionSet(iri: string): ExtractionSet {\n    return getExtractionSet(this.db.store, iri);\n  }\n  getAnatomicalStructures(iri: string): SpatialEntity[] {\n    return getAnatomicalStructures(this.db.store, iri);\n  }\n  getReferenceOrgans(): SpatialEntity[] {\n    return getReferenceOrgans(this.db.store);\n  }\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return this.getSpatialEntity(bodyId);\n  }\n\n  getReferenceOrganSets(filter?: Filter): SpatialEntity[] {\n    let organSet = this.getReferenceOrgans();\n    switch (filter?.sex) {\n      case 'Male':\n        organSet = organSet.filter((s) => s.sex === 'Male');\n        break;\n      case 'Female':\n        organSet = organSet.filter((s) => s.sex === 'Female');\n        break;\n      case 'Both':\n      default:\n        break;\n    }\n    if (filter?.debug) {\n      organSet = organSet\n        .map((o) => [[o], this.getAnatomicalStructures(o['@id'])])\n        .reduce<SpatialEntity[]>(\n          (acc, [organ, structures]) => acc.concat(structures.length > 0 ? structures : organ),\n          [],\n        );\n    }\n    return organSet;\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const skinNodes: SpatialSceneNode[] = [];\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      ...this.getReferenceOrganSets(filter).map((organ) => {\n        const isSkin = organ.representation_of === 'http://purl.obolibrary.org/obo/UBERON_0002097';\n        const sceneNode = this.getSceneNode(organ, body, {\n          color: [255, 255, 255, 255],\n          opacity: isSkin ? 0.5 : 0.2,\n          unpickable: true,\n          _lighting: 'pbr',\n          zoomBasedOpacity: !isSkin,\n        });\n        if (isSkin && sceneNode) {\n          skinNodes.push(sceneNode);\n          return undefined;\n        } else {\n          return sceneNode;\n        }\n      }),\n    ];\n    if (skinNodes.length > 0) {\n      nodes = [...skinNodes, ...nodes];\n    }\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHRightKidney').id), body, {\n          color: [0, 0, 255, 0.5 * 255],\n          geometry: 'wireframe',\n        }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHLeftKidney').id), body, {\n          color: [255, 0, 0, 0.5 * 255],\n          geometry: 'wireframe',\n        }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHSpleenCC1').id), body, {\n          color: [0, 255, 0, 0.5 * 255],\n          geometry: 'wireframe',\n        }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHSpleenCC2').id), body, {\n          color: [0, 255, 0, 0.5 * 255],\n          geometry: 'wireframe',\n        }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHSpleenCC3').id), body, {\n          color: [0, 255, 0, 0.5 * 255],\n          geometry: 'wireframe',\n        }),\n      ]);\n    }\n\n    return nodes.filter((s) => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): SpatialSceneNode[] {\n    const hasSexFilter = filter?.sex !== undefined && filter?.sex?.toLowerCase() !== 'both';\n    const organs = this.getReferenceOrgans().filter(\n      (o) => o.representation_of === organIri && (!hasSexFilter || o.sex === filter?.sex),\n    );\n    if (organs.length > 0) {\n      const organ = organs[0];\n      const isSkin = organ.representation_of === 'http://purl.obolibrary.org/obo/UBERON_0002097';\n      const organNode = this.getSceneNode(organ, organ, {\n        color: [255, 255, 255, 255],\n        opacity: isSkin ? 0.5 : 0.2,\n        unpickable: true,\n        _lighting: 'pbr',\n      }) as SpatialSceneNode;\n\n      const scene = (this.db.getSpatialEntities(filter) ?? []).map((entity) =>\n        this.getSceneNode(entity, organ, { color: [255, 255, 255, 0.9 * 255] }),\n      ) as SpatialSceneNode[];\n      return [organNode].concat(scene).filter((n) => n !== undefined);\n    } else {\n      return [];\n    }\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    return this.db\n      .getSpatialEntities(filter)\n      .map((entity) => this.getSceneNode(entity, body, { color: [255, 255, 255, 0.9 * 255] }))\n      .filter((s) => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(\n    source: SpatialEntity,\n    target: SpatialEntity,\n    nodeAttrs: Partial<SpatialSceneNode> = {},\n  ): SpatialSceneNode | undefined {\n    const has3dObject = source?.object?.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4(Matrix4.IDENTITY).rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map((dim) => (dim * factor) / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'],\n        '@type': 'SpatialSceneNode',\n        entityId: source.entityId,\n        ccf_annotations: source.ccf_annotations,\n        representation_of: source.representation_of,\n        reference_organ: source.reference_organ,\n        sex: source.sex,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs,\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [...this.getReferenceSceneNodes(filter), ...this.getEntitySceneNodes(filter)];\n  }\n}\n","/** Status of the database */\nexport interface DatabaseStatus {\n  /** Status of the database */\n  status: 'Ready' | 'Loading' | 'Error';\n  /** How long to wait (in milliseconds) before checking status again */\n  checkback?: number;\n  /** The amount of time (in milliseconds) taken to load the database */\n  loadTime?: number;\n  /** Human readable description of the current status */\n  message?: string;\n  /** Timestamp of last update */\n  timestamp?: string;\n}\n\n/** Aggregate query result */\nexport interface AggregateResult {\n  /** Queried field */\n  label: string;\n  /** Aggregate value */\n  count: string | number;\n}\n\n/** List result */\nexport interface ListResultItem {\n  /** Identifier */\n  '@id': string;\n  /** Label */\n  label: string;\n  /** Description */\n  description: string;\n  /** Associated URL */\n  link: string;\n}\n\n/** Donor List Result */\nexport interface DonorResult extends ListResultItem {\n  /** JSON-LD Type */\n  '@type': 'Donor';\n  /** Provider Name */\n  providerName: string;\n}\n\n/** Dataset List Result */\nexport interface DatasetResult extends ListResultItem {\n  /** JSON-LD Type */\n  '@type': 'Dataset';\n  /** Technology used in data */\n  technology: string;\n  /** Representative thumbnail URL */\n  thumbnail: string;\n}\n\n/** Tissue Section List Result */\nexport interface TissueSectionResult extends ListResultItem {\n  /** JSON-LD Type */\n  '@type': 'Sample';\n  /** Sample tissue section type */\n  sampleType: 'Tissue Section' | 'Non-Standard';\n  /** Index into the sequence of sections from the parent block */\n  sectionNumber: number;\n  /** Datasets derived from this tissue section */\n  datasets: DatasetResult[];\n}\n\n/** Tissue Block List Result */\nexport interface TissueBlockResult extends ListResultItem {\n  /** JSON-LD Type */\n  '@type': 'Sample';\n  /** Sample tissue block type */\n  sampleType: 'Tissue Block' | 'Non-Standard';\n  /** Number of sections extracted from this block */\n  sectionCount: number;\n  /** Size of each tissue section */\n  sectionSize: number;\n  /** Units of the section size (generally, millimeters) */\n  sectionUnits: string;\n\n  /** The donor this tissue block was derived from */\n  donor: DonorResult;\n  /** The associated spatial entity (rui_location) for this block */\n  spatialEntityId: string;\n  /** The sections extracted from this tissue block */\n  sections: TissueSectionResult[];\n  /** Datasets derived from this tissue block */\n  datasets: DatasetResult[];\n}\n\n/** Item that can be searched for */\nexport interface SearchableItem {\n  /** Identifier */\n  id: string;\n  /** Sex */\n  sex?: 'Male' | 'Female';\n  /** Age */\n  age?: number;\n  /** BMI */\n  bmi?: number;\n  /** Ontology terms */\n  ontologyTerms?: Set<string>;\n  /** CellType terms */\n  cellTypeTerms?: Set<string>;\n  /** Biomarker terms */\n  biomarkerTerms?: Set<string>;\n}\n\n/** Specification for a Spatial Search via Probing Sphere */\nexport interface SpatialSearch {\n  /** X coordinate relative to target in millimeters */\n  x: number;\n  /** y coordinate relative to target in millimeters */\n  y: number;\n  /** z coordinate relative to target in millimeters */\n  z: number;\n  /** Size of the probing sphere in millimeters */\n  radius: number;\n  /** The target spatial entity IRI */\n  target: string;\n}\n\n/** Options applied during queries */\nexport interface Filter {\n  /** Sex */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range */\n  ageRange: [number, number];\n  /** BMI range */\n  bmiRange: [number, number];\n  /** Consortiums */\n  consortiums: string[];\n  /** Tissue Providers */\n  tmc: string[];\n  /** Technologies */\n  technologies: string[];\n  /** Ontology terms */\n  ontologyTerms: string[];\n  /** CellType terms */\n  cellTypeTerms: string[];\n  /** Biomarker terms */\n  biomarkerTerms: string[];\n  /** spatial search */\n  spatialSearches: SpatialSearch[];\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** A node in the ontology */\nexport interface OntologyTreeNode {\n  /** Identifier / IRI */\n  '@id': string;\n  /** JSON-LD Type */\n  '@type': 'OntologyTreeNode';\n  /** Identifier / IRI */\n  id: string;\n  /** RDFS label */\n  label: string;\n  /** Parent ontology node */\n  parent: string;\n  /** Child ontology nodes */\n  children: string[];\n  /** Synonym labels */\n  synonymLabels: string[];\n}\n\n/** Ontology tree model */\nexport interface OntologyTreeModel {\n  /** id of the root node of the ontology */\n  root: string;\n  /** Mapping from id/IRI to ontology node instance */\n  nodes: { [id: string]: OntologyTreeNode };\n}\n","import { readQuads, Store } from 'triple-store-utils';\n\nimport { AggregateResult } from '../interfaces';\nimport { entity } from '../util/prefixes';\n\nfunction getObjects(store: Store, ids: Set<string>, predicate: string): Set<string> {\n  const objects = new Set<string>();\n  for (const id of ids) {\n    for (const quad of readQuads(store, id, predicate, null, null)) {\n      objects.add(quad.object.id);\n    }\n  }\n  return objects;\n}\n\n/**\n * Computes aggregate results.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns The list of aggregate results.\n */\nexport function getAggregateResults(ids: Set<string>, store: Store): AggregateResult[] {\n  const donors = getObjects(store, ids, entity.donor.id);\n  const centers = getObjects(store, donors, entity.providerUUID.id);\n\n  const tissueBlocks = new Set<string>();\n  for (const id of ids) {\n    for (const quad of readQuads(store, id, entity.spatialEntity, null, null)) {\n      tissueBlocks.add(quad.subject.id);\n    }\n  }\n\n  const tissueSections = getObjects(store, tissueBlocks, entity.sections.id);\n  const tissueDatasets = new Set<string>([\n    ...getObjects(store, tissueBlocks, entity.datasets.id),\n    ...getObjects(store, tissueSections, entity.datasets.id),\n  ]);\n\n  const results: { [key: string]: number } = {\n    'Tissue Data Providers': centers.size,\n    Donors: donors.size,\n    'Tissue Blocks': tissueBlocks.size,\n    'Tissue Sections': tissueSections.size,\n    'Tissue Datasets': tissueDatasets.size,\n  };\n\n  return Object.entries(results).map(([label, count]) => ({ label, count }));\n}\n\n/**\n * Get a list of technology names used by datasets\n *\n * @param store The triple store.\n * @returns list of unique technology names in the data\n */\nexport function getDatasetTechnologyNames(store: Store): string[] {\n  const names = new Set<string>();\n  for (const quad of readQuads(store, null, entity.technology, null, null)) {\n    names.add(quad.object.value);\n  }\n  return Array.from(names).sort();\n}\n\n/**\n * Get a list of provider names from the database\n *\n * @param store The triple store.\n * @returns list of unique provider names in the data\n */\nexport function getProviderNames(store: Store): string[] {\n  const names = new Set<string>();\n  for (const quad of readQuads(store, null, entity.providerName, null, null)) {\n    names.add(quad.object.value);\n  }\n  return Array.from(names).sort();\n}\n","import { isFinite } from 'lodash';\nimport { fromRdf } from 'rdf-literal';\nimport { DataFactory, Literal, readQuads, Store, Term } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from '../ccf-spatial-graph';\nimport { Filter, SpatialSearch } from '../interfaces';\nimport { ccf, entity, rui } from '../util/prefixes';\nimport { filterByProbingSphere } from './spatial-search-n3';\n\nfunction filterWithDonor(\n  store: Store,\n  seen: Set<string>,\n  callback: (donorsSeen: Set<string>) => Set<string>,\n): Set<string> {\n  const donor2entity = new Map<string, string[]>();\n  const donors = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.donor, null, null)) {\n      donors.add(quad.object.id);\n      if (!donor2entity.has(quad.object.id)) {\n        donor2entity.set(quad.object.id, [subject]);\n      } else {\n        donor2entity.get(quad.object.id)?.push(subject);\n      }\n    }\n  }\n\n  const newDonors = callback(donors);\n  const newSeen = new Set<string>();\n  for (const d of newDonors) {\n    for (const s of donor2entity.get(d) ?? []) {\n      newSeen.add(s);\n    }\n  }\n  return newSeen;\n}\n\nfunction filterWithSpatialEntity(\n  store: Store,\n  seen: Set<string>,\n  callback: (entitiesSeen: Set<string>) => Set<string>,\n): Set<string> {\n  const spatial2entity = new Map<string, string[]>();\n  const entities = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.spatialEntity, null, null)) {\n      entities.add(quad.object.id);\n      if (!spatial2entity.has(quad.object.id)) {\n        spatial2entity.set(quad.object.id, [subject]);\n      } else {\n        spatial2entity.get(quad.object.id)?.push(subject);\n      }\n    }\n  }\n\n  const newSpatialEntities = callback(entities);\n  const newSeen = new Set<string>();\n  for (const e of newSpatialEntities) {\n    for (const s of spatial2entity.get(e) ?? []) {\n      newSeen.add(s);\n    }\n  }\n  return newSeen;\n}\n\nfunction filterWithDataset(\n  store: Store,\n  seen: Set<string>,\n  callback: (datasetsSeen: Set<string>) => Set<string>,\n): Set<string> {\n  const dataset2entity = new Map<string, string[]>();\n  const datasets = new Set<string>();\n\n  const sectionAndBlockSeen = new Set<string>(seen);\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.sections, null, null)) {\n      sectionAndBlockSeen.add(quad.object.id);\n    }\n  }\n\n  for (const subject of sectionAndBlockSeen) {\n    for (const quad of readQuads(store, subject, entity.datasets, null, null)) {\n      datasets.add(quad.object.id);\n      if (!dataset2entity.has(quad.object.id)) {\n        dataset2entity.set(quad.object.id, [subject]);\n      } else {\n        dataset2entity.get(quad.object.id)?.push(subject);\n      }\n    }\n  }\n\n  const newDatasets = callback(datasets);\n  const newSeen = new Set<string>();\n  for (const e of newDatasets) {\n    for (const s of dataset2entity.get(e) ?? []) {\n      newSeen.add(s);\n    }\n  }\n  return newSeen;\n}\n\n/**\n * Finds all ids of object matching a filter.\n *\n * @param store The triple store.\n * @param filter The filter to limit objects.\n * @returns A set of all ids matching the filter.\n */\nexport function findIds(store: Store, graph: CCFSpatialGraph, filter: Filter): Set<string> {\n  let seen = getAllEntities(store);\n  if (seen.size > 0) {\n    seen = filterByHasSpatialEntity(store, seen);\n  }\n  if (seen.size > 0 && (filter.sex === 'Male' || filter.sex === 'Female')) {\n    const sex = filter.sex;\n    seen = filterWithDonor(store, seen, (donors) => filterBySex(store, donors, sex));\n  }\n  if (seen.size > 0 && filter.consortiums?.length > 0) {\n    seen = filterWithDonor(store, seen, (donors) => filterByConsortiumName(store, donors, filter.consortiums));\n  }\n  if (seen.size > 0 && filter.tmc?.length > 0) {\n    seen = filterWithDonor(store, seen, (donors) => filterByGroupName(store, donors, filter.tmc));\n  }\n  if (seen.size > 0 && filter.technologies?.length > 0) {\n    seen = filterWithDataset(store, seen, (datasets) => filterByTechnology(store, datasets, filter.technologies));\n  }\n  if (seen.size > 0 && filter.spatialSearches?.length > 0) {\n    seen = filterWithSpatialEntity(store, seen, (entities) =>\n      filterBySpatialSearches(store, graph, entities, filter.spatialSearches),\n    );\n  }\n  if (seen.size > 0 && filter.ontologyTerms?.length > 0) {\n    const terms = filter.ontologyTerms;\n    if (terms.indexOf(rui.body.id) === -1) {\n      seen = filterWithSpatialEntity(store, seen, (entities) => filterByOntologyTerms(store, entities, terms));\n    }\n  }\n  if (seen.size > 0 && filter.cellTypeTerms?.length > 0) {\n    const terms = filter.cellTypeTerms;\n    if (terms.indexOf(rui.cell.id) === -1) {\n      seen = filterWithSpatialEntity(store, seen, (entities) => filterByCellTypeTerms(store, entities, terms));\n    }\n  }\n  if (seen.size > 0 && filter.biomarkerTerms?.length > 0) {\n    const terms = filter.biomarkerTerms;\n    if (terms.indexOf('http://purl.org/ccf/biomarkers') === -1) {\n      seen = filterWithSpatialEntity(store, seen, (entities) => filterByBiomarkerTerms(store, entities, terms));\n    }\n  }\n  if (seen.size > 0 && filter.ageRange?.length === 2 && isFinite(filter.ageRange[0]) && isFinite(filter.ageRange[1])) {\n    const maxAge = Math.max(...filter.ageRange);\n    const minAge = Math.min(...filter.ageRange);\n\n    // Age filter given by their default range will be ignored\n    if (!(minAge === 1 && maxAge === 110)) {\n      seen = filterWithDonor(store, seen, (donors) => filterByAge(store, donors, minAge, maxAge));\n    }\n  }\n  if (seen.size > 0 && filter.bmiRange?.length === 2 && isFinite(filter.bmiRange[0]) && isFinite(filter.bmiRange[1])) {\n    const maxBMI = Math.max(...filter.bmiRange);\n    const minBMI = Math.min(...filter.bmiRange);\n\n    // BMI filter given by their default range will be ignored\n    if (!(minBMI === 13 && maxBMI === 83)) {\n      seen = filterWithDonor(store, seen, (donors) => filterByBMI(store, donors, minBMI, maxBMI));\n    }\n  }\n  return seen;\n}\n\n/**\n * Gets all object ids in a store.\n *\n * @param store The triple store.\n * @returns A set of all ids.\n */\nfunction getAllEntities(store: Store): Set<string> {\n  const seen = new Set<string>();\n  store.forSubjects((s) => seen.add(s.id), entity.spatialEntity, null, null);\n  return seen;\n}\n\n/**\n * Creates a callback function that adds ids to a second set iff it exists in the first set.\n *\n * @param seen The first set of ids.\n * @param newSeen The second set to add ids to.\n * @returns The callback function.\n */\nfunction differenceCallback(seen: Set<string>, newSeen: Set<string>): (term: Term) => void {\n  return function (term: Term) {\n    if (seen.has(term.id)) {\n      newSeen.add(term.id);\n    }\n  };\n}\n\n/**\n * Filters ids by sex.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param sex Sex to filter on.\n * @returns The subset of ids with the specified sex.\n */\nfunction filterBySex(store: Store, seen: Set<string>, sex: 'Male' | 'Female'): Set<string> {\n  const newSeen = new Set<string>();\n  store.forSubjects(differenceCallback(seen, newSeen), entity.sex, entity[sex], null);\n  return newSeen;\n}\n\n/**\n * Filters ids by consortium names.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param consortiums Consortiums to filter on.\n * @returns The subset of ids with the specified consortiums.\n */\nfunction filterByConsortiumName(store: Store, seen: Set<string>, consortiums: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const consortium of consortiums) {\n    const literal = DataFactory.literal(consortium);\n    store.forSubjects(differenceCallback(seen, newSeen), entity.consortiumName, literal, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by group names.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param groupNames Group names to filter on.\n * @returns The subset of ids with the specified group names.\n */\nfunction filterByGroupName(store: Store, seen: Set<string>, groupNames: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const groupName of groupNames) {\n    const literal = DataFactory.literal(groupName);\n    store.forSubjects(differenceCallback(seen, newSeen), entity.providerName, literal, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by technology names.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param technologies Technology names to filter on.\n * @returns The subset of ids with the specified technology names.\n */\nfunction filterByTechnology(store: Store, seen: Set<string>, technologies: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const technology of technologies) {\n    const literal = DataFactory.literal(technology);\n    store.forSubjects(differenceCallback(seen, newSeen), entity.technology, literal, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by ontology terms.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param terms Ontology terms to filter on.\n * @returns The subset of ids with the specified ontology terms.\n */\nfunction filterByOntologyTerms(store: Store, seen: Set<string>, terms: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const term of terms) {\n    const namedNode = DataFactory.namedNode(term);\n    store.forSubjects(differenceCallback(seen, newSeen), ccf.spatialEntity.ccf_annotations, namedNode, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by cell type terms.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param terms Cell type terms to filter on.\n * @returns The subset of ids with the specified cell type terms.\n */\nfunction filterByCellTypeTerms(store: Store, seen: Set<string>, terms: string[]): Set<string> {\n  const asTerms = new Set<string>();\n  for (const term of terms) {\n    store.forObjects(\n      (asTerm) => {\n        asTerms.add(asTerm.id);\n      },\n      term,\n      ccf.asctb.located_in,\n      null,\n    );\n    if (term === rui.cell.id) {\n      asTerms.add(rui.body.id);\n    }\n  }\n  return filterByOntologyTerms(store, seen, [...asTerms]);\n}\n\n/**\n * Filters ids by biomarker terms.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param terms Biomarker terms to filter on.\n * @returns The subset of ids with the specified biomarker terms.\n */\nfunction filterByBiomarkerTerms(store: Store, seen: Set<string>, terms: string[]): Set<string> {\n  const asTerms = new Set<string>();\n  for (const term of terms) {\n    store.forObjects(\n      (asTerm) => {\n        asTerms.add(asTerm.id);\n      },\n      term,\n      ccf.asctb.bm_located_in,\n      null,\n    );\n    if (term === 'http://purl.org/ccf/biomarkers') {\n      asTerms.add(rui.body.id);\n    }\n  }\n  return filterByOntologyTerms(store, seen, [...asTerms]);\n}\n\n/**\n * Filters ids by age.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param minAge Minimum age.\n * @param maxAge Maximum age.\n * @returns The subset of ids with the specified age.\n */\nfunction filterByAge(store: Store, seen: Set<string>, minAge: number, maxAge: number): Set<string> {\n  const newSeen = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.age, null, null)) {\n      const value = fromRdf(quad.object as Literal) as number;\n      if (value >= minAge && value <= maxAge) {\n        newSeen.add(subject);\n      }\n    }\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by BMI.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param minBMI Minimum BMI.\n * @param maxBMI Maximum BMI.\n * @returns The subset of ids with the specified BMI.\n */\nfunction filterByBMI(store: Store, seen: Set<string>, minBMI: number, maxBMI: number): Set<string> {\n  const newSeen = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.bmi, null, null)) {\n      const value = fromRdf(quad.object as Literal) as number;\n      if (value >= minBMI && value <= maxBMI) {\n        newSeen.add(subject);\n      }\n    }\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by spatial entities.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param hasSpatialEntity Whether the filtered objects should have a spatial entity.\n * @returns The subset of ids with/without spatial entities.\n */\nfunction filterByHasSpatialEntity(store: Store, seen: Set<string>, hasSpatialEntity = true): Set<string> {\n  const newSeen = new Set<string>();\n  store.forSubjects(differenceCallback(seen, newSeen), entity.spatialEntity, null, null);\n  if (!hasSpatialEntity) {\n    const notNewSeen = new Set<string>();\n    seen.forEach((s) => (!newSeen.has(s) ? notNewSeen.add(s) : undefined));\n    return notNewSeen;\n  }\n  return newSeen;\n}\n\nfunction filterBySpatialSearches(\n  store: Store,\n  graph: CCFSpatialGraph,\n  seen: Set<string>,\n  spatialSearches: SpatialSearch[],\n): Set<string> {\n  const newSeen = new Set<string>();\n  for (const search of spatialSearches) {\n    const thisSeen = filterByProbingSphere(store, graph, seen, search);\n    thisSeen.forEach((s) => newSeen.add(s));\n  }\n  return newSeen;\n}\n","import { Store, readQuads } from 'triple-store-utils';\n\nimport { ccf, entity, rui } from '../util/prefixes';\n\nfunction getSpatialEntityMapping(subjects: Set<string>, store: Store): Map<string, Set<string>> {\n  const spatial2entity = new Map<string, Set<string>>();\n\n  for (const subject of subjects) {\n    for (const quad of readQuads(store, subject, entity.spatialEntity, null, null)) {\n      if (!spatial2entity.has(quad.object.id)) {\n        spatial2entity.set(quad.object.id, new Set<string>([subject]));\n      } else {\n        spatial2entity.get(quad.object.id)?.add(subject);\n      }\n    }\n  }\n  return spatial2entity;\n}\n\nfunction getAnatomicalStructureMapping(ids: Set<string>, store: Store): Map<string, Set<string>> {\n  const spatial2entity = getSpatialEntityMapping(ids, store);\n  const term2entity = new Map<string, Set<string>>();\n\n  for (const subject of spatial2entity.keys()) {\n    const entities = spatial2entity.get(subject);\n    for (const quad of readQuads(store, subject, ccf.spatialEntity.ccf_annotations, null, null)) {\n      if (!term2entity.has(quad.object.id)) {\n        term2entity.set(quad.object.id, new Set<string>(entities));\n      } else {\n        const termEntities = term2entity.get(quad.object.id);\n        entities?.forEach((value) => termEntities?.add(value));\n      }\n    }\n  }\n  return term2entity;\n}\n\n/**\n * Get number of occurrences of ontology terms for a set of ids.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns Ontology term counts.\n */\nexport function getOntologyTermOccurences(ids: Set<string>, store: Store): Record<string, number> {\n  const counts: Record<string, number> = {};\n  const term2entities = getAnatomicalStructureMapping(ids, store);\n\n  term2entities.forEach((value, key) => {\n    counts[key] = value.size;\n  });\n\n  return counts;\n}\n\n/**\n * Get number of occurrences of biomarkers terms for a set of ids.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns Ontology term counts.\n */\nexport function getBiomarkerTermOccurences(ids: Set<string>, store: Store): Record<string, number> {\n  const asTerm2entities = getAnatomicalStructureMapping(ids, store);\n  const bmTerm2entities = new Map<string, Set<string>>();\n\n  for (const asTerm of asTerm2entities.keys()) {\n    const entities = asTerm2entities.get(asTerm);\n    for (const quad of readQuads(store, null, ccf.asctb.bm_located_in, asTerm, null)) {\n      const biomarker = quad.subject.id;\n      if (!bmTerm2entities.has(biomarker)) {\n        bmTerm2entities.set(biomarker, new Set<string>(entities));\n      } else {\n        const termEntities = bmTerm2entities.get(biomarker);\n        entities?.forEach((value) => termEntities?.add(value));\n      }\n    }\n  }\n\n  const counts: Record<string, number> = {};\n\n  bmTerm2entities.forEach((value, key) => {\n    counts[key] = value.size;\n  });\n\n  counts['biomarkers'] = asTerm2entities.get(rui.body.id)?.size ?? 0;\n\n  return counts;\n}\n\n/**\n * Get number of occurrences of cell type terms for a set of ids.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns Ontology term counts.\n */\nexport function getCellTypeTermOccurences(ids: Set<string>, store: Store): Record<string, number> {\n  const asTerm2entities = getAnatomicalStructureMapping(ids, store);\n  const ctTerm2entities = new Map<string, Set<string>>();\n\n  for (const asTerm of asTerm2entities.keys()) {\n    const entities = asTerm2entities.get(asTerm);\n    for (const quad of readQuads(store, null, ccf.asctb.located_in, asTerm, null)) {\n      const cellType = quad.subject.id;\n      if (!ctTerm2entities.has(cellType)) {\n        ctTerm2entities.set(cellType, new Set<string>(entities));\n      } else {\n        const termEntities = ctTerm2entities.get(cellType);\n        entities?.forEach((value) => termEntities?.add(value));\n      }\n    }\n  }\n\n  const counts: Record<string, number> = {};\n\n  ctTerm2entities.forEach((value, key) => {\n    counts[key] = value.size;\n  });\n\n  counts[rui.cell.id] = asTerm2entities.get(rui.body.id)?.size ?? 0;\n\n  return counts;\n}\n","import { memoize } from 'lodash';\nimport { readQuads, Store } from 'triple-store-utils';\nimport { OntologyTreeModel, OntologyTreeNode } from '../interfaces';\nimport { getEntries } from '../util/n3-functions';\nimport { ccf, rdfs, rui } from '../util/prefixes';\n\nexport function getOntologyTreeNode(store: Store, iri: string, relationshipIri: string): OntologyTreeNode {\n  const result: OntologyTreeNode = {\n    '@id': iri,\n    '@type': 'OntologyTreeNode',\n    id: iri,\n    parent: '',\n    children: [] as string[],\n    synonymLabels: [] as string[],\n    label: '',\n  };\n\n  const ontologyTreeNodeResult = {\n    [ccf.ontologyNode.label.id]: 'label',\n    [relationshipIri]: 'parent',\n    [ccf.ontologyNode.synonymLabels.id]: 'synonymLabels',\n  };\n\n  for (const [key, value] of getEntries(store, iri, ontologyTreeNodeResult)) {\n    if (key === 'synonymLabels') {\n      result.synonymLabels.push(value as string);\n    } else {\n      result[key as keyof OntologyTreeNode] = value as never;\n    }\n  }\n  result.children = store.getSubjects(relationshipIri, iri, null).map((s) => s.id);\n\n  return result;\n}\n\nexport function getOntologyTreeModel(\n  store: Store,\n  rootIri: string,\n  rootLabel: string,\n  relationshipIri: string,\n): OntologyTreeModel {\n  const result: OntologyTreeModel = { root: rootIri, nodes: {} };\n  const seen = new Set<string>();\n  for (const quad of readQuads(store, null, relationshipIri, null, null)) {\n    seen.add(quad.subject.id);\n    seen.add(quad.object.id);\n  }\n\n  for (const iri of seen) {\n    result.nodes[iri] = getOntologyTreeNode(store, iri, relationshipIri);\n  }\n\n  if (!result.nodes[rootIri]) {\n    result.nodes[rootIri] = {\n      '@id': rootIri,\n      '@type': 'OntologyTreeNode',\n      id: rootIri,\n      label: rootLabel,\n      children: [],\n      synonymLabels: [],\n    } as unknown as OntologyTreeNode;\n  }\n\n  const rootChildren = store\n    .getSubjects(relationshipIri, rootIri, null)\n    .map((o) => o.id)\n    .sort((a, b) => result.nodes[a].label.localeCompare(result.nodes[b].label));\n  result.nodes[rootIri].children = rootChildren;\n\n  treeify(result);\n\n  return result;\n}\n\n/**\n * Recursive function to ensure that the given ontology tree model is actually a tree by essentially using a BFS search.\n *\n * @param model the ontology tree model to mutate\n * @param nodeIri the tree node iri to modify. Starts at root in the base case\n * @param seen a set of IRIs that have been 'seen' so far to remove loops in the graph\n */\nfunction treeify(model: OntologyTreeModel, nodeIri: string | undefined = undefined, seen: Set<string> = new Set()) {\n  const node = model.nodes[nodeIri ?? model.root];\n  if (node) {\n    node.children = node.children.filter((n) => !seen.has(n));\n    node.children.forEach((n) => seen.add(n));\n    for (const childId of node.children) {\n      treeify(model, childId, seen);\n      if (model.nodes[childId]) {\n        model.nodes[childId].parent = node['@id'];\n      }\n    }\n  }\n}\n\nexport function getAnatomicalStructureTreeModelSlowly(store: Store): OntologyTreeModel {\n  const model = getOntologyTreeModel(store, rui.body.id, 'body', ccf.asctb.part_of.id);\n  model.nodes[rui.body.id].children = [\n    'http://purl.obolibrary.org/obo/UBERON_0000955', // Brain\n    'http://purl.obolibrary.org/obo/UBERON_0000029', // Lymph Node\n    // 'http://purl.obolibrary.org/obo/UBERON_0002509', // Mesenteric Lymph Node\n    'http://purl.obolibrary.org/obo/UBERON_0000970', // Eye\n    // 'http://purl.obolibrary.org/obo/UBERON_0004548', // Eye, L\n    // 'http://purl.org/sig/ont/fma/fma54449', // Eye, R\n    'http://purl.obolibrary.org/obo/UBERON_0003889', // Fallopian Tube\n    // 'http://purl.obolibrary.org/obo/UBERON_0001303', // Fallopian Tube, L\n    // 'http://purl.obolibrary.org/obo/UBERON_0001302', // Fallopian Tube, R\n    'http://purl.obolibrary.org/obo/UBERON_0000948', // Heart\n    'http://purl.obolibrary.org/obo/UBERON_0002113', // Kidney\n    // 'http://purl.obolibrary.org/obo/UBERON_0004538', // Kidney, L\n    // 'http://purl.obolibrary.org/obo/UBERON_0004539', // Kidney, R\n    'http://purl.obolibrary.org/obo/UBERON_0001465', // Knee\n    // 'http://purl.org/sig/ont/fma/fma24978', // Knee, L\n    // 'http://purl.org/sig/ont/fma/fma24977', // Knee, R\n    'http://purl.obolibrary.org/obo/UBERON_0001737', // Larynx\n    'http://purl.obolibrary.org/obo/UBERON_0002107', // Liver\n    'http://purl.obolibrary.org/obo/UBERON_0002048', // Lungs\n    'http://purl.obolibrary.org/obo/UBERON_0002182', // Main Bronchus\n    'http://purl.obolibrary.org/obo/UBERON_0001911', // Mammary Gland\n    // 'http://purl.org/sig/ont/fma/fma57991', // Mammary Gland, L\n    // 'http://purl.org/sig/ont/fma/fma57987', // Mammary Gland, R\n    'http://purl.obolibrary.org/obo/UBERON_0000992', // Ovary\n    // 'http://purl.org/sig/ont/fma/fma7214', // Ovary, L\n    // 'http://purl.org/sig/ont/fma/fma7213', // Ovary, R\n    'http://purl.obolibrary.org/obo/UBERON_0002373', // Palatine Tonsil\n    // 'http://purl.org/sig/ont/fma/fma54974', // Palatine Tonsil, L\n    // 'http://purl.org/sig/ont/fma/fma54973', // Palatine Tonsil, R\n    'http://purl.obolibrary.org/obo/UBERON_0001264', // Pancreas\n    'http://purl.obolibrary.org/obo/UBERON_0001270', // Pelvis\n    'http://purl.obolibrary.org/obo/UBERON_0001987', // Placenta\n    'http://purl.obolibrary.org/obo/UBERON_0002367', // Prostate\n    'http://purl.obolibrary.org/obo/UBERON_0002097', // Skin\n    'http://purl.obolibrary.org/obo/UBERON_0002108', // Small Intestine\n    'http://purl.obolibrary.org/obo/UBERON_0002240', // Spinal Cord\n    'http://purl.obolibrary.org/obo/UBERON_0000059', // Large Intestine\n    'http://purl.obolibrary.org/obo/UBERON_0002106', // Spleen\n    'http://purl.obolibrary.org/obo/UBERON_0002370', // Thymus\n    'http://purl.obolibrary.org/obo/UBERON_0003126', // Trachea\n    'http://purl.obolibrary.org/obo/UBERON_0000056', // Ureter\n    // 'http://purl.obolibrary.org/obo/UBERON_0001223', // Ureter, L\n    // 'http://purl.obolibrary.org/obo/UBERON_0001222', // Ureter, R\n    'http://purl.obolibrary.org/obo/UBERON_0001255', // Urinary Bladder\n    'http://purl.obolibrary.org/obo/UBERON_0000995', // Uterus\n    'http://purl.obolibrary.org/obo/UBERON_0004537', // Blood Vasculature\n    // 'http://purl.obolibrary.org/obo/UBERON_0000467', // Anatomical System\n  ].filter((iri) => iri in model.nodes);\n  return model;\n}\n\nexport const getAnatomicalStructureTreeModel = memoize(getAnatomicalStructureTreeModelSlowly, () => '');\n\nexport function getCellTypeTreeModel(store: Store): OntologyTreeModel {\n  return getOntologyTreeModel(store, rui.cell.id, 'cell', ccf.asctb.ct_is_a.id);\n}\n\nfunction formBiomarkerNode(id: string, label: string, parent: string, children: string[]): OntologyTreeNode {\n  return {\n    ['@id']: `http://purl.org/ccf/${id}`,\n    id,\n    label,\n    parent: parent ?? '',\n    children: children ?? [],\n    synonymLabels: [],\n    ['@type']: 'OntologyTreeNode',\n  };\n}\n\nexport function getBiomarkerTreeModel(store: Store): OntologyTreeModel {\n  const bmType = ccf.x('ccf_biomarker_type');\n\n  const nodes: Record<string, OntologyTreeNode> = {\n    biomarkers: formBiomarkerNode('biomarkers', 'Biomarkers', '', []),\n  };\n  for (const quad of readQuads(store, null, bmType, null, null)) {\n    const bm = quad.object.value;\n    const iri = quad.subject.id;\n    if (!nodes[bm]) {\n      nodes[bm] = formBiomarkerNode(bm, bm[0].toUpperCase() + bm.slice(1), 'biomarkers', []);\n      nodes['biomarkers'].children.push(bm);\n    }\n    nodes[bm].children.push(iri);\n\n    const result = formBiomarkerNode(iri, '', bm, []);\n    const ontologyTreeNodeResult = {\n      [ccf.ontologyNode.label.id]: 'label',\n      [rdfs.label.id]: 'synonymLabels',\n    };\n\n    for (const [key, value] of getEntries(store, iri, ontologyTreeNodeResult)) {\n      if (key === 'synonymLabels') {\n        if (value && value !== result.label) {\n          result.synonymLabels.push(value as string);\n        }\n      } else {\n        result[key as keyof OntologyTreeNode] = value as never;\n      }\n    }\n\n    for (const node of Object.values(nodes)) {\n      if (node.children.length > 1) {\n        node.children.sort((a, b) => nodes[a]?.label.localeCompare(nodes[b]?.label));\n      }\n    }\n\n    nodes[iri] = result;\n  }\n\n  return {\n    root: 'biomarkers',\n    nodes,\n  };\n}\n","import { sortBy } from 'lodash';\nimport { DataFactory, NamedNode, Store } from 'triple-store-utils';\n\nimport { ExtractionSet, SpatialEntity, SpatialObjectReference, SpatialPlacement } from '../spatial-types';\nimport { getMappedResult } from '../util/n3-functions';\nimport { ccf, entity } from '../util/prefixes';\n\n/**\n * Reverses the keys and values in a mapping.\n *\n * @param mapping The mapping to reverse.\n * @returns The reversed mapping.\n */\nfunction reverseMapping(mapping: { [property: string]: NamedNode }): {\n  [iri: string]: string;\n} {\n  const newMapping: { [iri: string]: string } = {};\n  Object.entries(mapping).forEach(([prop, predicate]) => {\n    newMapping[predicate.id] = prop;\n  });\n  return newMapping;\n}\n\n/** A mapping of spatial objects. */\nconst mappings = {\n  spatialObjectReference: reverseMapping(ccf.spatialObjectReference),\n  spatialEntity: reverseMapping(ccf.spatialEntity),\n  spatialPlacement: reverseMapping(ccf.spatialPlacement),\n};\n\n/**\n * Creates a spatial object reference.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns The new reference.\n */\nexport function getSpatialObjectReference(store: Store, iri: string): SpatialObjectReference {\n  return getMappedResult<SpatialObjectReference>(store, iri, 'SpatialObjectReference', mappings.spatialObjectReference);\n}\n\n/**\n * Creates an extraction set data object.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns The new entity.\n */\nexport function getExtractionSet(store: Store, iri: string): ExtractionSet {\n  const result = getMappedResult<ExtractionSet>(store, iri, 'ExtractionSet', mappings.spatialEntity);\n  result.extractionSites = sortBy(\n    store.getSubjects(ccf.spatialEntity.extraction_set, iri, null).map((value) => getSpatialEntity(store, value.id)),\n    ['rui_rank'],\n  );\n  return result;\n}\n\n/**\n * Gets extraction sets associated with a reference organ\n *\n * @param store The triple store.\n * @param iri The data identifier (the reference organ).\n * @returns A set of extraction sets associated with the reference organ\n */\nexport function getExtractionSets(store: Store, iri: string): ExtractionSet[] {\n  return sortBy(\n    store\n      .getSubjects(ccf.spatialEntity.extraction_set_for, iri, null)\n      .map((value) => getExtractionSet(store, value.id)),\n    ['rui_rank'],\n  );\n}\n\n/**\n * Gets the anatomical structures associated with a reference organ.\n *\n * @param store The triple store.\n * @param iri The data identifier (reference organ).\n * @returns The new entity.\n */\nexport function getAnatomicalStructures(store: Store, iri: string): SpatialEntity[] {\n  return sortBy(\n    store\n      .getSubjects(ccf.spatialEntity.reference_organ, iri, null)\n      .map((value) => getSpatialEntity(store, value.id))\n      .filter((e) => e['@id'] !== iri),\n    ['rui_rank'],\n  );\n}\n\n/**\n * Gets all reference organs in the triple store\n *\n * @param store The triple store.\n * @returns All the reference organs.\n */\nexport function getReferenceOrgans(store: Store): SpatialEntity[] {\n  const results: SpatialEntity[] = [];\n  store.forEach(\n    (quad) => {\n      if (quad.subject.id === quad.object.id) {\n        results.push(getSpatialEntity(store, quad.subject.id));\n      }\n    },\n    null,\n    ccf.spatialEntity.reference_organ,\n    null,\n    null,\n  );\n  return sortBy(results, ['rui_rank']);\n}\n\n/**\n * Creates a spatial entity data object.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns The new entity.\n */\nexport function getSpatialEntity(store: Store, iri: string): SpatialEntity {\n  const result = getMappedResult<SpatialEntity>(store, iri, 'SpatialEntity', mappings.spatialEntity);\n  // Default mapping will come back as an IRI which we can look up for the full object\n  if (result.object) {\n    result.object = getSpatialObjectReference(store, result.object as unknown as string);\n  }\n  if (result.ccf_annotations) {\n    result.ccf_annotations = store.getObjects(iri, ccf.spatialEntity.ccf_annotations, null).map((o) => o.id);\n  }\n  store.forSubjects((subject) => (result.entityId = subject.id), entity.spatialEntity, iri, null);\n  return result;\n}\n\n/**\n * Creates a spatial placement object.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns THe new placement object.\n */\nexport function getSpatialPlacement(store: Store, iri: string): SpatialPlacement {\n  const result = getMappedResult<SpatialPlacement>(store, iri, 'SpatialPlacement', mappings.spatialPlacement);\n  // Default mapping will come back as an IRI for source/target which we can look up for the full object\n  if (result.source) {\n    result.source = getSpatialEntity(store, result.source as unknown as string);\n  }\n  if (result.target) {\n    result.target = getSpatialEntity(store, result.target as unknown as string);\n  }\n  return result;\n}\n\n/**\n * Creates a spatial entity based on another entity in the store.\n *\n * @param store The triple store.\n * @param entityIRI The indentifier of the store entity.\n * @returns A new entity.\n */\nexport function getSpatialEntityForEntity(store: Store, entityIRI: string): SpatialEntity | undefined {\n  const spatialEntityNodes = store.getObjects(DataFactory.namedNode(entityIRI), entity.spatialEntity, null);\n  if (spatialEntityNodes.length > 0) {\n    return getSpatialEntity(store, spatialEntityNodes[0].id);\n  } else {\n    return undefined;\n  }\n}\n","import { Euler } from '@math.gl/core';\nimport { OrientedBoundingBox } from '@math.gl/culling';\nimport { Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from '../ccf-spatial-graph';\nimport { SpatialSearch } from '../interfaces';\nimport { getMappedResult } from '../util/n3-functions';\nimport { ccf } from '../util/prefixes';\n\nconst spatialEntityDimensions = {\n  [ccf.spatialEntity.x_dimension.id]: 'x',\n  [ccf.spatialEntity.y_dimension.id]: 'y',\n  [ccf.spatialEntity.z_dimension.id]: 'z',\n};\n\nfunction getSpatialEntityDimensions(store: Store, iri: string): [number, number, number] {\n  const dims = getMappedResult<{ x: number; y: number; z: number }>(store, iri, 'Dimensions', spatialEntityDimensions);\n  return [dims.x, dims.y, dims.z];\n}\n\nexport function getOrientedBoundingBox(\n  store: Store,\n  graph: CCFSpatialGraph,\n  sourceIri: string,\n  targetIri: string,\n): OrientedBoundingBox | undefined {\n  const matrix = graph.getTransformationMatrix(sourceIri, targetIri);\n  let result: OrientedBoundingBox | undefined = undefined;\n  if (matrix) {\n    const center = matrix.getTranslation();\n    const halfSize = getSpatialEntityDimensions(store, sourceIri).map((n) => n / 1000 / 2);\n    const quaternion = new Euler().fromRotationMatrix(matrix, Euler.XYZ).toQuaternion().normalize().calculateW();\n    result = new OrientedBoundingBox().fromCenterHalfSizeQuaternion(center as number[], halfSize, quaternion);\n  }\n  return result;\n}\n\nexport function filterByProbingSphere(\n  store: Store,\n  graph: CCFSpatialGraph,\n  seen: Set<string>,\n  search: SpatialSearch,\n): Set<string> {\n  const { x, y, z, radius, target } = search;\n  const newSeen = new Set<string>();\n  const radiusSquared = (radius / 1000) * (radius / 1000);\n  for (const sourceIri of seen) {\n    const boundingBox = getOrientedBoundingBox(store, graph, sourceIri, target);\n    if (boundingBox) {\n      const distanceSquared = boundingBox.distanceSquaredTo([x, y, z].map((n) => n / 1000));\n      if (distanceSquared <= radiusSquared) {\n        newSeen.add(sourceIri);\n      }\n    }\n  }\n  return newSeen;\n}\n","import { Store } from 'triple-store-utils';\nimport { DatasetResult, DonorResult, TissueBlockResult, TissueSectionResult } from '../interfaces';\nimport { getEntries, getMappedResult } from '../util/n3-functions';\nimport { entity } from '../util/prefixes';\n\n/** Entity iri to property path. */\nconst listResultSet: { [iri: string]: string } = {\n  [entity.label.id]: 'label',\n  [entity.description.id]: 'description',\n  [entity.link.id]: 'link',\n};\n\nconst donorResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.providerName.id]: 'providerName',\n};\n\nconst datasetResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.technology.id]: 'technology',\n  [entity.thumbnail.id]: 'thumbnail',\n};\n\nconst tissueSectionResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.sampleType.id]: 'sampleType',\n  [entity.sectionNumber.id]: 'sectionNumber',\n  [entity.datasets.id]: 'datasets',\n};\n\nconst tissueBlockResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.sampleType.id]: 'sampleType',\n  [entity.sectionCount.id]: 'sectionCount',\n  [entity.sectionSize.id]: 'sectionSize',\n  [entity.sectionUnits.id]: 'sectionUnits',\n\n  [entity.donor.id]: 'donor',\n  [entity.spatialEntity.id]: 'spatialEntityId',\n  [entity.sections.id]: 'sections',\n  [entity.datasets.id]: 'datasets',\n};\n\n/**\n * Extracts a single donor result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getDonorResult(store: Store, iri: string): DonorResult {\n  return getMappedResult(store, iri, 'Donor', donorResultSet);\n}\n\n/**\n * Extracts a single dataset result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getDatasetResult(store: Store, iri: string): DatasetResult {\n  return getMappedResult(store, iri, 'Dataset', datasetResultSet);\n}\n\n/**\n * Extracts a single tissue section result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getTissueSectionResult(store: Store, iri: string): TissueSectionResult {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const result = {\n    '@id': iri,\n    '@type': 'Sample',\n    datasets: [] as DatasetResult[],\n  } as TissueSectionResult;\n  for (const [key, value] of getEntries(store, iri, tissueSectionResultSet)) {\n    if (key === 'datasets') {\n      const dataset = getDatasetResult(store, value as string);\n      result[key].push(dataset);\n    } else {\n      result[key as keyof TissueSectionResult] = value as never;\n    }\n  }\n  return result;\n}\n\n/**\n * Extracts a single tissue block result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getTissueBlockResult(store: Store, iri: string): TissueBlockResult {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const result = {\n    '@id': iri,\n    '@type': 'Sample',\n    sections: [] as TissueSectionResult[],\n    datasets: [] as DatasetResult[],\n  } as TissueBlockResult;\n  for (const [key, value] of getEntries(store, iri, tissueBlockResultSet)) {\n    if (key === 'sections') {\n      const section = getTissueSectionResult(store, value as string);\n      result[key].push(section);\n    } else if (key === 'datasets') {\n      const dataset = getDatasetResult(store, value as string);\n      result[key].push(dataset);\n    } else if (key === 'donor') {\n      result[key] = getDonorResult(store, value as string);\n    } else {\n      result[key as keyof TissueBlockResult] = value as never;\n    }\n  }\n  return result;\n}\n","/** A reference to a spatial object */\nexport interface SpatialObjectReference {\n  /** Identifier */\n  '@id': string;\n  /** Type name */\n  '@type': 'SpatialObjectReference';\n  /** Data file name */\n  file: string;\n  /** Data format */\n  file_format: string;\n  /** File subpath */\n  file_subpath?: string;\n}\n\n/** A set of extraction sites */\nexport interface ExtractionSet {\n  /** Identifier */\n  '@id': string;\n  /** Type name */\n  '@type': 'ExtractionSet';\n  /** Entity label */\n  label: string;\n  /** The list of extraction sites in this set */\n  extractionSites: SpatialEntity[];\n}\n\n/** A spatial entity */\nexport interface SpatialEntity {\n  /** Identifier */\n  '@id': string;\n  /** Type name */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label */\n  label?: string;\n  /** Entity comment */\n  comment?: string;\n  /** Creator */\n  creator?: string;\n  /** Creator first name */\n  creator_first_name?: string;\n  /** Creator last name */\n  creator_last_name?: string;\n  /** Creator middle name */\n  creator_middle_name?: string;\n  /** Creator identifier */\n  creator_orcid?: string;\n  /** Creation date */\n  creation_date?: string;\n\n  /** Annotations (a set of IRIs) */\n  ccf_annotations?: string[];\n  /** Annotation (IRI) that says what this entity represents */\n  representation_of?: string;\n  /** Specifies if this is an anatomical structure of this organ (IRI) */\n  reference_organ?: string;\n  /** Specifies (where applicable) if this entity came from a Male or Female */\n  sex: 'Male' | 'Female' | undefined;\n  /** Specifies (where applicable) if this entity came from the left or right side organ */\n  side: 'Left' | 'Right' | undefined;\n  /** Ranking used in the RUI for ordering lists */\n  rui_rank?: number;\n  /** The thickness (in nanometers) of slices taken out of this spatial entity */\n  slice_thickness?: number;\n  /** The number of slices taken out of this spatial entity */\n  slice_count?: number;\n\n  /** X-dimension */\n  x_dimension: number;\n  /** Y-dimension */\n  y_dimension: number;\n  /** Z-dimension */\n  z_dimension: number;\n  /** Units dimensions are in */\n  dimension_units: string;\n  /** Data references */\n  object?: SpatialObjectReference;\n\n  /** Coloring */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity */\nexport interface SpatialPlacementCommon {\n  /** JSON-LD context */\n  '@context'?: string;\n  /** Identifier */\n  '@id': string;\n  /** Type name */\n  '@type': 'SpatialPlacement';\n\n  /** Date placement was made */\n  placement_date: string;\n  /** Scaling in x-dimension */\n  x_scaling: number;\n  /** Scaling in y-dimension */\n  y_scaling: number;\n  /** Scaling in z-dimension */\n  z_scaling: number;\n  /** Units scaling is expressed in */\n  scaling_units: string;\n\n  /** Rotation in x-dimension */\n  x_rotation: number;\n  /** Rotation in y-dimension */\n  y_rotation: number;\n  /** Rotation in z-dimension */\n  z_rotation: number;\n  /** Rotation in w-dimension */\n  w_rotation?: number;\n  /** Order rotations should be applied in */\n  rotation_order?: string;\n  /** Units rotation is expressed in */\n  rotation_units: string;\n\n  /** Translation in x-dimension */\n  x_translation: number;\n  /** Translation in y-dimension */\n  y_translation: number;\n  /** Translation in z-dimension */\n  z_translation: number;\n  /** Units translation is expressed in */\n  translation_units: string;\n}\n\nexport interface SpatialPlacement extends SpatialPlacementCommon {\n  /** Source entity */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity */\n  target: SpatialEntity;\n}\n\nexport interface FlatSpatialPlacement extends SpatialPlacementCommon {\n  /** Source entity iri */\n  source: string;\n  /** Target entity iri */\n  target: string;\n}\n","import { CCFDatabase } from '../ccf-database';\nimport { DatabaseStatus } from '../interfaces';\n\nexport class CCFDatabaseStatusTracker {\n  status: 'Ready' | 'Loading' | 'Error' = 'Loading';\n  message?: string;\n  loadTime?: number;\n  timestamp?: string;\n\n  constructor(public database: CCFDatabase) {\n    this.connect();\n  }\n\n  toJson(): DatabaseStatus {\n    return {\n      status: this.status,\n      message: this.message,\n      checkback: this.status === 'Ready' || this.status === 'Error' ? 60 * 60 * 1000 : 2000,\n      loadTime: this.loadTime,\n      timestamp: this.timestamp,\n    };\n  }\n\n  private async connect(): Promise<void> {\n    this.status = 'Loading';\n    this.message = 'Loading database';\n\n    const startTime = Date.now();\n    return this.database\n      .connect()\n      .then(async (loaded) => {\n        if (loaded) {\n          // Warm up the database\n          this.message = 'Building scene';\n          this.timestamp = new Date().toISOString();\n          await this.database.getScene();\n          this.message = 'Building tissue block results';\n          this.timestamp = new Date().toISOString();\n          await this.database.getTissueBlockResults();\n          this.message = 'Aggregating results';\n          this.timestamp = new Date().toISOString();\n          await this.database.getAggregateResults();\n          this.status = 'Ready';\n          this.message = 'Database successfully loaded';\n          this.timestamp = new Date().toISOString();\n        } else {\n          this.status = 'Error';\n          this.message = 'Unknown error while loading database';\n          this.timestamp = new Date().toISOString();\n        }\n      })\n      .catch((error: { message?: string }) => {\n        this.status = 'Error';\n        this.message = error?.message ?? 'Unknown error while loading database';\n        this.timestamp = new Date().toISOString();\n      })\n      .finally(() => {\n        this.loadTime = Date.now() - startTime;\n      });\n  }\n}\n","import { JsonLd } from 'jsonld/jsonld-spec';\n\n/**\n * The SPARQL endpoint to grab the data from\n */\nconst SPARQL_ENDPOINT = 'https://lod.humanatlas.io/sparql';\n\n/**\n * A query that computes a graph containing Biomarkers located in Anatomical Structures\n */\nconst query = `\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ccf: <http://purl.org/ccf/>\nPREFIX has_characterizing_biomarker_set: <http://purl.obolibrary.org/obo/RO_0015004>\n\nCONSTRUCT { ?bm ccf:ccf_bm_located_in ?as }\nFROM <https://purl.org/ccf/ccf.owl>\nWHERE {\n  ?ct ccf:ccf_located_in ?as .\n\n  ?ct rdfs:subClassOf [\n  \towl:onProperty has_characterizing_biomarker_set: ;\n  \towl:someValuesFrom [ owl:intersectionOf ?bn3 ]] .\n  ?bn3 rdf:rest*/rdf:first [\n  \towl:onProperty ccf:has_marker_component ;\n    owl:someValuesFrom ?bm\n  ] .\n}\n`;\n\n/**\n * Get biomarkers located in AS as a JSON-LD object\n * @returns the json-ld graph with BMs located in AS\n */\nexport async function getBmLocatedInAs(): Promise<JsonLd> {\n  const url = `${SPARQL_ENDPOINT}?query=${encodeURIComponent(query)}`;\n  return fetch(url, {\n    headers: { ['Accept']: 'application/ld+json' },\n  })\n    .then((r) => r.json())\n    .catch((err) => {\n      console.log('Error querying lod.humanatlas.io', err);\n      return [];\n    });\n}\n","import { DataFactory, NamedNode, Store, readQuads } from 'triple-store-utils';\nimport { getAnatomicalStructureTreeModel } from '../queries/ontology-tree-n3';\nimport { ccf, entity } from './prefixes';\n\n/**\n * Function to add additional ccf_annotations to rui locations based on the\n * reference organ it was placed relative to.\n *\n * @param store the triple store holding the CCF.OWL data\n */\nexport function enrichRuiLocations(store: Store): void {\n  const tree = getAnatomicalStructureTreeModel(store);\n  const refOrganMap: Map<string, NamedNode[]> = new Map();\n\n  // Build a map from reference organ to ccf annotations via representation_of and the AS partonomy\n  for (const { subject: organ, object: term } of readQuads(\n    store,\n    null,\n    ccf.spatialEntity.representation_of,\n    null,\n    null,\n  )) {\n    const annotations = new Set([term.id]);\n    let parent = tree.nodes[term.id]?.parent;\n    while (parent) {\n      if (annotations.has(parent)) {\n        break;\n      } else {\n        annotations.add(parent);\n        parent = tree.nodes[parent]?.parent;\n      }\n    }\n    refOrganMap.set(\n      organ.id,\n      [...annotations].map((s) => DataFactory.namedNode(s)),\n    );\n  }\n\n  // Add AS terms for rui locations based on the reference organs they are placed relative to\n  for (const { object: ruiLocation } of readQuads(store, null, entity.spatialEntity, null, null)) {\n    for (const { subject: placement } of readQuads(store, null, ccf.spatialPlacement.source, ruiLocation, null)) {\n      for (const { object: organ } of readQuads(store, placement, ccf.spatialPlacement.target, null, null)) {\n        for (const term of refOrganMap.get(organ.id) ?? []) {\n          store.addQuad(DataFactory.namedNode(ruiLocation.id), ccf.spatialEntity.ccf_annotations, term);\n        }\n      }\n    }\n  }\n}\n","import { fromRdf } from 'rdf-literal';\nimport { Store, readQuads } from 'triple-store-utils';\n\n/**\n * Iterates over the key/value pairs for an IRI, using the specified mapping with quads from the store.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @param mapping Property mappings.\n * @returns an iterator over the key/value pairs\n */\nexport function* getEntries(\n  store: Store,\n  iri: string,\n  mapping: { [iri: string]: string },\n): Generator<[string, string | number]> {\n  for (const [predicate, key] of Object.entries(mapping)) {\n    for (const quad of readQuads(store, iri, predicate, null, null)) {\n      const value = quad.object.termType === 'Literal' ? fromRdf(quad.object) : quad.object.id;\n      yield [key, value];\n    }\n  }\n}\n\n/**\n * Creates an object of the specified type using quads from the store.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @param type Type name.\n * @param mapping Property mappings.\n * @returns A new data object.\n */\nexport function getMappedResult<T = unknown>(\n  store: Store,\n  iri: string,\n  type: string,\n  mapping: { [iri: string]: string },\n): T {\n  const result = { '@id': iri, '@type': type };\n  for (const [predicate, key] of Object.entries(mapping)) {\n    for (const quad of readQuads(store, result['@id'], predicate, null, null)) {\n      const value = quad.object.termType === 'Literal' ? fromRdf(quad.object) : quad.object.id;\n      result[key as never] = value as never;\n    }\n  }\n  return result as unknown as T;\n}\n","import { Matrix4, toRadians } from '@math.gl/core';\nimport { SpatialSceneNode } from '../ccf-spatial-scene';\nimport { SpatialEntity } from '../spatial-types';\n\ntype Color = [number, number, number, number];\nconst gray: Color = [204, 204, 204, 255];\nconst red: Color = [213, 0, 0, 255];\nconst green: Color = [29, 204, 101, 255];\nconst blue: Color = [41, 121, 255, 255];\n\n/**\n * Create a set of scene nodes for the body-ui to show the origin and lines extending to it's dimensions.\n * @param node the Spatial Entity (usually a reference organ) that the origin is defined by\n * @param includeLetters whether to show the keyboard letters associated with the origin points\n * @param centered whether to center the organ at the origin point\n * @returns a set of scene nodes for the body-ui\n */\nexport function getOriginScene(node: SpatialEntity, includeLetters = false, centered = false): SpatialSceneNode[] {\n  const sceneWidth = node.x_dimension / 1000;\n  const sceneHeight = node.y_dimension / 1000;\n  const sceneDepth = node.z_dimension / 1000;\n  const originRadius = Math.max(sceneWidth, sceneHeight, sceneDepth) * 0.05;\n  const lineRadius = originRadius * 0.1;\n  const globalTranslation = centered ? [sceneWidth, sceneHeight, sceneDepth].map((n) => n * -0.5) : [0, 0, 0];\n\n  return [\n    // Origin Sphere\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginSphere',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'sphere',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate(globalTranslation).scale(originRadius),\n      color: gray,\n    },\n    // Origin X Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginX',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([sceneWidth / 2, 0, 0])\n        .rotateZ(toRadians(-90))\n        .scale([lineRadius, sceneWidth, lineRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginXCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([sceneWidth, 0, 0])\n        .rotateZ(toRadians(-90))\n        .scale([originRadius, originRadius * 3, originRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginXALabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'A',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([-originRadius * 2, 0, 0])\n        .scale(originRadius),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginXDLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'D',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([sceneWidth + originRadius * 2, 0, 0])\n        .scale(originRadius),\n      color: red,\n    },\n    // Origin Y Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginY',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, sceneHeight / 2, 0])\n        .scale([lineRadius, sceneHeight, lineRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginYCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, sceneHeight, 0])\n        .scale([originRadius, originRadius * 3, originRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginYSLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'S',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([originRadius * 1.5, originRadius * 1.5, 0])\n        .scale(originRadius),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginYWLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'W',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, sceneHeight + originRadius * 2, 0])\n        .scale(originRadius),\n      color: green,\n    },\n    // Origin Z Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZ',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, 0, sceneDepth / 2])\n        .rotateX(toRadians(90))\n        .scale([lineRadius, sceneDepth, lineRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, 0, sceneDepth])\n        .rotateX(toRadians(90))\n        .scale([originRadius, originRadius * 3, originRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZQLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'Q',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([originRadius * 1.5, -originRadius * 1.5, 0])\n        .scale(originRadius),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZELabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'E',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, 0, sceneDepth + originRadius * 2])\n        .scale(originRadius),\n      color: blue,\n    },\n  ].filter(\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    (n) => (includeLetters && n.geometry === 'text' && n.text) || !n.text,\n  ) as SpatialSceneNode[];\n}\n","import { Context, JsonLd } from 'jsonld/jsonld-spec';\n\nconst basePurlUrl = 'http://purl.org/ccf/';\n\n/** CCF v2.0 JSON-LD Context */\nconst CCF_CONTEXT: JsonLd = {\n  '@context': {\n    '@base': basePurlUrl,\n    '@vocab': basePurlUrl,\n    ccf: basePurlUrl,\n    rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n    dcterms: 'http://purl.org/dc/terms/',\n    label: 'rdfs:label',\n    description: 'rdfs:comment',\n    link: 'ccf:url',\n    sex: 'ccf:sex',\n    age: 'ccf:age',\n    bmi: 'ccf:bmi',\n    consortium_name: 'ccf:consortium_name',\n    provider_name: 'ccf:tissue_provider_name',\n    provider_uuid: 'ccf:tissue_provider_uuid',\n    donor: {\n      '@id': 'ccf:comes_from',\n      '@type': '@id',\n    },\n    samples: {\n      '@reverse': 'donor',\n    },\n    sections: {\n      '@id': 'ccf:subdivided_into_sections',\n      '@type': '@id',\n    },\n    datasets: {\n      '@id': 'ccf:generates_dataset',\n      '@type': '@id',\n    },\n    sample_type: 'ccf:sample_type',\n    section_count: 'ccf:section_count',\n    section_size: 'ccf:section_size',\n    section_units: 'ccf:section_size_unit',\n    section_number: 'ccf:section_number',\n    rui_location: {\n      '@id': 'ccf:has_registration_location',\n      '@type': '@id',\n    },\n    ccf_annotations: {\n      '@id': 'ccf:collides_with',\n      '@type': '@id',\n      '@container': '@set',\n    },\n    representation_of: {\n      '@id': 'ccf:representation_of',\n      '@type': '@id',\n    },\n    reference_organ: {\n      '@id': 'ccf:has_reference_organ',\n      '@type': '@id',\n    },\n    extraction_set_for: {\n      '@id': 'ccf:extraction_set_for',\n      '@type': '@id',\n    },\n    extraction_set: {\n      '@id': 'ccf:has_extraction_set',\n      '@type': '@id',\n    },\n    organ_owner_sex: 'ccf:organ_owner_sex',\n    side: 'ccf:organ_side',\n    rui_rank: 'ccf:rui_rank',\n    slice_thickness: 'ccf:slice_thickness',\n    slice_count: 'ccf:slice_count',\n    object: {\n      '@id': 'ccf:has_object_reference',\n      '@type': '@id',\n    },\n    creation_date: 'dcterms:created',\n    updated_date: 'ccf:updated_date',\n    creator: 'dcterms:creator',\n    creator_first_name: 'ccf:creator_first_name',\n    creator_last_name: 'ccf:creator_last_name',\n    placement: {\n      '@reverse': 'ccf:placement_for',\n    },\n    placement_date: 'dcterms:created',\n    rotation_order: 'ccf:rotation_order',\n    dimension_units: 'ccf:dimension_unit',\n    rotation_units: 'ccf:rotation_unit',\n    scaling_units: 'ccf:scaling_unit',\n    translation_units: 'ccf:translation_unit',\n    source: {\n      '@id': 'ccf:placement_for',\n      '@type': '@id',\n    },\n    target: {\n      '@id': 'ccf:placement_relative_to',\n      '@type': '@id',\n    },\n    x_rotation: 'ccf:x_rotation',\n    y_rotation: 'ccf:y_rotation',\n    z_rotation: 'ccf:z_rotation',\n    x_scaling: 'ccf:x_scaling',\n    y_scaling: 'ccf:y_scaling',\n    z_scaling: 'ccf:z_scaling',\n    x_translation: 'ccf:x_translation',\n    y_translation: 'ccf:y_translation',\n    z_translation: 'ccf:z_translation',\n    x_dimension: 'ccf:x_dimension',\n    y_dimension: 'ccf:y_dimension',\n    z_dimension: 'ccf:z_dimension',\n    ontology_terms: {\n      '@id': 'ccf:has_ontology_term',\n      '@type': '@id',\n    },\n    technology: 'ccf:technology',\n    thumbnail: 'ccf:thumbnail',\n    file: 'ccf:file_url',\n    file_format: 'ccf:file_format',\n    file_subpath: 'ccf:file_subpath',\n  },\n};\n/* eslint-enable @typescript-eslint/naming-convention */\n\n/**\n * Function which takes JSON-LD data and makes patches to update from CCF v1.x to v2.0 automatically\n *\n * @param jsonLdString the input JSON-LD as a string\n * @returns A JSON-LD object derived from the given string with updated data to be compatible with CCF v2.0\n */\nexport function patchJsonLd(jsonLdString: string, context: string | JsonLd = CCF_CONTEXT): JsonLd {\n  return JSON.parse(jsonLdString, (key, value) => {\n    if (key === 'ccf_annotations' && Array.isArray(value)) {\n      return value.map((iri: string) => {\n        if (iri?.startsWith('http://purl.obolibrary.org/obo/FMA_')) {\n          return iri.replace('http://purl.obolibrary.org/obo/FMA_', 'http://purl.org/sig/ont/fma/fma');\n        } else {\n          return iri;\n        }\n      });\n    } else if (\n      key === '@context' &&\n      value &&\n      (value === 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-entity-context.jsonld' ||\n        value === 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld' ||\n        value === 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld' ||\n        (value as Context)['@base'] === 'http://purl.org/ccf/latest/ccf-entity.owl#')\n    ) {\n      return context;\n    }\n    return value;\n  });\n}\n","import { DataFactory, Util } from 'triple-store-utils';\n\n/** Constants used to create entity accessors. */\nexport const PREFIXES = {\n  base: 'http://purl.org/ccf/latest/ccf.owl#',\n  ccf: 'http://purl.org/ccf/',\n  fma: 'http://purl.org/sig/ont/fma/fma',\n  obo: 'http://purl.obolibrary.org/obo/',\n  uberon: 'http://purl.obolibrary.org/obo/UBERON_',\n  cl: 'http://purl.obolibrary.org/obo/CL_',\n  lmha: 'http://purl.obolibrary.org/obo/LMHA_',\n  rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n  rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n  dc: 'http://purl.org/dc/elements/1.1/',\n  dcterms: 'http://purl.org/dc/terms/',\n};\n\n/** Prefix factory. */\nexport const prefixer = Util.prefixes(PREFIXES, DataFactory);\n\nexport const rdf = {\n  x: prefixer('rdf'),\n  type: prefixer('rdf')('type'),\n};\n\nexport const rdfs = {\n  x: prefixer('rdfs'),\n  label: prefixer('rdfs')('label'),\n  comment: prefixer('rdfs')('comment'),\n  isDefinedBy: prefixer('rdfs')('isDefinedBy'),\n  seeAlso: prefixer('rdfs')('seeAlso'),\n};\n\n/** CCF id helper. */\nconst ccfx = prefixer('ccf');\n\n/** Common entity ids. */\nexport const entity = {\n  id: prefixer('ccf')('has_registration_location'),\n  label: prefixer('rdfs')('label'),\n  description: prefixer('rdfs')('comment'),\n  link: ccfx('url'),\n\n  sex: ccfx('sex'),\n  age: ccfx('age'),\n  bmi: ccfx('bmi'),\n\n  Male: DataFactory.literal('Male'),\n  Female: DataFactory.literal('Female'),\n\n  consortiumName: ccfx('consortium_name'),\n  providerName: ccfx('tissue_provider_name'),\n  providerUUID: ccfx('tissue_provider_uuid'),\n\n  donor: ccfx('comes_from'),\n\n  sections: ccfx('subdivided_into_sections'),\n  datasets: ccfx('generates_dataset'),\n\n  sampleType: ccfx('sample_type'),\n\n  TissueBlock: DataFactory.literal('Tissue Block'),\n  TissueSection: DataFactory.literal('Tissue Section'),\n  NonStandard: DataFactory.literal('Non-standard'),\n\n  sectionCount: ccfx('section_count'),\n  sectionSize: ccfx('section_size'),\n  sectionUnits: ccfx('section_size_unit'),\n  sectionNumber: ccfx('section_number'),\n\n  spatialEntity: ccfx('has_registration_location'),\n  ontologyTerms: ccfx('has_ontology_term'),\n  cellTypeTerms: ccfx('has_cell_type_term'),\n  biomarkerTerms: ccfx('has_biomarker_term'),\n\n  technology: ccfx('technology'),\n  thumbnail: ccfx('thumbnail'),\n};\n\n/** CCF specific ids. */\nexport const ccf = {\n  x: ccfx,\n  base: prefixer('base'),\n  ontologyNode: {\n    label: ccfx('ccf_pref_label'),\n    parent: ccfx('ccf_part_of'),\n    children: ccfx('ccf_part_of'),\n    rui_rank: ccfx('rui_rank'),\n    synonymLabels: DataFactory.namedNode('http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'),\n  },\n  asctb: {\n    part_of: ccfx('ccf_part_of'),\n    ct_is_a: ccfx('ccf_ct_isa'),\n    located_in: ccfx('ccf_located_in'),\n    characterizes: ccfx('ccf_characterizes'),\n    bm_located_in: ccfx('ccf_bm_located_in'),\n  },\n  spatial: {\n    Female: prefixer('base')('VHFemale'),\n    Male: prefixer('base')('VHMale'),\n    BothSexes: prefixer('base')('VHBothSexes'),\n    FemaleOrgans: prefixer('base')('VHFemaleOrgans'),\n    MaleOrgans: prefixer('base')('VHMaleOrgans'),\n  },\n  SpatialObjectReference: ccfx('spatial_object_reference'),\n  SpatialEntity: ccfx('spatial_entity'),\n  SpatialPlacement: ccfx('spatial_placement'),\n  spatialObjectReference: {\n    file: ccfx('file_url'),\n    file_format: ccfx('file_format'),\n    file_subpath: ccfx('file_subpath'),\n  },\n  extractionSet: {\n    label: prefixer('rdfs')('label'),\n    rui_rank: ccfx('rui_rank'),\n  },\n  spatialEntity: {\n    label: prefixer('rdfs')('label'),\n    description: prefixer('rdfs')('comment'),\n    creator: prefixer('dcterms')('creator'),\n    creator_first_name: ccfx('creator_first_name'),\n    creator_last_name: ccfx('creator_last_name'),\n    creator_middle_name: ccfx('creator_middle_name'),\n    creator_orcid: ccfx('creator_orcid'),\n    creation_date: prefixer('dcterms')('created'),\n    updated_date: ccfx('updated_date'),\n    ccf_annotations: ccfx('collides_with'),\n    representation_of: ccfx('representation_of'),\n    reference_organ: ccfx('has_reference_organ'),\n    extraction_set_for: ccfx('extraction_set_for'),\n    extraction_set: ccfx('has_extraction_set'),\n    sex: ccfx('organ_owner_sex'),\n    side: ccfx('organ_side'),\n    rui_rank: ccfx('rui_rank'),\n    slice_thickness: ccfx('slice_thickness'),\n    slice_count: ccfx('slice_count'),\n    x_dimension: ccfx('x_dimension'),\n    y_dimension: ccfx('y_dimension'),\n    z_dimension: ccfx('z_dimension'),\n    dimension_units: ccfx('dimension_unit'),\n    object: ccfx('has_object_reference'),\n  },\n  spatialPlacement: {\n    source: ccfx('placement_for'),\n    target: ccfx('placement_relative_to'),\n\n    placement_date: prefixer('dcterms')('created'),\n    x_scaling: ccfx('x_scaling'),\n    y_scaling: ccfx('y_scaling'),\n    z_scaling: ccfx('z_scaling'),\n    scaling_units: ccfx('scaling_unit'),\n\n    x_rotation: ccfx('x_rotation'),\n    y_rotation: ccfx('y_rotation'),\n    z_rotation: ccfx('z_rotation'),\n    w_rotation: ccfx('theta_rotation'),\n    rotation_order: ccfx('rotation_order'),\n    rotation_units: ccfx('rotation_unit'),\n\n    x_translation: ccfx('x_translation'),\n    y_translation: ccfx('y_translation'),\n    z_translation: ccfx('z_translation'),\n    translation_units: ccfx('translation_unit'),\n  },\n};\n\n/** Uberon specific ids. */\nexport const uberon = {\n  x: prefixer('uberon'),\n  body: prefixer('uberon')('0013702'),\n};\n\n/** CL specific ids. */\nexport const cl = {\n  x: prefixer('cl'),\n  cell: prefixer('cl')('0000000'),\n};\n\n/** FMA specific ids. */\nexport const fma = {\n  x: prefixer('fma'),\n};\n\n/** LMHA specific ids. */\nexport const lmha = {\n  x: prefixer('lmha'),\n};\n\n/** RUI accessors. */\nexport const rui = {\n  body: uberon.body,\n  cell: cl.cell,\n  respiratory_system: uberon.x('0001004'),\n  colon: uberon.x('0001155'),\n  left_lung: uberon.x('0002168'),\n  right_lung: uberon.x('0002167'),\n  left_bronchus: uberon.x('0002178'),\n  right_bronchus: uberon.x('0002177'),\n  kidney: uberon.x('0002113'),\n  ureter: uberon.x('0000056'),\n  eye: uberon.x('0000970'),\n  fallopian_tube: uberon.x('0003889'),\n  knee: uberon.x('0001465'),\n  ovary: uberon.x('0000992'),\n  trachea: uberon.x('0003126'),\n  aorta: uberon.x('0000947'),\n  blood: uberon.x('0000178'),\n  bone_marrow: uberon.x('0002371'),\n  male_reproductive_system: uberon.x('0000079'),\n  lymph_node: uberon.x('0000029'),\n\n  // Derived using\n  // console.log(ALL_POSSIBLE_ORGANS.map(\n  //   o => `  ${\n  //     o.name.toLowerCase().replace(',', '').replace(/ /g, '_')\n  //   }: ${\n  //     o.id.split('/').slice(-1)[0].split('_')[0].toLowerCase()\n  //   }.x('${\n  //     o.id.split('_').slice(-1)[0]\n  //   }'),`).join('\\n'));\n  blood_vasculature: uberon.x('0004537'),\n  brain: uberon.x('0000955'),\n  eye_left: uberon.x('0004548'),\n  eye_right: fma.x('54449'),\n  fallopian_tube_left: uberon.x('0001303'),\n  fallopian_tube_right: uberon.x('0001302'),\n  heart: uberon.x('0000948'),\n  kidney_left: uberon.x('0004538'),\n  kidney_right: uberon.x('0004539'),\n  knee_left: fma.x('24978'),\n  knee_right: fma.x('24977'),\n  large_intestine: uberon.x('0000059'),\n  liver: uberon.x('0002107'),\n  lungs: uberon.x('0002048'),\n  mesenteric_lymph_node: uberon.x('0002509'),\n  ovary_left: fma.x('7214'),\n  ovary_right: fma.x('7213'),\n  pancreas: uberon.x('0001264'),\n  pelvis: uberon.x('0001270'),\n  prostate_gland: uberon.x('0002367'),\n  skin: uberon.x('0002097'),\n  small_intestine: uberon.x('0002108'),\n  spleen: uberon.x('0002106'),\n  thymus: uberon.x('0002370'),\n  ureter_left: uberon.x('0001223'),\n  ureter_right: uberon.x('0001222'),\n  urinary_bladder: uberon.x('0001255'),\n  uterus: uberon.x('0000995'),\n};\n","import { Matrix4, toRadians } from '@math.gl/core';\nimport { SpatialSceneNode } from '../ccf-spatial-scene';\nimport { SpatialSearch } from '../interfaces';\nimport { SpatialEntity } from '../spatial-types';\n\ntype Color = [number, number, number, number];\nconst gold: Color = [240, 183, 98, 255];\nconst red: Color = [213, 0, 0, 255];\nconst green: Color = [29, 204, 101, 255];\nconst blue: Color = [41, 121, 255, 255];\n\n/**\n * Create a set of scene nodes for the body-ui to show the probing sphere and lines around it\n * for a given spatial search.\n * @param node the Spatial Entity (usually a reference organ) that the sphere is probing into\n * @param sphere the Spatial Search that defines where and how big the probing sphere is\n * @returns a set of scene nodes for the body-ui\n */\nexport function getProbingSphereScene(node: SpatialEntity, sphere?: SpatialSearch): SpatialSceneNode[] {\n  const sceneWidth = node.x_dimension / 1000;\n  const sceneHeight = node.y_dimension / 1000;\n  const sceneDepth = node.z_dimension / 1000;\n  const defaultSphereRadius = Math.max(sceneWidth, sceneHeight, sceneDepth) * 0.07;\n  const sphereLineRadius = defaultSphereRadius * 0.05;\n  const sphereLineLength = defaultSphereRadius * 2;\n  const sphereConeRadius = sphereLineRadius * 4;\n\n  if (!sphere) {\n    sphere = {\n      target: node.representation_of ?? node['@id'],\n      radius: defaultSphereRadius,\n      x: sceneWidth / 2,\n      y: sceneHeight / 2,\n      z: sceneDepth / 2,\n    };\n  } else {\n    sphere = {\n      ...sphere,\n      radius: sphere.radius / 1000,\n      x: sphere.x / 1000,\n      y: sphere.y / 1000,\n      z: sphere.z / 1000,\n    };\n  }\n\n  return [\n    // Probing Sphere\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingSphere',\n      '@type': 'SpatialSceneNode',\n      unpickable: false,\n      geometry: 'sphere',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate([sphere.x, sphere.y, sphere.z]).scale(sphere.radius),\n      color: gold,\n    },\n    // Probing Sphere Positive X Axis (D)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXD',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x + sphere.radius + sphereLineLength / 2, sphere.y, sphere.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXDCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x + sphere.radius + sphereLineLength, sphere.y, sphere.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXDLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'D',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x + sphere.radius + sphereLineLength + sphereConeRadius * 3, sphere.y, sphere.z])\n        .scale(sphereConeRadius),\n      color: red,\n    },\n    // Probing Sphere Negative X Axis (A)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXA',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x - sphere.radius - sphereLineLength / 2, sphere.y, sphere.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXACone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x - sphere.radius - sphereLineLength, sphere.y, sphere.z])\n        .rotateZ(toRadians(90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXALabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'A',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x - sphere.radius - sphereLineLength - sphereConeRadius * 3.5, sphere.y, sphere.z])\n        .scale(sphereConeRadius),\n      color: red,\n    },\n    // Probing Sphere Positive Y Axis (W)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYW',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y + sphere.radius + sphereLineLength / 2, sphere.z])\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYWCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y + sphere.radius + sphereLineLength, sphere.z])\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYWLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'W',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y + sphere.radius + sphereLineLength + sphereConeRadius * 3, sphere.z])\n        .scale(sphereConeRadius),\n      color: green,\n    },\n    // Probing Sphere Negative Y Axis (S)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYS',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y - sphere.radius - sphereLineLength / 2, sphere.z])\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYSCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y - sphere.radius - sphereLineLength, sphere.z])\n        .rotateZ(toRadians(180))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYSLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'S',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y - sphere.radius - sphereLineLength - sphereConeRadius * 3.5, sphere.z])\n        .scale(sphereConeRadius),\n      color: green,\n    },\n    // Probing Sphere Positive Z Axis (Q)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZQ',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z + sphere.radius + sphereLineLength / 2])\n        .rotateX(toRadians(90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZQCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z + sphere.radius + sphereLineLength])\n        .rotateX(toRadians(90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZQLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'Q',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z + sphere.radius + sphereLineLength + sphereConeRadius * 3])\n        .scale(sphereConeRadius),\n      color: blue,\n    },\n    // Probing Sphere Negative Z Axis (E)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZE',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z - sphere.radius - sphereLineLength / 2])\n        .rotateX(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZECone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z - sphere.radius - sphereLineLength])\n        .rotateX(toRadians(-90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZELabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'E',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z - sphere.radius - sphereLineLength - sphereConeRadius * 3.5])\n        .scale(sphereConeRadius),\n      color: blue,\n    },\n  ];\n}\n","import { Matrix4, toRadians } from '@math.gl/core';\nimport { SpatialSceneNode } from '../ccf-spatial-scene';\nimport { SpatialEntity, SpatialPlacement } from '../spatial-types';\n\ntype Color = [number, number, number, number];\nconst gray: Color = [204, 204, 204, 255];\nconst red: Color = [213, 0, 0, 255];\nconst green: Color = [29, 204, 101, 255];\nconst blue: Color = [41, 121, 255, 255];\n\n/**\n * Create a set of scene nodes for the body-ui to show the lines around a cube\n *\n * @param node the Spatial Entity that the scene is drawn around\n * @param placement the Spatial Placement where the cube is placed\n * @returns a set of scene nodes for the body-ui\n */\nexport function getTissueBlockScene(node: SpatialEntity, placement: SpatialPlacement): SpatialSceneNode[] {\n  const sceneWidth = node.x_dimension / 1000;\n  const sceneHeight = node.y_dimension / 1000;\n  const sceneDepth = node.z_dimension / 1000;\n  const originRadius = Math.max(sceneWidth, sceneHeight, sceneDepth) * 0.1;\n  const defaultSphereRadius = Math.max(sceneWidth, sceneHeight, sceneDepth);\n  const sphereLineRadius = defaultSphereRadius * 0.05;\n  const sphereLineLength = defaultSphereRadius * 2;\n  const sphereConeRadius = sphereLineRadius * 4;\n\n  const cube = {\n    radius: defaultSphereRadius / 1000 / 2,\n    x: placement.x_translation / 1000,\n    y: placement.y_translation / 1000,\n    z: placement.z_translation / 1000,\n\n    rx: toRadians(placement.x_rotation),\n    ry: toRadians(placement.y_rotation),\n    rz: toRadians(placement.z_rotation),\n\n    sx: node.x_dimension / 1000,\n    sy: node.y_dimension / 1000,\n    sz: node.z_dimension / 1000,\n  };\n\n  return [\n    // Carbon Rod Sphere\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeOriginSphere',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'sphere',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z])\n        .rotateXYZ([cube.rx, cube.ry, cube.rz])\n        .multiplyRight(\n          new Matrix4(Matrix4.IDENTITY).translate([-cube.sx / 2, -cube.sy / 2, -cube.sz / 2]).scale(originRadius),\n        ),\n      color: gray,\n    },\n    // Carbon Rod X Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeOriginX',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z])\n        .rotateXYZ([cube.rx, cube.ry, cube.rz])\n        .multiplyRight(\n          new Matrix4(Matrix4.IDENTITY)\n            .translate([0, -cube.sy / 2, -cube.sz / 2])\n            .rotateZ(toRadians(-90))\n            .scale([sphereLineRadius, cube.sx, sphereLineRadius]),\n        ),\n      color: red,\n    },\n    // Carbon Rod Y Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeOriginY',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z])\n        .rotateXYZ([cube.rx, cube.ry, cube.rz])\n        .multiplyRight(\n          new Matrix4(Matrix4.IDENTITY)\n            .translate([-cube.sx / 2, 0, -cube.sz / 2])\n            .scale([sphereLineRadius, cube.sy, sphereLineRadius]),\n        ),\n      color: green,\n    },\n    // Carbon Rod Z Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeOriginZ',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z])\n        .rotateXYZ([cube.rx, cube.ry, cube.rz])\n        .multiplyRight(\n          new Matrix4(Matrix4.IDENTITY)\n            .translate([-cube.sx / 2, -cube.sy / 2, 0])\n            .rotateX(toRadians(90))\n            .scale([sphereLineRadius, cube.sz, sphereLineRadius]),\n        ),\n      color: blue,\n    },\n    // Cube Positive X Axis (D)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXD',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x + cube.radius + sphereLineLength / 2, cube.y, cube.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXDCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x + cube.radius + sphereLineLength, cube.y, cube.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXDLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'D',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x + cube.radius + sphereLineLength + sphereConeRadius * 3, cube.y, cube.z])\n        .scale(sphereConeRadius),\n      color: red,\n    },\n    // Cube Negative X Axis (A)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXA',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x - cube.radius - sphereLineLength / 2, cube.y, cube.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXACone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x - cube.radius - sphereLineLength, cube.y, cube.z])\n        .rotateZ(toRadians(90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXALabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'A',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x - cube.radius - sphereLineLength - sphereConeRadius * 3.5, cube.y, cube.z])\n        .scale(sphereConeRadius),\n      color: red,\n    },\n    // Cube Positive Y Axis (W)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYW',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y + cube.radius + sphereLineLength / 2, cube.z])\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYWCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y + cube.radius + sphereLineLength, cube.z])\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYWLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'W',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y + cube.radius + sphereLineLength + sphereConeRadius * 3, cube.z])\n        .scale(sphereConeRadius),\n      color: green,\n    },\n    // Cube Negative Y Axis (S)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYS',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y - cube.radius - sphereLineLength / 2, cube.z])\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYSCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y - cube.radius - sphereLineLength, cube.z])\n        .rotateZ(toRadians(180))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYSLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'S',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y - cube.radius - sphereLineLength - sphereConeRadius * 3.5, cube.z])\n        .scale(sphereConeRadius),\n      color: green,\n    },\n    // Cube Positive Z Axis (Q)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZQ',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z + cube.radius + sphereLineLength / 2])\n        .rotateX(toRadians(90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZQCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z + cube.radius + sphereLineLength])\n        .rotateX(toRadians(90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZQLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'Q',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z + cube.radius + sphereLineLength + sphereConeRadius * 3])\n        .scale(sphereConeRadius),\n      color: blue,\n    },\n    // Cube Negative Z Axis (E)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZE',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z - cube.radius - sphereLineLength / 2])\n        .rotateX(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZECone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z - cube.radius - sphereLineLength])\n        .rotateX(toRadians(-90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZELabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'E',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z - cube.radius - sphereLineLength - sphereConeRadius * 3.5])\n        .scale(sphereConeRadius),\n      color: blue,\n    },\n  ];\n}\n","import { JsonLd } from 'jsonld/jsonld-spec';\nimport { xConsortiaResponseAsJsonLd } from './xconsortia-data';\n\ninterface SearchResultJson {\n  hits: {\n    hits: unknown[];\n    total: {\n      value: number;\n    };\n  };\n}\n\n// Reduce this value if including more data fields\nconst PER_API_SEARCH_REQUEST_COUNT = 10000;\n\nconst INCLUDED_DATA_FIELDS = [\n  'uuid',\n  'entity_type',\n  'hubmap_id',\n  'sennet_id',\n  'group_uuid',\n  'group_name',\n  'last_modified_timestamp',\n  'created_by_user_displayname',\n  'donor',\n  'source',\n  'descendants.entity_type',\n  'descendants.ingest_metadata.metadata.tissue_id',\n  'descendants.last_modified_timestamp',\n  'descendants.group_uuid',\n  'descendants.group_name',\n  'descendants.created_by_user_displayname',\n  'descendants.uuid',\n  'descendants.hubmap_id',\n  'descendants.sennet_id',\n  'descendants.dataset_type',\n  'descendants.thumbnail_file',\n  'descendants.metadata.files.rel_path',\n  'rui_location',\n  'sample_category',\n];\n\nconst DEFAULT_API_SEARCH_QUERY: unknown = {\n  exists: {\n    field: 'rui_location',\n  },\n};\n\nfunction getApiSearchHeaders(token?: string): Headers {\n  const headers = new Headers();\n\n  headers.append('Content-type', 'application/json');\n  if (token) {\n    headers.append('Authorization', `Bearer ${token}`);\n  }\n\n  return headers;\n}\n\nfunction getApiSearchBody(from: number, size: number, query?: unknown): string {\n  const bodyObj = {\n    version: true,\n    from,\n    size,\n    stored_fields: ['*'],\n    script_fields: {},\n    docvalue_fields: [],\n    query: query ?? DEFAULT_API_SEARCH_QUERY,\n    _source: {\n      includes: INCLUDED_DATA_FIELDS,\n    },\n  };\n\n  return JSON.stringify(bodyObj);\n}\n\nasync function doSearchRequest(url: string, init?: RequestInit): Promise<SearchResultJson | undefined> {\n  try {\n    const res = await fetch(url, init);\n    const text = await res.text();\n    const validResponse = res.ok || text.startsWith('https');\n    if (validResponse) {\n      if (text.startsWith('https')) {\n        return await fetch(text).then((r) => r.json());\n      } else {\n        return JSON.parse(text);\n      }\n    }\n    return undefined;\n  } catch (_error) {\n    return undefined;\n  }\n}\n\nasync function doApiSearch(url: string, token?: string, query?: unknown): Promise<SearchResultJson | undefined> {\n  const perReqCount = PER_API_SEARCH_REQUEST_COUNT;\n  const headers = getApiSearchHeaders(token);\n  const body = getApiSearchBody(0, perReqCount, query);\n  const firstResult = await doSearchRequest(url, {\n    method: 'POST',\n    headers,\n    body,\n  });\n  if (!firstResult) {\n    return undefined;\n  }\n\n  const totalCount = firstResult.hits.total.value;\n  if (totalCount <= perReqCount) {\n    return firstResult;\n  }\n\n  const requests: Promise<SearchResultJson | undefined>[] = [];\n  for (let from = perReqCount; from < totalCount; from += perReqCount) {\n    requests.push(\n      doSearchRequest(url, {\n        method: 'POST',\n        headers,\n        body: getApiSearchBody(from, perReqCount, query),\n      }),\n    );\n  }\n\n  const results = await Promise.all(requests);\n  if (results.some((res) => !res)) {\n    return undefined;\n  }\n\n  const items = results.map((res) => res?.hits.hits);\n  return {\n    ...firstResult,\n    hits: {\n      ...firstResult.hits,\n      hits: firstResult.hits.hits.concat(...items),\n    },\n  };\n}\n\n/**\n * Search the X Atlas Consortium Search API and return HRA-compatible JSON-LD data\n *\n * @param dataUrl the search API url\n * @param serviceType 'static' if a statically saved response or 'search-api' if querying the search-api live\n * @param query the elastic search query to use\n * @param serviceToken the api key to the search-api\n * @param assetsApi the assets api endpoint (deprecated)\n * @param portalUrl the portal url to point to (deprecated)\n * @returns CCF-compatible JSON-LD data or undefined on error\n */\nexport async function searchXConsortia(\n  dataUrl: string,\n  serviceType: 'static' | 'search-api',\n  query?: unknown,\n  serviceToken?: string,\n  _assetsApi = '',\n  _portalUrl = '',\n): Promise<JsonLd | undefined> {\n  let hubmapData: SearchResultJson | undefined;\n  if (serviceType === 'static') {\n    hubmapData = await doSearchRequest(dataUrl);\n  } else if (serviceType === 'search-api') {\n    hubmapData = await doApiSearch(dataUrl, serviceToken, query);\n  }\n\n  if (hubmapData) {\n    return xConsortiaResponseAsJsonLd(hubmapData, serviceToken);\n  } else {\n    console.warn(`Unable to load ${dataUrl}`);\n    return undefined;\n  }\n}\n","import { JsonLd, JsonLdObj } from 'jsonld/jsonld-spec';\nimport { get, omit, set, toNumber } from 'lodash';\nimport { patchJsonLd } from '../util/patch-jsonld';\n\ntype JsonDict = Record<string, unknown>;\n\ninterface Portal {\n  idPrefix: string;\n  portal: string;\n  portalParams: string;\n  donorName: string;\n  assets: string;\n}\n\nconst HUBMAP: Portal = {\n  idPrefix: 'https://entity.api.hubmapconsortium.org/entities/',\n  portal: 'https://portal.hubmapconsortium.org/browse/',\n  portalParams: '/',\n  donorName: 'donor',\n  assets: 'https://assets.hubmapconsortium.org',\n};\n\nconst SENNET: Portal = {\n  idPrefix: 'https://entity.api.sennetconsortium.org/entities/',\n  portal: 'https://data.sennetconsortium.org/',\n  portalParams: '?uuid=',\n  donorName: 'source',\n  assets: 'https://assets.sennetconsortium.org',\n};\n\n// eslint-disable-next-line max-len\nexport const DR1_VU_THUMBS = new Set([\n  'VAN0003-LK-32-21-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0003-LK-32-21-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0003-LK-32-21-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0003-LK-32-21-PAS_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0005-RK-1-1-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0005-RK-1-1-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-1-1-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-1-1-PAS_registered_thumbnail.jpg',\n  'VAN0005-RK-4-172-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0005-RK-4-172-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-4-172-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-4-172-PAS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-85-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-85-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0006-LK-2-85-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0006-LK-2-85-PAS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0007-LK-203-103-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0007-LK-203-103-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0007-LK-203-103-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0007-LK-203-103-PAS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-100-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-100-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0008-RK-403-100-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0008-RK-403-100-PAS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0009-LK-102-7-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0009-LK-102-7-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0009-LK-102-7-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0009-LK-102-7-PAS_registered_thumbnail.jpg',\n  'VAN0010-LK-155-40-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0010-LK-155-40-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0010-LK-155-40-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0010-LK-155-40-PAS_registered_thumbnail.jpg',\n  'VAN0011-RK-3-10-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0011-RK-3-10-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0011-RK-3-10-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0011-RK-3-10-PAS_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0012-RK-103-75-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0012-RK-103-75-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0012-RK-103-75-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0012-RK-103-75-PAS_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0013-LK-202-96-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0013-LK-202-96-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0013-LK-202-96-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0013-LK-202-96-PAS_registered_thumbnail.jpg',\n  'VAN0013-LK-202-97-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0013-LK-202-97-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0013-LK-202-97-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0013-LK-202-97-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0014-LK-203-108-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0014-LK-203-108-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0014-LK-203-108-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0014-LK-203-108-PAS_registered_thumbnail.jpg',\n  'VAN0016-LK-202-89-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0016-LK-202-89-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0016-LK-202-89-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0016-LK-202-89-PAS_registered_thumbnail.jpg',\n  'VAN0003-LK-32-21-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0003-LK-32-21-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0003-LK-32-21-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0003-LK-32-21-PAS_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0005-RK-1-1-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0005-RK-1-1-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-1-1-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-1-1-PAS_registered_thumbnail.jpg',\n  'VAN0005-RK-4-172-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0005-RK-4-172-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-4-172-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-4-172-PAS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-85-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-85-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0006-LK-2-85-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0006-LK-2-85-PAS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0007-LK-203-103-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0007-LK-203-103-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0007-LK-203-103-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0007-LK-203-103-PAS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-100-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-100-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0008-RK-403-100-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0008-RK-403-100-PAS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0011-RK-3-10-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0011-RK-3-10-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0011-RK-3-10-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0011-RK-3-10-PAS_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0012-RK-103-75-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0012-RK-103-75-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0012-RK-103-75-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0012-RK-103-75-PAS_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc3_registered_thumbnail.jpg',\n]);\n// eslint-disable-next-line max-len\nexport const UFL_THUMBS = {\n  'HBM558.SRZG.629': 'HBM558.SRZG.629_UFL0002-SP-3-4-1.jpg',\n  'HBM562.NTMH.548': 'HBM562.NTMH.548_UFL0006-SP-1-2-1.jpg',\n  'HBM685.KHRQ.684': 'HBM685.KHRQ.684_UFL0008-LY07-1-1.jpg',\n  'HBM278.SFQW.627': 'HBM278.SFQW.627_UFL0008-LY09-1-1.jpg',\n  'HBM427.SMGB.866': 'HBM427.SMGB.866_UFL0004-SP-1-4-1.jpg',\n  'HBM432.LLCF.677': 'HBM432.LLCF.677_UFL0001-SP-2-5-1.jpg',\n  'HBM586.ZSVS.996': 'HBM586.ZSVS.996_UFL0008-SP-1-1-1.jpg',\n  'HBM285.XMBT.542': 'HBM285.XMBT.542_UFL0006-TH-1-3-1.jpg',\n  'HBM289.BWJW.663': 'HBM289.BWJW.663_UFL0006-TH-1-2-1.jpg',\n  'HBM255.SRPR.985': 'HBM255.SRPR.985_UFL0005-TH-2-2-1.jpg',\n  'HBM799.WXHD.535': 'HBM799.WXHD.535_UFL0009-LY02-1-1.jpg',\n  'HBM294.RZFN.624': 'HBM294.RZFN.624_UFL0005-TH-1-1-1.jpg',\n  'HBM383.TRQG.424': 'HBM383.TRQG.424_UFL0006-SP-1-3-1.jpg',\n  'HBM647.MFQB.496': 'HBM647.MFQB.496_UFL0001-SP-1-2-1.jpg',\n  'HBM237.GGPR.739': 'HBM237.GGPR.739_UFL0006-LY01-1-1.jpg',\n  'HBM288.TPBD.654': 'HBM288.TPBD.654_UFL0003-SP-2-2-1.jpg',\n  'HBM974.NDXT.675': 'HBM974.NDXT.675_UFL0008-TH-2-2-1.jpg',\n  'HBM589.SLVV.423': 'HBM589.SLVV.423_UFL0008-LY10-1-1.jpg',\n  'HBM794.RLFN.358': 'HBM794.RLFN.358_UFL0006-LY03-1-1.jpg',\n  'HBM372.BQSR.778': 'HBM372.BQSR.778_UFL0007-SP-1-1-1.jpg',\n  'HBM499.TKDW.458': 'HBM499.TKDW.458_UFL0009-LY03-1-1.jpg',\n  'HBM342.PRQB.739': 'HBM342.PRQB.739_UFL0003-LY06-1-1.jpg',\n  'HBM633.CLVN.674': 'HBM633.CLVN.674_UFL0003-SP-3-6-1.jpg',\n  'HBM343.JQKM.578': 'HBM343.JQKM.578_UFL0009-LY01-1-1.jpg',\n  'HBM987.XGTH.368': 'HBM987.XGTH.368_UFL0002-SP-2-4-1.jpg',\n  'HBM964.CWCP.788': 'HBM964.CWCP.788_UFL0006-LY02-2-1.jpg',\n  'HBM244.TJLK.223': 'HBM244.TJLK.223_UFL0003-SP-1-4-1.jpg',\n  'HBM646.FSBQ.966': 'HBM646.FSBQ.966_UFL0007-SP-2-2-1.jpg',\n  'HBM572.GXSB.234': 'HBM572.GXSB.234_UFL0003-SP-3-2-1.jpg',\n  'HBM772.TKGJ.794': 'HBM772.TKGJ.794_UFL0008-SP-2-1-1.jpg',\n  'HBM239.CBWR.263': 'HBM239.CBWR.263_UFL0008-SP-1-2-1.jpg',\n  'HBM992.NRTT.383': 'HBM992.NRTT.383_UFL0006-SP-1-1-1.jpg',\n  'HBM283.DQXD.546': 'HBM283.DQXD.546_UFL0003-SP-1-2-1.jpg',\n  'HBM795.JHND.856': 'HBM795.JHND.856_UFL0007-SP-1-2-1.jpg',\n  'HBM267.BZKT.867': 'HBM267.BZKT.867_UFL0003-SP-2-6-1.jpg',\n  'HBM838.DLMJ.782': 'HBM838.DLMJ.782_UFL0008-TH-1-1-1.jpg',\n  'HBM337.FSXL.564': 'HBM337.FSXL.564_UFL0001-SP-3-8-2.jpg',\n  'HBM355.JDLK.244': 'HBM355.JDLK.244_UFL0004-SP-2-4-1.jpg',\n  'HBM599.PSZG.737': 'HBM599.PSZG.737_UFL0006-LY02-1-1.jpg',\n};\n\n/** UUID to TMC mapping. */\nconst GROUP_UUID_MAPPING: { [uuid: string]: string } = {\n  '03b3d854-ed44-11e8-8bce-0e368f3075e8': 'TMC-UCSD',\n  '07a29e4c-ed43-11e8-b56a-0e8017bdda58': 'TMC-Florida',\n  '308f5ffc-ed43-11e8-b56a-0e8017bdda58': 'TMC-CalTech',\n  '5bd084c8-edc2-11e8-802f-0e368f3075e8': 'HBM-TestingGroup',\n  '73bb26e4-ed43-11e8-8f19-0a7c1eab007a': 'TMC-Vanderbilt',\n  'def5fd76-ed43-11e8-b56a-0e8017bdda58': 'TMC-Stanford',\n  '5c106f29-ea2d-11e9-85e8-0efb3ba9a670': 'RTI-General Electric',\n  '301615f9-c870-11eb-a8dc-35ce3d8786fe': 'TMC-UConn',\n};\n\nconst ENTITY_CONTEXT = 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld';\n\n/**\n * Converts a hubmap response object into JsonLd.\n *\n * @param data The hubmap data.\n * @returns The converted data.\n */\nexport function xConsortiaResponseAsJsonLd(data: unknown, serviceToken?: string, debug = false): JsonLd {\n  const entries = (get(data, 'hits.hits', []) as JsonDict[])\n    .map((e) => get(e, '_source', {}) as JsonDict)\n    .sort((a, b) => (a['uuid'] as string).localeCompare(b['uuid'] as string));\n\n  const donorLookup: Record<string, JsonLdObj> = {};\n  const unflattened: JsonLdObj[] = entries.map((e) => new HuBMAPTissueBlock(e, serviceToken).toJsonLd());\n  for (const donor of unflattened) {\n    const donorId = donor['@id'] as string;\n    if (!donorLookup[donorId]) {\n      donorLookup[donorId] = donor;\n    } else {\n      const samples = donorLookup[donorId]['samples'] as JsonLdObj[];\n      samples.push((donor['samples'] as JsonLdObj[])[0]);\n    }\n  }\n  const donors = Object.values(donorLookup);\n\n  if (debug) {\n    debugDonors(donors);\n    console.log(donors.map((d) => ({ '@context': ENTITY_CONTEXT, ...d })));\n  }\n\n  return patchJsonLd(JSON.stringify({ '@context': ENTITY_CONTEXT, '@graph': donors }), ENTITY_CONTEXT);\n}\n\nfunction debugDonors(donors: JsonLdObj[]) {\n  let datasets: JsonLdObj[] = [];\n  let deleted = 0;\n  for (const donor of donors.filter((d) => (d['samples'] as []).length > 1)) {\n    const samples = donor['samples'] as JsonLdObj[];\n    for (let i = 0; i < samples.length; i++) {\n      const blockId = samples[i]['@id'] as string;\n      datasets = datasets.concat(samples[i]['datasets'] as JsonLdObj[]);\n      for (const section of samples[i]['sections'] as JsonLdObj[]) {\n        datasets = datasets.concat(section['datasets'] as JsonLdObj[]);\n      }\n      for (let j = i + 1; j < samples.length; j++) {\n        const sections = samples[j]['sections'] as JsonLdObj[];\n        if (sections.find((s) => s['@id'] === blockId)) {\n          samples[i]['deleteMe'] = true;\n          deleted++;\n        }\n      }\n    }\n    donor['samples'] = samples.filter((s) => s['deleteMe'] !== true);\n  }\n  if (deleted > 0) {\n    console.log(`⚠ ${deleted} sections identified as blocks`);\n  }\n}\n\nexport class HuBMAPTissueBlock {\n  bad = false;\n  donor!: JsonLdObj;\n\n  '@id': string;\n  '@type' = 'Sample';\n  label!: string;\n  description!: string;\n  link!: string;\n\n  sample_type = 'Tissue Block';\n  section_count!: number;\n  section_size!: number;\n  section_units!: string;\n\n  rui_location!: JsonLdObj;\n  sections!: JsonLdObj[];\n  datasets!: JsonLdObj[];\n\n  portal!: Portal;\n\n  constructor(\n    public data: JsonDict,\n    serviceToken?: string,\n  ) {\n    const entityType = this.data['entity_type'];\n    if (entityType !== 'Sample') {\n      this.bad = true;\n      return;\n    }\n    if (data['sennet_id']) {\n      this.portal = SENNET;\n    } else if (data['hubmap_id']) {\n      this.portal = HUBMAP;\n    } else {\n      this.bad = true;\n      return;\n    }\n\n    const descendants = (this.data['descendants'] || []) as JsonDict[];\n    const donor = (this.data['donor'] ?? this.data['source']) as JsonDict;\n    this.donor = this.getDonor(donor);\n    const ruiLocation = this.getRuiLocation(data, this.donor);\n    if (!ruiLocation) {\n      this.bad = true;\n    } else {\n      this.rui_location = ruiLocation;\n    }\n\n    if (!GROUP_UUID_MAPPING[data['group_uuid'] as string]) {\n      GROUP_UUID_MAPPING[data['group_uuid'] as string] = data['group_name'] as string;\n    }\n\n    const dateEntered = new Date(data['last_modified_timestamp'] as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[data['group_uuid'] as string] || (data['group_name'] as string);\n    const creator = data['created_by_user_displayname'];\n\n    this['@id'] = this.portal.idPrefix + data['uuid'];\n    this.label = `Registered ${dateEntered}, ${creator}, ${groupName}`;\n    this.link = `${this.portal.portal}sample${this.portal.portalParams}${data['uuid']}`;\n\n    const sectionLookup: Record<string, JsonLdObj> = {};\n    const sections: JsonLdObj[] = [];\n    this.sections = sections;\n    const datasets: JsonLdObj[] = [];\n    this.datasets = datasets;\n\n    for (const descendant of descendants.filter((d) => d['entity_type'] === 'Sample')) {\n      const section = this.getSection(descendant, data);\n\n      const sectionId = descendant['submission_id'] as string;\n      sectionLookup[sectionId] = section;\n      sections.push(section);\n      section['section_number'] = section['section_number'] ?? sections.length;\n    }\n    for (const descendant of descendants) {\n      if (descendant['entity_type'] === 'Dataset') {\n        const dataset = this.getDataset(descendant, serviceToken);\n\n        const sectionId = get(descendant, ['ingest_metadata', 'metadata', 'tissue_id']) as string;\n        if (sectionLookup[sectionId]) {\n          (sectionLookup[sectionId]['datasets'] as JsonLd[])?.push(dataset);\n        } else {\n          datasets.push(dataset);\n        }\n      }\n    }\n\n    const loc: JsonDict = ruiLocation ?? {};\n    const dims = `${loc['x_dimension']} x ${loc['y_dimension']} x ${loc['z_dimension']} ${loc['dimension_units']}`;\n    this.section_count = (loc['slice_count'] as number) || sections.length;\n    const sSize = parseFloat(\n      (\n        (loc['slice_thickness'] as number) || ((loc['z_dimension'] as number) || 0) / Math.max(this.section_count, 1)\n      ).toFixed(1),\n    );\n    this.section_size = sSize;\n    const sUnits = (loc['dimension_units'] as string) || 'millimeter';\n    this.section_units = sUnits;\n\n    this.description = `${dims}, ${sSize} ${sUnits}, ${this.section_count} Sections`;\n\n    sections.forEach((section, index) => {\n      section['description'] =\n        `${loc['x_dimension']} x ${loc['y_dimension']} x ${sSize} ${sUnits}, ${sSize} ${sUnits}, ${section['description']}`;\n      section['section_number'] = index + 1;\n    });\n  }\n\n  getSection(section: JsonDict, data: JsonDict): JsonLdObj {\n    const dateEntered = new Date(section['last_modified_timestamp'] as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[section['group_uuid'] as string] || (section['group_name'] as string);\n    const creator = section['created_by_user_displayname'];\n\n    return {\n      '@id': this.portal.idPrefix + section['uuid'],\n      '@type': 'Sample',\n      label: `Registered ${dateEntered}, ${creator}, ${groupName}`,\n      description: `${data['sample_category']}`,\n      link: `${this.portal.portal}sample${this.portal.portalParams}${section['uuid']}`,\n\n      sample_type: 'Tissue Section',\n      section_number: 1,\n\n      samples: [],\n      datasets: [],\n    };\n  }\n\n  getDataset(dataset: JsonDict, serviceToken?: string): JsonLdObj {\n    const dateEntered = new Date(dataset['last_modified_timestamp'] as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[dataset['group_uuid'] as string] || (dataset['group_name'] as string);\n    const creator = dataset['created_by_user_displayname'];\n\n    const types = (dataset['dataset_type'] ?? '') as string;\n    const typesSearch = types.toLowerCase();\n\n    let technology: string;\n    let thumbnail = 'assets/icons/ico-unknown.svg';\n    if (typesSearch.indexOf('10x') !== -1) {\n      technology = '10x';\n      thumbnail = 'assets/icons/ico-bulk-10x.svg';\n    } else if (typesSearch.indexOf('af') !== -1 || typesSearch.indexOf('auto-fluorescence') !== -1) {\n      technology = 'AF';\n      thumbnail = 'assets/icons/ico-spatial-af.svg';\n    } else if (typesSearch.indexOf('codex') !== -1) {\n      technology = 'CODEX';\n      thumbnail = 'assets/icons/ico-spatial-codex.svg';\n    } else if (typesSearch.indexOf('imc') !== -1 || typesSearch.indexOf('imaging mass cytometry') !== -1) {\n      technology = 'IMC';\n      thumbnail = 'assets/icons/ico-spatial-imc.svg';\n    } else if (typesSearch.indexOf('lc') !== -1 && typesSearch.indexOf('af') === -1) {\n      technology = 'LC';\n      thumbnail = 'assets/icons/ico-bulk-lc.svg';\n    } else if (typesSearch.indexOf('maldi') !== -1) {\n      technology = 'MALDI';\n    } else if (typesSearch.indexOf('pas') !== -1) {\n      technology = 'PAS';\n    } else {\n      technology = types.split(/ \\[/)[0];\n    }\n    thumbnail = this.getDatasetThumbnail(dataset, serviceToken) ?? thumbnail;\n\n    return {\n      '@id': this.portal.idPrefix + dataset['uuid'],\n      '@type': 'Dataset',\n      label: `Registered ${dateEntered}, ${creator}, ${groupName}`,\n      description: `Dataset Type: ${types}`,\n      link: `${this.portal.portal}dataset${this.portal.portalParams}${dataset['uuid']}`,\n      technology,\n      thumbnail,\n    };\n  }\n\n  getDatasetThumbnail(dataset: JsonDict, serviceToken?: string): string | undefined {\n    if (dataset['thumbnail_file']) {\n      const thumbnailFile = dataset['thumbnail_file'] as JsonDict;\n      return (\n        `${this.portal.assets}/${thumbnailFile['file_uuid']}/${thumbnailFile['filename']}` +\n        (serviceToken ? `?token=${serviceToken}` : '')\n      );\n    } else if (dataset['group_uuid'] === '73bb26e4-ed43-11e8-8f19-0a7c1eab007a') {\n      // TMC-Vanderbilt\n      const tiffs = (get(dataset, 'metadata.files', []) as { rel_path: string }[])\n        .filter((f) => /\\.(ome\\.tif|ome\\.tiff)$/.test(f.rel_path))\n        .filter((f) => !/(multilayer\\.ome\\.tif|_ac\\.ome\\.tif)/.test(f.rel_path))\n        .filter((f) =>\n          DR1_VU_THUMBS.has(f.rel_path.split('/').slice(-1)[0].split('?')[0].replace('.ome.tif', '_thumbnail.jpg')),\n        )\n        .map(\n          (f) =>\n            `${this.portal.assets}/${dataset['uuid']}/${f.rel_path}` + (serviceToken ? `?token=${serviceToken}` : ''),\n        );\n\n      if (tiffs.length > 0) {\n        const thumb = tiffs[0].split('/').slice(-1)[0].split('?')[0].replace('.ome.tif', '_thumbnail.jpg');\n        if (DR1_VU_THUMBS.has(thumb)) {\n          return `assets/thumbnails/TMC-Vanderbilt/DR1/${thumb}`;\n        }\n      }\n    } else if (dataset['group_uuid'] === '07a29e4c-ed43-11e8-b56a-0e8017bdda58') {\n      // TMC-Florida\n      const thumb = UFL_THUMBS[dataset['hubmap_id'] as keyof typeof UFL_THUMBS];\n      if (thumb) {\n        return `assets/thumbnails/TMC-Florida/${thumb}`;\n      }\n    }\n    return undefined;\n  }\n\n  getDonor(donor: JsonDict): JsonLdObj {\n    const donorDescription = ((donor['description'] as string) || '').toLowerCase();\n    let sex: 'Male' | 'Female' | undefined;\n    if (donorDescription.includes('female')) {\n      sex = 'Female';\n    } else if (donorDescription.includes('male')) {\n      sex = 'Male';\n    }\n    const ageMatch = donorDescription.match(/age ([0-9]+)/) ?? donorDescription.match(/ ([0-9]+) years/);\n    let age: number | undefined;\n    if (ageMatch) {\n      age = toNumber(ageMatch[1]);\n    }\n    let bmi: number | undefined;\n    let race: string | undefined;\n    const metadata = get(donor, 'mapped_metadata', get(donor, 'source_mapped_metadata', {})) as Record<\n      string,\n      unknown[]\n    >;\n    if (!sex && metadata['sex']?.length > 0) {\n      sex = metadata['sex'][0] as 'Male' | 'Female' | undefined;\n    }\n    if (!race && metadata['race']?.length > 0) {\n      race = metadata['race'][0] as string;\n    }\n    if (!age && metadata['age_value']?.length > 0) {\n      age = metadata['age_value'][0] as number | undefined;\n    }\n    if (!bmi && metadata['body_mass_index_value']?.length > 0) {\n      bmi = metadata['body_mass_index_value'][0] as number | undefined;\n    }\n    for (const md of get(\n      donor,\n      'metadata.organ_donor_data',\n      get(donor, 'metadata.living_donor_data', []),\n    ) as JsonDict[]) {\n      if (md['preferred_term'] === 'Feminine gender' || md['preferred_term'] === 'Female') {\n        sex = 'Female';\n      } else if (md['preferred_term'] === 'Masculine gender' || md['preferred_term'] === 'Male') {\n        sex = 'Male';\n      } else if (md['preferred_term'] === 'Current chronological age' || md['preferred_term'] === 'Age') {\n        age = toNumber(md['data_value']);\n      } else if (md['preferred_term'] === 'Body mass index') {\n        bmi = toNumber(md['data_value']);\n      } else if (md['grouping_concept_preferred_term'] === 'Race') {\n        race = md['preferred_term'] as string;\n      }\n    }\n    let label = '';\n    if (sex && age) {\n      label += `${sex}, Age ${age}`;\n      if (bmi) {\n        label += `, BMI ${bmi.toFixed(1)}`;\n      }\n    } else if (sex) {\n      label = sex;\n    }\n\n    const dateEntered = new Date(donor['last_modified_timestamp'] as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[donor['group_uuid'] as string] || (donor['group_name'] as string);\n    const creator = donor['created_by_user_displayname'];\n\n    return {\n      '@id': this.portal.idPrefix + donor['uuid'],\n      '@type': 'Donor',\n      label,\n      description: `Entered ${dateEntered}, ${creator}, ${groupName}`,\n      link: `${this.portal.portal}${this.portal.donorName}${this.portal.portalParams}${donor['uuid']}`,\n\n      age,\n      sex,\n      bmi,\n      race,\n\n      consortium_name: this.portal === HUBMAP ? 'HuBMAP' : 'SenNet',\n      provider_name: groupName,\n      provider_uuid: donor['group_uuid'] as string,\n\n      samples: [],\n    };\n  }\n\n  getRuiLocation(data: JsonDict, donor: JsonLdObj): JsonLdObj | undefined {\n    let spatialEntity: JsonLdObj | undefined;\n    let ruiLocation = data['rui_location'] as JsonDict;\n    if (ruiLocation) {\n      // RUI Location may come in as an unparsed string\n      if (typeof ruiLocation === 'string') {\n        ruiLocation = JSON.parse(ruiLocation as string) as JsonDict;\n      }\n      if (ruiLocation['alignment_id']) {\n        // Detect RUI 0.5 generated JSON\n        console.log('Detected a deprecated rui_location', data['uuid']);\n      } else if ((ruiLocation as unknown as { '@id': string })['@id']) {\n        // Detect RUI 1.0+ generated JSON-LD\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        spatialEntity = ruiLocation as unknown as JsonLdObj;\n      }\n      ruiLocation['@context'] = 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld';\n    }\n    if (spatialEntity) {\n      // Patch to fix RUI 0.5 Kidney and Spleen Placements\n      const target: string = get(spatialEntity, ['placement', 'target']) ?? '';\n      if (target.startsWith('http://purl.org/ccf/latest/ccf.owl#VHSpleenCC')) {\n        if (donor['sex'] === 'Male') {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VHSpleenCC', '#VHMSpleenCC'));\n        } else {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VHSpleenCC', '#VHFSpleenCC'));\n        }\n      } else if (\n        target === 'http://purl.org/ccf/latest/ccf.owl#VHLeftKidney' ||\n        target === 'http://purl.org/ccf/latest/ccf.owl#VHRightKidney'\n      ) {\n        if (donor['sex'] === 'Male') {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VH', '#VHM') + '_Patch');\n        } else {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VH', '#VHF') + '_Patch');\n        }\n      }\n    }\n    return spatialEntity;\n  }\n\n  getTissueBlock(): JsonLdObj {\n    return omit({ ...this }, ['data', 'bad', 'donor', 'portal']) as unknown as JsonLdObj;\n  }\n\n  toJsonLd(): JsonLdObj {\n    return { ...this.donor, samples: [this.getTissueBlock()] };\n  }\n}\n","/*\n * Public API Surface of ccf\n */\nexport * from './lib/ccf-database';\nexport * from './lib/ccf-spatial-scene';\nexport * from './lib/interfaces';\nexport * from './lib/spatial-types';\nexport * from './lib/xconsortia/xconsortia-data-import';\nexport * from './lib/util/ccf-database-status-tracker';\nexport * from './lib/util/probing-sphere-scene';\nexport * from './lib/util/tissue-block-scene';\nexport * from './lib/util/origin-scene';\n","import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\nconst EAGERLY_LOADED_SERVICES = [ConsentService, GoogleAnalyticsSyncService, LocalStorageSyncService];\n\nfunction toAttributes(obj: Record<string, unknown>): Record<string, string> {\n  return Object.entries(obj).reduce<Record<string, string>>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [\n        toAttributes({\n          appName,\n          projectName,\n          developmentMode,\n        }),\n      ],\n    },\n  ];\n}\n\n@NgModule({\n  imports: [NgxGoogleAnalyticsModule],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES,\n    },\n  ],\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders<AnalyticsModule> {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(options.gaToken, initCommands(options));\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\nexport type Consent = 'not-set' | 'given' | 'rescinded';\n\n@Injectable()\nexport class ConsentService implements OnDestroy {\n  consent: Consent = 'not-set';\n\n  readonly consentChange = new ReplaySubject<Consent>(1);\n\n  constructor() {\n    this.consentChange.next(this.consent);\n  }\n\n  ngOnDestroy(): void {\n    this.consentChange.complete();\n  }\n\n  setConsent(value: Consent): void {\n    if (this.consent !== value) {\n      this.consent = value;\n      this.consentChange.next(value);\n    }\n  }\n\n  unsetConsent(): void {\n    this.setConsent('not-set');\n  }\n}\n","import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { IGoogleAnalyticsSettings, NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN, NGX_WINDOW } from 'ngx-google-analytics';\nimport { Subscription } from 'rxjs';\n\nimport { ConsentService } from './consent.service';\n\n@Injectable()\nexport class GoogleAnalyticsSyncService implements OnDestroy {\n  private readonly token: string;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(NGX_WINDOW) private readonly window: Record<string, boolean> | null,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN)\n    { trackingCode }: IGoogleAnalyticsSettings,\n  ) {\n    this.token = trackingCode;\n\n    this.subscriptions.add(\n      consentService.consentChange.subscribe((consent) => this.toggleGoogleAnalytics(consent === 'rescinded')),\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private toggleGoogleAnalytics(disabled: boolean): void {\n    if (this.window) {\n      this.window[`ga-disable-${this.token}`] = disabled;\n    }\n  }\n}\n","import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Consent, ConsentService } from './consent.service';\n\nexport const LOCAL_STORAGE_CONSENT_KEY = new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY',\n});\n\n@Injectable()\nexport class LocalStorageSyncService implements OnDestroy {\n  private readonly storage?: typeof localStorage;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(LOCAL_STORAGE_CONSENT_KEY) private readonly key: string,\n  ) {\n    try {\n      this.storage = localStorage;\n    } catch (_error) {\n      /* Ignored */\n    }\n\n    consentService.setConsent(this.loadConsent());\n    this.subscriptions.add(consentService.consentChange.subscribe((consent) => this.saveConsent(consent)));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private loadConsent(): Consent {\n    const rawValue = this.storage?.getItem?.(this.key);\n    if (rawValue == null) {\n      return 'not-set';\n    }\n\n    const value = rawValue.trim().toLowerCase();\n    switch (value) {\n      case 'given': /* fallthrough */\n      case 'rescinded':\n        return value;\n      default:\n        return 'not-set';\n    }\n  }\n\n  private saveConsent(value: Consent): void {\n    this.storage?.setItem?.(this.key, value);\n  }\n}\n","export * from './lib/consent.service';\nexport * from './lib/analytics.module';\n","import { OperatorFunction } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * Removes all `null` and `undefined` values from a stream.\n *\n * @returns An `Observable` operator\n */\nexport function filterNulls<T>(): OperatorFunction<T | null | undefined, T> {\n  return filter((value): value is T => value != null);\n}\n","import { OperatorFunction } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Flattens a single level of nested arrays.\n *\n * @returns An `Observable` operator\n */\nexport function flatten<T>(): OperatorFunction<readonly (readonly T[])[], T[]> {\n  return map((array) => ([] as T[]).concat(...array));\n}\n","import { OperatorFunction } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Maps the values of each emitted array.\n *\n * @param project Mapping callback invoked for each element\n * @returns An `Observable` operator\n */\nexport function innerMap<T, R>(\n  project: (value: T, index: number, outerIndex: number) => R,\n): OperatorFunction<readonly T[], R[]> {\n  return map((array, outerIndex) => array.map((value, index) => project(value, index, outerIndex)));\n}\n","/* eslint-disable max-len */\nimport { OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n/**\n * Options for `pluckUnique` operator\n */\nexport interface PluckUniqueOptions<T> {\n  /**\n   * Custom comparison for determining distinct values\n   */\n  compare?: (lhs: T, rhs: T) => boolean;\n}\n\n/**\n * Default options\n */\nconst DEFAULT_OPTIONS: PluckUniqueOptions<unknown> = {};\n\n/**\n * Combines the functionaliy of `pluck` and `distinctUntilChanged`\n * as well as adding a `shareReplay`.\n *\n * @param {...string} props Properties to pluck\n * @param [opts] Additional options\n * @returns An `Observable` operator\n */\nexport function pluckUnique<T, K1 extends keyof T>(\n  k1: K1,\n  opts?: PluckUniqueOptions<T[K1]>,\n): OperatorFunction<T, T[K1]>;\nexport function pluckUnique<T, K1 extends keyof T, K2 extends keyof T[K1]>(\n  k1: K1,\n  k2: K2,\n  opts?: PluckUniqueOptions<T[K1][K2]>,\n): OperatorFunction<T, T[K1][K2]>;\nexport function pluckUnique<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  opts?: PluckUniqueOptions<T[K1][K2][K3]>,\n): OperatorFunction<T, T[K1][K2][K3]>;\nexport function pluckUnique<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n>(k1: K1, k2: K2, k3: K3, k4: K4, opts?: PluckUniqueOptions<T[K1][K2][K3][K4]>): OperatorFunction<T, T[K1][K2][K3][K4]>;\nexport function pluckUnique<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4,\n  k5: K5,\n  opts?: PluckUniqueOptions<T[K1][K2][K3][K4][K5]>,\n): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\nexport function pluckUnique<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5],\n>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4,\n  k5: K5,\n  k6: K6,\n  opts?: PluckUniqueOptions<T[K1][K2][K3][K4][K5][K6]>,\n): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\nexport function pluckUnique<T, R>(...props: [string, ...string[]]): OperatorFunction<T, R>;\nexport function pluckUnique<T, R>(...props: [string, ...string[], PluckUniqueOptions<R>]): OperatorFunction<T, R>;\nexport function pluckUnique(...props: unknown[]): OperatorFunction<unknown, unknown> {\n  const last = props[props.length - 1];\n  let keys = props as string[];\n  let opts = DEFAULT_OPTIONS;\n\n  if (typeof last === 'object') {\n    opts = last as PluckUniqueOptions<unknown>;\n    keys = keys.slice(0, -1);\n  }\n\n  return (source) => source.pipe(pluck(...keys), distinctUntilChanged(opts.compare), shareReplay(1));\n}\n","export * from './lib/filter-nulls';\nexport * from './lib/flatten';\nexport * from './lib/inner-map';\nexport * from './lib/pluck-unique';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent<MouseEvent>(el, 'mousemove').pipe(throttleTime(1000), map(formatData));\n\n  return events.subscribe((data) => ga.event('webpage', 'mousemove', data));\n}\n\n@NgModule()\nexport class MousePositionTrackerModule {\n  constructor(\n    // NOTE: Angular compiler fails when document is typed properly?!\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    @Inject(DOCUMENT) document: any,\n    ga: GoogleAnalyticsService,\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n    }\n  }\n}\n","import { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State<TrackingStateModel>({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING,\n  },\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository<TrackingStateModel> {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { BodyUI, NodeClickEvent, NodeDragEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { Subscription } from 'rxjs';\n\ninterface XYZTriplet<T = number> {\n  x: T;\n  y: T;\n  z: T;\n}\n\n/**\n * Component that handles displaying the 3D models in the stage\n */\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BodyUiComponent implements AfterViewInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-body-ui';\n\n  @Input()\n  get scene(): SpatialSceneNode[] {\n    return this._scene;\n  }\n\n  set scene(nodes: SpatialSceneNode[]) {\n    this._scene = nodes;\n    this.bodyUI?.setScene(nodes);\n  }\n\n  @Input()\n  get rotation(): number {\n    return this._rotation;\n  }\n\n  set rotation(value: number) {\n    this._rotation = value;\n    this.bodyUI?.setRotation(value);\n  }\n\n  @Input()\n  get rotationX(): number {\n    return this._rotationX;\n  }\n\n  set rotationX(value: number) {\n    this._rotationX = value;\n    this.bodyUI?.setRotationX(value);\n  }\n\n  @Input()\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  set zoom(value: number) {\n    this._zoom = value;\n    this.bodyUI?.setZoom(value);\n  }\n\n  @Input()\n  get target(): [number, number, number] {\n    return this._target;\n  }\n\n  set target(value: [number, number, number]) {\n    this._target = value;\n    this.bodyUI?.setTarget(value);\n  }\n\n  @Input()\n  get bounds(): XYZTriplet {\n    return this._bounds;\n  }\n\n  set bounds(value: XYZTriplet) {\n    this._bounds = value;\n    this.zoomToBounds(value);\n  }\n\n  @Input()\n  get camera(): string {\n    return this._camera;\n  }\n\n  set camera(value: string) {\n    this._camera = value;\n  }\n\n  @Output()\n  readonly rotationChange = new EventEmitter<[number, number]>();\n\n  @Output()\n  readonly nodeDrag = new EventEmitter<NodeDragEvent>();\n\n  @Output()\n  readonly nodeClick = new EventEmitter<NodeClickEvent>();\n\n  @Output()\n  readonly nodeHoverStart = new EventEmitter<SpatialSceneNode>();\n\n  @Output()\n  readonly nodeHoverStop = new EventEmitter<SpatialSceneNode>();\n\n  @Output()\n  readonly initialized = new EventEmitter<void>();\n\n  @Input()\n  get interactive(): boolean {\n    return this._interactive;\n  }\n\n  set interactive(value: boolean) {\n    this._interactive = value;\n    if (this.bodyUI) {\n      this.recreateBodyUI();\n    }\n  }\n\n  private _interactive = true;\n  private _rotation = 0;\n  private _rotationX = 0;\n  private _zoom = 9.5;\n  private _target: [number, number, number] = [0, 0, 0];\n  private _bounds!: XYZTriplet;\n  private _scene: SpatialSceneNode[] = [];\n  private subscriptions: Subscription[] = [];\n  private _camera!: string;\n\n  /**\n   * Instance of the body UI class for rendering the deckGL scene\n   */\n  bodyUI!: BodyUI;\n\n  /**\n   * Reference to the div we are using to mount the body UI to.\n   */\n  @ViewChild('bodyCanvas', { read: ElementRef })\n  bodyCanvas!: ElementRef<HTMLCanvasElement>;\n\n  /**\n   * Performs setup required after initialization\n   */\n  ngAfterViewInit(): void {\n    this.setupBodyUI();\n  }\n\n  zoomToBounds(bounds: XYZTriplet, margin = { x: 48, y: 48 }): void {\n    if (this.bodyCanvas) {\n      const { width, height } = this.bodyCanvas.nativeElement;\n      const pxRatio = window.devicePixelRatio;\n      const zoom = Math.min(\n        Math.log2((width - margin.x) / pxRatio / bounds.x),\n        Math.log2((height - margin.y) / pxRatio / bounds.y),\n      );\n      this.zoom = zoom;\n    }\n  }\n\n  /**\n   * Set up required to render the body UI with the scene nodes.\n   */\n  private async setupBodyUI(): Promise<void> {\n    const canvas = this.bodyCanvas.nativeElement;\n    const bodyUI = new BodyUI({\n      id: 'body-ui',\n      canvas,\n      zoom: this.zoom,\n      target: [0, 0, 0],\n      rotation: 0,\n      minRotationX: -75,\n      maxRotationX: 75,\n      interactive: this.interactive,\n      camera: this.camera,\n    });\n    canvas.addEventListener('contextmenu', (evt) => evt.preventDefault());\n    await bodyUI.initialize();\n    this.bodyUI = bodyUI;\n    (window as unknown as { bodyUI: unknown }).bodyUI = bodyUI;\n    if (this.scene?.length > 0) {\n      this.bodyUI.setScene(this.scene);\n    }\n    if (this.bounds) {\n      this.zoomToBounds(this.bounds);\n    }\n    if (this.target) {\n      this.bodyUI.setTarget(this.target);\n    }\n    this.subscriptions = [\n      this.bodyUI.sceneRotation$.subscribe((rotation) => this.rotationChange.next(rotation)),\n      this.bodyUI.nodeDrag$.subscribe((event) => this.nodeDrag.emit(event)),\n      this.bodyUI.nodeClick$.subscribe((event) => this.nodeClick.emit(event)),\n      this.bodyUI.nodeHoverStart$.subscribe((event) => this.nodeHoverStart.emit(event)),\n      this.bodyUI.nodeHoverStop$.subscribe((event) => this.nodeHoverStop.emit(event)),\n    ];\n    this.initialized.emit();\n  }\n\n  private recreateBodyUI(): void {\n    this.clearSubscriptions();\n    this.bodyUI.finalize();\n    this.setupBodyUI();\n  }\n\n  private clearSubscriptions(): void {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  ngOnDestroy(): void {\n    this.clearSubscriptions();\n  }\n}\n","<canvas #bodyCanvas class=\"body-ui\"></canvas>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [CommonModule],\n  exports: [BodyUiComponent],\n})\nexport class BodyUiModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs/internal/Observable';\n\nimport { CloseDialog, LearnMore } from '../../states/call-to-action/call-to-action.actions';\nimport { CallToActionSelectors } from '../../states/call-to-action/call-to-action.selectors';\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-call-to-action-behavior',\n  templateUrl: './call-to-action-behavior.component.html',\n  styleUrls: ['./call-to-action-behavior.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CallToActionBehaviorComponent {\n  @Select(CallToActionSelectors.title)\n  readonly title$!: Observable<string>;\n\n  @Select(CallToActionSelectors.message)\n  readonly message$!: Observable<string>;\n\n  @Select(CallToActionSelectors.callToAction)\n  readonly callToAction$!: Observable<string>;\n\n  @Select(CallToActionSelectors.imageUrl)\n  readonly imageUrl$!: Observable<string>;\n\n  /**\n   * Closes dialog\n   */\n  @Dispatch()\n  readonly close = (): CloseDialog => new CloseDialog();\n\n  /**\n   * Sends learn more open action\n   * @returns LearnMore action\n   */\n  @Dispatch()\n  readonly learnMore = (): LearnMore => new LearnMore();\n}\n","<ccf-call-to-action\n  [infoTitle]=\"(title$ | async) ?? ''\"\n  [message]=\"(message$ | async) ?? ''\"\n  [callToAction]=\"(callToAction$ | async) ?? ''\"\n  [imageUrl]=\"(imageUrl$ | async) ?? ''\"\n  (callToActionClicked)=\"learnMore()\"\n  (closeClicked)=\"close()\"\n>\n</ccf-call-to-action>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { CallToActionModule } from '../call-to-action/call-to-action.module';\nimport { CallToActionBehaviorComponent } from './call-to-action-behavior.component';\n\n@NgModule({\n  declarations: [CallToActionBehaviorComponent],\n  imports: [CommonModule, NgxsModule, MatIconModule, MatDialogModule, MatCardModule, CallToActionModule],\n  exports: [CallToActionBehaviorComponent],\n})\nexport class CallToActionBehaviorModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-call-to-action',\n  templateUrl: './call-to-action.component.html',\n  styleUrls: ['./call-to-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CallToActionComponent {\n  /**HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-call-to-action';\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle!: string;\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() imageUrl!: string;\n\n  /**\n   * Message to be displayed under image\n   */\n  @Input() message!: string;\n\n  /**\n   * Label for the button\n   */\n  @Input() callToAction!: string;\n\n  /**\n   *  Emmitter for component to pass info to parent\n   * */\n  @Output() readonly callToActionClicked = new EventEmitter<void>();\n\n  /**\n   *  Emmitter for component to pass info to parent\n   * */\n  @Output() readonly closeClicked = new EventEmitter<void>();\n\n  /**\n   * Function to handle the close button click action\n   */\n  close(): void {\n    this.closeClicked.emit();\n  }\n\n  /**\n   * Detects button click and reads markdown function\n   */\n  onDialogButtonClick(): void {\n    this.callToActionClicked.emit();\n  }\n}\n","<div class=\"rui-about wrapper\">\n  <div class=\"container\">\n    <div class=\"content\">\n      <div class=\"first-row\">\n        <p class=\"title\" mat-dialog-title>{{ infoTitle }}</p>\n        <mat-icon class=\"cta-mat-icon material-icons close-icon\" (click)=\"close()\">clear</mat-icon>\n      </div>\n      <img class=\"cta-image\" mat-card-sm-image [src]=\"imageUrl\" alt=\"preview\" layout-fill />\n\n      <mat-dialog-content class=\"mat-typography dialog-content\">\n        <div class=\"message\">{{ message }}</div>\n        <a mat-button class=\"mat-button\" [text]=\"callToAction\" (click)=\"onDialogButtonClick()\"> </a>\n      </mat-dialog-content>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { CallToActionComponent } from './call-to-action.component';\n\n@NgModule({\n  declarations: [CallToActionComponent],\n  imports: [CommonModule, MatIconModule, MatDialogModule, MatCardModule],\n  exports: [CallToActionComponent],\n})\nexport class CallToActionModule {}\n","/** A range which should have the specified classes and styles applied */\nexport interface DecoratedRange {\n  /** Start index of range (inclusive). Negative indicies are allowed. */\n  start: number;\n  /** End index of range (exclusive). Negative indicies are allowed. */\n  end: number;\n  /** Classes to add */\n  classes: string[];\n  /** Styles to set */\n  styles: Record<string, unknown>;\n}\n\n/**\n * Resolves and normalizes an index for indexing into an array of length `length`.\n *\n * @param index The index value to resolve. May be negative indicating an index from end.\n * @param length The length of the object on which this index will be used.\n * @returns A positive index in range [0, length]\n */\nfunction resolveIndex(index: number, length: number): number {\n  if (index >= 0 && index < length) {\n    return index;\n  } else if (index >= length) {\n    return length;\n  } else if (index + length < 0) {\n    return 0;\n  } else {\n    return index + length;\n  }\n}\n\n/**\n * Produces a new range object based on the input where all properties have been normalized.\n *\n * @param range The object to normalize.\n * @param length Max length for indices.\n * @returns A new object where all undefined values have been replaced with defaults and\n * where all indices have been constrained to the range [0, length].\n */\nexport function normalize(range: Partial<DecoratedRange>, length: number): DecoratedRange {\n  const start = resolveIndex(range.start ?? 0, length);\n  const end = resolveIndex(range.end ?? length, length);\n  const classes = range.classes ?? [];\n  const styles = range.styles ?? {};\n  return { start, end, classes, styles };\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record<string, unknown>;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text!: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial<DecoratedRange>[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) {\n      // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) {\n      // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(text.slice(lastIndex, op.index), stack));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(text.slice(lastIndex), stack));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record<number, StackOp> = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map((entry) => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return (\n      stack\n        .filter((item) => !op.removed.includes(item))\n        // Note - A new array is created by the above filter statement\n        // so it is safe to modify it with concat\n        .concat(op.added)\n    );\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const {\n      decorations = [],\n      text: { length },\n    } = this;\n    return (\n      decorations\n        // Turn partials into full objects\n        .map((range) => normalize(range, length))\n        // Remove empty and out of bounds ranges\n        .filter((range) => range.start < length && range.start < range.end)\n    );\n  }\n\n  /**\n   * Creates a segment without any decoration\n   *\n   * @param text The text for the segment\n   * @returns A segment without any decoration\n   */\n  private makeUndecoratedSegment(text: string): Segment {\n    return { text, classes: [], styles: {} };\n  }\n\n  /**\n   * Creates a segment with decoration\n   *\n   * @param text The text for the segment\n   * @param decorations Decorations for this segment\n   * @returns A decorated segment\n   */\n  private makeDecoratedSegment(text: string, decorations: DecoratedRange[]): Segment {\n    const classes = decorations.reduce<string[]>((result, range) => result.concat(range.classes), []);\n    const styles = decorations.reduce((result, range) => ({ ...result, ...range.styles }), {});\n\n    return { text, classes, styles };\n  }\n}\n","<span *ngFor=\"let segment of segments\" [class]=\"segment.classes\" [style]=\"segment.styles\">\n  {{ segment.text }}\n</span>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DecoratedTextComponent } from './decorated-text.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DecoratedTextComponent],\n  exports: [DecoratedTextComponent],\n})\nexport class DecoratedTextModule {}\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nimport { PanelData } from '../info-button/info-button.service';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\nimport { InfoButtonService } from './info-button.service';\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InfoButtonComponent implements OnDestroy {\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle = '';\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() videoID!: string;\n\n  @Input() documentationUrl!: string;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param infoButtonService Reference to the info button service\n   */\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly infoButtonService: InfoButtonService,\n  ) {\n    this.subscriptions.add(\n      infoButtonService.panelContent.subscribe((data) => {\n        if (data.content.length) {\n          this.launchInfoDialog(data);\n        }\n      }),\n    );\n  }\n\n  /**\n   * Unsubscribe to the observable when the component\n   * is destroyed\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(data: PanelData): void {\n    if (this.dialog.openDialogs.length === 0) {\n      //Prevent multiple dialogs from opening\n      this.dialog.open(InfoDialogComponent, {\n        autoFocus: false,\n        panelClass: 'modal-animated',\n        width: '72rem',\n        data: {\n          title: data.infoTitle,\n          content: data.content,\n          videoID: data.videoID,\n        },\n      });\n    }\n  }\n\n  /**\n   * Detects button click and updates panel data\n   */\n  onDialogButtonClick(): void {\n    this.infoButtonService.updateData(this.documentationUrl, this.videoID, this.infoTitle);\n  }\n}\n","<div class=\"info-button-wrapper\">\n  <mat-icon class=\"ccf-info-button\" aria-hidden=\"false\" aria-label=\"Page information\" (click)=\"onDialogButtonClick()\">\n    info\n  </mat-icon>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule, HttpClientModule],\n  exports: [InfoButtonComponent],\n})\nexport class InfoButtonModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InfoButtonService {\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject<PanelData> = new BehaviorSubject<PanelData>({\n    content: [],\n    infoTitle: '',\n    videoID: '',\n  });\n\n  constructor(private readonly http: HttpClient) {}\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = {\n        content: this.parseMarkdown(data),\n        infoTitle: infoTitle,\n        videoID: videoID,\n      };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine),\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n  /**\n   * URL for video\n   */\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef<InfoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n","<div class=\"about wrapper\">\n  <div class=\"container\">\n    <div class=\"content\">\n      <div class=\"header\">\n        <h2 class=\"title\" mat-dialog-title>{{ infoTitle }}</h2>\n        <div class=\"close\">\n          <mat-icon class=\"material-icons close-icon\" (click)=\"close()\">clear</mat-icon>\n        </div>\n      </div>\n\n      <mat-dialog-content class=\"mat-typography dialog-content\">\n        <div *ngFor=\"let content of documentationContents; let i = index\" class=\"panel\">\n          <mat-expansion-panel *ngIf=\"content\" [expanded]=\"i === 0\">\n            <mat-expansion-panel-header>\n              <h2 class=\"no-header-margin\">{{ content.title }}</h2>\n            </mat-expansion-panel-header>\n            <div class=\"top-padding\">\n              <markdown class=\"variable-binding\" [class.first]=\"i === 0\" [data]=\"content.content\"></markdown>\n              <div class=\"video-player\" *ngIf=\"i === 0\">\n                <youtube-player videoId=\"{{ videoID }}\"></youtube-player>\n              </div>\n            </div>\n          </mat-expansion-panel>\n        </div>\n      </mat-dialog-content>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { InfoDialogComponent } from './info-dialog.component';\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatExpansionModule,\n    YouTubePlayerModule,\n    MarkdownModule.forRoot({}),\n  ],\n  exports: [InfoDialogComponent],\n})\nexport class InfoDialogModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\n\n/**\n * Slider for setting opacity on an anatomical structure\n */\n@Component({\n  selector: 'ccf-opacity-slider',\n  templateUrl: './opacity-slider.component.html',\n  styleUrls: ['./opacity-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OpacitySliderComponent implements OnInit {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-opacity-slider';\n\n  /**\n   * The value displayed in the slider\n   */\n  @Input() opacity = 20;\n\n  /**\n   * Whether the item is set to visible\n   */\n  @Input() visible = true;\n\n  /**\n   * Emits the updated opacity when the opacity changes\n   */\n  @Output() readonly opacityChange = new EventEmitter<number>();\n\n  /**\n   * Output  of opacity slider component\n   */\n  @Output() readonly visibilityToggle = new EventEmitter();\n\n  /**\n   * Emitter for resetting all opacity values to default\n   */\n  @Output() readonly opacityReset = new EventEmitter();\n\n  /**\n   * Emitted when slider thumb is moved\n   */\n  @Output() readonly sliderChanged = new EventEmitter<string>();\n\n  prevOpacity!: number;\n\n  ngOnInit(): void {\n    if (this.visible) {\n      this.prevOpacity = 0;\n    } else {\n      this.prevOpacity = 20;\n    }\n  }\n\n  reset(): void {\n    this.prevOpacity = 20;\n  }\n\n  /**\n   * Emits signal to toggle the visibility of the item\n   */\n  toggleVisibility(): void {\n    const temp = this.opacity;\n    this.opacity = this.prevOpacity;\n    this.prevOpacity = temp;\n    this.visibilityToggle.emit();\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to reset the opacity of the item\n   */\n  resetOpacity(): void {\n    this.prevOpacity = 0;\n    this.opacityReset.emit();\n  }\n}\n","<div class=\"slider-box\">\n  <div class=\"slider-and-label\">\n    <mat-slider class=\"slider\" [class.disabled]=\"!visible\" [step]=\"1\" [min]=\"0\" [max]=\"100\" [disableRipple]=\"true\">\n      <input\n        matSliderThumb\n        class=\"opacity-slider\"\n        [value]=\"opacity\"\n        (input)=\"opacityChange.emit(+slider.value)\"\n        #slider\n      />\n    </mat-slider>\n    <span class=\"opacity-value\">{{ opacity }}%</span>\n  </div>\n  <div class=\"icons\">\n    <mat-icon\n      matRipple\n      [matRippleCentered]=\"true\"\n      [matRippleUnbounded]=\"true\"\n      class=\"visibility icon invisible\"\n      (click)=\"toggleVisibility()\"\n      [class.hidden]=\"opacity > 0\"\n      svgIcon=\"app:visibility_off\"\n    ></mat-icon>\n    <mat-icon\n      matRipple\n      [matRippleCentered]=\"true\"\n      [matRippleUnbounded]=\"true\"\n      class=\"visibility icon visible\"\n      (click)=\"toggleVisibility()\"\n      [class.hidden]=\"opacity === 0\"\n      svgIcon=\"app:visibility_on\"\n    ></mat-icon>\n    <mat-icon\n      matRipple\n      [matRippleCentered]=\"true\"\n      [matRippleUnbounded]=\"true\"\n      class=\"icon reset\"\n      (click)=\"resetOpacity()\"\n      >refresh</mat-icon\n    >\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { OpacitySliderComponent } from './opacity-slider.component';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [OpacitySliderComponent],\n  imports: [CommonModule, MatIconModule, MatSliderModule, MatRippleModule],\n  exports: [OpacitySliderComponent],\n})\nexport class OpacitySliderModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\n/**\n * All organs that will eventually be displayed in the app\n */\nexport const ALL_POSSIBLE_ORGANS = [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097',\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955',\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029',\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509',\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970',\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548',\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004549',\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889',\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303',\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302',\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948',\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113',\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538',\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539',\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465',\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24978',\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24977',\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107',\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048',\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004',\n  },\n  {\n    disabled: true,\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001911',\n  },\n  {\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma57991',\n  },\n  {\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma57987',\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992',\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7214',\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7213',\n  },\n  {\n    src: 'app:larynx',\n    organ: 'Larynx',\n    name: 'Larynx',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001737',\n  },\n  {\n    src: 'app:main-bronchus',\n    organ: 'Main Bronchus',\n    name: 'Main Bronchus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002182',\n  },\n  {\n    disabled: true,\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002373',\n  },\n  {\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma54974',\n  },\n  {\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma54973',\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264',\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270',\n  },\n  {\n    src: 'app:placenta',\n    organ: 'Placenta',\n    name: 'Placenta',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001987',\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true,\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079',\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108',\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059',\n  },\n  {\n    src: 'app:spinal-cord',\n    organ: 'Spinal Cord',\n    name: 'Spinal Cord',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002240',\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106',\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370',\n  },\n  {\n    src: 'app:trachea',\n    organ: 'Trachea',\n    name: 'Trachea',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003126',\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056',\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223',\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222',\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255',\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995',\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537',\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049',\n  },\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[];\n\n/**\n * All organs which have not been disabled\n */\nexport const ALL_ORGANS = ALL_POSSIBLE_ORGANS.filter((organ) => organ.disabled !== true);\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n  /**\n   * Used to fetch the url of the organ icon\n   */\n  src: string;\n\n  /**\n   * Label to display for the organ\n   */\n  name: string;\n\n  /**\n   * Name of the organ (to help match organs with left / right)\n   */\n  organ: string;\n\n  /**\n   * True if the icon is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Used for paired organs\n   */\n  side?: 'left' | 'right';\n\n  /**\n   * True if applies to both sexes\n   */\n  hasSex?: boolean;\n\n  /**\n   * Used for single sex only organs\n   */\n  sex?: 'male' | 'female';\n\n  /**\n   * UBERON id for the organ\n   */\n  id?: string;\n\n  numResults?: number;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrganSelectorComponent implements AfterViewInit, OnChanges, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-organ-selector';\n\n  @ViewChild('carouselContainer', { static: true })\n  carouselContainer!: ElementRef<HTMLElement>;\n  @ViewChild('itemlist', { static: true }) itemList!: ElementRef<HTMLElement>;\n  @ViewChild('itemcontainer', { static: true })\n  itemContainer!: ElementRef<HTMLElement>;\n\n  /**\n   * If multiple selections should be allowed\n   */\n  @Input() multiselect = false;\n\n  @Input() displayErrors = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  @Input() organList: OrganInfo[] = ALL_ORGANS;\n\n  /**\n   * Currently selected organ\n   */\n  @Input() selectedOrgans: OrganInfo[] = [];\n\n  /**\n   * If the organ selector is expanded\n   */\n  @Input() expanded = false;\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() readonly organsChanged = new EventEmitter<OrganInfo[]>();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * Handles scrolling behavior\n   */\n  timeoutHandler?: unknown;\n\n  /**\n   * Distance the carousel moves in each shift (px)\n   */\n  step = 72;\n\n  /**\n   * Detects resizing of carousel\n   */\n  private sensor!: ResizeSensor;\n\n  // eslint-disable-next-line\n  @Input()\n  set occurenceData(value: Record<string, number>) {\n    // eslint-disable-next-line\n    this._occurenceData = value;\n  }\n\n  get occurenceData(): Record<string, number> {\n    // eslint-disable-next-line\n    return this._occurenceData;\n  }\n\n  private _occurenceData!: Record<string, number>;\n\n  /**\n   * Set resize sensor on carousel\n   */\n  ngAfterViewInit(): void {\n    const { carouselContainer } = this;\n    this.sensor = new ResizeSensor(carouselContainer.nativeElement, () => {\n      this.set();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('organList' in changes) {\n      this.set();\n    }\n  }\n\n  /**\n   * Detaches resize sensor\n   */\n  ngOnDestroy(): void {\n    this.sensor.detach();\n  }\n\n  /**\n   * Decides whether or not an error has occured,\n   * used to display or hide error message.\n   */\n  get error(): boolean {\n    if (!this.displayErrors || this.selectedOrgans.length === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   *\n   * @param dir Direction to be scrolled\n   */\n  shift(dir: string): void {\n    const { itemList } = this;\n    let val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if ((this.onLeft && dir === 'left') || (this.onRight && dir === 'right')) {\n      return;\n    }\n    val = dir === 'right' ? val - this.step : val + this.step;\n    itemList.nativeElement.style.left = val + 'px';\n    this.setLeftRight(val);\n  }\n\n  /**\n   * Scrolls carousel continuously\n   *\n   * @param dir Direction to be scrolled\n   */\n  scroll(dir: string): void {\n    this.timeoutHandler = setInterval(() => {\n      this.shift(dir);\n    }, 200);\n  }\n\n  /**\n   * Stops carousel scrolling\n   */\n  stopScroll(): void {\n    if (this.timeoutHandler) {\n      // Minor hack to make typescript happy when there are mixed NodeJS and regular typings\n      clearInterval(this.timeoutHandler as never);\n      this.timeoutHandler = undefined;\n    }\n  }\n\n  /**\n   * Sets and emits currently selected organ(s)\n   *\n   * @param organ The organ selected\n   */\n  selectOrgan(organ: OrganInfo): void {\n    if (!this.multiselect) {\n      this.selectedOrgans = [organ];\n    } else {\n      if (this.selectedOrgans.includes(organ)) {\n        this.selectedOrgans = this.selectedOrgans.filter((selectedOrgan) => organ !== selectedOrgan);\n      } else {\n        this.selectedOrgans = this.selectedOrgans.concat([organ]);\n      }\n    }\n    this.organsChanged.emit(this.selectedOrgans);\n  }\n\n  /**\n   * Determines whether an icon represents a currently selected organ\n   *\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(organ: OrganInfo): boolean {\n    return this.selectedOrgans.includes(organ) ? true : false;\n  }\n\n  /**\n   * Disables scrolling if the list of organs is smaller than the container, otherwise sets onLeft and onRight as normal\n   */\n  set(): void {\n    const { itemList, itemContainer, carouselContainer } = this;\n    const val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (itemList.nativeElement.offsetWidth >= this.organList.length * this.step) {\n      itemList.nativeElement.style.left = '0px';\n      this.onLeft = true;\n      this.onRight = true;\n    } else {\n      this.setLeftRight(val);\n      const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n      itemContainer.nativeElement.style.width = `${listLength}px`;\n    }\n  }\n\n  /**\n   * Responsively sets width of the item container\n   */\n  setWidth(): void {\n    const { itemContainer, carouselContainer } = this;\n    const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n    itemContainer.nativeElement.style.width = `${listLength}px`;\n  }\n\n  /**\n   * Sets onLeft and onRight according to where the item list is scrolled\n   */\n  setLeftRight(val: number): void {\n    const { itemContainer } = this;\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val <= itemContainer.nativeElement.offsetWidth - this.organList.length * this.step ? true : false;\n  }\n}\n","<div\n  class=\"container\"\n  [class.expanded]=\"expanded\"\n  [class.error]=\"error\"\n  [matTooltipDisabled]=\"multiselect\"\n  matTooltip=\"Select the organ your tissue block is from.\"\n  #carouselContainer\n>\n  <mat-icon\n    *ngIf=\"!expanded\"\n    class=\"carousel-left-icon\"\n    (touchstart)=\"scroll('left')\"\n    (touchend)=\"stopScroll()\"\n    (click)=\"shift('left')\"\n    (mousedown)=\"scroll('left')\"\n    (mouseup)=\"stopScroll()\"\n    [class.disabled]=\"onLeft\"\n    >chevron_left</mat-icon\n  >\n  <div class=\"carousel-item-container\" #itemcontainer>\n    <div class=\"carousel-item-list\" #itemlist>\n      <div\n        *ngFor=\"let organ of organList\"\n        class=\"carousel-item\"\n        [class.disabled]=\"organ.disabled\"\n        (click)=\"selectOrgan(organ)\"\n        [class.selected]=\"isSelected(organ)\"\n      >\n        <mat-icon class=\"carousel-icon\" svgIcon=\"{{ organ.src }}\"></mat-icon>\n        <div class=\"carousel-text-container\">\n          <div class=\"carousel-text\">{{ organ.name }}</div>\n          <div class=\"num-results\" *ngIf=\"organ.numResults !== undefined\">{{ occurenceData[organ.id ?? ''] || 0 }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <mat-icon\n    *ngIf=\"!expanded\"\n    class=\"carousel-right-icon\"\n    (touchstart)=\"scroll('right')\"\n    (touchend)=\"stopScroll()\"\n    (click)=\"shift('right')\"\n    (mousedown)=\"scroll('right')\"\n    (mouseup)=\"stopScroll()\"\n    [class.disabled]=\"onRight\"\n    >chevron_right</mat-icon\n  >\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { OrganSelectorComponent } from './organ-selector.component';\n\n@NgModule({\n  declarations: [OrganSelectorComponent],\n  imports: [CommonModule, MatIconModule, MatTooltipModule],\n  exports: [OrganSelectorComponent],\n})\nexport class OrganSelectorModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\n\nexport interface Position {\n  x: number;\n  y: number;\n  z: number;\n}\n\n/**\n * Behavioral component for spatial search keyboard UI\n */\n@Component({\n  selector: 'ccf-spatial-search-keyboard-ui-behavior',\n  templateUrl: './spatial-search-keyboard-ui-behavior.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpatialSearchKeyboardUIBehaviorComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spatial-search-keyboard-ui-behavior';\n\n  /** Amount the position shifts for each key press */\n  @Input() delta = 1;\n\n  /** Input of spatial search keyboard uibehavior component */\n  @Input() shiftDelta = 2;\n\n  /** Current position of spatial search */\n  @Input() position!: Position;\n\n  @Input() disablePositionChange = false;\n\n  /** Emits when position changes */\n  @Output() readonly changePosition = new EventEmitter<Position>();\n\n  /** Current key being pressed/clicked */\n  currentKey?: string;\n\n  /** Current delta */\n  currentDelta!: number;\n\n  /** True while shift key is pressed */\n  shiftPressed = false;\n\n  /**\n   * Shifts position based on key\n   * @param key Key value\n   */\n  updatePosition(key: string): void {\n    this.currentDelta = this.shiftPressed ? this.shiftDelta : this.delta;\n    if (key === 'Shift') {\n      this.shiftPressed = true;\n    } else {\n      this.currentKey = key.toLowerCase();\n      switch (this.currentKey) {\n        case 'q':\n          this.position = {\n            ...this.position,\n            z: this.position.z + this.currentDelta,\n          };\n          break;\n        case 'e':\n          this.position = {\n            ...this.position,\n            z: this.position.z - this.currentDelta,\n          };\n          break;\n        case 'w':\n          this.position = {\n            ...this.position,\n            y: this.position.y + this.currentDelta,\n          };\n          break;\n        case 's':\n          this.position = {\n            ...this.position,\n            y: this.position.y - this.currentDelta,\n          };\n          break;\n        case 'a':\n          this.position = {\n            ...this.position,\n            x: this.position.x - this.currentDelta,\n          };\n          break;\n        case 'd':\n          this.position = {\n            ...this.position,\n            x: this.position.x + this.currentDelta,\n          };\n          break;\n        default:\n          break;\n      }\n      this.changePosition.emit(this.position);\n    }\n  }\n\n  /**\n   * Listens for keydown keyboard event and updates the position\n   * @param target Keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    if (this.disablePositionChange) {\n      return;\n    }\n    target.preventDefault();\n    this.updatePosition(target.key);\n  }\n\n  /**\n   * Listens for keyup keyboard event and updates currentKey / shiftPressed\n   * @param target Keyboard event\n   */\n  @HostListener('document:keyup', ['$event'])\n  keyUp(target: KeyboardEvent): void {\n    if (target.key === 'Shift') {\n      this.shiftPressed = false;\n    } else {\n      this.currentKey = undefined;\n    }\n  }\n\n  /**\n   * Updates the position when a key is clicked\n   * @param key Key value\n   */\n  keyClick(key: string): void {\n    this.updatePosition(key);\n  }\n\n  /**\n   * Updates current key when a key is hovered over\n   * @param key Key value\n   */\n  keyHover(key?: string): void {\n    this.currentKey = key;\n  }\n}\n","<ccf-spatial-search-keyboard-ui\n  [currentKey]=\"currentKey\"\n  [shiftPressed]=\"shiftPressed\"\n  (keyClicked)=\"keyClick($event)\"\n  (keyHovered)=\"keyHover($event)\"\n>\n</ccf-spatial-search-keyboard-ui>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SpatialSearchKeyboardUIModule } from '../spatial-search-keyboard-ui/spatial-search-keyboard-ui.module';\nimport { SpatialSearchKeyboardUIBehaviorComponent } from './spatial-search-keyboard-ui-behavior.component';\n\n@NgModule({\n  imports: [CommonModule, SpatialSearchKeyboardUIModule],\n  declarations: [SpatialSearchKeyboardUIBehaviorComponent],\n  exports: [SpatialSearchKeyboardUIBehaviorComponent],\n})\nexport class SpatialSearchKeyboardUIBehaviorModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * Keyboard control UI for spatial search\n */\n@Component({\n  selector: 'ccf-spatial-search-keyboard-ui',\n  templateUrl: './spatial-search-keyboard-ui.component.html',\n  styleUrls: ['./spatial-search-keyboard-ui.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpatialSearchKeyboardUIComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spatial-search-keyboard-ui';\n\n  /** Current key pressed */\n  @Input() currentKey?: string;\n\n  /** True if shift key is pressed */\n  @Input() shiftPressed!: boolean;\n\n  /** Emits when a key is clicked */\n  @Output() readonly keyClicked = new EventEmitter<string>();\n\n  /** Emits the key value when a key is hovered over */\n  @Output() readonly keyHovered = new EventEmitter<string | undefined>();\n\n  /** List of keys and their arrow icons that appear when the key is pressed */\n  keyMap = [\n    {\n      key: 'w',\n      direction: 'north',\n    },\n    {\n      key: 's',\n      direction: 'south',\n    },\n    {\n      key: 'a',\n      direction: 'west',\n    },\n    {\n      key: 'd',\n      direction: 'east',\n    },\n    {\n      key: 'e',\n      direction: 'north_east',\n    },\n    {\n      key: 'q',\n      direction: 'south_west',\n    },\n  ];\n}\n","<div class=\"direction-arrow\">\n  <mat-icon *ngFor=\"let key of keyMap\" class=\"arrow\" [class.active]=\"currentKey === key.key\"\n    >{{ key.direction }}\n  </mat-icon>\n</div>\n<div class=\"keys\">\n  <div class=\"keyrow\">\n    <div\n      class=\"key blue\"\n      (mousedown)=\"keyClicked.emit('q')\"\n      (mouseover)=\"keyHovered.emit('q')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 'q'\"\n    >\n      Q\n    </div>\n    <div\n      class=\"key green\"\n      (mousedown)=\"keyClicked.emit('w')\"\n      (mouseover)=\"keyHovered.emit('w')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 'w'\"\n    >\n      W\n    </div>\n    <div\n      class=\"key blue\"\n      (mousedown)=\"keyClicked.emit('e')\"\n      (mouseover)=\"keyHovered.emit('e')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 'e'\"\n    >\n      E\n    </div>\n  </div>\n  <div class=\"keyrow\">\n    <div\n      class=\"key red\"\n      (mousedown)=\"keyClicked.emit('a')\"\n      (mouseover)=\"keyHovered.emit('a')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 'a'\"\n    >\n      A\n    </div>\n    <div\n      class=\"key green\"\n      (mousedown)=\"keyClicked.emit('s')\"\n      (mouseover)=\"keyHovered.emit('s')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 's'\"\n    >\n      S\n    </div>\n    <div\n      class=\"key red\"\n      (mousedown)=\"keyClicked.emit('d')\"\n      (mouseover)=\"keyHovered.emit('d')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 'd'\"\n    >\n      D\n    </div>\n  </div>\n  <div *ngIf=\"shiftPressed\" class=\"shift\">SHIFT</div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { SpatialSearchKeyboardUIComponent } from './spatial-search-keyboard-ui.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [SpatialSearchKeyboardUIComponent],\n  exports: [SpatialSearchKeyboardUIComponent],\n})\nexport class SpatialSearchKeyboardUIModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * Base interface of items in the spatial search list\n */\nexport interface SpatialSearchListItem {\n  /** Whether the item is selected */\n  selected: boolean;\n\n  /** Description displayed for the item */\n  description: string;\n}\n\n/**\n * Displays a list of spatial searches\n */\n@Component({\n  selector: 'ccf-spatial-search-list',\n  templateUrl: './spatial-search-list.component.html',\n  styleUrls: ['./spatial-search-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpatialSearchListComponent<T extends SpatialSearchListItem> {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-spatial-search-list';\n\n  /** Label for the list */\n  @Input() label = '';\n\n  /** Items to display */\n  @Input() items: T[] = [];\n\n  /** Emits the new items when a selection changes */\n  @Output() readonly selectionChanged = new EventEmitter<T[]>();\n\n  /** Emits the item that has been removed from the list */\n  @Output() readonly itemRemoved = new EventEmitter<T>();\n\n  /**\n   * Computes a unique id for an item\n   *\n   * @param _index Unused\n   * @param item An item\n   * @returns A unique id\n   */\n  itemId(_index: number, item: T): string {\n    return item.description;\n  }\n\n  /**\n   * Updates the selected state for an item\n   *\n   * @param index Index of item to update\n   * @param selected What to set the selected state to\n   */\n  updateItemSelection(index: number, selected: boolean): void {\n    const newItems = (this.items = [...this.items]);\n    newItems[index] = { ...newItems[index], selected };\n\n    const selectedItems = newItems.filter((item) => item.selected);\n    this.selectionChanged.emit(selectedItems);\n  }\n\n  /**\n   * Removes an item from the list\n   *\n   * @param index Index of the item to remove\n   */\n  removeItem(index: number): void {\n    const newItems = (this.items = [...this.items]);\n    const [item] = newItems.splice(index, 1);\n    this.itemRemoved.emit(item);\n  }\n}\n","<div *ngIf=\"label\" class=\"label\">\n  {{ label }}\n</div>\n\n<mat-list class=\"list\">\n  <mat-list-item *ngFor=\"let item of items; index as idx; trackBy: itemId\" class=\"item\">\n    <div class=\"item-content\">\n      <mat-checkbox\n        class=\"description\"\n        labelPosition=\"after\"\n        [checked]=\"item.selected\"\n        (change)=\"updateItemSelection(idx, $event.checked)\"\n      >\n        {{ item.description }}\n      </mat-checkbox>\n\n      <div class=\"filler\"></div>\n\n      <button mat-icon-button class=\"delete\" (click)=\"removeItem(idx)\">\n        <mat-icon>delete_outlined</mat-icon>\n      </button>\n    </div>\n  </mat-list-item>\n</mat-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { SpatialSearchListComponent } from './spatial-search-list.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatCheckboxModule, MatIconModule, MatListModule],\n  declarations: [SpatialSearchListComponent],\n  exports: [SpatialSearchListComponent],\n})\nexport class SpatialSearchListModule {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\n\n/** Key-Value pair */\nexport type KVPair<T = unknown> = [string, T];\n/** Array of Key-Value pairs */\nexport type KVList<T = unknown> = KVPair<T>[];\n\n/**\n * Simple component for displaying the current values in the data store.\n */\n@Component({\n  selector: 'ccf-store-debug',\n  templateUrl: './store-debug.component.html',\n  styleUrls: ['./store-debug.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StoreDebugComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-store-debug';\n\n  /**\n   * Gets the store data as a list of state name to key-value pairs\n   */\n  get data(): KVList<KVList> {\n    const states: KVList<Record<string, unknown>> = Object.entries(this.root);\n    const stateValues: KVList<KVList> = states.map(([key, values]) => [key, Object.entries(values)]);\n    return stateValues.filter(([_key, values]) => values.length > 0);\n  }\n\n  /** Latest store data */\n  private root: Record<string, Record<string, unknown>> = {};\n\n  /** Subscriptions managed by this component */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of store debug component.\n   * Sets up the store data listeners.\n   *\n   * @param store The data store.\n   * @param cdr Change detection for this component.\n   */\n  constructor(store: Store, cdr: ChangeDetectorRef) {\n    const sub = store.subscribe((root) => {\n      this.root = root as Record<string, Record<string, unknown>>;\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  /**\n   * Cleans up subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div *ngFor=\"let state of data\" class=\"state\">\n  <div>{{ state[0] }}</div>\n  <ul class=\"kvlist\">\n    <li *ngFor=\"let kv of state[1]\" class=\"kvpair\">{{ kv[0] }}: {{ kv[1] | json }}</li>\n  </ul>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreDebugComponent } from './store-debug.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [StoreDebugComponent],\n  exports: [StoreDebugComponent],\n})\nexport class StoreDebugModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  InjectionToken,\n  Input,\n  Output,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { Observable, ObservableInput, from, lastValueFrom } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial<DecoratedRange>[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken('Maximum number of autocomplete options displayed', {\n  providedIn: 'root',\n  factory(): number {\n    return 10;\n  },\n});\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput<AutoCompleteOption[]>;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable<string>;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter<AutoCompleteOption>();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new UntypedFormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable<string>).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions),\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(@Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise<AutoCompleteOption[]> {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions < 1) {\n      return [];\n    }\n\n    const options = autoCompleter(search, maxOptions);\n    return lastValueFrom(\n      from(options).pipe(\n        take(1),\n        map((array) => (array.length <= maxOptions ? array : array.slice(0, maxOptions))),\n      ),\n    );\n  }\n\n  /**\n   * Text to show in search bar when an autocomplete option is selected.\n   *\n   * @param option The autocomplete option\n   * @returns The displayed text\n   */\n  optionDisplay(option: AutoCompleteOption | null): string {\n    return option?.label ?? '';\n  }\n\n  /**\n   * Gets an unique identifier for an autocomplete option object.\n   *\n   * @param _index Unused\n   * @param option The option object\n   * @returns The unique identifier\n   */\n  optionId(_index: number, option: AutoCompleteOption): unknown {\n    return option.id;\n  }\n}\n","<form class=\"form\">\n  <mat-form-field class=\"form-field\" appearance=\"outline\">\n    <ng-container matPrefix>\n      <ng-content select=\"[matPrefix]\"></ng-content>\n    </ng-container>\n\n    <input\n      matInput\n      type=\"search\"\n      class=\"input\"\n      [placeholder]=\"placeholder\"\n      [formControl]=\"controller\"\n      [matAutocomplete]=\"auto\"\n    />\n\n    <mat-autocomplete\n      class=\"autocomplete\"\n      [displayWith]=\"optionDisplay\"\n      (optionSelected)=\"optionSelected.emit($event.option.value)\"\n      #auto=\"matAutocomplete\"\n    >\n      <mat-option *ngFor=\"let option of options | async; trackBy: optionId\">\n        <ccf-decorated-text [text]=\"option.label\" [decorations]=\"option.decorations\"> </ccf-decorated-text>\n      </mat-option>\n    </mat-autocomplete>\n\n    <ng-container matSuffix>\n      <ng-content select=\"[matSuffix]\"></ng-content>\n    </ng-container>\n  </mat-form-field>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { DecoratedTextModule } from '../decorated-text/decorated-text.module';\nimport { TextSearchComponent } from './text-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n    DecoratedTextModule,\n  ],\n  declarations: [TextSearchComponent],\n  exports: [\n    TextSearchComponent,\n\n    // Reexport prefix/suffix markers\n    MatPrefix,\n    MatSuffix,\n  ],\n})\nexport class TextSearchModule {}\n","import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { Consent, ConsentService } from 'ccf-shared/analytics';\n\n@Component({\n  selector: 'ccf-tracking-popup',\n  templateUrl: './tracking-popup.component.html',\n  styleUrls: ['./tracking-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrackingPopupComponent {\n  @HostBinding('class') readonly clsName = 'ccf-tracking-popup';\n\n  get allowTelemetry(): Consent {\n    return this.consentService.consent;\n  }\n\n  container: HTMLElement;\n\n  constructor(\n    elementRef: ElementRef<HTMLElement>,\n    readonly consentService: ConsentService,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    @Inject(MAT_SNACK_BAR_DATA) public data: any,\n  ) {\n    this.container = elementRef.nativeElement;\n  }\n\n  dismiss(): void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    this.data.preClose();\n  }\n\n  submit(entry: boolean): void {\n    this.consentService.setConsent(entry ? 'given' : 'rescinded');\n    this.dismiss();\n  }\n\n  showButton(button: 'opt-in' | 'opt-out'): boolean {\n    const { allowTelemetry } = this;\n    if (allowTelemetry === 'not-set') {\n      return true;\n    } else {\n      return button === 'opt-in' ? allowTelemetry === 'rescinded' : allowTelemetry === 'given';\n    }\n  }\n}\n","<p>We log usage to improve this service.</p>\n<button *ngIf=\"showButton('opt-in')\" mat-button color=\"basic\" (click)=\"submit(true)\">\n  {{ allowTelemetry === 'not-set' ? 'I understand' : 'Opt in' }}\n</button>\n<button *ngIf=\"showButton('opt-out')\" mat-button color=\"basic\" (click)=\"submit(false)\">Opt out</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TrackingPopupComponent } from './tracking-popup.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule],\n  declarations: [TrackingPopupComponent],\n  exports: [TrackingPopupComponent],\n})\nexport class TrackingPopupModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n/**\n * Component displaying a x, y, and z position\n */\n@Component({\n  selector: 'ccf-xyz-position',\n  templateUrl: './xyz-position.component.html',\n  styleUrls: ['./xyz-position.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class XYZPositionComponent {\n  /** Html class name */\n  @HostBinding('class') readonly clsName = 'ccf-xyz-position';\n\n  /** X position */\n  @Input() x = 0;\n\n  /** Y position */\n  @Input() y = 0;\n\n  /** Z position */\n  @Input() z = 0;\n\n  /** Number format for position values */\n  readonly format = '1.0-2';\n}\n","<span class=\"line\">X: {{ x | number: format }}</span>\n<span class=\"line\">Y: {{ y | number: format }}</span>\n<span class=\"line\">Z: {{ z | number: format }}</span>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { XYZPositionComponent } from './xyz-position.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [XYZPositionComponent],\n  exports: [XYZPositionComponent],\n})\nexport class XYZPositionModule {}\n","import { Immutable } from '@angular-ru/common/typings';\nimport { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { ImmutablePatchValue, ImmutableStateValue } from '@angular-ru/ngxs/typings';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable, OperatorFunction, of } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n@StateRepository()\n@State({\n  name: 'globalConfig',\n  defaults: null,\n})\n@Injectable()\nexport class GlobalConfigState<T> extends NgxsImmutableDataRepository<T> {\n  private readonly optionCache = new Map<string, Observable<unknown>>();\n\n  @Computed()\n  get config$(): Observable<Immutable<T>> {\n    return this.state$.pipe(filterNulls(), shareReplay(1));\n  }\n\n  setConfig(config: ImmutableStateValue<T>): void {\n    this.setState(config);\n  }\n\n  patchConfig(config: ImmutablePatchValue<T>): void {\n    this.patchState(config);\n  }\n\n  getProperty<R>(path: PropertyKey[]): Observable<R> {\n    return this.config$.pipe(\n      pluck(...(path as [string])) as OperatorFunction<Immutable<T>, R>,\n      distinctUntilChanged(),\n      shareReplay(1),\n    );\n  }\n\n  getOption<K1 extends keyof T>(k1: K1): Observable<T[K1]>;\n  getOption<K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): Observable<T[K1][K2]>;\n  getOption<K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n    k1: K1,\n    k2: K2,\n    k3: K3,\n  ): Observable<T[K1][K2][K3]>;\n  getOption<R>(...path: (string | number)[]): Observable<R>;\n  getOption(...path: (string | number)[]): Observable<unknown> {\n    const key = this.getPathKey(path);\n    if (this.optionCache.has(key)) {\n      return this.optionCache.get(key) ?? of();\n    }\n\n    const obs = this.config$.pipe(pluck(...(path as string[])), distinctUntilChanged(), shareReplay(1));\n\n    this.optionCache.set(key, obs);\n    return obs;\n  }\n\n  private getPathKey(path: (string | number)[]): string {\n    return `${path.length}:${path.join('.')}`;\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n/**\n * Directive for restricting an input element to integer only values.\n */\n@Directive({\n  selector: 'input[ccfNumbersOnly]',\n})\nexport class NumberDirective {\n  /**\n   * Creates an instance of number directive.\n   *\n   * @param el Reference to input element\n   */\n  constructor(private readonly el: ElementRef<HTMLInputElement>) {}\n\n  /**\n   * Listens to input changes and updates the text to only include numbers.\n   *\n   * @param event The input event\n   */\n  @HostListener('input', ['$event'])\n  onInputChange(event: Event): void {\n    const initalValue = this.el.nativeElement.value;\n    this.el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n    if (initalValue !== this.el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberDirective } from './numbers-only.directive';\n\n@NgModule({\n  declarations: [NumberDirective],\n  exports: [NumberDirective],\n})\nexport class NumbersOnlyModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  DatabaseStatus,\n  DefaultService,\n  MinMax,\n  SpatialSceneNode as RawSpatialSceneNode,\n  SpatialSearch,\n} from '@ccf-openapi/ng-client';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult,\n  Filter,\n  OntologyTreeModel,\n  SpatialEntity,\n  SpatialSceneNode,\n  TissueBlockResult,\n} from 'ccf-database';\nimport { Observable, Subject, combineLatest } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable<Parameters<typeof Cacheable>[0]>;\n\ntype RequestMethod<P, T> = (params: P) => Observable<T>;\ntype DataReviver<T, U> = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  biomarkerTerms?: string[];\n  consortiums?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n// Cache config\nconst buster$ = new Subject<unknown>();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4,\n};\n\n// Utility\nfunction cast<T>(): (data: unknown) => T {\n  return (data) => data as T;\n}\n\nfunction rangeToMinMax(range: [number, number] | undefined, low: number, high: number): MinMax | undefined {\n  return range\n    ? { min: range[0] > low ? range[0] : undefined, max: range[1] < high ? range[1] : undefined }\n    : undefined;\n}\n\nfunction filterToParams(filter?: Filter): FilterParams {\n  return {\n    age: rangeToMinMax(filter?.ageRange, 1, 110),\n    bmi: rangeToMinMax(filter?.bmiRange, 13, 83),\n    sex: filter?.sex?.toLowerCase?.() as FilterParams['sex'],\n    ontologyTerms: filter?.ontologyTerms,\n    cellTypeTerms: filter?.cellTypeTerms,\n    biomarkerTerms: filter?.biomarkerTerms,\n    consortiums: filter?.consortiums,\n    providers: filter?.tmc,\n    technologies: filter?.technologies,\n    spatial: filter?.spatialSearches,\n  };\n}\n\nfunction spatialSceneNodeReviver(nodes: RawSpatialSceneNode[]): SpatialSceneNode[] {\n  return nodes.map((node) => ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? []),\n  }));\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState<ApiEndpointDataSourceOptions>,\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable<DatabaseStatus> {\n    return this.doRequest((params) => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable<string[]> {\n    return this.doRequest((params) => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable<string[]> {\n    return this.doRequest((params) => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable<OntologyTreeModel> {\n    return this.doRequest((params) => this.api.ontologyTreeModel(params), undefined, {}, cast<OntologyTreeModel>());\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable<OntologyTreeModel> {\n    return this.doRequest((params) => this.api.cellTypeTreeModel(params), undefined, {}, cast<OntologyTreeModel>());\n  }\n\n  /**\n   * Get the biomarker type tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getBiomarkerTreeModel(): Observable<OntologyTreeModel> {\n    return this.doRequest((params) => this.api.biomarkerTreeModel(params), undefined, {}, cast<OntologyTreeModel>());\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable<SpatialEntity[]> {\n    return this.doRequest((params) => this.api.referenceOrgans(params), undefined, {}, cast<SpatialEntity[]>());\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable<TissueBlockResult[]> {\n    return this.doRequest((params) => this.api.tissueBlocks(params), filter, {}, cast<TissueBlockResult[]>());\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable<AggregateResult[]> {\n    return this.doRequest((params) => this.api.aggregateResults(params), filter);\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.doRequest((params) => this.api.ontologyTermOccurences(params), filter);\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.doRequest((params) => this.api.cellTypeTermOccurences(params), filter);\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getBiomarkerTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.doRequest((params) => this.api.biomarkerTermOccurences(params), filter);\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable<SpatialSceneNode[]> {\n    return this.doRequest((params) => this.api.scene(params), filter, {}, spatialSceneNodeReviver);\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable<SpatialSceneNode[]> {\n    return this.doRequest(\n      (params) => this.api.referenceOrganScene(params),\n      filter,\n      { organIri },\n      spatialSceneNodeReviver,\n    );\n  }\n\n  private doRequest<T, P>(\n    method: RequestMethod<DefaultParams & FilterParams & P, T>,\n    filter?: Filter | undefined,\n    params?: P,\n  ): Observable<T>;\n  private doRequest<T, P, U>(\n    method: RequestMethod<DefaultParams & FilterParams & P, T>,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver<T, U>,\n  ): Observable<U>;\n  private doRequest<P>(\n    method: RequestMethod<unknown, unknown>,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver<unknown, unknown>,\n  ): Observable<unknown> {\n    const { api, globalConfig } = this;\n    const requestParams: Record<string, unknown> = { ...filterToParams(filter), ...params };\n\n    return combineLatest([globalConfig.getOption('remoteApiEndpoint'), globalConfig.getOption('hubmapToken')]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map((data) => (reviver ? reviver(data) : data)),\n    );\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { Remote, releaseProxy, wrap } from 'comlink';\nimport { Observable, ObservableInput, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { ApiEndpointDataSourceService } from './api-endpoint.service';\nimport {\n  DataSource,\n  DataSourceDataType,\n  DataSourceLike,\n  DataSourceMethod,\n  DelegateDataSource,\n  ForwardingDataSource,\n} from './data-source';\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote<CCFDatabase>;\n}\n\n@Injectable()\nexport abstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable<DataSourceLike>;\n  readonly database$: Observable<CCFDatabase | Remote<CCFDatabase>>;\n\n  constructor(globalConfig: GlobalConfigState<CCFDatabaseOptions>) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      (source) => source as Observable<CCFDatabaseOptions>,\n      filter((config) => Object.keys(config).length > 0),\n      switchMap((config) =>\n        using(\n          () => this.createDatabase(config),\n          (manager) => this.connectDatabase(manager as CCFDatabaseManager, config),\n        ),\n      ),\n      map((manager) => manager.database),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions): Promise<CCFDatabaseManager> {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined,\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap<CCFDatabase>(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      },\n    };\n  }\n}\n\nconst REMOTE_METHODS: (keyof DataSource)[] = [\n  'getOntologyTreeModel',\n  'getCellTypeTreeModel',\n  'getBiomarkerTreeModel',\n  'getReferenceOrgans',\n];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HybridCCfDatabaseDatasourceService extends ForwardingDataSource {\n  constructor(\n    private readonly remote: ApiEndpointDataSourceService,\n    private readonly local: CCFDatabaseDataSourceService,\n  ) {\n    super();\n  }\n\n  protected forwardCall<K extends keyof DataSource>(\n    method: K,\n    ...args: Parameters<DataSourceMethod<K>>\n  ): Observable<DataSourceDataType<K>> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput<unknown>;\n    type Res = Observable<DataSourceDataType<K>>;\n    const source = this.isRemoteCall(method) ? this.remote : this.local;\n    return (source[method] as AnyFunction)(...args) as Res;\n  }\n\n  private isRemoteCall(method: keyof DataSource): boolean {\n    return REMOTE_METHODS.includes(method);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AggregateResult,\n  DatabaseStatus,\n  Filter,\n  OntologyTreeModel,\n  SpatialEntity,\n  SpatialSceneNode,\n  TissueBlockResult,\n} from 'ccf-database';\nimport { Observable } from 'rxjs';\n\nimport { DataSource } from './data-source';\n\n@Injectable()\nexport abstract class DataSourceService implements DataSource {\n  abstract getDatabaseStatus(): Observable<DatabaseStatus>;\n  abstract getProviderNames(): Observable<string[]>;\n  abstract getDatasetTechnologyNames(): Observable<string[]>;\n  abstract getOntologyTreeModel(): Observable<OntologyTreeModel>;\n  abstract getCellTypeTreeModel(): Observable<OntologyTreeModel>;\n  abstract getBiomarkerTreeModel(): Observable<OntologyTreeModel>;\n  abstract getReferenceOrgans(): Observable<SpatialEntity[]>;\n\n  abstract getTissueBlockResults(filter?: Filter): Observable<TissueBlockResult[]>;\n  abstract getAggregateResults(filter?: Filter): Observable<AggregateResult[]>;\n  abstract getOntologyTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  abstract getCellTypeTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  abstract getBiomarkerTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  abstract getScene(filter?: Filter): Observable<SpatialSceneNode[]>;\n  abstract getReferenceOrganScene(organIri: string, filter?: Filter): Observable<SpatialSceneNode[]>;\n}\n","import {\n  AggregateResult,\n  DatabaseStatus,\n  Filter,\n  OntologyTreeModel,\n  SpatialEntity,\n  SpatialSceneNode,\n  TissueBlockResult,\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable<DatabaseStatus>;\n  getProviderNames(): Observable<string[]>;\n  getDatasetTechnologyNames(): Observable<string[]>;\n  getOntologyTreeModel(): Observable<OntologyTreeModel>;\n  getCellTypeTreeModel(): Observable<OntologyTreeModel>;\n  getBiomarkerTreeModel(): Observable<OntologyTreeModel>;\n  getReferenceOrgans(): Observable<SpatialEntity[]>;\n\n  getTissueBlockResults(filter?: Filter): Observable<TissueBlockResult[]>;\n  getAggregateResults(filter?: Filter): Observable<AggregateResult[]>;\n  getOntologyTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  getCellTypeTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  getBiomarkerTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  getScene(filter?: Filter): Observable<SpatialSceneNode[]>;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable<SpatialSceneNode[]>;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod<K>;\n};\n\nexport type DataSourceMethod<K extends keyof DataSource> = DataSource[K];\nexport type DataSourceLikeMethod<K extends keyof DataSource> = (\n  ...args: Parameters<DataSourceMethod<K>>\n) => ObservableInput<DataSourceDataType<K>>;\nexport type DataSourceDataType<K extends keyof DataSource> = ObservedValueOf<ReturnType<DataSourceMethod<K>>>;\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable<DatabaseStatus> {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable<string[]> {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable<string[]> {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable<OntologyTreeModel> {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable<OntologyTreeModel> {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getBiomarkerTreeModel(): Observable<OntologyTreeModel> {\n    return this.forwardCall('getBiomarkerTreeModel');\n  }\n\n  getReferenceOrgans(): Observable<SpatialEntity[]> {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable<TissueBlockResult[]> {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable<AggregateResult[]> {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getBiomarkerTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.forwardCall('getBiomarkerTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable<SpatialSceneNode[]> {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable<SpatialSceneNode[]> {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall<K extends keyof DataSource>(\n    method: K,\n    ...args: Parameters<DataSourceMethod<K>>\n  ): Observable<DataSourceDataType<K>>;\n}\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable<DataSourceLike>;\n\n  protected forwardCall<K extends keyof DataSource>(\n    method: K,\n    ...args: Parameters<DataSourceMethod<K>>\n  ): Observable<DataSourceDataType<K>> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput<unknown>;\n\n    return this.impl$.pipe(switchMap((impl) => (impl[method] as AnyFunction)(...args))) as Observable<\n      DataSourceDataType<K>\n    >;\n  }\n}\n","import { Injectable, Injector, ProviderToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n@Injectable()\nexport abstract class InjectorDelegateDataSourceService<C> extends DelegateDataSource {\n  readonly impl$: Observable<DataSourceLike>;\n\n  constructor(globalConfig: GlobalConfigState<C>, injector: Injector) {\n    super();\n\n    this.impl$ = globalConfig.config$.pipe(\n      (source) => source as Observable<C>,\n      map((config) => this.selectToken(config)),\n      distinctUntilChanged(),\n      map((token) => injector.get(token)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract selectToken(config: C): ProviderToken<DataSourceLike>;\n}\n","import { Injectable } from '@angular/core';\n\n/** Type of keys allowed in the global object */\nexport type GlobalKey = string | symbol;\n\n/** Type of the global object */\nexport type GlobalThis = typeof globalThis;\n\ndeclare let global: GlobalThis;\n\n/**\n * Provide functionality for interacting with the global object.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalsService {\n  /**\n   * The found global object\n   */\n  get obj(): GlobalThis | undefined {\n    const obj = this.findGlobalObject();\n    // Cache value on the instance\n    Object.defineProperties(this, {\n      obj: {\n        configurable: false,\n        writable: false,\n        value: obj,\n      },\n    });\n\n    return obj;\n  }\n\n  /**\n   * Tests whether the global object has the specific key.\n   * This method returns true even when the associated value\n   * is undefined or null as long as the key exists.\n   *\n   * @param key The key\n   *\n   * @returns true if the key exists in the global object\n   */\n  has(key: GlobalKey): boolean {\n    const { obj } = this;\n    return obj != null && key in obj;\n  }\n\n  /**\n   * Gets a value from the global object.\n   *\n   * @param key The key for the value\n   * @param def An optional default value\n   *\n   * @returns The value if it exists otherwise the default value\n   */\n  get<K extends keyof GlobalThis>(key: K): GlobalThis[K];\n  get<K extends keyof GlobalThis, D>(key: K, def: D): NonNullable<GlobalThis[K]> | D;\n  get<T = unknown>(key: GlobalKey): T | null | undefined;\n  get<T = unknown, D = T>(key: GlobalKey, def: D): T | D;\n\n  get(key: GlobalKey, def?: unknown): unknown {\n    const { obj } = this;\n    return (obj && (obj[key as never] as unknown)) ?? def;\n  }\n\n  /**\n   * Sets a value on the global object.\n   *\n   * @param key The key to set the value on\n   * @param value The new value\n   *\n   * @throws TypeError if the value is readonly\n   */\n  set<K extends keyof GlobalThis>(key: K, value: GlobalThis[K]): void;\n  set<T>(key: GlobalKey, value: T): void;\n\n  set(key: GlobalKey, value: unknown): void {\n    const { obj } = this;\n    if (obj) {\n      obj[key as never] = value as never;\n    }\n  }\n\n  /**\n   * Removes a key from the global object.\n   *\n   * @param key The key to remove\n   *\n   * @throws TypeError if the key is not removable\n   */\n  remove(key: GlobalKey): void {\n    const { obj } = this;\n    if (obj) {\n      delete obj[key as never];\n    }\n  }\n\n  /**\n   * Attempt to locate the global object.\n   * Can be overridden in a subclass to check other locations\n   * or completely change the object. This is especially useful\n   * during testing.\n   *\n   * @returns The global object if found\n   */\n  /* istanbul ignore next This is really hard to test as it depends on the global environment */\n  protected findGlobalObject(): GlobalThis | undefined {\n    // This should pretty much always be available unless\n    // we are running in some outdated environment\n    if (typeof globalThis !== 'undefined') {\n      return globalThis;\n    }\n\n    // Check the common places for a global object\n    if (typeof global !== 'undefined') {\n      // Node.js environment\n      return global;\n    } else if (typeof window !== 'undefined') {\n      // Browser environment\n      return window;\n    } else if (typeof self !== 'undefined') {\n      // Web worker environment\n      return self;\n    }\n\n    try {\n      // One last try - may fail depending on content security policy (CSP) settings\n      // eslint-disable-next-line no-new-func, @typescript-eslint/no-implied-eval\n      return new Function('return this;')() as GlobalThis | undefined;\n    } catch (_ignored) {\n      /* Ignore errors */\n    }\n\n    return undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service to handle local storage\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  static storage = (() => {\n    // Slightly modified from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    let storage: Storage | undefined;\n    try {\n      storage = window.localStorage;\n      const x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n\n      return storage;\n    } catch (error) {\n      const full =\n        error instanceof DOMException &&\n        // everything except Firefox\n        (error.code === 22 ||\n          // Firefox\n          error.code === 1014 ||\n          // test name field too, because code might not be present\n          // everything except Firefox\n          error.name === 'QuotaExceededError' ||\n          // Firefox\n          error.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n        storage &&\n        storage.length !== 0;\n\n      return full ? storage : undefined;\n    }\n  })();\n\n  /**\n   * gets length of storage list\n   */\n  get length(): number {\n    return LocalStorageService.storage?.length ?? 0;\n  }\n\n  /**\n   * Gets value based on key index\n   * @param index\n   * @returns\n   */\n  key(index: number): string | null {\n    return LocalStorageService.storage?.key(index) ?? null;\n  }\n\n  /**\n   * Gets value based on key, also returns default if it fails\n   * @param key\n   * @param defaultValue\n   * @returns the value\n   */\n  getItem<D extends string | null = null>(key: string, defaultValue?: D): string | D {\n    return LocalStorageService.storage?.getItem(key) ?? defaultValue ?? (null as D);\n  }\n\n  /**\n   * sets a key-value pairin local storage\n   * @param key\n   * @param value\n   * @returns true or false based on success/failure\n   */\n  setItem(key: string, value: string): boolean {\n    try {\n      LocalStorageService.storage?.setItem(key, value);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * removes value based on key\n   * @param key\n   */\n  removeItem(key: string): void {\n    LocalStorageService.storage?.removeItem(key);\n  }\n\n  /**\n   * Clears all storage\n   */\n  clear(): void {\n    LocalStorageService.storage?.clear();\n  }\n}\n","export class LearnMore {\n  static readonly type = '[CallToAction] Learn More';\n}\n\nexport class OpenDialog {\n  static readonly type = '[CallToAction] Open Dialog';\n}\n\nexport class CloseDialog {\n  static readonly type = '[CallToAction] Close Dialog';\n}\n","import { Selector } from '@ngxs/store';\n\nimport { CallToActionModel, CallToActionState } from './call-to-action.state';\n\nexport class CallToActionSelectors {\n  @Selector([CallToActionState])\n  static title(state: CallToActionModel): string {\n    return state.title;\n  }\n\n  @Selector([CallToActionState])\n  static message(state: CallToActionModel): string {\n    return state.message;\n  }\n\n  @Selector([CallToActionState])\n  static callToAction(state: CallToActionModel): string {\n    return state.callToAction;\n  }\n\n  @Selector([CallToActionState])\n  static imageUrl(state: CallToActionModel): string {\n    return state.imageUrl;\n  }\n\n  @Selector([CallToActionState])\n  static expirationDate(state: CallToActionModel): string {\n    return state.expirationDate;\n  }\n\n  @Selector([CallToActionState])\n  static popupShown(state: CallToActionModel): boolean {\n    return state.popupShown;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Action, NgxsOnInit, State, StateContext } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { CallToActionBehaviorComponent } from '../../components/call-to-action-behavior/call-to-action-behavior.component';\nimport { DocumentationContent, InfoButtonService } from '../../components/info/info-button/info-button.service';\nimport { InfoDialogComponent } from '../../components/info/info-dialog/info-dialog.component';\nimport { LocalStorageService } from '../../services/local-storage/local-storage.service';\nimport { CloseDialog, LearnMore, OpenDialog } from './call-to-action.actions';\n\n/**\n * Interface to hold the necessary parts of the CTA dialog\n */\nexport interface CallToActionModel {\n  title: string;\n  message: string;\n  callToAction: string;\n  imageUrl: string;\n  expirationDate: string;\n  popupShown: boolean;\n}\n\n/**\n * Key for boolean determining if poup has been shown\n */\nconst POPUP_SHOWN_STORAGE_KEY = 'callToActionPopupShown';\n\n/**\n * Path to readme markup doc\n */\nconst SPATIAL_SEARCH_README = 'assets/docs/SPATIAL_SEARCH_README.md';\n\n/**\n * Sets the necessary defaults for the dialog box\n */\n@State<CallToActionModel>({\n  name: 'callToAction',\n  defaults: {\n    title: 'New to the Exploration User Interface',\n    message: 'Spatial Search has arrived!',\n    callToAction: 'Learn More',\n    imageUrl: 'assets/images/spatial_search.gif',\n    expirationDate: 'Dec 1, 2022',\n    popupShown: false,\n  },\n})\n/**\n * State that controls the data and behavior for the CallToAction Component\n */\n@Injectable()\nexport class CallToActionState implements NgxsOnInit {\n  /**\n   * Function that determines if expiration date has passed\n   * @param expirationDate\n   * @param now\n   * @returns boolean defining whether or not info popup has expiered\n   */\n  static ctaDatePassed(expirationDate: string, now = Date.now): boolean {\n    const today = now();\n    const expire = new Date(expirationDate);\n\n    return +today > +expire;\n  }\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly ga: GoogleAnalyticsService,\n    private readonly storage: LocalStorageService,\n    private readonly infoService: InfoButtonService,\n    private readonly http: HttpClient,\n  ) {}\n\n  ngxsOnInit(ctx: StateContext<CallToActionModel>): void {\n    const { expirationDate, popupShown } = ctx.getState();\n    const popupShownStr = this.storage.getItem(POPUP_SHOWN_STORAGE_KEY, `${popupShown}`);\n    const pastExpiration = CallToActionState.ctaDatePassed(expirationDate);\n    const showPopup = popupShownStr !== 'true' && !pastExpiration;\n    if (showPopup) {\n      ctx.dispatch(new OpenDialog());\n    }\n  }\n\n  /**\n   * Returns observable containting info from the markup\n   */\n  private getDialogData(): Observable<DocumentationContent[]> {\n    return this.http\n      .get(SPATIAL_SEARCH_README, { responseType: 'text' })\n      .pipe(map((data) => this.infoService.parseMarkdown(data)));\n  }\n\n  /**\n   * Opens Learn more dialog\n   */\n  launchLearnMore(content: DocumentationContent[]): void {\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '72rem',\n      data: {\n        title: 'Spatial Search',\n        content: content,\n        videoID: 'UfxMpzatowE',\n      },\n    });\n  }\n\n  /**\n   * Handles click event box\n   * @param _ctx\n   */\n  @Action(LearnMore)\n  learnMore(_ctx: StateContext<CallToActionModel>): Observable<DocumentationContent[]> {\n    this.dialog.closeAll();\n    this.ga.event('open_learn_more', 'call_to_action');\n\n    return this.getDialogData().pipe(tap((data) => this.launchLearnMore(data)));\n  }\n\n  /**\n   * Opens dialog box\n   * @param ctx\n   */\n  @Action(OpenDialog)\n  open(ctx: StateContext<CallToActionModel>): void {\n    this.dialog.open(CallToActionBehaviorComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '30.75rem',\n      height: '36.688rem',\n    });\n\n    this.ga.event('open', 'call_to_action');\n    this.storage.setItem(POPUP_SHOWN_STORAGE_KEY, 'true');\n    ctx.patchState({ popupShown: true });\n  }\n\n  /**\n   * closes all dialog boxes\n   * @param _ctxs;\n   */\n  @Action(CloseDialog)\n  close(_ctx: StateContext<CallToActionModel>): void {\n    this.dialog.closeAll();\n    this.ga.event('close', 'call_to_action');\n  }\n}\n","/*\n * Public API Surface of ccf-shared\n */\n\nexport * from './lib/components/body-ui/body-ui.module';\nexport * from './lib/components/body-ui/body-ui.component';\n\nexport * from './lib/components/decorated-text/decorated-text.module';\nexport * from './lib/components/decorated-text/decorated-text.component';\n\nexport * from './lib/components/store-debug/store-debug.module';\nexport * from './lib/components/store-debug/store-debug.component';\n\nexport * from './lib/components/text-search/text-search.module';\nexport * from './lib/components/text-search/text-search.component';\n\nexport * from './lib/components/organ-selector/organ-selector.module';\nexport * from './lib/components/organ-selector/organ-selector.component';\n\nexport * from './lib/components/opacity-slider/opacity-slider.module';\nexport * from './lib/components/opacity-slider/opacity-slider.component';\n\nexport * from './lib/components/info/info-dialog/info-dialog.module';\nexport * from './lib/components/info/info-dialog/info-dialog.component';\n\nexport * from './lib/components/info/info-button/info-button.module';\nexport * from './lib/components/info/info-button/info-button.component';\nexport * from './lib/components/info/info-button/info-button.service';\n\nexport * from './lib/components/call-to-action/call-to-action.module';\nexport * from './lib/components/call-to-action/call-to-action.component';\n\nexport * from './lib/directives/numbers-only/numbers-only.module';\nexport * from './lib/directives/numbers-only/numbers-only.directive';\n\nexport * from './lib/services/globals/globals.service';\nexport * from './lib/config/global-config.state';\n\nexport * from './lib/analytics/tracking.state';\nexport * from './lib/analytics/mouse-position-tracker.module';\n\nexport * from './lib/components/tracking-popup/tracking-popup.module';\nexport * from './lib/components/tracking-popup/tracking-popup.component';\n\nexport * from './lib/services/data-source/data-source';\nexport * from './lib/services/data-source/data-source.service';\nexport * from './lib/services/data-source/api-endpoint.service';\nexport {\n  CCFDatabaseDataSourceService,\n  HybridCCfDatabaseDatasourceService,\n  WorkerCCFDatabaseDataSourceService,\n} from './lib/services/data-source/ccf-database.service';\nexport * from './lib/services/data-source/injector-delegate.service';\n\nexport * from './lib/components/call-to-action-behavior/call-to-action-behavior.component';\nexport * from './lib/components/call-to-action-behavior/call-to-action-behavior.module';\n\nexport * from './lib/states/call-to-action/call-to-action.state';\nexport * as CallToActionAction from './lib/states/call-to-action/call-to-action.actions';\n\nexport * from './lib/services/local-storage/local-storage.service';\n\nexport * from './lib/components/spatial-search-list/spatial-search-list.component';\nexport * from './lib/components/spatial-search-list/spatial-search-list.module';\n\nexport * from './lib/components/xyz-position/xyz-position.component';\nexport * from './lib/components/xyz-position/xyz-position.module';\n\nexport * from './lib/components/spatial-search-keyboard-ui-behavior/spatial-search-keyboard-ui-behavior.module';\nexport * from './lib/components/spatial-search-keyboard-ui-behavior/spatial-search-keyboard-ui-behavior.component';\n\nexport * from './lib/components/spatial-search-keyboard-ui/spatial-search-keyboard-ui.component';\nexport * from './lib/components/spatial-search-keyboard-ui/spatial-search-keyboard-ui.module';\n","import { SimpleChange, SimpleChanges } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\n\nexport type GenericGlobalConfig = Record<string, unknown>;\n\nexport interface ConfigManagerOptions {\n  initialConfig?: GenericGlobalConfig;\n\n  parse?: Record<string, (value: unknown) => unknown>;\n  rename?: Record<string, string>;\n}\n\nconst DEFAULT_OPTIONS: Required<ConfigManagerOptions> = {\n  initialConfig: {},\n  parse: {},\n  rename: {},\n};\n\nexport class ConfigManager {\n  readonly options: Required<ConfigManagerOptions>;\n\n  private storedChanges: SimpleChanges = {};\n\n  constructor(\n    readonly configState: GlobalConfigState<GenericGlobalConfig>,\n    options: ConfigManagerOptions,\n  ) {\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n  }\n\n  addChanges(changes: SimpleChanges): void {\n    this.storedChanges = { ...this.storedChanges, ...changes };\n  }\n\n  applyChanges(changes?: SimpleChanges, additionalConfig: GenericGlobalConfig = {}): void {\n    if (changes === undefined) {\n      changes = this.storedChanges;\n      this.storedChanges = {};\n    }\n\n    const {\n      configState,\n      options: { initialConfig },\n    } = this;\n    const previousConfig = configState.snapshot;\n    const newConfig = {\n      ...initialConfig,\n      ...previousConfig,\n      ...additionalConfig,\n    };\n\n    for (const [key, change] of Object.entries(changes)) {\n      this.processChange(key, change, newConfig);\n    }\n\n    configState.setConfig(newConfig);\n  }\n\n  private processChange(key: string, change: SimpleChange, output: GenericGlobalConfig): void {\n    const {\n      options: { parse, rename },\n    } = this;\n    const target = rename[key] ?? key;\n    const value = change.currentValue;\n    const parser = parse[key] ?? parse[target];\n\n    if (value == null) {\n      delete output[target];\n    } else if (!parser) {\n      output[target] = value;\n    } else {\n      try {\n        output[target] = parser(value);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(`Failed to parse ${key} = ${value} (${typeof value})`, (error as Error).message);\n      }\n    }\n  }\n}\n","export const BUILTIN_PARSERS = {\n  boolean: (value: unknown): boolean => `${value}` !== 'false',\n  json: (value: unknown): unknown => (typeof value === 'string' ? JSON.parse(value) : value),\n  stringArray: (value: unknown): unknown =>\n    typeof value === 'string' ? Array.from(value).filter((item) => !'[], '.includes(item)) : value,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  function: (value: unknown): Function => {\n    if (typeof value !== 'function') {\n      throw new Error('Expected a javascript function');\n    }\n\n    return value;\n  },\n};\n","import { ChangeDetectorRef, Directive, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { ConfigManager, ConfigManagerOptions, GenericGlobalConfig } from './config-manager';\n\nexport interface BaseWebComponentOptions extends ConfigManagerOptions {\n  initialDelay?: number;\n}\n\n@Directive()\nexport class BaseWebComponent implements OnInit, OnChanges, OnDestroy {\n  initialized = false;\n  configManager = new ConfigManager(this.configState, this.options);\n\n  private _init?: ReturnType<typeof setTimeout>;\n\n  constructor(\n    readonly configState: GlobalConfigState<GenericGlobalConfig>,\n    readonly cdr: ChangeDetectorRef,\n    readonly options: BaseWebComponentOptions = {},\n  ) {}\n\n  ngOnInit(): void {\n    this._init = setTimeout(() => this.initialize(), this.options.initialDelay ?? 0);\n  }\n\n  ngOnDestroy(): void {\n    if (this._init) {\n      clearTimeout(this._init);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.configManager.addChanges(changes);\n    if (this.initialized) {\n      this.configManager.applyChanges();\n    }\n  }\n\n  initialize(): void {\n    this._init = undefined;\n    if (this.initialized) {\n      return;\n    }\n\n    this.configManager.applyChanges();\n    this.initialized = true;\n    this.cdr.markForCheck();\n  }\n}\n","export * from './lib/config-manager';\nexport * from './lib/web-component';\n\nexport * from './lib/parsers';\n","import * as rdf from '@rdfjs/types';\nimport { EventEmitter } from 'events';\nimport { toRDF } from 'jsonld';\nimport { JsonLd, Url } from 'jsonld/jsonld-spec';\nimport { DataFactory, Parser, Quad, Store } from 'n3';\nimport { RdfXmlParser } from 'rdfxml-streaming-parser';\nimport { Readable } from 'readable-stream';\n\n// Temporary solution for using the new readQuads function on Store until the @types are updated\ntype OTerm = rdf.Term | string | null;\ninterface QuadReader {\n  readQuads(subject: OTerm, predicate: OTerm, object: OTerm, graph: OTerm): Generator<Quad>;\n}\n\nexport function readQuads(\n  store: Store,\n  subject: OTerm,\n  predicate: OTerm,\n  object: OTerm,\n  graph: OTerm,\n): Generator<Quad> {\n  return (store as unknown as QuadReader).readQuads(subject, predicate, object, graph);\n}\n\n/**\n * Turns a stream of values into an array.\n *\n * @param readStream The input stream.\n * @returns A promise that resolves to an array of values when the stream completes.\n */\nexport function streamToArray<T = unknown>(readStream: EventEmitter): Promise<T[]> {\n  return new Promise((resolve, reject) => {\n    const chunks: T[] = [];\n    readStream\n      .on('data', (chunk: T) => {\n        chunks.push(chunk);\n      })\n      .once('end', () => {\n        resolve(chunks);\n      })\n      .once('error', (err) => {\n        reject(err);\n      });\n  });\n}\n\n/**\n * Turns an array into a readable stream.\n *\n * @param arr The values.\n * @returns A new readable stream emitting the values from the array.\n */\nexport function arrayToStream<T>(arr: T[]): Readable {\n  const length = arr.length;\n  let i = 0;\n\n  return new Readable({\n    objectMode: true,\n    read(): void {\n      this.push(i < length ? arr[i++] : null);\n    },\n  });\n}\n\n/**\n * Adds data from json ld to the store.\n * Accepts either a json object or a uri to load data from.\n *\n * @param uri A data uri or a json object.\n * @param store The store to add data to.\n * @returns A promise that resolves when the data has been added.\n */\nexport async function addJsonLdToStore(\n  uri: JsonLd | Url,\n  store: rdf.Sink<EventEmitter, EventEmitter>,\n): Promise<rdf.Sink<EventEmitter, EventEmitter>> {\n  let jsonLdData: JsonLd | undefined;\n  if (typeof uri === 'string') {\n    const response = await fetch(uri, { redirect: 'follow' });\n    if (response.ok) {\n      jsonLdData = (await response.json()) as JsonLd;\n    }\n  } else {\n    jsonLdData = uri;\n  }\n\n  if (jsonLdData) {\n    const quads = (await toRDF(jsonLdData)) as unknown[];\n    store.import(arrayToStream(quads) as unknown as EventEmitter);\n  }\n  return store;\n}\n\n/**\n * Adds data from rdf xml to the store.\n * Accepts either a xml-formatted string or a uri to load data from.\n *\n * @param uri A data uri or an xml-formatted string to load data from.\n * @param store The store to add data to\n * @returns A promise that resolves when the data has been added.\n */\nexport async function addRdfXmlToStore(\n  uri: string,\n  store: rdf.Sink<EventEmitter, EventEmitter>,\n): Promise<rdf.Sink<EventEmitter, EventEmitter>> {\n  let xmlData: string | undefined;\n  if (typeof uri === 'string' && uri?.startsWith('http')) {\n    const response = await fetch(uri, { redirect: 'follow' });\n    if (response.ok) {\n      xmlData = await response.text();\n    }\n  } else {\n    xmlData = uri;\n  }\n\n  if (xmlData) {\n    const xmlParser = new RdfXmlParser({ dataFactory: DataFactory });\n    const result = new Promise<rdf.Sink<EventEmitter, EventEmitter>>((resolve) => {\n      xmlParser.once('end', () => resolve(store));\n    });\n\n    store.import(xmlParser);\n    xmlParser.write(xmlData);\n    xmlParser.end();\n    return result;\n  } else {\n    return store;\n  }\n}\n\n/**\n * Adds data from an n3 file to the store.\n * Accepts either a n3-formatted string or a uri to load data from.\n *\n * @param uri A data uri or an n3-formatted string.\n * @param store The store to add data to.\n * @returns A promise that resolves when the data has been added.\n */\nexport async function addN3ToStore(\n  uri: string | Url,\n  store: rdf.Sink<EventEmitter, EventEmitter>,\n): Promise<rdf.Sink<EventEmitter, EventEmitter>> {\n  let data: string | undefined;\n  if (typeof uri === 'string' && uri?.startsWith('http')) {\n    const response = await fetch(uri, { redirect: 'follow' });\n    if (response.ok) {\n      data = await response.text();\n    }\n  } else {\n    data = uri;\n  }\n  if (data) {\n    const quads = new Parser({ format: 'n3' }).parse(data);\n    store.import(arrayToStream(quads) as unknown as EventEmitter);\n  }\n  return store;\n}\n\nexport function serializeN3Store(store: Store): string {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  store.size; // this causes the store to compute the size before we serialize it\n  const storeData = Object.assign({} as Record<string, unknown>, store);\n  delete storeData['_factory'];\n  return JSON.stringify(storeData);\n}\n\nexport function deserializeN3Store(serializedStore: string, factory?: rdf.DataFactory): Store {\n  const storeData = JSON.parse(serializedStore);\n  const store = new Store();\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Object.assign(store, storeData, { _factory: factory ?? DataFactory });\n  return store;\n}\n","/*\n * Public API Surface of triple-store-utils\n */\n\nexport * from 'n3';\nexport * from './lib/triple-store-utils';\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["ChangeDetectorRef","GlobalConfigState","BaseWebComponent","BUILTIN_PARSERS","environment","i0","ɵɵelement","parseOrgan","value","json","AppWebComponent","constructor","configStore","cdr","BP","initialConfig","dbOptions","globalThis","customization","parse","useDownload","boolean","user","organ","editRegistration","register","function","cancelRegistration","fetchPreviousRegistrations","skipUnsavedChangesConfirmation","header","organOptions","stringArray","_","ɵɵdirectiveInject","i1","_2","selectors","inputs","baseHref","referenceData","theme","homeUrl","logoTooltip","collisionsEndpoint","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AppWebComponent_Template","rf","ctx","ɵɵtemplate","AppWebComponent_ccf_root_0_Template","ɵɵproperty","initialized","ElementRef","Injector","MatSnackBar","TrackingPopupComponent","ConsentService","ReplaySubject","Subscription","combineLatest","ThemingService","ModelState","PageState","AppComponent","isLightTheme","theming","getTheme","endsWith","model","page","consentService","snackbar","el","injector","globalConfig","registrationStarted","disablePositionChange","registrationExpanded","theme$","getOption","themeMode$","header$","homeUrl$","logoTooltip$","subscriptions","initialize","add","registrationStarted$","subscribe","url","tooltip","mode","setTheme","markForCheck","ngOnInit","snackBar","openFromComponent","data","preClose","dismiss","duration","consent","Infinity","next","toggleScheme","registrationToggle","event","handleKey","target","oldPosition","snapshot","position","preventDefault","delta","repeat","newPosition","key","z","y","x","setPosition","handleClick","disableWhenClicked","className","includes","ngOnDestroy","unsubscribe","i2","i3","i4","i5","i6","hostBindings","AppComponent_HostBindings","ɵɵlistener","AppComponent_keydown_HostBindingHandler","$event","ɵɵresolveDocument","AppComponent_mousedown_HostBindingHandler","ɵɵelementStart","ɵɵelementEnd","AppComponent_Template_ccf_right_sidebar_registrationExpanded_10_listener","ɵɵadvance","ɵɵclassProp","ɵɵpipeBind1","tmp_1_0","undefined","tmp_2_0","createCustomElement","MAT_FORM_FIELD_DEFAULT_OPTIONS","MatIconModule","MatSnackBarModule","BrowserModule","BrowserAnimationsModule","TrackingPopupModule","CoreModule","DEFAULT_THEME","ContentModule","HeaderModule","LeftSidebarModule","RegistrationModalModule","RightSidebarModule","DrawerModule","AppModule","ngDoBootstrap","appElement","customElements","define","ɵɵinject","_3","provide","useValue","floatLabel","imports","declarations","HttpClientModule","MousePositionTrackerModule","AnalyticsModule","ConfigModule","ThemingModule","StoreModule","core","Error","forRoot","gaToken","googleAnalyticsToken","appName","GlobalsService","GLOBAL_CONFIG","globalConfigFactory","useFactory","deps","InjectionToken","globals","get","firstName","lastName","APP_BOOTSTRAP_LISTENER","multi","OverlayContainer","ComponentRef","Renderer2","component","location","service","defaultTheme","applyThemeClass","resetTheme","element","cls","method","renderer","root","nativeElement","overlay","getContainerElement","methodName","factory","ɵfac","createEntityCollections","Computed","DataAction","StateRepository","NgxsDataEntityCollectionsRepository","State","bind","Bind","Observable","map","SceneState","AnatomicalStructureTagState","tags$","entities$","scene","nodeCollisions$","pipe","entities","collisions","tags","added","Set","removed","Object","entries","forEach","id","tag","type","push","iri","representation_of","has","label","latestTags","_latestTags","ngxsOnInit","setHasChanges","addTags","addTagRaw","addTag","removeTag","updateEntitiesMany","changes","addEntityOne","searchExternal","text","limit","matches","anatomicalStructures","filter","as","name","toLowerCase","indexOf","totalCount","length","results","slice","__decorate","defaults","DEFAULT_ICONS","namespace","NgxsDataRepository","DomSanitizer","IconRegistryState","registry","sanitizer","def","html","bypassSecurityTrustHtml","registerIconImpl","addSvgIconResolver","find","icon","bypassSecurityTrustResourceUrl","registerIcon","definition","getMethodName","args","getArguments","apply","_error","parts","join","MatIconRegistry","NgxsImmutableDataRepository","ALL_ORGANS","filterNulls","sortBy","GoogleAnalyticsService","EMPTY","delay","distinctUntilChanged","skipUntil","switchMap","tap","throttleTime","ReferenceDataState","RUI_ORGANS","modelChanged$","ignoredKeys","keys","initialState","state$","leading","trailing","v1","v2","ga","id$","blockSize$","blockSize","rotation$","rotation","position$","slicesConfig$","slicesConfig","viewType$","viewType","viewSide$","viewSide","organ$","organIri$","organIri","organDimensions$","organDimensions","sex$","sex","side$","side","showPrevious$","showPrevious","extractionSites$","extractionSites","anatomicalStructures$","extractionSets$","extractionSets","onReferenceDataChange","idMatches","ontologyId","organSide","o","nameMatches","organName","setBlockSize","patchState","setRotation","toFixed","setSlicesConfig","setViewType","setViewSide","defaultPosition","dims","block","setOrgan","onOrganIriChange","setOrganDefaults","setSex","setSide","setShowPrevious","setExtractionSites","setAnatomicalStructures","setExtractionSets","toggleRegistrationBlocksVisibility","visible","previousItems","newStructures","structure","opacity","Math","min","getReferenceOrganIri","db","asLookup","entity","comment","values","sets","set","sites","concat","spatialEntity","organSpatialEntities","x_dimension","y_dimension","z_dimension","onOrganChange","started","organInfo","organSex","organData","getOrganData","src","thickness","NaN","numSlices","iif","patch","pluckUnique","withLatestFrom","RegistrationState","skipConfirmation$","globalSkipConfirmation$","hasChanges$","reg","user$","useCancelRegistrationCallback$","useCancelRegistrationCallback","registrationCallbackSet$","registrationCallbackSet","organOptions$","orcidValid$","orcidValid","config$","config","setState","useRegistrationCallback","initialRegistration","initSkipConfirmationListeners","cancelRegistrationCallback","skipConfirmation","confirm","setUseCancelRegistrationCallback","use","setUserName","middleName","setOrcidId","orcidId","orcidToUri","isOrcidValid","hasChanges","clearHasChanges","updateSkipConfirmation","s","beforeUnloadListener","returnValue","removeEventListener","addEventListener","orcId","uriToOrcid","match","uri","split","idWithHyphens","replace","Matrix4","toRadians","from","catchError","applySpatialPlacement","tx","placement","p","factor","translation_units","T","x_translation","y_translation","z_translation","t","R","x_rotation","y_rotation","z_rotation","S","x_scaling","y_scaling","z_scaling","translate","rotateXYZ","scale","getSourceDB","production","fetch","normalizePlacement","place","patchPlacement","placementPatches","matrix","IDENTITY","transformAsPoint","newPlacement","toUpperCase","lookup","organIRILookup","code","getLatestIri","updatedIri","state","info","organEntry","sceneNodeLookup","simpleSceneNodeLookup","insertItem","saveAs","startWith","take","v4","uuidV4","isEqual","JSONLD_THROTTLE_DURATION","metadata$","buildMetadata","jsonld$","buildJsonLd","throttledJsonld$","valid$","isValid","previousRegistrations$","regs","registrations","fetched","local","external","currentIdentifier","currentDate","Date","toISOString","displayErrors$","displayErrors","refData","setOrganSelection","_this","_asyncToGenerator","Array","isArray","creator_first_name","creator_middle_name","creator_last_name","orcid","creator_orcid","slice_thickness","slice_count","iris","ccf_annotations","item","setUseRegistrationCallback","setDisplayErrors","addRegistration","registration","ids","organListOptions","isDataValid","requiredValues","every","useCallback","registrationCallback","jsonObj","JSON","stringify","Blob","endings","setToInitialRegistration","initialWithChanges","xyzTripletToString","creator","creation_date","dimension_units","placement_date","scaling_units","rotation_order","rotation_units","xyz","round","HttpClient","AABB","Vec3","getOriginScene","getTissueBlockScene","defer","of","concatMap","share","NODE_COLLISION_THROTTLE_DURATION","getNodeBbox","mat","transformMatrix","lowerBound","upperBound","n","i","max","nodes$","placementCube$","referenceOrganNodes$","previousRegistrationNodes$","spatialKeyBoardAxis$","nodes","prevNodes","axis","showCollisions","rotatedNodes$","rotateY","multiplyRight","getOrganSpatialEntity","originScene","organScene","createSceneNodes","referenceOrganSimpleNodes$","color","node","reduce","acc","collisions$","filterNodeCollisions","filterNodeBBox","previousRegistrations","getPreviousRegistrationNodes","nonEmptyOrganIri","organEntity","_viewType","_blockSize","_rotation","_position","placementCube","unpickable","jsonld","getCollisions","http","gizmo$","scenegraph","_lighting","zoomBasedOpacity","items","endpoint","post","headers","collidedIds","bbox","overlaps","toNode","NgxsDataPluginModule","NgxsLoggerPluginModule","NgxsStoragePluginModule","NgxsModule","ROOT_STATES","developmentMode","disabled","ɵNgxsRootModule","ResizeSensor","distinctUntilKeyChanged","ContentComponent_ccf_body_ui_7_Template_ccf_body_ui_rotationChange_0_listener","ɵɵrestoreView","_r2","ɵɵnextContext","gizmo_r3","ɵɵreference","ɵɵresetView","rotationX","ctx_r3","ɵɵpureFunction0","_c0","tmp_3_0","bounds$","ContentComponent_ccf_body_ui_9_Template_ccf_body_ui_nodeDrag_0_listener","_r5","handleNodeDrag","ContentComponent_div_30_Template_button_click_1_listener","_r6","debugMode","ɵɵtext","ContentComponent_div_30_Template_button_click_3_listener","ContentComponent_div_30_Template_button_click_5_listener","ContentComponent","rootRef","clsName","floor","is3DView$","isNarrowView","showDebugButtons","sensor","width","detach","is3DView","resetStage","coordinate","a","b","hostVars","ContentComponent_HostBindings","ɵɵclassMap","ContentComponent_Template_ccf_stage_nav_view3DChange_1_listener","_r1","ContentComponent_Template_ccf_stage_nav_sideChange_1_listener","ContentComponent_Template_mat_icon_click_4_listener","ContentComponent_ccf_body_ui_7_Template","ContentComponent_ccf_body_ui_9_Template","ContentComponent_ccf_spatial_search_keyboard_ui_behavior_16_Template","ContentComponent_ccf_store_debug_29_Template","ContentComponent_div_30_Template","tmp_9_0","ɵɵtextInterpolate1","tmp_13_0","tmp_14_0","tmp_15_0","CommonModule","MatRippleModule","BodyUiModule","SpatialSearchKeyboardUIBehaviorModule","StoreDebugModule","StageNavModule","VideoModalLauncherModule","exports","EventEmitter","StageNavComponent","useDropdownMenu","isDropdownActive","isDropdownHidden","labelEl","labelRef","optionsEl","optionsRef","view3D","sideChange","view3DChange","contains","updateSide","selection","updateView","emit","viewQuery","StageNavComponent_Query","StageNavComponent_click_HostBindingHandler","StageNavComponent_Template_mat_radio_group_change_8_listener","StageNavComponent_Template_ccf_labeled_slide_toggle_valueChange_17_listener","_c2","MatDividerModule","MatRadioModule","MatSelectModule","MatTooltipModule","LabeledSlideToggleModule","MatDialog","VideoModalComponent","VideoModalLauncherComponent_mat_icon_1_Template_mat_icon_click_0_listener","ctx_r1","launchVideoModal","VideoModalLauncherComponent","dialog","open","VideoModalLauncherComponent_HostBindings","VideoModalLauncherComponent_div_0_Template","VideoModalLauncherComponent_mat_icon_1_Template","VideoModalModule","DOCUMENT","MAT_DIALOG_DATA","MatDialogRef","renderer2","dialogRef","document","loadYoutubePlayerAPI","script","createElement","appendChild","body","close","VideoModalComponent_HostBindings","VideoModalComponent_Template_mat_icon_click_2_listener","MatDialogModule","YouTubePlayerModule","ɵɵelementContainer","HeaderComponent_ng_template_2_Template_div_click_0_listener","ɵɵsanitizeUrl","HeaderComponent","HeaderComponent_HostBindings","HeaderComponent_ng_container_0_Template","HeaderComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","HeaderComponent_ng_template_4_Template","backButton_r3","logo_r4","LeftSidebarComponent_div_16_Template_ccf_extraction_set_dropdown_setChange_1_listener","LeftSidebarComponent_div_16_Template_ccf_visibility_menu_itemsChange_4_listener","LeftSidebarComponent_div_16_Template_ccf_visibility_menu_hover_4_listener","updateExtractionSiteTooltip","extractionSiteTooltip","LeftSidebarComponent","modalClosed","organSelected$","LeftSidebarComponent_HostBindings","LeftSidebarComponent_Template_ccf_visibility_menu_itemsChange_8_listener","LeftSidebarComponent_div_16_Template","LeftSidebarComponent_div_18_Template","MatExpansionModule","OpacitySliderModule","ExtractionSetDropdownModule","NameInputModule","VisibilityMenuModule","VisibilityToggleModule","RegistrationContentComponent","sexByLabel$","organList","registrationSelected","checkNameValid","organSelected","setSexFromLabel","disableClose","options","currentSex","sexSelected","nameValid","organSelect","currentOrgan","registerButtonClick","closeDialog","handleRegistrationSelect","RegistrationContentComponent_HostBindings","RegistrationContentComponent_Template_ccf_registration_metadata_registrationSelected_3_listener","RegistrationContentComponent_Template_button_click_4_listener","MatButtonModule","RegistrationMetadataModule","RegistrationContentModule","RegistrationModalComponent","dialogOpen","global","openDialog","autoFocus","RegistrationModalComponent_HostBindings","ReviewModalComponent","ReviewButtonComponent","metaData","userValid","registerData","enterErrorMode","registrationIsValid","ngOnChanges","metaDataLookup","dimensions","pos","field","launchReviewModal","panelClass","afterClosed","ReviewButtonComponent_HostBindings","ReviewButtonComponent_Template_button_click_0_listener","ReviewModalModule","ReviewButtonModule","ɵɵtextInterpolate","data_r1","getElementsByClassName","classList","setTimeout","ReviewModalComponent_HostBindings","ReviewModalComponent_Template_mat_icon_click_3_listener","ReviewModalComponent_div_10_Template","ReviewModalComponent_Template_button_click_12_listener","RightSidebarComponent_ccf_tag_list_26_Template_ccf_tag_list_tagRemoved_0_listener","ctx_r2","astags","RightSidebarComponent","RightSidebarComponent_HostBindings","RightSidebarComponent_Template_mat_expansion_panel_opened_4_listener","RightSidebarComponent_Template_mat_expansion_panel_closed_4_listener","RightSidebarComponent_Template_ccf_block_size_input_blockSizeChange_14_listener","RightSidebarComponent_Template_ccf_slices_input_slicesConfigChange_16_listener","RightSidebarComponent_Template_ccf_rotation_slider_rotationChange_18_listener","RightSidebarComponent_Template_ccf_tag_search_added_25_listener","RightSidebarComponent_ccf_tag_list_26_Template","RightSidebarComponent_ng_template_28_Template","RightSidebarComponent_Template_ccf_review_button_registerData_39_listener","RightSidebarComponent_Template_ccf_review_button_enterErrorMode_39_listener","tmp_7_0","tagListPlaceholder_r4","tmp_10_0","tmp_11_0","tmp_12_0","InfoButtonModule","BlockSizeInputModule","RotationSliderModule","SlicesInputModule","TagListModule","TagSearchModule","DEFAULT_BLOCK_SIZE","BlockSizeInputComponent","blockSizeChange","updateBlockSizes","input","inputTarget","refreshBlockSize","BlockSizeInputComponent_HostBindings","BlockSizeInputComponent_Template_mat_icon_click_4_listener","BlockSizeInputComponent_Template_input_keyup_10_listener","BlockSizeInputComponent_Template_input_keyup_14_listener","BlockSizeInputComponent_Template_input_keyup_18_listener","MatFormFieldModule","MatInputModule","QueryList","DrawerComponent","MessageService","ɵɵprojection","throwDuplicateDrawersError","ContainerComponent","content","content1","first","content2","hasWrappedContent","messageService","channel","connect","getMessages","msg","handleMessage","ngAfterViewInit","drawers","validateDrawers","sendMessage","_msg","toArray","startDrawers","drawer","endDrawers","contentQueries","ContainerComponent_ContentQueries","dirIndex","ngContentSelectors","_c1","ContainerComponent_Template","ContainerComponent_ccf_drawer_content_2_Template","animate","style","transition","trigger","animationsEnabled","leftMargin","rightMargin","faded","messages","payload","updateFaded","source","opened","margin","updateMargin","offset","start","end","startExpanded","expanded","endExpanded","ɵɵsyntheticHostProperty","ɵɵstyleProp","changeDetection","MESSAGE_SERVICE_CONFIG","MESSAGE_SERVICE_DEFAULT_CONFIG","ToggleButtonComponent","coerceBooleanProperty","EXPAND_COLLAPSE_PARAMS_DEFAULT","params","margin2","InitializationState","deferred","Promise","resolve","wait","valueOf","classEnd","_opened","toggle","_expanded","toggleExpanded","expandedStateObj","expandedState2","measuredMargin","measuredWidth","_measuredWidth","getBoundingClientRect","right","left","_measuredMargin","styles","getComputedStyle","property","getPropertyValue","Number","openedChange","expandedChange","stateChange","openedState","expandedState","sendToggle","openExpanded","closeExpanded","closeOpenDone","expandCollapseDone","_this2","other","syncExpanded","DrawerComponent_HostBindings","ɵɵsyntheticHostListener","DrawerComponent_animation_openClose_done_HostBindingHandler","DrawerComponent_animation_expandCollapse_done_HostBindingHandler","transform","GenericMessageService","expand","collapse","getMessagesFromSource","ToggleButtonComponent_HostBindings","ToggleButtonComponent_Template_mat_icon_click_0_listener","ToggleButtonComponent_Template_mat_icon_click_2_listener","set_r3","ɵɵtextInterpolate2","ExtractionSetDropdownComponent_mat_form_field_0_Template_mat_select_selectionChange_3_listener","extractionSetChanged","ExtractionSetDropdownComponent_mat_form_field_0_mat_option_4_Template","ExtractionSetDropdownComponent","setChange","selected","isMultiple","ExtractionSetDropdownComponent_HostBindings","ExtractionSetDropdownComponent_mat_form_field_0_Template","JsonFileReaderComponent","parsedJson","triggerFileInput","fileInputElement","fileInput","click","handleFile","files","file","fileReader","FileReader","onload","result","readAsText","JsonFileReaderComponent_Query","JsonFileReaderComponent_Template_button_click_0_listener","JsonFileReaderComponent_Template_input_change_2_listener","JsonFileReaderModule","LabeledSlideToggleComponent","labels","valueChange","updateToggle","LabeledSlideToggleComponent_HostBindings","LabeledSlideToggleComponent_Template_span_click_0_listener","toggle_r2","LabeledSlideToggleComponent_Template_mat_slide_toggle_change_2_listener","checked","LabeledSlideToggleComponent_Template_span_click_4_listener","MatSlideToggleModule","UntypedFormControl","Validators","NameInputComponent","_name","firstNameValidator","setValue","lastNameValidator","middleNameValidator","required","nameChange","updateName","NameInputComponent_HostBindings","NameInputComponent_Template_input_input_3_listener","NameInputComponent_Template_input_input_7_listener","NameInputComponent_Template_input_input_11_listener","FormsModule","ReactiveFormsModule","FormControl","ctx_r0","getErrorMessage","organ_r2","RegistrationMetadataComponent","orcidControl","pattern","uploadText","hasError","updateOrcid","handleRegistrationUpload","outputs","RegistrationMetadataComponent_Template","RegistrationMetadataComponent_Template_ccf_name_input_nameChange_3_listener","RegistrationMetadataComponent_Template_input_input_8_listener","RegistrationMetadataComponent_mat_error_9_Template","RegistrationMetadataComponent_Template_mat_radio_group_change_16_listener","RegistrationMetadataComponent_div_26_Template","RegistrationMetadataComponent_Template_mat_select_selectionChange_28_listener","RegistrationMetadataComponent_mat_option_30_Template","RegistrationMetadataComponent_Template_ccf_json_file_reader_parsedJson_35_listener","invalid","DEFAULT_ROTATION","RotationSliderComponent","rotationChange","changeRotation","newRotation","updatedNewRotation","resetRotation","dimension","RotationSliderComponent_HostBindings","RotationSliderComponent_Template_mat_icon_click_5_listener","RotationSliderComponent_Template_input_input_12_listener","sliderX_r2","RotationSliderComponent_Template_input_change_15_listener","RotationSliderComponent_Template_input_input_21_listener","sliderY_r3","RotationSliderComponent_Template_input_change_24_listener","RotationSliderComponent_Template_input_input_30_listener","sliderZ_r4","RotationSliderComponent_Template_input_change_33_listener","MatSliderModule","DEFAULT_SLICES_CONFIG","SlicesInputComponent","hasThicknessValue","isNaN","slicesConfigChange","updateSlicesData","strValue","refreshSlices","SlicesInputComponent_HostBindings","SlicesInputComponent_Template_mat_icon_click_4_listener","SlicesInputComponent_Template_input_keyup_10_listener","SlicesInputComponent_Template_input_keyup_16_listener","NumbersOnlyModule","TagListComponent_mat_chip_1_Template_mat_chip_removed_0_listener","tag_r2","$implicit","tagClasses","TagListComponent","tagRemoved","tagsChange","tagId","_index","obj","TagListComponent_HostBindings","TagListComponent_mat_chip_1_Template","MatChipsModule","Subject","interval","takeUntil","throttle","ɵɵtwoWayListener","TagSearchComponent_div_9_div_1_Template_mat_checkbox_ngModelChange_1_listener","result_r4","_r3","ctx_r4","ɵɵtwoWayBindingSet","checkedResults","ɵɵtwoWayProperty","TagSearchComponent_div_9_div_1_Template","searchResults","ɵɵpipeBind2","countMapping","DEFAULT_SEARCH_LIMIT","DEFAULT_SEARCH_THROTTLE","EMPTY_RESULT","TagSearchComponent","placeholder","searchControl","resultsVisible","destroy$","valueChanges","searchThrottle","executeSearch","getUpdatedCheckedResults","complete","hasCheckedTags","some","v","reset","openResults","closeResults","closeSearch","Node","search","searchLimit","truncateResults","prev","TagSearchComponent_Query","TagSearchComponent_click_HostBindingHandler","TagSearchComponent_focusin_HostBindingHandler","ɵɵresolveWindow","TagSearchComponent_Template_button_click_5_listener","search_r2","focus","TagSearchComponent_div_9_Template","MatCheckboxModule","VisibilityMenuComponent_mat_icon_0_Template_mat_icon_click_0_listener","setAllOpacity","VisibilityMenuComponent_div_1_Template_div_mouseenter_0_listener","item_r4","mouseOver","VisibilityMenuComponent_div_1_Template_div_mouseleave_0_listener","mouseOut","VisibilityMenuComponent_div_1_Template_ccf_opacity_slider_opacityChange_5_listener","updateOpacity","VisibilityMenuComponent_div_1_Template_ccf_opacity_slider_opacityReset_5_listener","resetItem","VisibilityMenuComponent_div_1_Template_ccf_opacity_slider_visibilityToggle_5_listener","toggleVisibility","getId","ɵɵpropertyInterpolate","VisibilityMenuComponent","hover","itemsChange","updatedSelection","VisibilityMenuComponent_HostBindings","VisibilityMenuComponent_mat_icon_0_Template","VisibilityMenuComponent_div_1_Template","VisibilityToggleComponent","toggleLabel","visibilityChanged","VisibilityToggleComponent_HostBindings","VisibilityToggleComponent_Template_mat_chip_click_1_listener","mergeAll","takeWhile","isolated","providedIn","MessageChannel","counter","nextMessageId","getMessagesFromSources","sources","parent","asObservable","closed","disableDbWorker","ccfOwlUrl","ccfContextUrl","hubmapDataService","hubmapPortalUrl","hubmapDataUrl","hubmapAssetsUrl","hubmapToken","localStorage","getItem","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","console","error","CompositeLayer","COORDINATE_SYSTEM","TextLayer","ScenegraphLayer","SimpleMeshLayer","ConeGeometry","CubeGeometry","CylinderGeometry","SphereGeometry","loadGLTF","loadGLTF2","registerGLTFLoaders","doCollisions","meshLayer","mesh","pickable","autoHighlight","highlightColor","coordinateSystem","CARTESIAN","wireframe","getColor","d","getTransformMatrix","textLayer","getTranslation","getText","getPosition","BodyUILayer","layerName","gltfCache","initializeState","props","zoomOpacity","renderLayers","geometries","sphere","cone","cylinder","cube","geometry","url2gltf","m","scenegraphNode","prototype","hasOwnProperty","call","layers","parameters","depthMask","l","getPickingInfo","e","AmbientLight","Deck","LightingEffect","OrbitView","OrthographicView","BehaviorSubject","processSceneNodes","BodyUI","deckProps","bodyUILayer","nodeClickSubject","nodeHoverStartSubject","nodeHoverStopSubject","sceneRotationSubject","nodeDragStartSubject","nodeDragSubject","nodeDragEndSubject","nodeClick$","nodeHoverStart$","nodeHoverStop$","sceneRotation$","nodeDragStart$","nodeDrag$","nodeDragEnd$","views","camera","flipY","near","orbitAxis","controller","interactive","onHover","_onHover","onClick","_onClick","onViewStateChange","_onViewStateChange","onDragStart","_onDragStart","onDrag","_onDrag","onDragEnd","_onDragEnd","getCursor","cursor","isDragging","legacyLighting","effects","ambientLight","intensity","deck","setProps","viewState","minRotationX","maxRotationX","rotationOrbit","zoom","r","finalize","setScene","didZoom","zoomToOnLoad","zoomTo","debugSceneNodeProcessing","gltfUrl","gltfTransform","then","log","setRotationX","setZoom","setTarget","setInteractive","lastHovered","picked","object","ctrlClick","srcEvent","ctrlKey","interactionState","isZooming","currentState","_dragEvent","subject","MouseEvent","registerLoaders","DracoLoader","DracoWorkerLoader","GLTFLoader","traverseScene","deriveScenegraph","scenegraphNodeName","gltf","foundNodeInScene","scenes","child","modelMatrix","translation","_x","_x2","_loadGLTF","arguments","cache","gltfPromise","blob","decompressMeshes","postProcess","_x3","_x4","_loadGLTF2","childNames","names","children","_processSceneNodes","worldMatrix","gltfNodes","processedNode","primitives","primitive","attributes","POSITION","clone","extend","lb","ub","size","vsub","halfSize","vmul","center","vadd","visitor","copy","identity","rotationMatrix","fromQuaternion","simplifyScene","_simplifyScene","gltfUrls","newNodes","innerBbox","newNode","load","_doCollisions","sourceBoxes","entityId","targetBoxes","decompress","gltfScene","report","sad","hits","maxHits","csvReport","hit","h","idb","hash","addJsonLdToStore","addN3ToStore","addRdfXmlToStore","DataFactory","deserializeN3Store","serializeN3Store","Store","CCFSpatialGraph","CCFSpatialScene","getAggregateResults","getDatasetTechnologyNames","getProviderNames","findIds","getBiomarkerTermOccurences","getCellTypeTermOccurences","getOntologyTermOccurences","getAnatomicalStructureTreeModel","getBiomarkerTreeModel","getCellTypeTreeModel","getSpatialEntityForEntity","getTissueBlockResult","CCFDatabaseStatusTracker","getBmLocatedInAs","enrichRuiLocations","patchJsonLd","searchXConsortia","delMany","setMany","DEFAULT_CCF_DB_OPTIONS","dataSources","CCFDatabase","store","graph","cached","initializing","cachedConnect","doConnect","getTime","optionsHash","encoding","ignoreUnknown","respectType","unorderedArrays","unorderedObjects","unorderedSets","lastModifiedKey","ccfDatabaseKey","lastModified","serializedDb","deserialize","serialize","_this3","ops","startsWith","storeString","hubmapQuery","addDataSources","all","synchronize","inputStore","_this4","_ref","sourceUrl","_this5","createGraph","_this6","getIds","getQuads","namedNode","getSpatialEntities","hasSpatialEntity","getDatabaseStatus","_this7","status","toJson","_this8","_this9","getTissueBlockResults","_this10","_this11","_this12","_this13","_this14","getOntologyTreeModel","_this15","_this16","_this17","getReferenceOrgans","_this18","getScene","_this19","getReferenceOrganScene","_this20","getSpatialPlacement","targetIri","_this21","Euler","toDegrees","DirectedGraph","bidirectional","readQuads","ccf","rdf","forSubjects","addNode","SpatialObjectReference","SpatialEntity","edgeSource","quad","spatialPlacement","addEdge","mergeNode","mergeDirectedEdge","getTransformationMatrix","sourceIRI","targetIRI","hasNode","path","reverse","placementId","getEdgeAttribute","sourceIri","euler","fromRotationMatrix","XYZ","toVector3","getScale","getAnatomicalStructures","getExtractionSet","getExtractionSets","getSpatialEntity","getReferenceBody","bodyId","spatial","Male","Female","BothSexes","getReferenceOrganSets","organSet","debug","structures","getReferenceSceneNodes","skinNodes","isSkin","sceneNode","getSceneNode","base","hasSexFilter","organs","organNode","getEntitySceneNodes","nodeAttrs","has3dObject","file_format","sourceID","rotateX","multiplyLeft","dim","reference_organ","file_subpath","getObjects","predicate","objects","donors","donor","centers","providerUUID","tissueBlocks","tissueSections","sections","tissueDatasets","datasets","Donors","count","technology","sort","providerName","isFinite","fromRdf","rui","filterByProbingSphere","filterWithDonor","seen","callback","donor2entity","Map","newDonors","newSeen","filterWithSpatialEntity","spatial2entity","newSpatialEntities","filterWithDataset","dataset2entity","sectionAndBlockSeen","newDatasets","getAllEntities","filterByHasSpatialEntity","filterBySex","consortiums","filterByConsortiumName","tmc","filterByGroupName","technologies","filterByTechnology","spatialSearches","filterBySpatialSearches","ontologyTerms","terms","filterByOntologyTerms","cellTypeTerms","cell","filterByCellTypeTerms","biomarkerTerms","filterByBiomarkerTerms","ageRange","maxAge","minAge","filterByAge","bmiRange","maxBMI","minBMI","filterByBMI","differenceCallback","term","consortium","literal","consortiumName","groupNames","groupName","asTerms","forObjects","asTerm","asctb","located_in","bm_located_in","age","bmi","notNewSeen","thisSeen","getSpatialEntityMapping","subjects","getAnatomicalStructureMapping","term2entity","termEntities","counts","term2entities","asTerm2entities","bmTerm2entities","biomarker","ctTerm2entities","cellType","memoize","getEntries","rdfs","getOntologyTreeNode","relationshipIri","synonymLabels","ontologyTreeNodeResult","ontologyNode","getSubjects","rootIri","rootLabel","rootChildren","localeCompare","treeify","nodeIri","childId","getAnatomicalStructureTreeModelSlowly","part_of","ct_is_a","formBiomarkerNode","bmType","biomarkers","bm","getMappedResult","reverseMapping","mapping","newMapping","prop","mappings","spatialObjectReference","getSpatialObjectReference","extraction_set","extraction_set_for","entityIRI","spatialEntityNodes","OrientedBoundingBox","spatialEntityDimensions","getSpatialEntityDimensions","getOrientedBoundingBox","quaternion","toQuaternion","normalize","calculateW","fromCenterHalfSizeQuaternion","radius","radiusSquared","boundingBox","distanceSquared","distanceSquaredTo","listResultSet","description","link","donorResultSet","datasetResultSet","thumbnail","tissueSectionResultSet","sampleType","sectionNumber","tissueBlockResultSet","sectionCount","sectionSize","sectionUnits","getDonorResult","getDatasetResult","getTissueSectionResult","dataset","section","database","message","checkback","loadTime","timestamp","startTime","now","loaded","finally","SPARQL_ENDPOINT","query","_getBmLocatedInAs","encodeURIComponent","tree","refOrganMap","annotations","ruiLocation","addQuad","termType","gray","red","green","blue","includeLetters","centered","sceneWidth","sceneHeight","sceneDepth","originRadius","lineRadius","globalTranslation","rotateZ","basePurlUrl","CCF_CONTEXT","dcterms","consortium_name","provider_name","provider_uuid","samples","sample_type","section_count","section_size","section_units","section_number","rui_location","organ_owner_sex","rui_rank","updated_date","ontology_terms","jsonLdString","context","Util","PREFIXES","fma","obo","uberon","cl","lmha","dc","prefixer","prefixes","isDefinedBy","seeAlso","ccfx","TissueBlock","TissueSection","NonStandard","characterizes","FemaleOrgans","MaleOrgans","SpatialPlacement","extractionSet","w_rotation","respiratory_system","colon","left_lung","right_lung","left_bronchus","right_bronchus","kidney","ureter","eye","fallopian_tube","knee","ovary","trachea","aorta","blood","bone_marrow","male_reproductive_system","lymph_node","blood_vasculature","brain","eye_left","eye_right","fallopian_tube_left","fallopian_tube_right","heart","kidney_left","kidney_right","knee_left","knee_right","large_intestine","liver","lungs","mesenteric_lymph_node","ovary_left","ovary_right","pancreas","pelvis","prostate_gland","skin","small_intestine","spleen","thymus","ureter_left","ureter_right","urinary_bladder","uterus","gold","getProbingSphereScene","defaultSphereRadius","sphereLineRadius","sphereLineLength","sphereConeRadius","rx","ry","rz","sx","sy","sz","xConsortiaResponseAsJsonLd","PER_API_SEARCH_REQUEST_COUNT","INCLUDED_DATA_FIELDS","DEFAULT_API_SEARCH_QUERY","exists","getApiSearchHeaders","token","Headers","append","getApiSearchBody","bodyObj","version","stored_fields","script_fields","docvalue_fields","_source","doSearchRequest","_doSearchRequest","init","res","validResponse","ok","doApiSearch","_x5","_doApiSearch","perReqCount","firstResult","total","requests","_x6","_x7","_x8","_x9","_searchXConsortia","dataUrl","serviceType","serviceToken","_assetsApi","_portalUrl","hubmapData","warn","omit","toNumber","HUBMAP","idPrefix","portal","portalParams","donorName","assets","SENNET","DR1_VU_THUMBS","UFL_THUMBS","GROUP_UUID_MAPPING","ENTITY_CONTEXT","donorLookup","unflattened","HuBMAPTissueBlock","toJsonLd","donorId","debugDonors","deleted","blockId","j","bad","entityType","descendants","getDonor","getRuiLocation","dateEntered","toLocaleDateString","sectionLookup","descendant","getSection","sectionId","getDataset","loc","sSize","parseFloat","sUnits","index","types","typesSearch","getDatasetThumbnail","thumbnailFile","tiffs","f","test","rel_path","thumb","donorDescription","ageMatch","race","metadata","md","getTissueBlock","APP_INITIALIZER","ModuleWithProviders","NgxGoogleAnalyticsModule","GoogleAnalyticsSyncService","LocalStorageSyncService","EAGERLY_LOADED_SERVICES","toAttributes","attrs","initCommands","projectName","command","providers","ngModule","consentChange","setConsent","unsetConsent","NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN","NGX_WINDOW","window","trackingCode","toggleGoogleAnalytics","LOCAL_STORAGE_CONSENT_KEY","storage","loadConsent","saveConsent","rawValue","trim","setItem","flatten","array","innerMap","project","outerIndex","pluck","shareReplay","DEFAULT_OPTIONS","last","opts","compare","fromEvent","trackMousePosition","formatData","clientWidth","clientHeight","clientX","clientY","points","events","LOCAL_STORAGE_ALLOW_TELEMETRY_KEY","INITIAL_TELEMETRY_SETTING","getTelemetryStorageSetting","TrackingState","setAllowTelemetry","allowTelemetry","oldValue","toString","reload","BodyUiComponent","nodeDrag","nodeClick","nodeHoverStart","nodeHoverStop","_interactive","_rotationX","_zoom","_target","_scene","bodyUI","bounds","_bounds","zoomToBounds","_camera","recreateBodyUI","setupBodyUI","bodyCanvas","height","pxRatio","devicePixelRatio","log2","canvas","evt","clearSubscriptions","BodyUiComponent_Query","Dispatch","Select","CloseDialog","LearnMore","CallToActionSelectors","CallToActionBehaviorComponent","learnMore","CallToActionBehaviorComponent_Template","CallToActionBehaviorComponent_Template_ccf_call_to_action_callToActionClicked_0_listener","CallToActionBehaviorComponent_Template_ccf_call_to_action_closeClicked_0_listener","tmp_0_0","title$","message$","callToAction$","imageUrl$","title","callToAction","imageUrl","MatCardModule","CallToActionModule","CallToActionBehaviorModule","CallToActionComponent","callToActionClicked","closeClicked","onDialogButtonClick","CallToActionComponent_HostBindings","CallToActionComponent_Template_mat_icon_click_6_listener","CallToActionComponent_Template_a_click_12_listener","infoTitle","resolveIndex","range","classes","SimpleChanges","ɵɵstyleMap","segment_r1","DecoratedTextComponent","segments","createSegments","makeUndecoratedSegment","decorations","getNormalizedDecorations","stackOps","createStackOps","stack","lastIndex","updateStack","shift","op","makeDecoratedSegment","ranges","getOp","entry","DecoratedTextComponent_HostBindings","DecoratedTextComponent_span_0_Template","DecoratedTextModule","InfoDialogComponent","InfoButtonService","InfoButtonComponent","infoButtonService","panelContent","launchInfoDialog","openDialogs","videoID","updateData","documentationUrl","InfoButtonComponent_Template","InfoButtonComponent_Template_mat_icon_click_1_listener","InfoDialogModule","responseType","parseMarkdown","markdownContent","splitByHeaderTag","newLine","headerAndContent","splice","InfoDialogComponent_div_10_mat_expansion_panel_1_div_6_Template","i_r4","content_r3","InfoDialogComponent_div_10_mat_expansion_panel_1_Template","documentationContents","InfoDialogComponent_Template","InfoDialogComponent_Template_mat_icon_click_7_listener","InfoDialogComponent_div_10_Template","MarkdownModule","OpacitySliderComponent","opacityChange","visibilityToggle","opacityReset","sliderChanged","prevOpacity","temp","resetOpacity","OpacitySliderComponent_HostBindings","OpacitySliderComponent_Template_input_input_3_listener","slider_r2","OpacitySliderComponent_Template_mat_icon_click_8_listener","OpacitySliderComponent_Template_mat_icon_click_9_listener","OpacitySliderComponent_Template_mat_icon_click_10_listener","OrganSelectorComponent_mat_icon_2_Template_mat_icon_touchstart_0_listener","scroll","OrganSelectorComponent_mat_icon_2_Template_mat_icon_touchend_0_listener","stopScroll","OrganSelectorComponent_mat_icon_2_Template_mat_icon_click_0_listener","OrganSelectorComponent_mat_icon_2_Template_mat_icon_mousedown_0_listener","OrganSelectorComponent_mat_icon_2_Template_mat_icon_mouseup_0_listener","onLeft","occurenceData","tmp_6_0","organ_r4","OrganSelectorComponent_div_7_Template_div_click_0_listener","selectOrgan","OrganSelectorComponent_div_7_div_5_Template","isSelected","numResults","OrganSelectorComponent_mat_icon_8_Template_mat_icon_touchstart_0_listener","OrganSelectorComponent_mat_icon_8_Template_mat_icon_touchend_0_listener","OrganSelectorComponent_mat_icon_8_Template_mat_icon_click_0_listener","OrganSelectorComponent_mat_icon_8_Template_mat_icon_mousedown_0_listener","OrganSelectorComponent_mat_icon_8_Template_mat_icon_mouseup_0_listener","onRight","ALL_POSSIBLE_ORGANS","hasSex","OrganSelectorComponent","multiselect","selectedOrgans","organsChanged","step","_occurenceData","carouselContainer","dir","itemList","val","parseInt","setLeftRight","timeoutHandler","setInterval","clearInterval","selectedOrgan","itemContainer","offsetWidth","listLength","setWidth","OrganSelectorComponent_Query","OrganSelectorComponent_mat_icon_2_Template","OrganSelectorComponent_div_7_Template","OrganSelectorComponent_mat_icon_8_Template","OrganSelectorModule","SpatialSearchKeyboardUIBehaviorComponent","shiftDelta","changePosition","shiftPressed","updatePosition","currentDelta","currentKey","keyUp","keyClick","keyHover","SpatialSearchKeyboardUIBehaviorComponent_HostBindings","SpatialSearchKeyboardUIBehaviorComponent_keydown_HostBindingHandler","SpatialSearchKeyboardUIBehaviorComponent_keyup_HostBindingHandler","SpatialSearchKeyboardUIBehaviorComponent_Template_ccf_spatial_search_keyboard_ui_keyClicked_0_listener","SpatialSearchKeyboardUIBehaviorComponent_Template_ccf_spatial_search_keyboard_ui_keyHovered_0_listener","SpatialSearchKeyboardUIModule","key_r1","direction","SpatialSearchKeyboardUIComponent","keyClicked","keyHovered","keyMap","SpatialSearchKeyboardUIComponent_HostBindings","SpatialSearchKeyboardUIComponent_mat_icon_1_Template","SpatialSearchKeyboardUIComponent_Template_div_mousedown_4_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_4_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_4_listener","SpatialSearchKeyboardUIComponent_Template_div_mousedown_6_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_6_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_6_listener","SpatialSearchKeyboardUIComponent_Template_div_mousedown_8_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_8_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_8_listener","SpatialSearchKeyboardUIComponent_Template_div_mousedown_11_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_11_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_11_listener","SpatialSearchKeyboardUIComponent_Template_div_mousedown_13_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_13_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_13_listener","SpatialSearchKeyboardUIComponent_Template_div_mousedown_15_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_15_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_15_listener","SpatialSearchKeyboardUIComponent_div_17_Template","SpatialSearchListComponent_mat_list_item_2_Template_mat_checkbox_change_2_listener","idx_r3","updateItemSelection","SpatialSearchListComponent_mat_list_item_2_Template_button_click_5_listener","removeItem","SpatialSearchListComponent","selectionChanged","itemRemoved","itemId","newItems","selectedItems","SpatialSearchListComponent_HostBindings","SpatialSearchListComponent_div_0_Template","SpatialSearchListComponent_mat_list_item_2_Template","MatListModule","SpatialSearchListModule","kv_r1","StoreDebugComponent_div_0_li_4_Template","state_r2","StoreDebugComponent","states","stateValues","_key","sub","StoreDebugComponent_HostBindings","StoreDebugComponent_div_0_Template","lastValueFrom","option_r2","DEFAULT_MAX_OPTIONS","TextSearchComponent","emitEvent","defaultMaxOptions","optionSelected","getOptions","autoCompleter","maxOptions","optionDisplay","option","optionId","TextSearchComponent_HostBindings","ɵɵelementContainerStart","TextSearchComponent_Template_mat_autocomplete_optionSelected_5_listener","TextSearchComponent_mat_option_7_Template","auto_r3","MatAutocompleteModule","MatPrefix","MatSuffix","TextSearchModule","MAT_SNACK_BAR_DATA","TrackingPopupComponent_button_2_Template_button_click_0_listener","submit","TrackingPopupComponent_button_3_Template_button_click_0_listener","elementRef","container","showButton","button","TrackingPopupComponent_HostBindings","TrackingPopupComponent_button_2_Template","TrackingPopupComponent_button_3_Template","XYZPositionComponent","format","XYZPositionComponent_HostBindings","XYZPositionModule","optionCache","setConfig","patchConfig","getProperty","getPathKey","obs","NumberDirective","onInputChange","initalValue","stopPropagation","NumberDirective_HostBindings","NumberDirective_input_HostBindingHandler","DefaultService","Cacheable","buster$","CACHE_CONFIG_NO_PARAMS","cacheBusterObserver","CACHE_CONFIG_PARAMS","maxCacheCount","cast","rangeToMinMax","low","high","filterToParams","spatialSceneNodeReviver","ApiEndpointDataSourceService","api","doRequest","dbStatus","providerNames","technologyNames","ontologyTreeModel","cellTypeTreeModel","biomarkerTreeModel","referenceOrgans","aggregateResults","ontologyTermOccurences","cellTypeTermOccurences","biomarkerTermOccurences","referenceOrganScene","reviver","requestParams","configuration","basePath","isDevMode","releaseProxy","wrap","using","DelegateDataSource","ForwardingDataSource","CCFDatabaseDataSourceBaseService","impl$","database$","createDatabase","manager","connectDatabase","cacheResults","CCFDatabaseDataSourceService","WorkerCCFDatabaseDataSourceService","worker","createWorker","terminate","REMOTE_METHODS","HybridCCfDatabaseDatasourceService","remote","forwardCall","isRemoteCall","DataSourceService","impl","ProviderToken","InjectorDelegateDataSourceService","selectToken","findGlobalObject","defineProperties","configurable","writable","remove","self","Function","_ignored","LocalStorageService","full","DOMException","defaultValue","clear","OpenDialog","Selector","CallToActionState","expirationDate","popupShown","Action","StateContext","POPUP_SHOWN_STORAGE_KEY","SPATIAL_SEARCH_README","ctaDatePassed","today","expire","infoService","getState","popupShownStr","pastExpiration","CallToActionState_1","showPopup","dispatch","getDialogData","launchLearnMore","_ctx","closeAll","CallToActionAction","rename","ConfigManager","configState","storedChanges","addChanges","applyChanges","additionalConfig","previousConfig","newConfig","change","processChange","output","currentValue","parser","configManager","_init","initialDelay","clearTimeout","ɵɵNgOnChangesFeature","toRDF","Parser","RdfXmlParser","Readable","streamToArray","readStream","reject","chunks","on","chunk","once","arrayToStream","arr","objectMode","read","_addJsonLdToStore","jsonLdData","response","redirect","quads","import","_addRdfXmlToStore","xmlData","xmlParser","dataFactory","write","_addN3ToStore","storeData","assign","serializedStore","_factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[211,212,213,214]}