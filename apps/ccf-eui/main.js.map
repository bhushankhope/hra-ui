{"version":3,"file":"main.js","mappings":"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","sources":["./apps/ccf-eui/src/app/app-web-component.component.ts","./apps/ccf-eui/src/app/app.component.ts","./apps/ccf-eui/src/app/app.component.html","./apps/ccf-eui/src/app/app.module.ts","./apps/ccf-eui/src/app/core/core.module.ts","./apps/ccf-eui/src/app/core/header/header.component.ts","./apps/ccf-eui/src/app/core/header/header.component.html","./apps/ccf-eui/src/app/core/header/header.module.ts","./apps/ccf-eui/src/app/core/models/flat-node.ts","./apps/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts","./apps/ccf-eui/src/app/core/services/data-source/data-source.service.ts","./apps/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts","./apps/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts","./apps/ccf-eui/src/app/core/services/theming/theming.module.ts","./apps/ccf-eui/src/app/core/services/theming/theming.service.ts","./apps/ccf-eui/src/app/core/store/action-as-fn.ts","./apps/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts","./apps/ccf-eui/src/app/core/store/data/data.actions.ts","./apps/ccf-eui/src/app/core/store/data/data.selectors.ts","./apps/ccf-eui/src/app/core/store/data/data.state.ts","./apps/ccf-eui/src/app/core/store/icon-registry/default-icons.ts","./apps/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts","./apps/ccf-eui/src/app/core/store/list-results/list-results.state.ts","./apps/ccf-eui/src/app/core/store/scene/scene.state.ts","./apps/ccf-eui/src/app/core/store/spatial-search-filter/spatial-search-filter.actions.ts","./apps/ccf-eui/src/app/core/store/spatial-search-filter/spatial-search-filter.selectors.ts","./apps/ccf-eui/src/app/core/store/spatial-search-filter/spatial-search-filter.state.ts","./apps/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.actions.ts","./apps/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.selectors.ts","./apps/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.state.ts","./apps/ccf-eui/src/app/core/store/store.module.ts","./apps/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts","./apps/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.html","./apps/ccf-eui/src/app/modules/filters/filters-content/filters-content.module.ts","./apps/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts","./apps/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.html","./apps/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.module.ts","./apps/ccf-eui/src/app/modules/ontology-exploration/ontology-exploration.module.ts","./apps/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts","./apps/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.html","./apps/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.module.ts","./apps/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts","./apps/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.html","./apps/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.module.ts","./apps/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts","./apps/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.html","./apps/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.module.ts","./apps/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts","./apps/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.html","./apps/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.module.ts","./apps/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts","./apps/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.html","./apps/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.module.ts","./apps/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts","./apps/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.html","./apps/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.module.ts","./apps/ccf-eui/src/app/shared/components/button-toggle/button-toggle.component.ts","./apps/ccf-eui/src/app/shared/components/button-toggle/button-toggle.component.html","./apps/ccf-eui/src/app/shared/components/button-toggle/button-toggle.module.ts","./apps/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts","./apps/ccf-eui/src/app/shared/components/checkbox/checkbox.component.html","./apps/ccf-eui/src/app/shared/components/checkbox/checkbox.module.ts","./apps/ccf-eui/src/app/shared/components/drawer/container/container.component.ts","./apps/ccf-eui/src/app/shared/components/drawer/container/container.component.html","./apps/ccf-eui/src/app/shared/components/drawer/content/content.component.ts","./apps/ccf-eui/src/app/shared/components/drawer/drawer.module.ts","./apps/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts","./apps/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.html","./apps/ccf-eui/src/app/shared/components/drawer/messages.ts","./apps/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts","./apps/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.html","./apps/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts","./apps/ccf-eui/src/app/shared/components/dropdown/dropdown.component.html","./apps/ccf-eui/src/app/shared/components/dropdown/dropdown.module.ts","./apps/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts","./apps/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.html","./apps/ccf-eui/src/app/shared/components/dual-slider/dual-slider.module.ts","./apps/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts","./apps/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.html","./apps/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.module.ts","./apps/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts","./apps/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.html","./apps/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.module.ts","./apps/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts","./apps/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.html","./apps/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.module.ts","./apps/ccf-eui/src/app/shared/components/spatial-search-ui-behavior/spatial-search-ui-behavior.component.ts","./apps/ccf-eui/src/app/shared/components/spatial-search-ui-behavior/spatial-search-ui-behavior.component.html","./apps/ccf-eui/src/app/shared/components/spatial-search-ui-behavior/spatial-search-ui-behavior.module.ts","./apps/ccf-eui/src/app/shared/components/spatial-search-ui/spatial-search-ui.component.ts","./apps/ccf-eui/src/app/shared/components/spatial-search-ui/spatial-search-ui.component.html","./apps/ccf-eui/src/app/shared/components/spatial-search-ui/spatial-search-ui.module.ts","./apps/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts","./apps/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.html","./apps/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.module.ts","./apps/ccf-eui/src/app/shared/components/term-occurence-list/term-occurrence.component.ts","./apps/ccf-eui/src/app/shared/components/term-occurence-list/term-occurrence.component.html","./apps/ccf-eui/src/app/shared/components/term-occurence-list/term-occurrence.module.ts","./apps/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts","./apps/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.html","./apps/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.module.ts","./apps/ccf-eui/src/app/shared/components/tissue-block-list/tissue-block-list.component.ts","./apps/ccf-eui/src/app/shared/components/tissue-block-list/tissue-block-list.component.html","./apps/ccf-eui/src/app/shared/components/tissue-block-list/tissue-block-list.module.ts","./apps/ccf-eui/src/app/shared/components/viewer/viewer.component.ts","./apps/ccf-eui/src/app/shared/components/viewer/viewer.component.html","./apps/ccf-eui/src/app/shared/components/viewer/viewer.module.ts","./apps/ccf-eui/src/app/shared/services/message/message.service.ts","./apps/ccf-eui/src/environments/environment.ts","./apps/ccf-eui/src/main.ts","./libs/ccf-body-ui/src/lib/body-ui-layer.ts","./libs/ccf-body-ui/src/lib/body-ui.ts","./libs/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts","./libs/ccf-body-ui/src/lib/shared/spatial-scene-node.ts","./libs/ccf-body-ui/src/lib/util/load-gltf.ts","./libs/ccf-body-ui/src/lib/util/process-scene-nodes.ts","./libs/ccf-body-ui/src/lib/util/scene-traversal.ts","./libs/ccf-body-ui/src/lib/util/simplify-scene.ts","./libs/ccf-body-ui/src/lib/util/spatial-scene-collider.ts","./libs/ccf-body-ui/src/public-api.ts","./libs/ccf-database/src/lib/ccf-database.ts","./libs/ccf-database/src/lib/ccf-spatial-graph.ts","./libs/ccf-database/src/lib/ccf-spatial-scene.ts","./libs/ccf-database/src/lib/interfaces.ts","./libs/ccf-database/src/lib/queries/aggregate-results-n3.ts","./libs/ccf-database/src/lib/queries/find-ids-n3.ts","./libs/ccf-database/src/lib/queries/ontology-term-occurences-n3.ts","./libs/ccf-database/src/lib/queries/ontology-tree-n3.ts","./libs/ccf-database/src/lib/queries/spatial-result-n3.ts","./libs/ccf-database/src/lib/queries/spatial-search-n3.ts","./libs/ccf-database/src/lib/queries/tissue-block-result-n3.ts","./libs/ccf-database/src/lib/spatial-types.ts","./libs/ccf-database/src/lib/util/ccf-database-status-tracker.ts","./libs/ccf-database/src/lib/util/enrich-bm-located-in-as.ts","./libs/ccf-database/src/lib/util/enrich-rui-locations.ts","./libs/ccf-database/src/lib/util/n3-functions.ts","./libs/ccf-database/src/lib/util/origin-scene.ts","./libs/ccf-database/src/lib/util/patch-jsonld.ts","./libs/ccf-database/src/lib/util/prefixes.ts","./libs/ccf-database/src/lib/util/probing-sphere-scene.ts","./libs/ccf-database/src/lib/util/tissue-block-scene.ts","./libs/ccf-database/src/lib/xconsortia/xconsortia-data-import.ts","./libs/ccf-database/src/lib/xconsortia/xconsortia-data.ts","./libs/ccf-database/src/public-api.ts","./libs/ccf-shared/analytics/src/lib/analytics.module.ts","./libs/ccf-shared/analytics/src/lib/consent.service.ts","./libs/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts","./libs/ccf-shared/analytics/src/lib/local-storage-sync.service.ts","./libs/ccf-shared/analytics/src/public-api.ts","./libs/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts","./libs/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts","./libs/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts","./libs/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts","./libs/ccf-shared/rxjs-ext/operators/src/public-api.ts","./libs/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts","./libs/ccf-shared/src/lib/analytics/tracking.state.ts","./libs/ccf-shared/src/lib/components/body-ui/body-ui.component.ts","./libs/ccf-shared/src/lib/components/body-ui/body-ui.component.html","./libs/ccf-shared/src/lib/components/body-ui/body-ui.module.ts","./libs/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts","./libs/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.html","./libs/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.module.ts","./libs/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts","./libs/ccf-shared/src/lib/components/call-to-action/call-to-action.component.html","./libs/ccf-shared/src/lib/components/call-to-action/call-to-action.module.ts","./libs/ccf-shared/src/lib/components/decorated-text/decorated-range.ts","./libs/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts","./libs/ccf-shared/src/lib/components/decorated-text/decorated-text.component.html","./libs/ccf-shared/src/lib/components/decorated-text/decorated-text.module.ts","./libs/ccf-shared/src/lib/components/info/info-button/info-button.component.ts","./libs/ccf-shared/src/lib/components/info/info-button/info-button.component.html","./libs/ccf-shared/src/lib/components/info/info-button/info-button.module.ts","./libs/ccf-shared/src/lib/components/info/info-button/info-button.service.ts","./libs/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts","./libs/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.html","./libs/ccf-shared/src/lib/components/info/info-dialog/info-dialog.module.ts","./libs/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts","./libs/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.html","./libs/ccf-shared/src/lib/components/opacity-slider/opacity-slider.module.ts","./libs/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts","./libs/ccf-shared/src/lib/components/organ-selector/organ-selector.component.html","./libs/ccf-shared/src/lib/components/organ-selector/organ-selector.module.ts","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui-behavior/spatial-search-keyboard-ui-behavior.component.ts","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui-behavior/spatial-search-keyboard-ui-behavior.component.html","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui-behavior/spatial-search-keyboard-ui-behavior.module.ts","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui/spatial-search-keyboard-ui.component.ts","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui/spatial-search-keyboard-ui.component.html","./libs/ccf-shared/src/lib/components/spatial-search-keyboard-ui/spatial-search-keyboard-ui.module.ts","./libs/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts","./libs/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.html","./libs/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.module.ts","./libs/ccf-shared/src/lib/components/store-debug/store-debug.component.ts","./libs/ccf-shared/src/lib/components/store-debug/store-debug.component.html","./libs/ccf-shared/src/lib/components/store-debug/store-debug.module.ts","./libs/ccf-shared/src/lib/components/text-search/text-search.component.ts","./libs/ccf-shared/src/lib/components/text-search/text-search.component.html","./libs/ccf-shared/src/lib/components/text-search/text-search.module.ts","./libs/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts","./libs/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.html","./libs/ccf-shared/src/lib/components/tracking-popup/tracking-popup.module.ts","./libs/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts","./libs/ccf-shared/src/lib/components/xyz-position/xyz-position.component.html","./libs/ccf-shared/src/lib/components/xyz-position/xyz-position.module.ts","./libs/ccf-shared/src/lib/config/global-config.state.ts","./libs/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts","./libs/ccf-shared/src/lib/directives/numbers-only/numbers-only.module.ts","./libs/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts","./libs/ccf-shared/src/lib/services/data-source/ccf-database.service.ts","./libs/ccf-shared/src/lib/services/data-source/data-source.service.ts","./libs/ccf-shared/src/lib/services/data-source/data-source.ts","./libs/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts","./libs/ccf-shared/src/lib/services/globals/globals.service.ts","./libs/ccf-shared/src/lib/services/local-storage/local-storage.service.ts","./libs/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts","./libs/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts","./libs/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts","./libs/ccf-shared/src/public-api.ts","./libs/ccf-shared/web-components/src/lib/config-manager.ts","./libs/ccf-shared/web-components/src/lib/parsers.ts","./libs/ccf-shared/web-components/src/lib/web-component.ts","./libs/ccf-shared/web-components/src/public-api.ts","./libs/triple-store-utils/src/lib/triple-store-utils.ts","./libs/triple-store-utils/src/public-api.ts","ignored|/home/runner/work/hra-ui/hra-ui/node_modules/@loaders.gl/core/node_modules/@loaders.gl/loader-utils/dist/esm/lib/binary-utils|../node/buffer","ignored|/home/runner/work/hra-ui/hra-ui/node_modules/@loaders.gl/gltf/node_modules/@loaders.gl/loader-utils/dist/esm/lib/binary-utils|../node/buffer","ignored|/home/runner/work/hra-ui/hra-ui/node_modules/@loaders.gl/worker-utils/dist/esm/lib/library-utils|../node/require-utils.node","ignored|/home/runner/work/hra-ui/hra-ui/node_modules/rdf-canonize/lib|rdf-canonize-native"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BUILTIN_PARSERS, BaseWebComponent, GenericGlobalConfig } from 'ccf-shared/web-components';\n\nimport { Filter } from 'ccf-database';\nimport { environment } from '../environments/environment';\n\nfunction isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\nfunction isNumberArray(value: unknown): value is number[] {\n  return Array.isArray(value) && value.every(isNumber);\n}\n\nfunction isString(value: unknown): value is string {\n  return typeof value === 'string';\n}\n\nfunction isStringArray(value: unknown): value is string[] {\n  return Array.isArray(value) && value.every(isString);\n}\n\nfunction checkOptionalProperty(\n  name: string,\n  obj: object,\n  prop: string,\n  validator: (value: unknown) => boolean, // returns boolean after being called. Logic is passed as an argument when 'checkProp()' is called.\n): void {\n  /** first check if prop(property name) is present in the obj(value) and then apply the validator function whose\n   *logic is passed when the checkProp() is called.\n   */\n  if (prop in obj) {\n    //obj[prop] is value for eg. 'Male' in sex\n    if (!validator(obj[prop as never])) {\n      throw new Error(`Invalid property ${prop} in ${name}`);\n    }\n  }\n}\n\nfunction parseDataSources(value: unknown): string[] {\n  if (typeof value === 'string') {\n    const json = BUILTIN_PARSERS.json(value);\n    if (isStringArray(json)) {\n      return json;\n    }\n  } else if (isStringArray(value)) {\n    return value;\n  }\n\n  throw new Error('Invalid type for string array');\n}\n\nfunction parseFilter(value: unknown): string | Partial<Filter> {\n  if (typeof value === 'string') {\n    value = BUILTIN_PARSERS.json(value);\n    if (isString(value)) {\n      return value;\n    }\n  }\n\n  if (typeof value === 'object' && value !== null) {\n    const sexOptions = ['Both', 'Male', 'Female'];\n    // predefine name as 'filter' and obj as value. 'this' is set to undefined\n    const checkProp = checkOptionalProperty.bind(undefined, 'filter', value);\n    checkProp('sex', (val) => isString(val) && sexOptions.includes(val));\n    checkProp('ageRange', (val) => isNumberArray(val) && val.length === 2);\n    checkProp('bmiRange', (val) => isNumberArray(val) && val.length === 2);\n    checkProp('consortiums', isStringArray);\n    checkProp('tmc', isStringArray);\n    checkProp('technologies', (val) => isStringArray(val));\n    checkProp('ontologyTerms', (val) => isStringArray(val));\n    checkProp('cellTypeTerms', (val) => isStringArray(val));\n    checkProp('biomarkerTerms', (val) => isStringArray(val));\n    checkProp('spatialSearches', (val) => isStringArray(val));\n    return value as Filter;\n  }\n\n  throw new Error('Invalid filter');\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '<ccf-root *ngIf=\"initialized\"></ccf-root>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() baseHref!: string;\n  @Input() dataSources!: string | string[];\n  @Input() selectedOrgans!: string[];\n\n  @Input() hubmapDataService!: string;\n  @Input() hubmapDataUrl!: string;\n  @Input() hubmapAssetUrl!: string;\n  @Input() hubmapToken!: string;\n  @Input() hubmapPortalUrl!: string;\n\n  @Input() useRemoteApi!: string | boolean;\n  @Input() remoteApiEndpoint!: string;\n  @Input() theme!: string;\n  @Input() header!: string | boolean;\n  @Input() homeUrl!: string;\n  @Input() logoTooltip!: string;\n  @Input() loginDisabled!: boolean;\n  @Input() filter!: string | Partial<Filter>;\n\n  override initialized!: boolean;\n\n  constructor(configStore: GlobalConfigState<GenericGlobalConfig>, cdr: ChangeDetectorRef) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...(globalThis['dbOptions' as never] as object),\n        ...environment.customization,\n      },\n      parse: {\n        dataSources: parseDataSources,\n        useRemoteApi: BUILTIN_PARSERS.boolean,\n        header: BUILTIN_PARSERS.boolean,\n        loginDisabled: BUILTIN_PARSERS.boolean,\n        filter: parseFilter,\n      },\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Injector,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { CCFDatabaseOptions, Filter, OntologyTreeModel } from 'ccf-database';\nimport { BodyUiComponent, DataSourceService, GlobalConfigState, OrganInfo, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { Observable, ReplaySubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Immutable } from '@angular-ru/common/typings';\nimport { environment } from '../environments/environment';\nimport { OntologySelection } from './core/models/ontology-selection';\nimport { AppRootOverlayContainer } from './core/services/app-root-overlay/app-root-overlay.service';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { actionAsFn } from './core/store/action-as-fn';\nimport { DataStateSelectors } from './core/store/data/data.selectors';\nimport { DataQueryState, DataState } from './core/store/data/data.state';\nimport { ListResultsState } from './core/store/list-results/list-results.state';\nimport { SceneState } from './core/store/scene/scene.state';\nimport { RemoveSearch, SetSelectedSearches } from './core/store/spatial-search-filter/spatial-search-filter.actions';\nimport { SpatialSearchFilterSelectors } from './core/store/spatial-search-filter/spatial-search-filter.selectors';\nimport { SpatialSearchFilterItem } from './core/store/spatial-search-filter/spatial-search-filter.state';\nimport { FiltersPopoverComponent } from './modules/filters/filters-popover/filters-popover.component';\nimport { DrawerComponent } from './shared/components/drawer/drawer/drawer.component';\n\ninterface AppOptions extends CCFDatabaseOptions {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  selectedOrgans?: string[];\n  loginEnabled?: boolean;\n  baseHref?: string;\n  filter?: Partial<Filter>;\n  loginDisabled?: boolean;\n}\n\n/**\n * This is the main angular component that all the other components branch off from.\n * It is in charge of the header and drawer components who have many sub-components.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('bodyUI', { static: false }) bodyUI!: BodyUiComponent;\n\n  @Select(DataStateSelectors.cellTypesTreeModel)\n  readonly cellTypeTreeModel$!: Observable<OntologyTreeModel>;\n\n  @Select(DataStateSelectors.anatomicalStructuresTreeModel)\n  readonly ontologyTreeModel$!: Observable<OntologyTreeModel>;\n\n  @Select(DataStateSelectors.biomarkersTreeModel)\n  readonly biomarkersTreeModel$!: Observable<OntologyTreeModel>;\n\n  @Select(SpatialSearchFilterSelectors.items)\n  readonly selectableSearches$!: Observable<SpatialSearchFilterItem>;\n\n  @Dispatch()\n  readonly setSelectedSearches = actionAsFn(SetSelectedSearches);\n\n  @Dispatch()\n  readonly removeSpatialSearch = actionAsFn(RemoveSearch);\n\n  menuOptions: string[] = ['AS', 'CT', 'B'];\n  tooltips: string[] = ['Anatomical Structures', 'Cell Types', 'Biomarkers'];\n  /**\n   * Used to keep track of the ontology label to be passed down to the\n   * results-browser component.\n   */\n  ontologySelectionLabel = 'body';\n\n  cellTypeSelectionLabel = 'cell';\n\n  biomarkerSelectionLabel = 'biomarker';\n\n  selectionLabel = 'body | cell | biomarker';\n\n  selectedtoggleOptions: string[] = [];\n\n  /**\n   * Whether or not organ carousel is open\n   */\n  organListVisible = true;\n\n  /**\n   * Emitted url object from the results browser item\n   */\n  url = '';\n\n  /**\n   * Acceptable viewer domains (others will open in new window)\n   */\n  acceptableViewerDomains: string[] = environment.acceptableViewerDomains || [];\n\n  /**\n   * Variable to keep track of whether the viewer is open\n   * or not\n   */\n  viewerOpen = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  get isFirefox(): boolean {\n    return navigator.userAgent.indexOf('Firefox') !== -1;\n  }\n\n  /** Emits true whenever the overlay spinner should activate. */\n  readonly spinnerActive$ = this.data.queryStatus$.pipe(map((state) => state === DataQueryState.Running));\n\n  readonly loadingMessage$ = this.data.state$.pipe(map((x) => x?.statusMessage));\n\n  readonly ontologyTerms$: Observable<readonly string[]>;\n  readonly cellTypeTerms$: Observable<readonly string[]>;\n  readonly biomarkerTerms$: Observable<readonly string[]>;\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject<'light' | 'dark'>(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n  readonly loginDisabled$ = this.globalConfig.getOption('loginDisabled');\n  readonly filter$ = this.globalConfig.getOption('filter');\n  readonly selectedOrgans$ = this.globalConfig.getOption('selectedOrgans');\n  readonly baseHref$ = this.globalConfig.getOption('baseHref');\n\n  /**\n   * Creates an instance of app component.\n   *\n   * @param data The data state.\n   */\n  constructor(\n    el: ElementRef<HTMLElement>,\n    injector: Injector,\n    readonly data: DataState,\n    readonly theming: ThemingService,\n    readonly scene: SceneState,\n    readonly listResultsState: ListResultsState,\n    readonly consentService: ConsentService,\n    readonly snackbar: MatSnackBar,\n    overlay: AppRootOverlayContainer,\n    readonly dataSource: DataSourceService,\n    private readonly globalConfig: GlobalConfigState<AppOptions>,\n    cdr: ChangeDetectorRef,\n  ) {\n    theming.initialize(el, injector);\n    overlay.setRootElement(el);\n    data.tissueBlockData$.subscribe();\n    data.aggregateData$.subscribe();\n    data.ontologyTermOccurencesData$.subscribe();\n    data.cellTypeTermOccurencesData$.subscribe();\n    data.biomarkerTermOccurencesData$.subscribe();\n    data.sceneData$.subscribe();\n    data.filter$.subscribe();\n    data.technologyFilterData$.subscribe();\n    data.providerFilterData$.subscribe();\n    this.ontologyTerms$ = data.filter$.pipe(map((x) => x?.ontologyTerms));\n    this.cellTypeTerms$ = data.filter$.pipe(map((x) => x?.cellTypeTerms));\n    this.biomarkerTerms$ = data.filter$.pipe(map((x) => x?.biomarkerTerms));\n    this.filter$.subscribe((filter = {}) => data.updateFilter(filter));\n    this.baseHref$.subscribe((ref) => this.globalConfig.patchState({ baseHref: ref ?? '' }));\n\n    combineLatest([scene.referenceOrgans$, this.selectedOrgans$]).subscribe(([refOrgans, selected]) => {\n      scene.setSelectedReferenceOrgansWithDefaults(refOrgans as OrganInfo[], selected ?? []);\n    });\n    combineLatest([this.theme$, this.themeMode$]).subscribe(([theme, mode]) => {\n      this.theming.setTheme(`${theme}-theme-${mode}`);\n      cdr.markForCheck();\n    });\n    this.selectedtoggleOptions = this.menuOptions;\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        },\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000,\n    });\n\n    if (window.matchMedia) {\n      // Sets initial theme according to user theme preference\n      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        this.themeMode$.next('dark');\n      } else {\n        this.themeMode$.next('light');\n      }\n\n      // Listens for changes in user theme preference\n      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {\n        this.themeMode$.next(e.matches ? 'dark' : 'light');\n      });\n    } else {\n      this.themeMode$.next('light');\n    }\n  }\n\n  /**\n   * Resets the drawers and filter components to their default state.\n   *\n   * @param left The left drawer component gets passed in so we can call it's methods to control it's state\n   * @param right The right drawer component gets passed in so we can call it's methods to control it's state\n   * @param filterbox The filter's popover component gets passed in so we can control it's popover's state\n   */\n  reset(left: DrawerComponent, right: DrawerComponent, filterbox: FiltersPopoverComponent): void {\n    left.open();\n    left.closeExpanded();\n    right.open();\n    right.closeExpanded();\n    filterbox.removeBox();\n    this.resetView();\n  }\n\n  resetView(): void {\n    this.bodyUI.target = [0, 0, 0];\n    this.bodyUI.rotation = 0;\n    this.bodyUI.rotationX = 0;\n    this.bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Captures changes in the ontologySelection and uses them to update the results-browser label\n   * and the filter object in the data store.\n   *\n   * @param ontologySelection the list of currently selected organ nodes\n   */\n  ontologySelected(\n    ontologySelection: OntologySelection[] | undefined,\n    type: 'anatomical-structures' | 'cell-type' | 'biomarkers',\n  ): void {\n    if (ontologySelection) {\n      if (type === 'anatomical-structures') {\n        this.data.updateFilter({ ontologyTerms: ontologySelection.map((selection) => selection.id) });\n        this.ontologySelectionLabel = this.createSelectionLabel(ontologySelection);\n      } else if (type === 'cell-type') {\n        this.data.updateFilter({ cellTypeTerms: ontologySelection.map((selection) => selection.id) });\n        this.cellTypeSelectionLabel = this.createSelectionLabel(ontologySelection);\n      } else if (type === 'biomarkers') {\n        this.data.updateFilter({ biomarkerTerms: ontologySelection.map((selection) => selection.id) });\n        this.biomarkerSelectionLabel = this.createSelectionLabel(ontologySelection);\n      }\n\n      this.selectionLabel = [\n        this.ontologySelectionLabel || 'body',\n        this.cellTypeSelectionLabel || 'cell',\n        this.biomarkerSelectionLabel || 'biomarker',\n      ].join(' | ');\n\n      if (ontologySelection[0] && ontologySelection[0].label === 'body') {\n        this.resetView();\n      }\n      return;\n    }\n\n    this.data.updateFilter({ ontologyTerms: [], cellTypeTerms: [], biomarkerTerms: [] });\n    this.ontologySelectionLabel = '';\n    this.cellTypeSelectionLabel = '';\n  }\n\n  /**\n   * Creates selection label for the results-browser to display based on an\n   * array of selected ontology nodes.\n   */\n  createSelectionLabel(ontologySelection: OntologySelection[]): string {\n    if (ontologySelection.length === 0) {\n      return '';\n    }\n\n    if (ontologySelection.length === 1) {\n      return ontologySelection[0].label;\n    }\n\n    let selectionString = '';\n    ontologySelection.forEach((selection, index) => {\n      selectionString += selection.label;\n\n      // Don't add a comma if it's the last item in the array.\n      if (index < ontologySelection.length - 1) {\n        selectionString += ', ';\n      }\n    });\n    return selectionString;\n  }\n\n  /**\n   * Opens the iframe viewer with an url\n   *\n   * @param url The url\n   */\n  openiFrameViewer(url: string): void {\n    const isWhitelisted = this.acceptableViewerDomains.some((domain) => url?.startsWith(domain));\n    if (isWhitelisted) {\n      this.url = url;\n      this.viewerOpen = !!url;\n    } else {\n      // Open link in new tab\n      window.open(url, '_blank');\n      this.closeiFrameViewer();\n    }\n  }\n\n  /**\n   * Function to easily close the iFrame viewer.\n   */\n  closeiFrameViewer(): void {\n    this.viewerOpen = false;\n  }\n\n  /**\n   * Gets login token\n   */\n  get loggedIn(): boolean {\n    const token = this.globalConfig.snapshot.hubmapToken ?? '';\n    return token.length > 0;\n  }\n\n  isItemSelected(item: string) {\n    return this.selectedtoggleOptions.includes(item);\n  }\n\n  toggleSelection(value: string[]) {\n    this.selectedtoggleOptions = value;\n  }\n\n  asMutable<T>(value: Immutable<T>): T {\n    return value as T;\n  }\n}\n","<div class=\"ccf-app mat-app-background\">\n  <ccf-spinner-overlay [text]=\"(loadingMessage$ | async) ?? ''\" [active]=\"(spinnerActive$ | async) ?? false\">\n  </ccf-spinner-overlay>\n  <ccf-header\n    [class.hide]=\"(header$ | async) === false\"\n    [logoTooltip]=\"(logoTooltip$ | async) ?? ''\"\n    [homeUrl]=\"(homeUrl$ | async) ?? ''\"\n    [loggedIn]=\"loggedIn\"\n    [loginDisabled]=\"(loginDisabled$ | async) ?? false\"\n    [baseRef]=\"(baseHref$ | async) ?? ''\"\n    *ngIf=\"(spinnerActive$ | async) === false\"\n  >\n  </ccf-header>\n\n  <ccf-drawer-container class=\"main-drawers\" [class.header-hidden]=\"(header$ | async) === false\">\n    <ccf-drawer class=\"left-drawer\" opened #left (stateChange)=\"filterbox.removeBox()\">\n      <div class=\"left-drawer-container\">\n        <div class=\"filter-data\">\n          <ccf-filters-popover\n            [filters]=\"$any(data.filter$ | async)\"\n            [drawerExpanded]=\"right.expanded\"\n            (filtersChange)=\"data.updateFilter($event)\"\n            [technologyFilters]=\"(data.technologyFilterData$ | async) ?? []\"\n            [providerFilters]=\"(data.providerFilterData$ | async) ?? []\"\n            [spatialSearchFilters]=\"$any(selectableSearches$ | async)\"\n            (spatialSearchSelected)=\"setSelectedSearches($event)\"\n            (spatialSearchRemoved)=\"removeSpatialSearch($event)\"\n            #filterbox\n          >\n          </ccf-filters-popover>\n\n          <div class=\"filter-text\">\n            <div class=\"sex filter-tag\">\n              Sex: <strong>{{ (data.filter$ | async)?.sex }}</strong>\n            </div>\n            <div class=\"age filter-tag\">\n              Age:\n              <strong>\n                {{ $any(data.filter$ | async)?.ageRange[0] }}-{{ $any(data.filter$ | async)?.ageRange[1] }}\n              </strong>\n            </div>\n            <div class=\"bmi filter-tag\">\n              BMI:\n              <strong>\n                {{ $any(data.filter$ | async)?.bmiRange[0] }}-{{ $any(data.filter$ | async)?.bmiRange[1] }}\n              </strong>\n            </div>\n          </div>\n        </div>\n        <ccf-button-toggle\n          class=\"button-toggle-group\"\n          [menuOptions]=\"menuOptions\"\n          [enableTooltip]=\"true\"\n          [tooltips]=\"tooltips\"\n          [selectedItems]=\"selectedtoggleOptions\"\n          (selectionChange)=\"toggleSelection($event)\"\n        ></ccf-button-toggle>\n        <div class=\"ontologies\">\n          <ccf-ontology-selection\n            class=\"ontology-selection\"\n            [class.firefox]=\"isFirefox\"\n            *ngIf=\"isItemSelected('AS')\"\n            [showtoggle]=\"false\"\n            [treeModel]=\"(ontologyTreeModel$ | async)!\"\n            [termData]=\"(data.ontologyTermsFullData$ | async) ?? {}\"\n            [occurenceData]=\"(data.ontologyTermOccurencesData$ | async) ?? {}\"\n            placeholderText=\"Search anatomical structures...\"\n            (ontologySelection)=\"ontologySelected($any($event), 'anatomical-structures')\"\n            [header]=\"(header$ | async) ?? false\"\n          >\n          </ccf-ontology-selection>\n          <ccf-ontology-selection\n            class=\"cell-type-selection\"\n            [class.firefox]=\"isFirefox\"\n            *ngIf=\"isItemSelected('CT')\"\n            [showtoggle]=\"false\"\n            [treeModel]=\"(cellTypeTreeModel$ | async)!\"\n            [termData]=\"(data.cellTypeTermsFullData$ | async) ?? {}\"\n            [occurenceData]=\"(data.cellTypeTermOccurencesData$ | async) ?? {}\"\n            placeholderText=\"Search cell types...\"\n            (ontologySelection)=\"ontologySelected($any($event), 'cell-type')\"\n            [header]=\"(header$ | async) ?? false\"\n          >\n          </ccf-ontology-selection>\n          <ccf-ontology-selection\n            class=\"biomarker-selection\"\n            [class.firefox]=\"isFirefox\"\n            *ngIf=\"isItemSelected('B')\"\n            [showtoggle]=\"true\"\n            [treeModel]=\"(biomarkersTreeModel$ | async)!\"\n            [termData]=\"(data.biomarkerTermsFullData$ | async) ?? {}\"\n            [occurenceData]=\"(data.biomarkerTermOccurencesData$ | async) ?? {}\"\n            placeholderText=\"Search Biomarkers...\"\n            (ontologySelection)=\"ontologySelected($any($event), 'biomarkers')\"\n            [header]=\"(header$ | async) ?? false\"\n          >\n          </ccf-ontology-selection>\n\n          <div class=\"no-selection-notice\" *ngIf=\"selectedtoggleOptions.length === 0\">\n            No anatomical structures, cell types, or biomarkers selected. Use the above AS, CT, and B buttons to view\n            the registered listings.\n          </div>\n        </div>\n        <ccf-drawer-toggle-button></ccf-drawer-toggle-button>\n      </div>\n    </ccf-drawer>\n    <ccf-drawer class=\"right-drawer\" position=\"end\" opened #right (stateChange)=\"filterbox.removeBox()\">\n      <ccf-viewer class=\"portal-view\" [class.opened]=\"viewerOpen\" [url]=\"url\" (closed)=\"viewerOpen = false\">\n      </ccf-viewer>\n\n      <div class=\"drawer-icons\">\n        <div class=\"drawer-icons-left\">\n          <button\n            class=\"button\"\n            (click)=\"filterbox.removeBox(); right.toggleExpanded()\"\n            [matTooltip]=\"right.expanded ? 'Exit Fullscreen' : 'Enter Fullscreen'\"\n          >\n            <mat-icon class=\"icon\">{{ right.expanded ? 'fullscreen_exit' : 'fullscreen' }}</mat-icon>\n          </button>\n          <button\n            class=\"scheme-toggle button\"\n            (click)=\"toggleScheme()\"\n            [matTooltip]=\"isLightTheme ? 'Enter Dark Mode' : 'Enter Light Mode'\"\n          >\n            <mat-icon class=\"icon\">{{ isLightTheme ? 'brightness_2' : 'brightness_5' }} </mat-icon>\n          </button>\n          <button class=\"button\">\n            <mat-icon class=\"refresh icon\" (click)=\"reset(left, right, filterbox)\" matTooltip=\"Reset View\"\n              >refresh\n            </mat-icon>\n          </button>\n        </div>\n        <ccf-info-button\n          videoID=\"YAHJqvD3Q_8\"\n          infoTitle=\"HRA Exploration User Interface\"\n          [documentationUrl]=\"(baseHref$ | async) + 'assets/docs/README.md'\"\n          matTooltip=\"Open Info\"\n        >\n        </ccf-info-button>\n      </div>\n      <ccf-results-browser\n        [listResults]=\"(listResultsState.listResults$ | async) ?? []\"\n        [aggregateData]=\"(data.aggregateData$ | async) ?? []\"\n        [resultLabel]=\"selectionLabel\"\n        (listResultSelected)=\"listResultsState.selectListResult(asMutable($event))\"\n        (listResultDeselected)=\"listResultsState.deselectListResult(asMutable($event))\"\n        (linkClicked)=\"openiFrameViewer($event)\"\n        [highlighted]=\"(listResultsState.highlightedNodeId$ | async) ?? ''\"\n        (itemHovered)=\"listResultsState.highlightNode($event)\"\n        (itemUnhovered)=\"listResultsState.unHighlightNode()\"\n        [header]=\"(header$ | async) ?? false\"\n      >\n      </ccf-results-browser>\n      <ccf-drawer-toggle-button></ccf-drawer-toggle-button>\n    </ccf-drawer>\n\n    <ccf-drawer-content [class.header-hidden]=\"(header$ | async) === false\">\n      <div [class.closed]=\"!organListVisible\" class=\"selector-drawer\" [class.expanded]=\"selector.expanded\">\n        <ccf-organ-selector\n          #selector\n          class=\"organ-selector\"\n          [multiselect]=\"true\"\n          [occurenceData]=\"(data.ontologyTermOccurencesData$ | async) ?? {}\"\n          [organList]=\"$any(scene.referenceOrgans$ | async)\"\n          (organsChanged)=\"scene.setSelectedReferenceOrgans($event)\"\n          [selectedOrgans]=\"$any(scene.selectedReferenceOrgans$ | async)\"\n        >\n        </ccf-organ-selector>\n      </div>\n      <div class=\"close-button-wrapper\" [class.closed]=\"!organListVisible\">\n        <div *ngIf=\"organListVisible\" class=\"close-button\" (click)=\"selector.expanded = !selector.expanded\">\n          <mat-icon class=\"expand-collapse-icon\" aria-hidden=\"false\" aria-label=\"Expand carousel drawer\">\n            {{ selector.expanded ? 'arrow_drop_up' : 'arrow_drop_down' }}\n          </mat-icon>\n        </div>\n        <div *ngIf=\"!selector.expanded\" class=\"close-button\" (click)=\"organListVisible = !organListVisible\">\n          <mat-icon class=\"expand-collapse-icon\" aria-hidden=\"false\" aria-label=\"Close carousel drawer\">\n            {{ organListVisible ? 'arrow_drop_up' : 'arrow_drop_down' }}\n          </mat-icon>\n        </div>\n      </div>\n      <ccf-run-spatial-search></ccf-run-spatial-search>\n      <ccf-body-ui\n        #bodyUI\n        class=\"stage-content\"\n        [scene]=\"$any(scene.scene$ | async)\"\n        (nodeClick)=\"scene.sceneNodeClicked($event)\"\n        (nodeHoverStart)=\"scene.sceneNodeHovered($event)\"\n        (nodeHoverStop)=\"scene.sceneNodeUnhover()\"\n        [bounds]=\"{ x: 2.2, y: 2, z: 0.4 }\"\n        [class.expanded-stage]=\"!organListVisible\"\n        [class.selector-expanded]=\"selector.expanded\"\n      >\n      </ccf-body-ui>\n    </ccf-drawer-content>\n  </ccf-drawer-container>\n</div>\n","import { OverlayContainer } from '@angular/cdk/overlay';\nimport { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BodyUiModule, InfoButtonModule, OrganSelectorModule, TrackingPopupModule } from 'ccf-shared';\nimport { AppRootOverlayContainer } from './core/services/app-root-overlay/app-root-overlay.service';\n\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { DEFAULT_THEME } from '../app/core/services/theming/theming.service';\nimport { AppWebComponent } from './app-web-component.component';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { FiltersPopoverModule } from './modules/filters/filters-popover/filters-popover.module';\nimport { OntologyExplorationModule } from './modules/ontology-exploration/ontology-exploration.module';\nimport { ResultsBrowserModule } from './modules/results-browser/results-browser/results-browser.module';\nimport { ButtonToggleModule } from './shared/components/button-toggle/button-toggle.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\nimport { DualSliderModule } from './shared/components/dual-slider/dual-slider.module';\nimport { RunSpatialSearchModule } from './shared/components/run-spatial-search/run-spatial-search.module';\nimport { SpinnerOverlayModule } from './shared/components/spinner-overlay/spinner-overlay.module';\nimport { ViewerModule } from './shared/components/viewer/viewer.module';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    DrawerModule,\n    FiltersPopoverModule,\n    OntologyExplorationModule,\n    MatIconModule,\n    DualSliderModule,\n    ResultsBrowserModule,\n    SpinnerOverlayModule,\n    BodyUiModule,\n    OrganSelectorModule,\n    InfoButtonModule,\n    MatTooltipModule,\n    ViewerModule,\n    TrackingPopupModule,\n    MatSnackBarModule,\n    RunSpatialSearchModule,\n    MatSnackBarModule,\n    MatButtonToggleModule,\n    ButtonToggleModule,\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    { provide: DEFAULT_THEME, useValue: 'hubmap-theme-light' },\n    { provide: OverlayContainer, useExisting: AppRootOverlayContainer },\n  ],\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) {}\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector,\n    });\n\n    customElements.define('ccf-eui', appElement);\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { DataSourceService, MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\nimport { environment } from '../../environments/environment';\nimport { HeaderModule } from './header/header.module';\nimport { DelegateDataSourceService } from './services/data-source/data-source.service';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'eui',\n    }),\n    MousePositionTrackerModule,\n    HeaderModule,\n    StoreModule,\n    ThemingModule,\n  ],\n  providers: [{ provide: DataSourceService, useExisting: DelegateDataSourceService }],\n  exports: [HeaderModule],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n/**\n * Header which is always displayed on the site; contains current filter info,\n * a link to download data, and a logo which resets the page when clicked.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderComponent implements OnInit {\n  /**\n   * URL to Portal site\n   */\n  @Input() homeUrl!: string;\n\n  @Input() loginDisabled!: boolean;\n\n  @Input() logoTooltip!: string;\n\n  /**\n   * Is the user logged in?\n   */\n  @Input() loggedIn!: boolean;\n\n  /**\n   * Current filter settings\n   */\n  @Input() filters!: Record<string, unknown[] | unknown>;\n\n  @Input() baseRef = '';\n\n  /**\n   * Emitted when refresh button is clicked\n   */\n  @Output() readonly refreshClicked = new EventEmitter<void>();\n\n  /**\n   * Emitted when download button is clicked\n   */\n  @Output() readonly downloadClicked = new EventEmitter<void>();\n\n  ngOnInit() {\n    const theme = document.getElementsByTagName('ccf-root')[0].classList[0];\n    const logo = document.getElementsByClassName('logo')[0] as HTMLElement;\n    if (['hubmap-theme-dark', 'hubmap-theme-light'].includes(theme)) {\n      logo.style.backgroundImage = `url(${this.baseRef}assets/icons/app/hubmap-logo.svg)`;\n    } else if (['sennet-theme-dark', 'sennet-theme-light'].includes(theme)) {\n      logo.style.backgroundImage = `url(${this.baseRef}assets/icons/app/sennet-logo.svg)`;\n    } else if (['gtex-theme-dark', 'gtex-theme-light'].includes(theme)) {\n      logo.style.backgroundImage = `url(${this.baseRef}assets/icons/app/gtex-logo.png)`;\n    } else {\n      logo.style.backgroundImage = `url(${this.baseRef}assets/icons/app/default-logo.svg)`;\n    }\n  }\n}\n","<mat-toolbar class=\"ccf-header\">\n  <a class=\"home\" [href]=\"homeUrl\">\n    <div\n      class=\"logo\"\n      aria-hidden=\"false\"\n      aria-label=\"Reset tool\"\n      [matTooltip]=\"logoTooltip\"\n      matTooltipPosition=\"right\"\n    ></div>\n  </a>\n\n  <div class=\"filler\"></div>\n\n  <a\n    mat-button\n    class=\"authentication\"\n    [class.disabled]=\"loginDisabled || !homeUrl\"\n    *ngIf=\"!loggedIn\"\n    [href]=\"homeUrl + 'login'\"\n    rel=\"noreferrer noopener\"\n    target=\"_blank\"\n  >\n    LOGIN\n  </a>\n  <a\n    mat-button\n    class=\"authentication\"\n    [class.disabled]=\"loginDisabled || !homeUrl\"\n    *ngIf=\"loggedIn\"\n    [href]=\"homeUrl + 'logout'\"\n    rel=\"noreferrer noopener\"\n    target=\"_blank\"\n  >\n    LOGOUT\n  </a>\n</mat-toolbar>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent],\n})\nexport class HeaderModule {}\n","import { OntologyTreeNode } from 'ccf-database';\n\n/**\n * Node type used by ontology tree component.\n */\nexport class FlatNode {\n  visible?: boolean = true;\n\n  opacity?: number = 20;\n\n  numResults?: number;\n\n  /**\n   * Gets this node's label.\n   */\n  get label(): string {\n    return this.original.label;\n  }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean {\n    return this.original.children.length > 0;\n  }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyTreeNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(\n    readonly original: OntologyTreeNode,\n    readonly level: number,\n  ) {}\n}\n","import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ElementRef, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppRootOverlayContainer extends OverlayContainer {\n  private rootElement!: ElementRef<HTMLElement>;\n  private attached = false;\n\n  setRootElement(el: ElementRef<HTMLElement>): void {\n    if (this.attached) {\n      this.rootElement.nativeElement.removeChild(this._containerElement);\n      this.attached = false;\n    }\n\n    this.rootElement = el;\n    this.rootElement.nativeElement.style.display = 'block';\n    this.rootElement.nativeElement.style.position = 'contents';\n    this.rootElement.nativeElement.style.height = '100%';\n    this.appendToRoot();\n  }\n\n  protected override _createContainer(): void {\n    super._createContainer();\n    this.appendToRoot();\n  }\n\n  private appendToRoot(): void {\n    if (!this._containerElement || !this.rootElement) {\n      return;\n    }\n\n    this.rootElement.nativeElement.appendChild(this._containerElement);\n    this.attached = true;\n  }\n}\n","import { Injectable, ProviderToken } from '@angular/core';\nimport {\n  ApiEndpointDataSourceService,\n  CCFDatabaseDataSourceService,\n  DataSourceLike,\n  HybridCCfDatabaseDatasourceService,\n  InjectorDelegateDataSourceService,\n} from 'ccf-shared';\n\nimport { environment } from '../../../../environments/environment';\nimport { WorkerDataSourceService } from './worker-data-source.service';\n\nexport interface DelegateDataSourceOptions {\n  dataSources?: [];\n  useRemoteApi?: boolean;\n  remoteApiEndpoint?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DelegateDataSourceService extends InjectorDelegateDataSourceService<DelegateDataSourceOptions> {\n  protected selectToken(config: DelegateDataSourceOptions): ProviderToken<DataSourceLike> {\n    const { dataSources, useRemoteApi, remoteApiEndpoint } = config;\n\n    if (useRemoteApi && !!remoteApiEndpoint) {\n      if (dataSources && dataSources.length > 0) {\n        return HybridCCfDatabaseDatasourceService;\n      } else {\n        return ApiEndpointDataSourceService;\n      }\n    } else if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      return WorkerDataSourceService;\n    } else {\n      return CCFDatabaseDataSourceService;\n    }\n  }\n}\n","import { LocationStrategy } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { CCFDatabaseOptions } from 'ccf-database';\nimport { GlobalConfigState, WorkerCCFDatabaseDataSourceService } from 'ccf-shared';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorkerDataSourceService extends WorkerCCFDatabaseDataSourceService {\n  constructor(\n    globalConfig: GlobalConfigState<CCFDatabaseOptions>,\n    private readonly locator: LocationStrategy,\n  ) {\n    super(globalConfig);\n  }\n\n  protected createWorker(_config: CCFDatabaseOptions): Worker {\n    const url = this.getWorkerUrl(true);\n    return new Worker(url, { type: 'module' });\n  }\n\n  private getWorkerUrl(directImport: boolean): string | URL {\n    if (directImport) {\n      return new URL('./data-source.worker', import.meta.url);\n    }\n\n    const externalUrl = this.locator.prepareExternalUrl('0-es2015.worker.js');\n    const codeBlob = new Blob([`importScripts('${externalUrl}')`], { type: 'application/javascript' });\n\n    return URL.createObjectURL(codeBlob);\n  }\n}\n","import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { bind } from 'bind-decorator';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\nimport { at } from 'lodash';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyTreeNode, provides data associated with a search result */\n  node: OntologyTreeNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable()\nexport class OntologySearchService {\n  private readonly treeModel$ = new ReplaySubject<OntologyTreeModel>(1);\n  private treeModel!: OntologyTreeModel;\n\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.treeModel$.pipe(map((state) => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.treeModel$.pipe(map((state) => state.nodes[state.root]));\n\n  setTreeModel(treeModel: OntologyTreeModel): void {\n    this.treeModel$.next(treeModel);\n    this.treeModel = treeModel;\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   *\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable<SearchResult[]> {\n    return this.nodes$.pipe(map((nodes) => this.lookup(nodes, value.toLowerCase())));\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   *\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable<OntologyTreeNode>[], searchValue: string): SearchResult[] {\n    const searchResults = new Map<string, SearchResult>();\n\n    if (nodes) {\n      nodes.forEach((node) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node: node as OntologyTreeNode,\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(`${node.label} (${match})`, searchValue),\n              displayLabel: this.formatLabel(`${node.label} (${match})`, searchValue),\n              node: node as OntologyTreeNode,\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   *\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyTreeNode\n   *\n   * @param label label or first synonym-label of OntologyTreeNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.slice(0, index),\n      label.slice(index, index + searchValue.length),\n      label.slice(index + searchValue.length),\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  @bind\n  getChildren(node: OntologyTreeNode): OntologyTreeNode[] {\n    const nodes = this.treeModel?.nodes ?? {};\n    return at(nodes, node.children);\n  }\n}\n","import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n@NgModule({\n  providers: [{ provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true }, ThemingService],\n})\nexport class ThemingModule {}\n","import { OverlayContainer } from '@angular/cdk/overlay';\nimport {\n  ComponentRef,\n  ElementRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional,\n  Renderer2,\n} from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken<string>('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element!: ElementRef<unknown>;\n  private injector!: Injector;\n  /** Default theme class. */\n  private readonly defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef<unknown>): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef<unknown>, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Constructor = new (...args: any[]) => any;\n\n/**\n * Small utility for creating callables that construct a new action\n *\n * @param type Action type\n * @returns Callable that creates a new action when called\n */\nexport function actionAsFn<T extends Constructor>(type: T): (...args: ConstructorParameters<T>) => InstanceType<T> {\n  return (...args) => new type(...args);\n}\n","import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { DataAction, Payload, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF',\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record<string, Color>;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State<ColorAssignmentStateModel>({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: [],\n  },\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository<ColorAssignmentStateModel> {\n  private readonly forcedUnassignment = new Subject<void>();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(\n    map((x) => x?.colorAssignments),\n    distinctUntilChanged(),\n  );\n  readonly colorAssignmentsList$ = this.state$.pipe(\n    map((x) => x?.colorAssignmentsList),\n    distinctUntilChanged(),\n  );\n\n  getColor(key: string): Immutable<Color> | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable<Color> {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter((c) => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce<Record<string, Immutable<Color>>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList,\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter((a) => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce<Record<string, Immutable<Color>>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList,\n      });\n    }\n  }\n}\n","import { Filter } from 'ccf-database';\n\nexport class UpdateFilter {\n  static readonly type = '[DataState] Update filter';\n\n  constructor(readonly filter: Partial<Filter>) {}\n}\n","import { Selector } from '@ngxs/store';\nimport { Filter, OntologyTreeModel } from 'ccf-database';\nimport { DataState, DataStateModel } from './data.state';\n\nexport class DataStateSelectors {\n  @Selector([DataState])\n  static filter(state: DataStateModel): Filter {\n    return state.filter;\n  }\n\n  @Selector([DataState])\n  static anatomicalStructuresTreeModel(state: DataStateModel): OntologyTreeModel {\n    return state.anatomicalStructuresTreeModel ?? { root: '', nodes: {} };\n  }\n\n  @Selector([DataState])\n  static cellTypesTreeModel(state: DataStateModel): OntologyTreeModel {\n    return state.cellTypesTreeModel ?? { root: '', nodes: {} };\n  }\n\n  @Selector([DataState])\n  static biomarkersTreeModel(state: DataStateModel): OntologyTreeModel {\n    return state.biomarkersTreeModel ?? { root: '', nodes: {} };\n  }\n}\n","import { DataAction, Payload, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { Action, NgxsOnInit, State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport {\n  AggregateResult,\n  DatabaseStatus,\n  Filter,\n  OntologyTreeModel,\n  SpatialSceneNode,\n  TissueBlockResult,\n} from 'ccf-database';\nimport { DataSourceService } from 'ccf-shared';\nimport { combineLatest, defer, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport {\n  delay,\n  distinctUntilChanged,\n  filter as rxjsFilter,\n  map,\n  publishReplay,\n  refCount,\n  repeat,\n  switchMap,\n  take,\n  takeWhile,\n  tap,\n} from 'rxjs/operators';\n\nimport { UpdateFilter } from './data.actions';\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  consortiums: [],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702'],\n  cellTypeTerms: ['http://purl.obolibrary.org/obo/CL_0000000'],\n  biomarkerTerms: ['http://purl.org/ccf/biomarkers'],\n  spatialSearches: [],\n};\n\n/** Current state of data queries. */\n// eslint-disable-next-line no-shadow\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed',\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every((state) => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject<DataQueryState>): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData<T, O extends ObservableInput<unknown>>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf<O>) => void,\n): OperatorFunction<T, ObservedValueOf<O>> {\n  return (source) => source.pipe(switchMap(query), tap(next), publishReplay(1), refCount());\n}\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n  status: 'Loading' | 'Ready' | 'Error';\n  statusMessage: string;\n  anatomicalStructuresTreeModel?: OntologyTreeModel;\n  cellTypesTreeModel?: OntologyTreeModel;\n  biomarkersTreeModel?: OntologyTreeModel;\n}\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State<DataStateModel>({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER,\n    status: 'Loading',\n    statusMessage: 'Loading database',\n  },\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository<DataStateModel> implements NgxsOnInit {\n  /** Emits when the database is ready. */\n  readonly databaseReady$ = this.state$.pipe(\n    map((x) => x?.status),\n    distinctUntilChanged(),\n    rxjsFilter((status) => status === 'Ready'),\n  );\n\n  /** Implementation subject for tissueBlockDataQueryStatus$. */\n  private readonly _tissueBlockDataQueryStatus$ = new ReplaySubject<DataQueryState>(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject<DataQueryState>(1);\n  /** Implementation subject for ontologyTermOccurencesDataQueryStatus$. */\n  private readonly _ontologyTermOccurencesDataQueryStatus$ = new ReplaySubject<DataQueryState>(1);\n  /** Implementation subject for cellTypeTermOccurencesDataQueryStatus$. */\n  private readonly _cellTypeTermOccurencesDataQueryStatus$ = new ReplaySubject<DataQueryState>(1);\n  private readonly _biomarkerTermOccurencesDataQueryStatus$ = new ReplaySubject<DataQueryState>(1);\n\n  /** Implementation subject for sceneDataQueryStatus$. */\n  private readonly _sceneDataQueryStatus$ = new ReplaySubject<DataQueryState>(1);\n  /** Implementation subject for technologyFilterQueryStatus$. */\n  private readonly _technologyFilterQueryStatus$ = new ReplaySubject<DataQueryState>(1);\n  /** Implementation subject for providerFilterQueryStatus$. */\n  private readonly _providerFilterQueryStatus$ = new ReplaySubject<DataQueryState>(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$ = new ReplaySubject<Record<string, number>>(1);\n  /** Keeping track of all cell type terms there is data for. */\n  readonly cellTypeTermsFullData$ = new ReplaySubject<Record<string, number>>(1);\n  readonly biomarkerTermsFullData$ = new ReplaySubject<Record<string, number>>(1);\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(map((x) => x?.filter));\n  /** Latest tissue block query data. */\n  readonly tissueBlockData$ = this.filter$.pipe(\n    queryData(this.tissueBlockData, sendCompletedTo(this._tissueBlockDataQueryStatus$)),\n  );\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(\n    queryData(this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)),\n  );\n  /** Latest ontology term occurences query data. */\n  readonly ontologyTermOccurencesData$ = this.filter$.pipe(\n    queryData(this.ontologyTermOccurencesData, sendCompletedTo(this._ontologyTermOccurencesDataQueryStatus$)),\n  );\n  /** Latest ontology term occurences query data. */\n  readonly biomarkerTermOccurencesData$ = this.filter$.pipe(\n    queryData(this.biomarkerTermOccurencesData, sendCompletedTo(this._biomarkerTermOccurencesDataQueryStatus$)),\n  );\n  /** Latest cell type term occurences query data. */\n  readonly cellTypeTermOccurencesData$ = this.filter$.pipe(\n    queryData(this.cellTypeTermOccurencesData, sendCompletedTo(this._cellTypeTermOccurencesDataQueryStatus$)),\n  );\n  /** Latest scene query data. */\n  readonly sceneData$ = this.filter$.pipe(queryData(this.sceneData, sendCompletedTo(this._sceneDataQueryStatus$)));\n  /** Latest technology filter label query data. */\n  readonly technologyFilterData$ = this.filter$.pipe(\n    queryData(this.technologyFilterData, sendCompletedTo(this._technologyFilterQueryStatus$)),\n  );\n  /** Latest provider filter label query data. */\n  readonly providerFilterData$ = this.filter$.pipe(\n    queryData(this.providerFilterData, sendCompletedTo(this._providerFilterQueryStatus$)),\n  );\n\n  /** Current status of queries in the tissueBlockData$ observable. */\n  readonly tissueBlockDataQueryStatus$ = this._tissueBlockDataQueryStatus$.pipe(distinctUntilChanged());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinctUntilChanged());\n  /** Current status of queries in the ontologyTermOccurrences$ observable. */\n  readonly ontologyTermOccurencesDataQueryStatus$ =\n    this._ontologyTermOccurencesDataQueryStatus$.pipe(distinctUntilChanged());\n  /** Current status of queries in the cellTypeTermOccurrences$ observable. */\n  readonly cellTypeTermOccurencesDataQueryStatus$ =\n    this._cellTypeTermOccurencesDataQueryStatus$.pipe(distinctUntilChanged());\n\n  readonly biomarkerTermOccurencesDataQueryStatus$ =\n    this._biomarkerTermOccurencesDataQueryStatus$.pipe(distinctUntilChanged());\n  /** Current status of queries in the sceneData$ observable. */\n  readonly sceneDataQueryStatus$ = this._sceneDataQueryStatus$.pipe(distinctUntilChanged());\n  /** Current status of queries in the technologyFilter$ observable. */\n  readonly technologyFilterQueryStatus$ = this._technologyFilterQueryStatus$.pipe(distinctUntilChanged());\n  /** Current status of queries in the providerFilter$ observable. */\n  readonly providerFilterQueryStatus$ = this._providerFilterQueryStatus$.pipe(distinctUntilChanged());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.tissueBlockDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.ontologyTermOccurencesDataQueryStatus$,\n    this.cellTypeTermOccurencesDataQueryStatus$,\n    this.sceneDataQueryStatus$,\n    this.technologyFilterQueryStatus$,\n    this.providerFilterQueryStatus$,\n  ]).pipe(\n    map((states) => (allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running)),\n    distinctUntilChanged(),\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._tissueBlockDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._ontologyTermOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n    this._cellTypeTermOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n    this._sceneDataQueryStatus$.next(DataQueryState.Completed);\n    this._technologyFilterQueryStatus$.next(DataQueryState.Completed);\n    this._providerFilterQueryStatus$.next(DataQueryState.Completed);\n  }\n\n  override ngxsOnInit(): void {\n    const {\n      ontologyTermsFullData$,\n      ontologyTermOccurencesData$,\n      cellTypeTermsFullData$,\n      biomarkerTermsFullData$,\n      cellTypeTermOccurencesData$,\n      biomarkerTermOccurencesData$,\n      source,\n      snapshot: { filter },\n    } = this;\n\n    if (filter === DEFAULT_FILTER) {\n      // Common case - Reuse the result of the regular query\n      ontologyTermOccurencesData$.pipe(take(1)).subscribe(ontologyTermsFullData$);\n      cellTypeTermOccurencesData$.pipe(take(1)).subscribe(cellTypeTermsFullData$);\n      biomarkerTermOccurencesData$.pipe(take(1)).subscribe(biomarkerTermsFullData$);\n    } else {\n      source.getOntologyTermOccurences().pipe(take(1)).subscribe(ontologyTermsFullData$);\n      source.getCellTypeTermOccurences().pipe(take(1)).subscribe(cellTypeTermsFullData$);\n      source.getBiomarkerTermOccurences().pipe(take(1)).subscribe(biomarkerTermsFullData$);\n    }\n\n    this.source\n      .getOntologyTreeModel()\n      .pipe(take(1))\n      .subscribe((model) => this.updateAnatomicalStructuresTreeModel(model));\n    this.source\n      .getCellTypeTreeModel()\n      .pipe(take(1))\n      .subscribe((model) => this.updateCellTypesTreeModel(model));\n    this.source\n      .getBiomarkerTreeModel()\n      .pipe(take(1))\n      .subscribe((model) => this.updateBiomarkersTreeModel(model));\n    this.warmUpDatabase();\n  }\n\n  private warmUpDatabase(): void {\n    defer(() => this.source.getDatabaseStatus())\n      .pipe(\n        tap((status) => this.updateStatus(status)),\n        delay(2000),\n        take(1),\n      )\n      .pipe(\n        repeat(1000),\n        takeWhile((status) => status.status === 'Loading'),\n      )\n      .subscribe();\n\n    this.databaseReady$\n      .pipe(\n        take(1),\n        tap(() => {\n          this.updateStatus({\n            status: 'Ready',\n            message: 'Loading HRA Exploration User Interface (EUI)',\n          });\n        }),\n      )\n      .subscribe();\n  }\n\n  @DataAction()\n  updateAnatomicalStructuresTreeModel(@Payload('treeModel') model: OntologyTreeModel): void {\n    this.ctx.patchState({\n      anatomicalStructuresTreeModel: model,\n    });\n  }\n\n  @DataAction()\n  updateCellTypesTreeModel(@Payload('treeModel') model: OntologyTreeModel): void {\n    this.ctx.patchState({\n      cellTypesTreeModel: model,\n    });\n  }\n\n  @DataAction()\n  updateBiomarkersTreeModel(@Payload('treeModel') model: OntologyTreeModel): void {\n    this.ctx.patchState({\n      biomarkersTreeModel: model,\n    });\n  }\n\n  @DataAction()\n  updateStatus(@Payload('status') status: DatabaseStatus): void {\n    this.ctx.patchState({\n      status: status.status,\n      statusMessage: status.message,\n    });\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(@Payload('filter') filter: Partial<Filter>): void {\n    this.ctx.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: { ...this.getState().filter, ...filter },\n    });\n  }\n\n  @Action(UpdateFilter)\n  updateFilterHandler(_ctx: unknown, { filter }: UpdateFilter): void {\n    this.updateFilter(filter);\n  }\n\n  /**\n   * Queries for tissue block data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private tissueBlockData(filter: Filter): ObservableInput<TissueBlockResult[]> {\n    this._tissueBlockDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getTissueBlockResults(filter)));\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput<AggregateResult[]> {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getAggregateResults(filter)));\n  }\n\n  /**\n   * Queries for ontology term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private ontologyTermOccurencesData(filter: Filter): ObservableInput<Record<string, number>> {\n    this._ontologyTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getOntologyTermOccurences(filter)));\n  }\n\n  /**\n   * Queries for cell type term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private cellTypeTermOccurencesData(filter: Filter): ObservableInput<Record<string, number>> {\n    this._cellTypeTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getCellTypeTermOccurences(filter)));\n  }\n  @bind\n  private biomarkerTermOccurencesData(filter: Filter): ObservableInput<Record<string, number>> {\n    this._biomarkerTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getBiomarkerTermOccurences(filter)));\n  }\n\n  /**\n   * Queries for scene data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private sceneData(filter: Filter): ObservableInput<SpatialSceneNode[]> {\n    this._sceneDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getScene(filter)));\n  }\n\n  /**\n   * Queries for technology filter data.\n   *\n   * @returns The result of the query.\n   */\n  @bind\n  private technologyFilterData(): ObservableInput<string[]> {\n    this._technologyFilterQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getDatasetTechnologyNames()));\n  }\n\n  /**\n   * Queries for provider filter data.\n   *\n   * @returns The result of the query.\n   */\n  @bind\n  private providerFilterData(): ObservableInput<string[]> {\n    this._providerFilterQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getProviderNames()));\n  }\n}\n","/**\n * Object definition for icon that should be loaded on startup.\n * Unlike runtime registration object this does not need url ot html\n * to be sanitized before hand.\n */\nexport interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-brain.svg' },\n  { name: 'mammary-gland', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-breast.svg' },\n  { name: 'main-bronchus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-extrapulmonary-bronchus.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-left.svg' },\n  {\n    name: 'fallopian-tube-right',\n    namespace: 'app',\n    url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-right.svg',\n  },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-right.svg' },\n  { name: 'kidneys', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidneys.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-large-intestine.svg' },\n  { name: 'larynx', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-larynx.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lungs.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lymph-nodes.svg' },\n  { name: 'neurons', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-neurons.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-right.svg' },\n  { name: 'palatine-tonsil', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-palatine-tonsil.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pelvis.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-small-intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-thymus.svg' },\n  { name: 'trachea', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-trachea.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'expand_more', namespace: 'app', url: 'assets/icons/expand_more-24px.svg' },\n  { name: 'expand_less', namespace: 'app', url: 'assets/icons/expand_less-24px.svg' },\n  { name: 'filter', url: 'assets/icons/filter.svg' },\n];\n","import { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { State } from '@ngxs/store';\n\nimport { GlobalConfigState } from 'ccf-shared';\nimport { DEFAULT_ICONS } from './default-icons';\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State<void>({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository<void> {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    sanitizer: DomSanitizer,\n    private readonly globalConfig: GlobalConfigState<{ baseHref: string }>,\n  ) {\n    super();\n    this.globalConfig.getOption('baseHref').subscribe((ref) => {\n      for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n        const safeDef: IconDefinition = {\n          name,\n          namespace,\n          url: ref + url && sanitizer.bypassSecurityTrustResourceUrl(ref + url),\n          html: html && sanitizer.bypassSecurityTrustHtml(html),\n        };\n\n        this.registerIconImpl(safeDef);\n      }\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry as unknown as { [prop: string]: (...arg: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter((value) => !!value);\n  }\n}\n","import { DataAction, Payload, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { DataSourceService } from 'ccf-shared';\nimport { sortBy } from 'lodash';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, tap } from 'rxjs/operators';\nimport { ListResult } from '../../models/list-result';\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\n\nexport interface ListResultsStateModel {\n  listResults: ListResult[];\n  highlightedNodeId?: string;\n}\n\n@StateRepository()\n@State<ListResultsStateModel>({\n  name: 'listResults',\n  defaults: {\n    listResults: [],\n  },\n})\n@Injectable()\nexport class ListResultsState extends NgxsImmutableDataRepository<ListResultsStateModel> implements NgxsOnInit {\n  /** Scene to display in the 3d Scene */\n  readonly listResults$ = this.state$.pipe(\n    map((x) => x?.listResults),\n    distinctUntilChanged(),\n  );\n  readonly highlightedNodeId$ = this.state$.pipe(\n    map((x) => x?.highlightedNodeId),\n    distinctUntilChanged(),\n  );\n\n  /** The data state */\n  private dataState!: DataState;\n\n  /** Color assignments state */\n  private colorAssignments!: ColorAssignmentState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector,\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the list results\n   *\n   * @param listResults The list of results to display\n   */\n  @DataAction()\n  setListResults(@Payload('listResults') listResults: ListResult[]): void {\n    this.ctx.patchState({ listResults });\n  }\n\n  selectListResult(result: ListResult): void {\n    this.colorAssignments.assignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  deselectListResult(result: ListResult): void {\n    this.colorAssignments.unassignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  highlightNode(id: string): void {\n    this.ctx.patchState({ highlightedNodeId: id });\n  }\n\n  unHighlightNode(): void {\n    this.ctx.patchState({ highlightedNodeId: undefined });\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n\n    combineLatest([this.dataState.tissueBlockData$, this.colorAssignments.colorAssignments$])\n      .pipe(\n        map(([tissueBlocks, colors]) => {\n          const topBlocks: ListResult[] = [];\n          const otherBlocks: ListResult[] = [];\n\n          for (const tissueBlock of tissueBlocks) {\n            const color = colors[tissueBlock.spatialEntityId];\n            if (color) {\n              topBlocks.push({\n                selected: true,\n                color: color.color,\n                tissueBlock,\n                rank: color.rank,\n              });\n            } else {\n              otherBlocks.push({\n                selected: false,\n                tissueBlock,\n              });\n            }\n          }\n\n          return sortBy(topBlocks, ['rank']).concat(otherBlocks);\n        }),\n        tap((results) => this.setListResults(results)),\n      )\n      .subscribe();\n  }\n}\n","import { DataAction, Payload, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { NgxsOnInit, Selector, State } from '@ngxs/store';\nimport { NodeClickEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { SpatialEntity } from 'ccf-database';\nimport { ALL_POSSIBLE_ORGANS, DataSourceService, OrganInfo } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, take, tap } from 'rxjs/operators';\n\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\nimport { ListResultsState } from '../list-results/list-results.state';\n\nexport const DEFAULT_SELECTED_ORGANS = new Set([\n  'http://purl.obolibrary.org/obo/UBERON_0002097',\n  'http://purl.obolibrary.org/obo/UBERON_0004538',\n  'http://purl.obolibrary.org/obo/UBERON_0004539',\n  'http://purl.obolibrary.org/obo/UBERON_0000948',\n  'http://purl.obolibrary.org/obo/UBERON_0002113',\n  'http://purl.obolibrary.org/obo/UBERON_0002106',\n]);\n\nexport interface SceneStateModel {\n  scene: SpatialSceneNode[];\n  referenceOrgans: OrganInfo[];\n  referenceOrganEntities: SpatialEntity[];\n  selectedReferenceOrgans: OrganInfo[];\n\n  selectedAnatomicalStructures: unknown[];\n  anatomicalStructureSettings: {\n    [iri: string]: {\n      enabled: boolean;\n      visible: boolean;\n      opacity: boolean;\n    };\n  };\n  highlightedId?: string;\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State<SceneStateModel>({\n  name: 'scene',\n  defaults: {\n    scene: [],\n    referenceOrgans: [],\n    referenceOrganEntities: [],\n    selectedReferenceOrgans: [],\n    selectedAnatomicalStructures: [],\n    anatomicalStructureSettings: {},\n  },\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository<SceneStateModel> implements NgxsOnInit {\n  @Selector()\n  static referenceOrgans(state: SceneStateModel): OrganInfo[] {\n    return state.referenceOrgans;\n  }\n\n  @Selector()\n  static referenceOrganEntities(state: SceneStateModel): SpatialEntity[] {\n    return state.referenceOrganEntities;\n  }\n\n  /** Available Reference Organs */\n  readonly referenceOrgans$ = this.state$.pipe(\n    map((x) => x?.referenceOrgans),\n    distinctUntilChanged(),\n  );\n  /** Selected Reference Organs */\n  readonly selectedReferenceOrgans$ = this.state$.pipe(\n    map((x) => x?.selectedReferenceOrgans),\n    distinctUntilChanged(),\n  );\n  /** Scene to display in the 3d Scene */\n  readonly scene$ = this.state$.pipe(\n    map((x) => x?.scene),\n    distinctUntilChanged(),\n  );\n\n  readonly highlightedId$ = this.state$.pipe(\n    map((x) => x?.highlightedId),\n    distinctUntilChanged(),\n  );\n\n  /** The data state */\n  private dataState!: DataState;\n\n  /** Color assignments state */\n  private colorAssignments!: ColorAssignmentState;\n\n  private listResults!: ListResultsState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector,\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the selected reference organs\n   *\n   * @param referenceOrgans The selected reference organs selected\n   */\n  @DataAction()\n  setSelectedReferenceOrgans(@Payload('selectedReferenceOrgans') selectedReferenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ selectedReferenceOrgans });\n  }\n\n  /**\n   * Sets the reference organs\n   *\n   * @param referenceOrgans The reference organs available\n   */\n  @DataAction()\n  setReferenceOrgans(@Payload('referenceOrgans') referenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ referenceOrgans });\n  }\n\n  /**\n   * Sets the reference organ entities\n   *\n   * @param referenceOrganEntities The reference organ entities available\n   */\n  @DataAction()\n  setReferenceOrganEntities(@Payload('referenceOrganEntities') referenceOrganEntities: SpatialEntity[]): void {\n    this.ctx.patchState({ referenceOrganEntities });\n  }\n\n  /**\n   * Sets the scene\n   *\n   * @param scene The active scene to display\n   */\n  @DataAction()\n  setScene(@Payload('scene') scene: SpatialSceneNode[]): void {\n    this.ctx.patchState({ scene });\n  }\n\n  /**\n   * Handle scene node clicks\n   *\n   * @param param0 scene node click event\n   */\n  sceneNodeClicked({ node, ctrlClick }: NodeClickEvent): void {\n    if (\n      node.representation_of &&\n      node['@id'] !== 'http://purl.org/ccf/latest/ccf.owl#VHFSkin' &&\n      node.entityId // Disables this path. Need to update logic here.\n    ) {\n      this.dataState.updateFilter({ ontologyTerms: [node.representation_of] });\n    } else if (node.entityId) {\n      this.colorAssignments.assignColor(node['@id'], !ctrlClick);\n    }\n  }\n\n  sceneNodeHovered(node: SpatialSceneNode): void {\n    this.listResults.highlightNode(node['@id']);\n  }\n\n  sceneNodeUnhover(): void {\n    this.listResults.unHighlightNode();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  override ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n    this.listResults = this.injector.get(ListResultsState);\n    // Initialize reference organ info\n    this.dataService\n      .getReferenceOrgans()\n      .pipe(\n        tap((refOrgans) => this.setReferenceOrganEntities(refOrgans)),\n        map((refOrgans) => {\n          const organIds = new Set(refOrgans.map((o) => o.representation_of));\n          return ALL_POSSIBLE_ORGANS.filter((organ) => organIds.has(organ.id)).map((organ) => ({\n            ...organ,\n            disabled: false,\n            numResults: 0,\n          }));\n        }),\n        take(1),\n        tap((organs: OrganInfo[]) => this.setReferenceOrgans(organs)),\n      )\n      .subscribe();\n\n    // Update scene as the overall state changes\n    combineLatest([\n      this.dataState.sceneData$,\n      this.selectedReferenceOrgans$,\n      this.colorAssignments.colorAssignments$,\n      this.dataService.getReferenceOrgans(),\n      this.listResults.highlightedNodeId$,\n    ])\n      .pipe(\n        map(([scene, selectedOrgans, colors, refOrganData, highlightedNodeId]) => {\n          const activeOrgans = new Set(selectedOrgans.map((o) => o.id));\n          const refOrgans = new Set(\n            refOrganData.filter((o) => activeOrgans.has(o.representation_of)).map((o) => o['@id']),\n          );\n          return scene\n            .filter(\n              (node) =>\n                node.ccf_annotations?.some?.((tag) => activeOrgans.has(tag)) ??\n                (node.reference_organ && refOrgans.has(node.reference_organ)),\n            )\n            .map(\n              (node): SpatialSceneNode =>\n                node.entityId &&\n                (Object.prototype.hasOwnProperty.call(colors, node['@id']) || highlightedNodeId === node['@id'])\n                  ? {\n                      ...node,\n                      color:\n                        highlightedNodeId === node['@id']\n                          ? [30, 136, 229, 255]\n                          : (colors[node['@id']].rgba as [number, number, number, number]),\n                    }\n                  : node,\n            );\n        }),\n        tap((scene) => this.setScene(scene)),\n      )\n      .subscribe();\n  }\n\n  setSelectedReferenceOrgansWithDefaults(organs: OrganInfo[], selected: string[]) {\n    const selectedSet = new Set(selected?.length ? selected : DEFAULT_SELECTED_ORGANS);\n    const filteredOrgans = organs.filter(({ id }) => selectedSet.has(id as string));\n    this.setSelectedReferenceOrgans(filteredOrgans);\n  }\n}\n","import { SpatialSearch } from 'ccf-database';\n\nimport { Sex } from '../../../shared/components/spatial-search-config/spatial-search-config.component';\n\nimport type { SpatialSearchFilterItem } from './spatial-search-filter.state';\n\nexport class AddSearch {\n  static readonly type = '[Spatial Search Filter] Add';\n\n  constructor(\n    readonly sex: Sex,\n    readonly organName: string,\n    readonly search: SpatialSearch,\n  ) {}\n}\n\nexport class RemoveSearch {\n  static readonly type = '[Spatial Search Filter] Remove';\n\n  constructor(readonly id: string) {}\n}\n\nexport class SetSelectedSearches {\n  static readonly type = '[Spatial Search Filter] Set selected searches';\n\n  constructor(readonly items: SpatialSearchFilterItem[]) {}\n}\n","import { Selector } from '@ngxs/store';\nimport { SpatialSearch } from 'ccf-database';\n\nimport {\n  SpatialSearchFilterItem,\n  SpatialSearchFilterModel,\n  SpatialSearchFilterState,\n} from './spatial-search-filter.state';\n\nexport class SpatialSearchFilterSelectors {\n  @Selector([SpatialSearchFilterState])\n  static items(state: SpatialSearchFilterModel): SpatialSearchFilterItem[] {\n    return state;\n  }\n\n  @Selector([SpatialSearchFilterSelectors.items])\n  static searches(items: SpatialSearchFilterItem[]): SpatialSearch[] {\n    return items.map((item) => item.search);\n  }\n\n  @Selector([SpatialSearchFilterSelectors.items])\n  static selectedSearches(items: SpatialSearchFilterItem[]): SpatialSearch[] {\n    return items.filter((item) => item.selected).map((item) => item.search);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Action, State, StateContext } from '@ngxs/store';\nimport { append, removeItem } from '@ngxs/store/operators';\nimport { SpatialSearch } from 'ccf-database';\nimport { SpatialSearchListItem } from 'ccf-shared';\n\nimport { Sex } from '../../../shared/components/spatial-search-config/spatial-search-config.component';\nimport { AddSearch, RemoveSearch, SetSelectedSearches } from './spatial-search-filter.actions';\n\nexport interface SpatialSearchFilterItem extends SpatialSearchListItem {\n  id: string;\n  search: SpatialSearch;\n  sex: Sex;\n}\n\nexport type SpatialSearchFilterModel = SpatialSearchFilterItem[];\n\n@State<SpatialSearchFilterModel>({\n  name: 'spatialSearchFilter',\n  defaults: [],\n})\n@Injectable()\nexport class SpatialSearchFilterState {\n  @Action(AddSearch)\n  addSearch(ctx: StateContext<SpatialSearchFilterModel>, { sex, organName, search }: AddSearch): void {\n    ctx.setState(append([this.createItem(sex, organName, search)]));\n  }\n\n  @Action(RemoveSearch)\n  removeSearch(ctx: StateContext<SpatialSearchFilterModel>, { id }: RemoveSearch): void {\n    ctx.setState(removeItem((item) => item?.id === id));\n  }\n\n  @Action(SetSelectedSearches)\n  setSelectedSearches(ctx: StateContext<SpatialSearchFilterModel>, { items }: SetSelectedSearches): void {\n    const selectedByIds = new Map(items.map((item) => [item.id, item]));\n    const oldItems = ctx.getState();\n    const newItems = oldItems.map(\n      (item) => selectedByIds.get(item.id) ?? (item.selected ? { ...item, selected: false } : item),\n    );\n\n    ctx.setState(newItems);\n  }\n\n  private createItem(sex: Sex, name: string, search: SpatialSearch): SpatialSearchFilterItem {\n    return {\n      id: this.createItemId(search),\n      selected: true,\n      description: this.createItemDescription(sex, name, search),\n      sex,\n      search,\n    };\n  }\n\n  private createItemId(search: SpatialSearch): string {\n    const { x, y, z, radius, target } = search;\n    return `${target}-${radius}-${x},${y},${z}`;\n  }\n\n  private createItemDescription(sex: Sex, name: string, search: SpatialSearch): string {\n    const capitalize = (value: string) => value.slice(0, 1).toUpperCase() + value.slice(1);\n    const { x, y, z, radius } = search;\n\n    return `${capitalize(sex)}, ${capitalize(name)}, ${radius.toFixed(1)} mm, X: ${x.toFixed(1)}, Y: ${y.toFixed(\n      1,\n    )}, Z: ${z.toFixed(1)}`;\n  }\n}\n","import { SpatialSceneNode } from 'ccf-body-ui';\n\nexport class StartSpatialSearchFlow {\n  static readonly type = '[SpatialSearchUi] Start the Spatial Search flow';\n}\n\nexport class SetSex {\n  static readonly type = '[SpatialSearchUi] Set sex';\n\n  constructor(readonly sex: 'male' | 'female') {}\n}\n\nexport class SetOrgan {\n  static readonly type = '[SpatialSearchUi] Set organ';\n\n  constructor(readonly organId: string | undefined) {}\n}\n\nexport class SetPosition {\n  static readonly type = '[SpatialSearchUi] Set position';\n\n  constructor(readonly position: { x: number; y: number; z: number }) {}\n}\n\nexport class MoveToNode {\n  static readonly type = '[SpatialSearchUi] Start moving the position to a scene node';\n\n  constructor(readonly node: SpatialSceneNode) {}\n}\n\nexport class ResetPosition {\n  static readonly type = '[SpatialSearchUi] Reset position';\n}\n\nexport class SetRadius {\n  static readonly type = '[SpatialSearchUi] Set radius';\n\n  constructor(readonly radius: number) {}\n}\n\nexport class ResetRadius {\n  static readonly type = '[SpatialSearchUi] Reset radius';\n}\n\nexport class UpdateSpatialSearch {\n  static readonly type = '[SpatialSearchUi] Update spatial search data';\n}\n\nexport class GenerateSpatialSearch {\n  static readonly type = '[SpatialSearchUi] Generate and add a spatial search';\n}\n\nexport class SetExecuteSearchOnGenerate {\n  static readonly type = '[SpatialSearchUi] Set execute search on generate';\n\n  constructor(readonly execute = true) {}\n}\n","import { Selector } from '@ngxs/store';\nimport { SpatialSceneNode } from 'ccf-body-ui';\nimport { getProbingSphereScene, OntologyTreeModel, SpatialEntity, TissueBlockResult } from 'ccf-database';\nimport { OrganInfo } from 'ccf-shared';\n\nimport { Sex } from '../../../shared/components/spatial-search-config/spatial-search-config.component';\nimport { DataStateSelectors } from '../data/data.selectors';\nimport {\n  Position,\n  RadiusSettings,\n  SpatialSearchUiModel,\n  SpatialSearchUiState,\n  TermResult,\n} from './spatial-search-ui.state';\n\nexport class SpatialSearchUiSelectors {\n  static readonly organEntity = SpatialSearchUiState.organEntity;\n\n  @Selector([SpatialSearchUiState])\n  static sex(state: SpatialSearchUiModel): Sex {\n    return state.sex;\n  }\n\n  @Selector([SpatialSearchUiState])\n  static referenceOrgans(state: SpatialSearchUiModel): OrganInfo[] {\n    return state.referenceOrgans ?? [];\n  }\n\n  @Selector([SpatialSearchUiState])\n  static organId(state: SpatialSearchUiModel): string | undefined {\n    return state.organId;\n  }\n\n  @Selector([SpatialSearchUiSelectors.organId, SpatialSearchUiSelectors.referenceOrgans])\n  static organ(id: string | undefined, organs: OrganInfo[]): OrganInfo | undefined {\n    if (id === undefined) {\n      return undefined;\n    }\n\n    return organs.find((organ) => organ.id === id);\n  }\n\n  @Selector([SpatialSearchUiSelectors.sex, SpatialSearchUiSelectors.referenceOrgans])\n  static organs(sex: Sex, organs: OrganInfo[]): OrganInfo[] {\n    return organs.filter((organ) => this.organMatchesSex(organ, sex));\n  }\n\n  static organMatchesSex(organ: OrganInfo, sex: Sex): boolean {\n    return organ.hasSex || organ.sex === sex;\n  }\n\n  @Selector([SpatialSearchUiState])\n  static position(state: SpatialSearchUiModel): Position {\n    return state.position ?? { x: 0, y: 0, z: 0 };\n  }\n\n  @Selector([SpatialSearchUiState])\n  static defaultPosition(state: SpatialSearchUiModel): Position {\n    return state.defaultPosition ?? { x: 0, y: 0, z: 0 };\n  }\n\n  @Selector([SpatialSearchUiState])\n  static radius(state: SpatialSearchUiModel): number {\n    return state.radius ?? 0;\n  }\n\n  @Selector([SpatialSearchUiState])\n  static radiusSettings(state: SpatialSearchUiModel): RadiusSettings {\n    return state.radiusSettings ?? { min: 0, max: 0, defaultValue: 0 };\n  }\n\n  @Selector([\n    SpatialSearchUiState,\n    SpatialSearchUiState.organEntity,\n    SpatialSearchUiSelectors.position,\n    SpatialSearchUiSelectors.radius,\n  ])\n  static scene(\n    state: SpatialSearchUiModel,\n    organEntity: SpatialEntity,\n    position: Position,\n    radius: number,\n  ): SpatialSceneNode[] {\n    const sphere = getProbingSphereScene(organEntity, {\n      ...position,\n      radius,\n      target: organEntity['@id'],\n    });\n    const collisions = new Set((state.tissueBlocks ?? []).map((block) => block.spatialEntityId));\n    const organScene = (state.organScene ?? []).map((s) => {\n      if (collisions.has(s['@id'])) {\n        s = { ...s, color: [41, 121, 255, 0.9 * 255] };\n      }\n      return s;\n    });\n    return organScene.concat(sphere);\n  }\n\n  @Selector([SpatialSearchUiState.organEntity])\n  static sceneBounds(organEntity: SpatialEntity): Position {\n    const { x_dimension: x, y_dimension: y, z_dimension: z } = organEntity;\n    const margin = Math.max(x, y, z) * 0.42;\n    return {\n      x: (margin + x) / 1000,\n      y: (margin + y) / 1000,\n      z: (margin + z) / 1000,\n    };\n  }\n\n  @Selector([SpatialSearchUiState.organEntity])\n  static sceneTarget(organEntity: SpatialEntity): [number, number, number] {\n    const { x_dimension: x, y_dimension: y, z_dimension: z } = organEntity;\n    return [x / 1000 / 2, y / 1000 / 2, z / 1000 / 2];\n  }\n\n  @Selector([SpatialSearchUiState])\n  static tissueBlocks(state: SpatialSearchUiModel): TissueBlockResult[] {\n    return state.tissueBlocks ?? [];\n  }\n\n  @Selector([SpatialSearchUiState, DataStateSelectors.anatomicalStructuresTreeModel])\n  static anatomicalStructures(state: SpatialSearchUiModel, tree: OntologyTreeModel): TermResult[] {\n    return this.getTermCounts(state.anatomicalStructures, tree);\n  }\n\n  @Selector([SpatialSearchUiState, DataStateSelectors.cellTypesTreeModel])\n  static cellTypes(state: SpatialSearchUiModel, tree: OntologyTreeModel): TermResult[] {\n    return this.getTermCounts(state.cellTypes, tree);\n  }\n\n  private static getTermCounts(counts: Record<string, number> | undefined, tree: OntologyTreeModel): TermResult[] {\n    return Object.entries(counts ?? {})\n      .filter(([_, count]) => count > 0)\n      .map(([term, count]) => ({\n        '@id': term,\n        label: tree.nodes[term]?.label ?? term.split('/').slice(-1)[0],\n        count,\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport { Action, Actions, ofActionDispatched, Selector, State, StateContext, Store } from '@ngxs/store';\nimport {\n  Filter,\n  getOriginScene,\n  SpatialEntity,\n  SpatialSceneNode,\n  SpatialSearch,\n  TissueBlockResult,\n} from 'ccf-database';\nimport { DataSourceService, OrganInfo } from 'ccf-shared';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { forkJoin, Observable } from 'rxjs';\nimport { debounceTime, mergeMap, take, tap } from 'rxjs/operators';\n\nimport { Sex } from '../../../shared/components/spatial-search-config/spatial-search-config.component';\nimport { UpdateFilter } from '../data/data.actions';\nimport { DataStateSelectors } from '../data/data.selectors';\nimport { SceneState } from '../scene/scene.state';\nimport { AddSearch } from '../spatial-search-filter/spatial-search-filter.actions';\nimport { SpatialSearchFilterSelectors } from '../spatial-search-filter/spatial-search-filter.selectors';\nimport {\n  GenerateSpatialSearch,\n  MoveToNode,\n  ResetPosition,\n  ResetRadius,\n  SetExecuteSearchOnGenerate,\n  SetOrgan,\n  SetPosition,\n  SetRadius,\n  SetSex,\n  StartSpatialSearchFlow,\n  UpdateSpatialSearch,\n} from './spatial-search-ui.actions';\n\nexport interface Position {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport interface RadiusSettings {\n  min: number;\n  max: number;\n  defaultValue: number;\n}\n\nexport interface TermResult {\n  '@id': string;\n  label: string;\n  count: number;\n}\n\nexport interface SpatialSearchUiModel {\n  sex: Sex;\n  organId?: string;\n  position?: Position;\n  radius?: number;\n\n  defaultPosition?: Position;\n  radiusSettings?: RadiusSettings;\n\n  referenceOrgans?: OrganInfo[];\n  organScene?: SpatialSceneNode[];\n\n  spatialSearchScene?: SpatialSceneNode[];\n  tissueBlocks?: TissueBlockResult[];\n  anatomicalStructures?: Record<string, number>;\n  cellTypes?: Record<string, number>;\n\n  executeSearchOnGeneration: boolean;\n}\n\nclass ReallyUpdateSpatialSearch {\n  static readonly type = '[SpatialSearchUi] Really update spatial search data';\n}\n\n@State<SpatialSearchUiModel>({\n  name: 'spatialSearchUi',\n  defaults: {\n    sex: 'female',\n    executeSearchOnGeneration: true,\n  },\n})\n@Injectable()\nexport class SpatialSearchUiState {\n  @Selector([SpatialSearchUiState, SceneState.referenceOrganEntities])\n  static organEntity(state: SpatialSearchUiModel, organs: SpatialEntity[]): SpatialEntity | undefined {\n    const { organId, sex } = state;\n    return organs.find((o) => o.representation_of === organId && o.sex?.toLowerCase() === sex);\n  }\n\n  constructor(\n    private readonly dataSource: DataSourceService,\n    private readonly store: Store,\n    actions$: Actions,\n    private readonly ga: GoogleAnalyticsService,\n  ) {\n    actions$\n      .pipe(\n        ofActionDispatched(UpdateSpatialSearch),\n        debounceTime(500),\n        tap(() => store.dispatch(ReallyUpdateSpatialSearch)),\n      )\n      .subscribe();\n  }\n\n  @Action(StartSpatialSearchFlow)\n  startSpatialSearchFlow(ctx: StateContext<SpatialSearchUiModel>): Observable<unknown> {\n    const { sex, organId } = ctx.getState();\n    const shortOrgan = organId?.split('/').slice(-1)[0];\n    this.ga.event('set_organ', 'spatial_search_ui', `${sex}_${shortOrgan}`);\n\n    return ctx.dispatch(new SetSex(sex));\n  }\n\n  /**\n   * Updates sex in the SpatialSearchUI and sets selected organ to undefined if not valid for the sex\n   */\n  @Action(SetSex)\n  setSex(ctx: StateContext<SpatialSearchUiModel>, { sex }: SetSex): Observable<unknown> | void {\n    let { organId } = ctx.getState();\n    ctx.patchState({ sex });\n    this.ga.event('set_sex', 'spatial_search_ui', sex);\n\n    if (organId !== undefined && !this.organValidForSex(organId, sex)) {\n      organId = undefined;\n    }\n\n    const filter = {\n      ...this.store.selectSnapshot(DataStateSelectors.filter),\n      spatialSearches: [],\n    };\n    const referenceOrgans = this.store.selectSnapshot(SceneState.referenceOrgans);\n\n    return this.dataSource.getOntologyTermOccurences(filter).pipe(\n      take(1),\n      tap((counts: Record<string, number>) => {\n        ctx.patchState({\n          referenceOrgans: referenceOrgans.filter((o) => o.id && !o.disabled && counts[o.id] > 0),\n        });\n        ctx.dispatch(new SetOrgan(organId));\n      }),\n    );\n  }\n\n  /**\n   * Updates organId in the SpatialSearchUI\n   */\n  @Action(SetOrgan)\n  setOrgan(ctx: StateContext<SpatialSearchUiModel>, { organId }: SetOrgan): Observable<unknown> | void {\n    const { sex } = ctx.getState();\n    ctx.patchState({ sex, organId });\n    const shortOrgan = organId?.split('/').slice(-1)[0];\n    this.ga.event('set_organ', 'spatial_search_ui', shortOrgan);\n\n    const organ = this.store.selectSnapshot(SpatialSearchUiState.organEntity);\n    if (organ && organId && organ.sex) {\n      const { x_dimension: width, y_dimension: height, z_dimension: depth } = organ;\n      const position = { x: Math.round(width / 2), y: Math.round(height / 2), z: Math.round(depth / 2) };\n      const defaultRadius = Math.round(Math.max(width, height, depth) * 0.07);\n      const globalFilter = this.store.selectSnapshot(DataStateSelectors.filter);\n      const filter = {\n        ...globalFilter,\n        sex: organ.sex,\n        ontologyTerms: [organId],\n        spatialSearches: [],\n      };\n\n      return this.dataSource.getReferenceOrganScene(organId, filter).pipe(\n        take(1),\n        tap((organScene: SpatialSceneNode[]) => {\n          ctx.patchState({\n            position,\n            radius: defaultRadius,\n            defaultPosition: position,\n            radiusSettings: {\n              min: Math.min(defaultRadius, 5),\n              max: Math.floor(Math.max(width, height, depth) / 1.5),\n              defaultValue: defaultRadius,\n            },\n            organScene: getOriginScene(organ).concat(organScene),\n          });\n        }),\n        mergeMap(() => ctx.dispatch(new UpdateSpatialSearch())),\n      );\n    }\n  }\n\n  /**\n   * Updates position in the SpatialSearchUI\n   */\n  @Action(SetPosition)\n  setPosition(ctx: StateContext<SpatialSearchUiModel>, { position }: SetPosition): void {\n    ctx.patchState({ position });\n    ctx.dispatch(new UpdateSpatialSearch());\n\n    const { x, y, z } = position;\n    this.ga.event('set_position', 'spatial_search_ui', `${x}_${y}_${z}`);\n  }\n\n  @Action(ResetPosition)\n  resetPosition(ctx: StateContext<SpatialSearchUiModel>): void {\n    const { defaultPosition } = ctx.getState();\n    ctx.patchState({ position: defaultPosition });\n    ctx.dispatch(new UpdateSpatialSearch());\n\n    const { x, y, z } = defaultPosition ?? { x: 0, y: 0, z: 0 };\n    this.ga.event('reset_position', 'spatial_search_ui', `${x}_${y}_${z}`);\n  }\n\n  @Action(MoveToNode)\n  moveToNode(ctx: StateContext<SpatialSearchUiModel>, { node }: MoveToNode): Observable<unknown> | void {\n    const matrix = new Matrix4(node.transformMatrix);\n    const [x, y, z] = matrix.getTranslation().map((n) => Math.round(n * 1000));\n    const position: Position = { x, y, z };\n\n    return ctx.dispatch(new SetPosition(position));\n  }\n\n  /**\n   * Updates radius in the SpatialSearchUI\n   */\n  @Action(SetRadius)\n  setRadius(ctx: StateContext<SpatialSearchUiModel>, { radius }: SetRadius): void {\n    ctx.patchState({ radius });\n    ctx.dispatch(new UpdateSpatialSearch());\n\n    this.ga.event('set_radius', 'spatial_search_ui', radius.toFixed(1));\n  }\n\n  @Action(ResetRadius)\n  resetRadius(ctx: StateContext<SpatialSearchUiModel>): void {\n    const { radiusSettings } = ctx.getState();\n    const radius = radiusSettings?.defaultValue ?? 0;\n    ctx.patchState({ radius });\n    ctx.dispatch(new UpdateSpatialSearch());\n\n    this.ga.event('reset_radius', 'spatial_search_ui', radius.toFixed(1));\n  }\n\n  /**\n   * Updates the spatial search data as the organ, position, and radius changes\n   */\n  @Action(ReallyUpdateSpatialSearch)\n  updateSpatialSearch(ctx: StateContext<SpatialSearchUiModel>): Observable<unknown> | void {\n    const { position, radius } = ctx.getState();\n    const organ = this.store.selectSnapshot(SpatialSearchUiState.organEntity);\n    if (organ && position && radius && organ.representation_of) {\n      const db = this.dataSource;\n      const organId = organ.representation_of;\n      const globalFilter = this.store.selectSnapshot(DataStateSelectors.filter);\n      const filter: Filter = {\n        ...globalFilter,\n        sex: organ.sex as 'Male' | 'Female',\n        ontologyTerms: [organId],\n        spatialSearches: [\n          {\n            ...position,\n            radius: radius,\n            target: organ['@id'],\n          },\n        ],\n      };\n\n      return forkJoin({\n        spatialSearchScene: db.getReferenceOrganScene(organId, filter).pipe(take(1)),\n        tissueBlocks: db.getTissueBlockResults(filter).pipe(take(1)),\n        anatomicalStructures: db.getOntologyTermOccurences(filter).pipe(take(1)),\n        cellTypes: db.getCellTypeTermOccurences(filter).pipe(take(1)),\n      }).pipe(tap((data: Partial<SpatialSearchUiModel>) => ctx.patchState(data)));\n    }\n  }\n\n  /**\n   * Generates and adds a new spatial search then resets the ui state\n   */\n  @Action(GenerateSpatialSearch)\n  generateSpatialSearch(ctx: StateContext<SpatialSearchUiModel>): Observable<unknown> | void {\n    const { position, radius, sex, organId, referenceOrgans = [], executeSearchOnGeneration } = ctx.getState();\n    const organ = this.store.selectSnapshot(SpatialSearchUiState.organEntity);\n    const info = referenceOrgans.find((item) => item.id === organId);\n\n    if (position && radius && organ?.representation_of && info) {\n      const search: SpatialSearch = {\n        ...position,\n        radius,\n        target: organ['@id'],\n      };\n      const actions: unknown[] = [new AddSearch(sex, info.name, search)];\n\n      if (executeSearchOnGeneration) {\n        const searches = this.store.selectSnapshot(SpatialSearchFilterSelectors.selectedSearches);\n        actions.push(\n          new UpdateFilter({\n            spatialSearches: searches.concat(search),\n          }),\n        );\n      }\n\n      this.ga.event('generate_search', 'spatial_search_ui');\n      return ctx.dispatch(actions).pipe(\n        tap(() =>\n          ctx.patchState({\n            sex: 'female',\n            organId: undefined,\n          }),\n        ),\n      );\n    }\n  }\n\n  @Action(SetExecuteSearchOnGenerate)\n  setExecuteSearchOnGenerate(ctx: StateContext<SpatialSearchUiModel>, { execute }: SetExecuteSearchOnGenerate): void {\n    ctx.patchState({\n      executeSearchOnGeneration: execute,\n    });\n  }\n\n  /**\n   * Used to determine if an organ should be listed if a certain sex is selected\n   */\n  private organValidForSex(organId: string, sex: Sex): boolean {\n    const organs = this.store.selectSnapshot(SceneState.referenceOrgans);\n    const organ = organs.find((o) => o.id === organId);\n    return organ?.hasSex || organ?.sex === sex;\n  }\n}\n","import { NgxsDataPluginModule } from '@angular-ru/ngxs';\nimport { NgModule } from '@angular/core';\nimport { NgxsDispatchPluginModule } from '@ngxs-labs/dispatch-decorator';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { CallToActionState, GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\nimport { ColorAssignmentState } from './color-assignment/color-assignment.state';\nimport { DataState } from './data/data.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ListResultsState } from './list-results/list-results.state';\nimport { SceneState } from './scene/scene.state';\nimport { SpatialSearchFilterState } from './spatial-search-filter/spatial-search-filter.state';\nimport { SpatialSearchUiState } from './spatial-search-ui/spatial-search-ui.state';\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  ColorAssignmentState,\n  IconRegistryState,\n  ListResultsState,\n  DataState,\n  SceneState,\n  CallToActionState,\n  SpatialSearchUiState,\n  SpatialSearchFilterState,\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production,\n      selectorOptions: {\n        injectContainerState: false,\n      },\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    NgxsDispatchPluginModule.forRoot(),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production,\n    }),\n  ],\n})\nexport class StoreModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { DEFAULT_FILTER } from '../../../core/store/data/data.state';\nimport { SpatialSearchFilterItem } from '../../../core/store/spatial-search-filter/spatial-search-filter.state';\nimport { Sex } from '../../../shared/components/spatial-search-config/spatial-search-config.component';\n\n/**\n * Contains components of the filters popup and handles changes in filter settings\n */\n@Component({\n  selector: 'ccf-filters-content',\n  templateUrl: './filters-content.component.html',\n  styleUrls: ['./filters-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FiltersContentComponent implements OnChanges {\n  /**\n   * Determines if the filters are visible\n   */\n  @Input() hidden!: boolean;\n\n  /**\n   * Allows the filters to be set from outside the component\n   */\n  @Input() filters?: Record<string, unknown | unknown[]>;\n\n  /**\n   * List of technologies in the data\n   */\n  @Input() technologyFilters!: string[];\n\n  /**\n   * List of providers in the data\n   */\n  @Input() providerFilters!: string[];\n\n  /**\n   * List of spatial searches\n   */\n  @Input() spatialSearchFilters: SpatialSearchFilterItem[] = [];\n\n  /**\n   * Emits the filter change when they happen\n   */\n  @Output() readonly filtersChange = new EventEmitter<Record<string, unknown>>();\n\n  /**\n   * Emits when a spatial search is selected/deselected\n   */\n  @Output() readonly spatialSearchSelected = new EventEmitter<SpatialSearchFilterItem[]>();\n\n  /**\n   * Emits when a spatial search is removed/deleted\n   */\n  @Output() readonly spatialSearchRemoved = new EventEmitter<string>();\n\n  /**\n   * Emits the filters to be applied\n   */\n  @Output() readonly applyFilters = new EventEmitter<Record<string, unknown>>();\n\n  get sex(): Sex {\n    return this.getFilterValue<string>('sex', 'male')?.toLowerCase() as Sex;\n  }\n\n  get ageRange(): number[] {\n    return this.getFilterValue<number[]>('ageRange', []);\n  }\n\n  get bmiRange(): number[] {\n    return this.getFilterValue<number[]>('bmiRange', []);\n  }\n\n  get technologies(): string[] {\n    return this.getFilterValue<string[]>('technologies', []);\n  }\n\n  get tmc(): string[] {\n    return this.getFilterValue<string[]>('tmc', []);\n  }\n\n  /**\n   * Creates an instance of filters content component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Handle input changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('spatialSearchFilters' in changes) {\n      this.updateSexFromSelection(this.spatialSearchFilters.filter((item) => item.selected));\n    }\n  }\n\n  /**\n   * Updates the filter object with a new key/value\n   *\n   * @param value The value to be saved for the filter\n   * @param key The key for the filter to be saved at\n   */\n  updateFilter(value: unknown, key: string): void {\n    this.filters = { ...this.filters, [key]: value };\n    this.ga.event('filter_update', 'filter_content', `${key}:${value}`);\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits the current filters when the apply button is clicked\n   */\n  applyButtonClick(): void {\n    this.updateSearchSelection(this.spatialSearchFilters.filter((item) => item.selected));\n    this.ga.event('filters_applied', 'filter_content');\n    this.applyFilters.emit(this.filters);\n  }\n\n  /**\n   * Refreshes all filter settings\n   */\n  refreshFilters(): void {\n    this.filters = JSON.parse(JSON.stringify(DEFAULT_FILTER));\n    this.ga.event('filters_reset', 'filter_content');\n    this.spatialSearchSelected.emit([]);\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits events for updated searches\n   *\n   * @param items New set of selected items\n   */\n  updateSearchSelection(items: SpatialSearchFilterItem[]): void {\n    const searches = items.map((item) => item.search);\n\n    this.spatialSearchSelected.emit(items);\n    this.updateFilter(searches, 'spatialSearches');\n    this.updateSexFromSelection(items);\n  }\n\n  /**\n   * Updates sex to `Both` if there is a mismatch between the current selection and the sex\n   */\n  updateSexFromSelection(items: SpatialSearchFilterItem[]): void {\n    const currentSex = this.sex;\n    const selectedSexes = new Set(items.map((item) => item.sex));\n\n    if (items.length > 0 && (selectedSexes.size > 1 || !selectedSexes.has(currentSex))) {\n      this.updateFilter('Both', 'sex');\n    }\n  }\n\n  private getFilterValue<T>(key: string, defaultValue: T): T {\n    return (this.filters?.[key] as T | undefined) ?? defaultValue;\n  }\n}\n","<div class=\"patient-filters\" [class.hidden]=\"hidden\">\n  <ccf-dropdown\n    label=\"Sex\"\n    [options]=\"['Both', 'Male', 'Female']\"\n    [selection]=\"sex\"\n    (selectionChange)=\"updateFilter($event, 'sex')\"\n  ></ccf-dropdown>\n\n  <ccf-dual-slider\n    label=\"Age\"\n    [valueRange]=\"[1, 110]\"\n    [selection]=\"ageRange\"\n    (selectionChange)=\"updateFilter($event, 'ageRange')\"\n  ></ccf-dual-slider>\n  <ccf-dual-slider\n    label=\"BMI\"\n    [valueRange]=\"[13, 83]\"\n    [selection]=\"bmiRange\"\n    (selectionChange)=\"updateFilter($event, 'bmiRange')\"\n  ></ccf-dual-slider>\n</div>\n\n<div class=\"filter assays\" [class.hidden]=\"hidden\">\n  <ccf-checkbox\n    label=\"Assay Types\"\n    [columns]=\"5\"\n    [options]=\"technologyFilters\"\n    [selection]=\"technologies\"\n    (selectionChange)=\"updateFilter($event, 'technologies')\"\n  ></ccf-checkbox>\n</div>\n\n<div class=\"filter providers\" [class.hidden]=\"hidden\">\n  <ccf-checkbox\n    label=\"Tissue Providers\"\n    [columns]=\"3\"\n    [options]=\"providerFilters\"\n    [selection]=\"tmc\"\n    (selectionChange)=\"updateFilter($event, 'tmc')\"\n  ></ccf-checkbox>\n</div>\n\n<div *ngIf=\"spatialSearchFilters.length > 0\" class=\"filter spatial-locations\" [class.hidden]=\"hidden\">\n  <ccf-spatial-search-list\n    label=\"Spatial Locations\"\n    [items]=\"spatialSearchFilters\"\n    (selectionChanged)=\"updateSearchSelection($event)\"\n    (itemRemoved)=\"spatialSearchRemoved.emit($event.id)\"\n  >\n  </ccf-spatial-search-list>\n</div>\n\n<div class=\"button-container\" [class.hidden]=\"hidden\">\n  <ccf-run-spatial-search></ccf-run-spatial-search>\n  <div class=\"right-group\">\n    <button class=\"outline-button\" mat-button (click)=\"applyButtonClick()\">Apply Filters</button>\n    <div class=\"refresh-icon\">\n      <mat-icon class=\"icon refresh\" (click)=\"refreshFilters()\">refresh</mat-icon>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SpatialSearchListModule } from 'ccf-shared';\n\nimport { CheckboxModule } from '../../../shared/components/checkbox/checkbox.module';\nimport { DropdownModule } from '../../../shared/components/dropdown/dropdown.module';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { RunSpatialSearchModule } from '../../../shared/components/run-spatial-search/run-spatial-search.module';\nimport { FiltersContentComponent } from './filters-content.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n\n    CheckboxModule,\n    DropdownModule,\n    DualSliderModule,\n    SpatialSearchListModule,\n    RunSpatialSearchModule,\n  ],\n  declarations: [FiltersContentComponent],\n  exports: [FiltersContentComponent],\n})\nexport class FiltersContentModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { SpatialSearchFilterItem } from '../../../core/store/spatial-search-filter/spatial-search-filter.state';\nimport { SetExecuteSearchOnGenerate } from '../../../core/store/spatial-search-ui/spatial-search-ui.actions';\n\n/**\n * Popover box for filter settings\n */\n@Component({\n  selector: 'ccf-filters-popover',\n  templateUrl: './filters-popover.component.html',\n  styleUrls: ['./filters-popover.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FiltersPopoverComponent {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filters!: Record<string, unknown | unknown[]>;\n\n  /**\n   * Keeps track of whether or not the containing drawer is expanded\n   * Because the styles need to change accordingly\n   */\n  @Input() drawerExpanded!: boolean;\n\n  /**\n   * List of technologies in the data\n   */\n  @Input() technologyFilters!: string[];\n\n  /**\n   * List of providers in the data\n   */\n  @Input() providerFilters!: string[];\n\n  /**\n   * List of spatial searches\n   */\n  @Input() spatialSearchFilters: SpatialSearchFilterItem[] = [];\n\n  /**\n   * Emits the current filters\n   */\n  @Output() readonly filtersChange = new EventEmitter<Record<string, unknown>>();\n\n  /**\n   * Emits when a spatial search is selected/deselected\n   */\n  @Output() readonly spatialSearchSelected = new EventEmitter<SpatialSearchFilterItem[]>();\n\n  /**\n   * Emits when a spatial search is removed/deleted\n   */\n  @Output() readonly spatialSearchRemoved = new EventEmitter<string>();\n\n  /**\n   * Keeps track of whether or not the filters popover box is visible or not\n   */\n  filtersVisible = false;\n\n  /**\n   * Calculate the popup height based on length of spatial search list\n   */\n  get popupHeight(): string {\n    if (!this.filtersVisible) {\n      return '0rem';\n    } else {\n      return `${this.spatialSearchFilters.length > 0 ? 43 + this.spatialSearchFilters.length * 3 : 40}rem`;\n    }\n  }\n\n  /**\n   * Toggles filter visible\n   */\n  @Dispatch()\n  toggleFilterVisible(): SetExecuteSearchOnGenerate {\n    this.filtersVisible = !this.filtersVisible;\n    return new SetExecuteSearchOnGenerate(false);\n  }\n\n  /**\n   * Hides the filters popover box\n   */\n  @Dispatch()\n  removeBox(): SetExecuteSearchOnGenerate {\n    this.filtersVisible = false;\n    return new SetExecuteSearchOnGenerate(true);\n  }\n\n  /**\n   * Emits the current filters, and hides the popover box\n   *\n   * @param filters The object containing all the currently set filters\n   */\n  applyFilters(filters: Record<string, unknown>): void {\n    this.filters = filters;\n    this.filtersChange.emit(filters);\n    this.removeBox();\n  }\n}\n","<div class=\"filters-popover\" [class.expanded]=\"drawerExpanded\">\n  <button (click)=\"toggleFilterVisible()\" class=\"show-hide\" [class.open]=\"filtersVisible\">\n    <div *ngIf=\"filtersVisible; else notShow\">\n      <mat-icon class=\"icon\">close</mat-icon>\n    </div>\n    <ng-template #notShow>\n      <mat-icon svgIcon=\"filter\" class=\"icon funnel\"></mat-icon>\n    </ng-template>\n  </button>\n  <div\n    class=\"popup-container\"\n    [class.visible]=\"filtersVisible\"\n    [class.hidden]=\"!filtersVisible\"\n    [style.height]=\"popupHeight\"\n  >\n    <ccf-filters-content\n      class=\"popup-body\"\n      [technologyFilters]=\"technologyFilters\"\n      [providerFilters]=\"providerFilters\"\n      [spatialSearchFilters]=\"spatialSearchFilters\"\n      [hidden]=\"!filtersVisible\"\n      [filters]=\"filters\"\n      (applyFilters)=\"applyFilters($event)\"\n      (spatialSearchSelected)=\"spatialSearchSelected.emit($event)\"\n      (spatialSearchRemoved)=\"spatialSearchRemoved.emit($event)\"\n    >\n    </ccf-filters-content>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FiltersContentModule } from '../filters-content/filters-content.module';\nimport { FiltersPopoverComponent } from './filters-popover.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FiltersContentModule],\n  declarations: [FiltersPopoverComponent],\n  exports: [FiltersPopoverComponent],\n})\nexport class FiltersPopoverModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from './ontology-search/ontology-search.module';\nimport { OntologySelectionModule } from './ontology-selection/ontology-selection.module';\nimport { OntologyTreeModule } from './ontology-tree/ontology-tree.module';\n\n@NgModule({\n  imports: [CommonModule, OntologySearchModule, OntologyTreeModule, OntologySelectionModule],\n  exports: [OntologySearchModule, OntologyTreeModule, OntologySelectionModule],\n})\nexport class OntologyExplorationModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { OntologyTreeNode } from 'ccf-database';\nimport { get, sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologySearchService, SearchResult } from '../../../core/services/ontology-search/ontology-search.service';\n\n/**\n * Componenet for searching the Ontology nodes.\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OntologySearchComponent implements OnInit {\n  @Input() placeholderText!: string;\n\n  /**\n   * Output event-emitter which emits the id of the OntologyTreeNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() readonly selected = new EventEmitter<OntologyTreeNode>();\n\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new UntypedFormControl('');\n\n  /**\n   * Determines if autocomplete is open or close.\n   */\n  autoCompleteOpen = false;\n\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$!: Observable<SearchResult[]>;\n\n  /**\n   * Creates an instance of ontology search component.\n   *\n   * @param ontologyService instance of searchService which provides all the search functionality\n   * @param ga Analytics service\n   */\n  constructor(\n    public ontologyService: OntologySearchService,\n    private readonly ga: GoogleAnalyticsService,\n  ) {}\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit(): void {\n    const valueChanges = this.formControl.valueChanges as Observable<string>;\n    this.filteredResults$ = valueChanges.pipe(\n      filter((value) => typeof value === 'string'),\n      startWith(''),\n      switchMap((value) => this.ontologyService.filter(value)),\n      map((searchResults) => sortBy(searchResults, [this.sortBySynonymResult, 'index', this.sortLexically])),\n    );\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   *\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option?: SearchResult): string {\n    return (option?.displayLabel ?? []).join('');\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   *\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Sorts lexically\n   *\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   *\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, ['option', 'value', 'node']) as OntologyTreeNode;\n    if (node) {\n      this.ga.event('search', 'ontology_search', node.id);\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n}\n","<form class=\"ccf-ontology-search\" [class.autocomplete-open]=\"autoCompleteOpen\">\n  <mat-form-field appearance=\"outline\" class=\"field\" subscriptSizing=\"dynamic\">\n    <mat-icon matPrefix color=\"primary\" class=\"search\">search</mat-icon>\n    <input\n      class=\"input\"\n      type=\"text\"\n      [placeholder]=\"placeholderText\"\n      matInput\n      [formControl]=\"formControl\"\n      [matAutocomplete]=\"autocomplete\"\n    />\n\n    <mat-autocomplete\n      class=\"ccf-ontology-search detached autocomplete\"\n      [displayWith]=\"displayFormatter\"\n      (optionSelected)=\"onSelect($event)\"\n      (opened)=\"autoCompleteOpen = true\"\n      (closed)=\"autoCompleteOpen = false\"\n      #autocomplete\n    >\n      <div class=\"results-container\">\n        <mat-option *ngFor=\"let option of filteredResults$ | async\" [value]=\"option\">\n          <span class=\"prefix\">{{ option.displayLabel[0] }}</span>\n          <span class=\"search-term\">{{ option.displayLabel[1] }}</span>\n          <span class=\"suffix\">{{ option.displayLabel[2] }}</span>\n        </mat-option>\n      </div>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OntologySearchComponent } from './ontology-search.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n  ],\n  declarations: [OntologySearchComponent],\n  exports: [OntologySearchComponent],\n})\nexport class OntologySearchModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\n\nimport { Observable } from 'rxjs/internal/Observable';\nimport { tap } from 'rxjs/operators';\nimport { OntologySearchService } from '../../../core/services/ontology-search/ontology-search.service';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\n\n/**\n * Ontology selection component that encapsulates ontology search and tree components.\n */\n@Component({\n  selector: 'ccf-ontology-selection',\n  templateUrl: './ontology-selection.component.html',\n  styleUrls: ['./ontology-selection.component.scss'],\n  providers: [OntologySearchService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OntologySelectionComponent implements OnChanges {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree!: OntologyTreeComponent;\n\n  /**\n   * A record of terms within the current filter.  To be passed on to ontology-tree\n   */\n  @Input() occurenceData!: Record<string, number>;\n\n  /**\n   * A record of terms the app currently has data for.  To be passed on to ontology-tree\n   */\n  @Input() termData!: Record<string, number>;\n\n  /**\n   * The ontology tree model to display\n   */\n  @Input() treeModel!: OntologyTreeModel;\n\n  /**\n   * Input list of selected ontology terms passed down to ontology-tree.\n   * Used to change display of ontology tree when selection is made from\n   * outside the component.\n   */\n  @Input() ontologyFilter!: string[];\n\n  @Input() header!: boolean;\n  @Input() placeholderText!: string;\n\n  @Input() showtoggle!: boolean;\n\n  /**\n   * Captures and passes along the change in ontologySelections.\n   */\n  @Output() readonly ontologySelection = new EventEmitter<OntologyTreeNode[]>();\n\n  currentNodes!: string[];\n\n  biomarkerMenuOptions!: string[];\n  rootNode!: OntologyTreeNode;\n  tooltips!: string[];\n  rootNode$: Observable<OntologyTreeNode>;\n  biomarkerLabelMap = new Map([\n    ['gene', 'BG'],\n    ['protein', 'BP'],\n    ['lipids', 'BL'],\n    ['metabolites', 'BM'],\n    ['proteoforms', 'BF'],\n  ]);\n  /**\n   * Creates an instance of ontology selection component.\n   *\n   * @param ontologySearchService Service for searching the ontology.\n   */\n  constructor(public ontologySearchService: OntologySearchService) {\n    this.rootNode$ = ontologySearchService.rootNode$.pipe(\n      tap((rootNode) => {\n        this.rootNode = { ...rootNode };\n        if (this.rootNode.id === 'biomarkers') {\n          this.tooltips = [...rootNode.children];\n          this.biomarkerMenuOptions = [...rootNode.children]\n            .map((option) => this.biomarkerLabelMap.get(option))\n            .filter((x): x is string => x !== undefined);\n          this.filterNodes(this.biomarkerMenuOptions);\n        }\n      }),\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('treeModel' in changes && this.treeModel) {\n      this.ontologySearchService.setTreeModel(this.treeModel);\n    }\n  }\n\n  /**\n   * Ontology selection event when node is selected from the search results.\n   *\n   * @param ontologyNode selected ontology node.\n   */\n  selected(ontologyNode: OntologyTreeNode): void {\n    const nodes = this.treeModel?.nodes ?? {};\n    this.tree.expandAndSelect(ontologyNode, (node) => nodes[node.parent]);\n  }\n\n  filterNodes(selectedTypes: string[]): void {\n    const nodes = Object.values(this.treeModel.nodes);\n    const filteredNodes = nodes\n      .filter((node) => selectedTypes.includes(this.biomarkerLabelMap.get(node.parent) ?? ''))\n      .sort((node1, node2) => (node1.label.trim().toLowerCase() > node2.label.trim().toLowerCase() ? 1 : -1));\n    const rootNode = { ...this.rootNode };\n    rootNode.children = filteredNodes.map((node) => node.id);\n    this.rootNode = { ...rootNode };\n  }\n}\n","<ccf-ontology-tree\n  *ngIf=\"rootNode$ | async\"\n  class=\"tree\"\n  [showtoggle]=\"showtoggle\"\n  [nodes]=\"[rootNode]\"\n  [rootNode]=\"rootNode.id\"\n  [getChildren]=\"ontologySearchService.getChildren\"\n  (nodeSelected)=\"ontologySelection.emit($event)\"\n  [occurenceData]=\"occurenceData\"\n  (selectedBiomarkerOptions)=\"filterNodes($event)\"\n  [termData]=\"termData\"\n  [ontologyFilter]=\"ontologyFilter\"\n  [header]=\"header\"\n  [tooltips]=\"tooltips\"\n  [menuOptions]=\"biomarkerMenuOptions\"\n>\n</ccf-ontology-tree>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { OntologySelectionComponent } from './ontology-selection.component';\n\n@NgModule({\n  imports: [CommonModule, OntologySearchModule, OntologyTreeModule],\n  declarations: [OntologySelectionComponent],\n  exports: [OntologySelectionComponent],\n})\nexport class OntologySelectionModule {}\n","import { FlatTreeControl } from '@angular/cdk/tree';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { OntologyTreeNode } from 'ccf-database';\nimport { filter, invoke, property } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { FlatNode } from '../../../core/models/flat-node';\n\nexport const labelMap = new Map([\n  ['colon', 'large intestine'],\n  ['body', 'Anatomical Structures (AS)'],\n  ['cell', 'Cell Types (CT)'],\n]);\n\n/** Type of function for getting child nodes from a parent node. */\ntype GetChildrenFunc = (o: OntologyTreeNode) => OntologyTreeNode[];\n\n/**\n * Getter function for 'level' on a flat node.\n */\nconst getLevel = property<FlatNode, number>('level');\n\n/**\n * Getter function for 'expandable' on a flat node.\n */\nconst isExpandable = property<FlatNode, boolean>('expandable');\n\n/**\n * Represents a expandable tree of an ontology.\n */\n@Component({\n  selector: 'ccf-ontology-tree',\n  templateUrl: './ontology-tree.component.html',\n  styleUrls: ['./ontology-tree.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OntologyTreeComponent implements OnInit, OnChanges {\n  /**\n   * Input of ontology filter, used for changing the ontology selections\n   * from outside this component.\n   */\n  @Input() ontologyFilter!: string[];\n\n  /**\n   * The root node IRI of the tree\n   */\n  @Input() rootNode!: string;\n\n  @Input() showtoggle!: boolean;\n  /**\n   * The node like objects to display in the tree.\n   */\n  // eslint-disable-next-line\n  @Input()\n  set nodes(nodes: OntologyTreeNode[] | undefined) {\n    this._nodes = nodes;\n    if (this.control) {\n      this.dataSource.data = this._nodes ?? [];\n    }\n  }\n\n  /**\n   * List of nodes in the ontology tree\n   */\n  get nodes(): OntologyTreeNode[] | undefined {\n    return this._nodes;\n  }\n\n  /**\n   * Method for fetching the children of a node.\n   */\n  @Input()\n  set getChildren(fun: GetChildrenFunc | undefined) {\n    this._getChildren = fun;\n    this.dataSource.data = this.nodes ?? [];\n  }\n\n  get getChildren(): GetChildrenFunc | undefined {\n    return this._getChildren;\n  }\n\n  /**\n   * Occurence Data is a record of terms that are in the current filter.\n   */\n  // eslint-disable-next-line\n  @Input()\n  set occurenceData(value: Record<string, number>) {\n    if (value) {\n      this._occurenceData = value;\n    } else {\n      this._occurenceData = {};\n    }\n  }\n\n  get occurenceData(): Record<string, number> {\n    return this._occurenceData;\n  }\n\n  /**\n   * Storage for the getter / setter\n   */\n  private _occurenceData!: Record<string, number>;\n\n  /**\n   * Term Data is a record of terms that the app currently has data for.\n   */\n  @Input()\n  set termData(value: Record<string, number>) {\n    if (value) {\n      this._termData = value;\n    } else {\n      this._termData = {};\n    }\n  }\n\n  get termData(): Record<string, number> {\n    return this._termData;\n  }\n\n  @Input() header!: boolean;\n\n  @Input() menuOptions!: string[];\n\n  @Input() tooltips!: string[];\n\n  selectedtoggleOptions!: string[];\n\n  /**\n   * Storage for the getter / setter\n   */\n  private _termData!: Record<string, number>;\n\n  atScrollBottom = false;\n\n  /**\n   * Creates an instance of ontology tree component.\n   *\n   * @param cdr The change detector.\n   * @param ga Analytics service\n   */\n  constructor(\n    private readonly cdr: ChangeDetectorRef,\n    private readonly ga: GoogleAnalyticsService,\n  ) {}\n\n  /**\n   * Emits an event whenever a node has been selected.\n   */\n  @Output() readonly nodeSelected = new EventEmitter<OntologyTreeNode[]>();\n\n  /**\n   * Emits an event whenever the node's visibility or opacity has changed\n   */\n  @Output() readonly nodeChanged = new EventEmitter<FlatNode>();\n\n  /**\n   * Any time a button is clicked, event is emitted.\n   */\n  @Output() readonly selectionChange = new EventEmitter<string[]>();\n\n  @Output() readonly selectedBiomarkerOptions = new EventEmitter<string[]>();\n\n  /**\n   * Indentation of each level in the tree.\n   */\n  readonly indent: number | string = '1.5rem';\n\n  /**\n   * Tree controller.\n   */\n  readonly control = new FlatTreeControl<FlatNode>(getLevel, isExpandable);\n\n  /**\n   * Node flattener.\n   */\n  readonly flattener = new MatTreeFlattener(\n    FlatNode.create,\n    getLevel,\n    isExpandable,\n    invoke.bind(undefined, this, 'getChildren') as GetChildrenFunc,\n  );\n\n  /**\n   * Data source of flat nodes.\n   */\n  readonly dataSource = new MatTreeFlatDataSource(this.control, this.flattener);\n\n  /**\n   * Storage for getter/setter 'nodes'.\n   */\n  private _nodes?: OntologyTreeNode[] = undefined;\n\n  /**\n   * Storage for getter/setter 'getChildren'.\n   */\n  private _getChildren?: GetChildrenFunc;\n\n  /**\n   * Keeping track of the first selection made allows us to ensure the 'body' node\n   * is unselected as expected.\n   */\n  anySelectionsMade = false;\n\n  /**\n   * Currently selected nodes, defaulted to the body node for when the page initially loads.\n   */\n  selectedNodes: FlatNode[] = [];\n\n  highlightedNode: FlatNode | undefined;\n\n  /**\n   * Expand the body node when the component is initialized.\n   */\n  ngOnInit(): void {\n    if (this.control.dataNodes) {\n      this.control.expand(this.control.dataNodes[0]);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['ontologyFilter']) {\n      const ontologyFilter: string[] = changes['ontologyFilter'].currentValue as string[];\n      if (ontologyFilter?.length >= 0) {\n        this.selectByIDs(ontologyFilter);\n      }\n    }\n    if (changes['rootNode']) {\n      const rootNode = changes['rootNode'].currentValue;\n      this.selectByIDs([rootNode]);\n    }\n    if (changes['nodes']) {\n      this.selectByIDs([this.rootNode]);\n    }\n  }\n\n  selectByIDs(ids: string[]): void {\n    const dataNodes = this.control.dataNodes;\n    const selectedNodes: FlatNode[] = dataNodes.filter((node) => ids.indexOf(node.original.id) > -1);\n\n    if (selectedNodes?.length > 0) {\n      this.selectedNodes = selectedNodes;\n      this.ga.event('nodes_selected_by_ids', 'ontology_tree', selectedNodes.map((node) => node.label).join(','));\n      this.control.collapseAll();\n      this.selectedNodes.forEach((selectedNode) => {\n        this.expandAndSelect(\n          selectedNode.original,\n          (node) => dataNodes.find((findNode) => findNode.original.id === node.parent)?.original as OntologyTreeNode,\n          true,\n        );\n      });\n    }\n  }\n\n  /**\n   * Expands the tree to show a node and sets the currect selection to that node.\n   *\n   * @param node The node to expand to and select.\n   */\n  expandAndSelect(\n    node: OntologyTreeNode,\n    getParent: (n: OntologyTreeNode) => OntologyTreeNode,\n    additive = false,\n  ): void {\n    const { cdr, control } = this;\n\n    // Add all parents to a set\n    const parents = new Set<OntologyTreeNode>();\n    let current = getParent(node);\n\n    while (current) {\n      parents.add(current);\n      current = getParent(current);\n    }\n\n    // Find corresponding flat nodes\n    const parentFlatNodes = filter(control.dataNodes, (flat) => parents.has(flat.original));\n    const flatNode = control.dataNodes.find((flat) => flat.original === node);\n\n    // Expand nodes\n    if (!additive) {\n      this.selectedNodes = [];\n      control.collapseAll();\n    }\n\n    for (const flat of parentFlatNodes) {\n      control.expand(flat);\n    }\n    if ((node.label === 'body' || node.id === 'biomarkers') && control.dataNodes?.length > 0) {\n      control.expand(control.dataNodes[0]);\n    }\n\n    // Select the node\n    this.select(additive, flatNode, false, true);\n\n    // Detect changes\n    cdr.detectChanges();\n  }\n\n  /**\n   * Determines whether a node can be expanded.\n   *\n   * @param node The node to test.\n   * @returns True if the node has children.\n   */\n  isInnerNode(this: void, _index: number, node: FlatNode): boolean {\n    return node.expandable;\n  }\n\n  /**\n   * Gets a label for the count\n   * @param node The flat node instance\n   * @returns Label for the count\n   */\n  getCountLabel(node: FlatNode): string {\n    return !node.original.parent ? 'Tissue Blocks: ' : '';\n  }\n\n  /**\n   * Gets Node label\n   * @param label node label\n   * @returns label for node\n   */\n  getNodeLabel(label: string): string {\n    return labelMap.get(label) ?? label;\n  }\n  /**\n   * Determines whether a node is currently selected.\n   * Only a single node can be selected at any time.\n   *\n   * @param node  The node to test.\n   * @returns True if the node is the currently selected node.\n   */\n  isSelected(node: FlatNode | undefined): boolean {\n    return (\n      node?.original.id === this.rootNode ||\n      this.selectedNodes.filter((selectedNode) => node?.original.label === selectedNode?.original.label).length > 0\n    );\n  }\n\n  /**\n   * Handles selecting / deselecting nodes via updating the selectedNodes variable\n   *\n   * @param node The node to select.\n   * @param ctrlKey Whether or not the selection was made with a ctrl + click event.\n   */\n  select(ctrlKey: boolean, node: FlatNode | undefined, emit: boolean, select: boolean): void {\n    // This is to ensure the 'body' node is unselected regardless of what the first\n    // selection is\n    if (!this.anySelectionsMade) {\n      this.selectedNodes = [];\n      this.anySelectionsMade = true;\n    }\n\n    if (node === undefined) {\n      this.selectedNodes = [];\n      this.ga.event('nodes_unselected', 'ontology_tree');\n      return;\n    }\n\n    // ctrl + click allows users to select multiple organs\n    if (ctrlKey) {\n      if (!select) {\n        this.selectedNodes.splice(this.selectedNodes.indexOf(node), 1);\n      } else if (this.selectedNodes.indexOf(node) < 0) {\n        this.selectedNodes.push(node);\n      }\n    } else {\n      this.selectedNodes = [];\n      if (select) {\n        this.selectedNodes.push(node);\n      }\n    }\n\n    this.ga.event('nodes_selected', 'ontology_tree', this.selectedNodes.map((n) => n.label).join(','));\n\n    if (emit) {\n      this.nodeSelected.emit(this.selectedNodes.map((selectedNode) => selectedNode?.original));\n    }\n  }\n\n  /**\n   * Sets the current highlighted node to the moused over node (reveals opacity slider)\n   *\n   * @param node\n   */\n  mouseOver(node: FlatNode): void {\n    this.highlightedNode = node;\n  }\n\n  /**\n   * Deselects the highlighted node on mouse out\n   */\n  mouseOut(): void {\n    this.highlightedNode = undefined;\n  }\n\n  /**\n   * Sets the opacity of a node\n   *\n   * @param node The node to be updated\n   * @param value Opacity value\n   */\n  updateOpacity(node: FlatNode, value: number | undefined): void {\n    node.opacity = value;\n    this.ga.event('opacity_update', 'ontology_tree', node.label, value);\n    this.nodeChanged.emit(node);\n  }\n\n  /**\n   * Resets node to default opacity and visibility\n   *\n   * @param node The node to be reset\n   */\n  resetNode(node: FlatNode): void {\n    node.opacity = 20;\n    node.visible = true;\n    this.ga.event('node_reset', 'ontology_tree', node.label);\n    this.nodeChanged.emit(node);\n  }\n\n  /**\n   * Toggles visibility of a node\n   *\n   * @param node The node to be toggled\n   */\n  toggleVisibility(node: FlatNode): void {\n    node.visible = node.visible === true ? false : true;\n    this.ga.event('visibility_update', 'ontology_tree', node.label, +node.visible);\n    this.nodeChanged.emit(node);\n  }\n\n  /**\n   * Used to properly set the position of the slider popup on the ontology tree\n   *\n   * @param level Current level of a node in the ontology tree\n   * @returns left indent value\n   */\n  getLeftIndent(level: number): string {\n    return `${level * -1.5}rem`;\n  }\n\n  /**\n   * Handles the scroll event to detect when scroll is at the bottom.\n   *\n   * @param event The scroll event.\n   */\n  onScroll(event: Event): void {\n    if (!event.target) {\n      return;\n    }\n    const { clientHeight, scrollHeight, scrollTop } = event.target as Element;\n    const diff = scrollHeight - scrollTop - clientHeight;\n    this.atScrollBottom = diff < 20;\n  }\n\n  isItemSelected(item: string) {\n    return this.selectedtoggleOptions.includes(item);\n  }\n\n  toggleSelection(value: string[]) {\n    this.selectedtoggleOptions = value;\n    this.selectedBiomarkerOptions.emit([...this.selectedtoggleOptions]);\n  }\n}\n","<mat-tree\n  class=\"ccf-ontology-tree\"\n  [class.header-hidden]=\"!header\"\n  [dataSource]=\"dataSource\"\n  [treeControl]=\"control\"\n  (scroll)=\"onScroll($event)\"\n>\n  <!-- Templates with common structures for inner and leaf nodes -->\n  <ng-template #selectableRegion let-node=\"node\">\n    <div\n      class=\"text\"\n      [class.hidden]=\"node.label === highlightedNode?.label\"\n      [class.filtered-out]=\"!occurenceData[node.original.id] && !!termData[node.original.id]\"\n      [class.unavailable]=\"!termData[node.original.id]\"\n      [class.selected]=\"isSelected(node)\"\n      (click)=\"select($event.ctrlKey, node, true, !isSelected(node))\"\n    >\n      {{ getNodeLabel(node.label) }}\n    </div>\n  </ng-template>\n\n  <!-- Leaf node template -->\n  <mat-tree-node\n    *matTreeNodeDef=\"let node\"\n    class=\"node leaf-node block\"\n    matTreeNodePadding\n    [matTreeNodePaddingIndent]=\"indent\"\n    (mouseleave)=\"mouseOut(); slider1.reset()\"\n  >\n    <div [style.display]=\"node.opacity !== -1 ? 'none' : 'block'\">\n      <mat-icon\n        class=\"icon opacity\"\n        [style.left]=\"getLeftIndent(node.level)\"\n        [class.fade]=\"node.visible !== true\"\n        (mouseenter)=\"mouseOver(node)\"\n        svgIcon=\"app:opacity\"\n      ></mat-icon>\n      <div\n        class=\"slider\"\n        [style.left]=\"getLeftIndent(node.level)\"\n        [class.hidden]=\"node.label !== highlightedNode?.label\"\n      >\n        <ccf-opacity-slider\n          #slider1\n          [visible]=\"node.visible\"\n          [opacity]=\"node.opacity\"\n          (opacityChange)=\"updateOpacity(node, $event)\"\n          (opacityReset)=\"resetNode(node)\"\n          (visibilityToggle)=\"toggleVisibility(node)\"\n        >\n        </ccf-opacity-slider>\n      </div>\n    </div>\n\n    <!-- Disabled button used to add equal amount of space as an inner node's button -->\n    <div class=\"non-expandable\"></div>\n    <div class=\"node-container\">\n      <ng-container *ngTemplateOutlet=\"selectableRegion; context: { node: node }\"></ng-container>\n      <div class=\"num-results\" [class.suborgan]=\"node.level > 1\">\n        {{ getCountLabel(node) }}{{ occurenceData[node.original.id] || 0 }}\n      </div>\n    </div>\n    <div class=\"biomarkers-toggle\" *ngIf=\"showtoggle && node.original.id === 'biomarkers'\">\n      <ccf-button-toggle\n        [menuOptions]=\"menuOptions\"\n        [selectedItems]=\"selectedtoggleOptions\"\n        (selectionChange)=\"toggleSelection($event)\"\n      ></ccf-button-toggle>\n    </div>\n  </mat-tree-node>\n\n  <!-- Inner node template -->\n  <mat-tree-node\n    *matTreeNodeDef=\"let node; when: isInnerNode\"\n    class=\"node inner-node block\"\n    matTreeNodePadding\n    [matTreeNodePaddingIndent]=\"indent\"\n    (mouseleave)=\"mouseOut(); slider2.reset()\"\n  >\n    <div [style.display]=\"node.opacity !== -1 ? 'none' : 'block'\">\n      <mat-icon\n        class=\"icon opacity\"\n        [style.left]=\"getLeftIndent(node.level)\"\n        [class.fade]=\"node.visible !== true\"\n        (mouseenter)=\"mouseOver(node)\"\n        svgIcon=\"app:opacity\"\n      ></mat-icon>\n      <div\n        class=\"slider\"\n        [style.left]=\"getLeftIndent(node.level)\"\n        [class.hidden]=\"node.label !== highlightedNode?.label\"\n      >\n        <ccf-opacity-slider\n          #slider2\n          [visible]=\"node.visible\"\n          [opacity]=\"node.opacity\"\n          (opacityChange)=\"updateOpacity(node, $event)\"\n          (opacityReset)=\"resetNode(node)\"\n          (visibilityToggle)=\"toggleVisibility(node)\"\n        >\n        </ccf-opacity-slider>\n      </div>\n    </div>\n    <div class=\"node-container\">\n      <button\n        class=\"toggle\"\n        [class.hidden]=\"node.label === highlightedNode?.label\"\n        mat-icon-button\n        matTreeNodeToggle\n        attr.aria-label=\"Toggle {{ node.label }}\"\n      >\n        <mat-icon class=\"icon font-icon\">\n          {{ control.isExpanded(node) ? 'expand_less' : 'expand_more' }}\n        </mat-icon>\n      </button>\n      <ng-container *ngTemplateOutlet=\"selectableRegion; context: { node: node }\"></ng-container>\n      <div class=\"num-results\" [class.suborgan]=\"node.level > 1\">\n        {{ getCountLabel(node) }}{{ occurenceData[node.original.id] || 0 }}\n      </div>\n    </div>\n    <div class=\"biomarkers-toggle\" *ngIf=\"showtoggle && node.original.id === 'biomarkers'\">\n      <ccf-button-toggle\n        [tooltips]=\"tooltips\"\n        [enableTooltip]=\"true\"\n        [menuOptions]=\"menuOptions\"\n        [selectedItems]=\"selectedtoggleOptions ?? menuOptions\"\n        (selectionChange)=\"toggleSelection($event)\"\n      ></ccf-button-toggle>\n    </div>\n  </mat-tree-node>\n</mat-tree>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\nimport { OpacitySliderModule } from 'ccf-shared';\nimport { ButtonToggleModule } from '../../../shared/components/button-toggle/button-toggle.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OpacitySliderModule,\n    ButtonToggleModule,\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { TissueBlockResult } from 'ccf-database';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Donor card component which displays data from a patient\n */\n@Component({\n  selector: 'ccf-donor-card',\n  templateUrl: './donor-card.component.html',\n  styleUrls: ['./donor-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DonorCardComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-donor-card';\n\n  /** Tissue Block to generate the donor card from */\n  @Input() tissueBlock!: TissueBlockResult;\n\n  /** Allows the selected state to be set from outside the component */\n  @Input() selected = false;\n\n  /** Allows color of the checkbox background to be set from outside the component */\n  @Input() color!: string;\n\n  /** Allows the expanded state of the card to be set from outside the component */\n  @Input() expanded = false;\n\n  @Input() highlighted = false;\n\n  /** Emits the new checked state whenever it changes */\n  @Output() readonly checked = new EventEmitter<boolean>();\n\n  /** Emit the url of any link when clicked. */\n  @Output() readonly linkClick = new EventEmitter<string>();\n\n  /** To keep track of which element, if any, are hovered over. */\n  hoverState = '';\n\n  /**\n   * Creates an instance of donor card component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Handles the logic that needs to run when the checkbox is clicked on.\n   */\n  handleCheckbox(): void {\n    this.selected = !this.selected;\n    this.ga.event('selected_toggled', 'donor_card', this.tissueBlock.label, +this.selected);\n    this.checked.emit(this.selected);\n    this.expanded = false;\n  }\n\n  /**\n   * Ensures that the expanded variable is only changed if selected first.\n   */\n  toggleExpansion(): void {\n    if (this.selected) {\n      this.expanded = !this.expanded;\n      this.ga.event('expanded_toggled', 'donor_card', this.tissueBlock.label, +this.expanded);\n    }\n  }\n\n  /**\n   * Handles what happens when an info card is clicked.\n   * Passes up the link click event unless the card isn't selected\n   * In which case it selects it for ease of use.\n   *\n   * @param url the URL to emit up.\n   */\n  linkHandler(url: string): void {\n    this.ga.event('link_clicked', 'donor_card', this.tissueBlock.label);\n    if (this.selected) {\n      this.linkClick.emit(url);\n    } else {\n      this.selected = true;\n      this.checked.emit(this.selected);\n    }\n  }\n}\n","<div class=\"main-container\">\n  <div\n    class=\"checkbox-background\"\n    [class.selected]=\"selected\"\n    [class.highlighted]=\"highlighted\"\n    [ngStyle]=\"{ 'background-color': selected ? color : 'transparent' }\"\n    (click)=\"handleCheckbox()\"\n  >\n    <mat-checkbox [checked]=\"selected\" class=\"checkbox\" [class.checkselected]=\"selected\"></mat-checkbox>\n  </div>\n\n  <div\n    class=\"hoverable default-padding donor mat-elevation-z2\"\n    [class.hover-enabled]=\"selected\"\n    [class.expanded]=\"expanded\"\n    [class.highlighted]=\"highlighted\"\n  >\n    <div class=\"d-flex\">\n      <mat-icon class=\"icon-size icon-dark mr-5\">person</mat-icon>\n\n      <div class=\"donor-info\">\n        <div class=\"title description\">{{ tissueBlock.donor.label }}</div>\n        <div class=\"description\">{{ tissueBlock.donor.description }}</div>\n      </div>\n    </div>\n    <div class=\"hover-state mat-elevation-z4\" (click)=\"linkHandler(tissueBlock.donor.link)\">\n      <div class=\"hover-title\">DONOR</div>\n      <mat-icon class=\"icon-size hover-icon\">open_in_new</mat-icon>\n    </div>\n\n    <mat-icon (click)=\"toggleExpansion()\" class=\"icon-size ml-5 selectable\" *ngIf=\"selected\">{{\n      expanded ? 'expand_less' : 'expand_more'\n    }}</mat-icon>\n  </div>\n</div>\n\n<ng-container *ngIf=\"expanded\">\n  <div class=\"expanded-view mat-elevation-z2 align-end\">\n    <div class=\"info-block hover-enabled default-padding\">\n      <mat-icon class=\"icon-size icon-dark mr-5\">bubble_chart</mat-icon>\n      <div class=\"text-content\">\n        <div class=\"description\">{{ tissueBlock.label }}</div>\n        <div class=\"description\">{{ tissueBlock.description }}</div>\n      </div>\n\n      <div class=\"hover-state mat-elevation-z4\" (click)=\"linkHandler(tissueBlock.link)\">\n        <div class=\"hover-title\">TISSUE BLOCK</div>\n        <mat-icon class=\"icon-size hover-icon\">open_in_new</mat-icon>\n      </div>\n    </div>\n\n    <ccf-tissue-section-vis\n      *ngIf=\"tissueBlock.sections.length > 1\"\n      [totalTissueSections]=\"tissueBlock.sectionCount\"\n      [tissueSections]=\"tissueBlock.sections\"\n    ></ccf-tissue-section-vis>\n\n    <ng-container *ngIf=\"tissueBlock.datasets.length > 0\">\n      <ccf-thumbnail-carousel (linkClicked)=\"linkHandler($event.link)\" class=\"mt-05\" [data]=\"tissueBlock.datasets\">\n      </ccf-thumbnail-carousel>\n    </ng-container>\n  </div>\n\n  <div class=\"expanded-view w-80 mat-elevation-z2 align-end\" *ngFor=\"let section of tissueBlock.sections\">\n    <div class=\"default-padding info-block hover-enabled\">\n      <mat-icon class=\"icon-size mr-5 icon-light\">bubble_chart</mat-icon>\n      <div class=\"text-content\">\n        <div class=\"description\">{{ section.label }}</div>\n        <div class=\"description\">{{ section.description }}</div>\n      </div>\n\n      <div class=\"hover-state mat-elevation-z4\" (click)=\"linkHandler(section.link)\">\n        <div class=\"hover-title\">TISSUE SECTION</div>\n        <mat-icon class=\"icon-size hover-icon\">open_in_new</mat-icon>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"section.datasets.length > 0\">\n      <ccf-thumbnail-carousel (linkClicked)=\"linkHandler($event.link)\" class=\"mt-05\" [data]=\"section.datasets\">\n      </ccf-thumbnail-carousel>\n    </ng-container>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ThumbnailCarouselModule } from '../../../shared/components/thumbnail-carousel/thumbnail-carousel.module';\nimport { DonorCardComponent } from './donor-card.component';\nimport { TissueSectionVisModule } from './../tissue-section-vis/tissue-section-vis.module';\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule, MatIconModule, ThumbnailCarouselModule, TissueSectionVisModule],\n  declarations: [DonorCardComponent],\n  exports: [DonorCardComponent],\n})\nexport class DonorCardModule {}\n","import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AggregateResult } from 'ccf-database';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ListResult } from '../../../core/models/list-result';\n\n/**\n * ResultsBrowser is the container component in charge of rendering the label and stats of\n * the results as well as handling the virtual scrolling and click emitters of\n * ResultsBrowserItems.\n */\n@Component({\n  selector: 'ccf-results-browser',\n  templateUrl: './results-browser.component.html',\n  styleUrls: ['./results-browser.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ResultsBrowserComponent {\n  /**\n   * Input array of List Results to display\n   */\n  @Input() listResults!: Immutable<ListResult[]>;\n\n  /**\n   * Input used to add a list of stats at the top the results browser\n   */\n  @Input() aggregateData!: Immutable<AggregateResult[]>;\n\n  /**\n   * Input allowing the title of the result browser to be set outside of the component\n   */\n  @Input() resultLabel!: string;\n\n  @Input() highlighted!: string;\n\n  @Input() header!: boolean;\n\n  /**\n   * Output emitting the result that was clicked on and its relevant information.\n   * Used for opening and rendering the result viewer.\n   */\n  @Output() readonly linkClicked = new EventEmitter<string>();\n\n  /**\n   * Output emitting the link result selected\n   */\n  @Output() readonly listResultSelected = new EventEmitter<Immutable<ListResult>>();\n\n  /**\n   * Output emitting the link result deselected\n   */\n  @Output() readonly listResultDeselected = new EventEmitter<Immutable<ListResult>>();\n\n  @Output() readonly itemHovered = new EventEmitter<string>();\n\n  @Output() readonly itemUnhovered = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\n   * Used to determine whether or not to render the gradient at the bottom.\n   */\n  atScrollBottom = false;\n\n  /**\n   * Creates an instance of results browser component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Notifies listeners when a selection/deselection is made\n   *\n   * @param result the list result\n   * @param selected whether to select or deselect the result\n   */\n  handleSelection(result: Immutable<ListResult>, selected: boolean): void {\n    this.ga.event('list_result_selected', 'results_browser', this.resultLabel, +selected);\n    if (selected) {\n      this.listResultSelected.next(result);\n    } else {\n      this.listResultDeselected.next(result);\n    }\n  }\n\n  /**\n   * Notifies on link click\n   *\n   * @param link the link clicked\n   */\n  handleLinkClick(link: string): void {\n    this.linkClicked.emit(link);\n  }\n\n  /**\n   * Handles the scroll event to detect when scroll is at the bottom.\n   *\n   * @param event The scroll event.\n   */\n  onScroll(event: Event): void {\n    if (!event.target) {\n      return;\n    }\n    const { clientHeight, scrollHeight, scrollTop } = event.target as Element;\n    const diff = scrollHeight - scrollTop - clientHeight;\n    this.atScrollBottom = diff < 64;\n  }\n\n  handleHover(id: string): void {\n    this.itemHovered.emit(id);\n  }\n\n  handleUnhover(): void {\n    this.itemUnhovered.emit();\n  }\n\n  asMutable<T>(value: Immutable<T>): T {\n    return value as T;\n  }\n}\n","<div class=\"results-browser-container\">\n  <div class=\"stat-box\">\n    <div id=\"title\">{{ resultLabel }}</div>\n    <div class=\"stat-row\" *ngFor=\"let stat of aggregateData\">\n      <div class=\"stat-value\">{{ stat.count }}</div>\n      <div class=\"stat-label\">{{ stat.label }}</div>\n    </div>\n  </div>\n\n  <div class=\"results-browser-list\" [class.header-hidden]=\"!header\" (scroll)=\"onScroll($event)\">\n    <div\n      class=\"browser-item-container\"\n      (mouseenter)=\"handleHover(result.tissueBlock.spatialEntityId)\"\n      (mouseleave)=\"handleUnhover()\"\n      *ngFor=\"let result of listResults\"\n    >\n      <ccf-donor-card\n        [tissueBlock]=\"asMutable(result.tissueBlock)\"\n        [selected]=\"result.selected\"\n        [color]=\"result.color ?? ''\"\n        (checked)=\"handleSelection(result, $event)\"\n        (linkClick)=\"handleLinkClick($event)\"\n        [highlighted]=\"result.tissueBlock.spatialEntityId === highlighted\"\n      >\n      </ccf-donor-card>\n    </div>\n  </div>\n  <div class=\"scroll-gradient\" [class.hidden]=\"!!atScrollBottom\"></div>\n</div>\n","import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResultsBrowserComponent } from './results-browser.component';\nimport { DonorCardModule } from '../donor-card/donor-card.module';\n\n@NgModule({\n  declarations: [ResultsBrowserComponent],\n  imports: [CommonModule, ScrollingModule, DonorCardModule],\n  exports: [ResultsBrowserComponent],\n})\nexport class ResultsBrowserModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { TissueSectionResult } from 'ccf-database';\n\n@Component({\n  selector: 'ccf-tissue-section-vis',\n  templateUrl: './tissue-section-vis.component.html',\n  styleUrls: ['./tissue-section-vis.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TissueSectionVisComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-tissue-section-vis';\n\n  /** The total numebr of tissue sections, used for end label */\n  @Input() totalTissueSections!: number;\n\n  /** Tissue section data, used to determine which tissues to color on the graph */\n  @Input() tissueSections!: TissueSectionResult[];\n\n  /** Returns whether or not the given section number exists in the tissueSection array */\n  tissueSectionExists(sectionNumber: number): boolean {\n    if (this.tissueSections.filter((section) => section.sectionNumber === sectionNumber).length > 0) {\n      return true;\n    }\n\n    return false;\n  }\n}\n","<div>0</div>\n<div class=\"container\">\n  <div\n    *ngFor=\"let item of [].constructor(totalTissueSections); let i = index\"\n    class=\"line-tick\"\n    [class.line-tick-visible]=\"tissueSectionExists(i + 1)\"\n  ></div>\n  <div class=\"x-axis\"></div>\n</div>\n<div>{{ totalTissueSections }}</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TissueSectionVisComponent } from './tissue-section-vis.component';\n\n@NgModule({\n  declarations: [TissueSectionVisComponent],\n  imports: [CommonModule],\n  exports: [TissueSectionVisComponent],\n})\nexport class TissueSectionVisModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'ccf-button-toggle',\n  templateUrl: './button-toggle.component.html',\n  styleUrls: ['./button-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonToggleComponent {\n  @Input() menuOptions!: string[];\n\n  @Input() selectedItems?: string[] = [];\n\n  @Input() enableTooltip = false;\n  @Input() tooltips: string[] = [];\n\n  /**\n   * Any time a button is clicked, event is emitted.\n   */\n  @Output() readonly selectionChange = new EventEmitter<string[]>();\n\n  isItemSelected(item: string) {\n    return this.selectedItems?.includes(item);\n  }\n\n  toggleSelection(value: string): void {\n    if (this.isItemSelected(value)) {\n      this.selectedItems = this.selectedItems?.filter((el) => el !== value);\n    } else {\n      this.selectedItems?.push(value);\n    }\n    this.selectionChange.emit(this.selectedItems);\n  }\n}\n","<mat-button-toggle-group class=\"toggleGroup\" name=\"menuOptions\" aria-label=\"menuOptions\" multiple appearance=\"standard\">\n  <mat-button-toggle\n    [class.button-selected]=\"isItemSelected(item)\"\n    *ngFor=\"let item of menuOptions; let i = index\"\n    [value]=\"item\"\n    (change)=\"toggleSelection($event.value)\"\n  >\n    <div class=\"tooltip-content-container\" [matTooltip]=\"tooltips[i]\" [matTooltipDisabled]=\"!enableTooltip\">\n      <mat-icon [class.hidden]=\"!isItemSelected(item)\">done</mat-icon>\n      <span> {{ item }}</span>\n    </div>\n  </mat-button-toggle>\n</mat-button-toggle-group>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ButtonToggleComponent } from './button-toggle.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatButtonToggleModule, MatTooltipModule],\n  declarations: [ButtonToggleComponent],\n  exports: [ButtonToggleComponent],\n})\nexport class ButtonToggleModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n */\n@Component({\n  selector: 'ccf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboxComponent {\n  /**\n   * The label that describes the overall question the checkbox is asking\n   */\n  @Input() label!: string;\n\n  /**\n   * Used to generate the individual checkboxes and their individual labels\n   */\n  @Input() options!: string[];\n\n  /**\n   * A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n   */\n  @Input() selection: string[] = [];\n\n  /**\n   * Number of columns\n   */\n  @Input() columns = 3;\n\n  /**\n   * Any time a checkbox changes we emit that value so the parent component has that information\n   */\n  @Output() readonly selectionChange = new EventEmitter<string[]>();\n\n  /**\n   * Creates an instance of checkbox component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n   *\n   * @param event Event object from the checkbox that contains the boolean property 'checked'\n   * @param option Tells us which option was checked or unchecked\n   */\n  filterOnChange(event: MatCheckboxChange, option: string): void {\n    const checked = event.checked;\n\n    if (checked) {\n      this.selection = [...this.selection, option];\n      this.ga.event('filter_added', 'filter_checkbox', option);\n    } else {\n      this.selection = this.selection.filter((selection) => selection !== option);\n      this.ga.event('filter_removed', 'filter_checkbox', option);\n    }\n\n    this.selectionChange.emit(this.selection);\n  }\n}\n","<div class=\"filter-container\">\n  <div class=\"filter-label\">{{ label }}</div>\n\n  <div class=\"options-container\" [class.three]=\"columns === 3\" [class.five]=\"columns === 5\">\n    <div *ngFor=\"let option of options\" class=\"option\">\n      <mat-checkbox [checked]=\"selection?.includes(option)\" (change)=\"filterOnChange($event, option)\">\n        {{ option }}\n      </mat-checkbox>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CheckboxComponent } from './checkbox.component';\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent],\n})\nexport class CheckboxModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  HostBinding,\n  OnDestroy,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private readonly drawers!: QueryList<DrawerComponent>;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private readonly content1!: QueryList<ContentComponent>;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private readonly content2!: QueryList<ContentComponent>;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private readonly channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(\n    messageService: MessageService,\n    private readonly cdr: ChangeDetectorRef,\n  ) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(\n      this.channel.getMessages().subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers,\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content,\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter((drawer) => drawer.position === 'start');\n    const endDrawers = drawers.filter((drawer) => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n","<ng-content select=\"ccf-drawer\"></ng-content>\n\n<ng-content select=\"ccf-drawer-content\"></ng-content>\n<ccf-drawer-content *ngIf=\"!hasWrappedContent\">\n  <ng-content></ng-content>\n</ccf-drawer-content>\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '<ng-content></ng-content>',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false <=> true', animate('1s')),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService, cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(\n      messages.subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean, width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = startExpanded || endExpanded;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [\n    {\n      provide: MESSAGE_SERVICE_CONFIG,\n      useValue: MESSAGE_SERVICE_DEFAULT_CONFIG,\n    },\n  ],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n})\nexport class DrawerModule {}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0,\n  },\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private readonly deferred = new Promise<void>((resolve) => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve!: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise<void> {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(\n        'open, open-instant',\n        style({\n          transform: 'none',\n        }),\n      ),\n      state('closed', style({})),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed <=> open, open-instant => closed', animate('.5s ease-in-out')),\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state(\n        'half',\n        style({\n          width: 'calc(50% - {{ margin }}px)',\n        }),\n        EXPAND_COLLAPSE_PARAMS_DEFAULT,\n      ),\n      state(\n        'extended',\n        style({\n          width: 'calc(100% - {{ width }}px - {{ margin }}px)',\n        }),\n        EXPAND_COLLAPSE_PARAMS_DEFAULT,\n      ),\n      state(\n        'full',\n        style({\n          width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)',\n        }),\n        EXPAND_COLLAPSE_PARAMS_DEFAULT,\n      ),\n\n      transition('* <=> *', animate('.5s ease-in-out')),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // eslint-disable-line\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input() // eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // eslint-disable-line\n  @HostBinding('class.ccf-drawer-opened') // eslint-disable-line\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // eslint-disable-line\n  @HostBinding('class.ccf-drawer-expanded') // eslint-disable-line\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter<boolean>(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter<boolean>(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter<void>(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose') openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse') // eslint-disable-line\n  get expandedStateObj(): unknown {\n    return {\n      value: this.expandedState2,\n      params: {\n        width: this.width,\n        margin: this.measuredMargin,\n        margin2: this.margin2,\n      },\n    };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private readonly initialized = new InitializationState();\n  /** Connected message channel. */\n  private readonly channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(\n    messageService: MessageService,\n    cdr: ChangeDetectorRef,\n    private readonly element: ElementRef<HTMLElement>,\n  ) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(\n      this.channel.getMessages().subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // eslint-disable-line\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // eslint-disable-line\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise<void> {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin,\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      const other = msg.source as DrawerComponent;\n      this.syncExpanded(other);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n","<div class=\"cff-drawer-inner-container\">\n  <ng-content></ng-content>\n</div>\n","import {\n  Message as GenericMessage,\n  MessageChannel as GenericMessageChannel,\n  MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage<Payload>;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel<Payload>;\n/** Specific service type. */\nexport type MessageService = GenericMessageService<Payload>;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // eslint-disable-line\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      [expand, collapse] = [collapse, expand];\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(\n    private readonly drawer: DrawerComponent,\n    messageService: MessageService,\n    private readonly cdr: ChangeDetectorRef,\n  ) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(\n      channel.getMessagesFromSource(drawer).subscribe((msg) => {\n        if (this.handleMessage(msg)) {\n          cdr.markForCheck();\n        }\n      }),\n    );\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n","<mat-icon class=\"expand-collapse-icon\" aria-hidden=\"false\" aria-label=\"Close side drawer\" (click)=\"toggle()\">\n  {{ icon }}\n</mat-icon>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for a dropdown menu.\n */\n@Component({\n  selector: 'ccf-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DropdownComponent {\n  /**\n   * What the component is selecting for.\n   */\n  @Input() label!: string;\n\n  /**\n   * Choices displayed in the dropdown menu.\n   */\n  @Input() options!: string[];\n\n  /**\n   * Current option selected.\n   */\n  @Input() selection!: string;\n\n  /**\n   * Emits the new selected option when selection is changed.\n   */\n  @Output() readonly selectionChange = new EventEmitter<string>();\n\n  /**\n   * Determines if menu contents are visible (used for fade-in effect).\n   */\n  optionsVisible = 'invisible';\n\n  /**\n   * Creates an instance of dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) {}\n\n  /**\n   * Controls fade-in effect after dropdown menu opens\n   */\n  toggleOptions(): void {\n    this.optionsVisible = this.optionsVisible === 'visible' ? 'invisible' : 'visible';\n  }\n\n  /**\n   * Updates the selected value.\n   *\n   * @param value The value that has been selected\n   */\n  selectionChanged(value: string): void {\n    this.selection = value;\n    this.ga.event('selection_change', 'dropdown', `${this.label}:${value}`);\n    this.selectionChange.emit(value);\n  }\n}\n","<div class=\"ccf-dropdown wrapper\">\n  <mat-form-field class=\"dropdown-form-field\" subscriptSizing=\"dynamic\">\n    <div class=\"label\">\n      {{ label }}\n    </div>\n    <mat-select\n      class=\"selected-value\"\n      [value]=\"selection\"\n      (selectionChange)=\"selectionChanged($event.value)\"\n      disableOptionCentering=\"true\"\n      panelClass=\"option-panel\"\n      (openedChange)=\"toggleOptions()\"\n      disableRipple=\"true\"\n      hideSingleSelectionIndicator=\"true\"\n    >\n      <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n        <div class=\"{{ optionsVisible }}\">\n          {{ option }}\n        </div>\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DropdownComponent } from './dropdown.component';\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent],\n})\nexport class DropdownModule {}\n","import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { Options } from '@angular-slider/ngx-slider';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-dual-slider',\n  templateUrl: './dual-slider.component.html',\n  styleUrls: ['./dual-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DualSliderComponent implements OnDestroy, OnChanges {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal!: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement!: ElementRef<HTMLElement>;\n\n  /**\n   * Which criteria the slider is selecting for.\n   */\n  @Input() label!: string;\n\n  /**\n   * The lower and upper range of the slider.\n   */\n  @Input() valueRange!: number[];\n\n  /**\n   * The current range selected.\n   */\n  @Input() selection!: number[];\n\n  /**\n   * Emits the new selection range when a change is made to it.\n   */\n  @Output() readonly selectionChange = new EventEmitter<number[]>();\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options!: Options;\n\n  /**\n   * Value bound to the slider's low pointer value.\n   */\n  lowValue!: number;\n\n  /**\n   * Value bound to the slider's high pointer value.\n   */\n  highValue!: number;\n\n  /**\n   * Determines if slider contents are visible (used for fade-in effect).\n   */\n  contentsVisible = 'invisible';\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get rangeLabel(): string {\n    const { lowValue, highValue } = this;\n    if (lowValue === highValue) {\n      return `${lowValue}`;\n    }\n    return `${lowValue}-${highValue}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private readonly overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of dual slider component.\n   *\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   * @param ga Analytics service\n   */\n  constructor(\n    overlay: Overlay,\n    private readonly element: ElementRef<HTMLElement>,\n    private readonly ga: GoogleAnalyticsService,\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'slider-pane',\n      positionStrategy,\n    });\n  }\n\n  /**\n   * Updates slider options (with optionsChanged) and selection when changes detected.\n   *\n   * @param changes Changes that have been made to the slider properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['valueRange']) {\n      this.optionsChanged();\n    }\n    if (changes['selection']) {\n      // Detect when selection is changed and update low/high value.\n      this.lowValue = Math.min(...this.selection);\n      this.highValue = Math.max(...this.selection);\n    }\n  }\n\n  /**\n   * Updates the slider options, and the slider values if necessary.\n   */\n  optionsChanged(): void {\n    this.options = {\n      floor: this.valueRange ? this.valueRange[0] : 0,\n      ceil: this.valueRange ? this.valueRange[1] : 0,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true,\n    };\n    this.lowValue = this.options.floor ?? 0;\n    this.highValue = this.options.ceil ?? 0;\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy(): void {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click, mouse movement, and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target'])\n  @HostListener('document:touchstart', ['$event.target'])\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    const isEventOutside =\n      !isSliderOpen || element.nativeElement.contains(target) || popoverElement?.nativeElement?.contains?.(target);\n    if (isEventOutside) {\n      return;\n    }\n\n    this.overlayRef.detach();\n    this.isSliderInitialized = false;\n    this.isSliderOpen = false;\n    this.contentsVisible = 'invisible';\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (isSliderInitialized) {\n      this.overlayRef.detach();\n      this.isSliderInitialized = false;\n    } else if (!isSliderInitialized && !isSliderOpen) {\n      this.initializeSliderPopover();\n    }\n\n    this.contentsVisible = this.contentsVisible === 'visible' ? 'invisible' : 'visible';\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Emits the updated selection value array.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue } = this;\n\n    this.selection = [lowValue, highValue];\n    this.ga.event('slider_range_change', 'dual_slider', `${this.label}:${lowValue}:${highValue}`);\n    this.selectionChange.emit(this.selection);\n  }\n\n  /**\n   * Creates and initializes the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n\n  /**\n   * Updates the slider's low pointer value when Enter key is pressed.\n   *\n   * @param event Event passed into the component\n   */\n  onKeyLow(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue <= Number(this.options.ceil)) {\n        this.lowValue = newValue;\n      }\n      (event.target as HTMLInputElement).value = String(this.lowValue);\n      (event.target as HTMLInputElement).blur();\n      this.sliderValueChanged();\n    }\n  }\n\n  /**\n   * Updates the slider's high pointer value when Enter key is pressed.\n   *\n   * @param event Event passed into the component\n   */\n  onKeyHigh(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue <= Number(this.options.ceil)) {\n        this.highValue = newValue;\n      }\n      (event.target as HTMLInputElement).value = String(this.highValue);\n      (event.target as HTMLInputElement).blur();\n      this.sliderValueChanged();\n    }\n  }\n}\n","<div class=\"ccf-slider wrapper\">\n  <div class=\"container\">\n    <div *cdk-portal class=\"ccf-slider detached\" #popover>\n      <div class=\"label min fade-in {{ contentsVisible }}\">\n        <div class=\"label floor\">{{ options.floor }}></div>\n        <input class=\"input-low\" type=\"text\" value=\"{{ lowValue }}\" (keyup)=\"onKeyLow($event)\" />\n      </div>\n\n      <ngx-slider\n        class=\"slider fade-in {{ contentsVisible }}\"\n        [options]=\"options\"\n        [(value)]=\"lowValue\"\n        [(highValue)]=\"highValue\"\n        (userChangeEnd)=\"sliderValueChanged()\"\n      >\n      </ngx-slider>\n\n      <div class=\"label max fade-in {{ contentsVisible }}\">\n        <div class=\"label ceil\">{{ options.ceil }}</div>\n        <input class=\"input-high\" type=\"text\" value=\"{{ highValue }}\" (keyup)=\"onKeyHigh($event)\" />\n      </div>\n    </div>\n\n    <mat-form-field\n      class=\"slider-form-field\"\n      [class.highlight]=\"isSliderOpen\"\n      (click)=\"toggleSliderPopover()\"\n      subscriptSizing=\"dynamic\"\n    >\n      <div class=\"slider-labels\">\n        <span class=\"name-label\">{{ label }}</span>\n        <span class=\"range-label\">{{ rangeLabel }}</span>\n      </div>\n      <mat-select></mat-select>\n    </mat-form-field>\n  </div>\n</div>\n","import { NgxSliderModule } from '@angular-slider/ngx-slider';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DualSliderComponent } from './dual-slider.component';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, PortalModule, NgxSliderModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DualSliderComponent],\n  exports: [DualSliderComponent],\n})\nexport class DualSliderModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Store } from '@ngxs/store';\nimport { take, tap } from 'rxjs/operators';\n\nimport { StartSpatialSearchFlow } from '../../../core/store/spatial-search-ui/spatial-search-ui.actions';\nimport { SpatialSearchConfigBehaviorComponent } from '../spatial-search-config-behavior/spatial-search-config-behavior.component';\n\n/**\n * Button that opens up the Spatial Search config\n */\n@Component({\n  selector: 'ccf-run-spatial-search',\n  templateUrl: './run-spatial-search.component.html',\n  styleUrls: ['./run-spatial-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RunSpatialSearchComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-run-spatial-search';\n\n  constructor(\n    private readonly store: Store,\n    private readonly dialog: MatDialog,\n  ) {}\n\n  /**\n   * Starts spatial search flow\n   */\n  startSpatialSearchFlow(): void {\n    this.store\n      .dispatch(new StartSpatialSearchFlow())\n      .pipe(\n        take(1),\n        tap(() => this.dialog.open(SpatialSearchConfigBehaviorComponent)),\n      )\n      .subscribe();\n  }\n}\n","<button class=\"run-spatial-search-button\" mat-button (click)=\"startSpatialSearchFlow()\">\n  Run Spatial Search\n  <mat-icon>travel_explore</mat-icon>\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { RunSpatialSearchComponent } from './run-spatial-search.component';\nimport { SpatialSearchConfigBehaviorModule } from '../spatial-search-config-behavior/spatial-search-config-behavior.module';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, SpatialSearchConfigBehaviorModule],\n  declarations: [RunSpatialSearchComponent],\n  exports: [RunSpatialSearchComponent],\n})\nexport class RunSpatialSearchModule {}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { GlobalConfigState, InfoButtonService, InfoDialogComponent, OrganInfo, PanelData } from 'ccf-shared';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { actionAsFn } from '../../../core/store/action-as-fn';\nimport { SetOrgan, SetSex } from '../../../core/store/spatial-search-ui/spatial-search-ui.actions';\nimport { SpatialSearchUiSelectors } from '../../../core/store/spatial-search-ui/spatial-search-ui.selectors';\nimport { Sex, SpatialSearchConfigComponent } from '../spatial-search-config/spatial-search-config.component';\nimport { SpatialSearchUiBehaviorComponent } from '../spatial-search-ui-behavior/spatial-search-ui-behavior.component';\n\n@Component({\n  selector: 'ccf-spatial-search-config-behavior',\n  templateUrl: './spatial-search-config-behavior.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpatialSearchConfigBehaviorComponent implements OnDestroy {\n  @Select(SpatialSearchUiSelectors.sex)\n  readonly sex$!: Observable<Sex>;\n\n  @Select(SpatialSearchUiSelectors.organ)\n  readonly selectedOrgan$!: Observable<OrganInfo | undefined>;\n\n  @Select(SpatialSearchUiSelectors.organs)\n  readonly organs$!: Observable<OrganInfo[]>;\n\n  @Dispatch()\n  readonly updateSex = actionAsFn(SetSex);\n\n  @Dispatch()\n  readonly updateOrgan = actionAsFn(SetOrgan);\n\n  panelData!: PanelData;\n\n  baseHref = '';\n\n  private readonly subscriptions = new Subscription();\n\n  private readonly dialogSubs = new Subscription();\n\n  constructor(\n    public dialog: MatDialog,\n    private readonly dialogRef: MatDialogRef<SpatialSearchConfigComponent>,\n    private readonly spatialSearchDialog: MatDialog,\n    private readonly infoService: InfoButtonService,\n    private readonly globalConfig: GlobalConfigState<{ baseHref: string }>,\n  ) {\n    this.globalConfig.getOption('baseHref').subscribe((ref) => {\n      this.baseHref = ref;\n    });\n  }\n\n  buttonClicked(): void {\n    this.spatialSearchDialog.open(SpatialSearchUiBehaviorComponent);\n    this.close();\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  launchInfoDialog(data: PanelData): void {\n    this.dialogSubs.unsubscribe();\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '72rem',\n      data: {\n        title: data.infoTitle,\n        content: data.content,\n        videoID: data.videoID,\n      },\n    });\n  }\n\n  onDialogButtonClick(): void {\n    this.infoService.updateData(\n      this.baseHref + 'assets/docs/SPATIAL_SEARCH_README.md',\n      'UfxMpzatowE',\n      'Spatial Search',\n    );\n    const panelContent$ = this.infoService.panelContent.asObservable();\n    this.dialogSubs.add(\n      panelContent$.subscribe((data) => {\n        if (data.content.length) {\n          this.panelData = data;\n          this.launchInfoDialog(this.panelData);\n        }\n      }),\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ccf-spatial-search-config\n  [sex]=\"(sex$ | async) ?? 'male'\"\n  [organs]=\"(organs$ | async) ?? []\"\n  [selectedOrgan]=\"(selectedOrgan$ | async) ?? undefined\"\n  (updateSex)=\"updateSex($event)\"\n  (updateOrgan)=\"updateOrgan($event.id)\"\n  (closeDialog)=\"close()\"\n  (buttonClicked)=\"buttonClicked()\"\n  (infoClicked)=\"onDialogButtonClick()\"\n>\n</ccf-spatial-search-config>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { SpatialSearchConfigModule } from '../spatial-search-config/spatial-search-config.module';\nimport { SpatialSearchUiBehaviorModule } from '../spatial-search-ui-behavior/spatial-search-ui-behavior.module';\nimport { SpatialSearchConfigBehaviorComponent } from './spatial-search-config-behavior.component';\n\n@NgModule({\n  imports: [CommonModule, SpatialSearchConfigModule, MatDialogModule, SpatialSearchUiBehaviorModule],\n  declarations: [SpatialSearchConfigBehaviorComponent],\n  exports: [SpatialSearchConfigBehaviorComponent],\n})\nexport class SpatialSearchConfigBehaviorModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { OrganInfo } from 'ccf-shared';\n\n/** Sex can either be male or female */\nexport type Sex = 'male' | 'female';\n\n/**\n * Config popup for spatial search\n */\n@Component({\n  selector: 'ccf-spatial-search-config',\n  templateUrl: './spatial-search-config.component.html',\n  styleUrls: ['./spatial-search-config.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpatialSearchConfigComponent {\n  @HostBinding('class') readonly className = 'ccf-spatial-search-config';\n\n  /** Selectable organs */\n  @Input() organs!: OrganInfo[];\n\n  /** Currently selected organ */\n  @Input() selectedOrgan?: OrganInfo;\n\n  /** Currently selected sex */\n  @Input() sex!: Sex;\n\n  /** Emits when sex is updated */\n  @Output() readonly updateSex = new EventEmitter<Sex>();\n\n  /** Emits when organ is updated */\n  @Output() readonly updateOrgan = new EventEmitter<OrganInfo>();\n\n  /** Emits when the continue button is clicked */\n  @Output() readonly buttonClicked = new EventEmitter();\n\n  /** Emits when the close button is clicked */\n  @Output() readonly closeDialog = new EventEmitter();\n\n  /** Emits when the info button is clicked */\n  @Output() readonly infoClicked = new EventEmitter();\n}\n","<div class=\"header\">\n  <div class=\"header-left\">\n    <div class=\"title\">Configure Spatial Search</div>\n    <button class=\"info\" mat-icon-button (click)=\"infoClicked.emit()\">\n      <mat-icon>info</mat-icon>\n    </button>\n  </div>\n  <button class=\"close\" mat-icon-button (click)=\"closeDialog.emit()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n\n<div class=\"sex-toggle\">\n  <div class=\"label\">Donor Sex:</div>\n  <mat-radio-group class=\"radio-group\" [(ngModel)]=\"sex\" (change)=\"updateSex.emit($event.value)\">\n    <mat-radio-button class=\"radio\" value=\"male\">Male</mat-radio-button>\n    <mat-radio-button class=\"radio\" value=\"female\">Female</mat-radio-button>\n  </mat-radio-group>\n</div>\n\n<div class=\"organ-selector\">\n  <div class=\"label\">Select an organ</div>\n  <mat-form-field class=\"form-field\" appearance=\"fill\" subscriptSizing=\"dynamic\">\n    <div *ngIf=\"!selectedOrgan\" class=\"label\">Organs</div>\n    <mat-select\n      disableOptionCentering=\"true\"\n      panelClass=\"organ-select\"\n      [(value)]=\"selectedOrgan\"\n      (selectionChange)=\"updateOrgan.emit($event.value)\"\n      hideSingleSelectionIndicator=\"true\"\n    >\n      <mat-option class=\"organ-select-option\" *ngFor=\"let organ of organs\" [value]=\"organ\">\n        {{ organ.name }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<button class=\"continue-button\" [class.disabled]=\"!selectedOrgan\" mat-button (click)=\"buttonClicked.emit()\">\n  Continue\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { SpatialSearchConfigComponent } from './spatial-search-config.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, MatSelectModule, MatIconModule, MatRadioModule, MatButtonModule],\n  declarations: [SpatialSearchConfigComponent],\n  exports: [SpatialSearchConfigComponent],\n})\nexport class SpatialSearchConfigModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { SpatialSceneNode, TissueBlockResult } from 'ccf-database';\nimport { GlobalConfigState, InfoButtonService, InfoDialogComponent, OrganInfo, PanelData } from 'ccf-shared';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { actionAsFn } from '../../../core/store/action-as-fn';\nimport {\n  GenerateSpatialSearch,\n  MoveToNode,\n  ResetPosition,\n  ResetRadius,\n  SetPosition,\n  SetRadius,\n} from '../../../core/store/spatial-search-ui/spatial-search-ui.actions';\nimport { SpatialSearchUiSelectors } from '../../../core/store/spatial-search-ui/spatial-search-ui.selectors';\nimport { Position, RadiusSettings, TermResult } from '../../../core/store/spatial-search-ui/spatial-search-ui.state';\nimport { SpatialSearchConfigBehaviorComponent } from '../spatial-search-config-behavior/spatial-search-config-behavior.component';\nimport { Sex } from '../spatial-search-config/spatial-search-config.component';\nimport { SpatialSearchUiComponent } from '../spatial-search-ui/spatial-search-ui.component';\n\n/**\n * Behavioral component for Spatial Search UI\n */\n@Component({\n  selector: 'ccf-spatial-search-ui-behavior',\n  templateUrl: './spatial-search-ui-behavior.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpatialSearchUiBehaviorComponent {\n  @Select(SpatialSearchUiSelectors.scene)\n  readonly scene$!: Observable<SpatialSceneNode[]>;\n\n  @Select(SpatialSearchUiSelectors.sceneBounds)\n  readonly sceneBounds$!: Observable<Position>;\n\n  @Select(SpatialSearchUiSelectors.sceneTarget)\n  readonly sceneTarget$!: Observable<Position>;\n\n  @Select(SpatialSearchUiSelectors.sex)\n  readonly sex$!: Observable<Sex>;\n\n  @Select(SpatialSearchUiSelectors.organ)\n  readonly organ$!: Observable<OrganInfo | undefined>;\n\n  @Select(SpatialSearchUiSelectors.position)\n  readonly position$!: Observable<Position>;\n\n  @Select(SpatialSearchUiSelectors.defaultPosition)\n  readonly defaultPosition$!: Observable<Position>;\n\n  @Select(SpatialSearchUiSelectors.radius)\n  readonly radius$!: Observable<number>;\n\n  @Select(SpatialSearchUiSelectors.radiusSettings)\n  readonly radiusSettings$!: Observable<RadiusSettings>;\n\n  @Select(SpatialSearchUiSelectors.tissueBlocks)\n  readonly tissueBlocks$!: Observable<TissueBlockResult[]>;\n\n  @Select(SpatialSearchUiSelectors.anatomicalStructures)\n  readonly anatomicalStructures$!: Observable<TermResult[]>;\n\n  @Select(SpatialSearchUiSelectors.cellTypes)\n  readonly cellTypes$!: Observable<TermResult[]>;\n\n  @Dispatch()\n  readonly updatePosition = actionAsFn(SetPosition);\n\n  @Dispatch()\n  readonly resetPosition = actionAsFn(ResetPosition);\n\n  @Dispatch()\n  readonly moveToNode = actionAsFn(MoveToNode);\n\n  @Dispatch()\n  readonly updateRadius = actionAsFn(SetRadius);\n\n  @Dispatch()\n  readonly resetRadius = actionAsFn(ResetRadius);\n\n  /** Data to be displayed in the info panel */\n  panelData!: PanelData;\n\n  baseHref = '';\n\n  /** Subscriptions for the info panel data */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<SpatialSearchUiComponent>,\n    public dialog: MatDialog,\n    private readonly infoService: InfoButtonService,\n    private readonly globalConfig: GlobalConfigState<{ baseHref: string }>,\n  ) {\n    this.globalConfig.getOption('baseHref').subscribe((ref) => {\n      this.baseHref = ref;\n    });\n  }\n\n  /**\n   * Launchs info dialog with the input data\n   * @param data Data for the info dialog\n   */\n  launchInfoDialog(data: PanelData): void {\n    this.subscriptions.unsubscribe();\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '72rem',\n      data: {\n        title: data.infoTitle,\n        content: data.content,\n        videoID: data.videoID,\n      },\n    });\n  }\n\n  /**\n   * Updates dialog with spatial search information\n   */\n  onDialogButtonClick(): void {\n    this.infoService.updateData(\n      this.baseHref + 'assets/docs/SPATIAL_SEARCH_README.md',\n      'UfxMpzatowE',\n      'Spatial Search',\n    );\n    const panelContent$ = this.infoService.panelContent.asObservable();\n    this.subscriptions.add(\n      panelContent$.subscribe((data) => {\n        if (data.content.length) {\n          this.panelData = data;\n          this.launchInfoDialog(this.panelData);\n        }\n      }),\n    );\n  }\n\n  /**\n   * Closes spatial search UI\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Adds a new spatial search and closes the spatial search UI\n   * @returns spatial search\n   */\n  @Dispatch()\n  addSpatialSearch(): GenerateSpatialSearch {\n    this.close();\n    return new GenerateSpatialSearch();\n  }\n\n  /**\n   * Closes the spatial search UI and opens spatial search config\n   */\n  openSpatialSearchConfig(): void {\n    this.close();\n    this.dialog.open(SpatialSearchConfigBehaviorComponent);\n  }\n}\n","<ccf-spatial-search-ui\n  *ngIf=\"organ$ | async as organ\"\n  [sex]=\"(sex$ | async)!\"\n  [referenceOrgan]=\"organ\"\n  [radius]=\"(radius$ | async) ?? 0\"\n  [radiusSettings]=\"(radiusSettings$ | async)!\"\n  [defaultPosition]=\"(defaultPosition$ | async)!\"\n  [position]=\"(position$ | async)!\"\n  [scene]=\"(scene$ | async)!\"\n  [sceneBounds]=\"(sceneBounds$ | async)!\"\n  [sceneTarget]=\"$any(sceneTarget$ | async)!\"\n  [tissueBlocks]=\"(tissueBlocks$ | async)!\"\n  [anatomicalStructures]=\"(anatomicalStructures$ | async) ?? []\"\n  [cellTypes]=\"(cellTypes$ | async) ?? []\"\n  (addSpatialSearch)=\"addSpatialSearch()\"\n  (radiusChange)=\"updateRadius($event)\"\n  (resetPosition)=\"resetPosition()\"\n  (resetSphere)=\"resetRadius()\"\n  (positionChange)=\"updatePosition($event)\"\n  (closeSpatialSearch)=\"close()\"\n  (editReferenceOrganClicked)=\"openSpatialSearchConfig()\"\n  (infoClicked)=\"onDialogButtonClick()\"\n  (nodeClicked)=\"moveToNode($event)\"\n>\n</ccf-spatial-search-ui>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { SpatialSearchUiModule } from '../spatial-search-ui/spatial-search-ui.module';\nimport { SpatialSearchUiBehaviorComponent } from './spatial-search-ui-behavior.component';\n\n@NgModule({\n  imports: [CommonModule, SpatialSearchUiModule, MatDialogModule],\n  declarations: [SpatialSearchUiBehaviorComponent],\n  exports: [SpatialSearchUiBehaviorComponent],\n})\nexport class SpatialSearchUiBehaviorModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { SpatialSceneNode } from 'ccf-body-ui';\nimport { TissueBlockResult } from 'ccf-database';\nimport { OrganInfo } from 'ccf-shared';\n\nimport { Position, RadiusSettings, TermResult } from '../../../core/store/spatial-search-ui/spatial-search-ui.state';\n\n/**\n * Main Spatial Search UI component\n */\n@Component({\n  selector: 'ccf-spatial-search-ui',\n  templateUrl: './spatial-search-ui.component.html',\n  styleUrls: ['./spatial-search-ui.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpatialSearchUiComponent {\n  /** HTML Class */\n  @HostBinding('class') readonly className = 'ccf-spatial-search-ui';\n\n  /** Nodes in the scene */\n  @Input() scene!: SpatialSceneNode[];\n\n  /** Bounds of the scene */\n  @Input() sceneBounds!: Position;\n\n  /** Scene target */\n  @Input() sceneTarget!: [number, number, number];\n\n  /** Current selected sex */\n  @Input() sex!: string;\n\n  /** Current selected organ */\n  @Input() referenceOrgan!: OrganInfo;\n\n  /** Current sphere radius setting */\n  @Input() radius!: number;\n\n  /** Maximum, minimum, and default sphere radius values */\n  @Input() radiusSettings!: RadiusSettings;\n\n  /** Starting position of sphere */\n  @Input() defaultPosition!: Position;\n\n  /** Current position of sphere */\n  @Input() position!: Position;\n\n  /** Tissue blocks within the sphere radius */\n  @Input() tissueBlocks!: TissueBlockResult[];\n\n  /** Anatomical structures within the sphere radius */\n  @Input() anatomicalStructures!: TermResult[];\n\n  /** Cell types within the sphere radius */\n  @Input() cellTypes!: TermResult[];\n\n  /** Emits when run spatial search button clicked */\n  @Output() readonly addSpatialSearch = new EventEmitter();\n\n  /** Emits when reset probing sphere button clicked */\n  @Output() readonly resetPosition = new EventEmitter();\n\n  /** Emits when reset camera button clicked */\n  @Output() readonly resetSphere = new EventEmitter();\n\n  /** Emits when close button clicked */\n  @Output() readonly closeSpatialSearch = new EventEmitter();\n\n  /** Emits when the radius changes */\n  @Output() readonly radiusChange = new EventEmitter<number>();\n\n  /** Emits when the sphere position changes */\n  @Output() readonly positionChange = new EventEmitter<Position>();\n\n  /** Emits when the edit organ link is clicked */\n  @Output() readonly editReferenceOrganClicked = new EventEmitter();\n\n  /** Emits when info button in header is clicked */\n  @Output() readonly infoClicked = new EventEmitter();\n\n  /** Emits when a node in the scene is clicked */\n  @Output() readonly nodeClicked = new EventEmitter<SpatialSceneNode>();\n}\n","<div class=\"header\">\n  <div class=\"title\">Configure Spatial Search</div>\n  <button class=\"info\" mat-icon-button (click)=\"infoClicked.emit()\">\n    <mat-icon>info</mat-icon>\n  </button>\n  <button class=\"close\" mat-icon-button (click)=\"closeSpatialSearch.emit()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n\n<div class=\"content\">\n  <div class=\"info-panel\">\n    <div class=\"organ-sex-selection\">\n      <div class=\"sex\">\n        <div class=\"label\">Donor Sex:</div>\n        <div class=\"current-sex\">{{ sex.charAt(0).toUpperCase() + sex.slice(1) }}</div>\n      </div>\n      <div class=\"organ\">\n        <div class=\"label\">Organ:</div>\n        <div class=\"current-organ\">{{ referenceOrgan.name }}</div>\n      </div>\n      <div class=\"edit\" (click)=\"editReferenceOrganClicked.emit()\">Edit</div>\n    </div>\n    <mat-divider></mat-divider>\n    <div class=\"radius-slider\">\n      <div class=\"title\">Probing Sphere Radius</div>\n      <div class=\"slider-container\">\n        <mat-slider class=\"slider\" [max]=\"radiusSettings.max\" [min]=\"radiusSettings.min\" [step]=\"1\">\n          <input matSliderThumb [value]=\"radius\" (input)=\"radiusChange.emit(+slider.value)\" #slider />\n        </mat-slider>\n        <span class=\"text value\">{{ radius }} mm</span>\n      </div>\n      <div class=\"reset-buttons\">\n        <button\n          class=\"reset-sphere button\"\n          [class.disabled]=\"radius === radiusSettings.defaultValue && position === defaultPosition\"\n          mat-button\n          (click)=\"resetSphere.emit(); resetPosition.emit()\"\n        >\n          Reset Probing Sphere\n        </button>\n        <button\n          class=\"reset-camera button\"\n          mat-button\n          (click)=\"\n            primary.rotation = primary.rotationX = minimap.rotation = minimap.rotationX = 0;\n            primary.target = minimap.target = sceneTarget;\n            primary.bounds = minimap.bounds = sceneBounds\n          \"\n        >\n          Reset Camera View\n        </button>\n      </div>\n    </div>\n    <mat-divider></mat-divider>\n    <div class=\"results\">\n      <ccf-tissue-block-list class=\"tissue-block list\" [tissueBlocks]=\"tissueBlocks\"></ccf-tissue-block-list>\n      <ccf-term-occurrence-list\n        class=\"anatomical-structures list\"\n        [termList]=\"anatomicalStructures\"\n        title=\"Anatomical Structures\"\n        toolTipText=\"Total quantity of predicted anatomical structures detected by the Probing Sphere\"\n      >\n      </ccf-term-occurrence-list>\n      <ccf-term-occurrence-list\n        class=\"cell-type list\"\n        [termList]=\"cellTypes\"\n        title=\"Predicted Cell Types from ASCT+B Tables\"\n        toolTipText=\"Total quantity of predicted cell types detected by the Probing Sphere\"\n      ></ccf-term-occurrence-list>\n    </div>\n    <button\n      class=\"run-spatial-search button\"\n      [class.disabled]=\"tissueBlocks?.length === 0\"\n      mat-button\n      (click)=\"addSpatialSearch.emit()\"\n    >\n      Run Spatial Search\n    </button>\n  </div>\n  <div class=\"spatial-search-scene\">\n    <div class=\"primary-scene-wrapper\">\n      <div class=\"body-ui-hint\">Use the keyboard or click a Tissue Block to move the Probing Sphere</div>\n      <ccf-body-ui\n        #primary\n        class=\"primary-scene\"\n        [scene]=\"scene\"\n        [bounds]=\"sceneBounds\"\n        [target]=\"sceneTarget\"\n        (nodeClick)=\"nodeClicked.emit($event?.node)\"\n        (rotationChange)=\"minimap.rotation = $event[0]; minimap.rotationX = $event[1]\"\n      ></ccf-body-ui>\n    </div>\n    <div class=\"sidebar\">\n      <ccf-body-ui\n        #minimap\n        class=\"minimap-scene\"\n        [interactive]=\"false\"\n        [scene]=\"scene\"\n        [bounds]=\"sceneBounds\"\n        [target]=\"sceneTarget\"\n        (nodeClick)=\"nodeClicked.emit($event?.node)\"\n      ></ccf-body-ui>\n      <ccf-spatial-search-keyboard-ui-behavior\n        [delta]=\"1\"\n        [shiftDelta]=\"2\"\n        [position]=\"position\"\n        (changePosition)=\"positionChange.emit($event)\"\n      ></ccf-spatial-search-keyboard-ui-behavior>\n      <ccf-xyz-position [x]=\"position.x\" [y]=\"position.y\" [z]=\"position.z\"></ccf-xyz-position>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { BodyUiModule, InfoButtonModule, SpatialSearchKeyboardUIBehaviorModule, XYZPositionModule } from 'ccf-shared';\nimport { TermOccurrenceListModule } from '../term-occurence-list/term-occurrence.module';\nimport { TissueBlockListModule } from '../tissue-block-list/tissue-block-list.module';\nimport { SpatialSearchUiComponent } from './spatial-search-ui.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BodyUiModule,\n    XYZPositionModule,\n    TissueBlockListModule,\n    SpatialSearchKeyboardUIBehaviorModule,\n    MatIconModule,\n    MatSliderModule,\n    TermOccurrenceListModule,\n    MatDividerModule,\n    MatButtonModule,\n    InfoButtonModule,\n    TermOccurrenceListModule,\n  ],\n  declarations: [SpatialSearchUiComponent],\n  exports: [SpatialSearchUiComponent],\n})\nexport class SpatialSearchUiModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n/**\n * Overlay component that displays a progress spinner and\n * an optional text description.\n */\n@Component({\n  selector: 'ccf-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpinnerOverlayComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spinner-overlay';\n\n  /** Whether the overlay is active/showing. */\n  @Input() @HostBinding('class.active') active = false;\n\n  /** Optional text description displayed alongside the spinner. */\n  @Input() text!: string;\n}\n","<mat-spinner></mat-spinner>\n<div class=\"content\">{{ text }}</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerOverlayComponent],\n  exports: [SpinnerOverlayComponent],\n})\nexport class SpinnerOverlayModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nimport { TermResult } from '../../../core/store/spatial-search-ui/spatial-search-ui.state';\n\n/**\n * Component for a dropdown menu\n */\n@Component({\n  selector: 'ccf-term-occurrence-list',\n  templateUrl: './term-occurrence.component.html',\n  styleUrls: ['./term-occurrence.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TermOccurrenceListComponent {\n  @HostBinding('class') readonly className = 'ccf-term-occurrence-list';\n\n  /**\n   * array that contains the terms and their counts\n   */\n  @Input() termList: TermResult[] = [];\n\n  /**\n   * Holds title for section\n   */\n  @Input() title!: string;\n\n  /**\n   * Text to be included in the tool tip\n   */\n  @Input() toolTipText!: string;\n}\n","<div class=\"term-list-header\">\n  <div class=\"title\">{{ termList.length }} {{ title }}</div>\n  <button class=\"info\" mat-icon-button>\n    <mat-icon matTooltip=\"{{ toolTipText }}\" matTooltipPosition=\"right\">info</mat-icon>\n  </button>\n</div>\n\n<div class=\"term-list\">\n  <div class=\"donor\" *ngFor=\"let term of termList\">\n    <div class=\"term-bloc\">\n      <div class=\"term-line\">{{ term.label }}</div>\n      <div class=\"term-line\">{{ term.count }}</div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { TermOccurrenceListComponent } from './term-occurrence.component';\n\n@NgModule({\n  imports: [CommonModule, MatTooltipModule, MatIconModule],\n  declarations: [TermOccurrenceListComponent],\n  exports: [TermOccurrenceListComponent],\n})\nexport class TermOccurrenceListModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { DatasetResult } from 'ccf-database';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { SwiperOptions } from 'swiper';\nimport { NavigationOptions } from 'swiper/types';\n\n// Returns a unique identifier\nconst nextUid = (() => {\n  let counter = -1;\n  return () => {\n    counter += 1;\n    return counter;\n  };\n})();\n\n/**\n * Carousel containing sample thumbnails in expanded donor cards\n */\n@Component({\n  selector: 'ccf-thumbnail-carousel',\n  templateUrl: './thumbnail-carousel.component.html',\n  styleUrls: ['./thumbnail-carousel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ThumbnailCarouselComponent {\n  /**\n   * Primary css class selector\n   */\n  @HostBinding('class') readonly className = 'ccf-thumbnail-carousel';\n\n  /**\n   * Items to show in the carousel\n   */\n  @Input() data!: DatasetResult[];\n\n  /**\n   * Outputs the result whose link was clicked\n   */\n  @Output() readonly linkClicked = new EventEmitter<DatasetResult>();\n\n  /**\n   * Per instance unique identifier\n   */\n  readonly uid = nextUid();\n\n  /**\n   * HTML id for previous slide button\n   */\n  get prevButtonId(): string {\n    return `ccf-thumbnail-carousel-prev-button-${this.uid}`;\n  }\n\n  /**\n   * HTML id for next slide button\n   */\n  get nextButtonId(): string {\n    return `ccf-thumbnail-carousel-next-button-${this.uid}`;\n  }\n\n  /**\n   * Swiper configuration\n   */\n  readonly config: SwiperOptions = {\n    allowTouchMove: false,\n    slidesOffsetBefore: 4,\n    slidesOffsetAfter: 4,\n    slidesPerView: 'auto',\n    spaceBetween: 4,\n    watchOverflow: true,\n  };\n\n  /**\n   * Navigation configuration\n   */\n  readonly navigation: NavigationOptions = {\n    // Normally I would have prefered referencing the elements themselves instead of using selectors\n    // However in this case it does not work with angular swiper\n    prevEl: '#' + this.prevButtonId,\n    nextEl: '#' + this.nextButtonId,\n  };\n\n  readonly baseHref$ = this.globalConfig.getOption('baseHref');\n\n  baseHref = '';\n\n  constructor(private readonly globalConfig: GlobalConfigState<{ baseHref: string }>) {\n    this.baseHref$.subscribe((ref) => this.setUrl(ref));\n  }\n\n  /**\n   * Extract a unique identifier for an item\n   *\n   * @param _index Unused\n   * @param item The item\n   * @returns An unique identifier\n   */\n  itemId(_index: number, item: DatasetResult): string {\n    return item.thumbnail;\n  }\n\n  setUrl(url: string) {\n    this.baseHref = url;\n  }\n\n  thumbnailUrl(item: DatasetResult): string {\n    return `url(${this.baseHref + item.thumbnail})`;\n  }\n}\n","<div class=\"prev\">\n  <button mat-icon-button disableRipple [attr.id]=\"prevButtonId\">\n    <mat-icon>navigate_before</mat-icon>\n  </button>\n</div>\n\n<swiper class=\"swiper\" [config]=\"config\" [navigation]=\"navigation\">\n  <ng-container *ngFor=\"let item of data; trackBy: itemId\">\n    <ng-template swiperSlide>\n      <div class=\"slide\">\n        <div class=\"thumbnail\" [style.background-image]=\"thumbnailUrl(item)\">\n          {{ item.technology }}\n        </div>\n        <a class=\"link\" (click)=\"linkClicked.emit(item)\">\n          DATA\n          <mat-icon>open_in_new</mat-icon>\n        </a>\n      </div>\n    </ng-template>\n  </ng-container>\n</swiper>\n\n<div class=\"next\">\n  <button mat-icon-button disableRipple [attr.id]=\"nextButtonId\">\n    <!-- Fade element is in here so it can be hidden when the button is disabled -->\n    <div class=\"fade\"></div>\n\n    <mat-icon>navigate_next</mat-icon>\n  </button>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SwiperModule } from 'swiper/angular';\nimport { Navigation, Swiper } from 'swiper';\n\nimport { ThumbnailCarouselComponent } from './thumbnail-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, SwiperModule],\n  declarations: [ThumbnailCarouselComponent],\n  exports: [ThumbnailCarouselComponent],\n})\nexport class ThumbnailCarouselModule {\n  constructor() {\n    // Install swiper modules\n    Swiper.use([Navigation]);\n  }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { TissueBlockResult } from 'ccf-database';\n\n/**\n * Tissue block list in spatial search UI\n */\n@Component({\n  selector: 'ccf-tissue-block-list',\n  templateUrl: './tissue-block-list.component.html',\n  styleUrls: ['./tissue-block-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TissueBlockListComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-tissue-block-list';\n\n  /** Tissue blocks to be displayed */\n  @Input() tissueBlocks: TissueBlockResult[] = [];\n}\n","<div class=\"tissue-block-header\">\n  <div class=\"title\">{{ tissueBlocks.length }} Tissue Blocks</div>\n  <button class=\"info\" mat-icon-button>\n    <mat-icon\n      matTooltip=\"Total quantity of registered Tissue Blocks detected by the Probing Sphere\"\n      matTooltipPosition=\"right\"\n      >info</mat-icon\n    >\n  </button>\n</div>\n\n<div class=\"tissue-list\">\n  <div class=\"donor\" *ngFor=\"let tissueBlock of tissueBlocks\">\n    <mat-icon class=\"icon\">person</mat-icon>\n\n    <div class=\"donor-info\">\n      <div class=\"description\">{{ tissueBlock.donor.label }}</div>\n      <div class=\"description\">{{ tissueBlock.donor.description }}</div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { TissueBlockListComponent } from './tissue-block-list.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatTooltipModule],\n  declarations: [TissueBlockListComponent],\n  exports: [TissueBlockListComponent],\n})\nexport class TissueBlockListModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n/**\n * Viewer for tissue samples\n */\n@Component({\n  selector: 'ccf-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ViewerComponent implements OnChanges {\n  @HostBinding('class') className = 'ccf-viewer';\n\n  @Input() url = '';\n\n  @Output() readonly closed = new EventEmitter<void>();\n\n  loading = true;\n\n  /**\n   * Sanitized url\n   * NOTE: Never use a getter for this property! It will cause the iframe to reload constantly.\n   */\n  safeUrl: SafeResourceUrl | null = null;\n\n  constructor(private readonly sanitizer: DomSanitizer) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('url' in changes) {\n      this.updateUrl();\n    }\n  }\n\n  private updateUrl(): void {\n    const { sanitizer, url } = this;\n    this.safeUrl = null;\n    if (url) {\n      this.safeUrl = sanitizer.bypassSecurityTrustResourceUrl(url);\n      this.loading = true;\n    }\n  }\n}\n","<div class=\"toolbar\">\n  <a mat-flat-button class=\"launch\" target=\"_blank\" rel=\"noopener noreferrer\" [href]=\"safeUrl\" [disabled]=\"!safeUrl\">\n    <mat-icon class=\"icon\">launch</mat-icon>\n    <span class=\"text\">Open in Portal</span>\n  </a>\n  <button mat-flat-button class=\"close\" (click)=\"closed.emit()\">\n    <mat-icon class=\"icon\">clear</mat-icon>\n  </button>\n</div>\n\n<div class=\"overlay\" *ngIf=\"loading\">\n  <mat-spinner class=\"spinner\"></mat-spinner>\n  <span class=\"text\">Loading External Site</span>\n</div>\n\n<iframe\n  *ngIf=\"safeUrl\"\n  class=\"frame\"\n  title=\"Portal Data Viewer\"\n  referrerpolicy=\"no-referrer\"\n  [attr.src]=\"safeUrl\"\n  (load)=\"loading = false\"\n>\n</iframe>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { ViewerComponent } from './viewer.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatProgressSpinnerModule],\n  declarations: [ViewerComponent],\n  exports: [ViewerComponent],\n})\nexport class ViewerModule {}\n","import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Observable, Subject, from } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message<T> {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true,\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken<MessageServiceConfig>('Message service configuration', {\n  providedIn: 'root',\n  factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG,\n});\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel<T> {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private readonly channel: Subject<Message<T>>,\n    private readonly messages: Observable<Message<T>>,\n  ) {}\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload,\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable<Message<T>> {\n    return this.messages.pipe(filter((msg) => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable<Message<T>> {\n    return this.getMessages().pipe(filter((msg) => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable<Message<T>> {\n    return this.getMessages().pipe(filter((msg) => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    const result = MessageChannel.counter;\n    MessageChannel.counter++;\n    return result;\n  }\n}\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService<T> implements OnDestroy {\n  /** The message channel. */\n  private readonly channel = new Subject<Message<T>>();\n  /** The message listener. */\n  private readonly messages: Observable<Message<T>>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(\n    @Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n    @Optional() @SkipSelf() readonly parent: MessageService<T> | null,\n  ) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([this.channel, parent.messages.pipe(takeWhile(() => !this.channel.closed))]).pipe(\n        mergeAll(),\n      );\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel<T> {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n/** Testing environment configuration. */\nexport const environment = {\n  production: false,\n  disableDbWorker: true,\n  acceptableViewerDomains: [\n    'https://portal.hubmapconsortium.org',\n    'https://portal.test.hubmapconsortium.org',\n    'https://data.sennetconsortium.org',\n  ],\n  dbOptions: {\n    ccfOwlUrl: 'assets/ccf.owl.n3store.json',\n    ccfContextUrl: 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n    hubmapDataService: 'search-api',\n    hubmapDataUrl: 'https://search.api.hubmapconsortium.org/v3/entities/search',\n    hubmapToken: localStorage.getItem('HUBMAP_TOKEN') ?? '',\n\n    useRemoteApi: false,\n    remoteApiEndpoint: 'https://apps.humanatlas.io/hra-api--staging/v1',\n  },\n  customization: {\n    theme: 'default',\n    header: true,\n    homeUrl: 'https://portal.hubmapconsortium.org/',\n    logoTooltip: 'Human BioMolecular Atlas Project',\n    loginDisabled: false,\n  },\n  googleAnalyticsToken: 'G-B3DT7XPMRT',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\nimport 'zone.js/plugins/zone-error'; // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { CompositeLayer, COORDINATE_SYSTEM, LayersList } from '@deck.gl/core/typed';\nimport { TextLayer } from '@deck.gl/layers/typed';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers/typed';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore Ignore missing typings\nimport { ConeGeometry, CubeGeometry, CylinderGeometry, Geometry, SphereGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { loadGLTF, loadGLTF2, registerGLTFLoaders } from './util/load-gltf';\nimport { doCollisions } from './util/spatial-scene-collider';\n\nfunction meshLayer(\n  id: string,\n  data: SpatialSceneNode[],\n  options: { [key: string]: unknown },\n): SimpleMeshLayer<unknown> | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    let mesh: Geometry;\n    switch (options['geometry']) {\n      case 'sphere':\n        mesh = new SphereGeometry();\n        break;\n      case 'cone':\n        mesh = new ConeGeometry();\n        break;\n      case 'cylinder':\n        mesh = new CylinderGeometry();\n        break;\n      case 'cube':\n      default:\n        mesh = new CubeGeometry();\n        break;\n    }\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: false,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        mesh: mesh as any,\n        wireframe: false,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color || [255, 255, 255, 0.9 * 255],\n        getTransformMatrix: (d) => (d as { transformMatrix: number[] }).transformMatrix,\n      },\n      ...options,\n    });\n  }\n}\n\nfunction textLayer(\n  id: string,\n  data: SpatialSceneNode[],\n  options: { [key: string]: unknown },\n): TextLayer<unknown> | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new TextLayer({\n      ...{\n        id,\n        pickable: true,\n        data: data.map((d) => ({\n          ...d,\n          position: new Matrix4(d.transformMatrix).getTranslation(),\n        })),\n        getText: (d) => (d as { text: string }).text,\n        getPosition: (d) => (d as { position: [number, number] }).position,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color,\n      },\n      ...options,\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer<SpatialSceneNode> {\n  static override readonly layerName = 'BodyUILayer';\n  static readonly gltfCache: { [url: string]: Promise<Blob> } = {};\n\n  override initializeState(): void {\n    const { data } = this.props;\n    this.setState({ data: data ?? [], zoomOpacity: 0.8, doCollisions: false });\n    registerGLTFLoaders();\n  }\n\n  renderLayers(): LayersList {\n    const state = this.state as {\n      data: SpatialSceneNode[];\n      zoomOpacity: number;\n      doCollisions: boolean;\n    };\n    const geometries: Record<string, SpatialSceneNode[]> = {\n      sphere: [],\n      cone: [],\n      cylinder: [],\n      cube: [],\n      text: [],\n      wireframe: [],\n      scenegraph: [],\n    };\n\n    for (const node of state.data) {\n      const geometry = node.geometry ?? 'cube';\n      if (node.scenegraph) {\n        geometries['scenegraph'].push(node);\n      } else if (geometries[geometry] !== undefined) {\n        geometries[geometry].push(node);\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const url2gltf: { [url: string]: Promise<any> } = {};\n    for (const m of geometries['scenegraph']) {\n      if (m.scenegraph && m.scenegraphNode && !Object.prototype.hasOwnProperty.call(url2gltf, m.scenegraph)) {\n        url2gltf[m.scenegraph] = loadGLTF({ scenegraph: m.scenegraph } as SpatialSceneNode, BodyUILayer.gltfCache);\n      }\n    }\n\n    const layers: unknown[] = [];\n    for (const [geometry, nodes] of Object.entries(geometries)) {\n      if (geometry === 'scenegraph') {\n        for (const model of nodes) {\n          layers.push(\n            new ScenegraphLayer({\n              id: 'models-' + model['@id'],\n              opacity: model.zoomBasedOpacity ? state.zoomOpacity : model.opacity ?? 1.0,\n              pickable: !model.unpickable,\n              coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n              data: [model],\n              scenegraph: model.scenegraphNode\n                ? loadGLTF2(model.scenegraphNode, url2gltf[model.scenegraph as string])\n                : (model.scenegraph as unknown as URL),\n              _lighting: model._lighting as 'pbr', // 'pbr' | undefined\n              getTransformMatrix: model.transformMatrix,\n              getColor: model.color ?? [0, 255, 0, 0.5 * 255],\n              parameters: {\n                depthMask: !model.zoomBasedOpacity && (model.opacity === undefined || model.opacity === 1),\n              },\n            }),\n          );\n        }\n      } else if (geometry === 'text') {\n        layers.push(\n          textLayer(\n            'text',\n            nodes.filter((n) => n.unpickable),\n            { pickable: false },\n          ),\n        );\n        layers.push(\n          textLayer(\n            'textPickable',\n            nodes.filter((n) => !n.unpickable),\n            { pickable: true },\n          ),\n        );\n      } else if (geometry === 'wireframe') {\n        layers.push(\n          meshLayer(geometry, nodes, {\n            wireframe: true,\n            pickable: false,\n            geometry,\n          }),\n        );\n      } else {\n        layers.push(\n          meshLayer(\n            geometry,\n            nodes.filter((n) => n.unpickable),\n            { wireframe: false, pickable: false, geometry },\n          ),\n        );\n        layers.push(\n          meshLayer(\n            `${geometry}Pickable`,\n            nodes.filter((n) => !n.unpickable),\n            { wireframe: false, pickable: true, geometry },\n          ),\n        );\n      }\n    }\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return layers.filter((l) => !!l) as LayersList;\n  }\n\n  override getPickingInfo(\n    e: Parameters<CompositeLayer<SpatialSceneNode>['getPickingInfo']>[0],\n  ): ReturnType<CompositeLayer<SpatialSceneNode>['getPickingInfo']> {\n    return e.info;\n  }\n}\n","import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core/typed';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\ninterface BodyUIViewStateProps {\n  orbitAxis?: string;\n  target?: [number, number, number];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: [number, number, number];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo<D> {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = {\n  node: SpatialSceneNode;\n  info: PickInfo<SpatialSceneNode>;\n  e: MouseEvent;\n};\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject<NodeClickEvent>();\n  private readonly nodeHoverStartSubject = new Subject<SpatialSceneNode>();\n  private readonly nodeHoverStopSubject = new Subject<SpatialSceneNode>();\n  private readonly sceneRotationSubject = new BehaviorSubject<[number, number]>([0, 0]);\n  private readonly nodeDragStartSubject = new Subject<NodeDragEvent>();\n  private readonly nodeDragSubject = new Subject<NodeDragEvent>();\n  private readonly nodeDragEndSubject = new Subject<NodeDragEvent>();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private readonly deckProps: Partial<BodyUIProps>) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [\n        deckProps.camera === 'orthographic'\n          ? new OrthographicView({ flipY: false, near: -1000 })\n          : new OrbitView({ orbitAxis: 'Y' }),\n      ],\n      controller: deckProps.interactive ?? true,\n      layers: [this.bodyUILayer],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab'),\n    };\n    if (deckProps.legacyLighting) {\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0,\n          }),\n        }),\n      ];\n    }\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera,\n      } as BodyUIViewStateProps,\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise<void> {\n    while (!this.bodyUILayer.state) {\n      await new Promise((r) => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    const gltfUrl =\n      'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    const gltfTransform = new Matrix4([\n      0.076, 0, 0, 0, 0, 0.076, 1.6875389974302382e-17, 0, 0, -1.6875389974302382e-17, 0.076, 0, 0.49, 0.034, 0.11, 1,\n    ]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        _lighting: 'pbr',\n        zoomBasedOpacity: false,\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps,\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value,\n      } as BodyUIViewStateProps,\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value,\n      } as BodyUIViewStateProps,\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value,\n      } as BodyUIViewStateProps,\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value,\n      } as BodyUIViewStateProps,\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value,\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo<SpatialSceneNode>, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({\n        node: info.object,\n        ctrlClick: e?.srcEvent?.ctrlKey ?? undefined,\n      });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: {\n    interactionState: { isZooming: boolean };\n    viewState: BodyUIViewStateProps;\n  }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as {\n        zoomOpacity: number;\n        data: unknown;\n      };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo<SpatialSceneNode>, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo<SpatialSceneNode>, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo<SpatialSceneNode>, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo<SpatialSceneNode>, e: MouseEvent, subject: Subject<NodeDragEvent>): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n","import { JsonLdObj } from 'jsonld/jsonld-spec';\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_middle_name: string | undefined;\n  creator_last_name: string;\n  creator_orcid: string | undefined;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n","import { Matrix4 } from '@math.gl/core';\n\nexport type SpatialSceneGeometry = 'sphere' | 'cube' | 'wireframe' | 'text' | 'cone' | 'cylinder';\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  geometry?: SpatialSceneGeometry;\n  text?: string;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n","import { parse, registerLoaders } from '@loaders.gl/core';\nimport { DracoLoader, DracoWorkerLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\nexport function registerGLTFLoaders(): void {\n  registerLoaders([DracoWorkerLoader, GLTFLoader]);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function deriveScenegraph(scenegraphNodeName: string, gltf: any): any {\n  const scenegraphNode = gltf.nodes?.find((n: { name: string }) => n.name === scenegraphNodeName);\n  if (scenegraphNode) {\n    let foundNodeInScene = false;\n    for (const scene of gltf.scenes) {\n      if (!foundNodeInScene) {\n        traverseScene(scene, new Matrix4(Matrix4.IDENTITY), (child, modelMatrix) => {\n          if (child === scenegraphNode) {\n            child.matrix = modelMatrix;\n            child.translation = undefined;\n            child.rotation = undefined;\n            child.scale = undefined;\n            foundNodeInScene = true;\n            return false;\n          }\n          return true;\n        });\n      }\n    }\n    gltf.scene = {\n      id: scenegraphNodeName,\n      name: scenegraphNodeName,\n      nodes: [scenegraphNode],\n    };\n    gltf.scenes = [gltf.scene];\n\n    return { scene: gltf.scene, scenes: gltf.scenes };\n  } else {\n    return gltf;\n  }\n}\n\nexport async function loadGLTF(\n  model: SpatialSceneNode,\n  cache?: { [url: string]: Promise<Blob> },\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Promise<any> {\n  const gltfUrl = model.scenegraph as string;\n  let gltfPromise: Promise<Blob | Response>;\n  if (cache) {\n    gltfPromise = cache[gltfUrl] || (cache[gltfUrl] = fetch(gltfUrl).then((r) => r.blob()));\n  } else {\n    gltfPromise = fetch(gltfUrl);\n  }\n  const gltf = await parse(gltfPromise, GLTFLoader, {\n    DracoLoader,\n    gltf: { decompressMeshes: true, postProcess: true },\n  });\n\n  if (!gltf.nodes) {\n    console.log('WARNING: Empty Scene', gltfUrl, gltf);\n  }\n\n  return deriveScenegraph(model.scenegraphNode as string, gltf);\n}\n\nexport async function loadGLTF2(\n  scenegraphNodeName: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  gltfPromise: Promise<any>,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): Promise<any> {\n  return deriveScenegraph(scenegraphNodeName, await gltfPromise);\n}\n","import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { loadGLTF, registerGLTFLoaders } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\n\nexport interface ProcessedNode extends SpatialSceneNode {\n  bbox: AABB;\n  jsonld: unknown;\n  node: unknown;\n  size: Vec3;\n  center: Vec3;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction childNames(scene: { nodes: any; children: any }, names: string[] = []): string[] {\n  for (const child of scene.nodes || scene.children || []) {\n    names.push(child.name);\n    childNames(child, names);\n  }\n  return names;\n}\n\nexport async function processSceneNodes(\n  gltfUrl: string,\n  worldMatrix?: Matrix4,\n  scenegraphNode?: string,\n  gltfCache?: { [url: string]: Promise<Blob> },\n): Promise<{ [node: string]: ProcessedNode }> {\n  registerGLTFLoaders();\n  const gltf = await loadGLTF({ scenegraph: gltfUrl, scenegraphNode } as SpatialSceneNode, gltfCache);\n  const nodes: { [node: string]: ProcessedNode } = {};\n  const gltfNodes: ProcessedNode[] = [];\n\n  worldMatrix = new Matrix4(worldMatrix ?? Matrix4.IDENTITY);\n\n  for (const scene of gltf.scenes) {\n    traverseScene(scene, worldMatrix, (node, modelMatrix: Matrix4) => {\n      const processedNode: ProcessedNode = {\n        '@id': (node.name || node.id) as string,\n        '@type': 'ProcessedNode',\n        transformMatrix: new Matrix4(modelMatrix),\n        geometry: 'wireframe',\n        node,\n      } as ProcessedNode;\n      gltfNodes.push({\n        '@id': `GLTF:${processedNode['@id']}`,\n        '@type': 'GLTFNode',\n        scenegraph: gltfUrl,\n        scenegraphNode: processedNode['@id'],\n        transformMatrix: new Matrix4(worldMatrix || Matrix4.IDENTITY),\n        tooltip: (node.name || node.id) as string,\n        color: [255, 255, 255, 255],\n        _lighting: 'pbr',\n        zoomBasedOpacity: true,\n        node,\n      } as ProcessedNode);\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            processedNode.bbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i]))),\n            });\n          }\n        }\n      }\n      nodes[processedNode['@id']] = processedNode;\n      return true;\n    });\n  }\n\n  for (const node of Object.values(nodes).filter((n) => !n.bbox)) {\n    for (const child of childNames(node.node as never)\n      .map((n) => nodes[n])\n      .filter((n) => n.bbox)) {\n      if (!node.bbox) {\n        node.bbox = child.bbox.clone();\n      } else {\n        node.bbox.extend(child.bbox);\n      }\n    }\n    if (!node.bbox) {\n      delete nodes[node['@id']];\n    }\n  }\n  for (const node of Object.values(nodes)) {\n    const lb = node.bbox.lowerBound;\n    const ub = node.bbox.upperBound;\n    const size = (node.size = ub.clone().vsub(lb));\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const center = (node.center = lb.clone().vadd(halfSize));\n\n    node.transformMatrix = new Matrix4(Matrix4.IDENTITY).translate(center.toArray()).scale(halfSize.toArray());\n  }\n  for (const node of gltfNodes) {\n    nodes[node['@id']] = node;\n  }\n  return nodes;\n}\n/* eslint-enable */\n","import { Matrix4, NumericArray } from '@math.gl/core';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type SceneTraversalVisitor = (child: any, modelMatrix: Matrix4, parentMatrix: Matrix4) => boolean;\n\nexport function traverseScene(\n  scene: {\n    matrix: Readonly<NumericArray>;\n    translation: Readonly<NumericArray>;\n    rotation: Readonly<NumericArray>;\n    scale: number | Readonly<NumericArray>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    nodes: any;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    children: any;\n  },\n  worldMatrix: Matrix4,\n  visitor: SceneTraversalVisitor,\n): boolean {\n  if (!worldMatrix) {\n    worldMatrix = new Matrix4(Matrix4.IDENTITY);\n  }\n  const matrix = new Matrix4(Matrix4.IDENTITY);\n  if (!scene) {\n    return true;\n  } else if (scene.matrix) {\n    matrix.copy(scene.matrix);\n  } else {\n    matrix.identity();\n\n    if (scene.translation) {\n      matrix.translate(scene.translation);\n    }\n\n    if (scene.rotation) {\n      const rotationMatrix = new Matrix4(Matrix4.IDENTITY).fromQuaternion(scene.rotation);\n      matrix.multiplyRight(rotationMatrix);\n    }\n\n    if (scene.scale) {\n      matrix.scale(scene.scale);\n    }\n  }\n  const modelMatrix = new Matrix4(worldMatrix).multiplyRight(matrix);\n  if (visitor(scene, modelMatrix, worldMatrix) === false) {\n    return false;\n  }\n  for (const child of scene.nodes || scene.children || []) {\n    if (traverseScene(child, modelMatrix, visitor) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { loadGLTF } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\n\nexport async function simplifyScene(nodes: SpatialSceneNode[]): Promise<SpatialSceneNode[]> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const gltfCache: { [url: string]: any } = {};\n  const gltfUrls = new Set(nodes.map((n) => n.scenegraph).filter((n) => !!n));\n  for (const gltfUrl of gltfUrls) {\n    // eslint-disable-next-line no-await-in-loop\n    gltfCache[gltfUrl as string] = await loadGLTF({\n      scenegraph: gltfUrl,\n    } as SpatialSceneNode);\n  }\n  const newNodes: SpatialSceneNode[] = nodes.filter((n) => !n.scenegraph);\n\n  for (const model of nodes.filter((n) => n.scenegraph)) {\n    const gltf = gltfCache[model.scenegraph as string];\n    const bbox = new AABB();\n    let worldMatrix = new Matrix4(model.transformMatrix);\n\n    /* eslint-disable  */\n    if (model.scenegraphNode) {\n      const scenegraphNode = model.scenegraphNode\n        ? gltf.nodes.find((n: { name: string | undefined }) => n.name === model.scenegraphNode)\n        : undefined;\n      let foundNodeInScene = false;\n      for (const scene of gltf.scenes) {\n        if (!foundNodeInScene) {\n          traverseScene(scene, new Matrix4(model.transformMatrix), (child, modelMatrix) => {\n            if (child === scenegraphNode) {\n              worldMatrix = modelMatrix;\n              foundNodeInScene = true;\n              return false;\n            }\n            return true;\n          });\n        }\n      }\n      gltf.scene = {\n        id: model.scenegraphNode,\n        name: model.scenegraphNode,\n        nodes: [scenegraphNode],\n      };\n    }\n\n    traverseScene(gltf.scene, worldMatrix, (node, modelMatrix) => {\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            const innerBbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i]))),\n            });\n            bbox.extend(innerBbox);\n          }\n        }\n      }\n      return true;\n    });\n    /* eslint-enable */\n\n    const size = bbox.upperBound.clone().vsub(bbox.lowerBound);\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const position = bbox.lowerBound.clone().vadd(halfSize);\n    const transformMatrix = new Matrix4(Matrix4.IDENTITY).translate(position.toArray()).scale(halfSize.toArray());\n    const newNode: SpatialSceneNode = {\n      ...model,\n      transformMatrix,\n      geometry: 'wireframe',\n    };\n    delete newNode.scenegraph;\n    delete newNode.scenegraphNode;\n\n    newNodes.push(newNode);\n  }\n  return newNodes;\n}\n","import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: { '@id': string; name: string }[];\n}\n\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise<Collision[]> {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter((d) => !d.scenegraph && d.geometry !== 'wireframe')\n    .map((model) => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n: number, i: number) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n: number, i: number) => Math.max(n, lowerBound[i]))),\n        }),\n      };\n    });\n\n  const targetBoxes: {\n    '@id': string;\n    name: string;\n    entityId?: string;\n    bbox: AABB;\n    gltf: unknown;\n  }[] = [];\n  for (const model of scene.filter((d) => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {\n      DracoLoader,\n      decompress: true,\n      postProcess: true,\n    });\n    for (const gltfScene of gltf.scenes ?? []) {\n      traverseScene(gltfScene as never, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i]))),\n                }),\n                gltf,\n              });\n            }\n          }\n        }\n        return true;\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: { '@id': string; name: string }[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({ '@id': target['@id'], name: target.name });\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name as string,\n        hits,\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({\n    sourceBoxes,\n    targetBoxes,\n    report,\n    sad,\n    maxHits: Math.max(...report.map((r) => r.hits.length)),\n  });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': '',\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name,\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n","// Hack to support deck.gl and other typings\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference types=\"node\" />\n\n/*\n * Public API Surface of ccf-body-ui\n */\nexport * from './lib/body-ui-layer';\nexport * from './lib/body-ui';\nexport * from './lib/shared/spatial-scene-node';\nexport * from './lib/shared/ccf-spatial-jsonld';\n\nexport * from './lib/util/load-gltf';\nexport * from './lib/util/scene-traversal';\nexport * from './lib/util/spatial-scene-collider';\nexport * from './lib/util/process-scene-nodes';\nexport * from './lib/util/simplify-scene';\n","import * as idb from 'idb-keyval';\nimport { JsonLd } from 'jsonld/jsonld-spec';\nimport * as hash from 'object-hash';\nimport {\n  addJsonLdToStore,\n  addN3ToStore,\n  addRdfXmlToStore,\n  DataFactory,\n  deserializeN3Store,\n  Quad,\n  serializeN3Store,\n  Store,\n} from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, TissueBlockResult } from './interfaces';\nimport { getAggregateResults, getDatasetTechnologyNames, getProviderNames } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport {\n  getBiomarkerTermOccurences,\n  getCellTypeTermOccurences,\n  getOntologyTermOccurences,\n} from './queries/ontology-term-occurences-n3';\nimport {\n  getAnatomicalStructureTreeModel,\n  getBiomarkerTreeModel,\n  getCellTypeTreeModel,\n} from './queries/ontology-tree-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { getTissueBlockResult } from './queries/tissue-block-result-n3';\nimport { FlatSpatialPlacement, SpatialEntity } from './spatial-types';\nimport { CCFDatabaseStatusTracker } from './util/ccf-database-status-tracker';\nimport { getBmLocatedInAs } from './util/enrich-bm-located-in-as';\nimport { enrichRuiLocations } from './util/enrich-rui-locations';\nimport { patchJsonLd } from './util/patch-jsonld';\nimport { searchXConsortia } from './xconsortia/xconsortia-data-import';\n\nconst { delMany, get, setMany } = idb;\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** A url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** A list of data sources (in n3, rdf, xml, owl, or jsonld format) */\n  dataSources: (string | JsonLd)[];\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** HuBMAP Elastic Search Query */\n  hubmapQuery?: unknown;\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://apps.humanatlas.io/hra-api/v1/ccf.owl.n3store.json',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  dataSources: [],\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org',\n};\n\n/** Database provider. */\nexport class CCFDatabase {\n  /** The triple store. */\n  store: Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n  /** If the database is initialized */\n  private initializing?: Promise<void>;\n\n  private status!: CCFDatabaseStatusTracker;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store(undefined, { factory: DataFactory });\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions, cached = false): Promise<boolean> {\n    if (options) {\n      this.options = options;\n    }\n    if (!this.initializing) {\n      if (cached) {\n        this.initializing = this.cachedConnect();\n      } else {\n        this.initializing = this.doConnect();\n      }\n    }\n    await this.initializing;\n    return this.store.size > 0;\n  }\n\n  private async cachedConnect(): Promise<void> {\n    const start = new Date().getTime();\n    const optionsHash = hash(this.options, {\n      encoding: 'base64',\n      ignoreUnknown: true,\n      respectType: false,\n      unorderedArrays: true,\n      unorderedObjects: true,\n      unorderedSets: true,\n    });\n    const lastModifiedKey = `ccf-database.last_modified.${optionsHash}`;\n    const ccfDatabaseKey = `ccf-database.${optionsHash}`;\n\n    const lastModified = await get(lastModifiedKey).catch(() => undefined);\n    let serializedDb: string | undefined;\n\n    if (lastModified && start - new Date(+lastModified).getTime() > 60 * 60 * 1000) {\n      await delMany([ccfDatabaseKey, lastModifiedKey]).catch(() => undefined);\n    } else {\n      serializedDb = await get(ccfDatabaseKey).catch(() => undefined);\n    }\n\n    if (serializedDb) {\n      await this.deserialize(serializedDb);\n    } else {\n      await this.doConnect();\n\n      setMany([\n        [ccfDatabaseKey, this.serialize()],\n        [lastModifiedKey, '' + start],\n      ]).catch(() => undefined);\n    }\n  }\n\n  /**\n   * Actually connects to the database.\n   *\n   * @returns A promise resolving to void when connected.\n   */\n  private async doConnect(): Promise<void> {\n    const ops: Promise<unknown>[] = [];\n    const sources: (string | JsonLd)[] = this.options.dataSources?.concat() ?? [];\n\n    const ccfOwlUrl = this.options.ccfOwlUrl;\n    if (ccfOwlUrl.startsWith('{')) {\n      // serialized n3 store was provided as the ccfOwlUrl\n      this.store = deserializeN3Store(ccfOwlUrl, DataFactory);\n    } else if (ccfOwlUrl.endsWith('.n3store.json')) {\n      const storeString = await fetch(ccfOwlUrl)\n        .then((r) => r.text())\n        .catch(() => console.log(\"Couldn't locate serialized store.\"));\n      if (storeString) {\n        this.store = deserializeN3Store(storeString, DataFactory);\n      }\n    } else if (ccfOwlUrl?.length > 0) {\n      sources.push(ccfOwlUrl);\n    }\n\n    // Add a direct edge between BM and AS for queries\n    sources.push(await getBmLocatedInAs());\n\n    if (this.options.hubmapDataUrl) {\n      if (this.options.hubmapDataUrl.endsWith('jsonld')) {\n        sources.push(this.options.hubmapDataUrl);\n      } else {\n        ops.push(\n          searchXConsortia(\n            this.options.hubmapDataUrl,\n            this.options.hubmapDataService,\n            this.options.hubmapQuery,\n            this.options.hubmapToken,\n          ).then((jsonld) => {\n            if (jsonld) {\n              return this.addDataSources([jsonld]);\n            } else {\n              return undefined;\n            }\n          }),\n        );\n      }\n    }\n    ops.push(this.addDataSources(sources));\n    await Promise.all(ops);\n    await this.synchronize();\n  }\n\n  async addDataSources(sources: (string | JsonLd)[], inputStore?: Store): Promise<this> {\n    const store: Store = inputStore ?? this.store;\n    await Promise.all(\n      sources.map(async (source) => {\n        if (typeof source === 'string') {\n          if ((source.startsWith('http') || source.startsWith('assets/')) && source.includes('jsonld')) {\n            const sourceUrl = source;\n            source = await fetch(sourceUrl)\n              .then((r) => r.text())\n              .catch((err) => {\n                console.log(`Error fetching ${sourceUrl}`, err);\n                return '[]';\n              });\n            source = patchJsonLd(source);\n            await addJsonLdToStore(source, store);\n          } else if (source.endsWith('n3')) {\n            await addN3ToStore(source, store);\n          } else if (source.endsWith('rdf') || source.endsWith('owl') || source.endsWith('xml')) {\n            await addRdfXmlToStore(source, store);\n          } else {\n            // Passthrough assumes a JSON-LD response\n            source = patchJsonLd(source);\n            await addJsonLdToStore(source, store);\n          }\n        } else {\n          source = patchJsonLd(JSON.stringify(source));\n          await addJsonLdToStore(source, store);\n        }\n      }),\n    );\n    return this;\n  }\n\n  async synchronize(): Promise<this> {\n    // Add a small delay to allow the triple store to settle\n    await new Promise((r) => {\n      setTimeout(r, 500);\n    });\n    this.graph.createGraph();\n    enrichRuiLocations(this.store);\n    return this;\n  }\n\n  serialize(): string {\n    return serializeN3Store(this.store);\n  }\n\n  async deserialize(value: string): Promise<void> {\n    this.store = deserializeN3Store(value, DataFactory);\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n    await new Promise((r) => {\n      setTimeout(r, 10);\n    });\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set<string> {\n    return findIds(this.store, this.graph, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    filter = { ...filter, hasSpatialEntity: true } as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  async getDatabaseStatus(): Promise<DatabaseStatus> {\n    if (!this.status) {\n      this.status = new CCFDatabaseStatusTracker(this);\n    }\n    return this.status.toJson();\n  }\n\n  /**\n   * Get a list of technology names used by datasets\n   *\n   * @returns list of unique technology names in the data\n   */\n  async getDatasetTechnologyNames(): Promise<string[]> {\n    return getDatasetTechnologyNames(this.store);\n  }\n\n  /**\n   * Get a list of provider names from the database\n   *\n   * @returns list of unique provider names in the data\n   */\n  async getProviderNames(): Promise<string[]> {\n    return getProviderNames(this.store);\n  }\n\n  /**\n   * Gets all tissue block results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getTissueBlockResults(filter?: Filter): Promise<TissueBlockResult[]> {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    filter = { ...filter, hasSpatialEntity: true } as Filter;\n    return [...this.getIds(filter)].map((s) => getTissueBlockResult(this.store, s));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise<AggregateResult[]> {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise<Record<string, number>> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of cell type terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Cell type term counts.\n   */\n  async getCellTypeTermOccurences(filter?: Filter): Promise<Record<string, number>> {\n    return getCellTypeTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of cell type terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Cell type term counts.\n   */\n  async getBiomarkerTermOccurences(filter?: Filter): Promise<Record<string, number>> {\n    return getBiomarkerTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get ontology term tree nodes\n   *\n   * @returns Ontology term counts.\n   */\n  async getOntologyTreeModel(): Promise<OntologyTreeModel> {\n    return getAnatomicalStructureTreeModel(this.store);\n  }\n\n  /**\n   * Get cell type term tree nodes\n   *\n   * @returns Ontology term counts.\n   */\n  async getCellTypeTreeModel(): Promise<OntologyTreeModel> {\n    return getCellTypeTreeModel(this.store);\n  }\n\n  /**\n   * Get biomarker tree nodes\n   *\n   * @returns Ontology term counts.\n   */\n  async getBiomarkerTreeModel(): Promise<OntologyTreeModel> {\n    return getBiomarkerTreeModel(this.store);\n  }\n\n  /**\n   * Get reference organs\n   *\n   * @returns Ontology term counts.\n   */\n  async getReferenceOrgans(): Promise<SpatialEntity[]> {\n    return this.scene.getReferenceOrgans();\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   *\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise<SpatialSceneNode[]> {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference organ and tissues\n   *\n   * @param [organIri] The Reference Organ IRI\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getReferenceOrganScene(organIri: string, filter?: Filter): Promise<SpatialSceneNode[]> {\n    this.graph.createGraph();\n    return this.scene.getReferenceOrganScene(organIri, filter);\n  }\n\n  async getSpatialPlacement(source: SpatialEntity, targetIri: string): Promise<FlatSpatialPlacement | undefined> {\n    return this.graph.getSpatialPlacement(source, targetIri);\n  }\n}\n","import { Euler, Matrix4, toDegrees, toRadians } from '@math.gl/core';\nimport { DirectedGraph } from 'graphology';\nimport { bidirectional } from 'graphology-shortest-path/unweighted';\nimport { get } from 'lodash';\nimport { readQuads } from 'triple-store-utils';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { CCFDatabase } from './ccf-database';\nimport { getSpatialPlacement } from './queries/spatial-result-n3';\nimport { FlatSpatialPlacement, SpatialEntity, SpatialPlacement } from './spatial-types';\nimport { ccf, rdf } from './util/prefixes';\n\nexport function applySpatialPlacement(tx: Matrix4, placement: SpatialPlacement): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map((t) => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map<number>(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport class CCFSpatialGraph {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  graph: any;\n\n  constructor(private readonly db: CCFDatabase) {\n    this.createGraph();\n  }\n\n  createGraph(): void {\n    this.graph = new DirectedGraph();\n    const store = this.db.store;\n\n    // Add all Spatial Object References\n    store.forSubjects(\n      (subject) => {\n        this.addNode(subject.id, 'SpatialObjectReference');\n      },\n      rdf.type,\n      ccf.SpatialObjectReference,\n      null,\n    );\n\n    // Add all Spatial Entities\n    store.forSubjects(\n      (subject) => {\n        this.addNode(subject.id, 'SpatialEntity');\n      },\n      rdf.type,\n      ccf.SpatialEntity,\n      null,\n    );\n\n    // Add all Spatial Placements\n    const edgeSource: Record<string, string> = {};\n    for (const quad of readQuads(store, null, ccf.spatialPlacement.source, null, null)) {\n      edgeSource[quad.subject.id] = quad.object.id;\n    }\n    for (const quad of readQuads(store, null, ccf.spatialPlacement.target, null, null)) {\n      const source = edgeSource[quad.subject.id];\n      if (source) {\n        this.addEdge(quad.subject.id, source, quad.object.id, 'SpatialPlacement');\n      }\n    }\n  }\n\n  addNode(id: string, type: string): void {\n    this.graph.mergeNode(id, { type });\n  }\n\n  addEdge(id: string, source: string, target: string, type: string): void {\n    this.graph.mergeDirectedEdge(source, target, { type, id });\n  }\n\n  getTransformationMatrix(sourceIRI: string, targetIRI: string): Matrix4 | undefined {\n    if (sourceIRI === targetIRI) {\n      return new Matrix4(Matrix4.IDENTITY); // identity\n    }\n    if (!this.graph.hasNode(sourceIRI) || !this.graph.hasNode(targetIRI)) {\n      return undefined;\n    }\n\n    const store = this.db.store;\n    const tx = new Matrix4(Matrix4.IDENTITY);\n    const path = bidirectional(this.graph, sourceIRI, targetIRI);\n    if (path && path.length > 0) {\n      path.reverse();\n      let target: string | number = '';\n      for (const source of path) {\n        if (target) {\n          const placementId = this.graph.getEdgeAttribute(source, target, 'id');\n          const placement = getSpatialPlacement(store, placementId);\n          applySpatialPlacement(tx, placement);\n        }\n        target = source;\n      }\n      return tx;\n    } else {\n      return undefined;\n    }\n  }\n\n  getSpatialPlacement(source: SpatialEntity, targetIri: string): FlatSpatialPlacement | undefined {\n    const sourceIri = this.graph.hasNode(source['@id']) ? source['@id'] : undefined;\n    const placement = get(source, 'placement[0]', get(source, 'placement', undefined)) as unknown as SpatialPlacement;\n\n    let matrix: Matrix4 | undefined;\n    if (placement && this.graph.hasNode(placement.target)) {\n      matrix = this.getTransformationMatrix(placement.target as unknown as string, targetIri);\n      if (matrix) {\n        matrix = applySpatialPlacement(matrix, placement);\n      }\n    } else if (sourceIri) {\n      matrix = this.getTransformationMatrix(sourceIri, targetIri);\n    }\n\n    if (matrix) {\n      const euler = new Euler().fromRotationMatrix(matrix, Euler.XYZ);\n      const T = matrix.getTranslation().map((n) => n * 1000) as [number, number, number];\n      const R = euler.toVector3().map<number>(toDegrees) as [number, number, number];\n      const S = matrix.getScale().map((n) => (n < 1 && n > 0.999999 ? 1 : n)) as [number, number, number];\n\n      return {\n        '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${uuidV4()}_placement`,\n        '@type': 'SpatialPlacement',\n        source: source['@id'],\n        target: targetIri,\n        placement_date: new Date().toISOString().split('T')[0],\n        x_scaling: S[0],\n        y_scaling: S[1],\n        z_scaling: S[2],\n        scaling_units: 'ratio',\n        x_rotation: R[0],\n        y_rotation: R[1],\n        z_rotation: R[2],\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n        x_translation: T[0],\n        y_translation: T[1],\n        z_translation: T[2],\n        translation_units: 'millimeter',\n      };\n    } else {\n      return undefined;\n    }\n  }\n}\n","import { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport {\n  getAnatomicalStructures,\n  getExtractionSet,\n  getExtractionSets,\n  getReferenceOrgans,\n  getSpatialEntity,\n} from './queries/spatial-result-n3';\nimport { ExtractionSet, SpatialEntity } from './spatial-types';\nimport { ccf } from './util/prefixes';\n\nexport type SpatialSceneGeometry = 'sphere' | 'cube' | 'wireframe' | 'text' | 'cone' | 'cylinder';\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  ccf_annotations?: string[];\n  representation_of?: string;\n  reference_organ?: string;\n  sex?: 'Male' | 'Female';\n  unpickable?: boolean;\n  geometry?: SpatialSceneGeometry;\n  text?: string;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\nexport class CCFSpatialScene {\n  constructor(private readonly db: CCFDatabase) {}\n\n  getSpatialEntity(iri: string): SpatialEntity {\n    return getSpatialEntity(this.db.store, iri);\n  }\n  getExtractionSets(iri: string): ExtractionSet[] {\n    return getExtractionSets(this.db.store, iri);\n  }\n  getExtractionSet(iri: string): ExtractionSet {\n    return getExtractionSet(this.db.store, iri);\n  }\n  getAnatomicalStructures(iri: string): SpatialEntity[] {\n    return getAnatomicalStructures(this.db.store, iri);\n  }\n  getReferenceOrgans(): SpatialEntity[] {\n    return getReferenceOrgans(this.db.store);\n  }\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return this.getSpatialEntity(bodyId);\n  }\n\n  getReferenceOrganSets(filter?: Filter): SpatialEntity[] {\n    let organSet = this.getReferenceOrgans();\n    switch (filter?.sex) {\n      case 'Male':\n        organSet = organSet.filter((s) => s.sex === 'Male');\n        break;\n      case 'Female':\n        organSet = organSet.filter((s) => s.sex === 'Female');\n        break;\n      case 'Both':\n      default:\n        break;\n    }\n    if (filter?.debug) {\n      organSet = organSet\n        .map((o) => [[o], this.getAnatomicalStructures(o['@id'])])\n        .reduce<SpatialEntity[]>(\n          (acc, [organ, structures]) => acc.concat(structures.length > 0 ? structures : organ),\n          [],\n        );\n    }\n    return organSet;\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const skinNodes: SpatialSceneNode[] = [];\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      ...this.getReferenceOrganSets(filter).map((organ) => {\n        const isSkin = organ.representation_of === 'http://purl.obolibrary.org/obo/UBERON_0002097';\n        const sceneNode = this.getSceneNode(organ, body, {\n          color: [255, 255, 255, 255],\n          opacity: isSkin ? 0.5 : 0.2,\n          unpickable: true,\n          _lighting: 'pbr',\n          zoomBasedOpacity: !isSkin,\n        });\n        if (isSkin && sceneNode) {\n          skinNodes.push(sceneNode);\n          return undefined;\n        } else {\n          return sceneNode;\n        }\n      }),\n    ];\n    if (skinNodes.length > 0) {\n      nodes = [...skinNodes, ...nodes];\n    }\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHRightKidney').id), body, {\n          color: [0, 0, 255, 0.5 * 255],\n          geometry: 'wireframe',\n        }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHLeftKidney').id), body, {\n          color: [255, 0, 0, 0.5 * 255],\n          geometry: 'wireframe',\n        }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHSpleenCC1').id), body, {\n          color: [0, 255, 0, 0.5 * 255],\n          geometry: 'wireframe',\n        }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHSpleenCC2').id), body, {\n          color: [0, 255, 0, 0.5 * 255],\n          geometry: 'wireframe',\n        }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHSpleenCC3').id), body, {\n          color: [0, 255, 0, 0.5 * 255],\n          geometry: 'wireframe',\n        }),\n      ]);\n    }\n\n    return nodes.filter((s) => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): SpatialSceneNode[] {\n    const hasSexFilter = filter?.sex !== undefined && filter?.sex?.toLowerCase() !== 'both';\n    const organs = this.getReferenceOrgans().filter(\n      (o) => o.representation_of === organIri && (!hasSexFilter || o.sex === filter?.sex),\n    );\n    if (organs.length > 0) {\n      const organ = organs[0];\n      const isSkin = organ.representation_of === 'http://purl.obolibrary.org/obo/UBERON_0002097';\n      const organNode = this.getSceneNode(organ, organ, {\n        color: [255, 255, 255, 255],\n        opacity: isSkin ? 0.5 : 0.2,\n        unpickable: true,\n        _lighting: 'pbr',\n      }) as SpatialSceneNode;\n\n      const scene = (this.db.getSpatialEntities(filter) ?? []).map((entity) =>\n        this.getSceneNode(entity, organ, { color: [255, 255, 255, 0.9 * 255] }),\n      ) as SpatialSceneNode[];\n      return [organNode].concat(scene).filter((n) => n !== undefined);\n    } else {\n      return [];\n    }\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    return this.db\n      .getSpatialEntities(filter)\n      .map((entity) => this.getSceneNode(entity, body, { color: [255, 255, 255, 0.9 * 255] }))\n      .filter((s) => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(\n    source: SpatialEntity,\n    target: SpatialEntity,\n    nodeAttrs: Partial<SpatialSceneNode> = {},\n  ): SpatialSceneNode | undefined {\n    const has3dObject = source?.object?.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4(Matrix4.IDENTITY).rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map((dim) => (dim * factor) / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'],\n        '@type': 'SpatialSceneNode',\n        entityId: source.entityId,\n        ccf_annotations: source.ccf_annotations,\n        representation_of: source.representation_of,\n        reference_organ: source.reference_organ,\n        sex: source.sex,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs,\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [...this.getReferenceSceneNodes(filter), ...this.getEntitySceneNodes(filter)];\n  }\n}\n","/** Status of the database */\nexport interface DatabaseStatus {\n  /** Status of the database */\n  status: 'Ready' | 'Loading' | 'Error';\n  /** How long to wait (in milliseconds) before checking status again */\n  checkback?: number;\n  /** The amount of time (in milliseconds) taken to load the database */\n  loadTime?: number;\n  /** Human readable description of the current status */\n  message?: string;\n  /** Timestamp of last update */\n  timestamp?: string;\n}\n\n/** Aggregate query result */\nexport interface AggregateResult {\n  /** Queried field */\n  label: string;\n  /** Aggregate value */\n  count: string | number;\n}\n\n/** List result */\nexport interface ListResultItem {\n  /** Identifier */\n  '@id': string;\n  /** Label */\n  label: string;\n  /** Description */\n  description: string;\n  /** Associated URL */\n  link: string;\n}\n\n/** Donor List Result */\nexport interface DonorResult extends ListResultItem {\n  /** JSON-LD Type */\n  '@type': 'Donor';\n  /** Provider Name */\n  providerName: string;\n}\n\n/** Dataset List Result */\nexport interface DatasetResult extends ListResultItem {\n  /** JSON-LD Type */\n  '@type': 'Dataset';\n  /** Technology used in data */\n  technology: string;\n  /** Representative thumbnail URL */\n  thumbnail: string;\n}\n\n/** Tissue Section List Result */\nexport interface TissueSectionResult extends ListResultItem {\n  /** JSON-LD Type */\n  '@type': 'Sample';\n  /** Sample tissue section type */\n  sampleType: 'Tissue Section' | 'Non-Standard';\n  /** Index into the sequence of sections from the parent block */\n  sectionNumber: number;\n  /** Datasets derived from this tissue section */\n  datasets: DatasetResult[];\n}\n\n/** Tissue Block List Result */\nexport interface TissueBlockResult extends ListResultItem {\n  /** JSON-LD Type */\n  '@type': 'Sample';\n  /** Sample tissue block type */\n  sampleType: 'Tissue Block' | 'Non-Standard';\n  /** Number of sections extracted from this block */\n  sectionCount: number;\n  /** Size of each tissue section */\n  sectionSize: number;\n  /** Units of the section size (generally, millimeters) */\n  sectionUnits: string;\n\n  /** The donor this tissue block was derived from */\n  donor: DonorResult;\n  /** The associated spatial entity (rui_location) for this block */\n  spatialEntityId: string;\n  /** The sections extracted from this tissue block */\n  sections: TissueSectionResult[];\n  /** Datasets derived from this tissue block */\n  datasets: DatasetResult[];\n}\n\n/** Item that can be searched for */\nexport interface SearchableItem {\n  /** Identifier */\n  id: string;\n  /** Sex */\n  sex?: 'Male' | 'Female';\n  /** Age */\n  age?: number;\n  /** BMI */\n  bmi?: number;\n  /** Ontology terms */\n  ontologyTerms?: Set<string>;\n  /** CellType terms */\n  cellTypeTerms?: Set<string>;\n  /** Biomarker terms */\n  biomarkerTerms?: Set<string>;\n}\n\n/** Specification for a Spatial Search via Probing Sphere */\nexport interface SpatialSearch {\n  /** X coordinate relative to target in millimeters */\n  x: number;\n  /** y coordinate relative to target in millimeters */\n  y: number;\n  /** z coordinate relative to target in millimeters */\n  z: number;\n  /** Size of the probing sphere in millimeters */\n  radius: number;\n  /** The target spatial entity IRI */\n  target: string;\n}\n\n/** Options applied during queries */\nexport interface Filter {\n  /** Sex */\n  sex: 'Both' | 'Male' | 'Female';\n  /** Age range */\n  ageRange: [number, number];\n  /** BMI range */\n  bmiRange: [number, number];\n  /** Consortiums */\n  consortiums: string[];\n  /** Tissue Providers */\n  tmc: string[];\n  /** Technologies */\n  technologies: string[];\n  /** Ontology terms */\n  ontologyTerms: string[];\n  /** CellType terms */\n  cellTypeTerms: string[];\n  /** Biomarker terms */\n  biomarkerTerms: string[];\n  /** spatial search */\n  spatialSearches: SpatialSearch[];\n  /** Include optional debugging information */\n  debug?: boolean;\n}\n\n/** A node in the ontology */\nexport interface OntologyTreeNode {\n  /** Identifier / IRI */\n  '@id': string;\n  /** JSON-LD Type */\n  '@type': 'OntologyTreeNode';\n  /** Identifier / IRI */\n  id: string;\n  /** RDFS label */\n  label: string;\n  /** Parent ontology node */\n  parent: string;\n  /** Child ontology nodes */\n  children: string[];\n  /** Synonym labels */\n  synonymLabels: string[];\n}\n\n/** Ontology tree model */\nexport interface OntologyTreeModel {\n  /** id of the root node of the ontology */\n  root: string;\n  /** Mapping from id/IRI to ontology node instance */\n  nodes: { [id: string]: OntologyTreeNode };\n}\n","import { readQuads, Store } from 'triple-store-utils';\n\nimport { AggregateResult } from '../interfaces';\nimport { entity } from '../util/prefixes';\n\nfunction getObjects(store: Store, ids: Set<string>, predicate: string): Set<string> {\n  const objects = new Set<string>();\n  for (const id of ids) {\n    for (const quad of readQuads(store, id, predicate, null, null)) {\n      objects.add(quad.object.id);\n    }\n  }\n  return objects;\n}\n\n/**\n * Computes aggregate results.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns The list of aggregate results.\n */\nexport function getAggregateResults(ids: Set<string>, store: Store): AggregateResult[] {\n  const donors = getObjects(store, ids, entity.donor.id);\n  const centers = getObjects(store, donors, entity.providerUUID.id);\n\n  const tissueBlocks = new Set<string>();\n  for (const id of ids) {\n    for (const quad of readQuads(store, id, entity.spatialEntity, null, null)) {\n      tissueBlocks.add(quad.subject.id);\n    }\n  }\n\n  const tissueSections = getObjects(store, tissueBlocks, entity.sections.id);\n  const tissueDatasets = new Set<string>([\n    ...getObjects(store, tissueBlocks, entity.datasets.id),\n    ...getObjects(store, tissueSections, entity.datasets.id),\n  ]);\n\n  const results: { [key: string]: number } = {\n    'Tissue Data Providers': centers.size,\n    Donors: donors.size,\n    'Tissue Blocks': tissueBlocks.size,\n    'Tissue Sections': tissueSections.size,\n    'Tissue Datasets': tissueDatasets.size,\n  };\n\n  return Object.entries(results).map(([label, count]) => ({ label, count }));\n}\n\n/**\n * Get a list of technology names used by datasets\n *\n * @param store The triple store.\n * @returns list of unique technology names in the data\n */\nexport function getDatasetTechnologyNames(store: Store): string[] {\n  const names = new Set<string>();\n  for (const quad of readQuads(store, null, entity.technology, null, null)) {\n    names.add(quad.object.value);\n  }\n  return Array.from(names).sort();\n}\n\n/**\n * Get a list of provider names from the database\n *\n * @param store The triple store.\n * @returns list of unique provider names in the data\n */\nexport function getProviderNames(store: Store): string[] {\n  const names = new Set<string>();\n  for (const quad of readQuads(store, null, entity.providerName, null, null)) {\n    names.add(quad.object.value);\n  }\n  return Array.from(names).sort();\n}\n","import { isFinite } from 'lodash';\nimport { fromRdf } from 'rdf-literal';\nimport { DataFactory, Literal, readQuads, Store, Term } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from '../ccf-spatial-graph';\nimport { Filter, SpatialSearch } from '../interfaces';\nimport { ccf, entity, rui } from '../util/prefixes';\nimport { filterByProbingSphere } from './spatial-search-n3';\n\nfunction filterWithDonor(\n  store: Store,\n  seen: Set<string>,\n  callback: (donorsSeen: Set<string>) => Set<string>,\n): Set<string> {\n  const donor2entity = new Map<string, string[]>();\n  const donors = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.donor, null, null)) {\n      donors.add(quad.object.id);\n      if (!donor2entity.has(quad.object.id)) {\n        donor2entity.set(quad.object.id, [subject]);\n      } else {\n        donor2entity.get(quad.object.id)?.push(subject);\n      }\n    }\n  }\n\n  const newDonors = callback(donors);\n  const newSeen = new Set<string>();\n  for (const d of newDonors) {\n    for (const s of donor2entity.get(d) ?? []) {\n      newSeen.add(s);\n    }\n  }\n  return newSeen;\n}\n\nfunction filterWithSpatialEntity(\n  store: Store,\n  seen: Set<string>,\n  callback: (entitiesSeen: Set<string>) => Set<string>,\n): Set<string> {\n  const spatial2entity = new Map<string, string[]>();\n  const entities = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.spatialEntity, null, null)) {\n      entities.add(quad.object.id);\n      if (!spatial2entity.has(quad.object.id)) {\n        spatial2entity.set(quad.object.id, [subject]);\n      } else {\n        spatial2entity.get(quad.object.id)?.push(subject);\n      }\n    }\n  }\n\n  const newSpatialEntities = callback(entities);\n  const newSeen = new Set<string>();\n  for (const e of newSpatialEntities) {\n    for (const s of spatial2entity.get(e) ?? []) {\n      newSeen.add(s);\n    }\n  }\n  return newSeen;\n}\n\nfunction filterWithDataset(\n  store: Store,\n  seen: Set<string>,\n  callback: (datasetsSeen: Set<string>) => Set<string>,\n): Set<string> {\n  const dataset2entity = new Map<string, string[]>();\n  const datasets = new Set<string>();\n\n  const sectionAndBlockSeen = new Set<string>(seen);\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.sections, null, null)) {\n      sectionAndBlockSeen.add(quad.object.id);\n    }\n  }\n\n  for (const subject of sectionAndBlockSeen) {\n    for (const quad of readQuads(store, subject, entity.datasets, null, null)) {\n      datasets.add(quad.object.id);\n      if (!dataset2entity.has(quad.object.id)) {\n        dataset2entity.set(quad.object.id, [subject]);\n      } else {\n        dataset2entity.get(quad.object.id)?.push(subject);\n      }\n    }\n  }\n\n  const newDatasets = callback(datasets);\n  const newSeen = new Set<string>();\n  for (const e of newDatasets) {\n    for (const s of dataset2entity.get(e) ?? []) {\n      newSeen.add(s);\n    }\n  }\n  return newSeen;\n}\n\n/**\n * Finds all ids of object matching a filter.\n *\n * @param store The triple store.\n * @param filter The filter to limit objects.\n * @returns A set of all ids matching the filter.\n */\nexport function findIds(store: Store, graph: CCFSpatialGraph, filter: Filter): Set<string> {\n  let seen = getAllEntities(store);\n  if (seen.size > 0) {\n    seen = filterByHasSpatialEntity(store, seen);\n  }\n  if (seen.size > 0 && (filter.sex === 'Male' || filter.sex === 'Female')) {\n    const sex = filter.sex;\n    seen = filterWithDonor(store, seen, (donors) => filterBySex(store, donors, sex));\n  }\n  if (seen.size > 0 && filter.consortiums?.length > 0) {\n    seen = filterWithDonor(store, seen, (donors) => filterByConsortiumName(store, donors, filter.consortiums));\n  }\n  if (seen.size > 0 && filter.tmc?.length > 0) {\n    seen = filterWithDonor(store, seen, (donors) => filterByGroupName(store, donors, filter.tmc));\n  }\n  if (seen.size > 0 && filter.technologies?.length > 0) {\n    seen = filterWithDataset(store, seen, (datasets) => filterByTechnology(store, datasets, filter.technologies));\n  }\n  if (seen.size > 0 && filter.spatialSearches?.length > 0) {\n    seen = filterWithSpatialEntity(store, seen, (entities) =>\n      filterBySpatialSearches(store, graph, entities, filter.spatialSearches),\n    );\n  }\n  if (seen.size > 0 && filter.ontologyTerms?.length > 0) {\n    const terms = filter.ontologyTerms;\n    if (terms.indexOf(rui.body.id) === -1) {\n      seen = filterWithSpatialEntity(store, seen, (entities) => filterByOntologyTerms(store, entities, terms));\n    }\n  }\n  if (seen.size > 0 && filter.cellTypeTerms?.length > 0) {\n    const terms = filter.cellTypeTerms;\n    if (terms.indexOf(rui.cell.id) === -1) {\n      seen = filterWithSpatialEntity(store, seen, (entities) => filterByCellTypeTerms(store, entities, terms));\n    }\n  }\n  if (seen.size > 0 && filter.biomarkerTerms?.length > 0) {\n    const terms = filter.biomarkerTerms;\n    if (terms.indexOf('http://purl.org/ccf/biomarkers') === -1) {\n      seen = filterWithSpatialEntity(store, seen, (entities) => filterByBiomarkerTerms(store, entities, terms));\n    }\n  }\n  if (seen.size > 0 && filter.ageRange?.length === 2 && isFinite(filter.ageRange[0]) && isFinite(filter.ageRange[1])) {\n    const maxAge = Math.max(...filter.ageRange);\n    const minAge = Math.min(...filter.ageRange);\n\n    // Age filter given by their default range will be ignored\n    if (!(minAge === 1 && maxAge === 110)) {\n      seen = filterWithDonor(store, seen, (donors) => filterByAge(store, donors, minAge, maxAge));\n    }\n  }\n  if (seen.size > 0 && filter.bmiRange?.length === 2 && isFinite(filter.bmiRange[0]) && isFinite(filter.bmiRange[1])) {\n    const maxBMI = Math.max(...filter.bmiRange);\n    const minBMI = Math.min(...filter.bmiRange);\n\n    // BMI filter given by their default range will be ignored\n    if (!(minBMI === 13 && maxBMI === 83)) {\n      seen = filterWithDonor(store, seen, (donors) => filterByBMI(store, donors, minBMI, maxBMI));\n    }\n  }\n  return seen;\n}\n\n/**\n * Gets all object ids in a store.\n *\n * @param store The triple store.\n * @returns A set of all ids.\n */\nfunction getAllEntities(store: Store): Set<string> {\n  const seen = new Set<string>();\n  store.forSubjects((s) => seen.add(s.id), entity.spatialEntity, null, null);\n  return seen;\n}\n\n/**\n * Creates a callback function that adds ids to a second set iff it exists in the first set.\n *\n * @param seen The first set of ids.\n * @param newSeen The second set to add ids to.\n * @returns The callback function.\n */\nfunction differenceCallback(seen: Set<string>, newSeen: Set<string>): (term: Term) => void {\n  return function (term: Term) {\n    if (seen.has(term.id)) {\n      newSeen.add(term.id);\n    }\n  };\n}\n\n/**\n * Filters ids by sex.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param sex Sex to filter on.\n * @returns The subset of ids with the specified sex.\n */\nfunction filterBySex(store: Store, seen: Set<string>, sex: 'Male' | 'Female'): Set<string> {\n  const newSeen = new Set<string>();\n  store.forSubjects(differenceCallback(seen, newSeen), entity.sex, entity[sex], null);\n  return newSeen;\n}\n\n/**\n * Filters ids by consortium names.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param consortiums Consortiums to filter on.\n * @returns The subset of ids with the specified consortiums.\n */\nfunction filterByConsortiumName(store: Store, seen: Set<string>, consortiums: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const consortium of consortiums) {\n    const literal = DataFactory.literal(consortium);\n    store.forSubjects(differenceCallback(seen, newSeen), entity.consortiumName, literal, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by group names.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param groupNames Group names to filter on.\n * @returns The subset of ids with the specified group names.\n */\nfunction filterByGroupName(store: Store, seen: Set<string>, groupNames: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const groupName of groupNames) {\n    const literal = DataFactory.literal(groupName);\n    store.forSubjects(differenceCallback(seen, newSeen), entity.providerName, literal, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by technology names.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param technologies Technology names to filter on.\n * @returns The subset of ids with the specified technology names.\n */\nfunction filterByTechnology(store: Store, seen: Set<string>, technologies: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const technology of technologies) {\n    const literal = DataFactory.literal(technology);\n    store.forSubjects(differenceCallback(seen, newSeen), entity.technology, literal, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by ontology terms.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param terms Ontology terms to filter on.\n * @returns The subset of ids with the specified ontology terms.\n */\nfunction filterByOntologyTerms(store: Store, seen: Set<string>, terms: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const term of terms) {\n    const namedNode = DataFactory.namedNode(term);\n    store.forSubjects(differenceCallback(seen, newSeen), ccf.spatialEntity.ccf_annotations, namedNode, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by cell type terms.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param terms Cell type terms to filter on.\n * @returns The subset of ids with the specified cell type terms.\n */\nfunction filterByCellTypeTerms(store: Store, seen: Set<string>, terms: string[]): Set<string> {\n  const asTerms = new Set<string>();\n  for (const term of terms) {\n    store.forObjects(\n      (asTerm) => {\n        asTerms.add(asTerm.id);\n      },\n      term,\n      ccf.asctb.located_in,\n      null,\n    );\n    if (term === rui.cell.id) {\n      asTerms.add(rui.body.id);\n    }\n  }\n  return filterByOntologyTerms(store, seen, [...asTerms]);\n}\n\n/**\n * Filters ids by biomarker terms.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param terms Biomarker terms to filter on.\n * @returns The subset of ids with the specified biomarker terms.\n */\nfunction filterByBiomarkerTerms(store: Store, seen: Set<string>, terms: string[]): Set<string> {\n  const asTerms = new Set<string>();\n  for (const term of terms) {\n    store.forObjects(\n      (asTerm) => {\n        asTerms.add(asTerm.id);\n      },\n      term,\n      ccf.asctb.bm_located_in,\n      null,\n    );\n    if (term === 'http://purl.org/ccf/biomarkers') {\n      asTerms.add(rui.body.id);\n    }\n  }\n  return filterByOntologyTerms(store, seen, [...asTerms]);\n}\n\n/**\n * Filters ids by age.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param minAge Minimum age.\n * @param maxAge Maximum age.\n * @returns The subset of ids with the specified age.\n */\nfunction filterByAge(store: Store, seen: Set<string>, minAge: number, maxAge: number): Set<string> {\n  const newSeen = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.age, null, null)) {\n      const value = fromRdf(quad.object as Literal) as number;\n      if (value >= minAge && value <= maxAge) {\n        newSeen.add(subject);\n      }\n    }\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by BMI.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param minBMI Minimum BMI.\n * @param maxBMI Maximum BMI.\n * @returns The subset of ids with the specified BMI.\n */\nfunction filterByBMI(store: Store, seen: Set<string>, minBMI: number, maxBMI: number): Set<string> {\n  const newSeen = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.bmi, null, null)) {\n      const value = fromRdf(quad.object as Literal) as number;\n      if (value >= minBMI && value <= maxBMI) {\n        newSeen.add(subject);\n      }\n    }\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by spatial entities.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param hasSpatialEntity Whether the filtered objects should have a spatial entity.\n * @returns The subset of ids with/without spatial entities.\n */\nfunction filterByHasSpatialEntity(store: Store, seen: Set<string>, hasSpatialEntity = true): Set<string> {\n  const newSeen = new Set<string>();\n  store.forSubjects(differenceCallback(seen, newSeen), entity.spatialEntity, null, null);\n  if (!hasSpatialEntity) {\n    const notNewSeen = new Set<string>();\n    seen.forEach((s) => (!newSeen.has(s) ? notNewSeen.add(s) : undefined));\n    return notNewSeen;\n  }\n  return newSeen;\n}\n\nfunction filterBySpatialSearches(\n  store: Store,\n  graph: CCFSpatialGraph,\n  seen: Set<string>,\n  spatialSearches: SpatialSearch[],\n): Set<string> {\n  const newSeen = new Set<string>();\n  for (const search of spatialSearches) {\n    const thisSeen = filterByProbingSphere(store, graph, seen, search);\n    thisSeen.forEach((s) => newSeen.add(s));\n  }\n  return newSeen;\n}\n","import { Store, readQuads } from 'triple-store-utils';\n\nimport { ccf, entity, rui } from '../util/prefixes';\n\nfunction getSpatialEntityMapping(subjects: Set<string>, store: Store): Map<string, Set<string>> {\n  const spatial2entity = new Map<string, Set<string>>();\n\n  for (const subject of subjects) {\n    for (const quad of readQuads(store, subject, entity.spatialEntity, null, null)) {\n      if (!spatial2entity.has(quad.object.id)) {\n        spatial2entity.set(quad.object.id, new Set<string>([subject]));\n      } else {\n        spatial2entity.get(quad.object.id)?.add(subject);\n      }\n    }\n  }\n  return spatial2entity;\n}\n\nfunction getAnatomicalStructureMapping(ids: Set<string>, store: Store): Map<string, Set<string>> {\n  const spatial2entity = getSpatialEntityMapping(ids, store);\n  const term2entity = new Map<string, Set<string>>();\n\n  for (const subject of spatial2entity.keys()) {\n    const entities = spatial2entity.get(subject);\n    for (const quad of readQuads(store, subject, ccf.spatialEntity.ccf_annotations, null, null)) {\n      if (!term2entity.has(quad.object.id)) {\n        term2entity.set(quad.object.id, new Set<string>(entities));\n      } else {\n        const termEntities = term2entity.get(quad.object.id);\n        entities?.forEach((value) => termEntities?.add(value));\n      }\n    }\n  }\n  return term2entity;\n}\n\n/**\n * Get number of occurrences of ontology terms for a set of ids.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns Ontology term counts.\n */\nexport function getOntologyTermOccurences(ids: Set<string>, store: Store): Record<string, number> {\n  const counts: Record<string, number> = {};\n  const term2entities = getAnatomicalStructureMapping(ids, store);\n\n  term2entities.forEach((value, key) => {\n    counts[key] = value.size;\n  });\n\n  return counts;\n}\n\n/**\n * Get number of occurrences of biomarkers terms for a set of ids.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns Ontology term counts.\n */\nexport function getBiomarkerTermOccurences(ids: Set<string>, store: Store): Record<string, number> {\n  const asTerm2entities = getAnatomicalStructureMapping(ids, store);\n  const bmTerm2entities = new Map<string, Set<string>>();\n\n  for (const asTerm of asTerm2entities.keys()) {\n    const entities = asTerm2entities.get(asTerm);\n    for (const quad of readQuads(store, null, ccf.asctb.bm_located_in, asTerm, null)) {\n      const biomarker = quad.subject.id;\n      if (!bmTerm2entities.has(biomarker)) {\n        bmTerm2entities.set(biomarker, new Set<string>(entities));\n      } else {\n        const termEntities = bmTerm2entities.get(biomarker);\n        entities?.forEach((value) => termEntities?.add(value));\n      }\n    }\n  }\n\n  const counts: Record<string, number> = {};\n\n  bmTerm2entities.forEach((value, key) => {\n    counts[key] = value.size;\n  });\n\n  counts['biomarkers'] = asTerm2entities.get(rui.body.id)?.size ?? 0;\n\n  return counts;\n}\n\n/**\n * Get number of occurrences of cell type terms for a set of ids.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns Ontology term counts.\n */\nexport function getCellTypeTermOccurences(ids: Set<string>, store: Store): Record<string, number> {\n  const asTerm2entities = getAnatomicalStructureMapping(ids, store);\n  const ctTerm2entities = new Map<string, Set<string>>();\n\n  for (const asTerm of asTerm2entities.keys()) {\n    const entities = asTerm2entities.get(asTerm);\n    for (const quad of readQuads(store, null, ccf.asctb.located_in, asTerm, null)) {\n      const cellType = quad.subject.id;\n      if (!ctTerm2entities.has(cellType)) {\n        ctTerm2entities.set(cellType, new Set<string>(entities));\n      } else {\n        const termEntities = ctTerm2entities.get(cellType);\n        entities?.forEach((value) => termEntities?.add(value));\n      }\n    }\n  }\n\n  const counts: Record<string, number> = {};\n\n  ctTerm2entities.forEach((value, key) => {\n    counts[key] = value.size;\n  });\n\n  counts[rui.cell.id] = asTerm2entities.get(rui.body.id)?.size ?? 0;\n\n  return counts;\n}\n","import { memoize } from 'lodash';\nimport { readQuads, Store } from 'triple-store-utils';\nimport { OntologyTreeModel, OntologyTreeNode } from '../interfaces';\nimport { getEntries } from '../util/n3-functions';\nimport { ccf, rdfs, rui } from '../util/prefixes';\n\nexport function getOntologyTreeNode(store: Store, iri: string, relationshipIri: string): OntologyTreeNode {\n  const result: OntologyTreeNode = {\n    '@id': iri,\n    '@type': 'OntologyTreeNode',\n    id: iri,\n    parent: '',\n    children: [] as string[],\n    synonymLabels: [] as string[],\n    label: '',\n  };\n\n  const ontologyTreeNodeResult = {\n    [ccf.ontologyNode.label.id]: 'label',\n    [relationshipIri]: 'parent',\n    [ccf.ontologyNode.synonymLabels.id]: 'synonymLabels',\n  };\n\n  for (const [key, value] of getEntries(store, iri, ontologyTreeNodeResult)) {\n    if (key === 'synonymLabels') {\n      result.synonymLabels.push(value as string);\n    } else {\n      result[key as keyof OntologyTreeNode] = value as never;\n    }\n  }\n  result.children = store.getSubjects(relationshipIri, iri, null).map((s) => s.id);\n\n  return result;\n}\n\nexport function getOntologyTreeModel(\n  store: Store,\n  rootIri: string,\n  rootLabel: string,\n  relationshipIri: string,\n): OntologyTreeModel {\n  const result: OntologyTreeModel = { root: rootIri, nodes: {} };\n  const seen = new Set<string>();\n  for (const quad of readQuads(store, null, relationshipIri, null, null)) {\n    seen.add(quad.subject.id);\n    seen.add(quad.object.id);\n  }\n\n  for (const iri of seen) {\n    result.nodes[iri] = getOntologyTreeNode(store, iri, relationshipIri);\n  }\n\n  if (!result.nodes[rootIri]) {\n    result.nodes[rootIri] = {\n      '@id': rootIri,\n      '@type': 'OntologyTreeNode',\n      id: rootIri,\n      label: rootLabel,\n      children: [],\n      synonymLabels: [],\n    } as unknown as OntologyTreeNode;\n  }\n\n  const rootChildren = store\n    .getSubjects(relationshipIri, rootIri, null)\n    .map((o) => o.id)\n    .sort((a, b) => result.nodes[a].label.localeCompare(result.nodes[b].label));\n  result.nodes[rootIri].children = rootChildren;\n\n  treeify(result);\n\n  return result;\n}\n\n/**\n * Recursive function to ensure that the given ontology tree model is actually a tree by essentially using a BFS search.\n *\n * @param model the ontology tree model to mutate\n * @param nodeIri the tree node iri to modify. Starts at root in the base case\n * @param seen a set of IRIs that have been 'seen' so far to remove loops in the graph\n */\nfunction treeify(model: OntologyTreeModel, nodeIri: string | undefined = undefined, seen: Set<string> = new Set()) {\n  const node = model.nodes[nodeIri ?? model.root];\n  if (node) {\n    node.children = node.children.filter((n) => !seen.has(n));\n    node.children.forEach((n) => seen.add(n));\n    for (const childId of node.children) {\n      treeify(model, childId, seen);\n      if (model.nodes[childId]) {\n        model.nodes[childId].parent = node['@id'];\n      }\n    }\n  }\n}\n\nexport function getAnatomicalStructureTreeModelSlowly(store: Store): OntologyTreeModel {\n  const model = getOntologyTreeModel(store, rui.body.id, 'body', ccf.asctb.part_of.id);\n  model.nodes[rui.body.id].children = [\n    'http://purl.obolibrary.org/obo/UBERON_0000955', // Brain\n    'http://purl.obolibrary.org/obo/UBERON_0000029', // Lymph Node\n    // 'http://purl.obolibrary.org/obo/UBERON_0002509', // Mesenteric Lymph Node\n    'http://purl.obolibrary.org/obo/UBERON_0000970', // Eye\n    // 'http://purl.obolibrary.org/obo/UBERON_0004548', // Eye, L\n    // 'http://purl.org/sig/ont/fma/fma54449', // Eye, R\n    'http://purl.obolibrary.org/obo/UBERON_0003889', // Fallopian Tube\n    // 'http://purl.obolibrary.org/obo/UBERON_0001303', // Fallopian Tube, L\n    // 'http://purl.obolibrary.org/obo/UBERON_0001302', // Fallopian Tube, R\n    'http://purl.obolibrary.org/obo/UBERON_0000948', // Heart\n    'http://purl.obolibrary.org/obo/UBERON_0002113', // Kidney\n    // 'http://purl.obolibrary.org/obo/UBERON_0004538', // Kidney, L\n    // 'http://purl.obolibrary.org/obo/UBERON_0004539', // Kidney, R\n    'http://purl.obolibrary.org/obo/UBERON_0001465', // Knee\n    // 'http://purl.org/sig/ont/fma/fma24978', // Knee, L\n    // 'http://purl.org/sig/ont/fma/fma24977', // Knee, R\n    'http://purl.obolibrary.org/obo/UBERON_0001737', // Larynx\n    'http://purl.obolibrary.org/obo/UBERON_0002107', // Liver\n    'http://purl.obolibrary.org/obo/UBERON_0002048', // Lungs\n    'http://purl.obolibrary.org/obo/UBERON_0002182', // Main Bronchus\n    'http://purl.obolibrary.org/obo/UBERON_0001911', // Mammary Gland\n    // 'http://purl.org/sig/ont/fma/fma57991', // Mammary Gland, L\n    // 'http://purl.org/sig/ont/fma/fma57987', // Mammary Gland, R\n    'http://purl.obolibrary.org/obo/UBERON_0000992', // Ovary\n    // 'http://purl.org/sig/ont/fma/fma7214', // Ovary, L\n    // 'http://purl.org/sig/ont/fma/fma7213', // Ovary, R\n    'http://purl.obolibrary.org/obo/UBERON_0002373', // Palatine Tonsil\n    // 'http://purl.org/sig/ont/fma/fma54974', // Palatine Tonsil, L\n    // 'http://purl.org/sig/ont/fma/fma54973', // Palatine Tonsil, R\n    'http://purl.obolibrary.org/obo/UBERON_0001264', // Pancreas\n    'http://purl.obolibrary.org/obo/UBERON_0001270', // Pelvis\n    'http://purl.obolibrary.org/obo/UBERON_0001987', // Placenta\n    'http://purl.obolibrary.org/obo/UBERON_0002367', // Prostate\n    'http://purl.obolibrary.org/obo/UBERON_0002097', // Skin\n    'http://purl.obolibrary.org/obo/UBERON_0002108', // Small Intestine\n    'http://purl.obolibrary.org/obo/UBERON_0002240', // Spinal Cord\n    'http://purl.obolibrary.org/obo/UBERON_0000059', // Large Intestine\n    'http://purl.obolibrary.org/obo/UBERON_0002106', // Spleen\n    'http://purl.obolibrary.org/obo/UBERON_0002370', // Thymus\n    'http://purl.obolibrary.org/obo/UBERON_0003126', // Trachea\n    'http://purl.obolibrary.org/obo/UBERON_0000056', // Ureter\n    // 'http://purl.obolibrary.org/obo/UBERON_0001223', // Ureter, L\n    // 'http://purl.obolibrary.org/obo/UBERON_0001222', // Ureter, R\n    'http://purl.obolibrary.org/obo/UBERON_0001255', // Urinary Bladder\n    'http://purl.obolibrary.org/obo/UBERON_0000995', // Uterus\n    'http://purl.obolibrary.org/obo/UBERON_0004537', // Blood Vasculature\n    // 'http://purl.obolibrary.org/obo/UBERON_0000467', // Anatomical System\n  ].filter((iri) => iri in model.nodes);\n  return model;\n}\n\nexport const getAnatomicalStructureTreeModel = memoize(getAnatomicalStructureTreeModelSlowly, () => '');\n\nexport function getCellTypeTreeModel(store: Store): OntologyTreeModel {\n  return getOntologyTreeModel(store, rui.cell.id, 'cell', ccf.asctb.ct_is_a.id);\n}\n\nfunction formBiomarkerNode(id: string, label: string, parent: string, children: string[]): OntologyTreeNode {\n  return {\n    ['@id']: `http://purl.org/ccf/${id}`,\n    id,\n    label,\n    parent: parent ?? '',\n    children: children ?? [],\n    synonymLabels: [],\n    ['@type']: 'OntologyTreeNode',\n  };\n}\n\nexport function getBiomarkerTreeModel(store: Store): OntologyTreeModel {\n  const bmType = ccf.x('ccf_biomarker_type');\n\n  const nodes: Record<string, OntologyTreeNode> = {\n    biomarkers: formBiomarkerNode('biomarkers', 'Biomarkers', '', []),\n  };\n  for (const quad of readQuads(store, null, bmType, null, null)) {\n    const bm = quad.object.value;\n    const iri = quad.subject.id;\n    if (!nodes[bm]) {\n      nodes[bm] = formBiomarkerNode(bm, bm[0].toUpperCase() + bm.slice(1), 'biomarkers', []);\n      nodes['biomarkers'].children.push(bm);\n    }\n    nodes[bm].children.push(iri);\n\n    const result = formBiomarkerNode(iri, '', bm, []);\n    const ontologyTreeNodeResult = {\n      [ccf.ontologyNode.label.id]: 'label',\n      [rdfs.label.id]: 'synonymLabels',\n    };\n\n    for (const [key, value] of getEntries(store, iri, ontologyTreeNodeResult)) {\n      if (key === 'synonymLabels') {\n        if (value && value !== result.label) {\n          result.synonymLabels.push(value as string);\n        }\n      } else {\n        result[key as keyof OntologyTreeNode] = value as never;\n      }\n    }\n\n    for (const node of Object.values(nodes)) {\n      if (node.children.length > 1) {\n        node.children.sort((a, b) => nodes[a]?.label.localeCompare(nodes[b]?.label));\n      }\n    }\n\n    nodes[iri] = result;\n  }\n\n  return {\n    root: 'biomarkers',\n    nodes,\n  };\n}\n","import { sortBy } from 'lodash';\nimport { DataFactory, NamedNode, Store } from 'triple-store-utils';\n\nimport { ExtractionSet, SpatialEntity, SpatialObjectReference, SpatialPlacement } from '../spatial-types';\nimport { getMappedResult } from '../util/n3-functions';\nimport { ccf, entity } from '../util/prefixes';\n\n/**\n * Reverses the keys and values in a mapping.\n *\n * @param mapping The mapping to reverse.\n * @returns The reversed mapping.\n */\nfunction reverseMapping(mapping: { [property: string]: NamedNode }): {\n  [iri: string]: string;\n} {\n  const newMapping: { [iri: string]: string } = {};\n  Object.entries(mapping).forEach(([prop, predicate]) => {\n    newMapping[predicate.id] = prop;\n  });\n  return newMapping;\n}\n\n/** A mapping of spatial objects. */\nconst mappings = {\n  spatialObjectReference: reverseMapping(ccf.spatialObjectReference),\n  spatialEntity: reverseMapping(ccf.spatialEntity),\n  spatialPlacement: reverseMapping(ccf.spatialPlacement),\n};\n\n/**\n * Creates a spatial object reference.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns The new reference.\n */\nexport function getSpatialObjectReference(store: Store, iri: string): SpatialObjectReference {\n  return getMappedResult<SpatialObjectReference>(store, iri, 'SpatialObjectReference', mappings.spatialObjectReference);\n}\n\n/**\n * Creates an extraction set data object.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns The new entity.\n */\nexport function getExtractionSet(store: Store, iri: string): ExtractionSet {\n  const result = getMappedResult<ExtractionSet>(store, iri, 'ExtractionSet', mappings.spatialEntity);\n  result.extractionSites = sortBy(\n    store.getSubjects(ccf.spatialEntity.extraction_set, iri, null).map((value) => getSpatialEntity(store, value.id)),\n    ['rui_rank'],\n  );\n  return result;\n}\n\n/**\n * Gets extraction sets associated with a reference organ\n *\n * @param store The triple store.\n * @param iri The data identifier (the reference organ).\n * @returns A set of extraction sets associated with the reference organ\n */\nexport function getExtractionSets(store: Store, iri: string): ExtractionSet[] {\n  return sortBy(\n    store\n      .getSubjects(ccf.spatialEntity.extraction_set_for, iri, null)\n      .map((value) => getExtractionSet(store, value.id)),\n    ['rui_rank'],\n  );\n}\n\n/**\n * Gets the anatomical structures associated with a reference organ.\n *\n * @param store The triple store.\n * @param iri The data identifier (reference organ).\n * @returns The new entity.\n */\nexport function getAnatomicalStructures(store: Store, iri: string): SpatialEntity[] {\n  return sortBy(\n    store\n      .getSubjects(ccf.spatialEntity.reference_organ, iri, null)\n      .map((value) => getSpatialEntity(store, value.id))\n      .filter((e) => e['@id'] !== iri),\n    ['rui_rank'],\n  );\n}\n\n/**\n * Gets all reference organs in the triple store\n *\n * @param store The triple store.\n * @returns All the reference organs.\n */\nexport function getReferenceOrgans(store: Store): SpatialEntity[] {\n  const results: SpatialEntity[] = [];\n  store.forEach(\n    (quad) => {\n      if (quad.subject.id === quad.object.id) {\n        results.push(getSpatialEntity(store, quad.subject.id));\n      }\n    },\n    null,\n    ccf.spatialEntity.reference_organ,\n    null,\n    null,\n  );\n  return sortBy(results, ['rui_rank']);\n}\n\n/**\n * Creates a spatial entity data object.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns The new entity.\n */\nexport function getSpatialEntity(store: Store, iri: string): SpatialEntity {\n  const result = getMappedResult<SpatialEntity>(store, iri, 'SpatialEntity', mappings.spatialEntity);\n  // Default mapping will come back as an IRI which we can look up for the full object\n  if (result.object) {\n    result.object = getSpatialObjectReference(store, result.object as unknown as string);\n  }\n  if (result.ccf_annotations) {\n    result.ccf_annotations = store.getObjects(iri, ccf.spatialEntity.ccf_annotations, null).map((o) => o.id);\n  }\n  store.forSubjects((subject) => (result.entityId = subject.id), entity.spatialEntity, iri, null);\n  return result;\n}\n\n/**\n * Creates a spatial placement object.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns THe new placement object.\n */\nexport function getSpatialPlacement(store: Store, iri: string): SpatialPlacement {\n  const result = getMappedResult<SpatialPlacement>(store, iri, 'SpatialPlacement', mappings.spatialPlacement);\n  // Default mapping will come back as an IRI for source/target which we can look up for the full object\n  if (result.source) {\n    result.source = getSpatialEntity(store, result.source as unknown as string);\n  }\n  if (result.target) {\n    result.target = getSpatialEntity(store, result.target as unknown as string);\n  }\n  return result;\n}\n\n/**\n * Creates a spatial entity based on another entity in the store.\n *\n * @param store The triple store.\n * @param entityIRI The indentifier of the store entity.\n * @returns A new entity.\n */\nexport function getSpatialEntityForEntity(store: Store, entityIRI: string): SpatialEntity | undefined {\n  const spatialEntityNodes = store.getObjects(DataFactory.namedNode(entityIRI), entity.spatialEntity, null);\n  if (spatialEntityNodes.length > 0) {\n    return getSpatialEntity(store, spatialEntityNodes[0].id);\n  } else {\n    return undefined;\n  }\n}\n","import { Euler } from '@math.gl/core';\nimport { OrientedBoundingBox } from '@math.gl/culling';\nimport { Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from '../ccf-spatial-graph';\nimport { SpatialSearch } from '../interfaces';\nimport { getMappedResult } from '../util/n3-functions';\nimport { ccf } from '../util/prefixes';\n\nconst spatialEntityDimensions = {\n  [ccf.spatialEntity.x_dimension.id]: 'x',\n  [ccf.spatialEntity.y_dimension.id]: 'y',\n  [ccf.spatialEntity.z_dimension.id]: 'z',\n};\n\nfunction getSpatialEntityDimensions(store: Store, iri: string): [number, number, number] {\n  const dims = getMappedResult<{ x: number; y: number; z: number }>(store, iri, 'Dimensions', spatialEntityDimensions);\n  return [dims.x, dims.y, dims.z];\n}\n\nexport function getOrientedBoundingBox(\n  store: Store,\n  graph: CCFSpatialGraph,\n  sourceIri: string,\n  targetIri: string,\n): OrientedBoundingBox | undefined {\n  const matrix = graph.getTransformationMatrix(sourceIri, targetIri);\n  let result: OrientedBoundingBox | undefined = undefined;\n  if (matrix) {\n    const center = matrix.getTranslation();\n    const halfSize = getSpatialEntityDimensions(store, sourceIri).map((n) => n / 1000 / 2);\n    const quaternion = new Euler().fromRotationMatrix(matrix, Euler.XYZ).toQuaternion().normalize().calculateW();\n    result = new OrientedBoundingBox().fromCenterHalfSizeQuaternion(center as number[], halfSize, quaternion);\n  }\n  return result;\n}\n\nexport function filterByProbingSphere(\n  store: Store,\n  graph: CCFSpatialGraph,\n  seen: Set<string>,\n  search: SpatialSearch,\n): Set<string> {\n  const { x, y, z, radius, target } = search;\n  const newSeen = new Set<string>();\n  const radiusSquared = (radius / 1000) * (radius / 1000);\n  for (const sourceIri of seen) {\n    const boundingBox = getOrientedBoundingBox(store, graph, sourceIri, target);\n    if (boundingBox) {\n      const distanceSquared = boundingBox.distanceSquaredTo([x, y, z].map((n) => n / 1000));\n      if (distanceSquared <= radiusSquared) {\n        newSeen.add(sourceIri);\n      }\n    }\n  }\n  return newSeen;\n}\n","import { Store } from 'triple-store-utils';\nimport { DatasetResult, DonorResult, TissueBlockResult, TissueSectionResult } from '../interfaces';\nimport { getEntries, getMappedResult } from '../util/n3-functions';\nimport { entity } from '../util/prefixes';\n\n/** Entity iri to property path. */\nconst listResultSet: { [iri: string]: string } = {\n  [entity.label.id]: 'label',\n  [entity.description.id]: 'description',\n  [entity.link.id]: 'link',\n};\n\nconst donorResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.providerName.id]: 'providerName',\n};\n\nconst datasetResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.technology.id]: 'technology',\n  [entity.thumbnail.id]: 'thumbnail',\n};\n\nconst tissueSectionResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.sampleType.id]: 'sampleType',\n  [entity.sectionNumber.id]: 'sectionNumber',\n  [entity.datasets.id]: 'datasets',\n};\n\nconst tissueBlockResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.sampleType.id]: 'sampleType',\n  [entity.sectionCount.id]: 'sectionCount',\n  [entity.sectionSize.id]: 'sectionSize',\n  [entity.sectionUnits.id]: 'sectionUnits',\n\n  [entity.donor.id]: 'donor',\n  [entity.spatialEntity.id]: 'spatialEntityId',\n  [entity.sections.id]: 'sections',\n  [entity.datasets.id]: 'datasets',\n};\n\n/**\n * Extracts a single donor result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getDonorResult(store: Store, iri: string): DonorResult {\n  return getMappedResult(store, iri, 'Donor', donorResultSet);\n}\n\n/**\n * Extracts a single dataset result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getDatasetResult(store: Store, iri: string): DatasetResult {\n  return getMappedResult(store, iri, 'Dataset', datasetResultSet);\n}\n\n/**\n * Extracts a single tissue section result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getTissueSectionResult(store: Store, iri: string): TissueSectionResult {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const result = {\n    '@id': iri,\n    '@type': 'Sample',\n    datasets: [] as DatasetResult[],\n  } as TissueSectionResult;\n  for (const [key, value] of getEntries(store, iri, tissueSectionResultSet)) {\n    if (key === 'datasets') {\n      const dataset = getDatasetResult(store, value as string);\n      result[key].push(dataset);\n    } else {\n      result[key as keyof TissueSectionResult] = value as never;\n    }\n  }\n  return result;\n}\n\n/**\n * Extracts a single tissue block result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getTissueBlockResult(store: Store, iri: string): TissueBlockResult {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const result = {\n    '@id': iri,\n    '@type': 'Sample',\n    sections: [] as TissueSectionResult[],\n    datasets: [] as DatasetResult[],\n  } as TissueBlockResult;\n  for (const [key, value] of getEntries(store, iri, tissueBlockResultSet)) {\n    if (key === 'sections') {\n      const section = getTissueSectionResult(store, value as string);\n      result[key].push(section);\n    } else if (key === 'datasets') {\n      const dataset = getDatasetResult(store, value as string);\n      result[key].push(dataset);\n    } else if (key === 'donor') {\n      result[key] = getDonorResult(store, value as string);\n    } else {\n      result[key as keyof TissueBlockResult] = value as never;\n    }\n  }\n  return result;\n}\n","/** A reference to a spatial object */\nexport interface SpatialObjectReference {\n  /** Identifier */\n  '@id': string;\n  /** Type name */\n  '@type': 'SpatialObjectReference';\n  /** Data file name */\n  file: string;\n  /** Data format */\n  file_format: string;\n  /** File subpath */\n  file_subpath?: string;\n}\n\n/** A set of extraction sites */\nexport interface ExtractionSet {\n  /** Identifier */\n  '@id': string;\n  /** Type name */\n  '@type': 'ExtractionSet';\n  /** Entity label */\n  label: string;\n  /** The list of extraction sites in this set */\n  extractionSites: SpatialEntity[];\n}\n\n/** A spatial entity */\nexport interface SpatialEntity {\n  /** Identifier */\n  '@id': string;\n  /** Type name */\n  '@type': 'SpatialEntity';\n  /** IRI of the Entity this Spatial Entity represents */\n  entityId?: string;\n  /** Entity label */\n  label?: string;\n  /** Entity comment */\n  comment?: string;\n  /** Creator */\n  creator?: string;\n  /** Creator first name */\n  creator_first_name?: string;\n  /** Creator last name */\n  creator_last_name?: string;\n  /** Creator middle name */\n  creator_middle_name?: string;\n  /** Creator identifier */\n  creator_orcid?: string;\n  /** Creation date */\n  creation_date?: string;\n\n  /** Annotations (a set of IRIs) */\n  ccf_annotations?: string[];\n  /** Annotation (IRI) that says what this entity represents */\n  representation_of?: string;\n  /** Specifies if this is an anatomical structure of this organ (IRI) */\n  reference_organ?: string;\n  /** Specifies (where applicable) if this entity came from a Male or Female */\n  sex: 'Male' | 'Female' | undefined;\n  /** Specifies (where applicable) if this entity came from the left or right side organ */\n  side: 'Left' | 'Right' | undefined;\n  /** Ranking used in the RUI for ordering lists */\n  rui_rank?: number;\n  /** The thickness (in nanometers) of slices taken out of this spatial entity */\n  slice_thickness?: number;\n  /** The number of slices taken out of this spatial entity */\n  slice_count?: number;\n\n  /** X-dimension */\n  x_dimension: number;\n  /** Y-dimension */\n  y_dimension: number;\n  /** Z-dimension */\n  z_dimension: number;\n  /** Units dimensions are in */\n  dimension_units: string;\n  /** Data references */\n  object?: SpatialObjectReference;\n\n  /** Coloring */\n  color?: [number, number, number, number];\n}\n\n/** Object describing the placement of an entity */\nexport interface SpatialPlacementCommon {\n  /** JSON-LD context */\n  '@context'?: string;\n  /** Identifier */\n  '@id': string;\n  /** Type name */\n  '@type': 'SpatialPlacement';\n\n  /** Date placement was made */\n  placement_date: string;\n  /** Scaling in x-dimension */\n  x_scaling: number;\n  /** Scaling in y-dimension */\n  y_scaling: number;\n  /** Scaling in z-dimension */\n  z_scaling: number;\n  /** Units scaling is expressed in */\n  scaling_units: string;\n\n  /** Rotation in x-dimension */\n  x_rotation: number;\n  /** Rotation in y-dimension */\n  y_rotation: number;\n  /** Rotation in z-dimension */\n  z_rotation: number;\n  /** Rotation in w-dimension */\n  w_rotation?: number;\n  /** Order rotations should be applied in */\n  rotation_order?: string;\n  /** Units rotation is expressed in */\n  rotation_units: string;\n\n  /** Translation in x-dimension */\n  x_translation: number;\n  /** Translation in y-dimension */\n  y_translation: number;\n  /** Translation in z-dimension */\n  z_translation: number;\n  /** Units translation is expressed in */\n  translation_units: string;\n}\n\nexport interface SpatialPlacement extends SpatialPlacementCommon {\n  /** Source entity */\n  source: SpatialEntity | SpatialObjectReference;\n  /** Target entity */\n  target: SpatialEntity;\n}\n\nexport interface FlatSpatialPlacement extends SpatialPlacementCommon {\n  /** Source entity iri */\n  source: string;\n  /** Target entity iri */\n  target: string;\n}\n","import { CCFDatabase } from '../ccf-database';\nimport { DatabaseStatus } from '../interfaces';\n\nexport class CCFDatabaseStatusTracker {\n  status: 'Ready' | 'Loading' | 'Error' = 'Loading';\n  message?: string;\n  loadTime?: number;\n  timestamp?: string;\n\n  constructor(public database: CCFDatabase) {\n    this.connect();\n  }\n\n  toJson(): DatabaseStatus {\n    return {\n      status: this.status,\n      message: this.message,\n      checkback: this.status === 'Ready' || this.status === 'Error' ? 60 * 60 * 1000 : 2000,\n      loadTime: this.loadTime,\n      timestamp: this.timestamp,\n    };\n  }\n\n  private async connect(): Promise<void> {\n    this.status = 'Loading';\n    this.message = 'Loading database';\n\n    const startTime = Date.now();\n    return this.database\n      .connect()\n      .then(async (loaded) => {\n        if (loaded) {\n          // Warm up the database\n          this.message = 'Building scene';\n          this.timestamp = new Date().toISOString();\n          await this.database.getScene();\n          this.message = 'Building tissue block results';\n          this.timestamp = new Date().toISOString();\n          await this.database.getTissueBlockResults();\n          this.message = 'Aggregating results';\n          this.timestamp = new Date().toISOString();\n          await this.database.getAggregateResults();\n          this.status = 'Ready';\n          this.message = 'Database successfully loaded';\n          this.timestamp = new Date().toISOString();\n        } else {\n          this.status = 'Error';\n          this.message = 'Unknown error while loading database';\n          this.timestamp = new Date().toISOString();\n        }\n      })\n      .catch((error: { message?: string }) => {\n        this.status = 'Error';\n        this.message = error?.message ?? 'Unknown error while loading database';\n        this.timestamp = new Date().toISOString();\n      })\n      .finally(() => {\n        this.loadTime = Date.now() - startTime;\n      });\n  }\n}\n","import { JsonLd } from 'jsonld/jsonld-spec';\n\n/**\n * The SPARQL endpoint to grab the data from\n */\nconst SPARQL_ENDPOINT = 'https://lod.humanatlas.io/sparql';\n\n/**\n * A query that computes a graph containing Biomarkers located in Anatomical Structures\n */\nconst query = `\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ccf: <http://purl.org/ccf/>\nPREFIX has_characterizing_biomarker_set: <http://purl.obolibrary.org/obo/RO_0015004>\n\nCONSTRUCT { ?bm ccf:ccf_bm_located_in ?as }\nFROM <https://purl.org/ccf/ccf.owl>\nWHERE {\n  ?ct ccf:ccf_located_in ?as .\n\n  ?ct rdfs:subClassOf [\n  \towl:onProperty has_characterizing_biomarker_set: ;\n  \towl:someValuesFrom [ owl:intersectionOf ?bn3 ]] .\n  ?bn3 rdf:rest*/rdf:first [\n  \towl:onProperty ccf:has_marker_component ;\n    owl:someValuesFrom ?bm\n  ] .\n}\n`;\n\n/**\n * Get biomarkers located in AS as a JSON-LD object\n * @returns the json-ld graph with BMs located in AS\n */\nexport async function getBmLocatedInAs(): Promise<JsonLd> {\n  const url = `${SPARQL_ENDPOINT}?query=${encodeURIComponent(query)}`;\n  return fetch(url, {\n    headers: { ['Accept']: 'application/ld+json' },\n  })\n    .then((r) => r.json())\n    .catch((err) => {\n      console.log('Error querying lod.humanatlas.io', err);\n      return [];\n    });\n}\n","import { DataFactory, NamedNode, Store, readQuads } from 'triple-store-utils';\nimport { getAnatomicalStructureTreeModel } from '../queries/ontology-tree-n3';\nimport { ccf, entity } from './prefixes';\n\n/**\n * Function to add additional ccf_annotations to rui locations based on the\n * reference organ it was placed relative to.\n *\n * @param store the triple store holding the CCF.OWL data\n */\nexport function enrichRuiLocations(store: Store): void {\n  const tree = getAnatomicalStructureTreeModel(store);\n  const refOrganMap: Map<string, NamedNode[]> = new Map();\n\n  // Build a map from reference organ to ccf annotations via representation_of and the AS partonomy\n  for (const { subject: organ, object: term } of readQuads(\n    store,\n    null,\n    ccf.spatialEntity.representation_of,\n    null,\n    null,\n  )) {\n    const annotations = new Set([term.id]);\n    let parent = tree.nodes[term.id]?.parent;\n    while (parent) {\n      if (annotations.has(parent)) {\n        break;\n      } else {\n        annotations.add(parent);\n        parent = tree.nodes[parent]?.parent;\n      }\n    }\n    refOrganMap.set(\n      organ.id,\n      [...annotations].map((s) => DataFactory.namedNode(s)),\n    );\n  }\n\n  // Add AS terms for rui locations based on the reference organs they are placed relative to\n  for (const { object: ruiLocation } of readQuads(store, null, entity.spatialEntity, null, null)) {\n    for (const { subject: placement } of readQuads(store, null, ccf.spatialPlacement.source, ruiLocation, null)) {\n      for (const { object: organ } of readQuads(store, placement, ccf.spatialPlacement.target, null, null)) {\n        for (const term of refOrganMap.get(organ.id) ?? []) {\n          store.addQuad(DataFactory.namedNode(ruiLocation.id), ccf.spatialEntity.ccf_annotations, term);\n        }\n      }\n    }\n  }\n}\n","import { fromRdf } from 'rdf-literal';\nimport { Store, readQuads } from 'triple-store-utils';\n\n/**\n * Iterates over the key/value pairs for an IRI, using the specified mapping with quads from the store.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @param mapping Property mappings.\n * @returns an iterator over the key/value pairs\n */\nexport function* getEntries(\n  store: Store,\n  iri: string,\n  mapping: { [iri: string]: string },\n): Generator<[string, string | number]> {\n  for (const [predicate, key] of Object.entries(mapping)) {\n    for (const quad of readQuads(store, iri, predicate, null, null)) {\n      const value = quad.object.termType === 'Literal' ? fromRdf(quad.object) : quad.object.id;\n      yield [key, value];\n    }\n  }\n}\n\n/**\n * Creates an object of the specified type using quads from the store.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @param type Type name.\n * @param mapping Property mappings.\n * @returns A new data object.\n */\nexport function getMappedResult<T = unknown>(\n  store: Store,\n  iri: string,\n  type: string,\n  mapping: { [iri: string]: string },\n): T {\n  const result = { '@id': iri, '@type': type };\n  for (const [predicate, key] of Object.entries(mapping)) {\n    for (const quad of readQuads(store, result['@id'], predicate, null, null)) {\n      const value = quad.object.termType === 'Literal' ? fromRdf(quad.object) : quad.object.id;\n      result[key as never] = value as never;\n    }\n  }\n  return result as unknown as T;\n}\n","import { Matrix4, toRadians } from '@math.gl/core';\nimport { SpatialSceneNode } from '../ccf-spatial-scene';\nimport { SpatialEntity } from '../spatial-types';\n\ntype Color = [number, number, number, number];\nconst gray: Color = [204, 204, 204, 255];\nconst red: Color = [213, 0, 0, 255];\nconst green: Color = [29, 204, 101, 255];\nconst blue: Color = [41, 121, 255, 255];\n\n/**\n * Create a set of scene nodes for the body-ui to show the origin and lines extending to it's dimensions.\n * @param node the Spatial Entity (usually a reference organ) that the origin is defined by\n * @param includeLetters whether to show the keyboard letters associated with the origin points\n * @param centered whether to center the organ at the origin point\n * @returns a set of scene nodes for the body-ui\n */\nexport function getOriginScene(node: SpatialEntity, includeLetters = false, centered = false): SpatialSceneNode[] {\n  const sceneWidth = node.x_dimension / 1000;\n  const sceneHeight = node.y_dimension / 1000;\n  const sceneDepth = node.z_dimension / 1000;\n  const originRadius = Math.max(sceneWidth, sceneHeight, sceneDepth) * 0.05;\n  const lineRadius = originRadius * 0.1;\n  const globalTranslation = centered ? [sceneWidth, sceneHeight, sceneDepth].map((n) => n * -0.5) : [0, 0, 0];\n\n  return [\n    // Origin Sphere\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginSphere',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'sphere',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate(globalTranslation).scale(originRadius),\n      color: gray,\n    },\n    // Origin X Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginX',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([sceneWidth / 2, 0, 0])\n        .rotateZ(toRadians(-90))\n        .scale([lineRadius, sceneWidth, lineRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginXCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([sceneWidth, 0, 0])\n        .rotateZ(toRadians(-90))\n        .scale([originRadius, originRadius * 3, originRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginXALabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'A',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([-originRadius * 2, 0, 0])\n        .scale(originRadius),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginXDLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'D',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([sceneWidth + originRadius * 2, 0, 0])\n        .scale(originRadius),\n      color: red,\n    },\n    // Origin Y Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginY',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, sceneHeight / 2, 0])\n        .scale([lineRadius, sceneHeight, lineRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginYCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, sceneHeight, 0])\n        .scale([originRadius, originRadius * 3, originRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginYSLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'S',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([originRadius * 1.5, originRadius * 1.5, 0])\n        .scale(originRadius),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginYWLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'W',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, sceneHeight + originRadius * 2, 0])\n        .scale(originRadius),\n      color: green,\n    },\n    // Origin Z Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZ',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, 0, sceneDepth / 2])\n        .rotateX(toRadians(90))\n        .scale([lineRadius, sceneDepth, lineRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, 0, sceneDepth])\n        .rotateX(toRadians(90))\n        .scale([originRadius, originRadius * 3, originRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZQLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'Q',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([originRadius * 1.5, -originRadius * 1.5, 0])\n        .scale(originRadius),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZELabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'E',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate(globalTranslation)\n        .translate([0, 0, sceneDepth + originRadius * 2])\n        .scale(originRadius),\n      color: blue,\n    },\n  ].filter(\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    (n) => (includeLetters && n.geometry === 'text' && n.text) || !n.text,\n  ) as SpatialSceneNode[];\n}\n","import { Context, JsonLd } from 'jsonld/jsonld-spec';\n\nconst basePurlUrl = 'http://purl.org/ccf/';\n\n/** CCF v2.0 JSON-LD Context */\nconst CCF_CONTEXT: JsonLd = {\n  '@context': {\n    '@base': basePurlUrl,\n    '@vocab': basePurlUrl,\n    ccf: basePurlUrl,\n    rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n    dcterms: 'http://purl.org/dc/terms/',\n    label: 'rdfs:label',\n    description: 'rdfs:comment',\n    link: 'ccf:url',\n    sex: 'ccf:sex',\n    age: 'ccf:age',\n    bmi: 'ccf:bmi',\n    consortium_name: 'ccf:consortium_name',\n    provider_name: 'ccf:tissue_provider_name',\n    provider_uuid: 'ccf:tissue_provider_uuid',\n    donor: {\n      '@id': 'ccf:comes_from',\n      '@type': '@id',\n    },\n    samples: {\n      '@reverse': 'donor',\n    },\n    sections: {\n      '@id': 'ccf:subdivided_into_sections',\n      '@type': '@id',\n    },\n    datasets: {\n      '@id': 'ccf:generates_dataset',\n      '@type': '@id',\n    },\n    sample_type: 'ccf:sample_type',\n    section_count: 'ccf:section_count',\n    section_size: 'ccf:section_size',\n    section_units: 'ccf:section_size_unit',\n    section_number: 'ccf:section_number',\n    rui_location: {\n      '@id': 'ccf:has_registration_location',\n      '@type': '@id',\n    },\n    ccf_annotations: {\n      '@id': 'ccf:collides_with',\n      '@type': '@id',\n      '@container': '@set',\n    },\n    representation_of: {\n      '@id': 'ccf:representation_of',\n      '@type': '@id',\n    },\n    reference_organ: {\n      '@id': 'ccf:has_reference_organ',\n      '@type': '@id',\n    },\n    extraction_set_for: {\n      '@id': 'ccf:extraction_set_for',\n      '@type': '@id',\n    },\n    extraction_set: {\n      '@id': 'ccf:has_extraction_set',\n      '@type': '@id',\n    },\n    organ_owner_sex: 'ccf:organ_owner_sex',\n    side: 'ccf:organ_side',\n    rui_rank: 'ccf:rui_rank',\n    slice_thickness: 'ccf:slice_thickness',\n    slice_count: 'ccf:slice_count',\n    object: {\n      '@id': 'ccf:has_object_reference',\n      '@type': '@id',\n    },\n    creation_date: 'dcterms:created',\n    updated_date: 'ccf:updated_date',\n    creator: 'dcterms:creator',\n    creator_first_name: 'ccf:creator_first_name',\n    creator_last_name: 'ccf:creator_last_name',\n    placement: {\n      '@reverse': 'ccf:placement_for',\n    },\n    placement_date: 'dcterms:created',\n    rotation_order: 'ccf:rotation_order',\n    dimension_units: 'ccf:dimension_unit',\n    rotation_units: 'ccf:rotation_unit',\n    scaling_units: 'ccf:scaling_unit',\n    translation_units: 'ccf:translation_unit',\n    source: {\n      '@id': 'ccf:placement_for',\n      '@type': '@id',\n    },\n    target: {\n      '@id': 'ccf:placement_relative_to',\n      '@type': '@id',\n    },\n    x_rotation: 'ccf:x_rotation',\n    y_rotation: 'ccf:y_rotation',\n    z_rotation: 'ccf:z_rotation',\n    x_scaling: 'ccf:x_scaling',\n    y_scaling: 'ccf:y_scaling',\n    z_scaling: 'ccf:z_scaling',\n    x_translation: 'ccf:x_translation',\n    y_translation: 'ccf:y_translation',\n    z_translation: 'ccf:z_translation',\n    x_dimension: 'ccf:x_dimension',\n    y_dimension: 'ccf:y_dimension',\n    z_dimension: 'ccf:z_dimension',\n    ontology_terms: {\n      '@id': 'ccf:has_ontology_term',\n      '@type': '@id',\n    },\n    technology: 'ccf:technology',\n    thumbnail: 'ccf:thumbnail',\n    file: 'ccf:file_url',\n    file_format: 'ccf:file_format',\n    file_subpath: 'ccf:file_subpath',\n  },\n};\n/* eslint-enable @typescript-eslint/naming-convention */\n\n/**\n * Function which takes JSON-LD data and makes patches to update from CCF v1.x to v2.0 automatically\n *\n * @param jsonLdString the input JSON-LD as a string\n * @returns A JSON-LD object derived from the given string with updated data to be compatible with CCF v2.0\n */\nexport function patchJsonLd(jsonLdString: string, context: string | JsonLd = CCF_CONTEXT): JsonLd {\n  return JSON.parse(jsonLdString, (key, value) => {\n    if (key === 'ccf_annotations' && Array.isArray(value)) {\n      return value.map((iri: string) => {\n        if (iri?.startsWith('http://purl.obolibrary.org/obo/FMA_')) {\n          return iri.replace('http://purl.obolibrary.org/obo/FMA_', 'http://purl.org/sig/ont/fma/fma');\n        } else {\n          return iri;\n        }\n      });\n    } else if (\n      key === '@context' &&\n      value &&\n      (value === 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-entity-context.jsonld' ||\n        value === 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld' ||\n        value === 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld' ||\n        (value as Context)['@base'] === 'http://purl.org/ccf/latest/ccf-entity.owl#')\n    ) {\n      return context;\n    }\n    return value;\n  });\n}\n","import { DataFactory, Util } from 'triple-store-utils';\n\n/** Constants used to create entity accessors. */\nexport const PREFIXES = {\n  base: 'http://purl.org/ccf/latest/ccf.owl#',\n  ccf: 'http://purl.org/ccf/',\n  fma: 'http://purl.org/sig/ont/fma/fma',\n  obo: 'http://purl.obolibrary.org/obo/',\n  uberon: 'http://purl.obolibrary.org/obo/UBERON_',\n  cl: 'http://purl.obolibrary.org/obo/CL_',\n  lmha: 'http://purl.obolibrary.org/obo/LMHA_',\n  rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n  rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n  dc: 'http://purl.org/dc/elements/1.1/',\n  dcterms: 'http://purl.org/dc/terms/',\n};\n\n/** Prefix factory. */\nexport const prefixer = Util.prefixes(PREFIXES, DataFactory);\n\nexport const rdf = {\n  x: prefixer('rdf'),\n  type: prefixer('rdf')('type'),\n};\n\nexport const rdfs = {\n  x: prefixer('rdfs'),\n  label: prefixer('rdfs')('label'),\n  comment: prefixer('rdfs')('comment'),\n  isDefinedBy: prefixer('rdfs')('isDefinedBy'),\n  seeAlso: prefixer('rdfs')('seeAlso'),\n};\n\n/** CCF id helper. */\nconst ccfx = prefixer('ccf');\n\n/** Common entity ids. */\nexport const entity = {\n  id: prefixer('ccf')('has_registration_location'),\n  label: prefixer('rdfs')('label'),\n  description: prefixer('rdfs')('comment'),\n  link: ccfx('url'),\n\n  sex: ccfx('sex'),\n  age: ccfx('age'),\n  bmi: ccfx('bmi'),\n\n  Male: DataFactory.literal('Male'),\n  Female: DataFactory.literal('Female'),\n\n  consortiumName: ccfx('consortium_name'),\n  providerName: ccfx('tissue_provider_name'),\n  providerUUID: ccfx('tissue_provider_uuid'),\n\n  donor: ccfx('comes_from'),\n\n  sections: ccfx('subdivided_into_sections'),\n  datasets: ccfx('generates_dataset'),\n\n  sampleType: ccfx('sample_type'),\n\n  TissueBlock: DataFactory.literal('Tissue Block'),\n  TissueSection: DataFactory.literal('Tissue Section'),\n  NonStandard: DataFactory.literal('Non-standard'),\n\n  sectionCount: ccfx('section_count'),\n  sectionSize: ccfx('section_size'),\n  sectionUnits: ccfx('section_size_unit'),\n  sectionNumber: ccfx('section_number'),\n\n  spatialEntity: ccfx('has_registration_location'),\n  ontologyTerms: ccfx('has_ontology_term'),\n  cellTypeTerms: ccfx('has_cell_type_term'),\n  biomarkerTerms: ccfx('has_biomarker_term'),\n\n  technology: ccfx('technology'),\n  thumbnail: ccfx('thumbnail'),\n};\n\n/** CCF specific ids. */\nexport const ccf = {\n  x: ccfx,\n  base: prefixer('base'),\n  ontologyNode: {\n    label: ccfx('ccf_pref_label'),\n    parent: ccfx('ccf_part_of'),\n    children: ccfx('ccf_part_of'),\n    rui_rank: ccfx('rui_rank'),\n    synonymLabels: DataFactory.namedNode('http://www.geneontology.org/formats/oboInOwl#hasExactSynonym'),\n  },\n  asctb: {\n    part_of: ccfx('ccf_part_of'),\n    ct_is_a: ccfx('ccf_ct_isa'),\n    located_in: ccfx('ccf_located_in'),\n    characterizes: ccfx('ccf_characterizes'),\n    bm_located_in: ccfx('ccf_bm_located_in'),\n  },\n  spatial: {\n    Female: prefixer('base')('VHFemale'),\n    Male: prefixer('base')('VHMale'),\n    BothSexes: prefixer('base')('VHBothSexes'),\n    FemaleOrgans: prefixer('base')('VHFemaleOrgans'),\n    MaleOrgans: prefixer('base')('VHMaleOrgans'),\n  },\n  SpatialObjectReference: ccfx('spatial_object_reference'),\n  SpatialEntity: ccfx('spatial_entity'),\n  SpatialPlacement: ccfx('spatial_placement'),\n  spatialObjectReference: {\n    file: ccfx('file_url'),\n    file_format: ccfx('file_format'),\n    file_subpath: ccfx('file_subpath'),\n  },\n  extractionSet: {\n    label: prefixer('rdfs')('label'),\n    rui_rank: ccfx('rui_rank'),\n  },\n  spatialEntity: {\n    label: prefixer('rdfs')('label'),\n    description: prefixer('rdfs')('comment'),\n    creator: prefixer('dcterms')('creator'),\n    creator_first_name: ccfx('creator_first_name'),\n    creator_last_name: ccfx('creator_last_name'),\n    creator_middle_name: ccfx('creator_middle_name'),\n    creator_orcid: ccfx('creator_orcid'),\n    creation_date: prefixer('dcterms')('created'),\n    updated_date: ccfx('updated_date'),\n    ccf_annotations: ccfx('collides_with'),\n    representation_of: ccfx('representation_of'),\n    reference_organ: ccfx('has_reference_organ'),\n    extraction_set_for: ccfx('extraction_set_for'),\n    extraction_set: ccfx('has_extraction_set'),\n    sex: ccfx('organ_owner_sex'),\n    side: ccfx('organ_side'),\n    rui_rank: ccfx('rui_rank'),\n    slice_thickness: ccfx('slice_thickness'),\n    slice_count: ccfx('slice_count'),\n    x_dimension: ccfx('x_dimension'),\n    y_dimension: ccfx('y_dimension'),\n    z_dimension: ccfx('z_dimension'),\n    dimension_units: ccfx('dimension_unit'),\n    object: ccfx('has_object_reference'),\n  },\n  spatialPlacement: {\n    source: ccfx('placement_for'),\n    target: ccfx('placement_relative_to'),\n\n    placement_date: prefixer('dcterms')('created'),\n    x_scaling: ccfx('x_scaling'),\n    y_scaling: ccfx('y_scaling'),\n    z_scaling: ccfx('z_scaling'),\n    scaling_units: ccfx('scaling_unit'),\n\n    x_rotation: ccfx('x_rotation'),\n    y_rotation: ccfx('y_rotation'),\n    z_rotation: ccfx('z_rotation'),\n    w_rotation: ccfx('theta_rotation'),\n    rotation_order: ccfx('rotation_order'),\n    rotation_units: ccfx('rotation_unit'),\n\n    x_translation: ccfx('x_translation'),\n    y_translation: ccfx('y_translation'),\n    z_translation: ccfx('z_translation'),\n    translation_units: ccfx('translation_unit'),\n  },\n};\n\n/** Uberon specific ids. */\nexport const uberon = {\n  x: prefixer('uberon'),\n  body: prefixer('uberon')('0013702'),\n};\n\n/** CL specific ids. */\nexport const cl = {\n  x: prefixer('cl'),\n  cell: prefixer('cl')('0000000'),\n};\n\n/** FMA specific ids. */\nexport const fma = {\n  x: prefixer('fma'),\n};\n\n/** LMHA specific ids. */\nexport const lmha = {\n  x: prefixer('lmha'),\n};\n\n/** RUI accessors. */\nexport const rui = {\n  body: uberon.body,\n  cell: cl.cell,\n  respiratory_system: uberon.x('0001004'),\n  colon: uberon.x('0001155'),\n  left_lung: uberon.x('0002168'),\n  right_lung: uberon.x('0002167'),\n  left_bronchus: uberon.x('0002178'),\n  right_bronchus: uberon.x('0002177'),\n  kidney: uberon.x('0002113'),\n  ureter: uberon.x('0000056'),\n  eye: uberon.x('0000970'),\n  fallopian_tube: uberon.x('0003889'),\n  knee: uberon.x('0001465'),\n  ovary: uberon.x('0000992'),\n  trachea: uberon.x('0003126'),\n  aorta: uberon.x('0000947'),\n  blood: uberon.x('0000178'),\n  bone_marrow: uberon.x('0002371'),\n  male_reproductive_system: uberon.x('0000079'),\n  lymph_node: uberon.x('0000029'),\n\n  // Derived using\n  // console.log(ALL_POSSIBLE_ORGANS.map(\n  //   o => `  ${\n  //     o.name.toLowerCase().replace(',', '').replace(/ /g, '_')\n  //   }: ${\n  //     o.id.split('/').slice(-1)[0].split('_')[0].toLowerCase()\n  //   }.x('${\n  //     o.id.split('_').slice(-1)[0]\n  //   }'),`).join('\\n'));\n  blood_vasculature: uberon.x('0004537'),\n  brain: uberon.x('0000955'),\n  eye_left: uberon.x('0004548'),\n  eye_right: fma.x('54449'),\n  fallopian_tube_left: uberon.x('0001303'),\n  fallopian_tube_right: uberon.x('0001302'),\n  heart: uberon.x('0000948'),\n  kidney_left: uberon.x('0004538'),\n  kidney_right: uberon.x('0004539'),\n  knee_left: fma.x('24978'),\n  knee_right: fma.x('24977'),\n  large_intestine: uberon.x('0000059'),\n  liver: uberon.x('0002107'),\n  lungs: uberon.x('0002048'),\n  mesenteric_lymph_node: uberon.x('0002509'),\n  ovary_left: fma.x('7214'),\n  ovary_right: fma.x('7213'),\n  pancreas: uberon.x('0001264'),\n  pelvis: uberon.x('0001270'),\n  prostate_gland: uberon.x('0002367'),\n  skin: uberon.x('0002097'),\n  small_intestine: uberon.x('0002108'),\n  spleen: uberon.x('0002106'),\n  thymus: uberon.x('0002370'),\n  ureter_left: uberon.x('0001223'),\n  ureter_right: uberon.x('0001222'),\n  urinary_bladder: uberon.x('0001255'),\n  uterus: uberon.x('0000995'),\n};\n","import { Matrix4, toRadians } from '@math.gl/core';\nimport { SpatialSceneNode } from '../ccf-spatial-scene';\nimport { SpatialSearch } from '../interfaces';\nimport { SpatialEntity } from '../spatial-types';\n\ntype Color = [number, number, number, number];\nconst gold: Color = [240, 183, 98, 255];\nconst red: Color = [213, 0, 0, 255];\nconst green: Color = [29, 204, 101, 255];\nconst blue: Color = [41, 121, 255, 255];\n\n/**\n * Create a set of scene nodes for the body-ui to show the probing sphere and lines around it\n * for a given spatial search.\n * @param node the Spatial Entity (usually a reference organ) that the sphere is probing into\n * @param sphere the Spatial Search that defines where and how big the probing sphere is\n * @returns a set of scene nodes for the body-ui\n */\nexport function getProbingSphereScene(node: SpatialEntity, sphere?: SpatialSearch): SpatialSceneNode[] {\n  const sceneWidth = node.x_dimension / 1000;\n  const sceneHeight = node.y_dimension / 1000;\n  const sceneDepth = node.z_dimension / 1000;\n  const defaultSphereRadius = Math.max(sceneWidth, sceneHeight, sceneDepth) * 0.07;\n  const sphereLineRadius = defaultSphereRadius * 0.05;\n  const sphereLineLength = defaultSphereRadius * 2;\n  const sphereConeRadius = sphereLineRadius * 4;\n\n  if (!sphere) {\n    sphere = {\n      target: node.representation_of ?? node['@id'],\n      radius: defaultSphereRadius,\n      x: sceneWidth / 2,\n      y: sceneHeight / 2,\n      z: sceneDepth / 2,\n    };\n  } else {\n    sphere = {\n      ...sphere,\n      radius: sphere.radius / 1000,\n      x: sphere.x / 1000,\n      y: sphere.y / 1000,\n      z: sphere.z / 1000,\n    };\n  }\n\n  return [\n    // Probing Sphere\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingSphere',\n      '@type': 'SpatialSceneNode',\n      unpickable: false,\n      geometry: 'sphere',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate([sphere.x, sphere.y, sphere.z]).scale(sphere.radius),\n      color: gold,\n    },\n    // Probing Sphere Positive X Axis (D)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXD',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x + sphere.radius + sphereLineLength / 2, sphere.y, sphere.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXDCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x + sphere.radius + sphereLineLength, sphere.y, sphere.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXDLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'D',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x + sphere.radius + sphereLineLength + sphereConeRadius * 3, sphere.y, sphere.z])\n        .scale(sphereConeRadius),\n      color: red,\n    },\n    // Probing Sphere Negative X Axis (A)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXA',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x - sphere.radius - sphereLineLength / 2, sphere.y, sphere.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXACone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x - sphere.radius - sphereLineLength, sphere.y, sphere.z])\n        .rotateZ(toRadians(90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXALabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'A',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x - sphere.radius - sphereLineLength - sphereConeRadius * 3.5, sphere.y, sphere.z])\n        .scale(sphereConeRadius),\n      color: red,\n    },\n    // Probing Sphere Positive Y Axis (W)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYW',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y + sphere.radius + sphereLineLength / 2, sphere.z])\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYWCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y + sphere.radius + sphereLineLength, sphere.z])\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYWLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'W',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y + sphere.radius + sphereLineLength + sphereConeRadius * 3, sphere.z])\n        .scale(sphereConeRadius),\n      color: green,\n    },\n    // Probing Sphere Negative Y Axis (S)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYS',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y - sphere.radius - sphereLineLength / 2, sphere.z])\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYSCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y - sphere.radius - sphereLineLength, sphere.z])\n        .rotateZ(toRadians(180))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYSLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'S',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y - sphere.radius - sphereLineLength - sphereConeRadius * 3.5, sphere.z])\n        .scale(sphereConeRadius),\n      color: green,\n    },\n    // Probing Sphere Positive Z Axis (Q)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZQ',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z + sphere.radius + sphereLineLength / 2])\n        .rotateX(toRadians(90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZQCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z + sphere.radius + sphereLineLength])\n        .rotateX(toRadians(90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZQLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'Q',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z + sphere.radius + sphereLineLength + sphereConeRadius * 3])\n        .scale(sphereConeRadius),\n      color: blue,\n    },\n    // Probing Sphere Negative Z Axis (E)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZE',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z - sphere.radius - sphereLineLength / 2])\n        .rotateX(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZECone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z - sphere.radius - sphereLineLength])\n        .rotateX(toRadians(-90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZELabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'E',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z - sphere.radius - sphereLineLength - sphereConeRadius * 3.5])\n        .scale(sphereConeRadius),\n      color: blue,\n    },\n  ];\n}\n","import { Matrix4, toRadians } from '@math.gl/core';\nimport { SpatialSceneNode } from '../ccf-spatial-scene';\nimport { SpatialEntity, SpatialPlacement } from '../spatial-types';\n\ntype Color = [number, number, number, number];\nconst gray: Color = [204, 204, 204, 255];\nconst red: Color = [213, 0, 0, 255];\nconst green: Color = [29, 204, 101, 255];\nconst blue: Color = [41, 121, 255, 255];\n\n/**\n * Create a set of scene nodes for the body-ui to show the lines around a cube\n *\n * @param node the Spatial Entity that the scene is drawn around\n * @param placement the Spatial Placement where the cube is placed\n * @returns a set of scene nodes for the body-ui\n */\nexport function getTissueBlockScene(node: SpatialEntity, placement: SpatialPlacement): SpatialSceneNode[] {\n  const sceneWidth = node.x_dimension / 1000;\n  const sceneHeight = node.y_dimension / 1000;\n  const sceneDepth = node.z_dimension / 1000;\n  const originRadius = Math.max(sceneWidth, sceneHeight, sceneDepth) * 0.1;\n  const defaultSphereRadius = Math.max(sceneWidth, sceneHeight, sceneDepth);\n  const sphereLineRadius = defaultSphereRadius * 0.05;\n  const sphereLineLength = defaultSphereRadius * 2;\n  const sphereConeRadius = sphereLineRadius * 4;\n\n  const cube = {\n    radius: defaultSphereRadius / 1000 / 2,\n    x: placement.x_translation / 1000,\n    y: placement.y_translation / 1000,\n    z: placement.z_translation / 1000,\n\n    rx: toRadians(placement.x_rotation),\n    ry: toRadians(placement.y_rotation),\n    rz: toRadians(placement.z_rotation),\n\n    sx: node.x_dimension / 1000,\n    sy: node.y_dimension / 1000,\n    sz: node.z_dimension / 1000,\n  };\n\n  return [\n    // Carbon Rod Sphere\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeOriginSphere',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'sphere',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z])\n        .rotateXYZ([cube.rx, cube.ry, cube.rz])\n        .multiplyRight(\n          new Matrix4(Matrix4.IDENTITY).translate([-cube.sx / 2, -cube.sy / 2, -cube.sz / 2]).scale(originRadius),\n        ),\n      color: gray,\n    },\n    // Carbon Rod X Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeOriginX',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z])\n        .rotateXYZ([cube.rx, cube.ry, cube.rz])\n        .multiplyRight(\n          new Matrix4(Matrix4.IDENTITY)\n            .translate([0, -cube.sy / 2, -cube.sz / 2])\n            .rotateZ(toRadians(-90))\n            .scale([sphereLineRadius, cube.sx, sphereLineRadius]),\n        ),\n      color: red,\n    },\n    // Carbon Rod Y Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeOriginY',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z])\n        .rotateXYZ([cube.rx, cube.ry, cube.rz])\n        .multiplyRight(\n          new Matrix4(Matrix4.IDENTITY)\n            .translate([-cube.sx / 2, 0, -cube.sz / 2])\n            .scale([sphereLineRadius, cube.sy, sphereLineRadius]),\n        ),\n      color: green,\n    },\n    // Carbon Rod Z Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeOriginZ',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z])\n        .rotateXYZ([cube.rx, cube.ry, cube.rz])\n        .multiplyRight(\n          new Matrix4(Matrix4.IDENTITY)\n            .translate([-cube.sx / 2, -cube.sy / 2, 0])\n            .rotateX(toRadians(90))\n            .scale([sphereLineRadius, cube.sz, sphereLineRadius]),\n        ),\n      color: blue,\n    },\n    // Cube Positive X Axis (D)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXD',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x + cube.radius + sphereLineLength / 2, cube.y, cube.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXDCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x + cube.radius + sphereLineLength, cube.y, cube.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXDLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'D',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x + cube.radius + sphereLineLength + sphereConeRadius * 3, cube.y, cube.z])\n        .scale(sphereConeRadius),\n      color: red,\n    },\n    // Cube Negative X Axis (A)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXA',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x - cube.radius - sphereLineLength / 2, cube.y, cube.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXACone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x - cube.radius - sphereLineLength, cube.y, cube.z])\n        .rotateZ(toRadians(90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: red,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeXALabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'A',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x - cube.radius - sphereLineLength - sphereConeRadius * 3.5, cube.y, cube.z])\n        .scale(sphereConeRadius),\n      color: red,\n    },\n    // Cube Positive Y Axis (W)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYW',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y + cube.radius + sphereLineLength / 2, cube.z])\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYWCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y + cube.radius + sphereLineLength, cube.z])\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYWLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'W',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y + cube.radius + sphereLineLength + sphereConeRadius * 3, cube.z])\n        .scale(sphereConeRadius),\n      color: green,\n    },\n    // Cube Negative Y Axis (S)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYS',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y - cube.radius - sphereLineLength / 2, cube.z])\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYSCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y - cube.radius - sphereLineLength, cube.z])\n        .rotateZ(toRadians(180))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: green,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeYSLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'S',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y - cube.radius - sphereLineLength - sphereConeRadius * 3.5, cube.z])\n        .scale(sphereConeRadius),\n      color: green,\n    },\n    // Cube Positive Z Axis (Q)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZQ',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z + cube.radius + sphereLineLength / 2])\n        .rotateX(toRadians(90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZQCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z + cube.radius + sphereLineLength])\n        .rotateX(toRadians(90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZQLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'Q',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z + cube.radius + sphereLineLength + sphereConeRadius * 3])\n        .scale(sphereConeRadius),\n      color: blue,\n    },\n    // Cube Negative Z Axis (E)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZE',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z - cube.radius - sphereLineLength / 2])\n        .rotateX(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZECone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z - cube.radius - sphereLineLength])\n        .rotateX(toRadians(-90))\n        .scale([sphereConeRadius, sphereConeRadius * 3, sphereConeRadius]),\n      color: blue,\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#CubeZELabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'E',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([cube.x, cube.y, cube.z - cube.radius - sphereLineLength - sphereConeRadius * 3.5])\n        .scale(sphereConeRadius),\n      color: blue,\n    },\n  ];\n}\n","import { JsonLd } from 'jsonld/jsonld-spec';\nimport { xConsortiaResponseAsJsonLd } from './xconsortia-data';\n\ninterface SearchResultJson {\n  hits: {\n    hits: unknown[];\n    total: {\n      value: number;\n    };\n  };\n}\n\n// Reduce this value if including more data fields\nconst PER_API_SEARCH_REQUEST_COUNT = 10000;\n\nconst INCLUDED_DATA_FIELDS = [\n  'uuid',\n  'entity_type',\n  'hubmap_id',\n  'sennet_id',\n  'group_uuid',\n  'group_name',\n  'last_modified_timestamp',\n  'created_by_user_displayname',\n  'donor',\n  'source',\n  'descendants.entity_type',\n  'descendants.ingest_metadata.metadata.tissue_id',\n  'descendants.last_modified_timestamp',\n  'descendants.group_uuid',\n  'descendants.group_name',\n  'descendants.created_by_user_displayname',\n  'descendants.uuid',\n  'descendants.hubmap_id',\n  'descendants.sennet_id',\n  'descendants.dataset_type',\n  'descendants.thumbnail_file',\n  'descendants.metadata.files.rel_path',\n  'rui_location',\n  'sample_category',\n];\n\nconst DEFAULT_API_SEARCH_QUERY: unknown = {\n  exists: {\n    field: 'rui_location',\n  },\n};\n\nfunction getApiSearchHeaders(token?: string): Headers {\n  const headers = new Headers();\n\n  headers.append('Content-type', 'application/json');\n  if (token) {\n    headers.append('Authorization', `Bearer ${token}`);\n  }\n\n  return headers;\n}\n\nfunction getApiSearchBody(from: number, size: number, query?: unknown): string {\n  const bodyObj = {\n    version: true,\n    from,\n    size,\n    stored_fields: ['*'],\n    script_fields: {},\n    docvalue_fields: [],\n    query: query ?? DEFAULT_API_SEARCH_QUERY,\n    _source: {\n      includes: INCLUDED_DATA_FIELDS,\n    },\n  };\n\n  return JSON.stringify(bodyObj);\n}\n\nasync function doSearchRequest(url: string, init?: RequestInit): Promise<SearchResultJson | undefined> {\n  try {\n    const res = await fetch(url, init);\n    const text = await res.text();\n    const validResponse = res.ok || text.startsWith('https');\n    if (validResponse) {\n      if (text.startsWith('https')) {\n        return await fetch(text).then((r) => r.json());\n      } else {\n        return JSON.parse(text);\n      }\n    }\n    return undefined;\n  } catch (_error) {\n    return undefined;\n  }\n}\n\nasync function doApiSearch(url: string, token?: string, query?: unknown): Promise<SearchResultJson | undefined> {\n  const perReqCount = PER_API_SEARCH_REQUEST_COUNT;\n  const headers = getApiSearchHeaders(token);\n  const body = getApiSearchBody(0, perReqCount, query);\n  const firstResult = await doSearchRequest(url, {\n    method: 'POST',\n    headers,\n    body,\n  });\n  if (!firstResult) {\n    return undefined;\n  }\n\n  const totalCount = firstResult.hits.total.value;\n  if (totalCount <= perReqCount) {\n    return firstResult;\n  }\n\n  const requests: Promise<SearchResultJson | undefined>[] = [];\n  for (let from = perReqCount; from < totalCount; from += perReqCount) {\n    requests.push(\n      doSearchRequest(url, {\n        method: 'POST',\n        headers,\n        body: getApiSearchBody(from, perReqCount, query),\n      }),\n    );\n  }\n\n  const results = await Promise.all(requests);\n  if (results.some((res) => !res)) {\n    return undefined;\n  }\n\n  const items = results.map((res) => res?.hits.hits);\n  return {\n    ...firstResult,\n    hits: {\n      ...firstResult.hits,\n      hits: firstResult.hits.hits.concat(...items),\n    },\n  };\n}\n\n/**\n * Search the X Atlas Consortium Search API and return HRA-compatible JSON-LD data\n *\n * @param dataUrl the search API url\n * @param serviceType 'static' if a statically saved response or 'search-api' if querying the search-api live\n * @param query the elastic search query to use\n * @param serviceToken the api key to the search-api\n * @param assetsApi the assets api endpoint (deprecated)\n * @param portalUrl the portal url to point to (deprecated)\n * @returns CCF-compatible JSON-LD data or undefined on error\n */\nexport async function searchXConsortia(\n  dataUrl: string,\n  serviceType: 'static' | 'search-api',\n  query?: unknown,\n  serviceToken?: string,\n  _assetsApi = '',\n  _portalUrl = '',\n): Promise<JsonLd | undefined> {\n  let hubmapData: SearchResultJson | undefined;\n  if (serviceType === 'static') {\n    hubmapData = await doSearchRequest(dataUrl);\n  } else if (serviceType === 'search-api') {\n    hubmapData = await doApiSearch(dataUrl, serviceToken, query);\n  }\n\n  if (hubmapData) {\n    return xConsortiaResponseAsJsonLd(hubmapData, serviceToken);\n  } else {\n    console.warn(`Unable to load ${dataUrl}`);\n    return undefined;\n  }\n}\n","import { JsonLd, JsonLdObj } from 'jsonld/jsonld-spec';\nimport { get, omit, set, toNumber } from 'lodash';\nimport { patchJsonLd } from '../util/patch-jsonld';\n\ntype JsonDict = Record<string, unknown>;\n\ninterface Portal {\n  idPrefix: string;\n  portal: string;\n  portalParams: string;\n  donorName: string;\n  assets: string;\n}\n\nconst HUBMAP: Portal = {\n  idPrefix: 'https://entity.api.hubmapconsortium.org/entities/',\n  portal: 'https://portal.hubmapconsortium.org/browse/',\n  portalParams: '/',\n  donorName: 'donor',\n  assets: 'https://assets.hubmapconsortium.org',\n};\n\nconst SENNET: Portal = {\n  idPrefix: 'https://entity.api.sennetconsortium.org/entities/',\n  portal: 'https://data.sennetconsortium.org/',\n  portalParams: '?uuid=',\n  donorName: 'source',\n  assets: 'https://assets.sennetconsortium.org',\n};\n\n// eslint-disable-next-line max-len\nexport const DR1_VU_THUMBS = new Set([\n  'VAN0003-LK-32-21-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0003-LK-32-21-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0003-LK-32-21-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0003-LK-32-21-PAS_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0005-RK-1-1-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0005-RK-1-1-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-1-1-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-1-1-PAS_registered_thumbnail.jpg',\n  'VAN0005-RK-4-172-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0005-RK-4-172-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-4-172-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-4-172-PAS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-85-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-85-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0006-LK-2-85-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0006-LK-2-85-PAS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0007-LK-203-103-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0007-LK-203-103-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0007-LK-203-103-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0007-LK-203-103-PAS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-100-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-100-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0008-RK-403-100-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0008-RK-403-100-PAS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0009-LK-102-7-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0009-LK-102-7-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0009-LK-102-7-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0009-LK-102-7-PAS_registered_thumbnail.jpg',\n  'VAN0010-LK-155-40-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0010-LK-155-40-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0010-LK-155-40-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0010-LK-155-40-PAS_registered_thumbnail.jpg',\n  'VAN0011-RK-3-10-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0011-RK-3-10-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0011-RK-3-10-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0011-RK-3-10-PAS_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0012-RK-103-75-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0012-RK-103-75-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0012-RK-103-75-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0012-RK-103-75-PAS_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0013-LK-202-96-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0013-LK-202-96-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0013-LK-202-96-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0013-LK-202-96-PAS_registered_thumbnail.jpg',\n  'VAN0013-LK-202-97-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0013-LK-202-97-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0013-LK-202-97-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0013-LK-202-97-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0014-LK-203-108-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0014-LK-203-108-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0014-LK-203-108-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0014-LK-203-108-PAS_registered_thumbnail.jpg',\n  'VAN0016-LK-202-89-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0016-LK-202-89-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0016-LK-202-89-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0016-LK-202-89-PAS_registered_thumbnail.jpg',\n  'VAN0003-LK-32-21-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0003-LK-32-21-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0003-LK-32-21-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0003-LK-32-21-PAS_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0003-LK-32-22-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0005-RK-1-1-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0005-RK-1-1-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-1-1-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-1-1-PAS_registered_thumbnail.jpg',\n  'VAN0005-RK-4-172-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0005-RK-4-172-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-4-172-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0005-RK-4-172-PAS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-85-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-85-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0006-LK-2-85-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0006-LK-2-85-PAS_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0006-LK-2-86-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0007-LK-203-103-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0007-LK-203-103-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0007-LK-203-103-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0007-LK-203-103-PAS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-100-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-100-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0008-RK-403-100-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0008-RK-403-100-PAS_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0008-RK-403-101-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0011-RK-3-10-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0011-RK-3-10-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0011-RK-3-10-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0011-RK-3-10-PAS_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0011-RK-3-11-MxIF_cyc3_registered_thumbnail.jpg',\n  'VAN0012-RK-103-75-AF_preIMS_registered_thumbnail.jpg',\n  'VAN0012-RK-103-75-IMS_NegMode_multilayer_thumbnail.jpg',\n  'VAN0012-RK-103-75-IMS_PosMode_multilayer_thumbnail.jpg',\n  'VAN0012-RK-103-75-PAS_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-AF_preMxIF_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc1_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc2_registered_thumbnail.jpg',\n  'VAN0012-RK-103-76-MxIF_cyc3_registered_thumbnail.jpg',\n]);\n// eslint-disable-next-line max-len\nexport const UFL_THUMBS = {\n  'HBM558.SRZG.629': 'HBM558.SRZG.629_UFL0002-SP-3-4-1.jpg',\n  'HBM562.NTMH.548': 'HBM562.NTMH.548_UFL0006-SP-1-2-1.jpg',\n  'HBM685.KHRQ.684': 'HBM685.KHRQ.684_UFL0008-LY07-1-1.jpg',\n  'HBM278.SFQW.627': 'HBM278.SFQW.627_UFL0008-LY09-1-1.jpg',\n  'HBM427.SMGB.866': 'HBM427.SMGB.866_UFL0004-SP-1-4-1.jpg',\n  'HBM432.LLCF.677': 'HBM432.LLCF.677_UFL0001-SP-2-5-1.jpg',\n  'HBM586.ZSVS.996': 'HBM586.ZSVS.996_UFL0008-SP-1-1-1.jpg',\n  'HBM285.XMBT.542': 'HBM285.XMBT.542_UFL0006-TH-1-3-1.jpg',\n  'HBM289.BWJW.663': 'HBM289.BWJW.663_UFL0006-TH-1-2-1.jpg',\n  'HBM255.SRPR.985': 'HBM255.SRPR.985_UFL0005-TH-2-2-1.jpg',\n  'HBM799.WXHD.535': 'HBM799.WXHD.535_UFL0009-LY02-1-1.jpg',\n  'HBM294.RZFN.624': 'HBM294.RZFN.624_UFL0005-TH-1-1-1.jpg',\n  'HBM383.TRQG.424': 'HBM383.TRQG.424_UFL0006-SP-1-3-1.jpg',\n  'HBM647.MFQB.496': 'HBM647.MFQB.496_UFL0001-SP-1-2-1.jpg',\n  'HBM237.GGPR.739': 'HBM237.GGPR.739_UFL0006-LY01-1-1.jpg',\n  'HBM288.TPBD.654': 'HBM288.TPBD.654_UFL0003-SP-2-2-1.jpg',\n  'HBM974.NDXT.675': 'HBM974.NDXT.675_UFL0008-TH-2-2-1.jpg',\n  'HBM589.SLVV.423': 'HBM589.SLVV.423_UFL0008-LY10-1-1.jpg',\n  'HBM794.RLFN.358': 'HBM794.RLFN.358_UFL0006-LY03-1-1.jpg',\n  'HBM372.BQSR.778': 'HBM372.BQSR.778_UFL0007-SP-1-1-1.jpg',\n  'HBM499.TKDW.458': 'HBM499.TKDW.458_UFL0009-LY03-1-1.jpg',\n  'HBM342.PRQB.739': 'HBM342.PRQB.739_UFL0003-LY06-1-1.jpg',\n  'HBM633.CLVN.674': 'HBM633.CLVN.674_UFL0003-SP-3-6-1.jpg',\n  'HBM343.JQKM.578': 'HBM343.JQKM.578_UFL0009-LY01-1-1.jpg',\n  'HBM987.XGTH.368': 'HBM987.XGTH.368_UFL0002-SP-2-4-1.jpg',\n  'HBM964.CWCP.788': 'HBM964.CWCP.788_UFL0006-LY02-2-1.jpg',\n  'HBM244.TJLK.223': 'HBM244.TJLK.223_UFL0003-SP-1-4-1.jpg',\n  'HBM646.FSBQ.966': 'HBM646.FSBQ.966_UFL0007-SP-2-2-1.jpg',\n  'HBM572.GXSB.234': 'HBM572.GXSB.234_UFL0003-SP-3-2-1.jpg',\n  'HBM772.TKGJ.794': 'HBM772.TKGJ.794_UFL0008-SP-2-1-1.jpg',\n  'HBM239.CBWR.263': 'HBM239.CBWR.263_UFL0008-SP-1-2-1.jpg',\n  'HBM992.NRTT.383': 'HBM992.NRTT.383_UFL0006-SP-1-1-1.jpg',\n  'HBM283.DQXD.546': 'HBM283.DQXD.546_UFL0003-SP-1-2-1.jpg',\n  'HBM795.JHND.856': 'HBM795.JHND.856_UFL0007-SP-1-2-1.jpg',\n  'HBM267.BZKT.867': 'HBM267.BZKT.867_UFL0003-SP-2-6-1.jpg',\n  'HBM838.DLMJ.782': 'HBM838.DLMJ.782_UFL0008-TH-1-1-1.jpg',\n  'HBM337.FSXL.564': 'HBM337.FSXL.564_UFL0001-SP-3-8-2.jpg',\n  'HBM355.JDLK.244': 'HBM355.JDLK.244_UFL0004-SP-2-4-1.jpg',\n  'HBM599.PSZG.737': 'HBM599.PSZG.737_UFL0006-LY02-1-1.jpg',\n};\n\n/** UUID to TMC mapping. */\nconst GROUP_UUID_MAPPING: { [uuid: string]: string } = {\n  '03b3d854-ed44-11e8-8bce-0e368f3075e8': 'TMC-UCSD',\n  '07a29e4c-ed43-11e8-b56a-0e8017bdda58': 'TMC-Florida',\n  '308f5ffc-ed43-11e8-b56a-0e8017bdda58': 'TMC-CalTech',\n  '5bd084c8-edc2-11e8-802f-0e368f3075e8': 'HBM-TestingGroup',\n  '73bb26e4-ed43-11e8-8f19-0a7c1eab007a': 'TMC-Vanderbilt',\n  'def5fd76-ed43-11e8-b56a-0e8017bdda58': 'TMC-Stanford',\n  '5c106f29-ea2d-11e9-85e8-0efb3ba9a670': 'RTI-General Electric',\n  '301615f9-c870-11eb-a8dc-35ce3d8786fe': 'TMC-UConn',\n};\n\nconst ENTITY_CONTEXT = 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld';\n\n/**\n * Converts a hubmap response object into JsonLd.\n *\n * @param data The hubmap data.\n * @returns The converted data.\n */\nexport function xConsortiaResponseAsJsonLd(data: unknown, serviceToken?: string, debug = false): JsonLd {\n  const entries = (get(data, 'hits.hits', []) as JsonDict[])\n    .map((e) => get(e, '_source', {}) as JsonDict)\n    .sort((a, b) => (a['uuid'] as string).localeCompare(b['uuid'] as string));\n\n  const donorLookup: Record<string, JsonLdObj> = {};\n  const unflattened: JsonLdObj[] = entries.map((e) => new HuBMAPTissueBlock(e, serviceToken).toJsonLd());\n  for (const donor of unflattened) {\n    const donorId = donor['@id'] as string;\n    if (!donorLookup[donorId]) {\n      donorLookup[donorId] = donor;\n    } else {\n      const samples = donorLookup[donorId]['samples'] as JsonLdObj[];\n      samples.push((donor['samples'] as JsonLdObj[])[0]);\n    }\n  }\n  const donors = Object.values(donorLookup);\n\n  if (debug) {\n    debugDonors(donors);\n    console.log(donors.map((d) => ({ '@context': ENTITY_CONTEXT, ...d })));\n  }\n\n  return patchJsonLd(JSON.stringify({ '@context': ENTITY_CONTEXT, '@graph': donors }), ENTITY_CONTEXT);\n}\n\nfunction debugDonors(donors: JsonLdObj[]) {\n  let datasets: JsonLdObj[] = [];\n  let deleted = 0;\n  for (const donor of donors.filter((d) => (d['samples'] as []).length > 1)) {\n    const samples = donor['samples'] as JsonLdObj[];\n    for (let i = 0; i < samples.length; i++) {\n      const blockId = samples[i]['@id'] as string;\n      datasets = datasets.concat(samples[i]['datasets'] as JsonLdObj[]);\n      for (const section of samples[i]['sections'] as JsonLdObj[]) {\n        datasets = datasets.concat(section['datasets'] as JsonLdObj[]);\n      }\n      for (let j = i + 1; j < samples.length; j++) {\n        const sections = samples[j]['sections'] as JsonLdObj[];\n        if (sections.find((s) => s['@id'] === blockId)) {\n          samples[i]['deleteMe'] = true;\n          deleted++;\n        }\n      }\n    }\n    donor['samples'] = samples.filter((s) => s['deleteMe'] !== true);\n  }\n  if (deleted > 0) {\n    console.log(`⚠ ${deleted} sections identified as blocks`);\n  }\n}\n\nexport class HuBMAPTissueBlock {\n  bad = false;\n  donor!: JsonLdObj;\n\n  '@id': string;\n  '@type' = 'Sample';\n  label!: string;\n  description!: string;\n  link!: string;\n\n  sample_type = 'Tissue Block';\n  section_count!: number;\n  section_size!: number;\n  section_units!: string;\n\n  rui_location!: JsonLdObj;\n  sections!: JsonLdObj[];\n  datasets!: JsonLdObj[];\n\n  portal!: Portal;\n\n  constructor(\n    public data: JsonDict,\n    serviceToken?: string,\n  ) {\n    const entityType = this.data['entity_type'];\n    if (entityType !== 'Sample') {\n      this.bad = true;\n      return;\n    }\n    if (data['sennet_id']) {\n      this.portal = SENNET;\n    } else if (data['hubmap_id']) {\n      this.portal = HUBMAP;\n    } else {\n      this.bad = true;\n      return;\n    }\n\n    const descendants = (this.data['descendants'] || []) as JsonDict[];\n    const donor = (this.data['donor'] ?? this.data['source']) as JsonDict;\n    this.donor = this.getDonor(donor);\n    const ruiLocation = this.getRuiLocation(data, this.donor);\n    if (!ruiLocation) {\n      this.bad = true;\n    } else {\n      this.rui_location = ruiLocation;\n    }\n\n    if (!GROUP_UUID_MAPPING[data['group_uuid'] as string]) {\n      GROUP_UUID_MAPPING[data['group_uuid'] as string] = data['group_name'] as string;\n    }\n\n    const dateEntered = new Date(data['last_modified_timestamp'] as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[data['group_uuid'] as string] || (data['group_name'] as string);\n    const creator = data['created_by_user_displayname'];\n\n    this['@id'] = this.portal.idPrefix + data['uuid'];\n    this.label = `Registered ${dateEntered}, ${creator}, ${groupName}`;\n    this.link = `${this.portal.portal}sample${this.portal.portalParams}${data['uuid']}`;\n\n    const sectionLookup: Record<string, JsonLdObj> = {};\n    const sections: JsonLdObj[] = [];\n    this.sections = sections;\n    const datasets: JsonLdObj[] = [];\n    this.datasets = datasets;\n\n    for (const descendant of descendants.filter((d) => d['entity_type'] === 'Sample')) {\n      const section = this.getSection(descendant, data);\n\n      const sectionId = descendant['submission_id'] as string;\n      sectionLookup[sectionId] = section;\n      sections.push(section);\n      section['section_number'] = section['section_number'] ?? sections.length;\n    }\n    for (const descendant of descendants) {\n      if (descendant['entity_type'] === 'Dataset') {\n        const dataset = this.getDataset(descendant, serviceToken);\n\n        const sectionId = get(descendant, ['ingest_metadata', 'metadata', 'tissue_id']) as string;\n        if (sectionLookup[sectionId]) {\n          (sectionLookup[sectionId]['datasets'] as JsonLd[])?.push(dataset);\n        } else {\n          datasets.push(dataset);\n        }\n      }\n    }\n\n    const loc: JsonDict = ruiLocation ?? {};\n    const dims = `${loc['x_dimension']} x ${loc['y_dimension']} x ${loc['z_dimension']} ${loc['dimension_units']}`;\n    this.section_count = (loc['slice_count'] as number) || sections.length;\n    const sSize = parseFloat(\n      (\n        (loc['slice_thickness'] as number) || ((loc['z_dimension'] as number) || 0) / Math.max(this.section_count, 1)\n      ).toFixed(1),\n    );\n    this.section_size = sSize;\n    const sUnits = (loc['dimension_units'] as string) || 'millimeter';\n    this.section_units = sUnits;\n\n    this.description = `${dims}, ${sSize} ${sUnits}, ${this.section_count} Sections`;\n\n    sections.forEach((section, index) => {\n      section['description'] =\n        `${loc['x_dimension']} x ${loc['y_dimension']} x ${sSize} ${sUnits}, ${sSize} ${sUnits}, ${section['description']}`;\n      section['section_number'] = index + 1;\n    });\n  }\n\n  getSection(section: JsonDict, data: JsonDict): JsonLdObj {\n    const dateEntered = new Date(section['last_modified_timestamp'] as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[section['group_uuid'] as string] || (section['group_name'] as string);\n    const creator = section['created_by_user_displayname'];\n\n    return {\n      '@id': this.portal.idPrefix + section['uuid'],\n      '@type': 'Sample',\n      label: `Registered ${dateEntered}, ${creator}, ${groupName}`,\n      description: `${data['sample_category']}`,\n      link: `${this.portal.portal}sample${this.portal.portalParams}${section['uuid']}`,\n\n      sample_type: 'Tissue Section',\n      section_number: 1,\n\n      samples: [],\n      datasets: [],\n    };\n  }\n\n  getDataset(dataset: JsonDict, serviceToken?: string): JsonLdObj {\n    const dateEntered = new Date(dataset['last_modified_timestamp'] as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[dataset['group_uuid'] as string] || (dataset['group_name'] as string);\n    const creator = dataset['created_by_user_displayname'];\n\n    const types = (dataset['dataset_type'] ?? '') as string;\n    const typesSearch = types.toLowerCase();\n\n    let technology: string;\n    let thumbnail = 'assets/icons/ico-unknown.svg';\n    if (typesSearch.indexOf('10x') !== -1) {\n      technology = '10x';\n      thumbnail = 'assets/icons/ico-bulk-10x.svg';\n    } else if (typesSearch.indexOf('af') !== -1 || typesSearch.indexOf('auto-fluorescence') !== -1) {\n      technology = 'AF';\n      thumbnail = 'assets/icons/ico-spatial-af.svg';\n    } else if (typesSearch.indexOf('codex') !== -1) {\n      technology = 'CODEX';\n      thumbnail = 'assets/icons/ico-spatial-codex.svg';\n    } else if (typesSearch.indexOf('imc') !== -1 || typesSearch.indexOf('imaging mass cytometry') !== -1) {\n      technology = 'IMC';\n      thumbnail = 'assets/icons/ico-spatial-imc.svg';\n    } else if (typesSearch.indexOf('lc') !== -1 && typesSearch.indexOf('af') === -1) {\n      technology = 'LC';\n      thumbnail = 'assets/icons/ico-bulk-lc.svg';\n    } else if (typesSearch.indexOf('maldi') !== -1) {\n      technology = 'MALDI';\n    } else if (typesSearch.indexOf('pas') !== -1) {\n      technology = 'PAS';\n    } else {\n      technology = types.split(/ \\[/)[0];\n    }\n    thumbnail = this.getDatasetThumbnail(dataset, serviceToken) ?? thumbnail;\n\n    return {\n      '@id': this.portal.idPrefix + dataset['uuid'],\n      '@type': 'Dataset',\n      label: `Registered ${dateEntered}, ${creator}, ${groupName}`,\n      description: `Dataset Type: ${types}`,\n      link: `${this.portal.portal}dataset${this.portal.portalParams}${dataset['uuid']}`,\n      technology,\n      thumbnail,\n    };\n  }\n\n  getDatasetThumbnail(dataset: JsonDict, serviceToken?: string): string | undefined {\n    if (dataset['thumbnail_file']) {\n      const thumbnailFile = dataset['thumbnail_file'] as JsonDict;\n      return (\n        `${this.portal.assets}/${thumbnailFile['file_uuid']}/${thumbnailFile['filename']}` +\n        (serviceToken ? `?token=${serviceToken}` : '')\n      );\n    } else if (dataset['group_uuid'] === '73bb26e4-ed43-11e8-8f19-0a7c1eab007a') {\n      // TMC-Vanderbilt\n      const tiffs = (get(dataset, 'metadata.files', []) as { rel_path: string }[])\n        .filter((f) => /\\.(ome\\.tif|ome\\.tiff)$/.test(f.rel_path))\n        .filter((f) => !/(multilayer\\.ome\\.tif|_ac\\.ome\\.tif)/.test(f.rel_path))\n        .filter((f) =>\n          DR1_VU_THUMBS.has(f.rel_path.split('/').slice(-1)[0].split('?')[0].replace('.ome.tif', '_thumbnail.jpg')),\n        )\n        .map(\n          (f) =>\n            `${this.portal.assets}/${dataset['uuid']}/${f.rel_path}` + (serviceToken ? `?token=${serviceToken}` : ''),\n        );\n\n      if (tiffs.length > 0) {\n        const thumb = tiffs[0].split('/').slice(-1)[0].split('?')[0].replace('.ome.tif', '_thumbnail.jpg');\n        if (DR1_VU_THUMBS.has(thumb)) {\n          return `assets/thumbnails/TMC-Vanderbilt/DR1/${thumb}`;\n        }\n      }\n    } else if (dataset['group_uuid'] === '07a29e4c-ed43-11e8-b56a-0e8017bdda58') {\n      // TMC-Florida\n      const thumb = UFL_THUMBS[dataset['hubmap_id'] as keyof typeof UFL_THUMBS];\n      if (thumb) {\n        return `assets/thumbnails/TMC-Florida/${thumb}`;\n      }\n    }\n    return undefined;\n  }\n\n  getDonor(donor: JsonDict): JsonLdObj {\n    const donorDescription = ((donor['description'] as string) || '').toLowerCase();\n    let sex: 'Male' | 'Female' | undefined;\n    if (donorDescription.includes('female')) {\n      sex = 'Female';\n    } else if (donorDescription.includes('male')) {\n      sex = 'Male';\n    }\n    const ageMatch = donorDescription.match(/age ([0-9]+)/) ?? donorDescription.match(/ ([0-9]+) years/);\n    let age: number | undefined;\n    if (ageMatch) {\n      age = toNumber(ageMatch[1]);\n    }\n    let bmi: number | undefined;\n    let race: string | undefined;\n    const metadata = get(donor, 'mapped_metadata', get(donor, 'source_mapped_metadata', {})) as Record<\n      string,\n      unknown[]\n    >;\n    if (!sex && metadata['sex']?.length > 0) {\n      sex = metadata['sex'][0] as 'Male' | 'Female' | undefined;\n    }\n    if (!race && metadata['race']?.length > 0) {\n      race = metadata['race'][0] as string;\n    }\n    if (!age && metadata['age_value']?.length > 0) {\n      age = metadata['age_value'][0] as number | undefined;\n    }\n    if (!bmi && metadata['body_mass_index_value']?.length > 0) {\n      bmi = metadata['body_mass_index_value'][0] as number | undefined;\n    }\n    for (const md of get(\n      donor,\n      'metadata.organ_donor_data',\n      get(donor, 'metadata.living_donor_data', []),\n    ) as JsonDict[]) {\n      if (md['preferred_term'] === 'Feminine gender' || md['preferred_term'] === 'Female') {\n        sex = 'Female';\n      } else if (md['preferred_term'] === 'Masculine gender' || md['preferred_term'] === 'Male') {\n        sex = 'Male';\n      } else if (md['preferred_term'] === 'Current chronological age' || md['preferred_term'] === 'Age') {\n        age = toNumber(md['data_value']);\n      } else if (md['preferred_term'] === 'Body mass index') {\n        bmi = toNumber(md['data_value']);\n      } else if (md['grouping_concept_preferred_term'] === 'Race') {\n        race = md['preferred_term'] as string;\n      }\n    }\n    let label = '';\n    if (sex && age) {\n      label += `${sex}, Age ${age}`;\n      if (bmi) {\n        label += `, BMI ${bmi.toFixed(1)}`;\n      }\n    } else if (sex) {\n      label = sex;\n    }\n\n    const dateEntered = new Date(donor['last_modified_timestamp'] as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[donor['group_uuid'] as string] || (donor['group_name'] as string);\n    const creator = donor['created_by_user_displayname'];\n\n    return {\n      '@id': this.portal.idPrefix + donor['uuid'],\n      '@type': 'Donor',\n      label,\n      description: `Entered ${dateEntered}, ${creator}, ${groupName}`,\n      link: `${this.portal.portal}${this.portal.donorName}${this.portal.portalParams}${donor['uuid']}`,\n\n      age,\n      sex,\n      bmi,\n      race,\n\n      consortium_name: this.portal === HUBMAP ? 'HuBMAP' : 'SenNet',\n      provider_name: groupName,\n      provider_uuid: donor['group_uuid'] as string,\n\n      samples: [],\n    };\n  }\n\n  getRuiLocation(data: JsonDict, donor: JsonLdObj): JsonLdObj | undefined {\n    let spatialEntity: JsonLdObj | undefined;\n    let ruiLocation = data['rui_location'] as JsonDict;\n    if (ruiLocation) {\n      // RUI Location may come in as an unparsed string\n      if (typeof ruiLocation === 'string') {\n        ruiLocation = JSON.parse(ruiLocation as string) as JsonDict;\n      }\n      if (ruiLocation['alignment_id']) {\n        // Detect RUI 0.5 generated JSON\n        console.log('Detected a deprecated rui_location', data['uuid']);\n      } else if ((ruiLocation as unknown as { '@id': string })['@id']) {\n        // Detect RUI 1.0+ generated JSON-LD\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        spatialEntity = ruiLocation as unknown as JsonLdObj;\n      }\n      ruiLocation['@context'] = 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld';\n    }\n    if (spatialEntity) {\n      // Patch to fix RUI 0.5 Kidney and Spleen Placements\n      const target: string = get(spatialEntity, ['placement', 'target']) ?? '';\n      if (target.startsWith('http://purl.org/ccf/latest/ccf.owl#VHSpleenCC')) {\n        if (donor['sex'] === 'Male') {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VHSpleenCC', '#VHMSpleenCC'));\n        } else {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VHSpleenCC', '#VHFSpleenCC'));\n        }\n      } else if (\n        target === 'http://purl.org/ccf/latest/ccf.owl#VHLeftKidney' ||\n        target === 'http://purl.org/ccf/latest/ccf.owl#VHRightKidney'\n      ) {\n        if (donor['sex'] === 'Male') {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VH', '#VHM') + '_Patch');\n        } else {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VH', '#VHF') + '_Patch');\n        }\n      }\n    }\n    return spatialEntity;\n  }\n\n  getTissueBlock(): JsonLdObj {\n    return omit({ ...this }, ['data', 'bad', 'donor', 'portal']) as unknown as JsonLdObj;\n  }\n\n  toJsonLd(): JsonLdObj {\n    return { ...this.donor, samples: [this.getTissueBlock()] };\n  }\n}\n","/*\n * Public API Surface of ccf\n */\nexport * from './lib/ccf-database';\nexport * from './lib/ccf-spatial-scene';\nexport * from './lib/interfaces';\nexport * from './lib/spatial-types';\nexport * from './lib/xconsortia/xconsortia-data-import';\nexport * from './lib/util/ccf-database-status-tracker';\nexport * from './lib/util/probing-sphere-scene';\nexport * from './lib/util/tissue-block-scene';\nexport * from './lib/util/origin-scene';\n","import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\nconst EAGERLY_LOADED_SERVICES = [ConsentService, GoogleAnalyticsSyncService, LocalStorageSyncService];\n\nfunction toAttributes(obj: Record<string, unknown>): Record<string, string> {\n  return Object.entries(obj).reduce<Record<string, string>>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [\n        toAttributes({\n          appName,\n          projectName,\n          developmentMode,\n        }),\n      ],\n    },\n  ];\n}\n\n@NgModule({\n  imports: [NgxGoogleAnalyticsModule],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES,\n    },\n  ],\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders<AnalyticsModule> {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(options.gaToken, initCommands(options));\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\nexport type Consent = 'not-set' | 'given' | 'rescinded';\n\n@Injectable()\nexport class ConsentService implements OnDestroy {\n  consent: Consent = 'not-set';\n\n  readonly consentChange = new ReplaySubject<Consent>(1);\n\n  constructor() {\n    this.consentChange.next(this.consent);\n  }\n\n  ngOnDestroy(): void {\n    this.consentChange.complete();\n  }\n\n  setConsent(value: Consent): void {\n    if (this.consent !== value) {\n      this.consent = value;\n      this.consentChange.next(value);\n    }\n  }\n\n  unsetConsent(): void {\n    this.setConsent('not-set');\n  }\n}\n","import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { IGoogleAnalyticsSettings, NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN, NGX_WINDOW } from 'ngx-google-analytics';\nimport { Subscription } from 'rxjs';\n\nimport { ConsentService } from './consent.service';\n\n@Injectable()\nexport class GoogleAnalyticsSyncService implements OnDestroy {\n  private readonly token: string;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(NGX_WINDOW) private readonly window: Record<string, boolean> | null,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN)\n    { trackingCode }: IGoogleAnalyticsSettings,\n  ) {\n    this.token = trackingCode;\n\n    this.subscriptions.add(\n      consentService.consentChange.subscribe((consent) => this.toggleGoogleAnalytics(consent === 'rescinded')),\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private toggleGoogleAnalytics(disabled: boolean): void {\n    if (this.window) {\n      this.window[`ga-disable-${this.token}`] = disabled;\n    }\n  }\n}\n","import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Consent, ConsentService } from './consent.service';\n\nexport const LOCAL_STORAGE_CONSENT_KEY = new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY',\n});\n\n@Injectable()\nexport class LocalStorageSyncService implements OnDestroy {\n  private readonly storage?: typeof localStorage;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(LOCAL_STORAGE_CONSENT_KEY) private readonly key: string,\n  ) {\n    try {\n      this.storage = localStorage;\n    } catch (_error) {\n      /* Ignored */\n    }\n\n    consentService.setConsent(this.loadConsent());\n    this.subscriptions.add(consentService.consentChange.subscribe((consent) => this.saveConsent(consent)));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private loadConsent(): Consent {\n    const rawValue = this.storage?.getItem?.(this.key);\n    if (rawValue == null) {\n      return 'not-set';\n    }\n\n    const value = rawValue.trim().toLowerCase();\n    switch (value) {\n      case 'given': /* fallthrough */\n      case 'rescinded':\n        return value;\n      default:\n        return 'not-set';\n    }\n  }\n\n  private saveConsent(value: Consent): void {\n    this.storage?.setItem?.(this.key, value);\n  }\n}\n","export * from './lib/consent.service';\nexport * from './lib/analytics.module';\n","import { OperatorFunction } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * Removes all `null` and `undefined` values from a stream.\n *\n * @returns An `Observable` operator\n */\nexport function filterNulls<T>(): OperatorFunction<T | null | undefined, T> {\n  return filter((value): value is T => value != null);\n}\n","import { OperatorFunction } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Flattens a single level of nested arrays.\n *\n * @returns An `Observable` operator\n */\nexport function flatten<T>(): OperatorFunction<readonly (readonly T[])[], T[]> {\n  return map((array) => ([] as T[]).concat(...array));\n}\n","import { OperatorFunction } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Maps the values of each emitted array.\n *\n * @param project Mapping callback invoked for each element\n * @returns An `Observable` operator\n */\nexport function innerMap<T, R>(\n  project: (value: T, index: number, outerIndex: number) => R,\n): OperatorFunction<readonly T[], R[]> {\n  return map((array, outerIndex) => array.map((value, index) => project(value, index, outerIndex)));\n}\n","/* eslint-disable max-len */\nimport { OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n/**\n * Options for `pluckUnique` operator\n */\nexport interface PluckUniqueOptions<T> {\n  /**\n   * Custom comparison for determining distinct values\n   */\n  compare?: (lhs: T, rhs: T) => boolean;\n}\n\n/**\n * Default options\n */\nconst DEFAULT_OPTIONS: PluckUniqueOptions<unknown> = {};\n\n/**\n * Combines the functionaliy of `pluck` and `distinctUntilChanged`\n * as well as adding a `shareReplay`.\n *\n * @param {...string} props Properties to pluck\n * @param [opts] Additional options\n * @returns An `Observable` operator\n */\nexport function pluckUnique<T, K1 extends keyof T>(\n  k1: K1,\n  opts?: PluckUniqueOptions<T[K1]>,\n): OperatorFunction<T, T[K1]>;\nexport function pluckUnique<T, K1 extends keyof T, K2 extends keyof T[K1]>(\n  k1: K1,\n  k2: K2,\n  opts?: PluckUniqueOptions<T[K1][K2]>,\n): OperatorFunction<T, T[K1][K2]>;\nexport function pluckUnique<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  opts?: PluckUniqueOptions<T[K1][K2][K3]>,\n): OperatorFunction<T, T[K1][K2][K3]>;\nexport function pluckUnique<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n>(k1: K1, k2: K2, k3: K3, k4: K4, opts?: PluckUniqueOptions<T[K1][K2][K3][K4]>): OperatorFunction<T, T[K1][K2][K3][K4]>;\nexport function pluckUnique<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4,\n  k5: K5,\n  opts?: PluckUniqueOptions<T[K1][K2][K3][K4][K5]>,\n): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\nexport function pluckUnique<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5],\n>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4,\n  k5: K5,\n  k6: K6,\n  opts?: PluckUniqueOptions<T[K1][K2][K3][K4][K5][K6]>,\n): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\nexport function pluckUnique<T, R>(...props: [string, ...string[]]): OperatorFunction<T, R>;\nexport function pluckUnique<T, R>(...props: [string, ...string[], PluckUniqueOptions<R>]): OperatorFunction<T, R>;\nexport function pluckUnique(...props: unknown[]): OperatorFunction<unknown, unknown> {\n  const last = props[props.length - 1];\n  let keys = props as string[];\n  let opts = DEFAULT_OPTIONS;\n\n  if (typeof last === 'object') {\n    opts = last as PluckUniqueOptions<unknown>;\n    keys = keys.slice(0, -1);\n  }\n\n  return (source) => source.pipe(pluck(...keys), distinctUntilChanged(opts.compare), shareReplay(1));\n}\n","export * from './lib/filter-nulls';\nexport * from './lib/flatten';\nexport * from './lib/inner-map';\nexport * from './lib/pluck-unique';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent<MouseEvent>(el, 'mousemove').pipe(throttleTime(1000), map(formatData));\n\n  return events.subscribe((data) => ga.event('webpage', 'mousemove', data));\n}\n\n@NgModule()\nexport class MousePositionTrackerModule {\n  constructor(\n    // NOTE: Angular compiler fails when document is typed properly?!\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    @Inject(DOCUMENT) document: any,\n    ga: GoogleAnalyticsService,\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n    }\n  }\n}\n","import { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State<TrackingStateModel>({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING,\n  },\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository<TrackingStateModel> {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { BodyUI, NodeClickEvent, NodeDragEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { Subscription } from 'rxjs';\n\ninterface XYZTriplet<T = number> {\n  x: T;\n  y: T;\n  z: T;\n}\n\n/**\n * Component that handles displaying the 3D models in the stage\n */\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BodyUiComponent implements AfterViewInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-body-ui';\n\n  @Input()\n  get scene(): SpatialSceneNode[] {\n    return this._scene;\n  }\n\n  set scene(nodes: SpatialSceneNode[]) {\n    this._scene = nodes;\n    this.bodyUI?.setScene(nodes);\n  }\n\n  @Input()\n  get rotation(): number {\n    return this._rotation;\n  }\n\n  set rotation(value: number) {\n    this._rotation = value;\n    this.bodyUI?.setRotation(value);\n  }\n\n  @Input()\n  get rotationX(): number {\n    return this._rotationX;\n  }\n\n  set rotationX(value: number) {\n    this._rotationX = value;\n    this.bodyUI?.setRotationX(value);\n  }\n\n  @Input()\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  set zoom(value: number) {\n    this._zoom = value;\n    this.bodyUI?.setZoom(value);\n  }\n\n  @Input()\n  get target(): [number, number, number] {\n    return this._target;\n  }\n\n  set target(value: [number, number, number]) {\n    this._target = value;\n    this.bodyUI?.setTarget(value);\n  }\n\n  @Input()\n  get bounds(): XYZTriplet {\n    return this._bounds;\n  }\n\n  set bounds(value: XYZTriplet) {\n    this._bounds = value;\n    this.zoomToBounds(value);\n  }\n\n  @Input()\n  get camera(): string {\n    return this._camera;\n  }\n\n  set camera(value: string) {\n    this._camera = value;\n  }\n\n  @Output()\n  readonly rotationChange = new EventEmitter<[number, number]>();\n\n  @Output()\n  readonly nodeDrag = new EventEmitter<NodeDragEvent>();\n\n  @Output()\n  readonly nodeClick = new EventEmitter<NodeClickEvent>();\n\n  @Output()\n  readonly nodeHoverStart = new EventEmitter<SpatialSceneNode>();\n\n  @Output()\n  readonly nodeHoverStop = new EventEmitter<SpatialSceneNode>();\n\n  @Output()\n  readonly initialized = new EventEmitter<void>();\n\n  @Input()\n  get interactive(): boolean {\n    return this._interactive;\n  }\n\n  set interactive(value: boolean) {\n    this._interactive = value;\n    if (this.bodyUI) {\n      this.recreateBodyUI();\n    }\n  }\n\n  private _interactive = true;\n  private _rotation = 0;\n  private _rotationX = 0;\n  private _zoom = 9.5;\n  private _target: [number, number, number] = [0, 0, 0];\n  private _bounds!: XYZTriplet;\n  private _scene: SpatialSceneNode[] = [];\n  private subscriptions: Subscription[] = [];\n  private _camera!: string;\n\n  /**\n   * Instance of the body UI class for rendering the deckGL scene\n   */\n  bodyUI!: BodyUI;\n\n  /**\n   * Reference to the div we are using to mount the body UI to.\n   */\n  @ViewChild('bodyCanvas', { read: ElementRef })\n  bodyCanvas!: ElementRef<HTMLCanvasElement>;\n\n  /**\n   * Performs setup required after initialization\n   */\n  ngAfterViewInit(): void {\n    this.setupBodyUI();\n  }\n\n  zoomToBounds(bounds: XYZTriplet, margin = { x: 48, y: 48 }): void {\n    if (this.bodyCanvas) {\n      const { width, height } = this.bodyCanvas.nativeElement;\n      const pxRatio = window.devicePixelRatio;\n      const zoom = Math.min(\n        Math.log2((width - margin.x) / pxRatio / bounds.x),\n        Math.log2((height - margin.y) / pxRatio / bounds.y),\n      );\n      this.zoom = zoom;\n    }\n  }\n\n  /**\n   * Set up required to render the body UI with the scene nodes.\n   */\n  private async setupBodyUI(): Promise<void> {\n    const canvas = this.bodyCanvas.nativeElement;\n    const bodyUI = new BodyUI({\n      id: 'body-ui',\n      canvas,\n      zoom: this.zoom,\n      target: [0, 0, 0],\n      rotation: 0,\n      minRotationX: -75,\n      maxRotationX: 75,\n      interactive: this.interactive,\n      camera: this.camera,\n    });\n    canvas.addEventListener('contextmenu', (evt) => evt.preventDefault());\n    await bodyUI.initialize();\n    this.bodyUI = bodyUI;\n    (window as unknown as { bodyUI: unknown }).bodyUI = bodyUI;\n    if (this.scene?.length > 0) {\n      this.bodyUI.setScene(this.scene);\n    }\n    if (this.bounds) {\n      this.zoomToBounds(this.bounds);\n    }\n    if (this.target) {\n      this.bodyUI.setTarget(this.target);\n    }\n    this.subscriptions = [\n      this.bodyUI.sceneRotation$.subscribe((rotation) => this.rotationChange.next(rotation)),\n      this.bodyUI.nodeDrag$.subscribe((event) => this.nodeDrag.emit(event)),\n      this.bodyUI.nodeClick$.subscribe((event) => this.nodeClick.emit(event)),\n      this.bodyUI.nodeHoverStart$.subscribe((event) => this.nodeHoverStart.emit(event)),\n      this.bodyUI.nodeHoverStop$.subscribe((event) => this.nodeHoverStop.emit(event)),\n    ];\n    this.initialized.emit();\n  }\n\n  private recreateBodyUI(): void {\n    this.clearSubscriptions();\n    this.bodyUI.finalize();\n    this.setupBodyUI();\n  }\n\n  private clearSubscriptions(): void {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  ngOnDestroy(): void {\n    this.clearSubscriptions();\n  }\n}\n","<canvas #bodyCanvas class=\"body-ui\"></canvas>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [CommonModule],\n  exports: [BodyUiComponent],\n})\nexport class BodyUiModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs/internal/Observable';\n\nimport { CloseDialog, LearnMore } from '../../states/call-to-action/call-to-action.actions';\nimport { CallToActionSelectors } from '../../states/call-to-action/call-to-action.selectors';\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-call-to-action-behavior',\n  templateUrl: './call-to-action-behavior.component.html',\n  styleUrls: ['./call-to-action-behavior.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CallToActionBehaviorComponent {\n  @Select(CallToActionSelectors.title)\n  readonly title$!: Observable<string>;\n\n  @Select(CallToActionSelectors.message)\n  readonly message$!: Observable<string>;\n\n  @Select(CallToActionSelectors.callToAction)\n  readonly callToAction$!: Observable<string>;\n\n  @Select(CallToActionSelectors.imageUrl)\n  readonly imageUrl$!: Observable<string>;\n\n  /**\n   * Closes dialog\n   */\n  @Dispatch()\n  readonly close = (): CloseDialog => new CloseDialog();\n\n  /**\n   * Sends learn more open action\n   * @returns LearnMore action\n   */\n  @Dispatch()\n  readonly learnMore = (): LearnMore => new LearnMore();\n}\n","<ccf-call-to-action\n  [infoTitle]=\"(title$ | async) ?? ''\"\n  [message]=\"(message$ | async) ?? ''\"\n  [callToAction]=\"(callToAction$ | async) ?? ''\"\n  [imageUrl]=\"(imageUrl$ | async) ?? ''\"\n  (callToActionClicked)=\"learnMore()\"\n  (closeClicked)=\"close()\"\n>\n</ccf-call-to-action>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { CallToActionModule } from '../call-to-action/call-to-action.module';\nimport { CallToActionBehaviorComponent } from './call-to-action-behavior.component';\n\n@NgModule({\n  declarations: [CallToActionBehaviorComponent],\n  imports: [CommonModule, NgxsModule, MatIconModule, MatDialogModule, MatCardModule, CallToActionModule],\n  exports: [CallToActionBehaviorComponent],\n})\nexport class CallToActionBehaviorModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-call-to-action',\n  templateUrl: './call-to-action.component.html',\n  styleUrls: ['./call-to-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CallToActionComponent {\n  /**HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-call-to-action';\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle!: string;\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() imageUrl!: string;\n\n  /**\n   * Message to be displayed under image\n   */\n  @Input() message!: string;\n\n  /**\n   * Label for the button\n   */\n  @Input() callToAction!: string;\n\n  /**\n   *  Emmitter for component to pass info to parent\n   * */\n  @Output() readonly callToActionClicked = new EventEmitter<void>();\n\n  /**\n   *  Emmitter for component to pass info to parent\n   * */\n  @Output() readonly closeClicked = new EventEmitter<void>();\n\n  /**\n   * Function to handle the close button click action\n   */\n  close(): void {\n    this.closeClicked.emit();\n  }\n\n  /**\n   * Detects button click and reads markdown function\n   */\n  onDialogButtonClick(): void {\n    this.callToActionClicked.emit();\n  }\n}\n","<div class=\"rui-about wrapper\">\n  <div class=\"container\">\n    <div class=\"content\">\n      <div class=\"first-row\">\n        <p class=\"title\" mat-dialog-title>{{ infoTitle }}</p>\n        <mat-icon class=\"cta-mat-icon material-icons close-icon\" (click)=\"close()\">clear</mat-icon>\n      </div>\n      <img class=\"cta-image\" mat-card-sm-image [src]=\"imageUrl\" alt=\"preview\" layout-fill />\n\n      <mat-dialog-content class=\"mat-typography dialog-content\">\n        <div class=\"message\">{{ message }}</div>\n        <a mat-button class=\"mat-button\" [text]=\"callToAction\" (click)=\"onDialogButtonClick()\"> </a>\n      </mat-dialog-content>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { CallToActionComponent } from './call-to-action.component';\n\n@NgModule({\n  declarations: [CallToActionComponent],\n  imports: [CommonModule, MatIconModule, MatDialogModule, MatCardModule],\n  exports: [CallToActionComponent],\n})\nexport class CallToActionModule {}\n","/** A range which should have the specified classes and styles applied */\nexport interface DecoratedRange {\n  /** Start index of range (inclusive). Negative indicies are allowed. */\n  start: number;\n  /** End index of range (exclusive). Negative indicies are allowed. */\n  end: number;\n  /** Classes to add */\n  classes: string[];\n  /** Styles to set */\n  styles: Record<string, unknown>;\n}\n\n/**\n * Resolves and normalizes an index for indexing into an array of length `length`.\n *\n * @param index The index value to resolve. May be negative indicating an index from end.\n * @param length The length of the object on which this index will be used.\n * @returns A positive index in range [0, length]\n */\nfunction resolveIndex(index: number, length: number): number {\n  if (index >= 0 && index < length) {\n    return index;\n  } else if (index >= length) {\n    return length;\n  } else if (index + length < 0) {\n    return 0;\n  } else {\n    return index + length;\n  }\n}\n\n/**\n * Produces a new range object based on the input where all properties have been normalized.\n *\n * @param range The object to normalize.\n * @param length Max length for indices.\n * @returns A new object where all undefined values have been replaced with defaults and\n * where all indices have been constrained to the range [0, length].\n */\nexport function normalize(range: Partial<DecoratedRange>, length: number): DecoratedRange {\n  const start = resolveIndex(range.start ?? 0, length);\n  const end = resolveIndex(range.end ?? length, length);\n  const classes = range.classes ?? [];\n  const styles = range.styles ?? {};\n  return { start, end, classes, styles };\n}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record<string, unknown>;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text!: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial<DecoratedRange>[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) {\n      // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) {\n      // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(text.slice(lastIndex, op.index), stack));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(text.slice(lastIndex), stack));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record<number, StackOp> = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map((entry) => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return (\n      stack\n        .filter((item) => !op.removed.includes(item))\n        // Note - A new array is created by the above filter statement\n        // so it is safe to modify it with concat\n        .concat(op.added)\n    );\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const {\n      decorations = [],\n      text: { length },\n    } = this;\n    return (\n      decorations\n        // Turn partials into full objects\n        .map((range) => normalize(range, length))\n        // Remove empty and out of bounds ranges\n        .filter((range) => range.start < length && range.start < range.end)\n    );\n  }\n\n  /**\n   * Creates a segment without any decoration\n   *\n   * @param text The text for the segment\n   * @returns A segment without any decoration\n   */\n  private makeUndecoratedSegment(text: string): Segment {\n    return { text, classes: [], styles: {} };\n  }\n\n  /**\n   * Creates a segment with decoration\n   *\n   * @param text The text for the segment\n   * @param decorations Decorations for this segment\n   * @returns A decorated segment\n   */\n  private makeDecoratedSegment(text: string, decorations: DecoratedRange[]): Segment {\n    const classes = decorations.reduce<string[]>((result, range) => result.concat(range.classes), []);\n    const styles = decorations.reduce((result, range) => ({ ...result, ...range.styles }), {});\n\n    return { text, classes, styles };\n  }\n}\n","<span *ngFor=\"let segment of segments\" [class]=\"segment.classes\" [style]=\"segment.styles\">\n  {{ segment.text }}\n</span>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DecoratedTextComponent } from './decorated-text.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DecoratedTextComponent],\n  exports: [DecoratedTextComponent],\n})\nexport class DecoratedTextModule {}\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nimport { PanelData } from '../info-button/info-button.service';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\nimport { InfoButtonService } from './info-button.service';\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InfoButtonComponent implements OnDestroy {\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle = '';\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() videoID!: string;\n\n  @Input() documentationUrl!: string;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param infoButtonService Reference to the info button service\n   */\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly infoButtonService: InfoButtonService,\n  ) {\n    this.subscriptions.add(\n      infoButtonService.panelContent.subscribe((data) => {\n        if (data.content.length) {\n          this.launchInfoDialog(data);\n        }\n      }),\n    );\n  }\n\n  /**\n   * Unsubscribe to the observable when the component\n   * is destroyed\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(data: PanelData): void {\n    if (this.dialog.openDialogs.length === 0) {\n      //Prevent multiple dialogs from opening\n      this.dialog.open(InfoDialogComponent, {\n        autoFocus: false,\n        panelClass: 'modal-animated',\n        width: '72rem',\n        data: {\n          title: data.infoTitle,\n          content: data.content,\n          videoID: data.videoID,\n        },\n      });\n    }\n  }\n\n  /**\n   * Detects button click and updates panel data\n   */\n  onDialogButtonClick(): void {\n    this.infoButtonService.updateData(this.documentationUrl, this.videoID, this.infoTitle);\n  }\n}\n","<div class=\"info-button-wrapper\">\n  <mat-icon class=\"ccf-info-button\" aria-hidden=\"false\" aria-label=\"Page information\" (click)=\"onDialogButtonClick()\">\n    info\n  </mat-icon>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule, HttpClientModule],\n  exports: [InfoButtonComponent],\n})\nexport class InfoButtonModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InfoButtonService {\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject<PanelData> = new BehaviorSubject<PanelData>({\n    content: [],\n    infoTitle: '',\n    videoID: '',\n  });\n\n  constructor(private readonly http: HttpClient) {}\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = {\n        content: this.parseMarkdown(data),\n        infoTitle: infoTitle,\n        videoID: videoID,\n      };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine),\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n  /**\n   * URL for video\n   */\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef<InfoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n","<div class=\"about wrapper\">\n  <div class=\"container\">\n    <div class=\"content\">\n      <div class=\"header\">\n        <h2 class=\"title\" mat-dialog-title>{{ infoTitle }}</h2>\n        <div class=\"close\">\n          <mat-icon class=\"material-icons close-icon\" (click)=\"close()\">clear</mat-icon>\n        </div>\n      </div>\n\n      <mat-dialog-content class=\"mat-typography dialog-content\">\n        <div *ngFor=\"let content of documentationContents; let i = index\" class=\"panel\">\n          <mat-expansion-panel *ngIf=\"content\" [expanded]=\"i === 0\">\n            <mat-expansion-panel-header>\n              <h2 class=\"no-header-margin\">{{ content.title }}</h2>\n            </mat-expansion-panel-header>\n            <div class=\"top-padding\">\n              <markdown class=\"variable-binding\" [class.first]=\"i === 0\" [data]=\"content.content\"></markdown>\n              <div class=\"video-player\" *ngIf=\"i === 0\">\n                <youtube-player videoId=\"{{ videoID }}\"></youtube-player>\n              </div>\n            </div>\n          </mat-expansion-panel>\n        </div>\n      </mat-dialog-content>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { InfoDialogComponent } from './info-dialog.component';\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatExpansionModule,\n    YouTubePlayerModule,\n    MarkdownModule.forRoot({}),\n  ],\n  exports: [InfoDialogComponent],\n})\nexport class InfoDialogModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\n\n/**\n * Slider for setting opacity on an anatomical structure\n */\n@Component({\n  selector: 'ccf-opacity-slider',\n  templateUrl: './opacity-slider.component.html',\n  styleUrls: ['./opacity-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OpacitySliderComponent implements OnInit {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-opacity-slider';\n\n  /**\n   * The value displayed in the slider\n   */\n  @Input() opacity = 20;\n\n  /**\n   * Whether the item is set to visible\n   */\n  @Input() visible = true;\n\n  /**\n   * Emits the updated opacity when the opacity changes\n   */\n  @Output() readonly opacityChange = new EventEmitter<number>();\n\n  /**\n   * Output  of opacity slider component\n   */\n  @Output() readonly visibilityToggle = new EventEmitter();\n\n  /**\n   * Emitter for resetting all opacity values to default\n   */\n  @Output() readonly opacityReset = new EventEmitter();\n\n  /**\n   * Emitted when slider thumb is moved\n   */\n  @Output() readonly sliderChanged = new EventEmitter<string>();\n\n  prevOpacity!: number;\n\n  ngOnInit(): void {\n    if (this.visible) {\n      this.prevOpacity = 0;\n    } else {\n      this.prevOpacity = 20;\n    }\n  }\n\n  reset(): void {\n    this.prevOpacity = 20;\n  }\n\n  /**\n   * Emits signal to toggle the visibility of the item\n   */\n  toggleVisibility(): void {\n    const temp = this.opacity;\n    this.opacity = this.prevOpacity;\n    this.prevOpacity = temp;\n    this.visibilityToggle.emit();\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to reset the opacity of the item\n   */\n  resetOpacity(): void {\n    this.prevOpacity = 0;\n    this.opacityReset.emit();\n  }\n}\n","<div class=\"slider-box\">\n  <div class=\"slider-and-label\">\n    <mat-slider class=\"slider\" [class.disabled]=\"!visible\" [step]=\"1\" [min]=\"0\" [max]=\"100\" [disableRipple]=\"true\">\n      <input\n        matSliderThumb\n        class=\"opacity-slider\"\n        [value]=\"opacity\"\n        (input)=\"opacityChange.emit(+slider.value)\"\n        #slider\n      />\n    </mat-slider>\n    <span class=\"opacity-value\">{{ opacity }}%</span>\n  </div>\n  <div class=\"icons\">\n    <mat-icon\n      matRipple\n      [matRippleCentered]=\"true\"\n      [matRippleUnbounded]=\"true\"\n      class=\"visibility icon invisible\"\n      (click)=\"toggleVisibility()\"\n      [class.hidden]=\"opacity > 0\"\n      svgIcon=\"app:visibility_off\"\n    ></mat-icon>\n    <mat-icon\n      matRipple\n      [matRippleCentered]=\"true\"\n      [matRippleUnbounded]=\"true\"\n      class=\"visibility icon visible\"\n      (click)=\"toggleVisibility()\"\n      [class.hidden]=\"opacity === 0\"\n      svgIcon=\"app:visibility_on\"\n    ></mat-icon>\n    <mat-icon\n      matRipple\n      [matRippleCentered]=\"true\"\n      [matRippleUnbounded]=\"true\"\n      class=\"icon reset\"\n      (click)=\"resetOpacity()\"\n      >refresh</mat-icon\n    >\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { OpacitySliderComponent } from './opacity-slider.component';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [OpacitySliderComponent],\n  imports: [CommonModule, MatIconModule, MatSliderModule, MatRippleModule],\n  exports: [OpacitySliderComponent],\n})\nexport class OpacitySliderModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\n/**\n * All organs that will eventually be displayed in the app\n */\nexport const ALL_POSSIBLE_ORGANS = [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097',\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955',\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029',\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509',\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970',\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548',\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004549',\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889',\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303',\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302',\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948',\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113',\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538',\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539',\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465',\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24978',\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24977',\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107',\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048',\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004',\n  },\n  {\n    disabled: true,\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001911',\n  },\n  {\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma57991',\n  },\n  {\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma57987',\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992',\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7214',\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7213',\n  },\n  {\n    src: 'app:larynx',\n    organ: 'Larynx',\n    name: 'Larynx',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001737',\n  },\n  {\n    src: 'app:main-bronchus',\n    organ: 'Main Bronchus',\n    name: 'Main Bronchus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002182',\n  },\n  {\n    disabled: true,\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002373',\n  },\n  {\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma54974',\n  },\n  {\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma54973',\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264',\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270',\n  },\n  {\n    src: 'app:placenta',\n    organ: 'Placenta',\n    name: 'Placenta',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001987',\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true,\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079',\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108',\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059',\n  },\n  {\n    src: 'app:spinal-cord',\n    organ: 'Spinal Cord',\n    name: 'Spinal Cord',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002240',\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106',\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370',\n  },\n  {\n    src: 'app:trachea',\n    organ: 'Trachea',\n    name: 'Trachea',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003126',\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056',\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223',\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222',\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255',\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995',\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537',\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049',\n  },\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[];\n\n/**\n * All organs which have not been disabled\n */\nexport const ALL_ORGANS = ALL_POSSIBLE_ORGANS.filter((organ) => organ.disabled !== true);\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n  /**\n   * Used to fetch the url of the organ icon\n   */\n  src: string;\n\n  /**\n   * Label to display for the organ\n   */\n  name: string;\n\n  /**\n   * Name of the organ (to help match organs with left / right)\n   */\n  organ: string;\n\n  /**\n   * True if the icon is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Used for paired organs\n   */\n  side?: 'left' | 'right';\n\n  /**\n   * True if applies to both sexes\n   */\n  hasSex?: boolean;\n\n  /**\n   * Used for single sex only organs\n   */\n  sex?: 'male' | 'female';\n\n  /**\n   * UBERON id for the organ\n   */\n  id?: string;\n\n  numResults?: number;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrganSelectorComponent implements AfterViewInit, OnChanges, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-organ-selector';\n\n  @ViewChild('carouselContainer', { static: true })\n  carouselContainer!: ElementRef<HTMLElement>;\n  @ViewChild('itemlist', { static: true }) itemList!: ElementRef<HTMLElement>;\n  @ViewChild('itemcontainer', { static: true })\n  itemContainer!: ElementRef<HTMLElement>;\n\n  /**\n   * If multiple selections should be allowed\n   */\n  @Input() multiselect = false;\n\n  @Input() displayErrors = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  @Input() organList: OrganInfo[] = ALL_ORGANS;\n\n  /**\n   * Currently selected organ\n   */\n  @Input() selectedOrgans: OrganInfo[] = [];\n\n  /**\n   * If the organ selector is expanded\n   */\n  @Input() expanded = false;\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() readonly organsChanged = new EventEmitter<OrganInfo[]>();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * Handles scrolling behavior\n   */\n  timeoutHandler?: unknown;\n\n  /**\n   * Distance the carousel moves in each shift (px)\n   */\n  step = 72;\n\n  /**\n   * Detects resizing of carousel\n   */\n  private sensor!: ResizeSensor;\n\n  // eslint-disable-next-line\n  @Input()\n  set occurenceData(value: Record<string, number>) {\n    // eslint-disable-next-line\n    this._occurenceData = value;\n  }\n\n  get occurenceData(): Record<string, number> {\n    // eslint-disable-next-line\n    return this._occurenceData;\n  }\n\n  private _occurenceData!: Record<string, number>;\n\n  /**\n   * Set resize sensor on carousel\n   */\n  ngAfterViewInit(): void {\n    const { carouselContainer } = this;\n    this.sensor = new ResizeSensor(carouselContainer.nativeElement, () => {\n      this.set();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('organList' in changes) {\n      this.set();\n    }\n  }\n\n  /**\n   * Detaches resize sensor\n   */\n  ngOnDestroy(): void {\n    this.sensor.detach();\n  }\n\n  /**\n   * Decides whether or not an error has occured,\n   * used to display or hide error message.\n   */\n  get error(): boolean {\n    if (!this.displayErrors || this.selectedOrgans.length === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   *\n   * @param dir Direction to be scrolled\n   */\n  shift(dir: string): void {\n    const { itemList } = this;\n    let val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if ((this.onLeft && dir === 'left') || (this.onRight && dir === 'right')) {\n      return;\n    }\n    val = dir === 'right' ? val - this.step : val + this.step;\n    itemList.nativeElement.style.left = val + 'px';\n    this.setLeftRight(val);\n  }\n\n  /**\n   * Scrolls carousel continuously\n   *\n   * @param dir Direction to be scrolled\n   */\n  scroll(dir: string): void {\n    this.timeoutHandler = setInterval(() => {\n      this.shift(dir);\n    }, 200);\n  }\n\n  /**\n   * Stops carousel scrolling\n   */\n  stopScroll(): void {\n    if (this.timeoutHandler) {\n      // Minor hack to make typescript happy when there are mixed NodeJS and regular typings\n      clearInterval(this.timeoutHandler as never);\n      this.timeoutHandler = undefined;\n    }\n  }\n\n  /**\n   * Sets and emits currently selected organ(s)\n   *\n   * @param organ The organ selected\n   */\n  selectOrgan(organ: OrganInfo): void {\n    if (!this.multiselect) {\n      this.selectedOrgans = [organ];\n    } else {\n      if (this.selectedOrgans.includes(organ)) {\n        this.selectedOrgans = this.selectedOrgans.filter((selectedOrgan) => organ !== selectedOrgan);\n      } else {\n        this.selectedOrgans = this.selectedOrgans.concat([organ]);\n      }\n    }\n    this.organsChanged.emit(this.selectedOrgans);\n  }\n\n  /**\n   * Determines whether an icon represents a currently selected organ\n   *\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(organ: OrganInfo): boolean {\n    return this.selectedOrgans.includes(organ) ? true : false;\n  }\n\n  /**\n   * Disables scrolling if the list of organs is smaller than the container, otherwise sets onLeft and onRight as normal\n   */\n  set(): void {\n    const { itemList, itemContainer, carouselContainer } = this;\n    const val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (itemList.nativeElement.offsetWidth >= this.organList.length * this.step) {\n      itemList.nativeElement.style.left = '0px';\n      this.onLeft = true;\n      this.onRight = true;\n    } else {\n      this.setLeftRight(val);\n      const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n      itemContainer.nativeElement.style.width = `${listLength}px`;\n    }\n  }\n\n  /**\n   * Responsively sets width of the item container\n   */\n  setWidth(): void {\n    const { itemContainer, carouselContainer } = this;\n    const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n    itemContainer.nativeElement.style.width = `${listLength}px`;\n  }\n\n  /**\n   * Sets onLeft and onRight according to where the item list is scrolled\n   */\n  setLeftRight(val: number): void {\n    const { itemContainer } = this;\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val <= itemContainer.nativeElement.offsetWidth - this.organList.length * this.step ? true : false;\n  }\n}\n","<div\n  class=\"container\"\n  [class.expanded]=\"expanded\"\n  [class.error]=\"error\"\n  [matTooltipDisabled]=\"multiselect\"\n  matTooltip=\"Select the organ your tissue block is from.\"\n  #carouselContainer\n>\n  <mat-icon\n    *ngIf=\"!expanded\"\n    class=\"carousel-left-icon\"\n    (touchstart)=\"scroll('left')\"\n    (touchend)=\"stopScroll()\"\n    (click)=\"shift('left')\"\n    (mousedown)=\"scroll('left')\"\n    (mouseup)=\"stopScroll()\"\n    [class.disabled]=\"onLeft\"\n    >chevron_left</mat-icon\n  >\n  <div class=\"carousel-item-container\" #itemcontainer>\n    <div class=\"carousel-item-list\" #itemlist>\n      <div\n        *ngFor=\"let organ of organList\"\n        class=\"carousel-item\"\n        [class.disabled]=\"organ.disabled\"\n        (click)=\"selectOrgan(organ)\"\n        [class.selected]=\"isSelected(organ)\"\n      >\n        <mat-icon class=\"carousel-icon\" svgIcon=\"{{ organ.src }}\"></mat-icon>\n        <div class=\"carousel-text-container\">\n          <div class=\"carousel-text\">{{ organ.name }}</div>\n          <div class=\"num-results\" *ngIf=\"organ.numResults !== undefined\">{{ occurenceData[organ.id ?? ''] || 0 }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <mat-icon\n    *ngIf=\"!expanded\"\n    class=\"carousel-right-icon\"\n    (touchstart)=\"scroll('right')\"\n    (touchend)=\"stopScroll()\"\n    (click)=\"shift('right')\"\n    (mousedown)=\"scroll('right')\"\n    (mouseup)=\"stopScroll()\"\n    [class.disabled]=\"onRight\"\n    >chevron_right</mat-icon\n  >\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { OrganSelectorComponent } from './organ-selector.component';\n\n@NgModule({\n  declarations: [OrganSelectorComponent],\n  imports: [CommonModule, MatIconModule, MatTooltipModule],\n  exports: [OrganSelectorComponent],\n})\nexport class OrganSelectorModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\n\nexport interface Position {\n  x: number;\n  y: number;\n  z: number;\n}\n\n/**\n * Behavioral component for spatial search keyboard UI\n */\n@Component({\n  selector: 'ccf-spatial-search-keyboard-ui-behavior',\n  templateUrl: './spatial-search-keyboard-ui-behavior.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpatialSearchKeyboardUIBehaviorComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spatial-search-keyboard-ui-behavior';\n\n  /** Amount the position shifts for each key press */\n  @Input() delta = 1;\n\n  /** Input of spatial search keyboard uibehavior component */\n  @Input() shiftDelta = 2;\n\n  /** Current position of spatial search */\n  @Input() position!: Position;\n\n  @Input() disablePositionChange = false;\n\n  /** Emits when position changes */\n  @Output() readonly changePosition = new EventEmitter<Position>();\n\n  /** Current key being pressed/clicked */\n  currentKey?: string;\n\n  /** Current delta */\n  currentDelta!: number;\n\n  /** True while shift key is pressed */\n  shiftPressed = false;\n\n  /**\n   * Shifts position based on key\n   * @param key Key value\n   */\n  updatePosition(key: string): void {\n    this.currentDelta = this.shiftPressed ? this.shiftDelta : this.delta;\n    if (key === 'Shift') {\n      this.shiftPressed = true;\n    } else {\n      this.currentKey = key.toLowerCase();\n      switch (this.currentKey) {\n        case 'q':\n          this.position = {\n            ...this.position,\n            z: this.position.z + this.currentDelta,\n          };\n          break;\n        case 'e':\n          this.position = {\n            ...this.position,\n            z: this.position.z - this.currentDelta,\n          };\n          break;\n        case 'w':\n          this.position = {\n            ...this.position,\n            y: this.position.y + this.currentDelta,\n          };\n          break;\n        case 's':\n          this.position = {\n            ...this.position,\n            y: this.position.y - this.currentDelta,\n          };\n          break;\n        case 'a':\n          this.position = {\n            ...this.position,\n            x: this.position.x - this.currentDelta,\n          };\n          break;\n        case 'd':\n          this.position = {\n            ...this.position,\n            x: this.position.x + this.currentDelta,\n          };\n          break;\n        default:\n          break;\n      }\n      this.changePosition.emit(this.position);\n    }\n  }\n\n  /**\n   * Listens for keydown keyboard event and updates the position\n   * @param target Keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    if (this.disablePositionChange) {\n      return;\n    }\n    target.preventDefault();\n    this.updatePosition(target.key);\n  }\n\n  /**\n   * Listens for keyup keyboard event and updates currentKey / shiftPressed\n   * @param target Keyboard event\n   */\n  @HostListener('document:keyup', ['$event'])\n  keyUp(target: KeyboardEvent): void {\n    if (target.key === 'Shift') {\n      this.shiftPressed = false;\n    } else {\n      this.currentKey = undefined;\n    }\n  }\n\n  /**\n   * Updates the position when a key is clicked\n   * @param key Key value\n   */\n  keyClick(key: string): void {\n    this.updatePosition(key);\n  }\n\n  /**\n   * Updates current key when a key is hovered over\n   * @param key Key value\n   */\n  keyHover(key?: string): void {\n    this.currentKey = key;\n  }\n}\n","<ccf-spatial-search-keyboard-ui\n  [currentKey]=\"currentKey\"\n  [shiftPressed]=\"shiftPressed\"\n  (keyClicked)=\"keyClick($event)\"\n  (keyHovered)=\"keyHover($event)\"\n>\n</ccf-spatial-search-keyboard-ui>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SpatialSearchKeyboardUIModule } from '../spatial-search-keyboard-ui/spatial-search-keyboard-ui.module';\nimport { SpatialSearchKeyboardUIBehaviorComponent } from './spatial-search-keyboard-ui-behavior.component';\n\n@NgModule({\n  imports: [CommonModule, SpatialSearchKeyboardUIModule],\n  declarations: [SpatialSearchKeyboardUIBehaviorComponent],\n  exports: [SpatialSearchKeyboardUIBehaviorComponent],\n})\nexport class SpatialSearchKeyboardUIBehaviorModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * Keyboard control UI for spatial search\n */\n@Component({\n  selector: 'ccf-spatial-search-keyboard-ui',\n  templateUrl: './spatial-search-keyboard-ui.component.html',\n  styleUrls: ['./spatial-search-keyboard-ui.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpatialSearchKeyboardUIComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spatial-search-keyboard-ui';\n\n  /** Current key pressed */\n  @Input() currentKey?: string;\n\n  /** True if shift key is pressed */\n  @Input() shiftPressed!: boolean;\n\n  /** Emits when a key is clicked */\n  @Output() readonly keyClicked = new EventEmitter<string>();\n\n  /** Emits the key value when a key is hovered over */\n  @Output() readonly keyHovered = new EventEmitter<string | undefined>();\n\n  /** List of keys and their arrow icons that appear when the key is pressed */\n  keyMap = [\n    {\n      key: 'w',\n      direction: 'north',\n    },\n    {\n      key: 's',\n      direction: 'south',\n    },\n    {\n      key: 'a',\n      direction: 'west',\n    },\n    {\n      key: 'd',\n      direction: 'east',\n    },\n    {\n      key: 'e',\n      direction: 'north_east',\n    },\n    {\n      key: 'q',\n      direction: 'south_west',\n    },\n  ];\n}\n","<div class=\"direction-arrow\">\n  <mat-icon *ngFor=\"let key of keyMap\" class=\"arrow\" [class.active]=\"currentKey === key.key\"\n    >{{ key.direction }}\n  </mat-icon>\n</div>\n<div class=\"keys\">\n  <div class=\"keyrow\">\n    <div\n      class=\"key blue\"\n      (mousedown)=\"keyClicked.emit('q')\"\n      (mouseover)=\"keyHovered.emit('q')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 'q'\"\n    >\n      Q\n    </div>\n    <div\n      class=\"key green\"\n      (mousedown)=\"keyClicked.emit('w')\"\n      (mouseover)=\"keyHovered.emit('w')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 'w'\"\n    >\n      W\n    </div>\n    <div\n      class=\"key blue\"\n      (mousedown)=\"keyClicked.emit('e')\"\n      (mouseover)=\"keyHovered.emit('e')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 'e'\"\n    >\n      E\n    </div>\n  </div>\n  <div class=\"keyrow\">\n    <div\n      class=\"key red\"\n      (mousedown)=\"keyClicked.emit('a')\"\n      (mouseover)=\"keyHovered.emit('a')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 'a'\"\n    >\n      A\n    </div>\n    <div\n      class=\"key green\"\n      (mousedown)=\"keyClicked.emit('s')\"\n      (mouseover)=\"keyHovered.emit('s')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 's'\"\n    >\n      S\n    </div>\n    <div\n      class=\"key red\"\n      (mousedown)=\"keyClicked.emit('d')\"\n      (mouseover)=\"keyHovered.emit('d')\"\n      (mouseout)=\"keyHovered.emit()\"\n      [class.highlighted]=\"currentKey === 'd'\"\n    >\n      D\n    </div>\n  </div>\n  <div *ngIf=\"shiftPressed\" class=\"shift\">SHIFT</div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { SpatialSearchKeyboardUIComponent } from './spatial-search-keyboard-ui.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [SpatialSearchKeyboardUIComponent],\n  exports: [SpatialSearchKeyboardUIComponent],\n})\nexport class SpatialSearchKeyboardUIModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * Base interface of items in the spatial search list\n */\nexport interface SpatialSearchListItem {\n  /** Whether the item is selected */\n  selected: boolean;\n\n  /** Description displayed for the item */\n  description: string;\n}\n\n/**\n * Displays a list of spatial searches\n */\n@Component({\n  selector: 'ccf-spatial-search-list',\n  templateUrl: './spatial-search-list.component.html',\n  styleUrls: ['./spatial-search-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpatialSearchListComponent<T extends SpatialSearchListItem> {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-spatial-search-list';\n\n  /** Label for the list */\n  @Input() label = '';\n\n  /** Items to display */\n  @Input() items: T[] = [];\n\n  /** Emits the new items when a selection changes */\n  @Output() readonly selectionChanged = new EventEmitter<T[]>();\n\n  /** Emits the item that has been removed from the list */\n  @Output() readonly itemRemoved = new EventEmitter<T>();\n\n  /**\n   * Computes a unique id for an item\n   *\n   * @param _index Unused\n   * @param item An item\n   * @returns A unique id\n   */\n  itemId(_index: number, item: T): string {\n    return item.description;\n  }\n\n  /**\n   * Updates the selected state for an item\n   *\n   * @param index Index of item to update\n   * @param selected What to set the selected state to\n   */\n  updateItemSelection(index: number, selected: boolean): void {\n    const newItems = (this.items = [...this.items]);\n    newItems[index] = { ...newItems[index], selected };\n\n    const selectedItems = newItems.filter((item) => item.selected);\n    this.selectionChanged.emit(selectedItems);\n  }\n\n  /**\n   * Removes an item from the list\n   *\n   * @param index Index of the item to remove\n   */\n  removeItem(index: number): void {\n    const newItems = (this.items = [...this.items]);\n    const [item] = newItems.splice(index, 1);\n    this.itemRemoved.emit(item);\n  }\n}\n","<div *ngIf=\"label\" class=\"label\">\n  {{ label }}\n</div>\n\n<mat-list class=\"list\">\n  <mat-list-item *ngFor=\"let item of items; index as idx; trackBy: itemId\" class=\"item\">\n    <div class=\"item-content\">\n      <mat-checkbox\n        class=\"description\"\n        labelPosition=\"after\"\n        [checked]=\"item.selected\"\n        (change)=\"updateItemSelection(idx, $event.checked)\"\n      >\n        {{ item.description }}\n      </mat-checkbox>\n\n      <div class=\"filler\"></div>\n\n      <button mat-icon-button class=\"delete\" (click)=\"removeItem(idx)\">\n        <mat-icon>delete_outlined</mat-icon>\n      </button>\n    </div>\n  </mat-list-item>\n</mat-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { SpatialSearchListComponent } from './spatial-search-list.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatCheckboxModule, MatIconModule, MatListModule],\n  declarations: [SpatialSearchListComponent],\n  exports: [SpatialSearchListComponent],\n})\nexport class SpatialSearchListModule {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\n\n/** Key-Value pair */\nexport type KVPair<T = unknown> = [string, T];\n/** Array of Key-Value pairs */\nexport type KVList<T = unknown> = KVPair<T>[];\n\n/**\n * Simple component for displaying the current values in the data store.\n */\n@Component({\n  selector: 'ccf-store-debug',\n  templateUrl: './store-debug.component.html',\n  styleUrls: ['./store-debug.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StoreDebugComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-store-debug';\n\n  /**\n   * Gets the store data as a list of state name to key-value pairs\n   */\n  get data(): KVList<KVList> {\n    const states: KVList<Record<string, unknown>> = Object.entries(this.root);\n    const stateValues: KVList<KVList> = states.map(([key, values]) => [key, Object.entries(values)]);\n    return stateValues.filter(([_key, values]) => values.length > 0);\n  }\n\n  /** Latest store data */\n  private root: Record<string, Record<string, unknown>> = {};\n\n  /** Subscriptions managed by this component */\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of store debug component.\n   * Sets up the store data listeners.\n   *\n   * @param store The data store.\n   * @param cdr Change detection for this component.\n   */\n  constructor(store: Store, cdr: ChangeDetectorRef) {\n    const sub = store.subscribe((root) => {\n      this.root = root as Record<string, Record<string, unknown>>;\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  /**\n   * Cleans up subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div *ngFor=\"let state of data\" class=\"state\">\n  <div>{{ state[0] }}</div>\n  <ul class=\"kvlist\">\n    <li *ngFor=\"let kv of state[1]\" class=\"kvpair\">{{ kv[0] }}: {{ kv[1] | json }}</li>\n  </ul>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreDebugComponent } from './store-debug.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [StoreDebugComponent],\n  exports: [StoreDebugComponent],\n})\nexport class StoreDebugModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  InjectionToken,\n  Input,\n  Output,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { Observable, ObservableInput, from, lastValueFrom } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial<DecoratedRange>[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken('Maximum number of autocomplete options displayed', {\n  providedIn: 'root',\n  factory(): number {\n    return 10;\n  },\n});\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput<AutoCompleteOption[]>;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable<string>;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter<AutoCompleteOption>();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new UntypedFormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable<string>).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions),\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(@Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise<AutoCompleteOption[]> {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions < 1) {\n      return [];\n    }\n\n    const options = autoCompleter(search, maxOptions);\n    return lastValueFrom(\n      from(options).pipe(\n        take(1),\n        map((array) => (array.length <= maxOptions ? array : array.slice(0, maxOptions))),\n      ),\n    );\n  }\n\n  /**\n   * Text to show in search bar when an autocomplete option is selected.\n   *\n   * @param option The autocomplete option\n   * @returns The displayed text\n   */\n  optionDisplay(option: AutoCompleteOption | null): string {\n    return option?.label ?? '';\n  }\n\n  /**\n   * Gets an unique identifier for an autocomplete option object.\n   *\n   * @param _index Unused\n   * @param option The option object\n   * @returns The unique identifier\n   */\n  optionId(_index: number, option: AutoCompleteOption): unknown {\n    return option.id;\n  }\n}\n","<form class=\"form\">\n  <mat-form-field class=\"form-field\" appearance=\"outline\">\n    <ng-container matPrefix>\n      <ng-content select=\"[matPrefix]\"></ng-content>\n    </ng-container>\n\n    <input\n      matInput\n      type=\"search\"\n      class=\"input\"\n      [placeholder]=\"placeholder\"\n      [formControl]=\"controller\"\n      [matAutocomplete]=\"auto\"\n    />\n\n    <mat-autocomplete\n      class=\"autocomplete\"\n      [displayWith]=\"optionDisplay\"\n      (optionSelected)=\"optionSelected.emit($event.option.value)\"\n      #auto=\"matAutocomplete\"\n    >\n      <mat-option *ngFor=\"let option of options | async; trackBy: optionId\">\n        <ccf-decorated-text [text]=\"option.label\" [decorations]=\"option.decorations\"> </ccf-decorated-text>\n      </mat-option>\n    </mat-autocomplete>\n\n    <ng-container matSuffix>\n      <ng-content select=\"[matSuffix]\"></ng-content>\n    </ng-container>\n  </mat-form-field>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { DecoratedTextModule } from '../decorated-text/decorated-text.module';\nimport { TextSearchComponent } from './text-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n    DecoratedTextModule,\n  ],\n  declarations: [TextSearchComponent],\n  exports: [\n    TextSearchComponent,\n\n    // Reexport prefix/suffix markers\n    MatPrefix,\n    MatSuffix,\n  ],\n})\nexport class TextSearchModule {}\n","import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { Consent, ConsentService } from 'ccf-shared/analytics';\n\n@Component({\n  selector: 'ccf-tracking-popup',\n  templateUrl: './tracking-popup.component.html',\n  styleUrls: ['./tracking-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrackingPopupComponent {\n  @HostBinding('class') readonly clsName = 'ccf-tracking-popup';\n\n  get allowTelemetry(): Consent {\n    return this.consentService.consent;\n  }\n\n  container: HTMLElement;\n\n  constructor(\n    elementRef: ElementRef<HTMLElement>,\n    readonly consentService: ConsentService,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    @Inject(MAT_SNACK_BAR_DATA) public data: any,\n  ) {\n    this.container = elementRef.nativeElement;\n  }\n\n  dismiss(): void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    this.data.preClose();\n  }\n\n  submit(entry: boolean): void {\n    this.consentService.setConsent(entry ? 'given' : 'rescinded');\n    this.dismiss();\n  }\n\n  showButton(button: 'opt-in' | 'opt-out'): boolean {\n    const { allowTelemetry } = this;\n    if (allowTelemetry === 'not-set') {\n      return true;\n    } else {\n      return button === 'opt-in' ? allowTelemetry === 'rescinded' : allowTelemetry === 'given';\n    }\n  }\n}\n","<p>We log usage to improve this service.</p>\n<button *ngIf=\"showButton('opt-in')\" mat-button color=\"basic\" (click)=\"submit(true)\">\n  {{ allowTelemetry === 'not-set' ? 'I understand' : 'Opt in' }}\n</button>\n<button *ngIf=\"showButton('opt-out')\" mat-button color=\"basic\" (click)=\"submit(false)\">Opt out</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TrackingPopupComponent } from './tracking-popup.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule],\n  declarations: [TrackingPopupComponent],\n  exports: [TrackingPopupComponent],\n})\nexport class TrackingPopupModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n/**\n * Component displaying a x, y, and z position\n */\n@Component({\n  selector: 'ccf-xyz-position',\n  templateUrl: './xyz-position.component.html',\n  styleUrls: ['./xyz-position.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class XYZPositionComponent {\n  /** Html class name */\n  @HostBinding('class') readonly clsName = 'ccf-xyz-position';\n\n  /** X position */\n  @Input() x = 0;\n\n  /** Y position */\n  @Input() y = 0;\n\n  /** Z position */\n  @Input() z = 0;\n\n  /** Number format for position values */\n  readonly format = '1.0-2';\n}\n","<span class=\"line\">X: {{ x | number: format }}</span>\n<span class=\"line\">Y: {{ y | number: format }}</span>\n<span class=\"line\">Z: {{ z | number: format }}</span>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { XYZPositionComponent } from './xyz-position.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [XYZPositionComponent],\n  exports: [XYZPositionComponent],\n})\nexport class XYZPositionModule {}\n","import { Immutable } from '@angular-ru/common/typings';\nimport { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { ImmutablePatchValue, ImmutableStateValue } from '@angular-ru/ngxs/typings';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable, OperatorFunction, of } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n@StateRepository()\n@State({\n  name: 'globalConfig',\n  defaults: null,\n})\n@Injectable()\nexport class GlobalConfigState<T> extends NgxsImmutableDataRepository<T> {\n  private readonly optionCache = new Map<string, Observable<unknown>>();\n\n  @Computed()\n  get config$(): Observable<Immutable<T>> {\n    return this.state$.pipe(filterNulls(), shareReplay(1));\n  }\n\n  setConfig(config: ImmutableStateValue<T>): void {\n    this.setState(config);\n  }\n\n  patchConfig(config: ImmutablePatchValue<T>): void {\n    this.patchState(config);\n  }\n\n  getProperty<R>(path: PropertyKey[]): Observable<R> {\n    return this.config$.pipe(\n      pluck(...(path as [string])) as OperatorFunction<Immutable<T>, R>,\n      distinctUntilChanged(),\n      shareReplay(1),\n    );\n  }\n\n  getOption<K1 extends keyof T>(k1: K1): Observable<T[K1]>;\n  getOption<K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): Observable<T[K1][K2]>;\n  getOption<K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n    k1: K1,\n    k2: K2,\n    k3: K3,\n  ): Observable<T[K1][K2][K3]>;\n  getOption<R>(...path: (string | number)[]): Observable<R>;\n  getOption(...path: (string | number)[]): Observable<unknown> {\n    const key = this.getPathKey(path);\n    if (this.optionCache.has(key)) {\n      return this.optionCache.get(key) ?? of();\n    }\n\n    const obs = this.config$.pipe(pluck(...(path as string[])), distinctUntilChanged(), shareReplay(1));\n\n    this.optionCache.set(key, obs);\n    return obs;\n  }\n\n  private getPathKey(path: (string | number)[]): string {\n    return `${path.length}:${path.join('.')}`;\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n/**\n * Directive for restricting an input element to integer only values.\n */\n@Directive({\n  selector: 'input[ccfNumbersOnly]',\n})\nexport class NumberDirective {\n  /**\n   * Creates an instance of number directive.\n   *\n   * @param el Reference to input element\n   */\n  constructor(private readonly el: ElementRef<HTMLInputElement>) {}\n\n  /**\n   * Listens to input changes and updates the text to only include numbers.\n   *\n   * @param event The input event\n   */\n  @HostListener('input', ['$event'])\n  onInputChange(event: Event): void {\n    const initalValue = this.el.nativeElement.value;\n    this.el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n    if (initalValue !== this.el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberDirective } from './numbers-only.directive';\n\n@NgModule({\n  declarations: [NumberDirective],\n  exports: [NumberDirective],\n})\nexport class NumbersOnlyModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  DatabaseStatus,\n  DefaultService,\n  MinMax,\n  SpatialSceneNode as RawSpatialSceneNode,\n  SpatialSearch,\n} from '@ccf-openapi/ng-client';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult,\n  Filter,\n  OntologyTreeModel,\n  SpatialEntity,\n  SpatialSceneNode,\n  TissueBlockResult,\n} from 'ccf-database';\nimport { Observable, Subject, combineLatest } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable<Parameters<typeof Cacheable>[0]>;\n\ntype RequestMethod<P, T> = (params: P) => Observable<T>;\ntype DataReviver<T, U> = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  biomarkerTerms?: string[];\n  consortiums?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n// Cache config\nconst buster$ = new Subject<unknown>();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4,\n};\n\n// Utility\nfunction cast<T>(): (data: unknown) => T {\n  return (data) => data as T;\n}\n\nfunction rangeToMinMax(range: [number, number] | undefined, low: number, high: number): MinMax | undefined {\n  return range\n    ? { min: range[0] > low ? range[0] : undefined, max: range[1] < high ? range[1] : undefined }\n    : undefined;\n}\n\nfunction filterToParams(filter?: Filter): FilterParams {\n  return {\n    age: rangeToMinMax(filter?.ageRange, 1, 110),\n    bmi: rangeToMinMax(filter?.bmiRange, 13, 83),\n    sex: filter?.sex?.toLowerCase?.() as FilterParams['sex'],\n    ontologyTerms: filter?.ontologyTerms,\n    cellTypeTerms: filter?.cellTypeTerms,\n    biomarkerTerms: filter?.biomarkerTerms,\n    consortiums: filter?.consortiums,\n    providers: filter?.tmc,\n    technologies: filter?.technologies,\n    spatial: filter?.spatialSearches,\n  };\n}\n\nfunction spatialSceneNodeReviver(nodes: RawSpatialSceneNode[]): SpatialSceneNode[] {\n  return nodes.map((node) => ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? []),\n  }));\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState<ApiEndpointDataSourceOptions>,\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable<DatabaseStatus> {\n    return this.doRequest((params) => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable<string[]> {\n    return this.doRequest((params) => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable<string[]> {\n    return this.doRequest((params) => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable<OntologyTreeModel> {\n    return this.doRequest((params) => this.api.ontologyTreeModel(params), undefined, {}, cast<OntologyTreeModel>());\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable<OntologyTreeModel> {\n    return this.doRequest((params) => this.api.cellTypeTreeModel(params), undefined, {}, cast<OntologyTreeModel>());\n  }\n\n  /**\n   * Get the biomarker type tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getBiomarkerTreeModel(): Observable<OntologyTreeModel> {\n    return this.doRequest((params) => this.api.biomarkerTreeModel(params), undefined, {}, cast<OntologyTreeModel>());\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable<SpatialEntity[]> {\n    return this.doRequest((params) => this.api.referenceOrgans(params), undefined, {}, cast<SpatialEntity[]>());\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable<TissueBlockResult[]> {\n    return this.doRequest((params) => this.api.tissueBlocks(params), filter, {}, cast<TissueBlockResult[]>());\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable<AggregateResult[]> {\n    return this.doRequest((params) => this.api.aggregateResults(params), filter);\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.doRequest((params) => this.api.ontologyTermOccurences(params), filter);\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.doRequest((params) => this.api.cellTypeTermOccurences(params), filter);\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getBiomarkerTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.doRequest((params) => this.api.biomarkerTermOccurences(params), filter);\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable<SpatialSceneNode[]> {\n    return this.doRequest((params) => this.api.scene(params), filter, {}, spatialSceneNodeReviver);\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable<SpatialSceneNode[]> {\n    return this.doRequest(\n      (params) => this.api.referenceOrganScene(params),\n      filter,\n      { organIri },\n      spatialSceneNodeReviver,\n    );\n  }\n\n  private doRequest<T, P>(\n    method: RequestMethod<DefaultParams & FilterParams & P, T>,\n    filter?: Filter | undefined,\n    params?: P,\n  ): Observable<T>;\n  private doRequest<T, P, U>(\n    method: RequestMethod<DefaultParams & FilterParams & P, T>,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver<T, U>,\n  ): Observable<U>;\n  private doRequest<P>(\n    method: RequestMethod<unknown, unknown>,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver<unknown, unknown>,\n  ): Observable<unknown> {\n    const { api, globalConfig } = this;\n    const requestParams: Record<string, unknown> = { ...filterToParams(filter), ...params };\n\n    return combineLatest([globalConfig.getOption('remoteApiEndpoint'), globalConfig.getOption('hubmapToken')]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map((data) => (reviver ? reviver(data) : data)),\n    );\n  }\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { Remote, releaseProxy, wrap } from 'comlink';\nimport { Observable, ObservableInput, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { ApiEndpointDataSourceService } from './api-endpoint.service';\nimport {\n  DataSource,\n  DataSourceDataType,\n  DataSourceLike,\n  DataSourceMethod,\n  DelegateDataSource,\n  ForwardingDataSource,\n} from './data-source';\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote<CCFDatabase>;\n}\n\n@Injectable()\nexport abstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable<DataSourceLike>;\n  readonly database$: Observable<CCFDatabase | Remote<CCFDatabase>>;\n\n  constructor(globalConfig: GlobalConfigState<CCFDatabaseOptions>) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      (source) => source as Observable<CCFDatabaseOptions>,\n      filter((config) => Object.keys(config).length > 0),\n      switchMap((config) =>\n        using(\n          () => this.createDatabase(config),\n          (manager) => this.connectDatabase(manager as CCFDatabaseManager, config),\n        ),\n      ),\n      map((manager) => manager.database),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions): Promise<CCFDatabaseManager> {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined,\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap<CCFDatabase>(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      },\n    };\n  }\n}\n\nconst REMOTE_METHODS: (keyof DataSource)[] = [\n  'getOntologyTreeModel',\n  'getCellTypeTreeModel',\n  'getBiomarkerTreeModel',\n  'getReferenceOrgans',\n];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HybridCCfDatabaseDatasourceService extends ForwardingDataSource {\n  constructor(\n    private readonly remote: ApiEndpointDataSourceService,\n    private readonly local: CCFDatabaseDataSourceService,\n  ) {\n    super();\n  }\n\n  protected forwardCall<K extends keyof DataSource>(\n    method: K,\n    ...args: Parameters<DataSourceMethod<K>>\n  ): Observable<DataSourceDataType<K>> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput<unknown>;\n    type Res = Observable<DataSourceDataType<K>>;\n    const source = this.isRemoteCall(method) ? this.remote : this.local;\n    return (source[method] as AnyFunction)(...args) as Res;\n  }\n\n  private isRemoteCall(method: keyof DataSource): boolean {\n    return REMOTE_METHODS.includes(method);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AggregateResult,\n  DatabaseStatus,\n  Filter,\n  OntologyTreeModel,\n  SpatialEntity,\n  SpatialSceneNode,\n  TissueBlockResult,\n} from 'ccf-database';\nimport { Observable } from 'rxjs';\n\nimport { DataSource } from './data-source';\n\n@Injectable()\nexport abstract class DataSourceService implements DataSource {\n  abstract getDatabaseStatus(): Observable<DatabaseStatus>;\n  abstract getProviderNames(): Observable<string[]>;\n  abstract getDatasetTechnologyNames(): Observable<string[]>;\n  abstract getOntologyTreeModel(): Observable<OntologyTreeModel>;\n  abstract getCellTypeTreeModel(): Observable<OntologyTreeModel>;\n  abstract getBiomarkerTreeModel(): Observable<OntologyTreeModel>;\n  abstract getReferenceOrgans(): Observable<SpatialEntity[]>;\n\n  abstract getTissueBlockResults(filter?: Filter): Observable<TissueBlockResult[]>;\n  abstract getAggregateResults(filter?: Filter): Observable<AggregateResult[]>;\n  abstract getOntologyTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  abstract getCellTypeTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  abstract getBiomarkerTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  abstract getScene(filter?: Filter): Observable<SpatialSceneNode[]>;\n  abstract getReferenceOrganScene(organIri: string, filter?: Filter): Observable<SpatialSceneNode[]>;\n}\n","import {\n  AggregateResult,\n  DatabaseStatus,\n  Filter,\n  OntologyTreeModel,\n  SpatialEntity,\n  SpatialSceneNode,\n  TissueBlockResult,\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable<DatabaseStatus>;\n  getProviderNames(): Observable<string[]>;\n  getDatasetTechnologyNames(): Observable<string[]>;\n  getOntologyTreeModel(): Observable<OntologyTreeModel>;\n  getCellTypeTreeModel(): Observable<OntologyTreeModel>;\n  getBiomarkerTreeModel(): Observable<OntologyTreeModel>;\n  getReferenceOrgans(): Observable<SpatialEntity[]>;\n\n  getTissueBlockResults(filter?: Filter): Observable<TissueBlockResult[]>;\n  getAggregateResults(filter?: Filter): Observable<AggregateResult[]>;\n  getOntologyTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  getCellTypeTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  getBiomarkerTermOccurences(filter?: Filter): Observable<Record<string, number>>;\n  getScene(filter?: Filter): Observable<SpatialSceneNode[]>;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable<SpatialSceneNode[]>;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod<K>;\n};\n\nexport type DataSourceMethod<K extends keyof DataSource> = DataSource[K];\nexport type DataSourceLikeMethod<K extends keyof DataSource> = (\n  ...args: Parameters<DataSourceMethod<K>>\n) => ObservableInput<DataSourceDataType<K>>;\nexport type DataSourceDataType<K extends keyof DataSource> = ObservedValueOf<ReturnType<DataSourceMethod<K>>>;\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable<DatabaseStatus> {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable<string[]> {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable<string[]> {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable<OntologyTreeModel> {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable<OntologyTreeModel> {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getBiomarkerTreeModel(): Observable<OntologyTreeModel> {\n    return this.forwardCall('getBiomarkerTreeModel');\n  }\n\n  getReferenceOrgans(): Observable<SpatialEntity[]> {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable<TissueBlockResult[]> {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable<AggregateResult[]> {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getBiomarkerTermOccurences(filter?: Filter): Observable<Record<string, number>> {\n    return this.forwardCall('getBiomarkerTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable<SpatialSceneNode[]> {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable<SpatialSceneNode[]> {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall<K extends keyof DataSource>(\n    method: K,\n    ...args: Parameters<DataSourceMethod<K>>\n  ): Observable<DataSourceDataType<K>>;\n}\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable<DataSourceLike>;\n\n  protected forwardCall<K extends keyof DataSource>(\n    method: K,\n    ...args: Parameters<DataSourceMethod<K>>\n  ): Observable<DataSourceDataType<K>> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput<unknown>;\n\n    return this.impl$.pipe(switchMap((impl) => (impl[method] as AnyFunction)(...args))) as Observable<\n      DataSourceDataType<K>\n    >;\n  }\n}\n","import { Injectable, Injector, ProviderToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n@Injectable()\nexport abstract class InjectorDelegateDataSourceService<C> extends DelegateDataSource {\n  readonly impl$: Observable<DataSourceLike>;\n\n  constructor(globalConfig: GlobalConfigState<C>, injector: Injector) {\n    super();\n\n    this.impl$ = globalConfig.config$.pipe(\n      (source) => source as Observable<C>,\n      map((config) => this.selectToken(config)),\n      distinctUntilChanged(),\n      map((token) => injector.get(token)),\n      shareReplay(1),\n    );\n  }\n\n  protected abstract selectToken(config: C): ProviderToken<DataSourceLike>;\n}\n","import { Injectable } from '@angular/core';\n\n/** Type of keys allowed in the global object */\nexport type GlobalKey = string | symbol;\n\n/** Type of the global object */\nexport type GlobalThis = typeof globalThis;\n\ndeclare let global: GlobalThis;\n\n/**\n * Provide functionality for interacting with the global object.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GlobalsService {\n  /**\n   * The found global object\n   */\n  get obj(): GlobalThis | undefined {\n    const obj = this.findGlobalObject();\n    // Cache value on the instance\n    Object.defineProperties(this, {\n      obj: {\n        configurable: false,\n        writable: false,\n        value: obj,\n      },\n    });\n\n    return obj;\n  }\n\n  /**\n   * Tests whether the global object has the specific key.\n   * This method returns true even when the associated value\n   * is undefined or null as long as the key exists.\n   *\n   * @param key The key\n   *\n   * @returns true if the key exists in the global object\n   */\n  has(key: GlobalKey): boolean {\n    const { obj } = this;\n    return obj != null && key in obj;\n  }\n\n  /**\n   * Gets a value from the global object.\n   *\n   * @param key The key for the value\n   * @param def An optional default value\n   *\n   * @returns The value if it exists otherwise the default value\n   */\n  get<K extends keyof GlobalThis>(key: K): GlobalThis[K];\n  get<K extends keyof GlobalThis, D>(key: K, def: D): NonNullable<GlobalThis[K]> | D;\n  get<T = unknown>(key: GlobalKey): T | null | undefined;\n  get<T = unknown, D = T>(key: GlobalKey, def: D): T | D;\n\n  get(key: GlobalKey, def?: unknown): unknown {\n    const { obj } = this;\n    return (obj && (obj[key as never] as unknown)) ?? def;\n  }\n\n  /**\n   * Sets a value on the global object.\n   *\n   * @param key The key to set the value on\n   * @param value The new value\n   *\n   * @throws TypeError if the value is readonly\n   */\n  set<K extends keyof GlobalThis>(key: K, value: GlobalThis[K]): void;\n  set<T>(key: GlobalKey, value: T): void;\n\n  set(key: GlobalKey, value: unknown): void {\n    const { obj } = this;\n    if (obj) {\n      obj[key as never] = value as never;\n    }\n  }\n\n  /**\n   * Removes a key from the global object.\n   *\n   * @param key The key to remove\n   *\n   * @throws TypeError if the key is not removable\n   */\n  remove(key: GlobalKey): void {\n    const { obj } = this;\n    if (obj) {\n      delete obj[key as never];\n    }\n  }\n\n  /**\n   * Attempt to locate the global object.\n   * Can be overridden in a subclass to check other locations\n   * or completely change the object. This is especially useful\n   * during testing.\n   *\n   * @returns The global object if found\n   */\n  /* istanbul ignore next This is really hard to test as it depends on the global environment */\n  protected findGlobalObject(): GlobalThis | undefined {\n    // This should pretty much always be available unless\n    // we are running in some outdated environment\n    if (typeof globalThis !== 'undefined') {\n      return globalThis;\n    }\n\n    // Check the common places for a global object\n    if (typeof global !== 'undefined') {\n      // Node.js environment\n      return global;\n    } else if (typeof window !== 'undefined') {\n      // Browser environment\n      return window;\n    } else if (typeof self !== 'undefined') {\n      // Web worker environment\n      return self;\n    }\n\n    try {\n      // One last try - may fail depending on content security policy (CSP) settings\n      // eslint-disable-next-line no-new-func, @typescript-eslint/no-implied-eval\n      return new Function('return this;')() as GlobalThis | undefined;\n    } catch (_ignored) {\n      /* Ignore errors */\n    }\n\n    return undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service to handle local storage\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  static storage = (() => {\n    // Slightly modified from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    let storage: Storage | undefined;\n    try {\n      storage = window.localStorage;\n      const x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n\n      return storage;\n    } catch (error) {\n      const full =\n        error instanceof DOMException &&\n        // everything except Firefox\n        (error.code === 22 ||\n          // Firefox\n          error.code === 1014 ||\n          // test name field too, because code might not be present\n          // everything except Firefox\n          error.name === 'QuotaExceededError' ||\n          // Firefox\n          error.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n        storage &&\n        storage.length !== 0;\n\n      return full ? storage : undefined;\n    }\n  })();\n\n  /**\n   * gets length of storage list\n   */\n  get length(): number {\n    return LocalStorageService.storage?.length ?? 0;\n  }\n\n  /**\n   * Gets value based on key index\n   * @param index\n   * @returns\n   */\n  key(index: number): string | null {\n    return LocalStorageService.storage?.key(index) ?? null;\n  }\n\n  /**\n   * Gets value based on key, also returns default if it fails\n   * @param key\n   * @param defaultValue\n   * @returns the value\n   */\n  getItem<D extends string | null = null>(key: string, defaultValue?: D): string | D {\n    return LocalStorageService.storage?.getItem(key) ?? defaultValue ?? (null as D);\n  }\n\n  /**\n   * sets a key-value pairin local storage\n   * @param key\n   * @param value\n   * @returns true or false based on success/failure\n   */\n  setItem(key: string, value: string): boolean {\n    try {\n      LocalStorageService.storage?.setItem(key, value);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * removes value based on key\n   * @param key\n   */\n  removeItem(key: string): void {\n    LocalStorageService.storage?.removeItem(key);\n  }\n\n  /**\n   * Clears all storage\n   */\n  clear(): void {\n    LocalStorageService.storage?.clear();\n  }\n}\n","export class LearnMore {\n  static readonly type = '[CallToAction] Learn More';\n}\n\nexport class OpenDialog {\n  static readonly type = '[CallToAction] Open Dialog';\n}\n\nexport class CloseDialog {\n  static readonly type = '[CallToAction] Close Dialog';\n}\n","import { Selector } from '@ngxs/store';\n\nimport { CallToActionModel, CallToActionState } from './call-to-action.state';\n\nexport class CallToActionSelectors {\n  @Selector([CallToActionState])\n  static title(state: CallToActionModel): string {\n    return state.title;\n  }\n\n  @Selector([CallToActionState])\n  static message(state: CallToActionModel): string {\n    return state.message;\n  }\n\n  @Selector([CallToActionState])\n  static callToAction(state: CallToActionModel): string {\n    return state.callToAction;\n  }\n\n  @Selector([CallToActionState])\n  static imageUrl(state: CallToActionModel): string {\n    return state.imageUrl;\n  }\n\n  @Selector([CallToActionState])\n  static expirationDate(state: CallToActionModel): string {\n    return state.expirationDate;\n  }\n\n  @Selector([CallToActionState])\n  static popupShown(state: CallToActionModel): boolean {\n    return state.popupShown;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Action, NgxsOnInit, State, StateContext } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { CallToActionBehaviorComponent } from '../../components/call-to-action-behavior/call-to-action-behavior.component';\nimport { DocumentationContent, InfoButtonService } from '../../components/info/info-button/info-button.service';\nimport { InfoDialogComponent } from '../../components/info/info-dialog/info-dialog.component';\nimport { LocalStorageService } from '../../services/local-storage/local-storage.service';\nimport { CloseDialog, LearnMore, OpenDialog } from './call-to-action.actions';\n\n/**\n * Interface to hold the necessary parts of the CTA dialog\n */\nexport interface CallToActionModel {\n  title: string;\n  message: string;\n  callToAction: string;\n  imageUrl: string;\n  expirationDate: string;\n  popupShown: boolean;\n}\n\n/**\n * Key for boolean determining if poup has been shown\n */\nconst POPUP_SHOWN_STORAGE_KEY = 'callToActionPopupShown';\n\n/**\n * Path to readme markup doc\n */\nconst SPATIAL_SEARCH_README = 'assets/docs/SPATIAL_SEARCH_README.md';\n\n/**\n * Sets the necessary defaults for the dialog box\n */\n@State<CallToActionModel>({\n  name: 'callToAction',\n  defaults: {\n    title: 'New to the Exploration User Interface',\n    message: 'Spatial Search has arrived!',\n    callToAction: 'Learn More',\n    imageUrl: 'assets/images/spatial_search.gif',\n    expirationDate: 'Dec 1, 2022',\n    popupShown: false,\n  },\n})\n/**\n * State that controls the data and behavior for the CallToAction Component\n */\n@Injectable()\nexport class CallToActionState implements NgxsOnInit {\n  /**\n   * Function that determines if expiration date has passed\n   * @param expirationDate\n   * @param now\n   * @returns boolean defining whether or not info popup has expiered\n   */\n  static ctaDatePassed(expirationDate: string, now = Date.now): boolean {\n    const today = now();\n    const expire = new Date(expirationDate);\n\n    return +today > +expire;\n  }\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly ga: GoogleAnalyticsService,\n    private readonly storage: LocalStorageService,\n    private readonly infoService: InfoButtonService,\n    private readonly http: HttpClient,\n  ) {}\n\n  ngxsOnInit(ctx: StateContext<CallToActionModel>): void {\n    const { expirationDate, popupShown } = ctx.getState();\n    const popupShownStr = this.storage.getItem(POPUP_SHOWN_STORAGE_KEY, `${popupShown}`);\n    const pastExpiration = CallToActionState.ctaDatePassed(expirationDate);\n    const showPopup = popupShownStr !== 'true' && !pastExpiration;\n    if (showPopup) {\n      ctx.dispatch(new OpenDialog());\n    }\n  }\n\n  /**\n   * Returns observable containting info from the markup\n   */\n  private getDialogData(): Observable<DocumentationContent[]> {\n    return this.http\n      .get(SPATIAL_SEARCH_README, { responseType: 'text' })\n      .pipe(map((data) => this.infoService.parseMarkdown(data)));\n  }\n\n  /**\n   * Opens Learn more dialog\n   */\n  launchLearnMore(content: DocumentationContent[]): void {\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '72rem',\n      data: {\n        title: 'Spatial Search',\n        content: content,\n        videoID: 'UfxMpzatowE',\n      },\n    });\n  }\n\n  /**\n   * Handles click event box\n   * @param _ctx\n   */\n  @Action(LearnMore)\n  learnMore(_ctx: StateContext<CallToActionModel>): Observable<DocumentationContent[]> {\n    this.dialog.closeAll();\n    this.ga.event('open_learn_more', 'call_to_action');\n\n    return this.getDialogData().pipe(tap((data) => this.launchLearnMore(data)));\n  }\n\n  /**\n   * Opens dialog box\n   * @param ctx\n   */\n  @Action(OpenDialog)\n  open(ctx: StateContext<CallToActionModel>): void {\n    this.dialog.open(CallToActionBehaviorComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '30.75rem',\n      height: '36.688rem',\n    });\n\n    this.ga.event('open', 'call_to_action');\n    this.storage.setItem(POPUP_SHOWN_STORAGE_KEY, 'true');\n    ctx.patchState({ popupShown: true });\n  }\n\n  /**\n   * closes all dialog boxes\n   * @param _ctxs;\n   */\n  @Action(CloseDialog)\n  close(_ctx: StateContext<CallToActionModel>): void {\n    this.dialog.closeAll();\n    this.ga.event('close', 'call_to_action');\n  }\n}\n","/*\n * Public API Surface of ccf-shared\n */\n\nexport * from './lib/components/body-ui/body-ui.module';\nexport * from './lib/components/body-ui/body-ui.component';\n\nexport * from './lib/components/decorated-text/decorated-text.module';\nexport * from './lib/components/decorated-text/decorated-text.component';\n\nexport * from './lib/components/store-debug/store-debug.module';\nexport * from './lib/components/store-debug/store-debug.component';\n\nexport * from './lib/components/text-search/text-search.module';\nexport * from './lib/components/text-search/text-search.component';\n\nexport * from './lib/components/organ-selector/organ-selector.module';\nexport * from './lib/components/organ-selector/organ-selector.component';\n\nexport * from './lib/components/opacity-slider/opacity-slider.module';\nexport * from './lib/components/opacity-slider/opacity-slider.component';\n\nexport * from './lib/components/info/info-dialog/info-dialog.module';\nexport * from './lib/components/info/info-dialog/info-dialog.component';\n\nexport * from './lib/components/info/info-button/info-button.module';\nexport * from './lib/components/info/info-button/info-button.component';\nexport * from './lib/components/info/info-button/info-button.service';\n\nexport * from './lib/components/call-to-action/call-to-action.module';\nexport * from './lib/components/call-to-action/call-to-action.component';\n\nexport * from './lib/directives/numbers-only/numbers-only.module';\nexport * from './lib/directives/numbers-only/numbers-only.directive';\n\nexport * from './lib/services/globals/globals.service';\nexport * from './lib/config/global-config.state';\n\nexport * from './lib/analytics/tracking.state';\nexport * from './lib/analytics/mouse-position-tracker.module';\n\nexport * from './lib/components/tracking-popup/tracking-popup.module';\nexport * from './lib/components/tracking-popup/tracking-popup.component';\n\nexport * from './lib/services/data-source/data-source';\nexport * from './lib/services/data-source/data-source.service';\nexport * from './lib/services/data-source/api-endpoint.service';\nexport {\n  CCFDatabaseDataSourceService,\n  HybridCCfDatabaseDatasourceService,\n  WorkerCCFDatabaseDataSourceService,\n} from './lib/services/data-source/ccf-database.service';\nexport * from './lib/services/data-source/injector-delegate.service';\n\nexport * from './lib/components/call-to-action-behavior/call-to-action-behavior.component';\nexport * from './lib/components/call-to-action-behavior/call-to-action-behavior.module';\n\nexport * from './lib/states/call-to-action/call-to-action.state';\nexport * as CallToActionAction from './lib/states/call-to-action/call-to-action.actions';\n\nexport * from './lib/services/local-storage/local-storage.service';\n\nexport * from './lib/components/spatial-search-list/spatial-search-list.component';\nexport * from './lib/components/spatial-search-list/spatial-search-list.module';\n\nexport * from './lib/components/xyz-position/xyz-position.component';\nexport * from './lib/components/xyz-position/xyz-position.module';\n\nexport * from './lib/components/spatial-search-keyboard-ui-behavior/spatial-search-keyboard-ui-behavior.module';\nexport * from './lib/components/spatial-search-keyboard-ui-behavior/spatial-search-keyboard-ui-behavior.component';\n\nexport * from './lib/components/spatial-search-keyboard-ui/spatial-search-keyboard-ui.component';\nexport * from './lib/components/spatial-search-keyboard-ui/spatial-search-keyboard-ui.module';\n","import { SimpleChange, SimpleChanges } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\n\nexport type GenericGlobalConfig = Record<string, unknown>;\n\nexport interface ConfigManagerOptions {\n  initialConfig?: GenericGlobalConfig;\n\n  parse?: Record<string, (value: unknown) => unknown>;\n  rename?: Record<string, string>;\n}\n\nconst DEFAULT_OPTIONS: Required<ConfigManagerOptions> = {\n  initialConfig: {},\n  parse: {},\n  rename: {},\n};\n\nexport class ConfigManager {\n  readonly options: Required<ConfigManagerOptions>;\n\n  private storedChanges: SimpleChanges = {};\n\n  constructor(\n    readonly configState: GlobalConfigState<GenericGlobalConfig>,\n    options: ConfigManagerOptions,\n  ) {\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n  }\n\n  addChanges(changes: SimpleChanges): void {\n    this.storedChanges = { ...this.storedChanges, ...changes };\n  }\n\n  applyChanges(changes?: SimpleChanges, additionalConfig: GenericGlobalConfig = {}): void {\n    if (changes === undefined) {\n      changes = this.storedChanges;\n      this.storedChanges = {};\n    }\n\n    const {\n      configState,\n      options: { initialConfig },\n    } = this;\n    const previousConfig = configState.snapshot;\n    const newConfig = {\n      ...initialConfig,\n      ...previousConfig,\n      ...additionalConfig,\n    };\n\n    for (const [key, change] of Object.entries(changes)) {\n      this.processChange(key, change, newConfig);\n    }\n\n    configState.setConfig(newConfig);\n  }\n\n  private processChange(key: string, change: SimpleChange, output: GenericGlobalConfig): void {\n    const {\n      options: { parse, rename },\n    } = this;\n    const target = rename[key] ?? key;\n    const value = change.currentValue;\n    const parser = parse[key] ?? parse[target];\n\n    if (value == null) {\n      delete output[target];\n    } else if (!parser) {\n      output[target] = value;\n    } else {\n      try {\n        output[target] = parser(value);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(`Failed to parse ${key} = ${value} (${typeof value})`, (error as Error).message);\n      }\n    }\n  }\n}\n","export const BUILTIN_PARSERS = {\n  boolean: (value: unknown): boolean => `${value}` !== 'false',\n  json: (value: unknown): unknown => (typeof value === 'string' ? JSON.parse(value) : value),\n  stringArray: (value: unknown): unknown =>\n    typeof value === 'string' ? Array.from(value).filter((item) => !'[], '.includes(item)) : value,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  function: (value: unknown): Function => {\n    if (typeof value !== 'function') {\n      throw new Error('Expected a javascript function');\n    }\n\n    return value;\n  },\n};\n","import { ChangeDetectorRef, Directive, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { ConfigManager, ConfigManagerOptions, GenericGlobalConfig } from './config-manager';\n\nexport interface BaseWebComponentOptions extends ConfigManagerOptions {\n  initialDelay?: number;\n}\n\n@Directive()\nexport class BaseWebComponent implements OnInit, OnChanges, OnDestroy {\n  initialized = false;\n  configManager = new ConfigManager(this.configState, this.options);\n\n  private _init?: ReturnType<typeof setTimeout>;\n\n  constructor(\n    readonly configState: GlobalConfigState<GenericGlobalConfig>,\n    readonly cdr: ChangeDetectorRef,\n    readonly options: BaseWebComponentOptions = {},\n  ) {}\n\n  ngOnInit(): void {\n    this._init = setTimeout(() => this.initialize(), this.options.initialDelay ?? 0);\n  }\n\n  ngOnDestroy(): void {\n    if (this._init) {\n      clearTimeout(this._init);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.configManager.addChanges(changes);\n    if (this.initialized) {\n      this.configManager.applyChanges();\n    }\n  }\n\n  initialize(): void {\n    this._init = undefined;\n    if (this.initialized) {\n      return;\n    }\n\n    this.configManager.applyChanges();\n    this.initialized = true;\n    this.cdr.markForCheck();\n  }\n}\n","export * from './lib/config-manager';\nexport * from './lib/web-component';\n\nexport * from './lib/parsers';\n","import * as rdf from '@rdfjs/types';\nimport { EventEmitter } from 'events';\nimport { toRDF } from 'jsonld';\nimport { JsonLd, Url } from 'jsonld/jsonld-spec';\nimport { DataFactory, Parser, Quad, Store } from 'n3';\nimport { RdfXmlParser } from 'rdfxml-streaming-parser';\nimport { Readable } from 'readable-stream';\n\n// Temporary solution for using the new readQuads function on Store until the @types are updated\ntype OTerm = rdf.Term | string | null;\ninterface QuadReader {\n  readQuads(subject: OTerm, predicate: OTerm, object: OTerm, graph: OTerm): Generator<Quad>;\n}\n\nexport function readQuads(\n  store: Store,\n  subject: OTerm,\n  predicate: OTerm,\n  object: OTerm,\n  graph: OTerm,\n): Generator<Quad> {\n  return (store as unknown as QuadReader).readQuads(subject, predicate, object, graph);\n}\n\n/**\n * Turns a stream of values into an array.\n *\n * @param readStream The input stream.\n * @returns A promise that resolves to an array of values when the stream completes.\n */\nexport function streamToArray<T = unknown>(readStream: EventEmitter): Promise<T[]> {\n  return new Promise((resolve, reject) => {\n    const chunks: T[] = [];\n    readStream\n      .on('data', (chunk: T) => {\n        chunks.push(chunk);\n      })\n      .once('end', () => {\n        resolve(chunks);\n      })\n      .once('error', (err) => {\n        reject(err);\n      });\n  });\n}\n\n/**\n * Turns an array into a readable stream.\n *\n * @param arr The values.\n * @returns A new readable stream emitting the values from the array.\n */\nexport function arrayToStream<T>(arr: T[]): Readable {\n  const length = arr.length;\n  let i = 0;\n\n  return new Readable({\n    objectMode: true,\n    read(): void {\n      this.push(i < length ? arr[i++] : null);\n    },\n  });\n}\n\n/**\n * Adds data from json ld to the store.\n * Accepts either a json object or a uri to load data from.\n *\n * @param uri A data uri or a json object.\n * @param store The store to add data to.\n * @returns A promise that resolves when the data has been added.\n */\nexport async function addJsonLdToStore(\n  uri: JsonLd | Url,\n  store: rdf.Sink<EventEmitter, EventEmitter>,\n): Promise<rdf.Sink<EventEmitter, EventEmitter>> {\n  let jsonLdData: JsonLd | undefined;\n  if (typeof uri === 'string') {\n    const response = await fetch(uri, { redirect: 'follow' });\n    if (response.ok) {\n      jsonLdData = (await response.json()) as JsonLd;\n    }\n  } else {\n    jsonLdData = uri;\n  }\n\n  if (jsonLdData) {\n    const quads = (await toRDF(jsonLdData)) as unknown[];\n    store.import(arrayToStream(quads) as unknown as EventEmitter);\n  }\n  return store;\n}\n\n/**\n * Adds data from rdf xml to the store.\n * Accepts either a xml-formatted string or a uri to load data from.\n *\n * @param uri A data uri or an xml-formatted string to load data from.\n * @param store The store to add data to\n * @returns A promise that resolves when the data has been added.\n */\nexport async function addRdfXmlToStore(\n  uri: string,\n  store: rdf.Sink<EventEmitter, EventEmitter>,\n): Promise<rdf.Sink<EventEmitter, EventEmitter>> {\n  let xmlData: string | undefined;\n  if (typeof uri === 'string' && uri?.startsWith('http')) {\n    const response = await fetch(uri, { redirect: 'follow' });\n    if (response.ok) {\n      xmlData = await response.text();\n    }\n  } else {\n    xmlData = uri;\n  }\n\n  if (xmlData) {\n    const xmlParser = new RdfXmlParser({ dataFactory: DataFactory });\n    const result = new Promise<rdf.Sink<EventEmitter, EventEmitter>>((resolve) => {\n      xmlParser.once('end', () => resolve(store));\n    });\n\n    store.import(xmlParser);\n    xmlParser.write(xmlData);\n    xmlParser.end();\n    return result;\n  } else {\n    return store;\n  }\n}\n\n/**\n * Adds data from an n3 file to the store.\n * Accepts either a n3-formatted string or a uri to load data from.\n *\n * @param uri A data uri or an n3-formatted string.\n * @param store The store to add data to.\n * @returns A promise that resolves when the data has been added.\n */\nexport async function addN3ToStore(\n  uri: string | Url,\n  store: rdf.Sink<EventEmitter, EventEmitter>,\n): Promise<rdf.Sink<EventEmitter, EventEmitter>> {\n  let data: string | undefined;\n  if (typeof uri === 'string' && uri?.startsWith('http')) {\n    const response = await fetch(uri, { redirect: 'follow' });\n    if (response.ok) {\n      data = await response.text();\n    }\n  } else {\n    data = uri;\n  }\n  if (data) {\n    const quads = new Parser({ format: 'n3' }).parse(data);\n    store.import(arrayToStream(quads) as unknown as EventEmitter);\n  }\n  return store;\n}\n\nexport function serializeN3Store(store: Store): string {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  store.size; // this causes the store to compute the size before we serialize it\n  const storeData = Object.assign({} as Record<string, unknown>, store);\n  delete storeData['_factory'];\n  return JSON.stringify(storeData);\n}\n\nexport function deserializeN3Store(serializedStore: string, factory?: rdf.DataFactory): Store {\n  const storeData = JSON.parse(serializedStore);\n  const store = new Store();\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Object.assign(store, storeData, { _factory: factory ?? DataFactory });\n  return store;\n}\n","/*\n * Public API Surface of triple-store-utils\n */\n\nexport * from 'n3';\nexport * from './lib/triple-store-utils';\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["ChangeDetectorRef","GlobalConfigState","BUILTIN_PARSERS","BaseWebComponent","environment","i0","ɵɵelement","isNumber","value","isNumberArray","Array","isArray","every","isString","isStringArray","checkOptionalProperty","name","obj","prop","validator","Error","parseDataSources","json","parseFilter","sexOptions","checkProp","bind","undefined","val","includes","length","AppWebComponent","constructor","configStore","cdr","initialDelay","initialConfig","dbOptions","globalThis","customization","parse","dataSources","useRemoteApi","boolean","header","loginDisabled","filter","_","ɵɵdirectiveInject","i1","_2","selectors","inputs","baseHref","selectedOrgans","hubmapDataService","hubmapDataUrl","hubmapAssetUrl","hubmapToken","hubmapPortalUrl","remoteApiEndpoint","theme","homeUrl","logoTooltip","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","AppWebComponent_Template","rf","ctx","ɵɵtemplate","AppWebComponent_ccf_root_0_Template","ɵɵproperty","initialized","ElementRef","Injector","MatSnackBar","Dispatch","Select","BodyUiComponent","DataSourceService","TrackingPopupComponent","ConsentService","Observable","ReplaySubject","combineLatest","map","AppRootOverlayContainer","ThemingService","actionAsFn","DataStateSelectors","DataQueryState","DataState","ListResultsState","SceneState","RemoveSearch","SetSelectedSearches","SpatialSearchFilterSelectors","ɵɵclassProp","ɵɵpipeBind1","ctx_r1","header$","tmp_7_0","logoTooltip$","tmp_8_0","homeUrl$","loggedIn","tmp_10_0","loginDisabled$","tmp_11_0","baseHref$","ɵɵelementStart","ɵɵlistener","AppComponent_ccf_ontology_selection_38_Template_ccf_ontology_selection_ontologySelection_0_listener","$event","ɵɵrestoreView","_r4","ɵɵnextContext","ɵɵresetView","ontologySelected","ɵɵelementEnd","isFirefox","ontologyTreeModel$","tmp_9_0","data","ontologyTermsFullData$","ɵɵpureFunction0","_c2","ontologyTermOccurencesData$","AppComponent_ccf_ontology_selection_39_Template_ccf_ontology_selection_ontologySelection_0_listener","_r5","cellTypeTreeModel$","cellTypeTermsFullData$","cellTypeTermOccurencesData$","AppComponent_ccf_ontology_selection_40_Template_ccf_ontology_selection_ontologySelection_0_listener","_r6","biomarkersTreeModel$","biomarkerTermsFullData$","biomarkerTermOccurencesData$","ɵɵtext","AppComponent_div_74_Template_div_click_0_listener","_r9","selector_r10","ɵɵreference","expanded","ɵɵadvance","ɵɵtextInterpolate1","AppComponent_div_75_Template_div_click_0_listener","_r11","organListVisible","AppComponent","isLightTheme","theming","getTheme","endsWith","navigator","userAgent","indexOf","el","injector","scene","listResultsState","consentService","snackbar","overlay","dataSource","globalConfig","setSelectedSearches","removeSpatialSearch","menuOptions","tooltips","ontologySelectionLabel","cellTypeSelectionLabel","biomarkerSelectionLabel","selectionLabel","selectedtoggleOptions","url","acceptableViewerDomains","viewerOpen","spinnerActive$","queryStatus$","pipe","state","Running","loadingMessage$","state$","x","statusMessage","theme$","getOption","themeMode$","filter$","selectedOrgans$","initialize","setRootElement","tissueBlockData$","subscribe","aggregateData$","sceneData$","technologyFilterData$","providerFilterData$","ontologyTerms$","ontologyTerms","cellTypeTerms$","cellTypeTerms","biomarkerTerms$","biomarkerTerms","updateFilter","ref","patchState","referenceOrgans$","refOrgans","selected","setSelectedReferenceOrgansWithDefaults","mode","setTheme","markForCheck","ngOnInit","snackBar","openFromComponent","preClose","dismiss","duration","consent","Infinity","window","matchMedia","matches","next","addEventListener","e","reset","left","right","filterbox","open","closeExpanded","removeBox","resetView","bodyUI","target","rotation","rotationX","bounds","y","z","toggleScheme","ontologySelection","type","selection","id","createSelectionLabel","join","label","selectionString","forEach","index","openiFrameViewer","isWhitelisted","some","domain","startsWith","closeiFrameViewer","token","snapshot","isItemSelected","item","toggleSelection","asMutable","i2","i3","i4","i5","i6","i7","i8","viewQuery","AppComponent_Query","AppComponent_ccf_header_4_Template","AppComponent_Template_ccf_drawer_stateChange_8_listener","_r1","filterbox_r3","AppComponent_Template_ccf_filters_popover_filtersChange_12_listener","AppComponent_Template_ccf_filters_popover_spatialSearchSelected_12_listener","AppComponent_Template_ccf_filters_popover_spatialSearchRemoved_12_listener","AppComponent_Template_ccf_button_toggle_selectionChange_36_listener","AppComponent_ccf_ontology_selection_38_Template","AppComponent_ccf_ontology_selection_39_Template","AppComponent_ccf_ontology_selection_40_Template","AppComponent_div_41_Template","AppComponent_Template_ccf_drawer_stateChange_43_listener","AppComponent_Template_ccf_viewer_closed_45_listener","AppComponent_Template_button_click_48_listener","right_r7","toggleExpanded","AppComponent_Template_button_click_51_listener","AppComponent_Template_mat_icon_click_55_listener","left_r8","AppComponent_Template_ccf_results_browser_listResultSelected_59_listener","selectListResult","AppComponent_Template_ccf_results_browser_listResultDeselected_59_listener","deselectListResult","AppComponent_Template_ccf_results_browser_linkClicked_59_listener","AppComponent_Template_ccf_results_browser_itemHovered_59_listener","highlightNode","AppComponent_Template_ccf_results_browser_itemUnhovered_59_listener","unHighlightNode","AppComponent_Template_ccf_organ_selector_organsChanged_68_listener","setSelectedReferenceOrgans","AppComponent_div_74_Template","AppComponent_div_75_Template","AppComponent_Template_ccf_body_ui_nodeClick_77_listener","sceneNodeClicked","AppComponent_Template_ccf_body_ui_nodeHoverStart_77_listener","sceneNodeHovered","AppComponent_Template_ccf_body_ui_nodeHoverStop_77_listener","sceneNodeUnhover","tmp_5_0","tmp_6_0","_c1","tmp_12_0","selectableSearches$","ɵɵtextInterpolate","tmp_14_0","sex","ɵɵtextInterpolate2","tmp_15_0","ageRange","tmp_16_0","bmiRange","tmp_32_0","listResults$","tmp_33_0","tmp_35_0","highlightedNodeId$","tmp_36_0","tmp_41_0","selectedReferenceOrgans$","scene$","_c3","__decorate","cellTypesTreeModel","anatomicalStructuresTreeModel","biomarkersTreeModel","items","OverlayContainer","createCustomElement","MatIconModule","MatSnackBarModule","MatTooltipModule","BrowserModule","BrowserAnimationsModule","BodyUiModule","InfoButtonModule","OrganSelectorModule","TrackingPopupModule","MatButtonToggleModule","DEFAULT_THEME","CoreModule","FiltersPopoverModule","OntologyExplorationModule","ResultsBrowserModule","ButtonToggleModule","DrawerModule","DualSliderModule","RunSpatialSearchModule","SpinnerOverlayModule","ViewerModule","AppModule","ngDoBootstrap","appElement","customElements","define","ɵɵinject","_3","provide","useValue","useExisting","imports","declarations","HttpClientModule","MousePositionTrackerModule","AnalyticsModule","HeaderModule","DelegateDataSourceService","ThemingModule","StoreModule","core","forRoot","gaToken","googleAnalyticsToken","appName","exports","EventEmitter","ctx_r0","ɵɵsanitizeUrl","HeaderComponent","baseRef","refreshClicked","downloadClicked","document","getElementsByTagName","classList","logo","getElementsByClassName","style","backgroundImage","filters","outputs","HeaderComponent_Template","HeaderComponent_a_4_Template","HeaderComponent_a_5_Template","CommonModule","MatButtonModule","MatToolbarModule","FlatNode","original","expandable","children","create","level","visible","opacity","attached","rootElement","nativeElement","removeChild","_containerElement","display","position","height","appendToRoot","_createContainer","appendChild","t","factory","ɵfac","providedIn","ProviderToken","ApiEndpointDataSourceService","CCFDatabaseDataSourceService","HybridCCfDatabaseDatasourceService","InjectorDelegateDataSourceService","WorkerDataSourceService","selectToken","config","Worker","disableDbWorker","LocationStrategy","WorkerCCFDatabaseDataSourceService","locator","createWorker","_config","getWorkerUrl","directImport","URL","import","meta","externalUrl","prepareExternalUrl","codeBlob","Blob","createObjectURL","at","OntologySearchService","treeModel$","nodes$","Object","values","nodes","rootNode$","root","setTreeModel","treeModel","lookup","toLowerCase","searchValue","searchResults","Map","node","condition","get","set","getIndexOfMatch","displayLabel","formatLabel","match","synonymLabels","find","from","slice","getChildren","APP_BOOTSTRAP_LISTENER","multi","ComponentRef","InjectionToken","Renderer2","component","location","service","defaultTheme","applyThemeClass","resetTheme","element","cls","method","renderer","getContainerElement","methodName","args","DataAction","Payload","StateRepository","NgxsImmutableDataRepository","State","hexRgb","Subject","distinctUntilChanged","DEFAULT_COLOR_PALETTE","color","rank","rgba","format","ColorAssignmentState","forcedUnassignment","forcedUnassignment$","asObservable","colorAssignments$","colorAssignments","colorAssignmentsList$","colorAssignmentsList","getColor","key","assignColor","doReset","colorsAvailable","colorPalette","concat","c","reduce","acc","unassignColor","a","__param","defaults","UpdateFilter","Selector","NgxsDataRepository","Action","defer","delay","rxjsFilter","publishReplay","refCount","repeat","switchMap","take","takeWhile","tap","DEFAULT_FILTER","consortiums","tmc","technologies","spatialSearches","allCompleted","states","Completed","sendCompletedTo","subject","queryData","query","source","databaseReady$","status","_tissueBlockDataQueryStatus$","_aggregateDataQueryStatus$","_ontologyTermOccurencesDataQueryStatus$","_cellTypeTermOccurencesDataQueryStatus$","_biomarkerTermOccurencesDataQueryStatus$","_sceneDataQueryStatus$","_technologyFilterQueryStatus$","_providerFilterQueryStatus$","tissueBlockData","aggregateData","ontologyTermOccurencesData","biomarkerTermOccurencesData","cellTypeTermOccurencesData","sceneData","technologyFilterData","providerFilterData","tissueBlockDataQueryStatus$","aggregateDataQueryStatus$","ontologyTermOccurencesDataQueryStatus$","cellTypeTermOccurencesDataQueryStatus$","biomarkerTermOccurencesDataQueryStatus$","sceneDataQueryStatus$","technologyFilterQueryStatus$","providerFilterQueryStatus$","ngxsOnInit","getOntologyTermOccurences","getCellTypeTermOccurences","getBiomarkerTermOccurences","getOntologyTreeModel","model","updateAnatomicalStructuresTreeModel","getCellTypeTreeModel","updateCellTypesTreeModel","getBiomarkerTreeModel","updateBiomarkersTreeModel","warmUpDatabase","getDatabaseStatus","updateStatus","message","getState","updateFilterHandler","_ctx","getTissueBlockResults","getAggregateResults","getScene","getDatasetTechnologyNames","getProviderNames","DEFAULT_ICONS","namespace","DomSanitizer","IconRegistryState","registry","sanitizer","html","safeDef","bypassSecurityTrustResourceUrl","bypassSecurityTrustHtml","registerIconImpl","registerIcon","definition","getMethodName","getArguments","apply","_error","parts","push","MatIconRegistry","sortBy","dataService","listResults","highlightedNodeId","setListResults","result","tissueBlock","spatialEntityId","dataState","tissueBlocks","colors","topBlocks","otherBlocks","results","ALL_POSSIBLE_ORGANS","DEFAULT_SELECTED_ORGANS","Set","referenceOrgans","referenceOrganEntities","selectedReferenceOrgans","highlightedId$","highlightedId","setReferenceOrgans","setReferenceOrganEntities","setScene","ctrlClick","representation_of","entityId","getReferenceOrgans","organIds","o","organ","has","disabled","numResults","organs","refOrganData","activeOrgans","ccf_annotations","tag","reference_organ","prototype","hasOwnProperty","call","selectedSet","filteredOrgans","selectedAnatomicalStructures","anatomicalStructureSettings","AddSearch","organName","search","SpatialSearchFilterState","searches","selectedSearches","append","removeItem","addSearch","setState","createItem","removeSearch","selectedByIds","oldItems","newItems","createItemId","description","createItemDescription","radius","capitalize","toUpperCase","toFixed","StartSpatialSearchFlow","SetSex","SetOrgan","organId","SetPosition","MoveToNode","ResetPosition","SetRadius","ResetRadius","UpdateSpatialSearch","GenerateSpatialSearch","SetExecuteSearchOnGenerate","execute","getProbingSphereScene","SpatialSearchUiState","SpatialSearchUiSelectors","organEntity","organMatchesSex","hasSex","defaultPosition","radiusSettings","min","max","defaultValue","sphere","collisions","block","organScene","s","sceneBounds","x_dimension","y_dimension","z_dimension","margin","Math","sceneTarget","anatomicalStructures","tree","getTermCounts","cellTypes","counts","entries","count","term","split","Matrix4","Actions","ofActionDispatched","Store","getOriginScene","GoogleAnalyticsService","forkJoin","debounceTime","mergeMap","ReallyUpdateSpatialSearch","store","actions$","ga","dispatch","startSpatialSearchFlow","shortOrgan","event","setSex","organValidForSex","selectSnapshot","setOrgan","SpatialSearchUiState_1","width","depth","round","defaultRadius","globalFilter","getReferenceOrganScene","floor","setPosition","resetPosition","moveToNode","matrix","transformMatrix","getTranslation","n","setRadius","resetRadius","updateSpatialSearch","db","spatialSearchScene","generateSpatialSearch","executeSearchOnGeneration","info","actions","setExecuteSearchOnGenerate","NgxsDataPluginModule","NgxsDispatchPluginModule","NgxsLoggerPluginModule","NgxsModule","CallToActionState","ROOT_STATES","developmentMode","production","selectorOptions","injectContainerState","ɵNgxsRootModule","SimpleChanges","FiltersContentComponent_div_8_Template_ccf_spatial_search_list_selectionChanged_1_listener","updateSearchSelection","FiltersContentComponent_div_8_Template_ccf_spatial_search_list_itemRemoved_1_listener","spatialSearchRemoved","emit","hidden","spatialSearchFilters","FiltersContentComponent","getFilterValue","filtersChange","spatialSearchSelected","applyFilters","ngOnChanges","changes","updateSexFromSelection","applyButtonClick","refreshFilters","JSON","stringify","currentSex","selectedSexes","size","technologyFilters","providerFilters","ɵɵNgOnChangesFeature","FiltersContentComponent_Template","FiltersContentComponent_Template_ccf_dropdown_selectionChange_1_listener","FiltersContentComponent_Template_ccf_dual_slider_selectionChange_2_listener","FiltersContentComponent_Template_ccf_dual_slider_selectionChange_3_listener","FiltersContentComponent_Template_ccf_checkbox_selectionChange_5_listener","FiltersContentComponent_Template_ccf_checkbox_selectionChange_7_listener","FiltersContentComponent_div_8_Template","FiltersContentComponent_Template_button_click_12_listener","FiltersContentComponent_Template_mat_icon_click_15_listener","_c0","SpatialSearchListModule","CheckboxModule","DropdownModule","FiltersContentModule","FiltersPopoverComponent","filtersVisible","popupHeight","toggleFilterVisible","drawerExpanded","FiltersPopoverComponent_Template","FiltersPopoverComponent_Template_button_click_1_listener","FiltersPopoverComponent_div_2_Template","FiltersPopoverComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","FiltersPopoverComponent_Template_ccf_filters_content_applyFilters_6_listener","FiltersPopoverComponent_Template_ccf_filters_content_spatialSearchSelected_6_listener","FiltersPopoverComponent_Template_ccf_filters_content_spatialSearchRemoved_6_listener","notShow_r2","ɵɵstyleProp","OntologySearchModule","OntologySelectionModule","OntologyTreeModule","UntypedFormControl","startWith","option_r2","OntologySearchComponent","ontologyService","formControl","autoCompleteOpen","valueChanges","filteredResults$","sortBySynonymResult","sortLexically","displayFormatter","option","entry","onSelect","placeholderText","OntologySearchComponent_Template","OntologySearchComponent_Template_mat_autocomplete_optionSelected_5_listener","OntologySearchComponent_Template_mat_autocomplete_opened_5_listener","OntologySearchComponent_Template_mat_autocomplete_closed_5_listener","OntologySearchComponent_mat_option_8_Template","autocomplete_r3","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatInputModule","MatFormFieldModule","OntologyTreeComponent","OntologySelectionComponent_ccf_ontology_tree_0_Template_ccf_ontology_tree_nodeSelected_0_listener","OntologySelectionComponent_ccf_ontology_tree_0_Template_ccf_ontology_tree_selectedBiomarkerOptions_0_listener","filterNodes","showtoggle","ɵɵpureFunction1","rootNode","ontologySearchService","occurenceData","termData","ontologyFilter","biomarkerMenuOptions","OntologySelectionComponent","biomarkerLabelMap","ontologyNode","expandAndSelect","parent","selectedTypes","filteredNodes","sort","node1","node2","trim","OntologySelectionComponent_Query","OntologySelectionComponent_Template","OntologySelectionComponent_ccf_ontology_tree_0_Template","FlatTreeControl","MatTreeFlatDataSource","MatTreeFlattener","invoke","property","OntologyTreeComponent_ng_template_1_Template_div_click_0_listener","node_r3","_r2","ctx_r3","select","ctrlKey","isSelected","highlightedNode","getNodeLabel","ɵɵelementContainer","OntologyTreeComponent_mat_tree_node_3_div_11_Template_ccf_button_toggle_selectionChange_1_listener","_r8","OntologyTreeComponent_mat_tree_node_3_Template_mat_tree_node_mouseleave_0_listener","slider1_r6","mouseOut","OntologyTreeComponent_mat_tree_node_3_Template_mat_icon_mouseenter_2_listener","node_r7","$implicit","mouseOver","OntologyTreeComponent_mat_tree_node_3_Template_ccf_opacity_slider_opacityChange_4_listener","updateOpacity","OntologyTreeComponent_mat_tree_node_3_Template_ccf_opacity_slider_opacityReset_4_listener","resetNode","OntologyTreeComponent_mat_tree_node_3_Template_ccf_opacity_slider_visibilityToggle_4_listener","toggleVisibility","OntologyTreeComponent_mat_tree_node_3_ng_container_8_Template","OntologyTreeComponent_mat_tree_node_3_div_11_Template","indent","getLeftIndent","selectableRegion_r9","getCountLabel","OntologyTreeComponent_mat_tree_node_4_div_13_Template_ccf_button_toggle_selectionChange_1_listener","_r13","OntologyTreeComponent_mat_tree_node_4_Template_mat_tree_node_mouseleave_0_listener","_r10","slider2_r11","OntologyTreeComponent_mat_tree_node_4_Template_mat_icon_mouseenter_2_listener","node_r12","OntologyTreeComponent_mat_tree_node_4_Template_ccf_opacity_slider_opacityChange_4_listener","OntologyTreeComponent_mat_tree_node_4_Template_ccf_opacity_slider_opacityReset_4_listener","OntologyTreeComponent_mat_tree_node_4_Template_ccf_opacity_slider_visibilityToggle_4_listener","OntologyTreeComponent_mat_tree_node_4_ng_container_10_Template","OntologyTreeComponent_mat_tree_node_4_div_13_Template","ɵɵattributeInterpolate1","control","isExpanded","labelMap","getLevel","isExpandable","_nodes","fun","_getChildren","_occurenceData","_termData","atScrollBottom","nodeSelected","nodeChanged","selectionChange","selectedBiomarkerOptions","flattener","anySelectionsMade","selectedNodes","dataNodes","expand","currentValue","selectByIDs","ids","collapseAll","selectedNode","findNode","getParent","additive","parents","current","add","parentFlatNodes","flat","flatNode","detectChanges","isInnerNode","_index","splice","onScroll","clientHeight","scrollHeight","scrollTop","diff","OntologyTreeComponent_Template","OntologyTreeComponent_Template_mat_tree_scroll_0_listener","OntologyTreeComponent_ng_template_1_Template","OntologyTreeComponent_mat_tree_node_3_Template","OntologyTreeComponent_mat_tree_node_4_Template","MatTreeModule","OpacitySliderModule","DonorCardComponent_mat_icon_17_Template_mat_icon_click_0_listener","toggleExpansion","sectionCount","sections","ɵɵelementContainerStart","DonorCardComponent_ng_container_18_ng_container_16_Template_ccf_thumbnail_carousel_linkClicked_1_listener","linkHandler","link","datasets","DonorCardComponent_ng_container_18_div_17_ng_container_14_Template_ccf_thumbnail_carousel_linkClicked_1_listener","_r7","section_r6","DonorCardComponent_ng_container_18_div_17_Template_div_click_9_listener","DonorCardComponent_ng_container_18_div_17_ng_container_14_Template","DonorCardComponent_ng_container_18_Template_div_click_10_listener","_r3","DonorCardComponent_ng_container_18_ccf_tissue_section_vis_15_Template","DonorCardComponent_ng_container_18_ng_container_16_Template","DonorCardComponent_ng_container_18_div_17_Template","DonorCardComponent","clsName","highlighted","checked","linkClick","hoverState","handleCheckbox","hostVars","hostBindings","DonorCardComponent_HostBindings","ɵɵclassMap","DonorCardComponent_Template_div_click_1_listener","DonorCardComponent_Template_div_click_12_listener","donor","DonorCardComponent_mat_icon_17_Template","DonorCardComponent_ng_container_18_Template","MatCheckboxModule","ThumbnailCarouselModule","TissueSectionVisModule","DonorCardModule","stat_r1","ResultsBrowserComponent_div_6_Template_div_mouseenter_0_listener","result_r3","handleHover","ResultsBrowserComponent_div_6_Template_div_mouseleave_0_listener","handleUnhover","ResultsBrowserComponent_div_6_Template_ccf_donor_card_checked_1_listener","handleSelection","ResultsBrowserComponent_div_6_Template_ccf_donor_card_linkClick_1_listener","handleLinkClick","tmp_4_0","ResultsBrowserComponent","linkClicked","listResultSelected","listResultDeselected","itemHovered","itemUnhovered","resultLabel","ResultsBrowserComponent_Template","ResultsBrowserComponent_div_4_Template","ResultsBrowserComponent_Template_div_scroll_5_listener","ResultsBrowserComponent_div_6_Template","ScrollingModule","tissueSectionExists","i_r1","TissueSectionVisComponent","sectionNumber","tissueSections","section","TissueSectionVisComponent_HostBindings","TissueSectionVisComponent_div_3_Template","totalTissueSections","ButtonToggleComponent_mat_button_toggle_1_Template_mat_button_toggle_change_0_listener","item_r3","i_r4","enableTooltip","ButtonToggleComponent","selectedItems","ButtonToggleComponent_Template","ButtonToggleComponent_mat_button_toggle_1_Template","CheckboxComponent_div_4_Template_mat_checkbox_change_1_listener","ctx_r2","filterOnChange","CheckboxComponent","columns","options","CheckboxComponent_Template","CheckboxComponent_div_4_Template","QueryList","Subscription","ContentComponent","DrawerComponent","MessageService","ɵɵprojection","throwDuplicateDrawersError","ContainerComponent","content","content1","first","content2","hasWrappedContent","messageService","className","subscriptions","channel","connect","getMessages","msg","handleMessage","ngAfterViewInit","drawers","validateDrawers","sendMessage","ngOnDestroy","unsubscribe","_msg","toArray","startDrawers","drawer","endDrawers","contentQueries","ContainerComponent_ContentQueries","dirIndex","ngContentSelectors","ContainerComponent_Template","ContainerComponent_ccf_drawer_content_2_Template","animate","transition","trigger","animationsEnabled","leftMargin","rightMargin","faded","messages","payload","updateFaded","opened","updateMargin","offset","start","end","startExpanded","endExpanded","ContentComponent_HostBindings","ɵɵsyntheticHostProperty","changeDetection","MESSAGE_SERVICE_CONFIG","MESSAGE_SERVICE_DEFAULT_CONFIG","ToggleButtonComponent","coerceBooleanProperty","EXPAND_COLLAPSE_PARAMS_DEFAULT","params","margin2","InitializationState","deferred","Promise","resolve","wait","_this","_asyncToGenerator","valueOf","classEnd","_position","_opened","toggle","_expanded","expandedStateObj","expandedState2","measuredMargin","measuredWidth","_measuredWidth","bbox","getBoundingClientRect","_measuredMargin","styles","getComputedStyle","getPropertyValue","Number","openedChange","expandedChange","stateChange","openedState","expandedState","setTimeout","close","sendToggle","openExpanded","closeOpenDone","expandCollapseDone","_this2","other","syncExpanded","DrawerComponent_HostBindings","ɵɵsyntheticHostListener","DrawerComponent_animation_openClose_done_HostBindingHandler","DrawerComponent_animation_expandCollapse_done_HostBindingHandler","transform","GenericMessageService","icon","collapse","getMessagesFromSource","ToggleButtonComponent_HostBindings","ToggleButtonComponent_Template_mat_icon_click_0_listener","option_r1","optionsVisible","DropdownComponent","toggleOptions","selectionChanged","DropdownComponent_Template","DropdownComponent_Template_mat_select_selectionChange_4_listener","DropdownComponent_Template_mat_select_openedChange_4_listener","DropdownComponent_mat_option_5_Template","MatSelectModule","Overlay","CdkPortal","DualSliderComponent_div_2_Template_input_keyup_5_listener","onKeyLow","ɵɵtwoWayListener","DualSliderComponent_div_2_Template_ngx_slider_valueChange_6_listener","ɵɵtwoWayBindingSet","lowValue","DualSliderComponent_div_2_Template_ngx_slider_highValueChange_6_listener","highValue","DualSliderComponent_div_2_Template_ngx_slider_userChangeEnd_6_listener","sliderValueChanged","DualSliderComponent_div_2_Template_input_keyup_10_listener","onKeyHigh","ɵɵclassMapInterpolate1","contentsVisible","ɵɵpropertyInterpolate","ɵɵtwoWayProperty","ceil","DualSliderComponent","rangeLabel","isSliderOpen","isSliderInitialized","originX","originY","overlayX","overlayY","positionStrategy","flexibleConnectedTo","withPositions","overlayRef","panelClass","optionsChanged","valueRange","step","hideLimitLabels","hidePointerLabels","dispose","closeSliderPopover","popoverElement","isEventOutside","contains","detach","toggleSliderPopover","initializeSliderPopover","popoverPortal","attach","updatePosition","newValue","String","blur","DualSliderComponent_Query","DualSliderComponent_click_HostBindingHandler","ɵɵresolveDocument","DualSliderComponent_touchstart_HostBindingHandler","DualSliderComponent_div_2_Template","DualSliderComponent_Template_mat_form_field_click_3_listener","NgxSliderModule","OverlayModule","PortalModule","MatDialog","SpatialSearchConfigBehaviorComponent","RunSpatialSearchComponent","dialog","RunSpatialSearchComponent_HostBindings","RunSpatialSearchComponent_Template_button_click_0_listener","SpatialSearchConfigBehaviorModule","MatDialogRef","InfoButtonService","InfoDialogComponent","SpatialSearchUiBehaviorComponent","dialogRef","spatialSearchDialog","infoService","updateSex","updateOrgan","dialogSubs","buttonClicked","launchInfoDialog","autoFocus","title","infoTitle","videoID","onDialogButtonClick","updateData","panelContent$","panelContent","panelData","SpatialSearchConfigBehaviorComponent_Template","SpatialSearchConfigBehaviorComponent_Template_ccf_spatial_search_config_updateSex_0_listener","SpatialSearchConfigBehaviorComponent_Template_ccf_spatial_search_config_updateOrgan_0_listener","SpatialSearchConfigBehaviorComponent_Template_ccf_spatial_search_config_closeDialog_0_listener","SpatialSearchConfigBehaviorComponent_Template_ccf_spatial_search_config_buttonClicked_0_listener","SpatialSearchConfigBehaviorComponent_Template_ccf_spatial_search_config_infoClicked_0_listener","tmp_0_0","sex$","tmp_1_0","organs$","tmp_2_0","selectedOrgan$","MatDialogModule","SpatialSearchConfigModule","SpatialSearchUiBehaviorModule","organ_r1","SpatialSearchConfigComponent","closeDialog","infoClicked","SpatialSearchConfigComponent_HostBindings","SpatialSearchConfigComponent_Template_button_click_4_listener","SpatialSearchConfigComponent_Template_button_click_7_listener","SpatialSearchConfigComponent_Template_mat_radio_group_ngModelChange_13_listener","SpatialSearchConfigComponent_Template_mat_radio_group_change_13_listener","SpatialSearchConfigComponent_div_22_Template","SpatialSearchConfigComponent_Template_mat_select_valueChange_23_listener","selectedOrgan","SpatialSearchConfigComponent_Template_mat_select_selectionChange_23_listener","SpatialSearchConfigComponent_mat_option_24_Template","SpatialSearchConfigComponent_Template_button_click_25_listener","MatRadioModule","SpatialSearchUiBehaviorComponent_ccf_spatial_search_ui_0_Template_ccf_spatial_search_ui_addSpatialSearch_0_listener","addSpatialSearch","SpatialSearchUiBehaviorComponent_ccf_spatial_search_ui_0_Template_ccf_spatial_search_ui_radiusChange_0_listener","updateRadius","SpatialSearchUiBehaviorComponent_ccf_spatial_search_ui_0_Template_ccf_spatial_search_ui_resetPosition_0_listener","SpatialSearchUiBehaviorComponent_ccf_spatial_search_ui_0_Template_ccf_spatial_search_ui_resetSphere_0_listener","SpatialSearchUiBehaviorComponent_ccf_spatial_search_ui_0_Template_ccf_spatial_search_ui_positionChange_0_listener","SpatialSearchUiBehaviorComponent_ccf_spatial_search_ui_0_Template_ccf_spatial_search_ui_closeSpatialSearch_0_listener","SpatialSearchUiBehaviorComponent_ccf_spatial_search_ui_0_Template_ccf_spatial_search_ui_editReferenceOrganClicked_0_listener","openSpatialSearchConfig","SpatialSearchUiBehaviorComponent_ccf_spatial_search_ui_0_Template_ccf_spatial_search_ui_infoClicked_0_listener","SpatialSearchUiBehaviorComponent_ccf_spatial_search_ui_0_Template_ccf_spatial_search_ui_nodeClicked_0_listener","organ_r3","radius$","radiusSettings$","defaultPosition$","position$","sceneBounds$","sceneTarget$","tissueBlocks$","anatomicalStructures$","tmp_13_0","cellTypes$","SpatialSearchUiBehaviorComponent_Template","SpatialSearchUiBehaviorComponent_ccf_spatial_search_ui_0_Template","organ$","SpatialSearchUiModule","SpatialSearchUiComponent","resetSphere","closeSpatialSearch","radiusChange","positionChange","editReferenceOrganClicked","nodeClicked","SpatialSearchUiComponent_HostBindings","SpatialSearchUiComponent_Template_button_click_3_listener","SpatialSearchUiComponent_Template_button_click_6_listener","SpatialSearchUiComponent_Template_div_click_22_listener","SpatialSearchUiComponent_Template_input_input_30_listener","slider_r2","SpatialSearchUiComponent_Template_button_click_35_listener","SpatialSearchUiComponent_Template_button_click_37_listener","primary_r3","minimap_r4","SpatialSearchUiComponent_Template_button_click_44_listener","SpatialSearchUiComponent_Template_ccf_body_ui_nodeClick_50_listener","SpatialSearchUiComponent_Template_ccf_body_ui_rotationChange_50_listener","SpatialSearchUiComponent_Template_ccf_body_ui_nodeClick_53_listener","SpatialSearchUiComponent_Template_ccf_spatial_search_keyboard_ui_behavior_changePosition_55_listener","charAt","referenceOrgan","MatDividerModule","MatSliderModule","SpatialSearchKeyboardUIBehaviorModule","XYZPositionModule","TermOccurrenceListModule","TissueBlockListModule","SpinnerOverlayComponent","active","SpinnerOverlayComponent_HostBindings","text","MatProgressSpinnerModule","term_r1","TermOccurrenceListComponent","termList","TermOccurrenceListComponent_HostBindings","TermOccurrenceListComponent_div_7_Template","toolTipText","ThumbnailCarouselComponent_ng_container_5_ng_template_1_Template_a_click_3_listener","item_r2","thumbnailUrl","technology","ThumbnailCarouselComponent_ng_container_5_ng_template_1_Template","nextUid","counter","ThumbnailCarouselComponent","prevButtonId","uid","nextButtonId","allowTouchMove","slidesOffsetBefore","slidesOffsetAfter","slidesPerView","spaceBetween","watchOverflow","navigation","prevEl","nextEl","setUrl","itemId","thumbnail","ThumbnailCarouselComponent_HostBindings","ThumbnailCarouselComponent_ng_container_5_Template","SwiperModule","Navigation","Swiper","use","tissueBlock_r1","TissueBlockListComponent","TissueBlockListComponent_HostBindings","TissueBlockListComponent_div_7_Template","ViewerComponent_iframe_10_Template_iframe_load_0_listener","loading","ViewerComponent","closed","safeUrl","updateUrl","ViewerComponent_HostBindings","ViewerComponent_Template_button_click_6_listener","ViewerComponent_div_9_Template","ViewerComponent_iframe_10_Template","mergeAll","isolated","MessageChannel","nextMessageId","getMessagesFromSources","sources","complete","ccfOwlUrl","ccfContextUrl","localStorage","getItem","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","console","error","CompositeLayer","COORDINATE_SYSTEM","TextLayer","ScenegraphLayer","SimpleMeshLayer","ConeGeometry","CubeGeometry","CylinderGeometry","SphereGeometry","loadGLTF","loadGLTF2","registerGLTFLoaders","doCollisions","meshLayer","mesh","pickable","autoHighlight","highlightColor","coordinateSystem","CARTESIAN","wireframe","d","getTransformMatrix","textLayer","getText","getPosition","BodyUILayer","layerName","gltfCache","initializeState","props","zoomOpacity","renderLayers","geometries","cone","cylinder","cube","scenegraph","geometry","url2gltf","m","scenegraphNode","layers","zoomBasedOpacity","unpickable","_lighting","parameters","depthMask","l","getPickingInfo","AmbientLight","Deck","LightingEffect","OrbitView","OrthographicView","BehaviorSubject","share","processSceneNodes","BodyUI","deckProps","bodyUILayer","nodeClickSubject","nodeHoverStartSubject","nodeHoverStopSubject","sceneRotationSubject","nodeDragStartSubject","nodeDragSubject","nodeDragEndSubject","nodeClick$","nodeHoverStart$","nodeHoverStop$","sceneRotation$","nodeDragStart$","nodeDrag$","nodeDragEnd$","views","camera","flipY","near","orbitAxis","controller","interactive","onHover","_onHover","onClick","_onClick","onViewStateChange","_onViewStateChange","onDragStart","_onDragStart","onDrag","_onDrag","onDragEnd","_onDragEnd","getCursor","cursor","isDragging","legacyLighting","effects","ambientLight","intensity","deck","setProps","viewState","minRotationX","maxRotationX","rotationOrbit","zoom","r","finalize","didZoom","zoomToOnLoad","zoomTo","debugSceneNodeProcessing","gltfUrl","gltfTransform","then","log","setRotation","setRotationX","setZoom","setTarget","setInteractive","lastHovered","picked","object","srcEvent","interactionState","isZooming","currentState","_dragEvent","MouseEvent","registerLoaders","DracoLoader","DracoWorkerLoader","GLTFLoader","traverseScene","deriveScenegraph","scenegraphNodeName","gltf","foundNodeInScene","scenes","IDENTITY","child","modelMatrix","translation","scale","_x","_x2","_loadGLTF","arguments","cache","gltfPromise","fetch","blob","decompressMeshes","postProcess","_x3","_x4","_loadGLTF2","AABB","Vec3","childNames","names","_processSceneNodes","worldMatrix","gltfNodes","processedNode","tooltip","primitives","primitive","attributes","POSITION","lowerBound","transformAsPoint","upperBound","i","clone","extend","lb","ub","vsub","halfSize","vmul","center","vadd","translate","visitor","copy","identity","rotationMatrix","fromQuaternion","multiplyRight","simplifyScene","_simplifyScene","gltfUrls","newNodes","innerBbox","newNode","load","_doCollisions","sourceBoxes","mat","targetBoxes","decompress","gltfScene","report","sad","src","hits","overlaps","maxHits","csvReport","hit","h","idb","hash","addJsonLdToStore","addN3ToStore","addRdfXmlToStore","DataFactory","deserializeN3Store","serializeN3Store","CCFSpatialGraph","CCFSpatialScene","findIds","getAnatomicalStructureTreeModel","getSpatialEntityForEntity","getTissueBlockResult","CCFDatabaseStatusTracker","getBmLocatedInAs","enrichRuiLocations","patchJsonLd","searchXConsortia","delMany","setMany","DEFAULT_CCF_DB_OPTIONS","hubmapAssetsUrl","CCFDatabase","graph","cached","initializing","cachedConnect","doConnect","Date","getTime","optionsHash","encoding","ignoreUnknown","respectType","unorderedArrays","unorderedObjects","unorderedSets","lastModifiedKey","ccfDatabaseKey","lastModified","serializedDb","deserialize","serialize","_this3","ops","storeString","hubmapQuery","jsonld","addDataSources","all","synchronize","inputStore","_this4","_ref","sourceUrl","_this5","createGraph","_this6","getIds","getQuads","namedNode","getSpatialEntities","hasSpatialEntity","_this7","toJson","_this8","_this9","_this10","_this11","_this12","_this13","_this14","_this15","_this16","_this17","_this18","_this19","organIri","_this20","getSpatialPlacement","targetIri","_this21","Euler","toDegrees","toRadians","DirectedGraph","bidirectional","readQuads","v4","uuidV4","ccf","rdf","applySpatialPlacement","tx","placement","p","factor","translation_units","T","x_translation","y_translation","z_translation","R","x_rotation","y_rotation","z_rotation","S","x_scaling","y_scaling","z_scaling","rotateXYZ","forSubjects","addNode","SpatialObjectReference","SpatialEntity","edgeSource","quad","spatialPlacement","addEdge","mergeNode","mergeDirectedEdge","getTransformationMatrix","sourceIRI","targetIRI","hasNode","path","reverse","placementId","getEdgeAttribute","sourceIri","euler","fromRotationMatrix","XYZ","toVector3","getScale","placement_date","toISOString","scaling_units","rotation_order","rotation_units","getAnatomicalStructures","getExtractionSet","getExtractionSets","getSpatialEntity","iri","getReferenceBody","bodyId","spatial","Male","Female","BothSexes","getReferenceOrganSets","organSet","debug","structures","getReferenceSceneNodes","body","skinNodes","isSkin","sceneNode","getSceneNode","base","hasSexFilter","organNode","entity","getEntitySceneNodes","nodeAttrs","has3dObject","file_format","sourceID","rotateX","multiplyLeft","dimension_units","dim","file","file_subpath","getObjects","predicate","objects","donors","centers","providerUUID","spatialEntity","tissueDatasets","Donors","providerName","isFinite","fromRdf","rui","filterByProbingSphere","filterWithDonor","seen","callback","donor2entity","newDonors","newSeen","filterWithSpatialEntity","spatial2entity","entities","newSpatialEntities","filterWithDataset","dataset2entity","sectionAndBlockSeen","newDatasets","getAllEntities","filterByHasSpatialEntity","filterBySex","filterByConsortiumName","filterByGroupName","filterByTechnology","filterBySpatialSearches","terms","filterByOntologyTerms","cell","filterByCellTypeTerms","filterByBiomarkerTerms","maxAge","minAge","filterByAge","maxBMI","minBMI","filterByBMI","differenceCallback","consortium","literal","consortiumName","groupNames","groupName","asTerms","forObjects","asTerm","asctb","located_in","bm_located_in","age","bmi","notNewSeen","thisSeen","getSpatialEntityMapping","subjects","getAnatomicalStructureMapping","term2entity","keys","termEntities","term2entities","asTerm2entities","bmTerm2entities","biomarker","ctTerm2entities","cellType","memoize","getEntries","rdfs","getOntologyTreeNode","relationshipIri","ontologyTreeNodeResult","getSubjects","rootIri","rootLabel","rootChildren","b","localeCompare","treeify","nodeIri","childId","getAnatomicalStructureTreeModelSlowly","part_of","ct_is_a","formBiomarkerNode","bmType","biomarkers","bm","getMappedResult","reverseMapping","mapping","newMapping","mappings","spatialObjectReference","getSpatialObjectReference","extractionSites","extraction_set","extraction_set_for","entityIRI","spatialEntityNodes","OrientedBoundingBox","spatialEntityDimensions","getSpatialEntityDimensions","dims","getOrientedBoundingBox","quaternion","toQuaternion","normalize","calculateW","fromCenterHalfSizeQuaternion","radiusSquared","boundingBox","distanceSquared","distanceSquaredTo","listResultSet","donorResultSet","datasetResultSet","tissueSectionResultSet","sampleType","tissueBlockResultSet","sectionSize","sectionUnits","getDonorResult","getDatasetResult","getTissueSectionResult","dataset","database","checkback","loadTime","timestamp","startTime","now","loaded","finally","SPARQL_ENDPOINT","_getBmLocatedInAs","encodeURIComponent","headers","refOrganMap","annotations","ruiLocation","addQuad","termType","gray","red","green","blue","includeLetters","centered","sceneWidth","sceneHeight","sceneDepth","originRadius","lineRadius","globalTranslation","rotateZ","basePurlUrl","CCF_CONTEXT","dcterms","consortium_name","provider_name","provider_uuid","samples","sample_type","section_count","section_size","section_units","section_number","rui_location","organ_owner_sex","side","rui_rank","slice_thickness","slice_count","creation_date","updated_date","creator","creator_first_name","creator_last_name","ontology_terms","jsonLdString","context","replace","Util","PREFIXES","fma","obo","uberon","cl","lmha","dc","prefixer","prefixes","comment","isDefinedBy","seeAlso","ccfx","TissueBlock","TissueSection","NonStandard","characterizes","FemaleOrgans","MaleOrgans","SpatialPlacement","extractionSet","creator_middle_name","creator_orcid","w_rotation","respiratory_system","colon","left_lung","right_lung","left_bronchus","right_bronchus","kidney","ureter","eye","fallopian_tube","knee","ovary","trachea","aorta","blood","bone_marrow","male_reproductive_system","lymph_node","blood_vasculature","brain","eye_left","eye_right","fallopian_tube_left","fallopian_tube_right","heart","kidney_left","kidney_right","knee_left","knee_right","large_intestine","liver","lungs","mesenteric_lymph_node","ovary_left","ovary_right","pancreas","pelvis","prostate_gland","skin","small_intestine","spleen","thymus","ureter_left","ureter_right","urinary_bladder","uterus","gold","defaultSphereRadius","sphereLineRadius","sphereLineLength","sphereConeRadius","getTissueBlockScene","rx","ry","rz","sx","sy","sz","xConsortiaResponseAsJsonLd","PER_API_SEARCH_REQUEST_COUNT","INCLUDED_DATA_FIELDS","DEFAULT_API_SEARCH_QUERY","exists","field","getApiSearchHeaders","Headers","getApiSearchBody","bodyObj","version","stored_fields","script_fields","docvalue_fields","_source","doSearchRequest","_doSearchRequest","init","res","validResponse","ok","doApiSearch","_x5","_doApiSearch","perReqCount","firstResult","totalCount","total","requests","_x6","_x7","_x8","_x9","_searchXConsortia","dataUrl","serviceType","serviceToken","_assetsApi","_portalUrl","hubmapData","warn","omit","toNumber","HUBMAP","idPrefix","portal","portalParams","donorName","assets","SENNET","DR1_VU_THUMBS","UFL_THUMBS","GROUP_UUID_MAPPING","ENTITY_CONTEXT","donorLookup","unflattened","HuBMAPTissueBlock","toJsonLd","donorId","debugDonors","deleted","blockId","j","bad","entityType","descendants","getDonor","getRuiLocation","dateEntered","toLocaleDateString","sectionLookup","descendant","getSection","sectionId","getDataset","loc","sSize","parseFloat","sUnits","types","typesSearch","getDatasetThumbnail","thumbnailFile","tiffs","f","test","rel_path","thumb","donorDescription","ageMatch","race","metadata","md","getTissueBlock","APP_INITIALIZER","ModuleWithProviders","NgxGoogleAnalyticsModule","GoogleAnalyticsSyncService","LocalStorageSyncService","EAGERLY_LOADED_SERVICES","toAttributes","attrs","initCommands","projectName","command","providers","ngModule","useFactory","deps","consentChange","setConsent","unsetConsent","NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN","NGX_WINDOW","trackingCode","toggleGoogleAnalytics","LOCAL_STORAGE_CONSENT_KEY","storage","loadConsent","saveConsent","rawValue","setItem","filterNulls","flatten","array","innerMap","project","outerIndex","pluck","shareReplay","DEFAULT_OPTIONS","pluckUnique","last","opts","compare","DOCUMENT","fromEvent","throttleTime","trackMousePosition","formatData","clientWidth","clientX","clientY","points","events","LOCAL_STORAGE_ALLOW_TELEMETRY_KEY","INITIAL_TELEMETRY_SETTING","getTelemetryStorageSetting","TrackingState","setAllowTelemetry","allowTelemetry","oldValue","toString","reload","rotationChange","nodeDrag","nodeClick","nodeHoverStart","nodeHoverStop","_interactive","_rotation","_rotationX","_zoom","_target","_scene","_bounds","zoomToBounds","_camera","recreateBodyUI","setupBodyUI","bodyCanvas","pxRatio","devicePixelRatio","log2","canvas","evt","preventDefault","clearSubscriptions","BodyUiComponent_Query","CloseDialog","LearnMore","CallToActionSelectors","CallToActionBehaviorComponent","learnMore","CallToActionBehaviorComponent_Template","CallToActionBehaviorComponent_Template_ccf_call_to_action_callToActionClicked_0_listener","CallToActionBehaviorComponent_Template_ccf_call_to_action_closeClicked_0_listener","title$","message$","callToAction$","tmp_3_0","imageUrl$","callToAction","imageUrl","MatCardModule","CallToActionModule","CallToActionBehaviorModule","CallToActionComponent","callToActionClicked","closeClicked","CallToActionComponent_HostBindings","CallToActionComponent_Template_mat_icon_click_6_listener","CallToActionComponent_Template_a_click_12_listener","resolveIndex","range","classes","ɵɵstyleMap","segment_r1","DecoratedTextComponent","segments","createSegments","makeUndecoratedSegment","decorations","getNormalizedDecorations","stackOps","createStackOps","stack","lastIndex","updateStack","shift","op","makeDecoratedSegment","ranges","getOp","added","removed","DecoratedTextComponent_HostBindings","DecoratedTextComponent_span_0_Template","DecoratedTextModule","InfoButtonComponent","infoButtonService","openDialogs","documentationUrl","InfoButtonComponent_Template","InfoButtonComponent_Template_mat_icon_click_1_listener","InfoDialogModule","HttpClient","http","responseType","parseMarkdown","markdownContent","splitByHeaderTag","newLine","headerAndContent","MAT_DIALOG_DATA","InfoDialogComponent_div_10_mat_expansion_panel_1_div_6_Template","content_r3","InfoDialogComponent_div_10_mat_expansion_panel_1_Template","documentationContents","createElement","InfoDialogComponent_Template","InfoDialogComponent_Template_mat_icon_click_7_listener","InfoDialogComponent_div_10_Template","MatExpansionModule","YouTubePlayerModule","MarkdownModule","OpacitySliderComponent","opacityChange","visibilityToggle","opacityReset","sliderChanged","prevOpacity","temp","resetOpacity","OpacitySliderComponent_HostBindings","OpacitySliderComponent_Template_input_input_3_listener","OpacitySliderComponent_Template_mat_icon_click_8_listener","OpacitySliderComponent_Template_mat_icon_click_9_listener","OpacitySliderComponent_Template_mat_icon_click_10_listener","MatRippleModule","ResizeSensor","OrganSelectorComponent_mat_icon_2_Template_mat_icon_touchstart_0_listener","scroll","OrganSelectorComponent_mat_icon_2_Template_mat_icon_touchend_0_listener","stopScroll","OrganSelectorComponent_mat_icon_2_Template_mat_icon_click_0_listener","OrganSelectorComponent_mat_icon_2_Template_mat_icon_mousedown_0_listener","OrganSelectorComponent_mat_icon_2_Template_mat_icon_mouseup_0_listener","onLeft","organ_r4","OrganSelectorComponent_div_7_Template_div_click_0_listener","selectOrgan","OrganSelectorComponent_div_7_div_5_Template","OrganSelectorComponent_mat_icon_8_Template_mat_icon_touchstart_0_listener","OrganSelectorComponent_mat_icon_8_Template_mat_icon_touchend_0_listener","OrganSelectorComponent_mat_icon_8_Template_mat_icon_click_0_listener","OrganSelectorComponent_mat_icon_8_Template_mat_icon_mousedown_0_listener","OrganSelectorComponent_mat_icon_8_Template_mat_icon_mouseup_0_listener","onRight","ALL_ORGANS","OrganSelectorComponent","multiselect","displayErrors","organList","organsChanged","carouselContainer","sensor","dir","itemList","parseInt","setLeftRight","timeoutHandler","setInterval","clearInterval","itemContainer","offsetWidth","listLength","setWidth","OrganSelectorComponent_Query","OrganSelectorComponent_mat_icon_2_Template","OrganSelectorComponent_div_7_Template","OrganSelectorComponent_mat_icon_8_Template","SpatialSearchKeyboardUIBehaviorComponent","delta","shiftDelta","disablePositionChange","changePosition","shiftPressed","currentDelta","currentKey","handleKey","keyUp","keyClick","keyHover","SpatialSearchKeyboardUIBehaviorComponent_HostBindings","SpatialSearchKeyboardUIBehaviorComponent_keydown_HostBindingHandler","SpatialSearchKeyboardUIBehaviorComponent_keyup_HostBindingHandler","SpatialSearchKeyboardUIBehaviorComponent_Template_ccf_spatial_search_keyboard_ui_keyClicked_0_listener","SpatialSearchKeyboardUIBehaviorComponent_Template_ccf_spatial_search_keyboard_ui_keyHovered_0_listener","SpatialSearchKeyboardUIModule","key_r1","direction","SpatialSearchKeyboardUIComponent","keyClicked","keyHovered","keyMap","SpatialSearchKeyboardUIComponent_HostBindings","SpatialSearchKeyboardUIComponent_mat_icon_1_Template","SpatialSearchKeyboardUIComponent_Template_div_mousedown_4_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_4_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_4_listener","SpatialSearchKeyboardUIComponent_Template_div_mousedown_6_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_6_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_6_listener","SpatialSearchKeyboardUIComponent_Template_div_mousedown_8_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_8_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_8_listener","SpatialSearchKeyboardUIComponent_Template_div_mousedown_11_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_11_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_11_listener","SpatialSearchKeyboardUIComponent_Template_div_mousedown_13_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_13_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_13_listener","SpatialSearchKeyboardUIComponent_Template_div_mousedown_15_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseover_15_listener","SpatialSearchKeyboardUIComponent_Template_div_mouseout_15_listener","SpatialSearchKeyboardUIComponent_div_17_Template","SpatialSearchListComponent_mat_list_item_2_Template_mat_checkbox_change_2_listener","idx_r3","updateItemSelection","SpatialSearchListComponent_mat_list_item_2_Template_button_click_5_listener","item_r4","SpatialSearchListComponent","itemRemoved","SpatialSearchListComponent_HostBindings","SpatialSearchListComponent_div_0_Template","SpatialSearchListComponent_mat_list_item_2_Template","MatListModule","kv_r1","StoreDebugComponent_div_0_li_4_Template","state_r2","StoreDebugComponent","stateValues","_key","sub","StoreDebugComponent_HostBindings","StoreDebugComponent_div_0_Template","StoreDebugModule","Bind","lastValueFrom","DEFAULT_MAX_OPTIONS","TextSearchComponent","setValue","emitEvent","defaultMaxOptions","placeholder","optionSelected","getOptions","valueChange","autoCompleter","maxOptions","optionDisplay","optionId","TextSearchComponent_HostBindings","TextSearchComponent_Template_mat_autocomplete_optionSelected_5_listener","TextSearchComponent_mat_option_7_Template","auto_r3","MatPrefix","MatSuffix","TextSearchModule","MAT_SNACK_BAR_DATA","TrackingPopupComponent_button_2_Template_button_click_0_listener","submit","TrackingPopupComponent_button_3_Template_button_click_0_listener","elementRef","container","showButton","button","TrackingPopupComponent_HostBindings","TrackingPopupComponent_button_2_Template","TrackingPopupComponent_button_3_Template","XYZPositionComponent","XYZPositionComponent_HostBindings","ɵɵpipeBind2","Computed","of","optionCache","config$","setConfig","patchConfig","getProperty","getPathKey","obs","NumberDirective","onInputChange","initalValue","stopPropagation","NumberDirective_HostBindings","NumberDirective_input_HostBindingHandler","NumbersOnlyModule","DefaultService","Cacheable","buster$","CACHE_CONFIG_NO_PARAMS","cacheBusterObserver","CACHE_CONFIG_PARAMS","maxCacheCount","cast","rangeToMinMax","low","high","filterToParams","spatialSceneNodeReviver","api","doRequest","dbStatus","providerNames","technologyNames","ontologyTreeModel","cellTypeTreeModel","biomarkerTreeModel","aggregateResults","ontologyTermOccurences","cellTypeTermOccurences","biomarkerTermOccurences","referenceOrganScene","reviver","requestParams","endpoint","configuration","basePath","isDevMode","releaseProxy","wrap","using","DelegateDataSource","ForwardingDataSource","CCFDatabaseDataSourceBaseService","impl$","database$","createDatabase","manager","connectDatabase","cacheResults","worker","terminate","REMOTE_METHODS","remote","local","forwardCall","isRemoteCall","impl","GlobalsService","findGlobalObject","defineProperties","configurable","writable","def","remove","global","self","Function","_ignored","LocalStorageService","full","DOMException","code","clear","OpenDialog","expirationDate","popupShown","StateContext","POPUP_SHOWN_STORAGE_KEY","SPATIAL_SEARCH_README","ctaDatePassed","today","expire","popupShownStr","pastExpiration","CallToActionState_1","showPopup","getDialogData","launchLearnMore","closeAll","CallToActionAction","rename","ConfigManager","configState","storedChanges","addChanges","applyChanges","additionalConfig","previousConfig","newConfig","change","processChange","output","parser","stringArray","function","configManager","_init","clearTimeout","toRDF","Parser","RdfXmlParser","Readable","streamToArray","readStream","reject","chunks","on","chunk","once","arrayToStream","arr","objectMode","read","_addJsonLdToStore","uri","jsonLdData","response","redirect","quads","_addRdfXmlToStore","xmlData","xmlParser","dataFactory","write","_addN3ToStore","storeData","assign","serializedStore","_factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[223,224,225,226]}